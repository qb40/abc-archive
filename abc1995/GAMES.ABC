Microsoft Inc.                 QBLOCKS                        QBLOCKS,TETRIS,MICROSOFT       Unknown Date (00:00:00)QB, QBasic             1178 53992    QBLOCKS.BAS '                                QBLOCKS.BAS„'„' Press Page Down for information on running and modifying QBlocks.„'„' To run this game, press Shift+F5.„'„' To exit this program, press ALT, F, X.„'„' To get help on a BASIC keyword, move the cursor to the keyword and press„' F1 or click the right mouse button.„'„'                             Suggested Changes„'                             -----------------„'„' There are many ways that you can modify this BASIC game.  The CONST„' statements below these comments and the DATA statements at the end„' of this screen can be modified to change the following:„'„'    Block shapes„'    Block rotation„'    Number of different block shapes„'    Score needed to advance to next level„'    Width of the game well„'    Height of the game well„'    Songs played during game„'„' On the right side of each CONST statement, there is a comment that tells„' you what it does and how big or small you can set the value.  Above the„' DATA statements, there are comments that tell you the format of the„' information stored there.„'„' On your own, you can also add exciting sound and visual effects or make any„' other changes that your imagination can dream up.  By reading the„' Learn BASIC Now book, you'll learn the techniques that will enable you„' to fully customize this game and to create games of your own.„'„' If the game won't run after you have changed it, you can exit without„' saving your changes by pressing Alt, F, X and choosing NO.„'„' If you do want to save your changes, press Alt, F, A and enter a filename„' for saving your version of the program.  Before you save your changes,„' however, you should make sure they work by running the program and„' verifying that your changes produce the desired results.  Also, always„' be sure to keep a backup of the original program.„'„DEFINT A-Z„„' Here are the BASIC CONST statements you can change.  The comments tell„' you the range that each CONST value can be changed, or any limitations.„CONST WELLWIDTH = 10        ' Width of playing field (well).   Range 5 to 13.„CONST WELLHEIGHT = 21       ' Height of playing field.  Range 4 to 21.„CONST NUMSTYLES = 7         ' Number of unique shapes.  Range 1 to 20.  Make sure you read the notes above the DATA statements at the end of the main program before you change this number!„CONST WINGAME = 1000000     ' Points required to win the game.  Range 200 to 9000000.„CONST NEXTLEVEL = 300       ' Helps determine when the game advances to the next level.  (Each cleared level gives player 100 points) Range 100 to 2000.„CONST BASESCORE = 1000      ' Number of points needed to advance to first level.„CONST ROTATEDIR = 1         ' Control rotation of blocks. Can be 1 for clockwise, or 3 for counterclockwise.„' The following sound constants are used by the PLAY command to„' produce music during the game.  To change the sounds you hear, change„' these constants.  Refer to the online help for PLAY for the correct format.„' To completely remove sound from the game set the constants equal to null.„' For example:  PLAYINTRO = ""„CONST PLAYCLEARROW = "MBT255L16O4CDEGO6C"         ' Tune played when a row is cleared.  Range unlimited.„CONST PLAYINTRO = "MBT170O1L8CO2CO1CDCA-A-FGFA-F" ' Song played at game start.  Range unlimited.„CONST PLAYGAMEOVER = "MBT255L16O6CO4GEDC"         ' Song when the game is lost.  Range unlimited.„CONST PLAYNEWBLOCK = "MBT160L28N20L24N5"          ' Song when a new block is dropped.  Range unlimited.„CONST PLAYWINGAME = "T255L16O6CO4GEDCCDEFGO6CEG"  ' Song when game is won.  Range unlimited.„„' The following CONST statements should not be changed like the ones above„' because the program relies on them being this value.„CONST FALSE = 0             ' 0 means FALSE.„CONST TRUE = NOT FALSE      ' Anything but 0 can be thought of as TRUE.„CONST SPACEBAR = 32         ' ASCII value for space character. Drops the shape.„CONST DOWNARROW = 80        ' Down arrow key.  Drops the shape.„CONST RIGHTARROW = 77       ' Right arrow key.  Moves the shape right.„CONST UPARROW = 72          ' Up arrow key.  Rotates the shape.„CONST LEFTARROW = 75        ' Left arrow key.  Moves the shape left.„CONST DOWNARROW2 = 50       ' 2 key.  Drops the shape.„CONST RIGHTARROW2 = 54      ' 6 key.  Moves the shape right.„CONST UPARROW2 = 56         ' 8 key.  Rotates the shape.„CONST LEFTARROW2 = 52       ' 4 key.  Moves the shape left.„CONST UPARROW3 = 53         ' 5 key.  Rotates the shape.„CONST QUIT = "Q"            ' Q key.  Quits the game.„CONST PAUSE = "P"           ' P key.  Pauses the game.„CONST XMATRIX = 3           ' Width of the matrix that forms each falling unit.  See the discussions in Suggested Changes #2 and #3.„CONST YMATRIX = 1           ' Depth of the matrix that forms each falling unit.„CONST BYTESPERBLOCK = 76    ' Number of bytes required to store one block in Screen mode 7.„CONST BLOCKVOLUME = (XMATRIX + 1) * (YMATRIX + 1)   ' Number of blocks in each shape.„CONST ELEMENTSPERBLOCK = BLOCKVOLUME * BYTESPERBLOCK \ 2    ' Number of INTEGER array elements needed to store an image of a shape.„CONST XSIZE = 13            ' Width, in pixels, of each block.  QBlocks assumes that the entire screen is 25 blocks wide.  Since the screen is 320 pixels wide, each block is approximately 13 pixels wide.„CONST YSIZE = 8             ' Height, in pixels, of each block.  Again, QBlocks assumes that screen is 25 blocks high.  At 200 pixels down, each block is exactly 8 pixels high.„CONST XOFFSET = 10          ' X position, in blocks, of the well.„CONST YOFFSET = 2           ' Y position, in blocks, of the well.„CONST WELLX = XSIZE * XOFFSET   ' X position, in pixels, of the start of the well.„CONST WELLY = YSIZE * YOFFSET   ' Y position.„CONST TILTVALUE = 9999000   ' Points required for QBlocks to tilt.„CONST WELLCOLOR7 = 0        ' Well color for SCREEN 7.„CONST WELLCOLOR1 = 0        ' Well color for SCREEN 1.„CONST BORDERCOLOR1 = 8      ' Border color for SCREEN 1.„CONST BORDERCOLOR7 = 15     ' Border color for SCREEN 7.„„TYPE BlockType              ' Block datatype.„    X AS INTEGER            ' Horizontal location within the well.„    Y AS INTEGER            ' Vertical location within the well.„    Style AS INTEGER        ' Define shape (and color, indirectly).„    Rotation AS INTEGER     ' 4 possible values (0 to 3).„END TYPE„„' SUB and FUNCTION declarations„DECLARE FUNCTION CheckFit ()„DECLARE FUNCTION GameOver ()„DECLARE SUB AddBlockToWell ()„DECLARE SUB CheckForFullRows ()„DECLARE SUB Center (M$, Row)„DECLARE SUB DeleteChunk (Highest%, Lowest%)„DECLARE SUB DisplayIntro ()„DECLARE SUB DisplayGameTitle ()„DECLARE SUB DisplayChanges ()„DECLARE SUB DrawBlock (X, Y, FillColor)„DECLARE SUB InitScreen ()„DECLARE SUB MakeInfoBox ()„DECLARE SUB NewBlock ()„DECLARE SUB PerformGame ()„DECLARE SUB RedrawControls ()„DECLARE SUB Show (b AS BlockType)„DECLARE SUB UpdateScoring ()„DECLARE SUB PutBlock (b AS BlockType)„DECLARE SUB DrawAllShapes ()„DECLARE SUB DrawPattern (Patttern)„DECLARE SUB DrawPlayingField ()„„' DIM SHARED indicates that a variable is available to all subprograms.„' Without this statement, a variable used in one subprogram cannot be„' used by another subprogram or the main program.„DIM SHARED Level AS INTEGER                                         ' Difficulty level.  0 is slowest, 9 is fastest.„DIM SHARED WellBlocks(WELLWIDTH, WELLHEIGHT) AS INTEGER             ' 2 dimensional array to hold the falling shapes that have stopped falling and become part of the well.„DIM SHARED CurBlock AS BlockType                                    ' The falling shape.„DIM SHARED BlockShape(0 TO XMATRIX, 0 TO YMATRIX, 1 TO NUMSTYLES)   ' Holds the data required to make each shape.  Values determined by the DATA statements at the end of this window.„DIM SHARED PrevScore AS LONG                                        ' Holds the previous level for scoring purposes.„DIM SHARED Score AS LONG                                            ' Score.„DIM SHARED ScreenWidth AS INTEGER                                   ' Width of the screen, in character-sized units.„DIM SHARED ScreenMode AS INTEGER                                    ' Value of the graphics screen mode used.„DIM SHARED WellColor AS INTEGER                                     ' Color inside the well.„DIM SHARED BorderColor AS INTEGER                                   ' Color of well border and text.„DIM SHARED OldBlock AS BlockType                                    ' An image of the last CurBlock.  Used to erase falling units when they move.„DIM SHARED TargetTime AS SINGLE                                     ' Time to move the shape down again.„DIM SHARED GameTiltScore AS LONG                                    ' Holds the value that this game will tilt at.„DIM SHARED Temp(11175)  AS INTEGER                                  ' Used by several GET and PUT statements to store temporary screen images.„DIM SHARED BlockColor(1 TO NUMSTYLES) AS INTEGER                    ' Block color array„DIM SHARED BlockImage((NUMSTYLES * 4 + 3) * ELEMENTSPERBLOCK) AS INTEGER    ' Holds the binary image of each rotation of each shape for the PutBlock subprogram to use.„DIM KeyFlags AS INTEGER                                             ' Internal state of the keyboard flags when game starts.  Hold the state so it can be restored when the games ends.„DIM BadMode AS INTEGER                                              ' Store the status of a valid screen mode.„„„ON ERROR GOTO ScreenError               ' Set up a place to jump to if an error occurs in the program.„BadMode = FALSE„ScreenMode = 7„SCREEN ScreenMode                       ' Attempt to go into SCREEN 7 (EGA screen).„IF BadMode = TRUE THEN                  ' If this attempt failed.„    ScreenMode = 1„    BadMode = FALSE„    SCREEN ScreenMode                   ' Attempt to go into SCREEN 1 (CGA screen).„END IF„ON ERROR GOTO 0                         ' Turn off error handling.„„IF BadMode = TRUE THEN                  ' If no graphics adapter.„    CLS„    LOCATE 10, 12: PRINT "CGA, EGA Color, or VGA graphics required to run QBLOCKS.BAS"„ELSE„    RANDOMIZE TIMER                     ' Create a new sequence of random numbers based on the clock.„    DisplayIntro                        ' Show the opening screen.„„    DEF SEG = 0                         ' Set the current segment to the low memory area.„    KeyFlags = PEEK(1047)               ' Read the location that holds the keyboard flag.„    IF (KeyFlags AND 32) = 0 THEN       ' If the NUM LOCK key is off„        POKE 1047, KeyFlays OR 32       ' set the NUM LOCK key to on.„    END IF„    DEF SEG                             ' Restore the default segment.„    „    ' Read the pattern for each QBlocks shape.„    FOR i = 1 TO NUMSTYLES                  ' Loop for the each shape„        FOR j = 0 TO YMATRIX                ' and for the Y and X dimensions of„            FOR k = 0 TO XMATRIX            ' each shape.„                READ BlockShape(k, j, i)    ' Actually read the data.„            NEXT k„        NEXT j„    NEXT i„    DrawAllShapes                       ' Draw all shapes in all four rotations.„    PerformGame                         ' Play the game until the player quits.„    DisplayChanges                      ' Show the suggested changes.„   „    DEF SEG = 0                         ' Set the current segment back to low memory where the keyboard flags are.„    POKE 1047, KeyFlags AND 233         ' Set the NUM LOCK key back to where it was at the game start.„    DEF SEG                             ' Restore the current segment back to BASIC's data group area.„„    IF ScreenMode = 7 THEN PALETTE      ' Restore the default color palette if SCREEN 7 was used.„„END IF„„END                                     ' End of the main program code.„„„' The DATA statements below define the block shapes used in the game.„' Each shape contains 8 blocks (4 x 2).  A "1" means that there„' is a block in that space; "0" means that the block is blank.  The pattern„' for Style 1, for example, creates a shape that is 4 blocks wide.„' To change an existing block's shape, change a "0" to a "1" or a "1" to„' a "0".  To add new shapes, insert new DATA statements with the same format„' as those below, after the last group of DATA statements (style 7).  Be sure„' to change the NUMSTYLES constant at the beginning of this program to reflect„' the new number of block shapes for the game.„' IMPORTANT! Creating a completely blank block will cause QBlocks to fail.„„' Data for Style 1: Long„DATA 1,1,1,1„DATA 0,0,0,0„„' Data for Style 2: L Right„DATA 1,1,1,0„DATA 0,0,1,0„„' Data for Style 3: L Left„DATA 0,1,1,1„DATA 0,1,0,0„„' Data for Style 4: Z Right„DATA 1,1,0,0„DATA 0,1,1,0„„' Data for Style 5: Z Left„DATA 0,1,1,0„DATA 1,1,0,0„„' Data for Style 6: T„DATA 1,1,1,0„DATA 0,1,0,0„„' Data for Style 7: Square„DATA 0,1,1,0„DATA 0,1,1,0„„„ScreenError:                            ' QBlocks uses this error handler to determine the highest available video mode.„    BadMode = TRUE„    RESUME NEXT„„'----------------------------------------------------------------------------„' AddBlockToWell„'„'    After a shape stops falling, put it into the WellBlocks array„'    so later falling shapes know where to stop.„'„'           PARAMETERS:    None.„'----------------------------------------------------------------------------„SUB AddBlockToWell„   „    FOR i = 0 TO XMATRIX                                    ' Loop through all elements in the array.„        FOR j = 0 TO YMATRIX„            IF BlockShape(i, j, CurBlock.Style) = 1 THEN    ' If there is a block in that space.„                SELECT CASE CurBlock.Rotation               ' Use the Rotation to determine how the blocks should map into the WellBlocks array.„                    CASE 0              ' No rotation.„                        WellBlocks(CurBlock.X + i, CurBlock.Y + j) = CurBlock.Style„                    CASE 1              ' Rotated 90 degrees clockwise.„                        WellBlocks(CurBlock.X - j + 2, CurBlock.Y + i - 1) = CurBlock.Style„                    CASE 2              ' Rotated 180 degrees.„                        WellBlocks(CurBlock.X - i + 3, CurBlock.Y - j + 1) = CurBlock.Style„                    CASE 3               ' Rotated 270 degrees clockwise.„                        WellBlocks(CurBlock.X + j + 1, CurBlock.Y - i + 2) = CurBlock.Style„                END SELECT„            END IF„        NEXT j„    NEXT i„END SUB„„'----------------------------------------------------------------------------„' Center„'„'    Centers a string of text on a specified row.„'„'           PARAMETERS:    Text$ - Text to display on the screen.„'                          Row   - Row on the screen where the text$ is„'                                  displayed.„'----------------------------------------------------------------------------„SUB Center (text$, Row)„„  LOCATE Row, (ScreenWidth - LEN(text$)) \ 2 + 1„  PRINT text$;„„END SUB„„'----------------------------------------------------------------------------„' CheckFit„'„'    Checks to see if the shape will fit into its new position.„'    Returns TRUE if it fits and FALSE if it does not fit.„'„'           PARAMETERS:    None„'„'----------------------------------------------------------------------------„FUNCTION CheckFit„„    CheckFit = TRUE                     ' Assume the shape will fit.„   „    FOR i = 0 TO XMATRIX                ' Loop through all the blocks in the„        FOR j = 0 TO YMATRIX            ' shape and see if any would„                                        ' overlap blocks already in the well.„            IF BlockShape(i, j, CurBlock.Style) = 1 THEN    ' 1 means that space, within the falling shape, is filled with a block.„                SELECT CASE CurBlock.Rotation               ' Base the check on the rotation of the shape.„                    CASE 0                         ' No rotation.„                        NewX = CurBlock.X + i„                        NewY = CurBlock.Y + j„                    CASE 1                         ' Rotated 90 degrees clockwise, or 270 degrees counterclockwise.„                        NewX = CurBlock.X - j + 2„                        NewY = CurBlock.Y + i - 1„                    CASE 2                         ' Rotated 180 degrees.„                        NewX = CurBlock.X - i + 3„                        NewY = CurBlock.Y - j + 1„                    CASE 3                         ' Rotated 270 degrees clockwise, or 90 degrees counterclockwise.„                        NewX = CurBlock.X + j + 1„                        NewY = CurBlock.Y - i + 2„                END SELECT„„                ' Set CheckFit to false if the block would be out of the well.„                IF (NewX > WELLWIDTH - 1 OR NewX < 0 OR NewY > WELLHEIGHT - 1 OR NewY < 0) THEN„                    CheckFit = FALSE„                    EXIT FUNCTION„„                ' Otherwise, set CheckFit to false if the block overlaps„                ' an existing block.„                ELSEIF WellBlocks(NewX, NewY) THEN„                    CheckFit = FALSE„                    EXIT FUNCTION„                END IF„„            END IF„        NEXT j„    NEXT i„„END FUNCTION„„'----------------------------------------------------------------------------„' CheckForFullRows„'„'    Checks for filled rows.  If a row is filled, delete it and move„'    the blocks above down to fill the deleted row.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB CheckForFullRows„„    DIM RowsToDelete(WELLHEIGHT)    ' Temporary array to track rows that should be deleted.„    NumRowsToDelete = 0„    i = WELLHEIGHT                  ' Begin scanning from the bottom up.„    DO„        DeleteRow = TRUE            ' Assume the row should be deleted.„        j = 0„        DO                          ' Scan within each row for blocks.„            DeleteRow = DeleteRow * SGN(WellBlocks(j, i)) ' If any position is blank, DeleteRow is 0 (FALSE).„            j = j + 1„        LOOP WHILE DeleteRow = TRUE AND j < WELLWIDTH„       „        IF DeleteRow = TRUE THEN„            ' Walk up the rows and copy them down in the WellBlocks array.„            NumRowsToDelete = NumRowsToDelete + 1   ' Number of rows to delete.„            RowsToDelete(i - NumDeleted) = TRUE     ' Mark the rows to be deleted, compensating for rows that have already been deleted below it.„            NumDeleted = NumDeleted + 1             ' Compensates for rows that have been deleted already.„           „            ' Logically delete the row by moving all WellBlocks values down.„            FOR Row = i TO 1 STEP -1„                FOR Col = 0 TO WELLWIDTH„                    WellBlocks(Col, Row) = WellBlocks(Col, Row - 1)„                NEXT Col„            NEXT Row„        ELSE                        ' This row will not be deleted.„            i = i - 1„        END IF„    LOOP WHILE i >= 1                ' Stop looping when the top of the well is reached.„           „    IF NumRowsToDelete > 0 THEN„        Score = Score + 100 * NumRowsToDelete  ' Give 100 points for every row.„       „        ' Set Highest and Lowest such that any deleted row will initially set them.„        Highest = -1„        Lowest = 100„       „        ' Find where the highest and lowest rows to delete are.„        FOR i = WELLHEIGHT TO 1 STEP -1„            IF RowsToDelete(i) = TRUE THEN„                IF i > Highest THEN Highest = i„                IF i < Lowest THEN Lowest = i„            END IF„        NEXT i„        „        IF (Highest - Lowest) + 1 = NumRowsToDelete THEN    ' Only one contiguous group of rows to delete.„            DeleteChunk Highest, Lowest„        ELSE                                                ' Two groups of rows to delete.„            ' Begin at Lowest and scan down for a row NOT to be deleted.„            ' Then delete everything from Lowest to the row not to be deleted.„            i = Lowest„            DO WHILE i <= Highest„                IF RowsToDelete(i) = FALSE THEN„                    DeleteChunk i - 1, Lowest„                    EXIT DO„                ELSE„                    i = i + 1„                END IF„            LOOP„           „            ' Now look for the second group and delete those rows.„            Lowest = i„            DO WHILE RowsToDelete(Lowest) = FALSE„                Lowest = Lowest + 1„            LOOP„            DeleteChunk Highest, Lowest„       „        END IF„    END IF„„END SUB„„'----------------------------------------------------------------------------„' DeleteChunk„'„'    Deletes a group of one or more rows.„'„'           PARAMETERS:    Highest - Highest row to delete (physically lowest„'                                    on screen).„'                          Lowest  - Lowest row to delete (physically highest„'                                    on screen).„'----------------------------------------------------------------------------„SUB DeleteChunk (Highest, Lowest)„   „    ' GET the image of the row to delete.                              „    GET (WELLX, Lowest * YSIZE + WELLY)-(WELLX + WELLWIDTH * XSIZE, (Highest + 1) * YSIZE + WELLY - 1), Temp„    PLAY PLAYCLEARROW„   „    ' Flash the rows 3 times.„    FOR Flash = 1 TO 3„        PUT (WELLX, Lowest * YSIZE + WELLY), Temp, PRESET„        DelayTime! = TIMER + .02„        DO WHILE TIMER < DelayTime!: LOOP„        PUT (WELLX, Lowest * YSIZE + WELLY), Temp, PSET„        DelayTime! = TIMER + .02„        DO WHILE TIMER < DelayTime!: LOOP„    NEXT Flash„   „    ' Move all the rows above the deleted ones down.„    GET (WELLX, WELLY)-(WELLX + WELLWIDTH * XSIZE, Lowest * YSIZE + WELLY), Temp„    PUT (WELLX, (Highest - Lowest + 1) * YSIZE + WELLY), Temp, PSET„    'Erase the area above the block which just moved down.„    LINE (WELLX, WELLY)-(WELLX + WELLWIDTH * XSIZE, WELLY + (Highest - Lowest + 1) * YSIZE), WellColor, BF„END SUB„„'----------------------------------------------------------------------------„' DisplayChanges„'„'    Displays list of changes that the player can easily make.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB DisplayChanges„„    DisplayGameTitle                            ' Print game title.„    „    COLOR 7„    Center "The following game characteristics can be easily changed from", 5„    Center "within the QuickBASIC Interpreter.  To change the values of  ", 6„    Center "these characteristics, locate the corresponding CONST or DATA", 7„    Center "statements in the source code and change their values, then  ", 8„    Center "restart the program (press Shift + F5).                      ", 9„„    COLOR 15„    Center "Block shapes                         ", 11„    Center "Block rotation                       ", 12„    Center "Number of different block shapes     ", 13„    Center "Score needed to advance to next level", 14„    Center "Width of the game well               ", 15„    Center "Height of the game well              ", 16„    Center "Songs played during game             ", 17„„    COLOR 7„    Center "The CONST statements and instructions on changing them are   ", 19„    Center "located at the beginning of the main program.                ", 20„„    DO WHILE INKEY$ = "": LOOP                  ' Wait for any key to be pressed.„    CLS                                         ' Clear screen.„„END SUB„„'----------------------------------------------------------------------------„' DisplayGameTitle„'„'    Displays title of the game.„'„'           PARAMETERS:    None.„'----------------------------------------------------------------------------„SUB DisplayGameTitle„„    SCREEN 0„    WIDTH 80, 25                                  ' Set width to 80, height to 25.„    COLOR 4, 0                                    ' Set colors for red on black.„    CLS                                           ' Clear the screen.„    ScreenWidth = 80                              ' Set screen width variable to match current width.„„    ' Draw outline around screen with extended ASCII characters.„    LOCATE 1, 2„    PRINT CHR$(201); STRING$(76, 205); CHR$(187);„    FOR i% = 2 TO 24„        LOCATE i%, 2„        PRINT CHR$(186); TAB(79); CHR$(186);„    NEXT i%„    LOCATE 25, 2„    PRINT CHR$(200); STRING$(76, 205); CHR$(188);„„    'Print game title centered at top of screen„    COLOR 0, 4„    Center "      Microsoft      ", 1„    Center "    Q B L O C K S    ", 2„    Center "   Press any key to continue   ", 25  ' Center prompt on line 25.„    COLOR 7, 0„„END SUB„„'----------------------------------------------------------------------------„' DisplayIntro„'„'    Explains the object of the game and how to play.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB DisplayIntro„    „    CLS„    DisplayGameTitle„   „    Center "QBlocks challenges you to keep the well from filling.  Do this by", 5„    Center "completely filling rows with blocks, making the rows disappear.  ", 6„    Center "Move and rotate the falling shapes to get them into the best     ", 7„    Center "position.  The game will get faster as you score more points.    ", 8„„    COLOR 4                                 ' Change foreground color for line to red.„    Center STRING$(74, 196), 11             ' Put horizontal red line on screen.„    COLOR 7     ' White (7) letters.        ' Change foreground color back to white„    Center " Game Controls ", 11            ' Display game controls.„    Center "     General                             Block Control      ", 13„    Center "                                     (Rotate)", 15„    Center "   P - Pause                                 " + CHR$(24) + " (or 5)   ", 16„    Center "      Q - Quit                         (Left) " + CHR$(27) + "   " + CHR$(26) + " (Right)   ", 17„    Center "                                    " + CHR$(25), 18„    Center "                                          (Drop)      ", 19„    „    DO                                      ' Wait for any key to be pressed.„        kbd$ = UCASE$(INKEY$)„    LOOP WHILE kbd$ = ""„    IF kbd$ = "Q" THEN                      'Allow player to quit now„        CLS„        LOCATE 10, 30: PRINT "Really quit? (Y/N)";„        DO„            kbd$ = UCASE$(INKEY$)„        LOOP WHILE kbd$ = ""„        IF kbd$ = "Y" THEN„            CLS„            END„        END IF„    END IF„„END SUB„„'----------------------------------------------------------------------------„' DrawAllShapes„'„'    Quickly draws all shapes in all four rotations.  Uses GET„'    to store the images so they can be PUT onto the screen„'    later very quickly.„'„'           PARAMETERS:    None.„'----------------------------------------------------------------------------„SUB DrawAllShapes„„    DIM b AS BlockType„    SCREEN ScreenMode                   ' Set the appropriate screen mode.„   „    ' On EGA and VGA systems, appear to blank the screen.„    IF ScreenMode = 7 THEN„        DIM Colors(0 TO 15)             ' DIM an array of 16 elements.  By default, all elements are 0.„        PALETTE USING Colors            ' Redefine the colors all to 0.„        FOR i = 1 TO NUMSTYLES          ' Set block colors EGA, VGA„            BlockColor(i) = ((i - 1) MOD 7) + 1„        NEXT i„    ELSE„        FOR i = 1 TO NUMSTYLES          'Set block colors for CGA„            BlockColor(i) = ((i - 1) MOD 3) + 1„        NEXT i„    END IF„„    CLS„    Count = 0                           ' Count determines how many shapes have been drawn on the screen and vertically where.„    FOR shape = 1 TO NUMSTYLES          ' Loop through all shapes.„„        RtSide = 4„        DO„            IF BlockShape(RtSide - 1, 0, shape) = 1 OR BlockShape(RtSide - 1, 1, shape) = 1 THEN EXIT DO„            RtSide = RtSide - 1„        LOOP UNTIL RtSide = 1„„        LtSide = 0„        DO„            IF BlockShape(LtSide, 0, shape) = 1 OR BlockShape(LtSide, 1, shape) = 1 THEN EXIT DO„            LtSide = LtSide + 1„        LOOP UNTIL LtSide = 3„„        FOR Rotation = 0 TO 3           ' Loop through all rotations.„            b.X = Rotation * 4 + 2      ' Determine where to put the shape.„            b.Y = Count + 2„            b.Rotation = Rotation„            b.Style = shape„            Show b                      ' Draw the shape.„           „            X = b.X: Y = b.Y„            SELECT CASE Rotation        ' Based on Rotation, determine where the shape really is on the screen.„                CASE 0                  ' No rotation.„                    x1 = X: x2 = X + RtSide: y1 = Y: y2 = Y + 2„                CASE 1                  ' Rotated 90 degrees clockwise.„                    x1 = X + 1: x2 = X + 3: y1 = Y - 1: y2 = Y + RtSide - 1„                CASE 2                  ' 180 degrees.„                    x1 = X: x2 = X + 4 - LtSide: y1 = Y: y2 = Y + 2„                CASE 3                  ' Rotated 270 degrees clockwise.„                    x1 = X + 1: x2 = X + 3: y1 = Y - 1: y2 = Y + 3 - LtSide„            END SELECT„           „            ' Store the image of the rotated shape into an array for fast recall later.„            GET (x1 * XSIZE, y1 * YSIZE)-(x2 * XSIZE, y2 * YSIZE), BlockImage(((shape - 1) * 4 + Rotation) * ELEMENTSPERBLOCK)„       „        NEXT Rotation„       „        Count = Count + 5               ' Increase Count by 5 to leave at least one blank line between shapes.„        IF Count = 20 THEN              ' No space for any more shapes.„            CLS„            Count = 0„        END IF„   „    NEXT shape„   „    CLS„   „    ' Changes the color palette if SCREEN is used.„    IF ScreenMode = 7 THEN„        PALETTE                         ' Restore default color settings.„        PALETTE 6, 14                   ' Make brown (6) look like yellow (14).„        PALETTE 14, 15                  ' Make yellow (14) look like bright white (15).„    END IF„„END SUB„„'----------------------------------------------------------------------------„' DrawBlock„'„'    Draws one block of a QBlocks shape.„'„'           PARAMETERS:    X         - Horizontal screen location.„'                          Y         - Vertical screen location.„'                          FillColor - The primary color of the block.„'                                      The top and left edges will be the„'                                      brighter shade of that color.„'----------------------------------------------------------------------------„SUB DrawBlock (X, Y, FillColor)„„    LINE (X * XSIZE + 2, Y * YSIZE + 2)-((X + 1) * XSIZE - 2, (Y + 1) * YSIZE - 2), FillColor, BF„    LINE (X * XSIZE + 1, Y * YSIZE + 1)-((X + 1) * XSIZE - 1, Y * YSIZE + 1), FillColor + 8„    LINE (X * XSIZE + 1, Y * YSIZE + 1)-(X * XSIZE + 1, (Y + 1) * YSIZE - 1), FillColor + 8„„END SUB„„'----------------------------------------------------------------------------„' DrawPattern„'„'    Draws a background pattern that is 32 pixels wide by 20 pixels„'    deep.  Gets the pattern and duplicates it to fill the screen.„'„'           PARAMETERS:    Pattern - Which of the 10 available patterns to„'                                    draw.„'----------------------------------------------------------------------------„SUB DrawPattern (Pattern)„„    CLS„    X = 1: Y = 1„    DIM Temp2(215) AS INTEGER           ' Create an array to store the image.„   „    ' Draw the pattern specified.„    SELECT CASE Pattern„    CASE 0„        j = Y + 21„        FOR i = X TO X + 27 STEP 3„            j = j - 2„            LINE (i, j)-(i, Y + 19), 12, BF„        NEXT i„        LINE (X, Y)-(X + 30, Y + 19), 4, B„        LINE (X + 1, Y + 1)-(X + 31, Y + 18), 4, B„    CASE 1„        LINE (X, Y)-(X + 8, Y + 12), 1, BF„        LINE (X + 9, Y + 8)-(X + 24, Y + 20), 2, BF„        LINE (X + 25, Y)-(X + 32, Y + 12), 3, BF„    CASE 2„        LINE (X, Y)-(X + 29, Y + 18), X / 32 + 1, B„        LINE (X + 1, Y + 1)-(X + 28, Y + 17), X / 32 + 2, B„    CASE 3„        FOR i = 0 TO 9 STEP 2„            LINE (X + i, Y + i)-(X + 29 - i, Y + 18 - i), i, B„        NEXT i„    CASE 4„        j = 0„        FOR i = 1 TO 30 STEP 3„            LINE (X + i, Y + j)-(X + 30 - i, Y + j), i„            LINE (X + i, Y + 19 - j)-(X + 30 - i, Y + 19 - j), i„            j = j + 2„        NEXT i„    CASE 5„        LINE (X, Y)-(X + 29, Y + 4), 1, BF„        LINE (X, Y)-(X + 4, Y + 18), 1, BF„        LINE (X + 7, Y + 7)-(X + 29, Y + 11), 5, BF„        LINE (X + 7, Y + 7)-(X + 11, Y + 18), 5, BF„        LINE (X + 14, Y + 14)-(X + 29, Y + 18), 4, BF„    CASE 6„        LINE (X + 15, Y)-(X + 17, Y + 19), 1„        LINE (X, Y + 9)-(X + 31, Y + 11), 2„        LINE (X, Y + 1)-(X + 31, Y + 18), 9„        LINE (X + 30, Y)-(X + 1, Y + 19), 10„    CASE 7„        FOR i = 1 TO 6„            CIRCLE (X + 16, Y + 10), i, i„        NEXT i„    CASE 8„        FOR i = X TO X + 30 STEP 10„            CIRCLE (i, Y + 9), 10, Y / 20 + 1„        NEXT i„    CASE 9„        LINE (X + 1, Y)-(X + 1, Y + 18), 3„        LINE (X + 1, Y)-(X + 12, Y + 18), 3„        LINE (X + 1, Y + 18)-(X + 12, Y + 18), 3„        LINE (X + 30, Y)-(X + 30, Y + 18), 3„        LINE (X + 30, Y)-(X + 19, Y + 18), 3„        LINE (X + 30, Y + 18)-(X + 19, Y + 18), 3„        LINE (X + 4, Y)-(X + 26, Y), 1„        LINE (X + 4, Y)-(X + 15, Y + 18), 1„        LINE (X + 26, Y)-(X + 15, Y + 18), 1„    END SELECT„   „    GET (0, 0)-(31, 19), Temp2  ' GET the image.„   „    ' Duplicate the image 10 times across by 10 times down.„    FOR H = 0 TO 319 STEP 32„        FOR V = 0 TO 199 STEP 20„            PUT (H, V), Temp2, PSET„        NEXT V„    NEXT H„„END SUB„„'----------------------------------------------------------------------------„' DrawPlayingField„'„'    Draws the playing field, including the well, the title, the„'    score/level box, etc.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB DrawPlayingField„   „    SELECT CASE ScreenMode               ' Choose the screen colors based on the current mode.„        CASE 7„            WellColor = WELLCOLOR7„            BorderColor = BORDERCOLOR7„„        CASE ELSE                         ' Setup for SCREEN 1.„            WellColor = WELLCOLOR1„            BorderColor = BORDERCOLOR1„    END SELECT„   „    ScreenWidth = 40                      ' Set to proper width and colors.„   „    ' Draw the background pattern.„    DrawPattern Level„  „    ' Draw the well box.„    LINE (WELLX - 1, WELLY - 5)-(WELLX + WELLWIDTH * XSIZE + 1, WELLY + WELLHEIGHT * YSIZE + 1), WellColor, BF„    LINE (WELLX - 1, WELLY - 5)-(WELLX + WELLWIDTH * XSIZE + 1, WELLY + WELLHEIGHT * YSIZE + 1), BorderColor, B„   „    ' Draw the title box.„    LINE (XSIZE, WELLY - 5)-(XSIZE * 8, WELLY + 12), WellColor, BF„    LINE (XSIZE, WELLY - 5)-(XSIZE * 8, WELLY + 12), BorderColor, B„   „    ' Draw the scoring box.„    LINE (XSIZE, WELLY + 20)-(WELLX - 2 * XSIZE, 78), WellColor, BF„    LINE (XSIZE, WELLY + 20)-(WELLX - 2 * XSIZE, 78), BorderColor, B„                                         „    MakeInfoBox                     ' Draw the Information Box.„„    COLOR 12„    LOCATE 3, 5: PRINT "QBLOCKS"     ' Center the program name on line 2.„    COLOR BorderColor„„    ' Draw the scoring area.„    LOCATE 6, 4: PRINT "Score:";„    LOCATE 7, 4: PRINT USING "#,###,###"; Score„    LOCATE 9, 4: PRINT USING "Level: ##"; Level„„END SUB„„'----------------------------------------------------------------------------„' GameOver„'„'    Ends the game and asks the player if he/she wants to play„'    again.  GameOver returns TRUE if the player wishes to stop„'    or FALSE if the player wants another game.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„FUNCTION GameOver„   „    PLAY PLAYGAMEOVER                           ' Play the game over tune.„    MakeInfoBox„„    DO WHILE INKEY$ <> "": LOOP                 ' Clear the keyboard buffer.„„    ' Put Game Over messages into the InfoBox.„    LOCATE 14, 4: PRINT "Game Over"„    LOCATE 17, 6: PRINT "Play"„    LOCATE 18, 5: PRINT "again?"„    LOCATE 20, 6: PRINT "(Y/N)"„    „    ' Wait for the player to press either Y or N.„    DO„        a$ = UCASE$(INKEY$)                     ' UCASE$ assures that the key will be uppercase.  This eliminates the need to check for y and n in addition to Y and N.„    LOOP UNTIL a$ = "Y" OR a$ = "N"„   „    IF a$ = "Y" THEN                            ' If player selects "Y",„        GameOver = FALSE                        ' game is not over,„    ELSE                                        ' otherwise„        GameOver = TRUE                         ' the game is over.„    END IF„  „END FUNCTION„„'----------------------------------------------------------------------------„' InitScreen„'„'    Draws the playing field and ask for the desired starting level.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB InitScreen„„    DrawPlayingField                ' Draw playing field assuming Level 0.„„    ' Prompt for starting level.„    COLOR 12                        ' Change foreground color to bright red.„    LOCATE 14, 5: PRINT "Select";„    LOCATE 16, 5: PRINT "start";„    LOCATE 18, 5: PRINT "level?";„    LOCATE 20, 5: PRINT "(0 - 9)";„    COLOR BorderColor               ' Restore the default text color to BorderColor (white).„    Level = TRUE                    ' Use level as flag as well as a real value.  Level remain TRUE if Q (Quit) is pressed instead of a level.„   „    ' Get a value for Level or accept a Q.„    DO„        a$ = UCASE$(INKEY$)„    LOOP WHILE (a$ > "9" OR a$ < "0") AND a$ <> "Q"„   „    IF a$ = "Q" THEN„        EXIT SUB„    ELSE„        Level = VAL(a$)„    END IF„„    IF Level > 0 THEN DrawPlayingField    ' Draw new playing field because the background pattern depends on the level.„    RedrawControls      ' Draw the controls.„„END SUB„„'----------------------------------------------------------------------------„' MakeInfoBox„'„'    Draws the information box.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB MakeInfoBox„„    LINE (WELLX - 9 * XSIZE, 90)-(WELLX - 2 * XSIZE, 185), WellColor, BF    ' Clear the Info area.„    LINE (WELLX - 9 * XSIZE, 90)-(WELLX - 2 * XSIZE, 185), BorderColor, B   ' Draw a border around it.„„END SUB„„'----------------------------------------------------------------------------„' NewBlock„'„'    Initializes a new falling shape about to enter the well.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB NewBlock„„    CurBlock.Style = INT(RND(1) * NUMSTYLES) + 1    ' Randomly pick a block style.„    CurBlock.X = (WELLWIDTH \ 2) - 1                ' Put the new shape in the horizontal middle of the well„    CurBlock.Y = 0                                  ' and at the top of the well.„    CurBlock.Rotation = 0                           ' Begin with no rotation.„„    PLAY PLAYNEWBLOCK„„END SUB„„'----------------------------------------------------------------------------„' PerformGame„'„'    Continues to play the game until the player quits.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB PerformGame„„    DO                                          ' Loop for repetitive games„        a$ = ""„        ERASE WellBlocks                        ' Set all the elements in the WellBlocks array to 0.„        Score = 0                               ' Clear initial score.„        Level = 0                               ' Assume Level 0.„        PrevScore = BASESCORE - NEXTLEVEL       ' Set score needed to get to first level„        GameTiltScore = WINGAME                 ' Set the initial win game value.„       „        InitScreen                              ' Prepare the screen and get the difficulty level.„        IF Level = -1 THEN EXIT SUB             ' Player pressed Q instead of a level.„       „        TargetTime = TIMER + 1 / (Level + 1)    ' TargetTime is when the falling shape will move down again.„        DO                                      ' Create new falling shapes until the game is over.„            DoneWithThisBlock = FALSE           ' This falling shape is not done falling yet.„            NewBlock                            ' Create a new falling unit.„            IF CheckFit = FALSE THEN EXIT DO    ' If it does not fit, then the game is over.„            PutBlock CurBlock                   ' Display the new shape.„           „            DO                                  ' Continue dropping the falling shape.„                OldBlock = CurBlock             ' Save current falling shape for possible later use.„                DO                              ' Loop until enough time elapses.„                   „                    ValidEvent = TRUE           ' Assume a key was pressed.„                    ans$ = UCASE$(INKEY$)„„                    IF ans$ = PAUSE OR ans$ = QUIT THEN„                        MakeInfoBox„                   „                        ' SELECT CASE will do different actions based on the„                        ' value of the SELECTED variable.„                        SELECT CASE ans$„                            CASE PAUSE„                                SOUND 1100, .75„                                LOCATE 16, 6: PRINT "GAME";„                                LOCATE 18, 5: PRINT "PAUSED";„                                DO WHILE INKEY$ = "": LOOP  ' Wait until another key is pressed.„                            CASE QUIT„                                ' Play sounds to tell the player that Q was pressed.„                                SOUND 1600, 1„                                SOUND 1000, .75„                               „                                ' Confirm that the player really wants to quit.„                                LOCATE 15, 5: PRINT "Really";„                                LOCATE 17, 6: PRINT "quit?";„                                LOCATE 19, 6: PRINT "(Y/N)";„                                DO„                                    a$ = UCASE$(INKEY$)„                                LOOP UNTIL a$ <> ""„                                IF a$ = "Y" THEN EXIT SUB„                        END SELECT„                        RedrawControls  ' Redraw controls if either Q or P is pressed.„                   „                    ELSE    ' A key was pressed but not Q or P.„                        ans = ASC(RIGHT$(CHR$(0) + ans$, 1))    ' Convert the key press to an ASCII code for faster processing.„                        SELECT CASE ans„                        CASE DOWNARROW, DOWNARROW2, SPACEBAR    ' Drop shape immediately.„                            DO                                  ' Loop to drop the falling unit one row at a time.„                                CurBlock.Y = CurBlock.Y + 1„                            LOOP WHILE CheckFit = TRUE          ' Keep looping while the falling unit isn't stopped.„                            CurBlock.Y = CurBlock.Y - 1         ' Went one down too far, restore to previous.„                            TargetTime = TIMER - 1              ' Ensure that the shape falls immediately.„                        CASE RIGHTARROW, RIGHTARROW2„                            CurBlock.X = CurBlock.X + 1         ' Move falling unit right.„                        CASE LEFTARROW, LEFTARROW2„                            CurBlock.X = CurBlock.X - 1         ' Move falling unit left.„                        CASE UPARROW, UPARROW2, UPARROW3„                            CurBlock.Rotation = ((CurBlock.Rotation + ROTATEDIR) MOD 4)  ' Rotate falling unit.„                        CASE ELSE„                            ValidEvent = FALSE„                    END SELECT„„                    IF ValidEvent = TRUE THEN„                        IF CheckFit = TRUE THEN         ' If the move is valid and the shape fits in the new position,„                            PutBlock OldBlock           ' erase the shape from its old position„                            PutBlock CurBlock           ' and display it in the new position.„                            OldBlock = CurBlock„                        ELSE„                            CurBlock = OldBlock         ' If it does not fit then reset CurBlock to the OldBlock.„                        END IF„                    END IF„                END IF„„                LOOP UNTIL TIMER >= TargetTime       ' Keep repeating the loop until it is time to drop the shape.  This allows many horizontal movements and rotations per vertical step.„               „                TargetTime = TIMER + 1 / (Level + 1) ' The player has less time between vertical movements as the skill level increases.„                CurBlock.Y = CurBlock.Y + 1          ' Try to drop the falling unit one row.„„                IF CheckFit = FALSE THEN             ' Cannot fall any more.„                    DoneWithThisBlock = TRUE         ' Done with this block.„                    CurBlock = OldBlock„                END IF„               „                PutBlock OldBlock                    ' Erase the falling shape from the old position,„                PutBlock CurBlock                    ' and display it in the new position.„                OldBlock = CurBlock„„            LOOP UNTIL DoneWithThisBlock             ' Continue getting keys and moving shapes until the falling shape stops.„           „            AddBlockToWell                           ' Shape has stopped so logically add it to the well.„            CheckForFullRows                         ' Check to see if a row(s) is now full.  If so, deletes it.„            UpdateScoring                            ' Use the UpdateScoring subprogram to add to the score.„„            IF Score >= GameTiltScore THEN           ' See if the score has hit the tilt score.„„                PLAY PLAYWINGAME„                MakeInfoBox„                LOCATE 13, 5: PRINT USING "#######"; Score„                PLAY PLAYWINGAME„„                IF GameTiltScore = TILTVALUE THEN    ' If the player has tilted the game.„                    LOCATE 15, 4: PRINT "GAME TILT"„                    LOCATE 17, 5: PRINT "You are"„                    LOCATE 18, 4: PRINT "Awesome!"„                    LOCATE 20, 4: PRINT "Press any"„                    LOCATE 21, 6: PRINT "key..."„                    PLAY PLAYWINGAME„                    DO WHILE INKEY$ = "": LOOP„                    EXIT SUB„                ELSE                                 ' If they just met the WINGAME value.„                    LOCATE 15, 4: PRINT "YOU WON!"„                    LOCATE 17, 5: PRINT "Want to"„                    LOCATE 18, 4: PRINT "continue"„                    LOCATE 20, 6: PRINT "(Y/N)"„„                    DO                               ' DO loop to wait for the player to press anything.„                        a$ = UCASE$(INKEY$)          ' The UCASE$ function assures that a$ always has an uppercase letter in it.„                    LOOP UNTIL a$ <> ""„        „                    IF a$ <> "Y" THEN EXIT DO        ' Exit this main loop if the player pressed anything but Y.„„                    GameTiltScore = TILTVALUE        ' Reset to the tilt value.„„                    RedrawControls„                END IF„            END IF„„        LOOP                                         ' Unconditional loop.  Each game is stopped by the EXIT DO command at the top of this loop that executes when a new block will not fit in the well.„    LOOP UNTIL GameOver                              ' GameOver is always TRUE (-1) unless the user presses X or the well is full.„„END SUB„„'----------------------------------------------------------------------------„' PutBlock„'„'    Uses very fast graphics PUT command to draw the shape.„'„'           PARAMETERS:    B - Block to be put onto the screen.„'----------------------------------------------------------------------------„SUB PutBlock (b AS BlockType)„   „    SELECT CASE b.Rotation          ' Base exact placement on the rotation.„        CASE 0                      ' No rotation.„            x1 = b.X: y1 = b.Y„        CASE 1                      ' Rotated 90 degrees clockwise, or 270 degrees counterclockwise.„            x1 = b.X + 1: y1 = b.Y - 1„        CASE 2                      ' Rotated 180 degrees.„            x1 = b.X: y1 = b.Y„        CASE 3                      ' Rotated 270 degrees clockwise, or 90 degrees counterclockwise.„            x1 = b.X + 1: y1 = b.Y - 1„    END SELECT„   „    ' Actually PUT the rotated shape on the screen.  The XOR option makes the„    ' new image blend with whatever used to be there in such a way that„    ' identical colors cancel each other out.  Therefore, one PUT with the XOR„    ' option can draw an object while the second PUT to that same location„    ' erases it without affecting anything else near it.  Often used for animation.„„    PUT (x1 * XSIZE + WELLX, y1 * YSIZE + WELLY), BlockImage(((b.Style - 1) * 4 + b.Rotation) * ELEMENTSPERBLOCK), XOR  ' XOR mixes what used to be there on the screen with the new image.  Two identical colors cancel each other.„„END SUB„„'----------------------------------------------------------------------------„' RedrawControls„'„'    Puts control keys information into the information box.„'„'           PARAMETERS:   None„'----------------------------------------------------------------------------„SUB RedrawControls„  „    ' Draw the InfoBox and erase anything that used to be in it.„    MakeInfoBox„„    ' Print the key assignments within the Info Box.„    COLOR BorderColor„    LOCATE 13, 4: PRINT "Controls"„    LOCATE 14, 4: PRINT "--------"„    LOCATE 15, 4: PRINT CHR$(24) + " = Turn"„    LOCATE 16, 4: PRINT CHR$(27) + " = Left"„    LOCATE 17, 4: PRINT CHR$(26) + " = Right"„    LOCATE 18, 4: PRINT CHR$(25) + " = Drop"„    LOCATE 20, 4: PRINT "P = Pause"„    LOCATE 21, 4: PRINT "Q = Quit"„„END SUB„„'----------------------------------------------------------------------------„' Show„'„'    Draws the falling shape one block at a time.  Only used by„'    DisplayAllShapes.  After that, PutBlock draws all falling„'    shapes.„'„'           PARAMETERS:    B - Block to be put onto the screen.„'----------------------------------------------------------------------------„SUB Show (b AS BlockType)„                                                 „    ' Loop through all possible block locations.„    FOR i = 0 TO XMATRIX„        FOR j = 0 TO YMATRIX„           „            IF BlockShape(i, j, b.Style) = 1 THEN   ' 1 means there is a block there.„                 SELECT CASE b.Rotation             ' Exact screen position is determined by the rotation.„                    CASE 0                          ' No rotation.„                        DrawBlock b.X + i, b.Y + j, BlockColor(b.Style)„                    CASE 1                          ' Rotated 90 degrees clockwise, or 270 degrees counterclockwise.„                        DrawBlock b.X - j + 2, b.Y - 1 + i, BlockColor(b.Style)„                    CASE 2                          ' Rotated 180 degrees.„                        DrawBlock b.X + 3 - i, b.Y - j + 1, BlockColor(b.Style)„                    CASE 3                          ' Rotated 270 degrees clockwise, or 90 degrees counterclockwise.„                        DrawBlock b.X + j + 1, b.Y - i + 2, BlockColor(b.Style)„                END SELECT„            END IF„        NEXT j„    NEXT i„„END SUB„„'---------------------------------------------------------------------------„' UpdateScoring„'„'    Puts the new score on the screen.  Checks if the new score forces„'    a new level.  If so, change the background pattern to match the„'    new level.„'„'           PARAMETERS:     None„'----------------------------------------------------------------------------„SUB UpdateScoring„   „    ' Increase the level if the score is high enough and the level is not„    ' maximum already.„    IF Level < 9 AND Score >= (NEXTLEVEL * (Level + 1) + PrevScore) THEN„   „        ' Store the entire well image to quickly PUT it back after the„        ' background changes.„        GET (WELLX, WELLY)-(WELLX + WELLWIDTH * XSIZE, WELLY + WELLHEIGHT * YSIZE), Temp„       „        PrevScore = Score           ' Save previous Score for next level.„        Level = Level + 1„        DrawPlayingField            ' Draw playing field again, this time with the new background pattern.„        PUT (WELLX, WELLY), Temp    ' Restore the image of the old well.„   „        RedrawControls              ' Show the controls again.„    END IF„„    LOCATE 7, 4: PRINT USING "#,###,###"; Score   ' Print the score and level.„    „END SUB„„Jerry Chan                     THE POWER RUNES                POWER,RUNES,RPG,CHAN,JERRY     Unknown Date (00:00:00)QB, QBasic             485  24345    RUNES.BAS   1 CLS : RANDOMIZE TIMER„2 COLOR 15: PRINT " ‹‹‹‹‹‹   ‹‹   ‹‹    ‹‹‹‹", , "A Game by ... Jerry Chan"„3 COLOR 7: PRINT "   €€     €€‹‹‹€€    €€‹", , "FREEWARE !"„4 COLOR 8: PRINT "   €€     €€   €€    €€‹‹", , "Version 1.0"„5 COLOR 15: PRINT "   P O W E R    R U N E S"„6 PRINT : PRINT : PRINT : PRINT : PRINT : PRINT TAB(28); "Press Any Key To Continue"„7 A$ = INKEY$: IF A$ = "" THEN GOTO 7„8 CLS„9 PRINT "     Long ago, there were runes.  Runes more powerful than you can imagine."„10 PRINT "These runes were controlled by the good and honest King Aquarius.  He used"„11 PRINT "the runes to help him run his land.  He had done so until an evil force "„12 PRINT "arose...Actung Ka.  Actung Ka, used the King's good nature to steal the runes"„13 PRINT "for his own uses, for evil.  The King was furious.  He went into battle with"„14 PRINT "Actung Ka himself...unfortunately, the King was never seen again.  Actung Ka"„15 PRINT "used the runes to take the land and money of all the people.  Action was "„16 PRINT "required...and only the legendary warrior know as Xavier, could challenge"„17 PRINT "the now powerful Actung Ka.  The battle was fierce, the out come was worse..."„18 PRINT "Xavier managed to defeat Actung Ka, but at the loss of his own life.  The runes"„19 PRINT "disapeared and was never seen again..."„20 PRINT„21 PRINT "     Now, a 100 years after the great battle, a new evil arises.  Actung Ka"„22 PRINT "somehow returns...Everyone has forgotten about the runes, but Actung Ka does "„23 PRINT "not, he goes on a secret journey to retrieve the mighty runes, and now "„24 PRINT "threatens to use the power of the runes for evil again..."„25 PRINT„26 PRINT "     As the grandson of Xavier, you must train and prepare yourself for the "„27 PRINT "great battle that lies ahead...you must regain control over the runes, and kill"„28 PRINT "Actung Ka, for good..."„29 PRINT : PRINT„30 COLOR 7: PRINT TAB(28); "Press Any Key To Continue"„31 A$ = INKEY$: IF A$ = "" THEN GOTO 31„32 CLS : COLOR 4: PRINT "NOTE: Keep CAPS LOCK ON during game play"„33 COLOR 7: PRINT "(P)lay Game"„34 COLOR 15: PRINT "(S)tory Again"„35 COLOR 8: PRINT "(Q)uit Game"„36 PRINT : PRINT„37 COLOR 15: INPUT "What is it going to be "; A$„38 IF A$ = "P" THEN GOTO 45„39 IF A$ = "S" THEN GOTO 8„40 IF A$ = "Q" THEN COLOR 4: PRINT "Come back when you're ready then ...": GOTO ENDGAME„42 GOTO 37„45 COLOR 15: CLS : PRINT "You wake up with the morning sun shining in your face.  This is the day I'm"„46 PRINT "gonna do it ! you say to yourself as you strap your equipment on.  You walk out"„47 PRINT "into the crowdy streets of the town."„48 PRINT : PRINT : h = 35: MH = 35: X = 0: L = 1: M = 10: MM = 10: LU = 15: HE = 20: MONEY = 100„49 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø"„50 COLOR 7: PRINT "≥You are in the streets of the Aquari town ...≥"„51 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ"„52 PRINT "(T)raining grounds": PRINT "(S)ave game"„53 COLOR 7: PRINT "(V)isit your Mentor": PRINT "(L)oad game"„54 COLOR 8: PRINT "(Q)uit game"„55 COLOR 4: PRINT "(G)o on journey to find Actung Ka"„56 PRINT„57 COLOR 15: INPUT "What is your command "; A$„58 IF A$ = "T" THEN GOTO 190„59 IF A$ = "V" THEN GOTO 70„60 IF A$ = "Q" THEN COLOR 4: PRINT "So long valiant fighter, return to fight another day ...": GOTO ENDGAME„61 IF A$ = "G" THEN GOTO 700„62 IF A$ = "S" THEN GOTO Save„63 IF A$ = "L" THEN GOTO load„64 GOTO 45„„70 PRINT„71 COLOR 7: PRINT "    You walk into the old dusty shack where your great trainer and mentor lives."„72 PRINT "He looks up as you walk in..."„73 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø"„74 COLOR 7: PRINT "≥You are in Kaligan's shack ...≥"„75 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ"„76 PRINT "(L)evel Raise"„77 COLOR 7: PRINT "(A)sk for advice"„78 COLOR 8: PRINT "(Q)uit to main streets"„79 PRINT„80 COLOR 15: INPUT "What is your command "; A$„81 IF A$ = "L" THEN GOTO 101„82 IF A$ = "A" THEN GOTO 85„83 IF A$ = "Q" THEN GOTO 49„84 GOTO 71„85 PRINT„86 Z = INT(RND(10) * 10) + 1„87 IF Z = 1 THEN COLOR 10: PRINT "My son...use magic only when neccessary, don't waste it's power ..."„88 IF Z = 2 THEN COLOR 10: PRINT "My son...Actung Ka has a weakness against Lit Attacks ..."„89 IF Z = 3 THEN COLOR 10: PRINT "My son...leave at once, I must meditate ..."„90 IF Z = 4 THEN COLOR 10: PRINT "My son...use fire attacks against spirits ..."„91 IF Z = 5 THEN COLOR 10: PRINT "My son...visit me regularly to see if you deserve a level up ..."„92 IF Z = 6 THEN COLOR 10: PRINT "My son...your sword possess great power, unveil it with your spirit ..."„93 IF Z = 7 THEN COLOR 10: PRINT "My son...carry many potions when you go for Actung Ka ..."„94 IF Z = 8 THEN COLOR 10: PRINT "My son...I have no new advice today, go and train ..."„95 IF Z = 9 THEN COLOR 10: PRINT "My son...the wizard at the magic shop can sell you magic ..."„96 IF Z = 10 THEN COLOR 10: PRINT "My son...be careful, Actung Ka has a powerful spell called DETH ..."„97 PRINT„98 COLOR 7: PRINT TAB(28); "Press Any Key To Continue"„99 A$ = INKEY$: IF A$ = "" THEN GOTO 99„100 GOTO 73„101 PRINT„102 COLOR 15: PRINT "     You look your mentor in the eye, and ask for a level raise."„103 IF X > 200 THEN COLOR 10: PRINT "You deserve a level up...HP up...LUCK UP...MAGIC UP!": GOTO 110„104 IF X < 200 THEN XN = 200 - X: COLOR 4: PRINT "You need "; XN; " Experience points to gain a level ...": GOTO 112„110 PRINT„111 L = L + 1: MH = MH + 15: LU = LU + 5: MM = MM + 10: X = 0: MAG = MM - M: M = M + MAG„112 COLOR 7: PRINT "Now your status looks like this :"„113 COLOR 8: PRINT "ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ"„114 COLOR 4: PRINT "Hit Points .......... "; h; "/"; MH, "Healings ... "; HE„115 PRINT "Money ................ "; MONEY„116 PRINT "Luck ................. "; LU, , "Magic 1 ... "; MONE$„117 PRINT "Magic ................ "; M; "/"; MM, "Magic 2 ... "; MTWO$„118 PRINT "Level ................ "; L, , "Magic 3 ... "; MTHREE$„119 COLOR 7: PRINT TAB(28); "Press any key to continue"„120 A$ = INKEY$: IF A$ = "" THEN GOTO 120„121 GOTO 73„190 PRINT„191 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø"„192 COLOR 7: PRINT "≥Training Grouds≥"„193 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ"„194 COLOR 15: PRINT "(T)rain with warriors"„195 COLOR 7: PRINT "(M)agic shop"„196 COLOR 8: PRINT "(Q)uit to streets"„197 COLOR 15: INPUT "What is your command "; A$„198 IF A$ = "T" THEN GOTO 205„199 IF A$ = "M" THEN GOTO 270„200 IF A$ = "Q" THEN GOTO 49„201 GOTO 190„205 E = INT(10 * RND + 1)„206 IF E = 1 THEN EN$ = "Zengra": EH = 20: EM = 20: GOTO 230„207 IF E = 2 THEN EN$ = "Dragoon": EH = 60: EM = 60: GOTO 230„208 IF E = 3 THEN EN$ = "Legolith": EH = 55: EM = 55: GOTO 230„209 IF E = 4 THEN EN$ = "Xanthos": EH = 100: EM = 100: GOTO 230„210 IF E = 5 THEN EN$ = "Thantanos": EH = 213: EM = 213: GOTO 230„211 IF E = 6 THEN EN$ = "Carnage": EH = 550: EM = 550: GOTO 230„212 IF E = 7 THEN EN$ = "Profound Carnage": EH = 1000: EM = 1000: GOTO 230„213 IF E = 8 THEN EN$ = "Ko Kain": EH = 390: EM = 390: GOTO 230„214 IF E = 9 THEN EN$ = "Kobain": EH = 690: EM = 690: GOTO 230„215 IF E = 10 THEN EN$ = "Sung Ka": EH = 35: EM = 35: GOTO 230„230 PRINT : COLOR 7: PRINT "You just challenged "; EN$; " to a battle !"„231 PRINT : COLOR 2: PRINT "Your Stats --": IF h < 1 THEN COLOR 4: PRINT "Get outta my face ! You're not ready for me !!": h = h + 15: GOTO 190„232 COLOR 10: PRINT "Hit Points  "; h; "/"; MH„233 COLOR 4: PRINT EN$; "'s Stats --": IF EH < 0 THEN GOTO 250„234 COLOR 12: PRINT "Hit Points  "; EH; "/"; EM„235 COLOR 7: PRINT "(A)ttack     (H)eal         (B)ack out (RUN) !!!!"„236 COLOR 15: INPUT "What is your command "; B$„237 IF B$ = "A" THEN GOTO 240„238 IF B$ = "B" THEN COLOR 4: PRINT "Chicken !!!": GOTO 190„239 IF B$ = "H" THEN GOTO 245„240 YA = INT(5 * RND + 15)„241 EA = INT(6 * RND + 20)„242 COLOR 7: PRINT "You attack "; EN$; " for "; YA; " HP !!!": EH = EH - YA„243 COLOR 4: PRINT EN$; " attacks for "; EA; " HP !!!!": h = h - EA„244 GOTO 231„245 IF HE = 0 THEN PRINT "You have no more healings !!!": GOTO 236„246 COLOR 10: PRINT "You get ALL your HP replenished !": HE = HE - 1: AH = MH - h: h = h + AH: GOTO 231„250 PRINT„251 COLOR 10: PRINT "Good job !! You defeated "; EN$; " !!"„252 EE = INT(30 * RND + 20)„253 ME = INT(40 * RND + 60)„254 COLOR 15: PRINT "You get "; EE; " experience for your efforts !!": X = X + EE„255 COLOR 7: PRINT "You get "; ME; " gold pieces as a reward !!!": MONEY = MONEY + ME„256 GOTO 190„270 PRINT„271 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒƒƒƒø"„272 COLOR 7: PRINT "≥Magic Shop≥"„273 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒƒƒƒŸ"„274 COLOR 7: PRINT "You walk into the dark shop...you see the wizard in the back room ..."„275 PRINT : PRINT "(B)uy magic scrolls"„276 COLOR 15: PRINT "(T)alk to wizard"„277 COLOR 7: PRINT "(H)ealing potions"„278 COLOR 8: PRINT "(Q)uit to streets"„279 COLOR 4: INPUT "What is your command "; C$„280 IF C$ = "B" THEN GOTO 290„281 IF C$ = "T" THEN GOTO 500„282 IF C$ = "H" THEN GOTO 600„283 IF C$ = "Q" THEN GOTO 49„284 GOTO 271„290 COLOR 15: PRINT "Yes ? Which magic scroll do you wish to purcahse ?"„292 COLOR 7: PRINT "1 -- Wind .............   700 Gold"„294 COLOR 7: PRINT "2 -- Water ............ 1,000 Gold"„295 COLOR 7: PRINT "3 -- Lit .............. 9,000 Gold"„296 PRINT„297 COLOR 15: INPUT "Would you like to buy a scroll (Y/N) "; D$„298 IF D$ = "Y" THEN GOTO 302„299 IF D$ = "N" THEN PRINT "Ok, whatever you say ...": GOTO 270„300 GOTO 297„302 COLOR 7: INPUT "Which one (#) "; E$„303 IF E$ = "1" THEN GOTO 310„304 IF E$ = "2" THEN GOTO 320„305 IF E$ = "3" THEN GOTO 330„306 GOTO 302„310 IF MONEY < 700 THEN PRINT "You can't afford this !!!": GOTO 270„311 MONEY = MONEY - 700: MONE$ = "Wind": PRINT "Thank you !": GOTO 270„320 IF MONEY < 1000 THEN PRINT "You can't afford this !!!": GOTO 270„321 MONEY = MONEY - 1000: MTWO$ = "Water": PRINT "Thank you !": GOTO 270„330 IF MONEY < 9000 THEN PRINT "You can't afford this !!!": GOTO 270„331 MONEY = MONEY - 9000: MTHREE$ = "Lit": PRINT "Thank you !": GOTO 270„500 W = INT(1 * RND + 9)„501 IF W = 1 THEN COLOR 10: PRINT : PRINT "Lit is the most powerful magic...that's why it cost so much !": GOTO 511„502 IF W = 2 THEN COLOR 10: PRINT : PRINT "Magic is difficult to handle if you don't have enough experience...": GOTO 511„503 IF W = 3 THEN COLOR 10: PRINT : PRINT "You cannot use magic while training...you would easily kill a warrior!": GOTO 511„504 IF W = 4 THEN COLOR 10: PRINT : PRINT "I have no new magic for this whole month !": GOTO 511„505 IF W = 5 THEN COLOR 10: PRINT : PRINT "Us wizards are a special breed, we don't need scrolls to learn magic !": GOTO 511„506 IF W = 6 THEN COLOR 10: PRINT : PRINT "I suggest you take a LOT of healings on your future journey ...": GOTO 511„507 IF W = 7 THEN COLOR 10: PRINT : PRINT "Healing potions also replenish your Magic points !": GOTO 511„508 IF W = 8 THEN COLOR 10: PRINT : PRINT "Do not waste your magic on weak enemies ...": GOTO 511„509 IF W = 9 THEN COLOR 10: PRINT : PRINT "Have you heard of the great warrior/wizard called J.C. ?": GOTO 511„510 IF W = 10 THEN COLOR 10: PRINT : PRINT "I'm thirsty...": GOTO 511„511 PRINT„512 PRINT TAB(28); "Press any key to continue"„513 A$ = INKEY$: IF A$ = "" THEN GOTO 513„514 GOTO 270„600 PRINT„601 COLOR 15: PRINT "Ahhh, you want some healing potions eh ?"„602 HP = 10: HA = MONEY \ HP: PRINT "You can afford "; HA; " healings"„603 COLOR 15: PRINT "How many potions do you want "„604 COLOR 7: PRINT "(U)se all you money"„605 COLOR 7: PRINT "(B)uy 1 healing"„606 COLOR 7: PRINT "(P)urcahse 10 healings": COLOR 8: PRINT "(Q)uit"„607 PRINT : COLOR 4: INPUT "What is your choice "; F$„608 IF F$ = "U" THEN GOTO 615„609 IF F$ = "B" THEN GOTO 630„610 IF F$ = "P" THEN GOTO 640„611 IF F$ = "Q" THEN GOTO 270„612 GOTO 600„615 HE = HE + HA: AB = HA * HP: MONEY = MONEY - AB„616 COLOR 10: PRINT "Now you have "; HE; " healing potions !": GOTO 270„630 IF MONEY < 10 THEN PRINT "You can't afford this !!": GOTO 270„631 HE = HE + 1: MONEY = MONEY - 10„632 COLOR 10: PRINT "Now you have "; HE; " healing potions !": GOTO 270„640 IF MONEY < 100 THEN PRINT "You can't afford this !!": GOTO 270„641 HE = HE + 10: MONEY = MONEY - 100„642 COLOR 10: PRINT "Now you have "; HE; " healing potions !": GOTO 270„700 PRINT„701 COLOR 15: PRINT "     You walk out of the town walls and see a tower in the horizon..."„702 PRINT "That's your target...that's Actung Ka's fortress of doom...his domain..."„703 PRINT "There's no turning back now, unless you're chicken !"„704 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø"„705 COLOR 7: PRINT "≥Journey to Actung Ka≥"„706 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ"„707 PRINT : PRINT "(R)eturn to town"„708 COLOR 15: PRINT "(E)nter tower"„709 COLOR 7: PRINT "(Y)our Stats"„710 COLOR 7: PRINT "(H)eal yourself"„711 COLOR 8: PRINT "(V)isit the Inn"„712 PRINT : COLOR 4: INPUT "What is your command "; Z$„713 IF Z$ = "R" THEN COLOR 4: PRINT "Chicken !!": GOTO 49„714 IF Z$ = "E" THEN GOTO FB„715 IF Z$ = "Y" THEN GOTO 730„716 IF Z$ = "H" THEN GOTO 750„717 IF Z$ = "V" THEN GOTO 770„718 GOTO 704„730 PRINT„731 COLOR 15: PRINT "Your Stats look like this ..."„732 COLOR 7: PRINT "ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ"„733 COLOR 4: PRINT "Health .........."; h; "/"; MH, , "Healings ...."; HE„734 COLOR 4: PRINT "Money ..........."; MONEY„735 COLOR 4: PRINT "Luck ............"; LU, , "Magic 1 ....."; MONE$„736 COLOR 4: PRINT "Magic ..........."; M; "/"; MM, , "Magic 2....."; MTWO$„737 COLOR 4: PRINT "Level ..........."; L, , "Magic 3 ....."; MTHREE$„738 PRINT„739 COLOR 15: PRINT TAB(28); "Press Any Key to Continue"„740 A$ = INKEY$: IF A$ = "" THEN GOTO 740„741 GOTO 704„750 PRINT„751 IF HE < 0 THEN PRINT "You have no more healing potions !!": GOTO 704„752 COLOR 10: PRINT "You used 1 healing potion...ALL HP and Magic recovered !"„753 HE = HE - 1: AH = MH - h: h = h + AH: AM = MM - M: M = M + AM„754 GOTO 704„770 PRINT„771 COLOR 15: PRINT "⁄ƒƒƒƒƒƒƒø"„772 COLOR 7: PRINT "≥The Inn≥"„773 COLOR 15: PRINT "¿ƒƒƒƒƒƒƒŸ"„774 PRINT„775 COLOR 15: PRINT "(R)est for awhile"„776 COLOR 7: PRINT "(L)isten to De Grazus"„777 COLOR 8: PRINT "(E)xit the Inn"„778 COLOR 4: INPUT "What is your command "; Y$„779 IF Y$ = "R" THEN GOTO 790„780 IF Y$ = "L" THEN GOTO 860„781 IF Y$ = "E" THEN COLOR 10: PRINT "Bye ... Come again !": GOTO 704„782 GOTO 770„790 PRINT : COLOR 10: PRINT "It costs 20 gold for a room ..."„791 INPUT "Will you pay (Y/N) "; A$„792 IF A$ = "Y" THEN GOTO 795„793 IF A$ = "N" THEN GOTO 770„794 GOTO 791„795 IF MONEY < 0 THEN PRINT "You don't have enought money !!!": GOTO 770„796 COLOR 10: PRINT "You take a rest and recover your magic and hit points !"„797 HR = MH - h: h = h + HR: MR = MM = M: M = M + MR: MONEY = MONEY - 20„798 COLOR 15: PRINT "Thanks for coming...say do you want some Power Elixer ?"„799 INPUT "It costs 1,000 gold, want some (Y/N) "; B$„800 IF B$ = "Y" THEN GOTO 810„801 IF B$ = "N" THEN PRINT "Ok suit yerself ...": GOTO 770„802 GOTO 798„810 IF MONEY < 1000 THEN COLOR 4: PRINT "you cant afford this !!": GOTO 770„811 ELH = INT(5 * RND + 30): ELM = INT(10 * RND + 20)„812 COLOR 4: PRINT "Ok ! Here drink this ...": COLOR 10: PRINT "You gained "; ELH; " HP and "; ELM; " magic from the Elixer !!!"„813 MH = MH + ELH: MM = MM + ELM: GOTO 770„860 PRINT : TDG = 1„861 COLOR 15: PRINT "     You walk into the eating area of the bar and notice an old man sitting"„862 PRINT "in the corner..."„863 COLOR 7: PRINT "You approach him ..."„864 PRINT : COLOR 15: PRINT "(T)alk to De Grazus"„865 COLOR 7: PRINT "(B)uy special warp stone"„866 COLOR 8: PRINT "(R)eturn to Inn"„867 COLOR 4: INPUT "What is your command "; E$„868 IF E$ = "T" THEN GOTO 875„869 IF E$ = "B" THEN GOTO 890„870 IF E$ = "R" THEN GOTO 770„871 GOTO 867„875 IF TDG = 0 THEN PRINT "He doesn't want to talk now ...": GOTO 864„876 TDG = TDG - 1: PRINT : COLOR 15: PRINT "Ahh...it's not very often that someone comes to talk with me ..."„877 PRINT "Since you were so kind to come and chat, I'll give you some info ..."„878 COLOR 7: PRINT " -- Actung Ka isn't the only one behind all this ... actually "„879 PRINT "    someone close to you has some involvment ... I cannot tell you any "„880 PRINT "    much more, for I fear the loss of my life ... be warned young hero,"„881 PRINT "    do not celebrate after defeating Actung Ka ... someone else awaits "„882 PRINT "    you in the dark tower in the horizon ... be careful !"„883 COLOR 10: PRINT "Here...I will give you something special before you leave ... "„884 PRINT "De Grazus gave you 25 healing potions !!": HE = HE + 25: GOTO 864„890 PRINT : COLOR 15: PRINT "Ahh, so you want a special warp stone eh ?"„891 PRINT "These special stones takes you anywhere you wish...there are boundary "„892 PRINT "limitations though...once you touch this stone you will be given a list"„893 PRINT "of places you can go...remember each stone can only be used once...": PRINT "Each one costs 10,000 gold pieces ..."„894 PRINT : COLOR 4: INPUT "Do you wish to buy one (Y/N) "; S$„895 IF S$ = "Y" THEN GOTO 900„896 IF S$ = "N" THEN PRINT "Fine ...": GOTO 864„897 GOTO 894„900 IF MONEY < 10000 THEN COLOR 4: PRINT "You can't afford this !!!": GOTO 864„901 MONEY = MONEY - 10000„902 COLOR 14: PRINT "Where do you wish to warp to ?"„903 COLOR 7: PRINT "(1) Healer's Haven"„904 COLOR 7: PRINT "(2) The domain of J.C. the great Warrior/Wizard"„905 COLOR 7: PRINT "(3) Actung Ka's throne room"„906 COLOR 7: PRINT "(4) Back to town"„907 COLOR 4: INPUT "Where to (#) "; W$„908 IF W$ = "1" THEN GOTO 920„909 IF W$ = "2" THEN GOTO 950„910 IF W$ = "3" THEN GOTO FB„911 IF W$ = "4" THEN PRINT "You said it, not me !": GOTO 49„912 GOTO 907„920 COLOR 12: PRINT : PRINT "You magically warp to the land known as Healer's Haven ..."„921 PRINT "The Supreme ruler of the land approaches you...Welcome brave warrior ..."„922 PRINT "Since we do not get too many visitors here, I will give you the gift of the"„923 PRINT "gods...here take these ..."„924 COLOR 10: PRINT "You recieved 100 healing potions !"„925 HE = HE + 100„926 COLOR 15: PRINT TAB(28); "Press any key to Continue"„927 A$ = INKEY$: IF A$ = "" THEN GOTO 927„928 GOTO 704„950 PRINT : COLOR 10: PRINT "You magically warp to J.C. 's domain ..."„951 PRINT "J.C. approaches you... hummm you paid alot for that stone didn't you ?"„952 PRINT "Well, tell you what, since I have a reputation to maintain, I'll give "„953 PRINT "this ..."„954 COLOR 10: PRINT "You recieved 20 HP and 30 magic !!!"„955 MH = MH + 20: MM = MM + 30: HA = MH - h: MA = MM - M: h = h + HA: M = M + MA„956 COLOR 15: PRINT TAB(28); "Press any key to Continue"„957 A$ = INKEY$: IF A$ = "" THEN GOTO 957„958 GOTO 704„„FB: ACTUNG = 10000: AKMAX = 10000: AKM = 5000: AKMM = 5000„PRINT : COLOR 7: PRINT "You enter the dark and dirty tower..."„COLOR 15: PRINT "This is it...the world rests in your hands !"„COLOR 10: PRINT "Your Status -- "; h; "/"; MH„COLOR 12: PRINT "Actung Ka Status --"; ACTUNG; "/"; AKMAX„PRINT : COLOR 4: PRINT "Actung Ka:"; : COLOR 4: PRINT " You fool ! You cannot defeat me !  Not even your great grandfather"„COLOR 4: PRINT "           could defeat me HA HA...you have made a grave mistake coming here !"„COLOR 10: PRINT "You :"; : COLOR 2: PRINT " You gonna shut up and fight or what ?!?!?"„COLOR 12: PRINT "Actung Ka:"; : COLOR 4: PRINT " You shall die now !!! AAAAHHHHH !!!"„COLOR 15: : PRINT : PRINT TAB(28); "Press any key to continue"„1000 Q$ = INKEY$: IF Q$ = "" THEN GOTO 1000„„CLS„1001 COLOR 10: PRINT "You --"; h; "/"; MH, , , : COLOR 12: PRINT "  Actung Ka --"; ACTUNG; "/"; AKMAX„1002 COLOR 2: PRINT "Magic --"; M; "/"; MM, , , : COLOR 12: PRINT "Magic --"; AKM; "/"; AKMM„1010 IF h < 0 THEN COLOR 4: PRINT "You have died...Darkness fills your soul...": GOTO ENDGAME„1020 IF ACTUNG < 0 THEN GOTO Victory„1030 COLOR 15: PRINT : PRINT "(A)ttack", "(M)agic", "(H)eal"„1040 COLOR 7: INPUT "What is your command "; B$„1050 IF B$ = "A" THEN GOTO 1100„1052 IF B$ = "M" THEN GOTO 1700„1053 IF B$ = "H" THEN GOTO 2000„1054 GOTO 1040„1100 YA = INT(10 * RND + 30)„1101 EA = INT(15 * RND + 35)„1102 COLOR 10: PRINT "You attack Actung Ka for "; YA; " hit points !!!": ACTUNG = ACTUNG - YA„1103 COLOR 12: PRINT "Actung Ka attacks you for "; EA; " hit points !!!": h = h - EA„1104 GOTO 1001„1700 IF M < 0 THEN PRINT "You have no more Magic !!!": GOTO 1001„1701 IF MONE$ = "" THEN COLOR 4: PRINT "You don't have that magic !!": GOTO 1001„1702 IF MTWO$ = "" THEN COLOR 4: PRINT "You don't have that magic !!": GOTO 1001„1703 IF MTHREE$ = "" THEN COLOR 4: PRINT "You don't have that magic !!": GOTO 1001„1800 PRINT "(1) Magic One ---"; MONE$„1801 PRINT "(2) Magic Two ---"; MTWO$„1802 PRINT "(3) Magic Three -"; MTHREE$„1803 COLOR 15: INPUT "Which magic "; M$„1804 IF M$ = "1" THEN GOTO 1850„1805 IF M$ = "2" THEN GOTO 1870„1806 IF M$ = "3" THEN GOTO 1890„1807 GOTO 1803„1850 IF M < 30 THEN PRINT "You don't have enough magic to cast this spell !": GOTO 1001„1851 M = M - 30„1852 MD = INT(20 * RND + 40)„1853 COLOR 10: PRINT "You cast the spell of "; MONE$; " !! Actung Ka looses "; MD; " hit points !!": ACTUNG = ACTUNG - MD„1854 akmagic = INT(1 * RND + 4)„1855 IF akmagic = 1 THEN LET ama$ = "Thunder"„1856 IF akmagic = 2 THEN LET ama$ = "DETH"„1857 IF akmagic = 3 THEN LET ama$ = "Wave"„1858 IF akmagic = 4 THEN LET ama$ = "Stone"„1859 IF akmagic = 5 THEN LET ama$ = "Dragon"„1860 AM = INT(25 * RND + 35)„1861 COLOR 12: PRINT "Actung Ka attacks using "; ama$; " !! You lose "; AM; " hit points !!": h = h - AM„1862 GOTO 1001„1870 IF M < 50 THEN PRINT "You don't have enough magic to cast this spell !": GOTO 1001„1871 M = M - 50„1872 MD = INT(20 * RND + 40)„1873 COLOR 10: PRINT "You cast the spell of "; MTWO$; " !! Actung Ka looses "; MD; " hit points !!": ACTUNG = ACTUNG - MD„1874 akmagic = INT(1 * RND + 4)„1875 IF akmagic = 1 THEN LET ama$ = "Thunder"„1876 IF akmagic = 2 THEN LET ama$ = "DETH"„1877 IF akmagic = 3 THEN LET ama$ = "Wave"„1878 IF akmagic = 4 THEN LET ama$ = "Stone"„1879 IF akmagic = 5 THEN LET ama$ = "Dragon"„1880 AM = INT(25 * RND + 35)„1881 COLOR 12: PRINT "Actung Ka attacks using "; ama$; " !! You lose "; AM; "hit points !!": h = h - AM„1882 GOTO 1001„1890 IF M < 100 THEN PRINT "You don't have enough magic to cast this spell !": GOTO 1001„1891 M = M - 100„1892 MD = INT(30 * RND + 50)„1893 COLOR 10: PRINT "You cast the spell of "; MTHREE$; " !! Actung Ka looses "; MD; " hit points !!": ACTUNG = ACTUNG - MD„1894 akmagic = INT(1 * RND + 4)„1895 IF akmagic = 1 THEN LET ama$ = "Thunder"„1896 IF akmagic = 2 THEN LET ama$ = "DETH"„1897 IF akmagic = 3 THEN LET ama$ = "Wave"„1898 IF akmagic = 4 THEN LET ama$ = "Stone"„1899 IF akmagic = 5 THEN LET ama$ = "Dragon"„1900 AM = INT(30 * RND + 40)„1901 COLOR 12: PRINT "Actung Ka attacks using "; ama$; " !! You lose "; AM; "hit points !!": h = h - AM„1902 GOTO 1001„2000 PRINT : COLOR 14: PRINT "You take 1 healing potion...all HP and MP recovered !"„2001 HE = HE - 1: AH = MH - h: h = h + AH: MH = MM - M: M = M + MH„2002 GOTO 1001„„Victory:„CLS : COLOR 10„PRINT "     Congratulations ... you have done it...you have defeated Actung Ka, and you"„PRINT "have regained control over the runes..."„COLOR 15: PRINT "King:  Ah you are indeed a great warrior, with such courage and "„COLOR 15: PRINT "       determination, I offer you my daughter's hand in marriage."„COLOR 7: PRINT "You:  Your majesty, it would be an honor to marry your daughter.  I"„COLOR 7: PRINT "      take very good care of her."„COLOR 15: PRINT "King:  My son, welcome to the family...I will now use the rune"„„„Save:„OPEN "PLAYER.DAT" FOR OUTPUT AS #1„PRINT #1, h„PRINT #1, MH„PRINT #1, M„PRINT #1, MM„PRINT #1, HE„PRINT #1, MONEY„PRINT #1, LU„PRINT #1, L„PRINT #1, X„PRINT #1, MONE$„PRINT #1, MTWO$„PRINT #1, MTHREE$„CLOSE #1„GOTO 49„„load:„OPEN "PLAYER.DAT" FOR INPUT AS #1„INPUT #1, h„INPUT #1, MH„INPUT #1, M„INPUT #1, MM„INPUT #1, HE„INPUT #1, MONEY„INPUT #1, LU„INPUT #1, L„INPUT #1, X„INPUT #1, MONE$„INPUT #1, MTWO$„INPUT #1, MTHREE$„CLOSE #1„GOTO 49„„ENDGAME:„„Creative Computing             FOUR IN A ROW                  FOUR,IN,ROW,CONNECT            Unknown Date (00:00:00)QB, QBasic             146  3459     FIAR.BAS    10 PRINT TAB(22); "FOUR IN A ROW"„20 PRINT TAB(20); "CREATIVE COMPUTING"„30 PRINT TAB(18); "MORRISTOWN, NEW JERSEY"„40 PRINT : PRINT : PRINT„100 DIM B$(8, 8), L(8), S(4), F(4)„110 DIM V(16), N(4)„130 DATA 1,100,500,1E20,1,800,4000,1E20„140 DATA 1,75,900,1E18,1,450,3000,1E18„150 FOR Z1 = 1 TO 16: READ V(Z1): NEXT Z1„160 PRINT "THE GAME OF FOUR IN A ROW"„170 INPUT "DO YOU WANT INSTRUCTIONS"; A$„180 IF A$ = "NO" THEN 270„190 IF A$ = "YES" THEN 210„200 PRINT "YES OR NO": GOTO 170„210 PRINT "THE GAME CONSISTS OF STACKING X'S"„220 PRINT "AND O'S (THE COMPUTER HAS O) UNTIL"„230 PRINT "ONE OF THE PLAYER'S GETS FOUR IN A"„240 PRINT "ROW VERTICALLY, HORIZONTALLY, OR "„250 PRINT "DIAGONALLY."„260 PRINT : PRINT„270 X$ = "X": O$ = "O"„280 FOR I = 1 TO 8: FOR J = 1 TO 8: B$(I, J) = "-": NEXT J: NEXT I„290 FOR Z1 = 1 TO 8: L(Z1) = 0: NEXT Z1„300 INPUT "DO YOU WANT TO GO FIRST"; A$„310 IF A$ = "NO" THEN 610„320 GOSUB 340„330 GOTO 450„340 FOR I = 8 TO 1 STEP -1„350 FOR J = 1 TO 8„360 PRINT "  "; B$(I, J);„370 NEXT J„380 PRINT„390 NEXT I„400 PRINT " ";„410 FOR I = 1 TO 8: PRINT I; : NEXT I„420 PRINT : PRINT„430 RETURN„440 PRINT "ILLEGAL MOVE, TRY AGAIN."„450 INPUT "A NUMBER BETWEEN 1 AND 8"; M„460 M = INT(M)„470 IF M < 1 OR M > 8 THEN 440„480 L = L(M)„490 IF L > 7 THEN 440„500 L(M) = L + 1: L = L + 1„510 B$(L, M) = X$„520 PRINT„530 GOSUB 340„540 P$ = X$„550 GOSUB 1240„560 FOR Z = 1 TO 4„570 IF S(Z) < 4 THEN 600„580 PRINT "Y O U   W I N !!!"„590 GOTO ENDGAME„600 NEXT Z„610 M9 = 0: V1 = 0„620 N1 = 1„630 FOR M4 = 1 TO 8„640 L = L(M4) + 1„650 IF L > 8 THEN 1080„660 V = 1„670 P$ = O$: W = 0„680 M = M4„690 GOSUB 1240„700 FOR Z1 = 1 TO 4: N(Z1) = 0: NEXT Z1„710 FOR Z = 1 TO 4„720 S = S(Z)„730 IF S - W > 3 THEN 1130„740 T = S + F(Z)„750 IF T < 4 THEN 780„760 V = V + 4„770 N(S) = N(S) + 1„780 NEXT Z„790 FOR I = 1 TO 4„800 N = N(I) - 1„810 IF N = -1 THEN 840„820 I1 = 8 * W + 4 * SGN(N) + I„830 V = V + V(I1) + N * V(8 * W + I)„840 NEXT I„850 IF W = 1 THEN 880„860 W = 1: P$ = X$„870 GOTO 690„880 L = L + 1„920 IF L > 8 THEN 1020„930 GOSUB 1240„940 FOR Z = 1 TO 4„950 IF S(Z) > 3 THEN V = 2„960 NEXT Z„1020 IF V < V1 THEN 1080„1030 IF V > V1 THEN N1 = 1: GOTO 1060„1040 N1 = N1 + 1„1050 IF RND(1) > 1 / N1 THEN 1080„1060 V1 = V„1070 M9 = M4„1080 NEXT M4„1090 IF M9 <> 0 THEN 1120„1100 PRINT "T I E   G A M E ..."„1110 GOTO ENDGAME„1120 M = M9„1130 PRINT "COMPUTER PICKS COLUMN "; M: PRINT„1140 L = L(M) + 1: L(M) = L(M) + 1„1150 B$(L, M) = O$„1160 P$ = O$: GOSUB 340„1170 GOSUB 1240„1180 FOR Z = 1 TO 4„1190 IF S(Z) < 4 THEN 1220„1200 PRINT "C O M P U T E R   W I N S !!!"„1210 GOTO ENDGAME„1220 NEXT Z„1230 GOTO 450„1240 Q$ = X$„1250 IF P$ = X$ THEN Q$ = O$„1260 D2 = 1: D1 = 0„1270 Z = 0„1280 GOSUB 1360„1290 D1 = 1: D2 = 1„1300 GOSUB 1360„1310 D2 = 0: D1 = 1„1320 GOSUB 1360„1330 D2 = -1: D1 = 1„1340 GOSUB 1360„1350 RETURN„1360 D = 1: S = 1„1370 T = 0„1380 Z = Z + 1„1390 C = 0„1400 FOR K = 1 TO 3„1410 M5 = M + K * D1: L1 = L + K * D2„1420 IF M5 < 1 OR L1 < 1 OR M5 > 8 OR L1 > 8 THEN 1510„1430 B$ = B$(L1, M5)„1440 IF C = 0 THEN 1480„1450 IF B$ = Q$ THEN K = 3: GOTO 1510„1460 T = T + 1„1470 GOTO 1510„1480 IF B$ = P$ THEN S = S + 1: GOTO 1510„1490 C = 1„1500 GOTO 1450„1510 NEXT K„1520 IF D = 0 THEN 1550„1530 D = 0: D1 = -D1: D2 = -D2„1540 GOTO 1390„1550 S(Z) = S„1560 F(Z) = T„1570 RETURN„„ENDGAME:„„Unknown Author(s)              BATTLE OF NUMBERS GAME         BATTLE,NUMBER,GAME             Unknown Date (00:00:00)QB, QBasic             86   3262     BATTLE.BAS  5 '----------- PC BATTLE OF NUMBERS GAME ------------„8 '„10 KEY OFF: CLS„20 DEFINT C, I, M, P, T, X„30 RANDOMIZE VAL(RIGHT$(TIME$, 2))„40 M = INT(4 * RND + 5)„50 T = INT(19 * RND + 17)„55 LOCATE 25, 25„60 PRINT CHR$(16); CHR$(16); CHR$(16); " THE BATTLE OF NUMBERS ";„70 PRINT CHR$(17); CHR$(17); CHR$(17);„75 LOCATE 1, 1„80 PRINT "THIS GAME PITS YOU AGAINST THE PC IN A TEST OF ";„90 PRINT "MATHMATICAL SKILL. TWO NUMBERS,"„100 PRINT "ONE SEVERAL TIMES LARGER THAN THE OTHER,HAVE ";„110 PRINT "BEEN SELECTED AT RANDOM. BY TURNS"„120 PRINT "BOTH YOU AND THE COMPUTER SUBTRACT AN INTERGER ";„130 PRINT "BETWEEN 1 AND";„140 COLOR 31, 0: PRINT M; : COLOR 7, 0: PRINT "FROM THE TOTAL"„150 PRINT "LISTED BELOW UNTIL ZERO IS LEFT. WHOEVER MUST ";„160 PRINT "MAKE THE FINAL SUBTRACTION IS THE"„170 PRINT "LOSER. UNLESS YOU EMPLOY A RATIONAL STRATEGY,";„180 PRINT " THE COMPUTER WILL TROUNCE YOU"„190 PRINT "EVERY TIME, AND GLOAT ABOUT IT, TOO. ";„200 PRINT "THE FIRST TURN IS YOURS -- GOOD LUCK!"„210 PRINT CHR$(201); STRING$(28, 205); CHR$(203);„220 PRINT STRING$(20, 205); CHR$(203); STRING$(28, 205); CHR$(187);„230 PRINT CHR$(186); TAB(30); CHR$(186); TAB(38);„240 PRINT "TOTAL"; TAB(51); CHR$(186); TAB(80); CHR$(186);„250 PRINT CHR$(186); TAB(30); CHR$(199);„260 PRINT STRING$(20, 196); CHR$(182); TAB(80); CHR$(186);„270 FOR I = 10 TO 22„280    LOCATE I, 1„290    PRINT CHR$(186); TAB(30); CHR$(186); TAB(51);„300    PRINT CHR$(186); TAB(80); CHR$(186);„310 NEXT I„315 PRINT CHR$(200); STRING$(28, 205); CHR$(202);„317 PRINT STRING$(20, 205); CHR$(202); STRING$(28, 205); CHR$(188);„320 PC$ = CHR$(19) + " PC WINS " + CHR$(19)„330 PLAYER$ = CHR$(19) + " YOU WIN " + CHR$(19)„340 LOCATE 10, 40: PRINT T„350 '„355 '----------- MAIN STRATEGY LOOP ------------„356 '„360 FOR I = 10 TO 100 STEP 2„370    GOSUB 600'PICK UP PLAYER INPUT„380    T = T - P: LOCATE I + 1, 40: PRINT T;„390    IF T = 0 THEN WIN$ = PC$: GOTO 480„400    C = T - ((M + 1) * INT((T - 1) / (M + 1)) + 1)„410    IF C = 0 THEN C = INT(1 + M * RND)„420    IF T = 1 THEN C = 1„430    T = T - C„440    LOCATE I + 1, 58: PRINT "PC SUBTRACTS "; C;„450    LOCATE I + 2, 40: PRINT T;„460    IF T = 0 THEN WIN$ = PLAYER$: GOTO 480„470 NEXT I„475 '„476 '--- ANNOUNCE WINNER, SOUND OFF, DISPLAY OPTIONS ---„477 '„480 COLOR 0, 7: LOCATE 8, 31: PRINT STRING$(4, 32); WIN$; STRING$(5, 32)„482 FOR K = 1 TO 2„484    FOR J = 3000 TO 400 STEP -300„486    SOUND J, .5„488 NEXT J, K„490 COLOR 7, 0: LOCATE 25, 17„500 PRINT "PRESS R TO RUN PROGRAM AGAIN, Q TO QUIT GAME";„520 WHILE (X$ <> "q" AND X$ <> "Q")„530    X$ = INPUT$(1)„540    IF (X$ = "R" OR X$ = "r") THEN CLEAR : GOTO 10„570 WEND„580 CLS : RUN "GAMEMENU.EXE"„585 '„586 '------------ PLAYER-INPUT SUBROUTINE -------------„590 '„600 X = 100„610 WHILE 1„620    LOCATE I, 7, 1: PRINT "YOU SUBTRACT? ";„625    P = VAL(INPUT$(1)): PRINT P: LOCATE , , 0„630    IF P >= 1 AND P <= M AND P <= T THEN GOTO 690„640    IF M < T THEN X = M ELSE X = T„650    BEEP: LOCATE 25, 11: COLOR 15, 0„660    PRINT "IMPROPER INPUT. PLEASE ENTER AN INTERGER IN THE RANGE 1 -"; X;„670    COLOR 7, 0: LOCATE I, 7: PRINT STRING$(18, 32)„680 WEND„690 IF X < 100 THEN KEY ON: KEY OFF„700 RETURN„„Unknown Author(s)              THE GUESSING GAME              GUESSING,GAME,HANGMAN          Unknown Date (00:00:00)QB, QBasic             71   2047     GUESS.BAS   10 CLS : LOCATE 9, 10„20 PRINT "1) USER TO GUESS COMPUTER'S WORD"„30 PRINT TAB(10); "2) ONE PLAYER TO GUESS ANOTHER PLAYER'S WORD"„40 PRINT TAB(10); "3) EXIT PROGRAM"„50 PRINT TAB(10); "   ENTER SELECTION "„60 PICK$ = INKEY$: IF PICK$ = "" THEN 60„70 P = VAL(PICK$): IF P < 1 OR P > 3 THEN 10„80 ON P GOSUB 100, 200, 999„90 GOTO 10„100 REM„110 REM**** WORD INPUT BY COMPUTER ****„120 REM„130 RANDOMIZE TIMER: RESTORE„140 FOR I = 1 TO INT(RND * 30 + 1)„150    READ WORD$„160 NEXT I„170 GOSUB 400„180 RETURN„200 REM„210 REM**** WORD ENTERED BY PLAYER ONE ****„220 REM„230 PRINT "TYPE IN A WORD, FOLLOWED IMMEDIATELY BY AN ASTERISK (*)"„240 WORD$ = "": T$ = ""„250 WHILE T$ <> "*"„260    T$ = INKEY$: IF T$ = "" THEN 260„270    WORD$ = WORD$ + T$„280    PRINT "*";„290 WEND„300 WORD$ = LEFT$(WORD$, LEN(WORD$) - 1)„310 GOSUB 400„320 RETURN„400 REM„410 REM**** GUESS ROUTINE ****„420 REM„430 CLS : LOCATE 6, 10„440 L = LEN(WORD$): G = 1„450 PRINT "THE WORD HAS"; L; "LETTERS"„460 LOCATE 10, 10„470 GUESS$ = STRING$(L, 221)„480 PRINT GUESS$„490 WHILE G < 11„500      LOCATE 18, 10: PRINT "THIS IS GUESS #"; G; "OF 10"„510      LOCATE 19, 10: INPUT "GUESS A LETTER"; G$„520      FOR J = 1 TO L„530         IF MID$(WORD$, J, 1) <> G$ THEN 550 ELSE MID$(GUESS$, J, 1) = G$„540         LOCATE 10, 10: PRINT GUESS$„550      NEXT J„560      G = G + 1„570      IF GUESS$ = WORD$ THEN G = 11„580 WEND„590 LOCATE 14, 10„600 IF GUESS$ = WORD$ THEN PRINT " Y O U  W I N " ELSE PRINT "YOU LOSE...THE WORD WAS "; WORD$„610 FOR I = 1 TO 3000: NEXT I: REM DELAY„620 RETURN„700 REM„710 REM**** PROGRAM DATA ****„720 REM„730 DATA COMPUTER, DISKETTE, BYTE, BINARY, STRING, GRAPHICS„740 DATA VARIABLE, SUBROUTINE, FUNCTION, NUMERIC, LETTER, MONITOR„750 DATA PROGRAM, LOOPS, SYNTAX, ERRORS, TESTING, MOUSE„760 DATA KEYBOARD, CONTROL, GAMES, GUESS, DELETE, ENTER, DISPLAY„770 DATA PRINTER, DRIVES, HARDWARE, SOFTWARE, MODEM„999 REM„1000 REM**** PROGRAM EXIT ROUTINE ****„1010 REM„1020 CLS„1030 END„„„„„Unknown Author(s)              SWAT THE FLYS                  SWAT,FLYS,CGA                  Unknown Date (00:00:00)QB, QBasic             173  4742     SWATFLYS.BAS10 '*****************„20 '**     FLY     **„30 '*****************„40 '„50 CLEAR„60 GOSUB 1730„70 SCREEN 1„80 KEY OFF„90 CLS„100 COLOR 0, 0„110 OPTION BASE 1„120 DEFINT X-Y„130 DIM FLY0(21), FLY1(21), FLY2(21)„140 DIM SWAT(714)„150 DIM X(3), Y(3)„160 DELAY = 3000„170 '„180 ' BUILD THE FLY IMAGES„190 BODY$ = "c1u5be1d6r1u6bf1d5"„200 URWING$ = "c3bu3br1e3r1g3r1e3"„210 ULWING$ = "bg3bl7h3l1f3l1h3"„220 DRWING$ = "c3br6h3l1f3l1h3"„230 DLWING$ = "bl5g3l1e3l1g3"„240 DRAW BODY$ + URWING$ + ULWING$„250 DRAW "bd20br6"„260 DRAW BODY$ + DRWING$ + DLWING$„270 GET (131, 91)-(152, 103), FLY0„280 GET (151, 91)-(172, 103), FLY1„290 GET (151, 105)-(172, 117), FLY2„300 '„310 ' BUILD THE SWATTER IMAGE„320 CLS„330 LINE (0, 50)-(75, 135), 3, BF„340 FOR X = 5 TO 65 STEP 10„350 FOR Y = 55 TO 125 STEP 10„360 LINE (X, Y)-(X + 5, Y + 5), 0, BF„370 NEXT Y, X„380 FOR Y = 106 TO 135„390 IF Y < 111 THEN CLR = 3 ELSE CLR = 0„410 NEXT Y„420 LINE (30, 136)-(45, 199), 1, BF„430 GET (0, 50)-(75, 199), SWAT„440 '„450 ' DRAW THE SCREEN BORDER„460 CLS„470 LINE (0, 0)-(319, 199), 2, BF„480 LINE (9, 9)-(310, 190), 3, BF„490 '„500 ' NEXT FLY APPEARS„510 LINE (15, 15)-(304, 184), 0, BF„520 FOR I = 1 TO 7 + 5 * RND„530 FLY = INT(3 * RND + 1)„540 BUZZ = 0„550 SOUND 47, 0„560 SOUND 65 + 7 * RND, 999„570 WHILE BUZZ < DELAY„580 PUT (74 * FLY, 67), FLY1, PSET„590 PUT (74 * FLY, 67), FLY2, PSET„600 BUZZ = BUZZ + 99„610 WEND„620 SOUND 47, 0„630 PUT (74 * FLY, 67), FLY0, PSET„640 NEXT I„650 '„660 ' SWATTERS SCHWAAPF ONTO SCREEN„670 FOR SWIPE = 1 TO 3„680 SOUND 999, 1„690 PUT (87 * SWIPE - 51, 35), SWAT„700 NEXT SWIPE„710 '„720 ' HOW WELL DID YOU FOLLOW THE FLY?„730 K$ = INKEY$„740 IF K$ <> "" THEN 730„750 LOCATE 3, 7„760 PRINT "CHECK WHICH SWATTER (1,2,3) ?"„770 K$ = INKEY$„775 IF K$ = CHR$(27) THEN CLS : END„780 IF K$ = "" THEN 770„790 IF K$ <> "1" AND K$ <> "2" AND K$ <> "3" THEN 770„800 GUESS = VAL(K$)„810 LINE (87 * GUESS - 51, 35)-(87 * GUESS + 24, 184), 0, BF„820 IF GUESS <> FLY THEN 1260„830 '„840 ' ANOTHER ONE BYTES THE DUST„850 DELAY = .7370001 * DELAY„860 GOSUB 1490„870 LOCATE 3, 7„880 PRINT "GOT IT !!!"; TAB(37);„890 SPOT = 74 * GUESS + 9„900 FOR I = 0 TO 40„910 FREQ = 99 * SIN(2.1 - I / 17) ^ 3 + 678„920 SOUND 99, 0„930 SOUND FREQ, 2„950 CLR = INT(3 * RND + 1)„960 DX = INT(9 * RND - 4)„970 DY = INT(9 * RND - 4)„990 NEXT I„1000 LINE (15, 15)-(304, 184), 0, BF„1010 IF RANK = 99 THEN 1620„1020 IF RANK <> 11 THEN 1100„1030 '„1040 ' YOU MADE IT PAST THE FIRST LEVEL OF PROFICIENCY„1050 RANK = 1„1060 LINE (15, 15)-(304, 184), 0, BF„1070 LOCATE 12, 4„1080 PRINT "YOU JUST MADE 'SENIOR DE-BUGGER'!!!"„1090 PLAY "MF O3 T200 L5 MS cde.cffcd.cde.cffcd..."„1100 IF RANK <> 12 THEN 1180„1110 '„1120 ' YOU MADE IT PAST THE SECOND LEVEL OF PROFICIENCY„1130 RANK = 2„1140 LINE (15, 15)-(304, 184), 0, BF„1150 LOCATE 12, 4„1160 PRINT "WOW! WHAT A PROFESSIONAL! BUZZ ON!";„1170 PLAY "MF O3 T200 L5 MS ccg.ccg.efedccffcd..."„1180 LINE (15, 15)-(304, 184), 0, BF„1190 LOCATE 12, 4„1200 PRINT "OH OH! HERE COMES A FASTER FLY ...";„1210 FOR I = 1 TO 999„1220 NEXT I„1230 GOTO 510„1240 '„1250 ' MISSED IT„1260 DELAY = 1.47 * DELAY„1270 IF DELAY > 3000 THEN DELAY = 3000„1280 GOSUB 1490„1290 LINE (87 * FLY - 51, 35)-(87 * FLY + 24, 184), 0, BF„1300 LOCATE 3, 7„1310 PRINT "WHOOPS, IT GOT AWAY."; TAB(37);„1320 SOUND 57, 47„1330 FOR I = 1 TO 100„1340 PUT (74 * FLY, 67), FLY1, PSET„1350 PUT (74 * FLY, 67), FLY2, PSET„1360 NEXT I„1370 LINE (15, 15)-(304, 184), 0, BF„1380 LOCATE 12, 7„1390 IF DELAY = 3000 THEN MISS$ = "HERE COMES ANOTHER ONE ..."„1400 IF DELAY < 3000 THEN MISS$ = "HERE COMES A SLOWER FLY ..."„1410 PRINT MISS$;„1420 IF SPEED < 9000 THEN RANK = 1„1430 IF SPEED < 8000 THEN RANK = 0„1440 FOR I = 1 TO 999„1450 NEXT I„1460 GOTO 510„1470 '„1480 ' COMPUTE SCORE AND RANK„1490 SPEED = (3000 - DELAY) * 10 / 3„1500 IF SPEED < 0 THEN SPEED = 0„1510 LOCATE 25, 5„1520 PRINT USING "SPEED = ####"; SPEED;„1530 IF SPEED > RECORD THEN RECORD = SPEED„1540 LOCATE 25, 22„1550 PRINT USING "RECORD = ####"; RECORD;„1560 IF SPEED > 8000 AND RANK < 1 THEN RANK = 11„1570 IF SPEED > 9000 AND RANK < 2 THEN RANK = 12„1580 IF SPEED > 9999 THEN RANK = 99„1590 RETURN„1600 '„1610 ' BEST SCORE POSSIBLE!„1620 LOCATE 10, 5„1630 PRINT "YOU DID IT!!! NO BUGS LEFT!!!"„1640 LOCATE 12, 5„1650 PRINT "WELCOME TO THE S.W.A.T TEAM !"„1660 PLAY "T169 L9 MS abcdefgacegecacgfedfdfdgdccedabbcaegfc"„1670 BGD = INT(RND * 6)„1680 PLT = INT(RND * 2)„1690 COLOR BGD, PLT„1700 GOTO 1660„1710 '„1720 ' SUBROUTINE RESET RANDOM NUMBER SEQUENCE„1730 RANDOMIZE VAL(MID$(TIME$, 4, 2) + RIGHT$(TIME$, 2))„1740 RETURN„„The ABC Programmer             OTHELLO REVISION               OTHELLO,REVISION,EGA,VGA       Year of 1995 (00:00:00)QB, QBasic             376  9307     OTHELLO.BAS ' Othello Revision by William Yu 1995„' This game requires EGA or VGA„' You can modify this so it can run on any screen mode you wish„' I haven't documented this game because I'm too lazy, and besides„'   that, I don't know what half of my program means! :)„' To change user/computer colors you have to change the variables„'   PC and PLAYERC and modify some of the other code to match up„'   with your selected color.„' Enjoy this game, the computer does random moves so it'll be a snap„'  to kick its butt.  Modify it so the computer at least has a chance.„'  I don't know much on strategy so I don't know how to make the computer„'  think for itself.„' I always program things in a rush, so don't expect too much from it.„„DEFINT A-Z„CLS„PRINT "Othello Revision by William Yu 1995": PRINT„PRINT "Select Video Type"„PRINT„PRINT "1. EGA"„PRINT "2. VGA"„LOCATE , , 1„DO„  G$ = INPUT$(1)„LOOP UNTIL G$ = "1" OR G$ = "2"„IF G$ = "1" THEN SCREEN 7„IF G$ = "2" THEN SCREEN 13„„BEGINGAME:„X = 0: Y = 0: W = 230: Z = 190„IF G$ = "2" THEN„FOR C = 16 TO 31„  LINE (X, Y)-(W, Z), C, B„  X = X + 1: Y = Y + 1: W = W - 1: Z = Z - 1„NEXT C„ELSE„  LINE (15, 15)-(215, 175), 15, B„  LINE (14, 14)-(216, 176), 7, B„  LINE (13, 13)-(217, 177), 8, B„END IF„IF G$ = "2" THEN PAINT (150, 100), 7, 31 ELSE PAINT (150, 100), 7, 15„FOR X = 35 TO 205 STEP 20„  LINE (X, 15)-(X, 175), 15„NEXT X„FOR Y = 31 TO 180 STEP 16„  LINE (15, Y)-(215, Y), 15„NEXT Y„PC = 12„PLAYERC = 9„CIRCLE (105, 87), 7, PLAYERC„PAINT (105, 87), PLAYERC„CIRCLE (125, 87), 7, PC„PAINT (125, 87), PC„CIRCLE (105, 103), 7, PC„PAINT (105, 103), PC„CIRCLE (125, 103), 7, PLAYERC„PAINT (125, 103), PLAYERC„„LOCATE 2, 32: COLOR 15: PRINT "OTHELLO"„LINE (95, 79)-(115, 95), 0, B„X = 95: Y = 79: W = 115: Z = 95„„CIRCLE (275, 30), 7, PLAYERC„PAINT (275, 30), PLAYERC„LOCATE 9, 32: PRINT "PLAYERS"„LOCATE 11, 31: PRINT "1. ONE"„LOCATE 13, 31: PRINT "2. TWO"„DO„  A$ = INPUT$(1)„LOOP UNTIL A$ = "1" OR A$ = "2"„LOCATE 9, 32: PRINT SPACE$(7)„LOCATE 11, 31: PRINT SPACE$(6)„LOCATE 13, 31: PRINT SPACE$(6)„IF A$ = "1" THEN PLAYER = 1 ELSE PLAYER = 2„LOCATE 20, 32: PRINT CHR$(34); : COLOR 10: PRINT "P"; : COLOR 15: PRINT CHR$(34); "ass"„LOCATE 22, 32: PRINT CHR$(34); : COLOR 10: PRINT "Q"; : COLOR 15: PRINT CHR$(34); "uit"„BOX = 4„„DO„  IF PLAYERC = 12 AND PLAYER = 1 THEN GOSUB COMPUTER„  V$ = INKEY$„    IF V$ = CHR$(0) + "P" THEN GOSUB DOWN„    IF V$ = CHR$(0) + "K" THEN GOSUB LEFT„    IF V$ = CHR$(0) + "M" THEN GOSUB RIGHT„    IF V$ = CHR$(0) + "H" THEN GOSUB UP„    IF UCASE$(V$) = "P" THEN SWAP PLAYERC, PC: PAINT (275, 30), PLAYERC, 0„    IF UCASE$(V$) = "Q" THEN GOTO OTHELLOEND„    IF V$ = CHR$(13) THEN GOSUB PUTSQUARE„    IF V$ = CHR$(27) THEN GOTO OTHELLOEND„LOOP„„LEFT:„  IF X = 15 THEN RETURN„  LINE (X, Y)-(W, Z), 15, B„  X = X - 20: W = W - 20„  LINE (X, Y)-(W, Z), 0, B„RETURN„„RIGHT:„  IF W = 215 THEN RETURN„  LINE (X, Y)-(W, Z), 15, B„  X = X + 20: W = W + 20„  LINE (X, Y)-(W, Z), 0, B„RETURN„„DOWN:„  IF Z = 175 THEN RETURN„  LINE (X, Y)-(W, Z), 15, B„  Y = Y + 16: Z = Z + 16„  LINE (X, Y)-(W, Z), 0, B„RETURN„„UP:„  IF Y = 15 THEN RETURN„  LINE (X, Y)-(W, Z), 15, B„  Y = Y - 16: Z = Z - 16„  LINE (X, Y)-(W, Z), 0, B„RETURN„„COMPUTER:„LOCATE 9, 31: COLOR 14: PRINT "COMPUTING"„BACKX = X„BACKY = Y„AGAIN = 0„DO„  V$ = INKEY$„  IF V$ = CHR$(27) THEN GOTO DECIDEWINNER„  RANDOMIZE TIMER„  RNY = INT(RND * 10) + 1„  RNX = INT(RND * 10) + 1„  IF RNY = 1 THEN Y = 15 ELSE Y = 15 + ((RNY - 1) * 16)„  IF RNX = 1 THEN X = 15 ELSE X = 15 + ((RNX - 1) * 20)„  GOSUB PUTSQUARE„  AGAIN = AGAIN + 1„  IF AGAIN = 250 THEN„    LOCATE 9, 31: COLOR 11: PRINT "  PASS!  "„    SLEEP 1„    SWAP PLAYERC, PC„    PAINT (275, 30), PLAYERC, 0„    LOCATE 9, 31: PRINT SPACE$(9)„    X = BACKX„    Y = BACKY„    RETURN„  END IF„LOOP UNTIL VALID = 1„IF VALID <> 1 THEN„  FOR Y = 15 TO 170 STEP 16„    FOR X = 15 TO 200 STEP 20„      GOSUB PUTSQUARE„      IF VALID = 1 THEN EXIT FOR„    NEXT X„    IF VALID = 1 THEN EXIT FOR„  NEXT Y„  X = BACKX„  Y = BACKY„END IF„LOCATE 9, 31: PRINT SPACE$(9)„X = BACKX„Y = BACKY„RETURN„„PUTSQUARE:„  VALID = -1„  Colour = POINT(X + 10, Y + 10)„  IF Colour <> 7 THEN„    IF PLAYERC = 12 AND PLAYER = 1 THEN„      RETURN„    ELSE„      LOCATE 10, 31: COLOR 10: PRINT "OCCUPIED!": SLEEP 1: LOCATE 10, 31: PRINT SPACE$(9): RETURN„    END IF„  END IF„    ' Check side on Right„    N = X + 20„    M = N„    C = 0„    FOR R = N TO 200 STEP 20„      C = POINT(R + 10, Y + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R - 20„      FOR R = M TO N STEP 20„        PAINT (R + 10, Y + 10), PLAYERC, 7„      NEXT R„    END IF„    ' Check side on Left„    N = X - 20„    M = N„    C = 0„    FOR R = N TO 10 STEP -20„      C = POINT(R + 10, Y + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R + 20„      FOR R = N TO M STEP 20„        PAINT (R + 10, Y + 10), PLAYERC, 7„      NEXT R„    END IF„    ' Check Up„    N = Y - 18„    M = N„    C = 0„    FOR R = N TO 10 STEP -16„      C = POINT(X + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R + 16„      FOR R = N TO M STEP 16„        PAINT (X + 10, R + 10), PLAYERC, 7„      NEXT R„    END IF„    ' Check Down„    N = Y + 14„    M = N„    C = 0„    FOR R = N TO 170 STEP 16„      C = POINT(X + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R - 14„      FOR R = M TO N STEP 16„        PAINT (X + 10, R + 10), PLAYERC, 7„      NEXT R„    END IF„    ' Check Diagonals„    ' Right & Down„    N = Y + 14„    F = X + 20„    M = N„    G = F„    C = 0„    FOR R = N TO 170 STEP 16„      C = POINT(F + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„      F = F + 20„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R - 14„      F = X + 20„      FOR R = M TO N STEP 16„        PAINT (F + 10, R + 10), PLAYERC, 7„        F = F + 20„      NEXT R„    END IF„    ' Right & Up„    N = Y - 18„    F = X - 20„    M = N„    G = F„    C = 0„    FOR R = N TO 10 STEP -16„      C = POINT(F + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„      F = F - 20„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R + 16„      F = F + 20„      FOR R = N TO M STEP 16„        PAINT (F + 10, R + 10), PLAYERC, 7„        F = F + 20„      NEXT R„    END IF„    ' Left & Down„    N = Y + 14„    F = X - 20„    M = N„    G = F„    C = 0„    FOR R = N TO 170 STEP 16„      C = POINT(F + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„      F = F - 20„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R - 14„      F = X - 20„      FOR R = M TO N STEP 16„        PAINT (F + 10, R + 10), PLAYERC, 7„        F = F - 20„      NEXT R„    END IF„    ' Left & Up„    N = Y - 18„    F = X + 20„    M = N„    G = F„    C = 0„    FOR R = N TO 10 STEP -16„      C = POINT(F + 10, R + 10)„      IF C = 7 THEN EXIT FOR„      IF C = PLAYERC THEN EXIT FOR„      F = F + 20„    NEXT R„    IF C = PLAYERC AND N <> R THEN„      VALID = 1„      N = R + 16„      F = F - 20„      FOR R = N TO M STEP 16„        PAINT (F + 10, R + 10), PLAYERC, 7„        F = F - 20„      NEXT R„    END IF„    IF VALID = -1 THEN„      IF PLAYER = 1 AND PLAYERC = 12 THEN„      ELSE„        LOCATE 9, 32: COLOR 14: PRINT "ILLEGAL"„        LOCATE 11, 33: PRINT "MOVE!"„        SLEEP 1„        LOCATE 9, 32: PRINT SPACE$(9)„        LOCATE 11, 33: PRINT SPACE$(5)„      END IF„      RETURN„    ELSE„      BOX = BOX + 1„    END IF„    CIRCLE (X + 10, Y + 8), 7, PLAYERC„    PAINT (X + 10, Y + 8), PLAYERC„    SWAP PLAYERC, PC„    PAINT (275, 30), PLAYERC, 0„  IF BOX = 100 THEN LOCATE 9, 31: PRINT SPACE$(9): GOTO DECIDEWINNER„RETURN„„DECIDEWINNER:„  BLUE = 0„  RED = 0„  LOCATE 20, 31: PRINT SPACE$(9)„  LOCATE 22, 31: PRINT SPACE$(9)„  LOCATE 8, 33: COLOR 10: PRINT "FINAL"„  LOCATE 10, 33: PRINT "SCORE"„  LOCATE 13, 31: COLOR 9: PRINT "BLUE:"„  LOCATE 15, 31: COLOR 12: PRINT "RED: "„  COLOR 15„  Y = 24„  DO„    FOR X = 25 TO 220 STEP 20„      CL = POINT(X, Y)„      IF CL = 9 THEN BLUE = BLUE + 1: LOCATE 13, 36: PRINT BLUE„      IF CL = 12 THEN RED = RED + 1: LOCATE 15, 36: PRINT RED„    NEXT X„    Y = Y + 16„  LOOP UNTIL Y >= 170„  COLOR 14„  IF BLUE > RED THEN LOCATE 19, 31: PRINT "BLUE WINS!"„  IF RED > BLUE THEN LOCATE 19, 31: PRINT "RED WINS!"„  IF BLUE = RED THEN LOCATE 19, 31: PRINT "IT'S A TIE"„„  LOCATE 25, 1: PRINT "ANOTHER GAME [Y/N] "; : COLOR 12„  DO„    A$ = INPUT$(1)„    ANS$ = UCASE$(A$)„  LOOP UNTIL ANS$ = "Y" OR ANS$ = "N"„  IF UCASE$(A$) = "Y" THEN CLS : GOTO BEGINGAME„„„OTHELLOEND:„SCREEN 0, 0, , 0: CLS„WIDTH 80, 25„„The ABC Programmer             X'S AND O'S                    X'S,O'S,TIC,TAC,TOE            Year of 1995 (00:00:00)QB, QBasic             705  21680    XOS.BAS     '===================================================================„'    X's and O's by William Yu 1994„'„'  Yes the basic of all basic games, this is an EGA version of„'  the popular X's and O's game (or TAC-TAC-TOE if you prefer).„'„'  WARNING:  Do not adopt this style of programming.„'            I programmed this at school.  It's really messy and„'            again I don't document much of my stuff that is„'            years old, because I don't know what half of it means.„'===================================================================„„DIM TITLE(650), TITLE2(650)„DIM X(510), O(450)„P1 = 0„P2 = 0„CLS„SCREEN 9„PALETTE 15, 0„PALETTE 8, 0„COLOR 15„PRINT "Programmed by William Yu (C) 1994  Allrights Reserved"„GET (0, 1)-(425, 12), TITLE„COLOR 8„LOCATE 1, 1: PRINT "Programmed by William Yu (C) 1994  Allrights Reserved"„GET (0, 1)-(425, 12), TITLE2„LOCATE 1, 1: PRINT SPACE$(80)„LINE (1, 1)-(640, 16), 12, BF„LINE (1, 1)-(639, 17), 4, B„PALETTE 15, 31„PUT (98, 5), TITLE2„PUT (95, 3), TITLE, OR„LINE (1, 50)-(319, 249), 10, B„LINE (105, 50)-(105, 249), 10„LINE (210, 50)-(210, 249), 10„LINE (1, 117)-(319, 117), 10„LINE (1, 185)-(319, 185), 10„LINE (17, 60)-(91, 107), 12„LINE (18, 60)-(92, 107), 12„LINE (91, 60)-(17, 107), 12„LINE (90, 60)-(16, 107), 12„CIRCLE (158, 83), 30, 14„CIRCLE (158, 83), 29, 14„GET (17, 60)-(91, 110), X„GET (124, 60)-(190, 106), O„PUT (230, 60), X: PUT (21, 128), O: PUT (122, 128), X: PUT (233, 128), O: PUT (18, 193), X„PUT (125, 193), O: PUT (228, 193), X„COLOR 12: LOCATE 8, 50: PRINT "Play Computer"„COLOR 11: LOCATE 9, 50: PRINT "Two Players"„LOCATE 10, 50: PRINT "Instructions"„LOCATE 11, 50: PRINT "Quit Tic-Tac-Toe"„R = 8„MAINMENU:„V$ = INKEY$„IF V$ = CHR$(13) THEN GOTO MAINENTER„IF V$ = CHR$(0) + "P" THEN GOSUB MAINDOWN„IF V$ = CHR$(0) + "H" THEN GOSUB MAINUP„GOTO MAINMENU„MAINUP:„COLOR 11„GOSUB MAINAREA„R = R - 1„COLOR 12„GOSUB MAINAREA„RETURN„„MAINDOWN:„COLOR 11„GOSUB MAINAREA„R = R + 1„COLOR 12„GOSUB MAINAREA„RETURN„„MAINAREA:„IF R = 12 THEN R = 8„IF R = 7 THEN R = 11„IF R = 8 THEN LOCATE 8, 50: PRINT "Play Computer"„IF R = 9 THEN LOCATE 9, 50: PRINT "Two Players"„IF R = 10 THEN LOCATE 10, 50: PRINT "Instructions"„IF R = 11 THEN LOCATE 11, 50: PRINT "Quit Tic-Tac-Toe"„RETURN„„MAINENTER:„IF R = 8 THEN GOTO PLAYCOMP„IF R = 9 THEN GOTO TWOPLAYERS„IF R = 10 THEN GOTO INSTRUCTIONS„IF R = 11 THEN GOTO TICTACQUIT„„TWOPLAYERS:„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 9, B„LINE (105, 50)-(105, 249), 9„LINE (210, 50)-(210, 249), 9„LINE (1, 117)-(319, 117), 9„LINE (1, 185)-(319, 185), 9„FOR X = 8 TO 11„  LOCATE X, 50: PRINT SPACE$(20)„NEXT X„COLOR 10„LOCATE 5, 50: PRINT "PLAYER ONE  PLAYER TWO"„LINE (380, 70)-(570, 70), 14„LINE (478, 55)-(479, 100), 14, BF„COLOR 12„LOCATE 7, 53: PRINT 0„LOCATE 7, 64: PRINT 0„PLAYER1$ = "X"„PLAYER2$ = "O"„GP = 0„„PLAYXO:„GP = GP + 1„LOCATE 12, 47: COLOR 10: PRINT "PLAYER ONE: "; : COLOR 13: PRINT PLAYER1$„LOCATE 13, 47: COLOR 2: PRINT "PLAYER TWO: "; : COLOR 13: PRINT PLAYER2$„LOCATE 6, 6: PRINT 1: LOCATE 6, 19: PRINT 2: LOCATE 6, 32: PRINT 3„LOCATE 11, 6: PRINT 4: LOCATE 11, 19: PRINT 5: LOCATE 11, 32: PRINT 6„LOCATE 16, 6: PRINT 7: LOCATE 16, 19: PRINT 8: LOCATE 16, 32: PRINT 9„IF PLAYER1$ = "X" THEN„  PLAYER = 1„ELSE„  PLAYER = 2„END IF„„CHOOSE:„IF PLAYER = 1 THEN LOCATE 15, 45: COLOR 15: PRINT "PLAYER ONE"„IF PLAYER = 2 THEN LOCATE 15, 45: COLOR 15: PRINT "PLAYER TWO"„LOCATE 17, 45: COLOR 14: PRINT "Choose a square:      ";„A$ = INPUT$(1)„IF UCASE$(A$) = "Q" THEN GOTO STATS„IF PLAYER1$ = "X" AND PLAYER = 1 THEN GOTO SELSQUARE„IF PLAYER1$ = "O" AND PLAYER = 1 THEN GOTO SELOSQUARE„IF PLAYER2$ = "O" AND PLAYER = 2 THEN GOTO SELOSQUARE„IF PLAYER2$ = "X" AND PLAYER = 2 THEN GOTO SELSQUARE„„SELSQUARE:„SELECT CASE VAL(A$)„  CASE 1„    IF SQUARE(1) = 1 THEN GOTO AGAIN„    PUT (18, 60), X, PSET„    SQUARE(1) = 1„    X(1) = 1„  CASE 2„    IF SQUARE(2) = 2 THEN GOTO AGAIN„    PUT (124, 60), X, PSET„    SQUARE(2) = 2„    X(2) = 2„  CASE 3„    IF SQUARE(3) = 3 THEN GOTO AGAIN„    PUT (230, 60), X, PSET„    SQUARE(3) = 3„    X(3) = 3„  CASE 4„    IF SQUARE(4) = 4 THEN GOTO AGAIN„    PUT (18, 125), X, PSET„    SQUARE(4) = 4„    X(4) = 4„  CASE 5„    IF SQUARE(5) = 5 THEN GOTO AGAIN„    PUT (124, 125), X, PSET„    SQUARE(5) = 5„    X(5) = 5„  CASE 6„    IF SQUARE(6) = 6 THEN GOTO AGAIN„    PUT (230, 125), X, PSET„    SQUARE(6) = 6„    X(6) = 6„  CASE 7„    IF SQUARE(7) = 7 THEN GOTO AGAIN„    PUT (18, 193), X, PSET„    SQUARE(7) = 7„    X(7) = 7„  CASE 8„    IF SQUARE(8) = 8 THEN GOTO AGAIN„    PUT (124, 193), X, PSET„    SQUARE(8) = 8„    X(8) = 8„  CASE 9„    IF SQUARE(9) = 9 THEN GOTO AGAIN„    PUT (230, 193), X, PSET„    SQUARE(9) = 9„    X(9) = 9„  CASE ELSE„AGAIN:„    LOCATE 17, 45: COLOR 14: PRINT "Choose a square (1-9): ";„    A$ = INPUT$(1)„    IF UCASE$(A$) = "Q" THEN GOTO STATS„    GOTO SELSQUARE„END SELECT„IF X(1) = 1 AND X(2) = 2 AND X(3) = 3 THEN GOTO WINX„IF X(4) = 4 AND X(5) = 5 AND X(6) = 6 THEN GOTO WINX„IF X(7) = 7 AND X(8) = 8 AND X(9) = 9 THEN GOTO WINX„IF X(1) = 1 AND X(4) = 4 AND X(7) = 7 THEN GOTO WINX„IF X(2) = 2 AND X(5) = 5 AND X(8) = 8 THEN GOTO WINX„IF X(3) = 3 AND X(6) = 6 AND X(9) = 9 THEN GOTO WINX„IF X(1) = 1 AND X(5) = 5 AND X(9) = 9 THEN GOTO WINX„IF X(3) = 3 AND X(5) = 5 AND X(7) = 7 THEN GOTO WINX„IF SQUARE(1) = 1 AND SQUARE(2) = 2 AND SQUARE(3) = 3 AND SQUARE(4) = 4 AND SQUARE(5) = 5 AND SQUARE(6) = 6 AND SQUARE(7) = 7 AND SQUARE(8) = 8 AND SQUARE(9) = 9 THEN GOTO TIE„IF PLAYER = 1 THEN PLAYER = 2: GOTO CHOOSE„IF PLAYER = 2 THEN PLAYER = 1: GOTO CHOOSE„„SELOSQUARE:„SELECT CASE VAL(A$)„  CASE 1„    IF SQUARE(1) = 1 THEN GOTO AGAINO„    PUT (18, 60), O, PSET„    SQUARE(1) = 1„    O(1) = 1„  CASE 2„    IF SQUARE(2) = 2 THEN GOTO AGAINO„    PUT (124, 60), O, PSET„    SQUARE(2) = 2„    O(2) = 2„  CASE 3„    IF SQUARE(3) = 3 THEN GOTO AGAINO„    PUT (230, 60), O, PSET„    SQUARE(3) = 3„    O(3) = 3„  CASE 4„    IF SQUARE(4) = 4 THEN GOTO AGAINO„    PUT (18, 125), O, PSET„    SQUARE(4) = 4„    O(4) = 4„  CASE 5„    IF SQUARE(5) = 5 THEN GOTO AGAINO„    PUT (124, 125), O, PSET„    SQUARE(5) = 5„    O(5) = 5„  CASE 6„    IF SQUARE(6) = 6 THEN GOTO AGAINO„    PUT (230, 125), O, PSET„    SQUARE(6) = 6„    O(6) = 6„  CASE 7„    IF SQUARE(7) = 7 THEN GOTO AGAINO„    PUT (18, 193), O, PSET„    SQUARE(7) = 7„    O(7) = 7„  CASE 8„    IF SQUARE(8) = 8 THEN GOTO AGAINO„    PUT (124, 193), O, PSET„    SQUARE(8) = 8„    O(8) = 8„  CASE 9„    IF SQUARE(9) = 9 THEN GOTO AGAINO„    PUT (230, 193), O, PSET„    SQUARE(9) = 9„    O(9) = 9„  CASE ELSE„AGAINO:„    LOCATE 17, 45: COLOR 14: PRINT "Choose a square (1-9): ";„    A$ = INPUT$(1)„    IF UCASE$(A$) = "Q" THEN GOTO STATS„    GOTO SELOSQUARE„END SELECT„IF O(1) = 1 AND O(2) = 2 AND O(3) = 3 THEN GOTO WINO„IF O(4) = 4 AND O(5) = 5 AND O(6) = 6 THEN GOTO WINO„IF O(7) = 7 AND O(8) = 8 AND O(9) = 9 THEN GOTO WINO„IF O(1) = 1 AND O(4) = 4 AND O(7) = 7 THEN GOTO WINO„IF O(2) = 2 AND O(5) = 5 AND O(8) = 8 THEN GOTO WINO„IF O(3) = 3 AND O(6) = 6 AND O(9) = 9 THEN GOTO WINO„IF O(1) = 1 AND O(5) = 5 AND O(9) = 9 THEN GOTO WINO„IF O(3) = 3 AND O(5) = 5 AND O(7) = 7 THEN GOTO WINO„IF SQUARE(1) = 1 AND SQUARE(2) = 2 AND SQUARE(3) = 3 AND SQUARE(4) = 4 AND SQUARE(5) = 5 AND SQUARE(6) = 6 AND SQUARE(7) = 7 AND SQUARE(8) = 8 AND SQUARE(9) = 9 THEN GOTO TIE„IF PLAYER = 1 THEN PLAYER = 2: GOTO CHOOSE„IF PLAYER = 2 THEN PLAYER = 1: GOTO CHOOSE„„INSTRUCTIONS:„LOCATE 20: COLOR 13: PRINT "INSTRUCTIONS:"„COLOR 15„LOCATE 21: PRINT "Use your arrow keys to select a square and place your X or O"„LOCATE 22: PRINT "Place three X's or O's diagonally, vertically or horizontally to win"„LOCATE 23: PRINT "To quit the game just press 'Q'"„GOTO MAINMENU„„WINX:„IF PLAYER1$ = "X" THEN„P1 = P1 + 1„LOCATE 7, 53: COLOR 12: PRINT P1„LOCATE 10, 51: COLOR 12: PRINT "PLAYER ONE WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„ELSE„P2 = P2 + 1„LOCATE 7, 64: COLOR 12: PRINT P2„LOCATE 10, 51: COLOR 12: PRINT "PLAYER TWO WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„END IF„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 9, B„LINE (105, 50)-(105, 249), 9„LINE (210, 50)-(210, 249), 9„LINE (1, 117)-(319, 117), 9„LINE (1, 185)-(319, 185), 9„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO PLAYXO„„WINO:„IF PLAYER1$ = "O" THEN„P1 = P1 + 1„LOCATE 7, 53: COLOR 12: PRINT P1„LOCATE 10, 51: COLOR 12: PRINT "PLAYER ONE WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„ELSE„P2 = P2 + 1„LOCATE 7, 64: COLOR 12: PRINT P2„LOCATE 10, 51: COLOR 12: PRINT "PLAYER TWO WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„END IF„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 9, B„LINE (105, 50)-(105, 249), 9„LINE (210, 50)-(210, 249), 9„LINE (1, 117)-(319, 117), 9„LINE (1, 185)-(319, 185), 9„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO PLAYXO„„TIE:„LOCATE 10, 55: COLOR 15: PRINT "IT'S A TIE!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 55: PRINT SPACE$(20)„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 9, B„LINE (105, 50)-(105, 249), 9„LINE (210, 50)-(210, 249), 9„LINE (1, 117)-(319, 117), 9„LINE (1, 185)-(319, 185), 9„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO PLAYXO„„STATS:„LINE (0, 50)-(640, 350), 0, BF„LOCATE 6, 5: COLOR 13: PRINT "STATISTICS"„GP = GP - 1„LOCATE 8, 10: COLOR 15: PRINT "GAMES PLAYED:"; GP„IF GP = 0 THEN GP = 1„AVG1 = (P1 / GP) * 100„AVG2 = (P2 / GP) * 100„LOCATE 10, 10: COLOR 10: PRINT "NUMBER OF WINS FOR PLAYER ONE:"; P1; : COLOR 2: PRINT "  PERCENTAGE:"; INT(AVG1); "%"„LOCATE 11, 10: COLOR 11: PRINT "NUMBER OF WINS FOR PLAYER TWO:"; P2; : COLOR 3: PRINT "  PERCENTAGE:"; INT(AVG2); "%"„IF P1 > P2 THEN LOCATE 13, 10: COLOR 14: PRINT "PLAYER ONE HAS MORE WINS!!!  CONGRADULATIONS!!!"„IF P1 < P2 THEN LOCATE 13, 10: COLOR 14: PRINT "PLAYER TWO HAS MORE WINS!!!  CONGRADULATIONS!!!"„IF P1 = P2 THEN LOCATE 13, 10: COLOR 14: PRINT "HEY, WHAT'DA YA KNOW, IT'S A TIE!"„WHILE INKEY$ = "": WEND„GOTO TICTACQUIT„„PLAYCOMP:„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 10, B„LINE (105, 50)-(105, 249), 10„LINE (210, 50)-(210, 249), 10„LINE (1, 117)-(319, 117), 10„LINE (1, 185)-(319, 185), 10„FOR X = 8 TO 11„  LOCATE X, 50: PRINT SPACE$(20)„NEXT X„COLOR 10„LOCATE 5, 50: PRINT "PLAYER ONE  COMPUTER"„LINE (380, 70)-(570, 70), 14„LINE (478, 55)-(479, 100), 14, BF„COLOR 12„LOCATE 7, 53: PRINT 0„LOCATE 7, 64: PRINT 0„PLAYER1$ = "X"„PLAYER2$ = "O"„GP = 0„„COMPXO:„GP = GP + 1„LOCATE 12, 47: COLOR 10: PRINT "PLAYER ONE: "; : COLOR 13: PRINT PLAYER1$„LOCATE 13, 47: COLOR 2: PRINT "COMPUTER:   "; : COLOR 13: PRINT PLAYER2$„LOCATE 6, 6: PRINT 1: LOCATE 6, 19: PRINT 2: LOCATE 6, 32: PRINT 3„LOCATE 11, 6: PRINT 4: LOCATE 11, 19: PRINT 5: LOCATE 11, 32: PRINT 6„LOCATE 16, 6: PRINT 7: LOCATE 16, 19: PRINT 8: LOCATE 16, 32: PRINT 9„IF PLAYER1$ = "X" THEN„  PLAYER = 1„ELSE„  PLAYER = 2„END IF„„COMPCHOOSE:„IF PLAYER = 1 THEN LOCATE 15, 45: COLOR 15: PRINT "PLAYER ONE    "„IF PLAYER = 2 THEN„LOCATE 15, 45: COLOR 15: PRINT "COMPUTERS TURN"„SLEEP 1„RANDOMIZE TIMER„A = INT(RND * 9) + 1„IF X(1) = 1 OR X(3) = 3 OR X(7) = 7 OR X(9) = 9 THEN A = 5„IF X(2) = 2 AND X(3) = 3 AND SQUARE(1) <> 1 THEN A = 1„IF X(1) = 1 AND X(3) = 3 AND SQUARE(2) <> 2 THEN A = 2„IF X(1) = 1 AND X(2) = 2 AND SQUARE(3) <> 3 THEN A = 3„IF X(1) = 1 AND X(5) = 5 AND SQUARE(9) <> 9 THEN A = 9„IF X(9) = 9 AND X(5) = 5 AND SQUARE(1) <> 1 THEN A = 1„IF X(1) = 1 AND X(9) = 9 AND SQUARE(5) <> 5 THEN A = 5„IF X(2) = 2 AND X(5) = 5 AND SQUARE(8) <> 8 THEN A = 8„IF X(8) = 8 AND X(5) = 5 AND SQUARE(2) <> 2 THEN A = 2„IF X(2) = 2 AND X(8) = 8 AND SQUARE(5) <> 5 THEN A = 5„IF X(3) = 3 AND X(6) = 6 AND SQUARE(9) <> 9 THEN A = 9„IF X(9) = 9 AND X(6) = 6 AND SQUARE(3) <> 3 THEN A = 3„IF X(9) = 9 AND X(3) = 3 AND SQUARE(6) <> 6 THEN A = 6„IF X(1) = 1 AND X(4) = 4 AND SQUARE(7) <> 7 THEN A = 7„IF X(1) = 1 AND X(7) = 7 AND SQUARE(4) <> 4 THEN A = 4„IF X(4) = 4 AND X(7) = 7 AND SQUARE(1) <> 1 THEN A = 1„IF X(3) = 3 AND X(5) = 5 AND SQUARE(7) <> 7 THEN A = 7„IF X(5) = 5 AND X(7) = 7 AND SQUARE(3) <> 3 THEN A = 3„IF X(3) = 3 AND X(7) = 7 AND SQUARE(5) <> 5 THEN A = 5„IF X(4) = 4 AND X(5) = 5 AND SQUARE(6) <> 6 THEN A = 6„IF X(5) = 5 AND X(6) = 6 AND SQUARE(4) <> 4 THEN A = 4„IF X(6) = 6 AND X(4) = 4 AND SQUARE(5) <> 5 THEN A = 5„IF X(9) = 9 AND X(8) = 8 AND SQUARE(7) <> 7 THEN A = 7„IF X(8) = 8 AND X(7) = 7 AND SQUARE(9) <> 9 THEN A = 9„IF X(9) = 9 AND X(7) = 7 AND SQUARE(8) <> 8 THEN A = 8„„IF O(2) = 2 AND O(3) = 3 AND SQUARE(1) <> 1 THEN A = 1„IF O(1) = 1 AND O(3) = 3 AND SQUARE(2) <> 2 THEN A = 2„IF O(1) = 1 AND O(2) = 2 AND SQUARE(3) <> 3 THEN A = 3„IF O(1) = 1 AND O(5) = 5 AND SQUARE(9) <> 9 THEN A = 9„IF O(9) = 9 AND O(5) = 5 AND SQUARE(1) <> 1 THEN A = 1„IF O(1) = 1 AND O(9) = 9 AND SQUARE(5) <> 5 THEN A = 5„IF O(2) = 2 AND O(5) = 5 AND SQUARE(8) <> 8 THEN A = 8„IF O(8) = 8 AND O(5) = 5 AND SQUARE(2) <> 2 THEN A = 2„IF O(2) = 2 AND O(8) = 8 AND SQUARE(5) <> 5 THEN A = 5„IF O(3) = 3 AND O(6) = 6 AND SQUARE(9) <> 9 THEN A = 9„IF O(9) = 9 AND O(6) = 6 AND SQUARE(3) <> 3 THEN A = 3„IF O(9) = 9 AND O(3) = 3 AND SQUARE(6) <> 6 THEN A = 6„IF O(1) = 1 AND O(4) = 4 AND SQUARE(7) <> 7 THEN A = 7„IF O(1) = 1 AND O(7) = 7 AND SQUARE(4) <> 4 THEN A = 4„IF O(4) = 4 AND O(7) = 7 AND SQUARE(1) <> 1 THEN A = 1„IF O(3) = 3 AND O(5) = 5 AND SQUARE(7) <> 7 THEN A = 7„IF O(5) = 5 AND O(7) = 7 AND SQUARE(3) <> 3 THEN A = 3„IF O(3) = 3 AND O(7) = 7 AND SQUARE(5) <> 5 THEN A = 5„IF O(4) = 4 AND O(5) = 5 AND SQUARE(6) <> 6 THEN A = 6„IF O(5) = 5 AND O(6) = 6 AND SQUARE(4) <> 4 THEN A = 4„IF O(6) = 6 AND O(4) = 4 AND SQUARE(5) <> 5 THEN A = 5„IF O(9) = 9 AND O(8) = 8 AND SQUARE(7) <> 7 THEN A = 7„IF O(8) = 8 AND O(7) = 7 AND SQUARE(9) <> 9 THEN A = 9„IF O(9) = 9 AND O(7) = 7 AND SQUARE(8) <> 8 THEN A = 8„A$ = STR$(A)„IF PLAYER2$ = "X" THEN GOTO COMPSELSQUARE„IF PLAYER2$ = "O" THEN GOTO COMPSELOSQUARE„END IF„„LOCATE 17, 45: COLOR 14: PRINT "Choose a square:      ";„A$ = INPUT$(1)„IF UCASE$(A$) = "Q" THEN GOTO COMPSTATS„IF PLAYER1$ = "X" AND PLAYER = 1 THEN GOTO COMPSELSQUARE„IF PLAYER1$ = "O" AND PLAYER = 1 THEN GOTO COMPSELOSQUARE„„COMPSELSQUARE:„SELECT CASE VAL(A$)„  CASE 1„    IF SQUARE(1) = 1 THEN GOTO COMPAGAIN„    PUT (18, 60), X, PSET„    SQUARE(1) = 1„    X(1) = 1„  CASE 2„    IF SQUARE(2) = 2 THEN GOTO COMPAGAIN„    PUT (124, 60), X, PSET„    SQUARE(2) = 2„    X(2) = 2„  CASE 3„    IF SQUARE(3) = 3 THEN GOTO COMPAGAIN„    PUT (230, 60), X, PSET„    SQUARE(3) = 3„    X(3) = 3„  CASE 4„    IF SQUARE(4) = 4 THEN GOTO COMPAGAIN„    PUT (18, 125), X, PSET„    SQUARE(4) = 4„    X(4) = 4„  CASE 5„    IF SQUARE(5) = 5 THEN GOTO COMPAGAIN„    PUT (124, 125), X, PSET„    SQUARE(5) = 5„    X(5) = 5„  CASE 6„    IF SQUARE(6) = 6 THEN GOTO COMPAGAIN„    PUT (230, 125), X, PSET„    SQUARE(6) = 6„    X(6) = 6„  CASE 7„    IF SQUARE(7) = 7 THEN GOTO COMPAGAIN„    PUT (18, 193), X, PSET„    SQUARE(7) = 7„    X(7) = 7„  CASE 8„    IF SQUARE(8) = 8 THEN GOTO COMPAGAIN„    PUT (124, 193), X, PSET„    SQUARE(8) = 8„    X(8) = 8„  CASE 9„    IF SQUARE(9) = 9 THEN GOTO COMPAGAIN„    PUT (230, 193), X, PSET„    SQUARE(9) = 9„    X(9) = 9„  CASE ELSE„COMPAGAIN:„  IF PLAYER = 2 THEN„  LOCATE 15, 45: COLOR 15: PRINT "COMPUTERS TURN"„  RANDOMIZE TIMER„  A = INT(RND * 9) + 1„  A$ = STR$(A)„  IF PLAYER2$ = "X" THEN GOTO COMPSELSQUARE„  IF PLAYER2$ = "O" THEN GOTO COMPSELOSQUARE„  END IF„    LOCATE 17, 45: COLOR 14: PRINT "Choose a square (1-9): ";„    A$ = INPUT$(1)„    IF UCASE$(A$) = "Q" THEN GOTO COMPSTATS„    GOTO COMPSELSQUARE„END SELECT„IF X(1) = 1 AND X(2) = 2 AND X(3) = 3 THEN GOTO COMPWINX„IF X(4) = 4 AND X(5) = 5 AND X(6) = 6 THEN GOTO COMPWINX„IF X(7) = 7 AND X(8) = 8 AND X(9) = 9 THEN GOTO COMPWINX„IF X(1) = 1 AND X(4) = 4 AND X(7) = 7 THEN GOTO COMPWINX„IF X(2) = 2 AND X(5) = 5 AND X(8) = 8 THEN GOTO COMPWINX„IF X(3) = 3 AND X(6) = 6 AND X(9) = 9 THEN GOTO COMPWINX„IF X(1) = 1 AND X(5) = 5 AND X(9) = 9 THEN GOTO COMPWINX„IF X(3) = 3 AND X(5) = 5 AND X(7) = 7 THEN GOTO COMPWINX„IF SQUARE(1) = 1 AND SQUARE(2) = 2 AND SQUARE(3) = 3 AND SQUARE(4) = 4 AND SQUARE(5) = 5 AND SQUARE(6) = 6 AND SQUARE(7) = 7 AND SQUARE(8) = 8 AND SQUARE(9) = 9 THEN GOTO COMPTIE„IF PLAYER = 1 THEN PLAYER = 2: GOTO COMPCHOOSE„IF PLAYER = 2 THEN PLAYER = 1: GOTO COMPCHOOSE„„COMPSELOSQUARE:„SELECT CASE VAL(A$)„  CASE 1„    IF SQUARE(1) = 1 THEN GOTO COMPAGAINO„    PUT (18, 60), O, PSET„    SQUARE(1) = 1„    O(1) = 1„  CASE 2„    IF SQUARE(2) = 2 THEN GOTO COMPAGAINO„    PUT (124, 60), O, PSET„    SQUARE(2) = 2„    O(2) = 2„  CASE 3„    IF SQUARE(3) = 3 THEN GOTO COMPAGAINO„    PUT (230, 60), O, PSET„    SQUARE(3) = 3„    O(3) = 3„  CASE 4„    IF SQUARE(4) = 4 THEN GOTO COMPAGAINO„    PUT (18, 125), O, PSET„    SQUARE(4) = 4„    O(4) = 4„  CASE 5„    IF SQUARE(5) = 5 THEN GOTO COMPAGAINO„    PUT (124, 125), O, PSET„    SQUARE(5) = 5„    O(5) = 5„  CASE 6„    IF SQUARE(6) = 6 THEN GOTO COMPAGAINO„    PUT (230, 125), O, PSET„    SQUARE(6) = 6„    O(6) = 6„  CASE 7„    IF SQUARE(7) = 7 THEN GOTO COMPAGAINO„    PUT (18, 193), O, PSET„    SQUARE(7) = 7„    O(7) = 7„  CASE 8„    IF SQUARE(8) = 8 THEN GOTO COMPAGAINO„    PUT (124, 193), O, PSET„    SQUARE(8) = 8„    O(8) = 8„  CASE 9„    IF SQUARE(9) = 9 THEN GOTO COMPAGAINO„    PUT (230, 193), O, PSET„    SQUARE(9) = 9„    O(9) = 9„  CASE ELSE„COMPAGAINO:„  IF PLAYER = 2 THEN„  LOCATE 15, 45: COLOR 15: PRINT "COMPUTERS TURN"„  RANDOMIZE TIMER„  A = INT(RND * 9) + 1„  A$ = STR$(A)„  IF PLAYER2$ = "X" THEN GOTO COMPSELSQUARE„  IF PLAYER2$ = "O" THEN GOTO COMPSELOSQUARE„  END IF„    LOCATE 17, 45: COLOR 14: PRINT "Choose a square (1-9): ";„    A$ = INPUT$(1)„    IF UCASE$(A$) = "Q" THEN GOTO COMPSTATS„    GOTO COMPSELOSQUARE„END SELECT„IF O(1) = 1 AND O(2) = 2 AND O(3) = 3 THEN GOTO COMPWINO„IF O(4) = 4 AND O(5) = 5 AND O(6) = 6 THEN GOTO COMPWINO„IF O(7) = 7 AND O(8) = 8 AND O(9) = 9 THEN GOTO COMPWINO„IF O(1) = 1 AND O(4) = 4 AND O(7) = 7 THEN GOTO COMPWINO„IF O(2) = 2 AND O(5) = 5 AND O(8) = 8 THEN GOTO COMPWINO„IF O(3) = 3 AND O(6) = 6 AND O(9) = 9 THEN GOTO COMPWINO„IF O(1) = 1 AND O(5) = 5 AND O(9) = 9 THEN GOTO COMPWINO„IF O(3) = 3 AND O(5) = 5 AND O(7) = 7 THEN GOTO COMPWINO„IF SQUARE(1) = 1 AND SQUARE(2) = 2 AND SQUARE(3) = 3 AND SQUARE(4) = 4 AND SQUARE(5) = 5 AND SQUARE(6) = 6 AND SQUARE(7) = 7 AND SQUARE(8) = 8 AND SQUARE(9) = 9 THEN GOTO COMPTIE„IF PLAYER = 1 THEN PLAYER = 2: GOTO COMPCHOOSE„IF PLAYER = 2 THEN PLAYER = 1: GOTO COMPCHOOSE„„COMPWINX:„IF PLAYER1$ = "X" THEN„P1 = P1 + 1„LOCATE 7, 53: COLOR 12: PRINT P1„LOCATE 10, 51: COLOR 12: PRINT "PLAYER ONE WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„ELSE„P2 = P2 + 1„LOCATE 7, 64: COLOR 12: PRINT P2„LOCATE 10, 52: COLOR 12: PRINT "COMPUTER WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„END IF„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 10, B„LINE (105, 50)-(105, 249), 10„LINE (210, 50)-(210, 249), 10„LINE (1, 117)-(319, 117), 10„LINE (1, 185)-(319, 185), 10„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO COMPXO„„COMPWINO:„IF PLAYER1$ = "O" THEN„P1 = P1 + 1„LOCATE 7, 53: COLOR 12: PRINT P1„LOCATE 10, 51: COLOR 12: PRINT "PLAYER ONE WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„ELSE„P2 = P2 + 1„LOCATE 7, 64: COLOR 12: PRINT P2„LOCATE 10, 51: COLOR 12: PRINT "COMPUTER WINS!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 51: COLOR 12: PRINT SPACE$(25)„END IF„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 10, B„LINE (105, 50)-(105, 249), 10„LINE (210, 50)-(210, 249), 10„LINE (1, 117)-(319, 117), 10„LINE (1, 185)-(319, 185), 10„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO COMPXO„„COMPTIE:„LOCATE 10, 55: COLOR 15: PRINT "IT'S A TIE!!!"„WHILE INKEY$ = "": WEND„LOCATE 10, 55: PRINT SPACE$(20)„SWAP PLAYER1$, PLAYER2$„LINE (1, 50)-(319, 249), 0, BF„LINE (1, 50)-(319, 249), 10, B„LINE (105, 50)-(105, 249), 10„LINE (210, 50)-(210, 249), 10„LINE (1, 117)-(319, 117), 10„LINE (1, 185)-(319, 185), 10„FOR I = 1 TO 9„  X(I) = 0„  O(I) = 0„  SQUARE(I) = 0„NEXT I„GOTO COMPXO„„COMPSTATS:„LINE (0, 50)-(640, 350), 0, BF„LOCATE 6, 5: COLOR 13: PRINT "STATISTICS"„GP = GP - 1„LOCATE 8, 10: COLOR 15: PRINT "GAMES PLAYED:"; GP„IF GP = 0 THEN GP = 1„AVG1 = (P1 / GP) * 100„AVG2 = (P2 / GP) * 100„LOCATE 10, 10: COLOR 10: PRINT "NUMBER OF WINS FOR PLAYER ONE:"; P1; : COLOR 2: PRINT "  PERCENTAGE:"; INT(AVG1); "%"„LOCATE 11, 10: COLOR 11: PRINT "NUMBER OF WINS FOR COMPUTER:  "; P2; : COLOR 3: PRINT "  PERCENTAGE:"; INT(AVG2); "%"„IF P1 > P2 THEN LOCATE 13, 10: COLOR 14: PRINT "PLAYER ONE HAS MORE WINS!!!  CONGRADULATIONS!!!"„IF P1 < P2 THEN LOCATE 13, 10: COLOR 14: PRINT "COMPUTER HAS MORE WINS!!!  YOU LOSE, HA HA HA!!!"„IF P1 = P2 THEN LOCATE 13, 10: COLOR 14: PRINT "HEY, WHAT'DA YA KNOW, IT'S A TIE!"„WHILE INKEY$ = "": WEND„„TICTACQUIT:„„The ABC Programmer             THE LAST WORD                  LAST,WORD,VGA                  Year of 1993 (00:00:00)QB, QBasic             845  21447    LASTWORD.BAS'=====================================================================„'  THE LAST WORD Programmed by William Yu (1993)„'  Like the TV Game show (if you have seen it)„'  Undocumented.  Requires VGA to play.  Can be converted.„'„'  This is a TWO part snippet.  One is the actual game (LASTWORD.BAS)„'                               The other is the data  (LASTWORD.DAT)„'=====================================================================„„'------------8<----[ Begin LASTWORD.DAT ]---->8------------„62„PATIENT„SURGERY„BLOOD„RHYME„CHILDREN„BOOKS„HARDWARE„COMPUTER„SOFTWARE„SCOTTIES„TISSUE„KLEENEX„BASEBALL„TENNIS„SOCCER„POPSICLE„SUMMER„FREEZIES„HELLO„BONJOUR„ALLO„LASTWORD„PUZZLE„SOLVE„APPLE„MACINTOSH„ATARI„SUNNY„BRIGHT„LIGHT„FLAME„BURN„CANDLE„TROMBONE„TRUMPHET„TUBA„SERENE„PEACEFUL„NATURE„SUPERMAN„SPIDERMAN„BATMAN„MODEM„ALCOHOL„DRUGS„SUBJECT„PROFESSOR„UNIVERSITY„GAMES„GRAPHICS„SOUND„JELLY„BAKED„GROUND„AFRICA„EUROPE„ASIA„TELEVISION„MOTION„FILM„DISABLED„WHEELCHAIR„CRUTCHES„LASER„COMPACT„ROUND„HARD„HOLLOW„BARK„FOREST„JUNGLE„DESERT„HAPPY„ANGRY„DEPRESSED„CARTOON„COMIC„ACTION„HAVOC„DEVASTATION„RUIN„HYDROGEN„OXYGEN„CLEAR„GREEN„WHITE„YELLOW„DARK„MOON„SLEEP„STOP„SLOW„GO„HARD„FLOPPY„FORMAT„MANITOBA„ONTARIO„QUEBEC„POPULATION„METROPOLIS„BUILDINGS„EARTHQUAKE„DISNEYLAND„POPULAR„HURRICANE„BEACH„SOUTHERN„CHEVROLET„PLYMOUTH„CHRYSLER„CARROT„CELERY„BROCCOLI„BANANA„LEMON„PINEAPPLE„SHRIMP„FISH„LOBSTER„HAMBURGER„FRIES„MCDONALDS„COKE„PEPSI„CRUSH„AMAZON„NILE„MISSISSIPPI„PLATYPUS„DUCK„OSTRICH„REGISTERS„TRADEMARK„COPYRIGHT„PEPPERS„GARLIC„ONIONS„BLACKJACK„POKER„BRIDGE„SATURN„JUPITER„PLUTO„EDMONTON„VANCOUVER„REGINA„FICTION„FANTASY„PHONEY„NORTH„SOUTH„WEST„CHRISTMAS„EASTER„HALLOWEEN„SHARP„BLUNT„STEEL„EXECUTIVE„PARLIAMENT„CABINET„MATHEMATICS„ENGLISH„SCIENCE„SQUARE„TETRAGON„RECTANGLE„ELEPHANT„ZEBRA„GIRAFFE„FRIDAY„SATURDAY„SUNDAY„PYRAMIDS„SPHINX„EGYPTIAN„HAWAII„JAMAICA„TAHITI„PICTIONARY„MONOPOLY„SCRABBLE„ALLIGATOR„TURTLE„SNAKE„'------------8<----[ End LASTWORD.DAT ]---->8------------„„„„'------------8<----[ Begin LASTWORD.BAS ]---->8------------„„DECLARE SUB ARCADE ()„CALL ARCADE„„SUB ARCADE„DIM GIRL(1800), GUY(1800)„DIM CAT1$(100), CAT2$(100), CAT3$(100)„CLS„SCREEN 13„U = 12„LINE (50, 10)-(200, 60), 78, B„LINE (100, 10)-(100, 60), 78„LINE (150, 10)-(150, 60), 78„LINE (110, 15)-(110, 55), U„LINE (140, 15)-(140, 55), U„LINE (140, 35)-(110, 35), U„LINE (50, 70)-(250, 120), 78, B„LINE (100, 70)-(100, 120), 78„LINE (150, 70)-(150, 120), 78„LINE (200, 70)-(200, 120), 78„CIRCLE (175, 85), 20, U, , , 11 / 24„LINE (195, 75)-(189, 95), 0, BF„LINE (195, 82)-(183, 95), 0, BF„CIRCLE (175, 103), 20, U, , , 11 / 24„LINE (151, 95)-(165, 110), 0, BF„PSET (166, 95), 0: PSET (167, 95), 0„LINE (50, 130)-(250, 180), 78, B„LINE (100, 130)-(100, 180), 78„LINE (150, 130)-(150, 180), 78„LINE (200, 130)-(200, 180), 78„LINE (55, 135)-(65, 175), 12„LINE (95, 135)-(85, 175), 12„LINE (85, 175)-(75, 160), 12„LINE (65, 175)-(75, 160), 12„GOSUB ST„Q = 12„LINE (60, 15)-(90, 15), Q„LINE (75, 15)-(75, 55), Q„GOSUB ST„LINE (160, 15)-(160, 55), Q„LINE (160, 15)-(190, 15), Q„LINE (160, 55)-(190, 55), Q„LINE (160, 35)-(175, 35), Q„GOSUB ST„LINE (60, 75)-(60, 115), Q„LINE (60, 115)-(90, 115), Q„GOSUB ST„LINE (125, 75)-(110, 115), Q„LINE (125, 75)-(140, 115), Q„LINE (118, 95)-(132, 95), Q„GOSUB ST„LINE (210, 75)-(240, 75), Q„LINE (225, 75)-(225, 115), Q„GOSUB ST„CIRCLE (125, 155), 19, Q, , , 1„GOSUB ST„CIRCLE (172, 145), 21, Q, , , 11 / 22„LINE (151, 135)-(160, 167), 0, BF„LINE (160, 135)-(160, 175), Q„LINE (174, 157)-(192, 175), Q„GOSUB ST„CIRCLE (222, 155), 20, Q, , , 1„LINE (201, 135)-(212, 175), 0, BF„LINE (212, 173)-(212, 138), Q„GOSUB ST„WHILE INKEY$ = "": WEND„GOTO LWS„„ST:„Seconds! = .08„Time = TIMER„XDELAY = Time + Seconds!„WHILE NOT (TIMER > XDELAY)„WEND„RETURN„„LWS:„CLS„LOCATE 2, 3: COLOR 12: PRINT "T H E"„LOCATE 4, 3: PRINT "L A S T"„LOCATE 6, 3: PRINT "W O R D"„LINE (11, 4)-(60, 51), 78, B„LINE (11, 18)-(75, 51), 78, B„LINE (11, 35)-(75, 35), 78„LINE (27, 4)-(27, 51), 78„LINE (43, 4)-(43, 51), 78„CIRCLE (40, 80), 16, 14: PAINT (40, 80), 14„CIRCLE (40, 80), 10, 66, , , 1: PAINT (40, 80), 66„PSET (35, 77), 0: PSET (45, 77), 0„PSET (40, 81), 0„CIRCLE (40, 110), 20, 12, , , 1: PAINT (40, 110), 12„LINE (10, 105)-(70, 160), 78, BF„CIRCLE (45, 104), 5, 0, , 11 / 10„CIRCLE (40, 85), 4, 0, 3.1„LINE (33, 100)-(30, 104), 0„LINE (25, 123)-(55, 138), 15, B„PAINT (40, 127), 0, 15„CIRCLE (280, 80), 13, 66: PAINT (280, 80), 66„CIRCLE (275, 77), 4, 0: PAINT (275, 77), 15, 0„CIRCLE (285, 77), 4, 0: PAINT (285, 77), 15, 0„PSET (275, 77), 0: PSET (285, 77), 0„PSET (280, 77), 0„LINE (270, 77)-(264, 73), 0: LINE (290, 76)-(296, 74), 0„PSET (280, 82), 0: CIRCLE (280, 85), 4, 0, 3.1„CIRCLE (280, 112), 20, 7, , , 1: PAINT (280, 112), 7„LINE (310, 105)-(250, 160), 78, BF„CIRCLE (263, 102), 6, 66, , , 11 / 30: PAINT (263, 102), 66„CIRCLE (297, 102), 6, 66, , , 11 / 30: PAINT (297, 102), 66„LINE (295, 123)-(265, 138), 15, B„PAINT (280, 125), 0, 15„GET (7, 65)-(74, 165), GIRL„GET (313, 67)-(246, 165), GUY„LOCATE 3, 15: COLOR 15: PRINT "A  T.V.  GAME  SHOW"„LOCATE 5, 13: PRINT "PROGRAMMED BY WILLIAM YU"„LOCATE 11, 16: COLOR 12: PRINT "START GAME"„LOCATE 13, 16: COLOR 14: PRINT "INSTRUCTIONS"„LOCATE 15, 16: PRINT "QUIT GAME"„LINE (114, 77)-(223, 89), 10, B„M = 1„LWSEL:„V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN M = M + 1: GOSUB LWMDOWN„  IF V$ = CHR$(0) + "H" THEN M = M - 1: GOSUB LWMDOWN„  IF V$ = CHR$(13) THEN GOTO LWMSEL„  IF V$ = CHR$(27) THEN GOTO LWEND„GOTO LWSEL„„LWMDOWN:„LINE (114, 77)-(223, 89), 0, B: LOCATE 11, 16: COLOR 14: PRINT "START GAME"„LINE (114, 93)-(223, 105), 0, B: LOCATE 13, 16: PRINT "INSTRUCTIONS"„LINE (114, 109)-(223, 121), 0, B: LOCATE 15, 16: PRINT "QUIT GAME"„COLOR 12„IF M = 0 THEN M = 3„IF M = 4 THEN M = 1„IF M = 1 THEN LINE (114, 77)-(223, 89), 10, B: LOCATE 11, 16: PRINT "START GAME"„IF M = 2 THEN LINE (114, 93)-(223, 105), 10, B: LOCATE 13, 16: PRINT "INSTRUCTIONS"„IF M = 3 THEN LINE (114, 109)-(223, 121), 10, B: LOCATE 15, 16: PRINT "QUIT GAME"„RETURN„„LWMSEL:„IF M = 1 THEN GOTO LWSTART„IF M = 2 THEN GOTO INSTRUC„IF M = 3 THEN GOTO LWEND„„INSTRUC:„CLS„LOCATE 2, 3: COLOR 12: PRINT "T H E"„LOCATE 4, 3: PRINT "L A S T"„LOCATE 6, 3: PRINT "W O R D"„LINE (11, 4)-(60, 51), 78, B„LINE (11, 18)-(75, 51), 78, B„LINE (11, 35)-(75, 35), 78„LINE (27, 4)-(27, 51), 78„LINE (43, 4)-(43, 51), 78„LINE (317, 5)-(90, 160), 10, B„LINE (312, 10)-(95, 155), 10, B„PAINT (315, 7), 12, 10„LINE (150, 25)-(250, 25), 12„LOCATE 3, 20: COLOR 11: PRINT "INSTRUCTIONS"„„LOCATE 6, 14: COLOR 15: PRINT "THIS GAME IS NO FUN IF"„LOCATE 8, 14: PRINT "ONE PLAYER IS PLAYING"„LOCATE 10, 14: PRINT "BY HIM/HERSELF."„LOCATE 12, 14: PRINT "THIS GAME IS MEANT TO"„LOCATE 14, 14: PRINT "BE PLAYED BY TWO OR"„LOCATE 16, 14: PRINT "MORE PLAYER'S."„LOCATE 19, 14: COLOR 78: PRINT "PRESS ANY KEY TO CONTINUE"„WHILE INKEY$ = "": WEND„LINE (100, 35)-(300, 130), 0, BF„LOCATE 6, 14: COLOR 15: PRINT "THIS GAME IS VERY EASY"„LOCATE 8, 14: PRINT "TO PLAY. THERE WILL BE"„LOCATE 10, 14: PRINT "THREE WORDS THAT YOU"„LOCATE 12, 14: PRINT "HAVE TO GUESS."„LOCATE 14, 14: PRINT "THE GAME STARTS OFF"„LOCATE 16, 14: PRINT "BY GIVING YOU A LETTER"„WHILE INKEY$ = "": WEND„LINE (100, 35)-(300, 130), 0, BF„LOCATE 6, 14: PRINT "IN EACH WORD."„LOCATE 8, 14: PRINT "YOU CAN CHOOSE TO TAKE"„LOCATE 10, 14: PRINT "ANOTHER LETTER, OR TRY"„LOCATE 12, 14: PRINT "YOUR LUCK AT GUESSING"„LOCATE 14, 14: PRINT "THE WORD."„LOCATE 16, 14: PRINT "THE ONE WHO GUESSES"„WHILE INKEY$ = "": WEND„LINE (100, 35)-(300, 130), 0, BF„LOCATE 6, 14: PRINT "THE LAST WORD WINS !"„LOCATE 8, 14: PRINT "REMEMBER THAT THE WORDS"„LOCATE 10, 14: PRINT "ARE BASED ON A PARTICULAR"„LOCATE 12, 14: PRINT "THEME OR SUBJECT."„WHILE INKEY$ = "": WEND„LOCATE 19, 14: COLOR 78: PRINT "                         "„LINE (100, 35)-(305, 130), 0, BF„LOCATE 10, 16: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " START GAME"„LOCATE 12, 18: COLOR 15: PRINT "QUIT GAME"„H = 1„INSEL:„V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN H = H + 1: GOSUB INSELDOWN„  IF V$ = CHR$(0) + "H" THEN H = H - 1: GOSUB INSELDOWN„  IF V$ = CHR$(13) THEN GOTO INSELENTER„GOTO INSEL„„INSELDOWN:„COLOR 15„LOCATE 10, 16: PRINT "  START GAME"„LOCATE 12, 16: PRINT "  QUIT GAME"„IF H = 0 THEN H = 2„IF H = 3 THEN H = 1„IF H = 1 THEN LOCATE 10, 16: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " START GAME"„IF H = 2 THEN LOCATE 12, 16: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " QUIT GAME"„RETURN„„INSELENTER:„IF H = 1 THEN GOTO LWSTART„IF H = 2 THEN GOTO LWEND„„LWSTART:„CLS„PUT (250, 3), GIRL, PSET„PUT (250, 100), GUY, PSET„LOCATE 2, 3: COLOR 12: PRINT "T H E"„LOCATE 4, 3: PRINT "L A S T"„LOCATE 6, 3: PRINT "W O R D"„LINE (11, 4)-(60, 51), 78, B„LINE (11, 18)-(75, 51), 78, B„LINE (11, 35)-(75, 35), 78„LINE (27, 4)-(27, 51), 78„LINE (43, 4)-(43, 51), 78„LOCATE 7, 27: PRINT "NAME:"„LINE (260, 141)-(307, 153), 0, BF„LINE (260, 141)-(307, 153), 15, B„LINE (260, 45)-(306, 57), 0, BF„LINE (260, 45)-(306, 57), 15, B„LOCATE 10, 2: COLOR 14: PRINT "PLAYER ONE: -----"„LOCATE 10, 14: COLOR 10: LINE INPUT ""; P1NAME$„IF P1NAME$ = "" THEN P1NAME$ = "JANET"„LOCATE 7, 34: COLOR 15: PRINT LEFT$(P1NAME$, 5)„LOCATE 7, 27: PRINT "     "„LOCATE 19, 27: COLOR 12: PRINT "NAME:"„LOCATE 12, 2: COLOR 14: PRINT "PLAYER TWO: -----"„LOCATE 12, 14: COLOR 10: LINE INPUT ""; P2NAME$„IF P2NAME$ = "" THEN P2NAME$ = "SHANE"„LOCATE 19, 34: COLOR 15: PRINT LEFT$(P2NAME$, 5)„LOCATE 19, 27: PRINT "     "„GET (252, 3)-(314, 99), GIRL„GET (253, 101)-(314, 194), GUY„„OPEN "LASTWORD.DAT" FOR INPUT AS #1„INPUT #1, NUM„X = 0: I = 1„DO„  LINE INPUT #1, CAT1$(I)„  LINE INPUT #1, CAT2$(I)„  LINE INPUT #1, CAT3$(I)„  X = X + 1: I = I + 1„LOOP UNTIL X = NUM„CLOSE #1„Seconds = .5„GOSUB ST„„PLAYLW:„CLS„RANDOMIZE TIMER„I = INT(RND * NUM) + 1„LOCATE 2, 3: COLOR 12: PRINT "T H E"„LOCATE 4, 3: PRINT "L A S T"„LOCATE 6, 3: PRINT "W O R D"„LINE (11, 4)-(60, 51), 78, B„LINE (11, 18)-(75, 51), 78, B„LINE (11, 35)-(75, 35), 78„LINE (27, 4)-(27, 51), 78„LINE (43, 4)-(43, 51), 78„PUT (252, 98), GIRL, PSET„SQ1 = 0„SQ2 = 0„SQ3 = 0„„A = LEN(CAT1$(I))„X = 0„Y = 19: Z = 82„DO„LINE (Y, Z)-(Y + 15, Z + 17), 78, B„Y = Y + 16„X = X + 1„SQ1 = SQ1 + 1„LOOP UNTIL X = A„„A = LEN(CAT2$(I))„X = 0„Y = 19: Z = 106„DO„LINE (Y, Z)-(Y + 15, Z + 17), 78, B„Y = Y + 16„X = X + 1„SQ2 = SQ2 + 1„LOOP UNTIL X = A„„A = LEN(CAT3$(I))„X = 0„Y = 19: Z = 130„DO„LINE (Y, Z)-(Y + 15, Z + 17), 78, B„Y = Y + 16„X = X + 1„SQ3 = SQ3 + 1„LOOP UNTIL X = A„„CIRCLE (10, 77), 7, 7, 1.3, 3„CIRCLE (11, 77), 3, 7, 1.3, 3„CIRCLE (10, 157), 7, 7, 3, 5„CIRCLE (11, 157), 3, 7, 3, 5„CIRCLE (207, 77), 7, 7, .1, 1.9„CIRCLE (206, 77), 3, 7, .1, 2.5„CIRCLE (207, 157), 7, 7, 4.4, .1„CIRCLE (206, 157), 3, 7, 4.3, .1„LINE (3, 76)-(3, 156), 7„LINE (8, 76)-(8, 156), 7„LINE (12, 75)-(207, 75), 7„LINE (12, 71)-(207, 71), 7„LINE (12, 159)-(205, 159), 7„LINE (12, 163)-(205, 163), 7„LINE (209, 157)-(209, 76), 7„LINE (214, 157)-(214, 76), 7„PAINT (12, 72), 29, 7„CIRCLE (11, 77), 3, 78, 1.3, 3„CIRCLE (11, 157), 3, 78, 3, 5„CIRCLE (206, 77), 3, 78, .1, 2.5„CIRCLE (206, 157), 3, 78, 4.3, .1„LINE (12, 159)-(205, 159), 78„LINE (8, 76)-(8, 156), 78„LINE (209, 157)-(209, 76), 78„LINE (12, 75)-(207, 75), 78„PAINT (80, 80), 8, 78„CIRCLE (11, 77), 3, 7, 1.3, 3„CIRCLE (11, 157), 3, 7, 3, 5„CIRCLE (206, 77), 3, 7, .1, 2.5„CIRCLE (206, 157), 3, 7, 4.3, .1„LINE (12, 159)-(205, 159), 7„LINE (8, 76)-(8, 156), 7„LINE (209, 157)-(209, 76), 7„LINE (12, 75)-(207, 75), 7„LINE (8, 71)-(35, 65), 7„LINE (210, 71)-(228, 65), 7„LINE (215, 76)-(234, 69), 7„LINE (228, 65)-(35, 65), 7„CIRCLE (230, 69), 4, 7, .1, 1.9„LINE (213, 161)-(230, 152), 29„LINE (215, 159)-(234, 150), 7„LINE (210, 163)-(233, 151), 7„LINE (234, 150)-(234, 69), 7„PAINT (210, 66), 30, 7„PAINT (225, 67), 29, 7„PAINT (230, 140), 25, 7„COLOR 15„Y = 19: Z = 82„RANDOMIZE TIMER„S1 = INT(RND * SQ1) + 1„S2 = INT(RND * SQ2) + 1„S3 = INT(RND * SQ3) + 1„FOR S = 1 TO SQ1„  IF S1 = S THEN X = S * 16„NEXT S„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„LOCATE 12, S1 + S1 + 2: PRINT MID$(CAT1$(I), S1, 1)„„Seconds = .1„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„Y = 19: Z = 106„FOR S = 1 TO SQ2„  IF S2 = S THEN X = S * 16„NEXT S„LOCATE 15, S2 + S2 + 2: PRINT MID$(CAT2$(I), S2, 1)„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„Y = 19: Z = 130„FOR S = 1 TO SQ3„  IF S3 = S THEN X = S * 16„NEXT S„LOCATE 18, S3 + S3 + 2: PRINT MID$(CAT3$(I), S3, 1)„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„„P = 1: PP1 = 0: PP2 = 0: TW = 0: MW = 0: BW = 0„„STARTGAME:„LOCATE 2, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " TAKE A LETTER"„LOCATE 4, 15: COLOR 15: PRINT "GUESS WORD"„IF P = 1 THEN LOCATE 6, 15: PRINT "PASS TO "; LEFT$(P2NAME$, 5)„IF P = 2 THEN LOCATE 6, 15: PRINT "PASS TO "; LEFT$(P1NAME$, 5)„H = 1„PLAYERSEL:„V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN H = H + 1: GOSUB GDOWN„  IF V$ = CHR$(0) + "H" THEN H = H - 1: GOSUB GDOWN„  IF V$ = CHR$(13) THEN GOTO PLAYSEL„  IF V$ = CHR$(27) THEN GOTO LWEND„GOTO PLAYERSEL„„GDOWN:„LOCATE 2, 13: COLOR 15: PRINT "  TAKE A LETTER"„LOCATE 4, 13: PRINT "  GUESS WORD"„IF P = 1 THEN LOCATE 6, 13: PRINT "  PASS TO "; LEFT$(P2NAME$, 5)„IF P = 2 THEN LOCATE 6, 13: PRINT "  PASS TO "; LEFT$(P1NAME$, 5)„IF H = 0 THEN H = 3„IF H = 4 THEN H = 1„IF H = 1 THEN LOCATE 2, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " TAKE A LETTER"„IF H = 2 THEN LOCATE 4, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " GUESS WORD"„IF H = 3 AND P = 1 THEN LOCATE 6, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " PASS TO "; LEFT$(P2NAME$, 5)„IF H = 3 AND P = 2 THEN LOCATE 6, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " PASS TO "; LEFT$(P1NAME$, 5)„RETURN„„PLAYSEL:„IF H = 1 THEN GOSUB PICKWORD„IF H = 2 THEN GOTO GUESSWORD„IF H = 3 AND P = 1 THEN GOTO PLAYER2„IF H = 3 AND P = 2 THEN GOTO PLAYER1„„END„„PICKWORD:„LOCATE 23, 4: COLOR 10: PRINT "PRESS ANY KEY TO STOP"„DO„Y = 19: Z = 82„RANDOMIZE TIMER„S1 = INT(RND * SQ1) + 1„S2 = INT(RND * SQ2) + 1„S3 = INT(RND * SQ3) + 1„FOR S = 1 TO SQ1„  IF S1 = S THEN X = S * 16„NEXT S„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„V$ = INKEY$„IF V$ <> "" THEN GOTO LETTER„Seconds = .1„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„Y = 19: Z = 106„FOR S = 1 TO SQ2„  IF S2 = S THEN X = S * 16„NEXT S„„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„V$ = INKEY$„IF V$ <> "" THEN GOTO LETTER„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„Y = 19: Z = 130„FOR S = 1 TO SQ3„  IF S3 = S THEN X = S * 16„NEXT S„„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„V$ = INKEY$„IF V$ <> "" THEN GOTO LETTER„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„„LOOP„RETURN„„LETTER:„COLOR 15„IF Z = 82 THEN LOCATE 12, S1 + S1 + 2: PRINT MID$(CAT1$(I), S1, 1)„IF Z = 106 THEN LOCATE 15, S2 + S2 + 2: PRINT MID$(CAT2$(I), S2, 1)„IF Z = 130 THEN LOCATE 18, S3 + S3 + 2: PRINT MID$(CAT3$(I), S3, 1)„LOCATE 23, 4: PRINT SPACE$(24)„„GUESSORPASS:„LOCATE 2, 13: PRINT "               "„LOCATE 4, 13: PRINT "              "„LOCATE 6, 13: PRINT "                "„LOCATE 3, 13: COLOR 10: PRINT CHR$(16); " "; : COLOR 12: PRINT "GUESS WORD"„IF P = 1 THEN LOCATE 5, 15: COLOR 15: PRINT "PASS TO "; LEFT$(P2NAME$, 5)„IF P = 2 THEN LOCATE 5, 15: COLOR 15: PRINT "PASS TO "; LEFT$(P1NAME$, 5)„H = 1„GOP:„V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN H = H + 1: GOSUB GOPDOWN„  IF V$ = CHR$(0) + "H" THEN H = H - 1: GOSUB GOPDOWN„  IF V$ = CHR$(13) THEN GOTO GOPENTER„  IF V$ = CHR$(27) THEN GOTO LWEND„GOTO GOP„„GOPDOWN:„COLOR 15„LOCATE 3, 13: PRINT "  GUESS WORD"„IF P = 1 THEN LOCATE 5, 13: PRINT "  PASS TO "; LEFT$(P2NAME$, 5)„IF P = 2 THEN LOCATE 5, 13: PRINT "  PASS TO "; LEFT$(P1NAME$, 5)„IF H = 3 THEN H = 1„IF H = 0 THEN H = 2„IF H = 1 THEN LOCATE 3, 13: COLOR 10: PRINT CHR$(16); " "; : COLOR 12: PRINT "GUESS WORD"„IF H = 2 AND P = 1 THEN LOCATE 5, 13: COLOR 10: PRINT CHR$(16); " "; : COLOR 12: PRINT "PASS TO "; LEFT$(P2NAME$, 5)„IF H = 2 AND P = 2 THEN LOCATE 5, 13: COLOR 10: PRINT CHR$(16); " "; : COLOR 12: PRINT "PASS TO "; LEFT$(P1NAME$, 5)„RETURN„„GOPENTER:„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„IF H = 1 THEN GOTO GUESSWORD„IF H = 2 AND P = 1 THEN GOTO PLAYER2„IF H = 2 AND P = 2 THEN GOTO PLAYER1„„GUESSWORD:„FOR X = 2 TO 6„  LOCATE X, 13: PRINT SPACE$(25)„NEXT X„LOCATE 2, 13: COLOR 10: PRINT CHR$(16); " "; : COLOR 12: PRINT "TOP WORD"„LOCATE 4, 15: COLOR 15: PRINT "MIDDLE WORD"„LOCATE 6, 15: PRINT "BOTTOM WORD"„H = 1„GW:„V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN H = H + 1: GOSUB GWDOWN„  IF V$ = CHR$(0) + "H" THEN H = H - 1: GOSUB GWDOWN„  IF V$ = CHR$(27) AND P = 1 THEN GOTO PLAYER2„  IF V$ = CHR$(27) AND P = 2 THEN GOTO PLAYER1„  IF V$ = CHR$(13) THEN GOTO THEWORD„GOTO GW„„GWDOWN:„COLOR 15„LOCATE 2, 13: PRINT "  TOP WORD"„LOCATE 4, 13: PRINT "  MIDDLE WORD"„LOCATE 6, 13: PRINT "  BOTTOM WORD"„IF H = 4 THEN H = 1„IF H = 0 THEN H = 3„IF H = 1 THEN LOCATE 2, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " TOP WORD"„IF H = 2 THEN LOCATE 4, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " MIDDLE WORD"„IF H = 3 THEN LOCATE 6, 13: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " BOTTOM WORD"„RETURN„„THEWORD:„FOR X = 2 TO 6„  LOCATE X, 13: PRINT SPACE$(25)„NEXT X„IF H = 1 AND TW = 1 THEN GOTO GUESSWORD„IF H = 2 AND MW = 1 THEN GOTO GUESSWORD„IF H = 3 AND BW = 1 THEN GOTO GUESSWORD„„IF H = 1 THEN A = LEN(CAT1$(I)): LOCATE 3, 13: COLOR 11: PRINT "TOP WORD: "; : COLOR 14: PRINT STRING$(A, "-"): LOCATE 3, 23: COLOR 10: LINE INPUT ""; TW$„IF H = 2 THEN A = LEN(CAT2$(I)): LOCATE 3, 13: COLOR 11: PRINT "MIDDLE WORD: "; : COLOR 14: PRINT STRING$(A, "-"): LOCATE 3, 26: COLOR 10: LINE INPUT ""; MW$„IF H = 3 THEN A = LEN(CAT3$(I)): LOCATE 3, 13: COLOR 11: PRINT "BOTTOM WORD: "; : COLOR 14: PRINT STRING$(A, "-"): LOCATE 3, 26: COLOR 10: LINE INPUT ""; BW$„COLOR 15„IF UCASE$(TW$) = UCASE$(CAT1$(I)) AND P = 1 THEN PP1 = PP1 + 1: LOCATE 21, 35: PRINT PP1: TW = 1: GOTO REVEAL„IF UCASE$(MW$) = UCASE$(CAT2$(I)) AND P = 1 THEN LOCATE 21, 35: PP1 = PP1 + 1: PRINT PP1: MW = 1: GOTO REVEAL„IF UCASE$(BW$) = UCASE$(CAT3$(I)) AND P = 1 THEN LOCATE 21, 35: PP1 = PP1 + 1: PRINT PP1: BW = 1: GOTO REVEAL„IF UCASE$(TW$) = UCASE$(CAT1$(I)) AND P = 2 THEN LOCATE 21, 35: PP2 = PP2 + 1: PRINT PP2: TW = 1: GOTO REVEAL„IF UCASE$(MW$) = UCASE$(CAT2$(I)) AND P = 2 THEN LOCATE 21, 35: PP2 = PP2 + 1: PRINT PP2: MW = 1: GOTO REVEAL„IF UCASE$(BW$) = UCASE$(CAT3$(I)) AND P = 2 THEN LOCATE 21, 35: PP2 = PP2 + 1: PRINT PP2: BW = 1: GOTO REVEAL„LOCATE 23, 10: COLOR 10: PRINT "INCORRECT"„SOUND 90, 4: SOUND 0, 2: SOUND 67, 5„IF P = 1 THEN GOTO PLAYER2„IF P = 2 THEN GOTO PLAYER1„„REVEAL:„TW$ = ""„MW$ = ""„BW$ = ""„IF H = 1 THEN„Y = 19: Z = 82„FOR S1 = 1 TO SQ1„  LOCATE 12, S1 + S1 + 2: PRINT MID$(CAT1$(I), S1, 1)„  X = S1 * 16„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„Seconds = .1„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„NEXT S1„END IF„„IF H = 2 THEN„Y = 19: Z = 106„  FOR S2 = 1 TO SQ2„  LOCATE 15, S2 + S2 + 2: PRINT MID$(CAT2$(I), S2, 1)„  X = S2 * 16„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„Seconds = .1„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„NEXT S2„END IF„„IF H = 3 THEN„Y = 19: Z = 130„FOR S3 = 1 TO SQ3„  LOCATE 18, S3 + S3 + 2: PRINT MID$(CAT3$(I), S3, 1)„  X = S3 * 16„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 14, B„Seconds = .1„GOSUB ST„LINE (Y + X - 16, Z)-(Y + X - 16 + 15, Z + 17), 78, B„NEXT S3„END IF„IF TW = 1 AND MW = 1 AND BW = 1 THEN GOTO FINISH„GOTO GUESSWORD„„PLAYER1:„FOR X = 2 TO 6„  LOCATE X, 13: PRINT SPACE$(25)„NEXT X„LOCATE 23, 10: PRINT SPACE$(10)„P = 1„PUT (252, 98), GIRL, PSET„IF PP1 > 0 THEN LOCATE 21, 35: COLOR 15: PRINT PP1„GOTO STARTGAME„„PLAYER2:„FOR X = 2 TO 6„  LOCATE X, 13: PRINT SPACE$(25)„NEXT X„LOCATE 23, 10: PRINT SPACE$(10)„P = 2„PUT (252, 100), GUY, PSET„IF PP2 > 0 THEN LOCATE 21, 35: COLOR 15: PRINT PP2„GOTO STARTGAME„„FINISH:„FOR X = 2 TO 6„  LOCATE X, 13: PRINT SPACE$(25)„NEXT X„COLOR 12„IF P = 1 THEN LOCATE 4, 13: PRINT LEFT$(P1NAME$, 5); : COLOR 15: PRINT " Gets The LAST WORD": LOCATE 6, 15: COLOR 10: PRINT LEFT$(P1NAME$, 5); : COLOR 14: PRINT " WINS!!!"„IF P = 2 THEN LOCATE 4, 13: PRINT LEFT$(P2NAME$, 5); : COLOR 15: PRINT " Gets The LAST WORD": LOCATE 6, 15: COLOR 10: PRINT LEFT$(P2NAME$, 5); : COLOR 14: PRINT " WINS!!!"„LOCATE 23, 1: COLOR 10: PRINT "Play Again? [y/N]"; : A$ = INPUT$(1)„IF UCASE$(A$) = "Y" THEN GOTO PLAYLW„CLS„SLEEP 1„„LWEND:„CLS„WIDTH 80, 25„SCREEN 0, 0, 0, 0„„END SUB„„'------------8<----[ End LASTWORD.BAS ]---->8------------„The ABC Programmer             BLACK JACK                     BLACK,JACK,EGA                 Year of 1994 (00:00:00)QB 4.5                 554  18375    BJ.BAS      '===============================================================„'  A Simple Black Jack Game by William Yu 1994 (My Rules)„'  When I finished programming this game, I found out that the„'    rules that I have been using are incorrect, but like me„'    I'm just too stubborn and lazy to change it.  Oh well, maybe„'    you'll discover them and change it yourself.„'  Requires EGA or better, but can be changed to whatever„'    Screen mode you like.„'„'  You need QuickBASIC 4.5 for this, so load with QB /LQB„'  „'  This is a THREE part snippet:  One is the game (BJ.BAS)„'                                 One is the Icon (BJ.ICO)„'                                 And Another one (BJ2.ICO)„'===============================================================„„'----------------8<-------[ Begin BJ.BAS ]------->8--------------„„'$INCLUDE: 'QB.BI'„DEFINT A-Z„DECLARE SUB Pause (ticks%)„DECLARE SUB ColorPrint (TEXT$, Row%, Col%, FC%, BC%)„DECLARE SUB SideWrite (Mot$, PosX, PosY, Couleur, Opt)„DIM FirstNum$(52), Match$(16), Player$(11), Dealer$(11)„REDIM Sprite%(210)„CLS : SCREEN 7, 0, , 0: COLOR 3, 1„LOCATE 6, 8„LOCATE , 8: PRINT "€ﬂ€  €ﬂ   €ﬂﬂ€ €ﬂﬂﬂ € €ﬂ"„LOCATE , 8: PRINT "€ €  €    €  € €    € €"„LOCATE , 8: PRINT "€ﬂﬂ€ €    €ﬂﬂ€ €    €ﬂﬂ€"„LOCATE , 8: PRINT "€  € €    €  € €    €  €"„LOCATE , 8: PRINT "ﬂﬂﬂﬂ ﬂﬂﬂﬂ ﬂ  ﬂ ﬂﬂﬂﬂ ﬂ  ﬂ"„PRINT„LOCATE , 10: PRINT " ﬂ€ﬂ €ﬂﬂ€ €ﬂﬂﬂ € €ﬂ"„LOCATE , 10: PRINT "  €  €  € €    € €"„LOCATE , 10: PRINT "  €  €ﬂﬂ€ €    €ﬂﬂ€"„LOCATE , 10: PRINT "  €  €  € €    €  €"„LOCATE , 10: PRINT "ﬂﬂﬂ  ﬂ  ﬂ ﬂﬂﬂﬂ ﬂ  ﬂ"„PCOPY 0, 1„„LOCATE 2, 6: COLOR 10: PRINT "PROGRAMMED BY WILLIAM YU 1995"„CARD = 1: CARD2 = 2„„MAINMENU:„„IF CARD = 1 THEN ICON$ = "BJ.ICO"„IF CARD = 2 THEN ICON$ = "BJ2.ICO"„OPEN ICON$ FOR INPUT AS #1„FOR A = 0 TO 210„  INPUT #1, Sprite%(A)„NEXT„CLOSE #1„„PUT (20, 90), Sprite%, PSET„PUT (22, 88), Sprite%, PSET„PUT (24, 86), Sprite%, PSET„PUT (26, 84), Sprite%, PSET„„LOCATE 18, 13: COLOR 14: PRINT "PLAY FOR FUN"„LOCATE 20, 13: PRINT "GAMBLE WITH MONEY"„LOCATE 22, 13: PRINT "CHANGE FACE CARD"„LOCATE 24, 13: PRINT "QUIT GAME";„PCOPY 0, 2„„MENUSELECT:„PCOPY 2, 0„FUN = 0: GAMBLE = 0„GMD = 5000: GM = 1000: MS = 1: WP = 0: WL = 0„LOCATE 18, 11: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " PLAY FOR FUN"„„DO„  V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN MS = MS + 1: GOSUB MSMAIN„  IF V$ = CHR$(0) + "H" THEN MS = MS - 1: GOSUB MSMAIN„  IF V$ = CHR$(27) THEN GOTO ENDGAME„  IF V$ = CHR$(13) THEN GOTO MSENTER„LOOP„„MSMAIN:„  COLOR 14„  LOCATE 18, 11: PRINT "  PLAY FOR FUN"„  LOCATE 20, 11: PRINT "  GAMBLE WITH MONEY"„  LOCATE 22, 11: PRINT "  CHANGE FACE CARD"„  LOCATE 24, 11: PRINT "  QUIT GAME";„  IF MS = 0 THEN MS = 4„  IF MS = 5 THEN MS = 1„  IF MS = 1 THEN LOCATE 18, 11: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " PLAY FOR FUN"„  IF MS = 2 THEN LOCATE 20, 11: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " GAMBLE WITH MONEY"„  IF MS = 3 THEN LOCATE 22, 11: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " CHANGE FACE CARD"„  IF MS = 4 THEN LOCATE 24, 11: COLOR 10: PRINT CHR$(16); : COLOR 12: PRINT " QUIT GAME";„RETURN„„MSENTER:„  IF MS = 1 THEN FUN = 1: GOTO STARTBJ„  IF MS = 2 THEN GAMBLE = 1: GOTO STARTBJ„  IF MS = 3 THEN GOTO CHANGECARD„  IF MS = 4 THEN GOTO ENDGAME„„CHANGECARD:„LOCATE 22, 11: PRINT " "„SWAP CARD, CARD2„GOTO MAINMENU„„STARTBJ:„PALETTE 3, 3„PCOPY 1, 0„„IF GAMBLE = 1 THEN„  COLOR 14: LOCATE 2, 3: PRINT "WINS:"; : COLOR 10: PRINT WP„  COLOR 14: LOCATE 2, 15: PRINT "LOSSES:"; : COLOR 10: PRINT WL„  COLOR 15: LOCATE 18, 2: PRINT "YOU HAVE   "; : COLOR 14: PRINT "$"; LTRIM$(STR$(GM))„„  IF GM = 0 THEN COLOR 10: LOCATE 21, 2: PRINT "AW, TOO BAD, YOU'RE BROKE!  HA HA HA!": A$ = INPUT$(1): GOTO MENUSELECT„  COLOR 15: LOCATE 19, 2: PRINT "DEALER HAS "; : COLOR 12: PRINT "$"; LTRIM$(STR$(GMD))„  IF GMD = 0 THEN COLOR 10: LOCATE 21, 1: PRINT "HEY, HOW ABOUT THAT, CONGRATS!  YOU WIN!": A$ = INPUT$(1): GOTO MENUSELECT„  COLOR 10: LOCATE 21, 2: PRINT "AMOUNT TO GAMBLE [Q=QUIT]: "; : COLOR 11„  LINE INPUT AG$„  IF UCASE$(AG$) = "Q" THEN GOTO MENUSELECT„  IF VAL(AG$) > GM THEN AG$ = STR$(GM)„  IF VAL(AG$) > GMD THEN AG$ = STR$(GMD)„  PCOPY 1, 0„END IF„„PUT (100, 45), Sprite%, PSET„PUT (130, 45), Sprite%, PSET„PUT (100, 95), Sprite%, PSET„PUT (130, 95), Sprite%, PSET„Z = 130„„I = 1: A$ = "A"„DO„  FOR Y = 1 TO 4„	FirstNum$(I) = A$„	I = I + 1„  NEXT Y„  IF I = 5 THEN A$ = "2"„  IF I = 9 THEN A$ = "3"„  IF I = 13 THEN A$ = "4"„  IF I = 17 THEN A$ = "5"„  IF I = 21 THEN A$ = "6"„  IF I = 25 THEN A$ = "7"„  IF I = 29 THEN A$ = "8"„  IF I = 33 THEN A$ = "9"„  IF I = 37 THEN A$ = "10"„  IF I = 41 THEN A$ = "J"„  IF I = 45 THEN A$ = "Q"„  IF I = 49 THEN A$ = "K"„LOOP UNTIL I = 53„„FOR N = 1 TO 15„  Match$(N) = "0"„NEXT N„„IF GAMBLE = 1 THEN CALL SideWrite("On the line:", 300, 175, 15, 6)„IF GAMBLE = 1 THEN CALL SideWrite("$" + LTRIM$(AG$), 300, 67, 14, 6)„„CALL SideWrite("Dealer Hand", 1, 50, 14, 12)„„PAINT (110, 50), 7, 15„X = 101: D = 0„RANDOMIZE TIMER„I = INT(RND * 52) + 1„IF FirstNum$(I) = "10" THEN X = X - 4„Match$(1) = FirstNum$(I)„D = D + 1: Dealer$(D) = FirstNum$(I)„CALL SideWrite(FirstNum$(I), X, 50, 15, 11)„„CALL SideWrite("Player Hand", 1, 100, 12, 12)„PAINT (110, 100), 7, 15„PAINT (150, 100), 7, 15„„X = 101: Y = 0: P = 0„DO„  RANDOMIZE TIMER„  I = INT(RND * 52) + 1„  IF FirstNum$(I) = "10" THEN X = X - 4„  FOR N = 1 TO 15„	IF FirstNum$(I) = Match$(N) THEN EXIT FOR„  NEXT N„  IF FirstNum$(I) <> Match$(N) THEN„	CALL SideWrite(FirstNum$(I), X, 100, 15, 11): Y = Y + 1: X = X + 31„	Match$(Y + 1) = FirstNum$(I)„	P = P + 1: Player$(P) = FirstNum$(I)„  END IF„  IF FirstNum$(I) = "10" THEN X = X + 4„LOOP UNTIL Y = 2„„X = 161„MAX = P: PlayerHand = 0: ACE = 0„FOR V = 1 TO MAX„  IF Player$(V) = "K" THEN Player$(V) = "10"„  IF Player$(V) = "Q" THEN Player$(V) = "10"„  IF Player$(V) = "J" THEN Player$(V) = "10"„  IF Player$(V) = "A" THEN Player$(V) = "11": ACE = ACE + 1„  PlayerHand = PlayerHand + VAL(Player$(V))„NEXT V„LOCATE 20, 20: COLOR 11: PRINT "Player Has";„IF PlayerHand = 21 THEN„  COLOR 12: PRINT " BLACKJACK"„  PALETTE 3, 12„  LOCATE 2, 3: COLOR 10: PRINT "PLAYER BEATS DEALER WITH A BLACKJACK"„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GM = GM + VAL(AG$): GMD = GMD - VAL(AG$): WP = WP + 1: GOTO STARTBJ„END IF„GOTO SKIP„„HILIGHT:„MAX = P„  IF Player$(MAX) = "K" THEN Player$(MAX) = "10"„  IF Player$(MAX) = "Q" THEN Player$(MAX) = "10"„  IF Player$(MAX) = "J" THEN Player$(MAX) = "10"„  IF Player$(MAX) = "A" THEN Player$(MAX) = "11": ACE = ACE + 1„  PlayerHand = PlayerHand + VAL(Player$(MAX))„  FOR V = 1 TO MAX„	IF ACE > 0 AND Player$(V) = "11" AND PlayerHand > 21 THEN PlayerHand = PlayerHand - 10: ACE = ACE - 1„  NEXT V„„SKIP:„COLOR 10: LOCATE 20, 30: PRINT PlayerHand„IF PlayerHand > 21 THEN„  COLOR 12: LOCATE 2, 5: PRINT " YOU'RE BUSTED!!!  DEALER WINS!"„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GM = GM - VAL(AG$): GMD = GMD + VAL(AG$): WL = WL + 1: GOTO STARTBJ„END IF„IF PlayerHand = 21 THEN„  LOCATE 2, 3: COLOR 10: PRINT "PLAYER AUTOMATICALLY WINS WITH 21!!!"„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GM = GM + VAL(AG$): GMD = GMD - VAL(AG$): WP = WP + 1: GOTO STARTBJ„END IF„CALL ColorPrint(" HIT! ", 19, 6, 10, 4)„COLOR 2: LOCATE 21, 7: PRINT "STAY"„LOCATE 23, 7: PRINT "QUIT"„„MENU = 1„DO„  V$ = INKEY$„  IF V$ = CHR$(0) + "P" THEN MENU = MENU + 1: GOSUB MOVEHI„  IF V$ = CHR$(0) + "H" THEN MENU = MENU - 1: GOSUB MOVEHI„  IF V$ = CHR$(13) THEN GOTO PLAYSELECT„LOOP„„MOVEHI:„  COLOR 2„  LOCATE 19, 6: PRINT " HIT! "„  LOCATE 21, 6: PRINT " STAY "„  LOCATE 23, 6: PRINT " QUIT "„  IF MENU = 0 THEN MENU = 3„  IF MENU = 4 THEN MENU = 1„  IF MENU = 1 THEN CALL ColorPrint(" HIT! ", 19, 6, 10, 4)„  IF MENU = 2 THEN CALL ColorPrint(" STAY ", 21, 6, 10, 4)„  IF MENU = 3 THEN CALL ColorPrint(" QUIT ", 23, 6, 10, 4)„RETURN„„PLAYSELECT:„  IF MENU = 1 THEN GOTO HITME„  IF MENU = 2 THEN GOTO DEALERTURN„  IF MENU = 3 THEN GOTO MENUSELECT„„„HITME:„  Z = Z + 30„  PUT (Z, 95), Sprite%, PSET„  Pause (3)„  PAINT (Z + 10, 100), 7, 15„Y = 0„DO„  RANDOMIZE TIMER„  I = INT(RND * 52) + 1„  IF FirstNum$(I) = "10" THEN X = X - 4„  FOR N = 1 TO 15„	IF FirstNum$(I) = Match$(N) THEN EXIT FOR„  NEXT N„  IF FirstNum$(I) <> Match$(N) THEN„	CALL SideWrite(FirstNum$(I), X, 100, 15, 11): Y = Y + 1: X = X + 30„	Match$(Y + 1) = FirstNum$(I)„	P = P + 1: Player$(P) = FirstNum$(I)„  END IF„  IF FirstNum$(I) = "10" THEN X = X + 4„LOOP UNTIL Y = 1„GOTO HILIGHT„„DEALERTURN:„LOCATE 19, 6: PRINT "      "„LOCATE 21, 6: PRINT "      "„LOCATE 23, 6: PRINT "      "„PAINT (150, 50), 7, 15„X = 131: Y = 0: Z = 130„DO„  RANDOMIZE TIMER„  I = INT(RND * 52) + 1„  IF FirstNum$(I) = "10" THEN X = X - 4„  FOR N = 1 TO 15„	IF FirstNum$(I) = Match$(N) THEN EXIT FOR„  NEXT N„  IF FirstNum$(I) <> Match$(N) THEN„	CALL SideWrite(FirstNum$(I), X, 50, 15, 11): Y = Y + 1: X = X + 30„	Match$(Y + 1) = FirstNum$(I)„	D = D + 1: Dealer$(D) = FirstNum$(I)„  END IF„  IF FirstNum$(I) = "10" THEN X = X + 4„LOOP UNTIL Y = 1„„X = 161„MAX = D: DealerHand = 0: ACE = 0„FOR V = 1 TO MAX„  IF Dealer$(V) = "K" THEN Dealer$(V) = "10"„  IF Dealer$(V) = "Q" THEN Dealer$(V) = "10"„  IF Dealer$(V) = "J" THEN Dealer$(V) = "10"„  IF Dealer$(V) = "A" THEN Dealer$(V) = "11": ACE = ACE + 1„  DealerHand = DealerHand + VAL(Dealer$(V))„NEXT V„LOCATE 22, 20: COLOR 11: PRINT "Dealer Has";„IF DealerHand = 21 THEN„  COLOR 12: PRINT " BLACKJACK"„  PALETTE 3, 12„  LOCATE 2, 3: COLOR 10: PRINT "DEALER BEATS PLAYER WITH A BLACKJACK"„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GMD = GMD + VAL(AG$): GM = GM - VAL(AG$): WL = WL + 1: GOTO STARTBJ„END IF„GOTO DEALSKIP„„DEALHILIGHT:„MAX = D„  IF Dealer$(MAX) = "K" THEN Dealer$(MAX) = "10"„  IF Dealer$(MAX) = "Q" THEN Dealer$(MAX) = "10"„  IF Dealer$(MAX) = "J" THEN Dealer$(MAX) = "10"„  IF Dealer$(MAX) = "A" THEN Dealer$(MAX) = "11": ACE = ACE + 1„  DealerHand = DealerHand + VAL(Dealer$(MAX))„  FOR V = 1 TO MAX„	IF ACE > 0 AND Dealer$(V) = "11" AND DealerHand > 21 THEN DealerHand = DealerHand - 10: ACE = ACE - 1„  NEXT V„„DEALSKIP:„COLOR 12: LOCATE 22, 30: PRINT DealerHand„IF DealerHand > 21 THEN„  COLOR 14: LOCATE 2, 7: PRINT "DEALER GOES BUST!  YOU WIN!"„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GMD = GMD - VAL(AG$): GM = GM + VAL(AG$): WP = WP + 1: GOTO STARTBJ„END IF„IF DealerHand > PlayerHand THEN„  COLOR 13: LOCATE 2, 11: PRINT "DEALER WINS WITH"; DealerHand„  A$ = INPUT$(1)„  IF FUN = 1 THEN„  LOCATE 2, 3: PRINT SPACE$(36)„  COLOR 14: LOCATE 2, 3: PRINT "ANOTHER GAME [Y/N]? ";„  DO„	A$ = INPUT$(1)„  LOOP UNTIL UCASE$(A$) = "Y" OR UCASE$(A$) = "N"„  IF UCASE$(A$) = "Y" THEN GOTO STARTBJ„  IF UCASE$(A$) = "N" THEN GOTO MENUSELECT„  END IF„  IF GAMBLE = 1 THEN GMD = GMD + VAL(AG$): GM = GM - VAL(AG$): WL = WL + 1: GOTO STARTBJ„END IF„„LOCATE 20, 3: COLOR 10: PRINT "DEALER HITS!"„Z = Z + 30„PUT (Z, 45), Sprite%, PSET„Pause (8)„PAINT (Z + 10, 50), 7, 15„Y = 0„DO„  RANDOMIZE TIMER„  I = INT(RND * 52) + 1„  IF FirstNum$(I) = "10" THEN X = X - 4„  FOR N = 1 TO 15„	IF FirstNum$(I) = Match$(N) THEN EXIT FOR„  NEXT N„  IF FirstNum$(I) <> Match$(N) THEN„	CALL SideWrite(FirstNum$(I), X, 50, 15, 11): Y = Y + 1: X = X + 30„	Match$(Y + 1) = FirstNum$(I)„	D = D + 1: Dealer$(D) = FirstNum$(I)„  END IF„  IF FirstNum$(I) = "10" THEN X = X + 4„LOOP UNTIL Y = 1„GOTO DEALHILIGHT„„ENDGAME:„COLOR 7, 0: CLS„SCREEN 0, 0, , 0„WIDTH 80, 25„„SUB ColorPrint (TEXT$, Row%, Col%, FC%, BC%)„  DIM inreg AS RegTypeX, outreg AS RegTypeX„  C$ = STRING$(LEN(TEXT$), 219)       ' String of solid chars„  inreg.ax = &H1300             ' Video service 13h, subfunction„  inreg.bx = BC%                ' Background colour„  inreg.cx = LEN(TEXT$)         ' String length„  inreg.dx = 256 * (Row% - 1) + (Col% - 1)      ' Text pos. in„  inreg.es = VARSEG(C$)           ' String's segment„  inreg.bp = SADD(C$)           ' String's address„  CALL INTERRUPTX(&H10, inreg, outreg)     ' Output the„  inreg.bx = (FC% XOR BC%) + &H80   ' BL=ForeColor; BH=&H80 uses„  inreg.es = VARSEG(TEXT$)„  inreg.bp = SADD(TEXT$)„  CALL INTERRUPTX(&H10, inreg, outreg) ' Output the text, XORing„„END SUB„„SUB Pause (ticks%)„	DEF SEG = 0„	DO UNTIL TestTick% > ticks%„	   LastTick% = GetTick%„	   GetTick% = PEEK(&H46C)„		IF LastTick% <> GetTick% THEN„		 TestTick% = TestTick% + 1„		END IF„	LOOP„	DEF SEG„„END SUB„„SUB SideWrite (Mot$, PosX, PosY, Couleur, Opt) STATIC„FOR Nombre = 1 TO LEN(Mot$)„	LOCATE 1, 1: COLOR 1„	PRINT MID$(Mot$, Nombre, 1)        'print word's letters one by one„	FOR X = 0 TO 7„	 FOR Y = 0 TO 13                   'use 0 TO 13 for EGA„	   IF POINT(X, Y) THEN            'read pixel on/off for sideways copy„		 IF Opt = 1 THEN„			PSET (Y + PosX, 8 - X + PosY - (8 * Nombre)), Couleur„		 ELSEIF Opt = 2 THEN„			PSET (Y + PosX, 8 - X + PosY - (8 * Nombre) + Y), Couleur„		 ELSEIF Opt = 3 THEN„			PSET (X + PosX, PosY + (8 * Nombre) + Y), Couleur„		 ELSEIF Opt = 4 THEN„			PSET (8 - Y + PosX, PosY + (8 * Nombre) + X), Couleur„		 ELSEIF Opt = 5 THEN„			PSET (8 - Y + PosX, PosY + (8 * Nombre) + X - Y), Couleur„		 ELSEIF Opt = 6 THEN„			PSET (Y + PosX + Y, 8 - X + PosY - (8 * Nombre)), Couleur„			PSET (1 + Y + PosX + Y, 8 - X + PosY - (8 * Nombre)), Couleur„		 ELSEIF Opt = 7 THEN„			PSET (Y + PosX + Y, 8 - X + PosY - (8 * Nombre) + Y), Couleur„			PSET (1 + Y + PosX + Y, 8 - X + PosY - (8 * Nombre) + Y), Couleur„		ELSEIF Opt = 8 THEN„			PSET (X + PosX + X, PosY + (8 * Nombre) + Y), Couleur„			PSET (1 + X + PosX + X, PosY + (8 * Nombre) + Y), Couleur„		 ELSEIF Opt = 9 THEN„			PSET (X + PosX + (Nombre * 8), PosY + Y), Couleur„		 ELSEIF Opt = 10 THEN„			PSET (X + PosX + (Nombre * 8) - Y, PosY + Y), Couleur„		 ELSEIF Opt = 11 THEN„			PSET (X + PosX + (Nombre * 8), PosY + Y + Y), Couleur„			PSET (X + PosX + (Nombre * 8), 1 + PosY + Y + Y), Couleur„		 ELSEIF Opt = 12 THEN„			PSET (X + PosX + (Nombre * 8) - Y, PosY + Y + Y), Couleur„			PSET (X + PosX + (Nombre * 8) - Y, 1 + PosY + Y + Y), Couleur„		 END IF„	   END IF„	 NEXT Y„	NEXT X„NEXT Nombre„„END SUB„'----------------8<-------[ End BJ.BAS ]------->8--------------„„„„'----------------8<-------[ Begin BJ.ICO ]------->8--------------„25,25,-1,-32513,-1,-32513,-1,-32513,-1,-32513„-1,-32513,-1,-32513,128,-32768,21973,-32683,-1,-32513„-1,-32513,128,-32768,-21846,-32598,-1,-32513,-1,-32513„128,-32768,21973,-32683,-1,-32513,-1,-32513,128,-32768„-21846,-32598,-1,-32513,-1,-32513,128,-32768,21973,-32683„-1,-32513,-1,-32513,128,-32768,-21846,-32598,-1,-32513„-1,-32513,128,-32768,21973,-32683,-1,-32513,-1,-32513„128,-32768,-21846,-32598,-1,-32513,-1,-32513,128,-32768„21973,-32683,-1,-32513,-1,-32513,128,-32768,-21846,-32598„-1,-32513,-1,-32513,128,-32768,21973,-32683,-1,-32513„-1,-32513,128,-32768,-21846,-32598,-1,-32513,-1,-32513„128,-32768,21973,-32683,-1,-32513,-1,-32513,128,-32768„-21846,-32598,-1,-32513,-1,-32513,128,-32768,21973,-32683„-1,-32513,-1,-32513,128,-32768,-21846,-32598,-1,-32513„-1,-32513,128,-32768,21973,-32683,-1,-32513,-1,-32513„128,-32768,-21846,-32598,-1,-32513,-1,-32513,128,-32768„21973,-32683,-1,-32513,-1,-32513,128,-32768,-21846,-32598„-1,-32513,-1,-32513,128,-32768,21973,-32683,-1,-32513„-1,-32513,128,-32768,-21846,-32598,-1,-32513,-1,-32513„128,-32768,21973,-32683,-1,-32513,-1,-32513,-1,-32513„-1,-32513,0,0,0,0,0,0,0,0„0„'----------------8<-------[ End BJ.ICO ]------->8--------------„„„„'----------------8<-------[ Begin BJ2.ICO ]------->8--------------„25,25,-1,-32513,-1,-32513,-1,-32513,-1,-32513„-1,-32513,128,-32768,-1,-32513,128,-32768,-1,-32513„128,-32768,-1,-32513,2489,-32558,-1,-32513,128,-32768„-1,-32513,5541,-32748,-1,-32513,128,-32768,-1,-32513„5541,-32744,-1,-32513,128,-32768,-1,-32513,5561,-32744„-1,-32513,128,-32768,-1,-32513,7589,-32748,-1,-32513„128,-32768,-1,-32513,5541,-32750,-1,-32513,128,-32768„-1,-32513,-10823,-32558,-1,-32513,128,-32768,-1,-32513„128,-32768,-1,-32513,128,-32768,-1,-32513,128,-32768„-9992,-32585,10119,-32696,-9992,-32585,10119,-32696,-21507,-32593„21634,-32688,-21507,-32593,21634,-32688,-21507,-32609,21634,-32672„-21507,-32609,21634,-32672,-21507,-32609,21634,-32672,-21507,-32609„21634,-32672,-29699,-32593,29826,-32688,-29699,-32593,29826,-32688„-21515,-32585,21642,-32696,-21515,-32585,21642,-32696,-22287,-32585„22414,-32696,-22287,-32585,22414,-32696,-1,-32513,128,-32768„-1,-32513,128,-32768,-1,-32513,128,-32768,-1,-32513„128,-32768,192,-32767,-65,-32514,192,-32767,128,-32768„-1,-32513,128,-32768,-1,-32513,128,-32768,-1,-32513„128,-32768,-1,-32513,128,-32768,-1,-32513,128,-32768„-1,-32513,128,-32768,-1,-32513,-1,-32513,-1,-32513„-1,-32513,0,0,0,0,0,0,0,0„0„'----------------8<-------[ End BJ2.ICO ]------->8--------------„Jim Little                     ANIMAL GAME                    ANIMAL,GAME                    7/07/93 (03:00)        QB, QBasic, PDS        227  7673     ANIMAL.BAS  'ANIMAL.BAS„„'by Jim Little„„'This code is not copyrighted.  However, if you use this code without major„' modifications, please give me credit.„„'This code implements an old "Intelligence Imitating" algorithm I first„' saw on the Apple II.  Undoubtably, the routine goes back farther than„' that.  I've never seen it on the IBM, though, and thought it may be of„' interest.„„'This was thrown together at 3:00 AM.. please excuse the poor design.„„'What does it do?  Run it and find out!„„DECLARE SUB Intro ()„DECLARE SUB Main ()„DECLARE SUB GetChoice (choice%)„DECLARE SUB InitializeData ()„„TYPE animal„   yes AS INTEGER„   no AS INTEGER„   animal AS STRING * 80„END TYPE„„CONST cAssign = 1„CONST cRetrieve = 2„„CONST False = 0„CONST True = NOT False„„Intro„DO: K$ = INKEY$: LOOP UNTIL LEN(K$)„DO UNTIL K$ = CHR$(27)„   VIEW PRINT 5 TO 25„   Main„   VIEW PRINT 1 TO 25„   Intro„   DO: K$ = INKEY$: LOOP UNTIL LEN(K$)„LOOP„„DEFSNG A-Z„SUB GetChoice (choice%)„'gets a y/n response from the user and returns it as -1 (for y) or 0 (for n)„„LOCATE , , 1„„DO„   K$ = INKEY$„LOOP WHILE UCASE$(K$) <> "Y" AND UCASE$(K$) <> "N"„choice% = (UCASE$(K$) = "Y")„PRINT K$;„„LOCATE , , 0„„END SUB„„SUB InitializeData„'initializes file #1 to include one question and two animals.„„DIM animal AS animal    'the question/animals„„animal.animal = "Does your animal swim a lot?"„animal.yes = 2„animal.no = 3„PUT #1, 1, animal„„animal.animal = "goldfish"„animal.yes = -1„animal.no = -1„PUT #1, 2, animal„„animal.animal = "cat"„animal.yes = -1„animal.no = -1„PUT #1, 3, animal„„END SUB„„SUB Intro„„CLS„PRINT TAB(37); "Animal"„PRINT TAB(34); "by Jim Little"„PRINT„PRINT„PRINT "Think of an animal, and I will attempt to guess it.  As you play, I will"„PRINT "learn more animals.  Eventually, I will know every common animal."„PRINT„PRINT "Press any key when you've thought of an animal, or ESC to quit."„„END SUB„„SUB Main„'This is the main program driver.„„DIM animalnum&       'animal/question being checked/asked„DIM animal AS animal„DIM usersanimal$     'the user's animal/question„DIM companimal$      'the computer's animal/question„DIM newanimal AS animal  'new animal being added to data„DIM choice%          'yes or no response from user (yes is -1,  no is 0)„DIM records&         'number of records in ANIMAL.DAT„„OPEN "ANIMAL.DAT" FOR RANDOM AS #1 LEN = LEN(animal)„IF LOF(1) = 0 THEN„   InitializeData„END IF„„CLS„animalnum& = 1„GET #1, animalnum&, animal„companimal$ = RTRIM$(animal.animal$)„DO„   IF animal.yes <> -1 THEN 'question, not animal„      PRINT companimal$; " ";„      GetChoice choice%„      PRINT : PRINT„      IF choice% THEN  'choice = 'YES'„         animalnum& = animal.yes„      ELSE  'choice = 'NO'„         animalnum& = animal.no„      END IF„   END IF„   GET #1, animalnum&, animal„   companimal$ = RTRIM$(animal.animal$)„LOOP UNTIL animal.yes = -1„„PRINT "Is your animal a "; companimal$; "? ";„GetChoice choice%„PRINT : PRINT„IF choice% THEN„   PRINT "Wow, I'm smart!"„   PRINT "(Press a key)"„   DO: LOOP UNTIL LEN(INKEY$)„ELSE„   LINE INPUT "What was your animal? ", useranimal$„   PRINT„   PRINT "Please type a yes/no question that differentiates a"„   PRINT useranimal$; " from a "; companimal$; ": ";„   LINE INPUT "", newanimal.animal„   PRINT„   PRINT "If your animal was a "; useranimal$; ", how would you answer"„   PRINT "the above question? ";„   GetChoice choice%„   records& = LOF(1) \ LEN(animal)„   newanimal.yes = records& + 1„   newanimal.no = records& + 2„   PUT #1, animalnum&, newanimal„   newanimal.animal = useranimal$„   newanimal.yes = -1„   newanimal.no = -1„   IF choice% THEN„      PUT #1, records& + 1, newanimal„      PUT #1, records& + 2, animal„   ELSE„      PUT #1, records& + 1, animal„„      PUT #1, records& + 2, newanimal„   END IF„END IF„„CLOSE #1„„END SUB„„„„'-----------------8<----[ Begin ANIMAL.DAT ]---->8------------------„„'This is a sample data file for ANIMAL.BAS.  It isn't required,„'but you may enjoy the program more (at first, at least) if„'you unzip it into the directory containing ANIMAL.BAS.  Simply„'execute in a QB-related environment to get ANIMAL.ZIP, then„'unzip with PKUNZIP v2.04 or greater to get ANIMAL.DAT.„CLS : PRINT STRING$(50, 178): DEFINT A-Z'Created by PostIt! 6.1„FOR A = 0 TO 6: P(A) = 2 ^ A: NEXT: OPEN "B", 1, "ANIMAL.ZIP"„T$ = "abcdefghijklmnopqrstuvwxyz": T$ = T$ + UCASE$(T$) + "0123456789#$"„G "qT0aeqb)icaCANXRrE1TM#My)WUl(Gc*b5usnfetUququ1Sw3Fj12aHNx69EVoH"„G "uifinsVFbscqkKqi96y7X2kRSKpz5Bzj9Ep5p5elVl84wVoC238dz#byFlpM9tt"„G "5BksNgC6W#SCfoZw7qYOkinwnvv8S4OLlbU0U6uR2GrLb95mUMXtoVkEa$gNbCM"„G "D1ze5MSnW5NceSpvYMuP3nd9wKjFdI9EnJhMtWdRsuMmC$wBYP437SGZg2lz2Ko"„G "t1Z2gOSrGBboWMp5egPCjOnflD8y0#5aNBhCwXNWdLmgl75bNFxFuo143ToYKXn"„G "FvcgPP4jyL3Pk5Qt9pXfaxyp6uZzBH$$Rs#NgXRYyhkNucR31hLBRRySK9JdNxe"„G "CXRm30KHPoBb6D8wXeUj5oGD2tUzTjHDzoBZFpqDgSNfwZeEgkMCvWv3fNHSYuv"„G "v#iZMUt4U#V5LMsE2nmLFzWL3t85uokItWuEWU$NdwdswwNRxtXBdYURaUYoCDv"„G "EYfo674G00QDmCDh87v5KBckNCtWn3J9mvzgz##oGBTBUzdWt4abQJhA8EqUg4A"„G "xwNrQSaNIpNmn6ViK7pmfFdWn2ZzNqVR2mg3$1bx$QI5NWHQCrkpJj2HYJg87PA"„G "MqbL7hEGEY31QbtYDs4K1CzJdXJcj3nCpl735J6vM4rYXhKuiRB8zbv08HrR07f"„G "UVEILyvwUFuvpFi4H7QZKa$zIDQjeqft#48b1sYtbpDVX8PKjEg6j1andTXN2JI"„G "sk3gC7DX5uMWyT1NpUi0aoZRlidkN8eWtUCS00CLFGmrDX5uRRafu2h8cDTNXKZ"„G "nRLBM1Ji0$TH3z5ZEHk2zRITLdAyJLo7LSjRwjNx6XGhVB#UFwzB5OqF9JaQ7c2"„G "DxD6SjSz8etpiSNL1PXg7RDMXtm9iWJ21V7S0aB7QJpQbx2Y6kuk5zGNTV#q0QY"„G "s2nIm#2#Lkvjso4XbHxU$EggmZ5jXlrfvEbbAqNokksjwL4f88Ko2kibAcWIhZh"„G "WPwjjkr85H9UmoDQKe2GrZW2IkdpanGZeBIffu#n437YlvsXt2DETXhgLnMCg1g"„G "w3wVevlNSvtomIjHcrd6mZPo2X0ZetRZRDqX2y5Mq69Hpyz7zZFKPmKB0lz6RGV"„G "w8DR9IWl1FFDw3eob9wtw9qAmPn#SwqJzJ8dWpcR54tgM7SQ5WhPAWEmP1nanEw"„G "MH9B98P3fEVvS3Ms12yebC$WbwHo9HnQznOFQDelAOTEKHuAuo5iWB1JFVQXAo#"„G "#KBW5egLtc6SX7QYiVvQQCVgCOvmRnnd5SXUQs8vGxTRoZcZCvO0JmbD##6cRMu"„G "oP1Ek3y2NqNX2PIQZxhEJE5LQYTo$UW4ANEqJDQHIv0tBTb3GDZW1RvXtg8na4G"„G "Q#Mps5B$wtwy3DewARJ3ABeTTEKkdLuom8M9T$tRvJP1JOX#57vK5suo5JHpPx$"„G "EJB38$jEPkDTOoP29GvNPzJCRSlOZd5IfDhGT57ublz9O2zzSoX56sCuMKD0$HW"„G "h1pVuOp5HEXelWzel5jhXnGPIFVmrq8k7PL2gn1MdQETNARjdn8GVoL57btNIck"„G "ZN5swo5GoRnQyRtUa0253ZvgjhoSDVntLmBFbxhLPLoFFAojQo$f4xxDEePZOrU"„G "T22zyvoknvoK#zWKEYJwVwP1JUF#sRlUUuzKcPgW2do91P#QWMvtB#hSM22NyAR"„G "S$U24ZWlviohLsARXLRINWYMBQNze9cp8qDF8NgVEuR$Cr9D5NrOSbs5cVRYjKj"„G "JCwXO7AN5Ivojp$T1oyrFgl4XGpV$3iXA1vEhPv0i2Zatz1A546pkmB18NjmLGf"„G "nFACZD0#KDs1I9sw#g4B7S$ttJTSIh$ng3gFAjnj4#p$c4lxT9mIkIS2rb1f5Mj"„G "sIZ$a#ZU4SWUbpFy7kTD6GN1Er8POnI8xWFFkUFZ51IAx24wSt02#5R9E2jxa63"„G "bFFN3Za5ztaDhjNmtQYuBOmzdXK2##6QDI#EW#j4N78EfZBC7UJ$2Ti1GJWA97t"„G "f963N3dM1k#8M51ffnUH2x9Py9ZBJe8wTxKVRzBSTYtfYCzSZTN6KW4LOqY87IS"„G "uUf$E8CtN14TvuTtUZ#E2T3YjbEnViN$53vo3Ooumzb$j6RDEPgsA#CX6YCbJq$"„G "xaqTuacqbau*G(N2z8AKxDRPVjg)S7c(O/ab(i/eKtj1uqm5crbrfulvGb+e(b("„G "o*oz,"„N = 1692: K = 255: IF LEN(C$) <> 2256 THEN PRINT "Bad script!": END„FOR A = 1 TO N: LOCATE 1: PRINT STRING$(50 / N * A, 177): IF L = 0 THEN GOSUB G: L = 6„W = T \ P(6 - L): GOSUB G: W = W OR T * P(L): L = L - 2: B$ = CHR$(W AND K): PUT 1, , B$: NEXT„PRINT : IF C = 74 THEN PRINT "Ok": END ELSE PRINT "Bad checksum!": END„G: I = I + 1: T = INSTR(T$, MID$(C$, I, 1)) - 1: C = (C + T) * 2: C = C \ 256 + (C AND 255): RETURN„„SUB G (A$) : SHARED C$: FOR Q = 2 TO 9: DO: S = INSTR(A$, CHR$(Q + 38))„IF S THEN A$ = LEFT$(A$, S - 1) + STRING$(Q, 97) + MID$(A$, S + 1)„LOOP WHILE S: NEXT: C$ = C$ + A$: END SUB„„'-----------------8<----[ Begin ANIMAL.DAT ]---->8------------------„The ABC Programmer             ARCADE WHEEL OF WEALTH         Like TV Game Show              08-01-95 (00:00)       QB, PDS                238  15623    WEALTH.BAS  '>>> Page 1 of WOW.ZIP begins here. TYPE:BINAA TLEN:11366„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.1„SUB V1:OPEN "O",1,"WOW.ZIP",4^6:Z&=11366:?STRING$(50,177);„U"%up()%9%%%I-%1PmyD#W*Z9kDR%%\W%%%/%.%%&j%fqym%SgfxKfb8BKT]enTfO„U"xV.\?FQ>\^-m?VGJjXn-&'\&MO/2I::p3*g'#Y(kc7tFs(g)n(cAK=f_aUXmSme„U"xn&2ONY,G&G%CCN'bFNl#8r<U8?5urLAZ_$CD$I$8O#Plbq&ior$UEu_lR]4&?*„U"McMG/OShz(f^6tXt=;9_cPO(bVs%OpDgLPMJcpuvHmjUpKR&Tqn*f;:qTj\9/?.„U"u3/[Ncq7sh(h<B$%CeQLRf(UUTB1X/LRIi,iLWt=;X,+*URDpCQNV\;Wlml#NA3„U"Z6T%.hVCQNW<;6m[R<5KS*Eq5.nnL4E*u&S.YU8:8;K,*e1T&,Z(,>3p3bf_kM2„U")<UGcvDhgRhwiv;\mMX?FbATG=afRS/4\g+PqWQg%6kFr_iZ<k0Os574TW'Q>,<„U")U^<n7S$DEN/Z*J;mP%Q:\KA4<9;(=t,Fb$%f4:r_M/qMYgwiTXKl/W*X]'$;3_„U"v8h7x^MgU7^TTdwgtV-$Do^\q+Y+:X-B0ADPkV,V#2HO848b2BgR)kThlHZ82Yi„U"'*IH/lNe#-Z_H_k<KlDDmMWIN1:aIMRsP31ruXhC^06Mh;QVFu3Zy$Y#:uU;M<C„U"ZtiilV?)8utdc/Smc1'5L5XZ5tPohf-RR>Y>fT>Kn'f/6E1**b/D%bZhK.=*EEp„U"QzREl%uX$i##q+6IoblG5s-6G]>f%$*EFC/4'd8:gH+;:?CCh]yXhWEB^Wq?RF&„U"VU?-FYxcO-:vO9U.03rFF;ezGNLp5B^ca=Q7<;\Fkt]nAKl8-Z<$r3Nj\A]puH^„U"'V5FXWD\Ck$quwo]R9#x+T-bPoc:o<Qi'6Z(cIa]6D:QKB4.:M&]X#Z(+8.wZS9„U"*jk5]\Dz65jApedV*UcF0xSi_NPB#+c,.)6Z*oVQ50g\AG<foDPXn_UYyJsl,ht„U"Nv-AxrwJ4WAg/*mrL7-v8bFqs$42OMuLvegVmZ2]q7SxsFCmAN]]^B:?)0=w0%'„U"')VFF:ILb(L6TI<fU0d>TL8UfT0l,SvR'scT?KHB85P*-9g[T\MPEk#XJ,gv6;/„U"\Yd[EERT0(+ErF:;xrTW:3,,>$/B$FyS[$F(oibdNv=qSB*DvE>:%6724X^*f/o„U"$<Z_h_n3ACp1J'0$GtV'qk1HO-q*]h9E>;C_>Utp2d#FP\ZO1$CTTru;3pilvKD„U"bVbV^\P\ZoBJ0lD67pVK?GMl>h5#Ej+=]4?I)rnm?DBS9/Rk/iXkrVRjN;m8e/4„U"TUA$0W)+XaH8\aEjBl/4TChx#brZF>GjtEg0#Ma;lS5n%&1^wTYlnV*=d]_R)nM„U"gc?lihjXXuL73ws02pK'4RuFegTt)H42_n;-N+](%$jb?[KFD%;M?it_]hVY;.K„U"4UolWu#/a]DhLQuYh\%.z3N^?l#tnHO'5'kvL81tffWr<J0,X%a_A[=bPff.Z4T„U"aDSN5u6RoiBO<+tIICOT_1gtk,OPEN,.3dY'?9'MqU5Eq&U%(^LeOO03[ziM4gu„U"o/qAn*dV0X_+jJPPUc=*]9f_z$i,'l+/7DvA?v[wGA\Oh:WmJ:-s4[5c;F1mu,r„U"180.v1Jtc8Acg&zgM;dC*MC_B<Be,>6cD4gRo;N=:NSF>L%DF^AryNNZ=bmj5]h„U"QB0wQnhZ,XbJ4FBB=AGMr5-YnTbPvTD*9I=<r64L8$e,=^9GyPp6<nA_2rJh?1G„U"H^BVs*BJkPTK(EHARI0Z8$;o3\[,TChP>Qs6Q8bOXY0U2%4T;f=1L^H2')>^:EE„U"1*0<DS/lS9;L*eP^F36LGX,OJ02zNC-cib]ulNg,4r\2uRE7oNsEYTAk1g5_&?x„U"Cf&T:0xk_QD3&#*7^VTDcb8[a\&r#ohcZe_08A\%Vlj4StMDNUm^rJk+2&Czg;e„U"4=fodN91U3*H^3hs1;S?2PdK:mMwU=1E%TJAp[svm-s(>(onmM,-6+o2eocQ3K-„U"co5JB3W#G(VJ=T*oIb%Wl+Pg.uz1b(yYag+q;IER$+D_apA7R>2JTm0$#?*Ks*,„U"plBqJ9$gg0t8\pJ#<fw7;8RIADi?v]Ksso73s?CV[#j+tN]n)7on8ELZA%(p(kV„U"%lO5RkZt=$18xV&0\7$23\wh<LJopumHbauQs2>g-eJ]m[^E)Q$QG+E$Tq=E\D7„U"+5APkZJ-Fae,dH*1qV\1y5_$BrTB5qB[>I_hd)HAEg5;3?'p]RQ6,**I/ZFR87p„U"oPran4-6%VSp0g[V_iF$H[e:fDQ7m$fS/NTmiO[me#8:AXUZhIb$95KLMIP9g^S„U"p7ARz1BV9$D?P+Ao\E.oBz./$%:CJtK;FnaMVJuwHYA$KqIP[M7y\S7l&.?uzAN„U".1yOVW:BorwYI7FvrJrZg2czVXi$Yr(uc6o1xf5j2C)0;:YSR1n+$jDbxYE;dz9„U"S=#M#8OVTsJZ4?JZ)uYPkCZ&QgfmT#((>9Eg5Y,f0^:z)4NE:p7IJzR,c_nu-KK„U"P1n)i/bRYE=a^V4IvM?HF)Ck#1h%L[fbVhOGjDEf1oV]Sk,#WRr<zuo9d7tY7#K„U"2FRNDIBw5SHOsO'4*$pMMKQKCQAvJB'<Y#;5ZZ3yCA-;BUD/=Xmk(,S4)G^m2Hk„U"Pxlaq-4_JkBsNW#eyLPfJ]]QKG\^=$B^.U68ipi7>7)TyggMlMdS.s+m$:AQL#-„U"<.$+'84IUg%-NM;:4Wu_9>I;fh1Sdj+;&'9$'?SUg/17*pk315jv_>+saA_f2>[„U"ul\%tGd6Pk;b?YYVW\;*g+X+LkG:>RjI.wM%KN;m>JOkk,m:<Z-Y+O_skQb<P)B„U"*>*c9O%?q=vL89JJYhhoS'U4j2cgPh<cF(6xI6%nBXw3=;Ck5=3kV(>CFrX*J^3„U"5;1c(K(pz5+U_D2foV+G>N<qWQ(2gxp1iv:L=J>j0]PAkn2IGh^4alb%7>C3q'_„U"IC&l(Z;iuJYVnD/'6#0<lc'w%kbH8VFx-a7;/d].v*:+GtCgW9lb]CY;=Zacf,\„U"c9lj%Dz=wNduqgO,fLZna[]8/3v]3/rc^,)#^3T:5koI,L)PmheULT4^e>hq%dK„U"Jt0H6nepruW5ZR5[>hHw-G7Y]s7YAUU,rhS<$:FcanJs(NQh/ND3:>FVQ_lPC<Y„U"MO0Q^r*''9AR,6JjVM&Ygb0%Q*nX4KSAG88jvfBqLH%%'Xe/,U<*]Ohqz4i[1h1„U"A'KSe7Y,MZ#5vsa>yjCnX<b2[/Yoh$CsBl$mpWuiDdf3,Vepvz,EhWBE7au;?7)„U"1<r_-^'uC]4gqtBLpG)bQ9=WC#v-XXFwn,v&TLDCEhSbw_0]#nyP$J0(D1Qdm_(„U"J'U7R5J9Nu.kIT+c)z>Uq^.rUU8+g.w-tna.5Ah(G?18<9>XlDPV(tBZpU6_s6G„U"[EpG[E4i95DFgE4rcWnV_G_W&8Ek='O'p^i'Gx-?X$_K#U(Q&x7E(%Iy-igv%[l„U"PzfLAQB50FsN=pj3As>-]J:Dt%TiW37XY3XT$#H*=eI;a[Mi:Z'4?9:[UuJA<-P„U"YBZ4-1k>u7NvYo^f&[r0[u.y%eE1L#g0XJv)]SusSprS;+k0X.UyWW[KUJxL:n_„U";4H^FRr[\R.SV]o*tp^M4XcDaRDr%<KIFW*k4IQC82%>_;rtRXbkZ<fVAhTW0J-„U"?m8Z3Qubzo7c;Z-bxj016UT>I^W=a$.FcQLD_Pb[sC=FnRs)qu32hE+;Q+$/=Tz„U"v$BTU=Ij5Zyn3mf/G*#_;bmGkk/O8j(79n?f&#E7*Aq%'eI^tYjPr:#kVk17U]x„U"3W(UW7n)$[hNj<=cqpu=v9AQ4=GVo2BPpJ,1*b'XI=A6&'6JN+H)4>6=J>],t7>„U"*)W73OiV*1*_h.d(*Z?R4Sh:3/sT54N]Nv/oTi&Enp.bjWssx6WGgiu-SiCiWvy„U"v(V38qRlRSg*+NKJPLsTh*u^a)dfU7x6XFC9KtmQ9PHapk7]VR)aU_3&lptBBUb„U"b#Ek(5D4aF5x+qG;J10p]7paMIzW/,cHf56.cq#:#\Zx3xUOoS+*.0-8l.#D8B^„U"NNWy2f%RAwi$uJOOj#*kV3wvsjc#d=goRC1c/iHQ2TVsSymHwt]kIfZ*q'D]M0H„U"ncWJY6Os%c^uI_C\8oUmjqR&:SGx>/+IwGd]G)^o%fGIOO(9\wf;_[>[FJ^xV]-„U"5\cM)k4<$a5x<nR)^8$)G3S7Zah%'bukI'KX4viN,f#Ie_mPqg8+q*H'<fB5#:m„U"920^tpm)xS*Li^eW=X06('g=a)GM#.63Q,=63OaM_x+;9j\nir7W2Q,%lat%nT_„U"o6go/3=51\L]3*4W$o+iRc];0O0QvDI)5-:vIm19>w\>miu(ti$da#gPWo\Ld\o„U"K*N+0j#5N#N.GNHq\Z,'QT#>Cf+5W'?=a<8+.U^M)OY3UN(2_G]R(YqUeN>k:,f„U"I0IR(.>d2'^55U$uS'&WbQw(Sv8uI/9ZO3#8[21YsqWC/%/T7k\/y*9zN.GTM?1„U"NVM-q1,2fhU+2s<azCYVE?[oh>5Q=JPykT?+7K/FP#nZ;3Wz%j(qZ$3ql/L55.'„U"RjEEPuA(1])8>ZuhYE]B3mW5Tbbj\tI8oRfdSFedQq(zG;RQ7&YxY7%C4UdZOdM„U"Pe_z]1LRBR&G\l3TprmWM;2b4hbkX4g5]p-n='VSK*5-1rc(+H$Oyrnl>#'9J&E„U"8b2i4L(nyv8>E6wQ$i1^J3o3?t'krmxYWa_XGo2Xmb1$H6WS;v%eqvWJ:]\J]X*„U"U\$Xg=OX*]Ts*p6k7*0]wkkUVP?xbh?NQLZXW]G5=Eq-,Gf]qL$Fk/hp$qRO,G?„U"mmhEt<LuKm;d(/9rDxIFS<Yi<rZc0;d(QAD'C]>VF_SoGC)BICNe^xk>e;0w4r_„U"*KbKdK76'?&iOsUW>p^\(ORw97D+i%;rGKT?..6]9lPKd8KRZb,e'G9jI]'?0U/„U"f=f9+jpX]_8_Nehx:T0Lr9x5l%]$?/*MJIlj/\nNE\bI,5swDEfZlRe%mJaa$wu„U"?Cv/gX4[:Y-\tZ.0cbLm;02=l0Z_:2':W^F*IcYb\&(T$WFxjTf0H>P^msLq+9h„U"eDvk)Dv>,m\Nl#>bc2NI3y]V\i%O#YWU.-Jw-]\-U4gp[\^h1I+s2O<cw1TNPCw„U"mGz^Q)[0<9GzOk-Dz5.$TaC.gOq;kwNCn(W*,gmJet-%&_oH,%3^XKz)3CFz?U6„U">DabgF5fgqs4=_HNEG)YXTA_OZxR?P^6#-6Jm,:?zx_<t;&KvI^kDtY_ASUG)$?„U"UfYO.p/yc0aowQMGyC3RvT?R21CG,I5(KYBVPHgRrkGYJxX>wLHgg8^Zq&E;]D]„U"WEX1Jhq>$i&,iq[zW71nqF>jRuokRTBJKpS>ZF=0tKk:J^8)6XwOOX_;+GX/>])„U"0K7d<O.bc)Gj=r1aC1J%o5+(J[R8f\p\*2g^.kM[zx[,#HiGT$?Z;Jj].8MktL;„U"46$)_n6P>1K%'0,XW*woo*;_nOfqpT>CW>9O(,WB7xZ3lKP?>0P1PQFBU^wGefw„U"[EXGf*9G;FBdo0R%%gHGv0M6za1J6;8bgz2ZgP95TpnD*hmj[&FA:O>KSkz?%V*„U"LG0xod.Wb<f)dddztk-WEi*0I4y>'S?CA]qGILO0sud\D8kZ2lTwwk:;%wvr_lW„U"3$.My^gri6FHQ3bd60)Atr_lW7c.7y^+r_rZQ\-:w$ke_L,pEac9lobtcNb4bp#„U"9?76>Pg0s$p^b<H]Wj]dxzgVsTO[jRub?>,QTL5ht][6'nzOGFKk:K?[MrA#<;F„U"pHBXJ6C.mzK^s)8ZFQC>sZg;_q=4gbWf+h*jzg3;\+Xs2K#OFxn>BDUo\xg-9Wz„U"^sqIX3*bjrz\XS%g&2hJIdtbYiKK>ZMMt,lNxu=g+QU6TJw4cM#p[jMT6%HJP9b„U"g\8Q8ESSJQkZi9;Yk703bS8qgIiT-R)H*#0dlQ=FWOc0.1NhS<by/%EukV.P0SB„U"jUt>t?6:o:<cwb\v]5Xzl&]ReJ]**mTJW8u7q*#[M>FfA&k_o2f$SbHNajmn06R„U"uH\-biR^t#<#XfKkMkt*//=JeF;-%oc\T=mK,PJEFFC^ME+iJ>$n?eMEMmjsWx[„U"BW3,3a0Y>*2%D(W,DVWqA27F\\+GV7sc2$R#J'DroFPGAl:)MrE5rsSUgk$<*LG„U"M(<de^>#[U=^)YkX):PE%K;$g+1-%)mG)%KSV9+ou(WMsN4QfI[K#yjc\-mhXPo„U"xc,k%4O/ZU^ZmMKK+\N)h<>w#m9\N#n#c<N<5dai7(TEg8aoiI1IDj=-f:;$hDG„U"tJHXAa1rb]3>l>sN&'nUaCFQu4MZxX;oU$#,qY'ba3<^8DPP$R9u$K_#Sj;fb6I„U":<]iF:8PIde2AWp<mGbk>1]+ArrI\PBk;uhA>\[c(^6UIHo<)8:b_>;M(E?K=5e„U"&b,mm35^75GxJp#uA+QIup+c*JSa=d'Gvil+_[LV\H,C.hQ]JZ]DcFWE0TC&OS;„U"NfYY(2cO)vcG#9JgqQ*vQ%*B;s']=qvtI\RsxKwc\3/[HbZXZ%[RL&BP$(v]BM4„U">jYAI5Dgi%pL4\h$\kZq(-[fAa'EA7Cka)?D'8.%8wVt%wUtw4VHaVTbSZAgFfQ„U"w:OTjP]C=2ghUDn=SGlZVek=a7YP0hoVs=[Zp<.q1\YHqUk&&$,COcxxR#j&gOW„U"KIP^=]R\UU:MIL*2&qmSfiLs]$kjsDJT=ts[Q>QVQE]WHb.=9]efZK;At*nXK6-„U"RD6,9&u'FBN*GBuh\hA\3*WjN&z(*8lTu\<be-L/:u_0iJUdbULN8J9\SXs9DX<„U":\%U?7+,yi[;M9o0f/*]RoINL]^^nbFdQU)_ML#<$%[G%q^Q0*202316=Wow<-+„U"GftWMYCOS0:.^_1fJG3U>8PHIvb4Ul#J'^(Op;Nkl=)q5x.7g.S0&Ub;4BpIl=T„U"Q6/xf1BdpwFN;mq&+yIF8O[<iP5\t0H#uC0am)\V-cPd4UOa2]P8x4.L4BSbg4m„U"CXdMLzxIA9gy^\C)Q=p%6*UBU,PEcewd?sdpwl=<Oh6THzVxl%2b%''Awj\hV^#„U"VsuncdH=k.u<p/=U-WYp2C(S&f-LRC/#krsEWz,lhTz0)5WaI:io#YOApfP%s6V„U":;7csJg7Y)BWhq:)Q0#N)n=-GhbWis9\JCtWI8sU&k..kCL1-3s_7:)nX&Y$.gt„U"6+W=f&iuAu[tsWAE6r0S6SmzP8w.<S<Tbm2>MY>sO<JwcV'WJSW%WwOB,<w:ZvP„U"4;HH]+B1dxbee:d'?KaK\JpvH)t93M<%5/ytQnibM#n8cxU/EOOs?dN[95>;/h_„U"&UUm\ph.$.(yPFAJz7-OElHB=EvPW_A*-dSKZF&)^$M'?d#cgRnQrDikC+'%\-o„U"itq5du[kc<;DvT#kKmUwqvjTj'(>_V3md(FK[B6L*g0'wJc8W:rZVmb2HIr\jE%„U"agJh'(CoNX)b']w\tkcDZ'uD)1$^IZOr42MiGNBX8W7*>_3'rK0qc?JFB&kiMZI„U"4Chh'IU)wAq,KHE<Gh5^7's;8pN&Y>SmqgJjX;5I^e]H2NC\*jJocb^lbD+&uzq„U"\so4fw[M8KJ1xZa.DfbPR4#BZyMS<wW3A1mva6B]?)Y/_ue9&di(Np;MortB.f9„U"&EN';L6ujvT\c8lX,W63$+.'3CZ?/+HxY6]l[lkVm3fZ23)pACbVjfq]10YUwL\„U"1>1;5WtUjapAE[mVklw5Z0_)PF]3nm2.v2BpBaX0_C]j7eJYls$gc2VdYN=q]Zo„U"RBh)\l48dFLl;lSSF_6W,va#U#&aYO-[2NrN>U?U-Zu$9g=na3++m%C?R<W1q(X„U"B\'WIZmzPUgo//Da$(Lq;)T^+&9M1mB&6$kfsC>JyB4#Pe=Q+o6;jYMFUC8+rAf„U"=UJKV4=iD%;Q#5^[.?eX=2TKVc.tidiazHcGBQ'sc*GS<KRwwh9pLF3L0Ua(0Hu„U"4Me)-kGC:gw7M->;pxc=d^ddTr_W-Nrw9ld]MS;fc*CRbAi1(:2jt4;5wbh)tfM„U"JszL#ta/nksIj'XGf&Cj49UIv_a7in%<R\[klSZC;'MbS?F/rBH>B9J<K?9cgsr„U"$77<fJiiGf[sL:X#^o4,eRC<Dy$N?sW&7\cM9aI%G2V2rXBp6EI#O0>G.\DI4ON„U"Kdze3+kVpIH1l.f+d(XebV(FN.d+*]DRO2S4R0sW]%D9q=(B.Q-UYaG*JM&PD79„U"E.R/03a$'$91N[s9b258]Jz5be2yr*hLxeqr#0j8f2irjk+fka2sF#]FVJJV]:E„U"RvP3W^_u/\$>mYOA#fhE.?Dqxz_'n*Y8_t[^PmG;.R(N3,)9n:O?APzfxsf..z-„U"l<'NI2kCLU'[otGDbeDxm/x[CakrvNrJxEa+1%Wr:N:L=oDs3o;qzWs/A/S*f6e„U"$eubDf7)z3Lw<[1F335SD#=(O8T(QX\l'rf673.\=4Dwa.HK,XSBM/R0P38,E3O„U"\feNm*]cRc]:RHHf;Vi#YcW6AIorJ7n2i6p\IE_O1+36OUHUnl:GXf:tsG-JP5R„U":SP(80Ya\d<q3Qq%+,\%suutB[^#HYl$bM.:t>qM[&ArCN$>FkBM:P<KQUh3R*h„U"W+4\nh-kl9XQ&;=lY0bO,27]Y>7s'3/K#e'T0/J',z\U%Tt/j:9NBKxmKuBV2f&„U"r:&5noM07sfXDRTFa7$w)t$51#?,D9Lu6sGT2aQG</Tw$5PZ5j:CJu7/YVnrQZg„U"MQuH,I#[*dtgi7L,Z^H_erW7mY=NW&&%K*u_.AJ1.L/irRJYS>q</E<OzZ5H<IZ„U"trDE5#0hR9Bh&*Ff_Xa/8YN'cfX.R4liDjVehge6l^EJP_gM62J17fIII%W=^R(„U"QU5ume8S/u2N+'x3d(58foD^t:L-oH/az7+s2u;UcIO0T[/o;/x6r]GhTpWTc'Q„U"0&srO0r86[<yw7nD*;)k%P>e6Wl'SQZ2\\eQT-Hj*C>jYi>,Q('?iRhMj9oGVmw„U"bElmX/jiPdUl9Lckk67w=)01vGqr8ecvNz&Re:VH5F*+*?=wXec\cBBuR'blVuW„U"*(E;CZHgW:OO2PxkGt6(KA^JPriftK^E<R20t#d08[:Z,bkb)/H6agHUI34b]3l„U"ROC4aqHXQM3g]-48;BU23V4:]HG:b3\J\0b#/fS0GNl)[]HdQgKM*5Fe-,s(j>o„U"^<IF_0)xHwfj04amEpGCr5/SBT0C\e.Gg.G$mBX+=Mp&%Dso$j*As&r7f:*+;L:„U"KO:Bae<qC\.B?8pR&t_xv>Z(HGU)7Dc:2HU;=M[*1fx7*VtU?;a,yT2Rp16Q4st„U"A[O4PjkpylI*Y+?>Z61mUCL*?(/9nT+XSkU%$3jh0m]za>z5/Vpo>:InF,i3)']„U"bNStV4d?aiV]NcbxU1eqtc.u>T(&<Zb/oc:Nm.MY&wEKr%*^^eq<A3:J,j)4yj\„U"C78JHWJ9PMvI+M(?gFE1w]W'M(9htM/]teV)YB'k92tIMYte+%imYS^vkh\%6jP„U"YR3vEPTJt/o_a1fj=\1AS?gK7;b7+Ug(rtUN5wfQol%nh*i>P:rI7?x:FEb=;D^„U"$=7b^^C-]U0=3YfeQ*bzHMqW:I\VRed:JYo9egiLSv8PRDOM9KAw0rVAP6?G73O„U":ziA&]P?*SHTp'aD.kQ#eJLLL96ZJcey(I<C1f]%6-v.OX+g615.J*cDK-*K%r4„U"b9W=eoFHAdaGMSZEZe3nbkSp9k$dl'?kf1gnmP82imE%0s%X&P)+=)ir$3w^<.;„U"50,cFSCD_OZS#c4'jNL_'DIP[O74Hi6CwgA#ge1gx0H#);8zk/+*bN4aGM4T_Fp„U"n;f.756mn;?Rar7rZdtqlBMhmv6x1$\':AA1GU'4(G[?vL-OYQ9Gku?rUh.<h+<„U"JeS4<bhuZ<>1W,qvh96<M#?$NqsnC[qowJlcZ)LnvUa_\Fu5grr'wCFY-bOk.as„U"7pQYXM9W0*5Wo294y2ydUQ&558Mi/]R:j5)ka*oG'pY=nT%D9%BNzt$XLD3t08&„U"->3AWvwK,/JaXhdSbb3%#QgN0q?#7VR-/fk;r_o'T+/&>nP=9>WJ2'C%<;s>[\P„U"]r0U,*_mw-S*6pD)um-23_&;4/jL0<u;%j9GY><:#sQ1GaAAf%/]T[7Qa=ES<B+„U"g:)(OFdpn_N0++(skQ-CA.o73jE$-r$7x(&JeO[kW4ZGJzNaIqy/1?W'TQVQ)m1„U"Y*'W%g5%_1<:\RGIO&XnP&dgy0lwKI*VSgPDFk'x%up%()9%%%%-%3;LDCrT-b6„U"%*&%%%l'%%%-%%%%hqzj%SifyD4$fA'<E1j<pmjBc-d>3'C-G(.2mx5V<Bwb19+„U"^p7#[5dQin$Gh,f:;7gk3SXygo'hfkg9Aqo0#A,Q7GQ[vQ;kOYbsXq$f2UX<wE&„U"yRNfh.f-75dtP&NN0oPPNF>'Fs789[+]QN#9dBx^cUW:M9OKT]$?HkR9<9[A)+5„U"V6WHoRYTQTwExlfX>G+o]B+&vceNmAs&o_MMcOX/h(2DCBXe=UVCYwwpBS4fCFm„U"t9?rBmK0Gel9-UiGeU5KTb\h?gTboja-I<LvaOlF[Ow_niakD/f'Gc-\62,L.co„U"Xdr5g..t4elJnV7EM,=uhKgPJVi1WHpp=ct%#up(%)9%%%%-%(A/FCCoF41R[%%„U"%Q%&%%,%%%%g%KfSiIfyD^:fE<UR-ipMNHF/f(PCpQ5;j9VhxSjs]uLN/SbQU5:„U"*Wr?W_rhs3UKL:*CoFPF:.AbG&O^U>n,gvig(yIVYthiB,JoAm8p&hb/-TtsS/M„U"M_.[HjSI.B'HnI3;)Cd&j$/<f&*1>'VRNOf;MyM83t?;0Mr7*E\+kHgHYVDE8d2„U"djwk?HW]%%re_Qs)]k;Z;L%C#tZT$6v^gq]Z0o8:6R#M[cTz$8rC^X_\7.L_:g2„U"%1o#zL1n*_/N6gu;0Z=XD)KDI5]eH(k]pXN-GMTu%p()9%%%%-#%kjLCCCjW+:a„U"%%%%g'%%%.%%%%vzt%yjSi.fyLv1f=SUa15Hj>V2ny2xLQ&c,jS=[zU#jWwfMu*„U"N%go[t>L\qG5urWJF5M-Rj_%%x11R>P,StMLt,i&=/oq5b<dC>[n9i4Ro:w,qF-„U"0^*MoYDPU;L.KN_2c,gpX1vmMvG+rxrsP*UK,JKd)?*0Fpe,>BJQ.hyeR,O4Xke„U"KPFc11wl1E/XW7Wd2Z^y5A3k2Q4j4i=_=%z;<$-sMkx=r];Uq850RAFL-jXH^7Z„U"jjq%oFAPRhc]KIXPolxh\E$G*ZAp'V9$zw6=BD'fQPv+LedAmH98UB[tyPR',<X„U"up%()9%%%%-%/KjLC0Bsnd&p(%%'#0%%%/%%%%umwf%xjSiIfyT%2*az]O1vvY+„U"baT0)gi*-FQ9:2LVMSj6n(3IpfaTN+rt0#OId#]X3wpn-7T<QIUX4wt*XJ3Yd$>„U"2u&29A:PP\b*7.4)BxzttNhm+>OF9]F?c43fk(=cIivM;?:,hbe/(3h]dfe,v\7„U"25b#f.-Zk=kaAp^A3Wp<JrNMMcfihX^Bg%$q)aXf]7J)/w)=?V*=F4mKVB;W(Xj„U"qe9NtnL;;Y&b(D&Et=6&<i(+SVTa31p)][A>aXkh?R7UWEax=QgIe?5Yb,'2L+.„U"o5<&r)A?r6c\sq3:=:Z)F/N#f&.HvEp/VP(j$_;.TsfGvum9q;bBH)e1)VTlw&Y„U"lk^,<b^'X$,J\UBaGJd/TX8c71$sPh?.\3Q&)??nAiX&.t=a%i4+53'khQJ;Y=_„U"i(9^a\EEtK<-HHvKSGFKF+h[$je?A>CFfx,)+nkC*Fb\4>Yc)A=B1W[MRp[L3>:„U":9nUrzo%4N2qx2--%M6O1*\/3b/N0Cz(+RDTDJp$:pg5v,\>Q?tt#BOUo_N,Rxk„U"0FYIBi^mjdA;0X[].A^cOahk+OPHR.M_#qr#l6WvVC4x=l%=)d<1't%?Z<7+\KV„U"a&XBcIFiGb%VHkC0B'J3rc1TLvoFEvqXl;hM?%P-yYJsouR,pG>+>.'?M&>'#iN„U"WPbxPqBm]/T.<'Krc-^]h9ut2H7V4'Zu%U(V_h<po&7$5rAb8RKD-*N.w=yP1q.„U"Q3'atf/v#])m$cH2iEF:Oiq,p8mc'bhaEk.Z$iSvGW4[r$1P4EBfh;zi2ep,GN9„U"l7JN,lmc_tz9abiT&dB5A'Mc=uyQ8kR.mACXfd(/00+YoFjlX)S.hlh:r;)D+sJ„U"+SYa[0Q\ptu)takFV98VT9[ah$i9SZ^h&uQZYY9v6K?w-.?NiSKT6zF6JHZAoZ#„U"Rc*bSNaWf>TFgXdK-YiLS9;_\wpofQ^9*.#&vH<]MPJ^Tg/*]i?qATQNq]-9KwN„U"LYo&2rVYrGH\;g,\&c?g(dM863T7>O?1<PmsQO$CT]D(R<MjcR_%sR'd;?saH_j„U"b+GQ\z'q:,hYO=#l[F5_v$lvK&kD964Vf<PY*o<77k>TX,G\H9KEd.]VXog1\3a„U",^':bKoAK.b&P2a$Ee.x;briiYL:;sNunWC:L(G>/+IcX&Ab.Nb\UiM5$):/=4T„U"TDfK\gG/)8+zrdu%p()9%%%%-I%gL?mC8<H(#=%%%%-&%%%.%%%%uqf%hjSi[fy„U"X^<^An21-XSxh-pM'D]p/]pc]:WP]aawMcQQzYZ(8.GW8DWufa\]7?9[-\1_$sa„U"^35MXA[Zys5]hes2_qs5VsT],Is*8$Kt5_Za\\YdpC,.M^rnZbQ8#A[S5\AsXQL„U"H\,F]M(4,N%%up()%9%%%#-%(/%FCed%t1h%7%%?%%%%.%%%%xq%fslS%ifyXlZ„U"^AnI2-XS[x//GepFm'd/&m'0aw'Nm*Ein6pp#ILoDWVqvn4'Yr'(r3'fv$o*;1q„END SUB„SUB V2„U"nV_r1;QhZC>]77=&9%up%()9%%%%-%34K?C%3bTe''%%%&/'%%%.%%%%ymns%lS„U"if1y\$V(3RU1^jFIg*Yx#h&J(L=f)?aM[Vybx(n9=_IyR3Xk2rN>Qh$I:p#i,7(„U"ctlJ%m(];5l7Vd70%)LNiZr)-6\$l(ce*s<*Okm=wS?tCiYxPAZrM45c7kc%xC0„U"o0fw$UPv9Y#*dEGF/kt;HtY<J-,j&7c.b2z_sP<))ccM9IaJ*D-SJ;+cRuR?2hf„U"(%cA?JV_6/Zw9bQ>Cv$B]Ui5o(=d9xmWu%p()9%%%%-.%'/FXCF.r('*%%+%%%%„U"%%,%%%%xKw%SifyXX_^ABn2-X&Sx/F-w7/Cq]MW::/]:e3'jNuM_:?WMQJw>4%3„U")yZCDL&H:R6w4?AE)3cEEz:-Bn0d.2A=u(HPLuR<JNsl:TN=V=X4?%PBV?=PJ4&„U",F%u%p()9%%%%-#%ZjL4C9Db%^g%%+%?%%%%1%%%%rjl(f&tw%iSifmyXZ^,An2„U"-)XSx/Of'M]Ym::]tMG'a2A'xU5&8_EmtDx9=uHY5)qCMMFMqlG$3Gk2f35xWuR„U"XVH=XCJ4,fr%u%p()9%%%%-.%(/FjC5QY)_j%%%%k&%%%/%%%%ujt%uqjS#ifyL„U"8_V'(#F1iJ=IgYO?V/bBEiQ\/<(OF<9$dBL.w[YGM$9;8tm#oNj?CJd5>2#o)?P„U"])QDa,1n8OX/5feTOMJa5\c'IG:XFUA*#x#[yDozZgtx)<B=-1,)nWl&=^H55)G„U"8j]ZFa*rr^m.k^4YLak2+ihtr?F:Ej3up8ql$iJ*xWhAPf2WH-$$4'e8.3FqyTk„U"#,Uxup%&'9%%9%%%I-%1PmyD#W*Z9kDR%%\W%%%/%%%%%%%%%&%%E%%%%%%%%&&„U"jfq%ymSg%fxup%&'9%%9%%%R-%;LSDCT--b6*&%%%l'%%%-%%%%%%%%%&%%E%%%„U"&=D%%%hqzj%Sify%up&'%9%9%%%%-%((/FCbCF41'R%%%'Q&%%%,%%%%%%%%%&%„U"E%.%%hE%%%gK%fSif%yup&%'9%9%%%%-#%kjLCCCjW+:a%%%%g'%%%.%%%%%%%%„U"%&%E#%%%f%F%%v%ztyj%Sify%up&'%9%9%%%%-%/KjLC0Bsnd&p(%%'#0%%%/%%„U"%%%%%%%&%E%.%%uG%%%um%wfxj%Sify%up&'%9%9%%%%-%1gL?C=8<H#&=%%%%-„U"&%%%.%%%%%%%%%&%E%.%%>K%%%uq%fhjS%ifyu%p&'9%%9%%%%-%(&/FCe%dt1h„U"[%%%?%%%%.%%%%%%%%%&%%E%%%%)L%%%xqf%slSi%fyup%&'9%%9%%%R-%4K&?C„U"3b7Te'%.%%/'%%%.%%%%%%%%%&%%E%%%&=L%%%ymns%lSif%yup&%'9%9%%%%-.„U"%'/FXCF.r('*%%+%%%%%%,%%%%%%%%%&%E%%%%h%M%%x%KwSi%fyup%&'9%%9%%„U"%%-%ZjSLC9D%b^g%7%%?%%%%1%%%%%%%%%&%%E%%%'<M%%%rjlf&&twi%Sify%u„U"p&'%9%9%%%%-%((/FCW5QY_&j%%%%k&%%%/%%%%%%%%%&%E%%%%TN%%%uj%tuqj„U"%Sify%up*+%%%%%%0%0%&-'%%'kN%%%%%„END SUB„V2„CLOSE:IF S=53AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„'>>> Page 1 of WOW.ZIP ends here. Last page. TCHK:53„The ABC Programmer             EGA CONNECT FOUR               EGA,CONNECT,FOUR               09-09-95 (09:29)       QB, QBasic, PDS        308  8602     CONNECT4.BAS'===================================================„' EGA CONNECT FOUR by William Yu  (09-09-95)„' Yes!  I can document!  Not very well though.„' I took two hours programming this, and I bet I„' used almost a third of it trying to document it.„'„' INSTRUCTIONS For Game Play:„'   Object of the game is to connect your coloured„'   chips four in a row, horizontally, vertically or„'   diagonally before the other person does.„'„' MODIFICATIONS To Make:„'   Make the computer think„'   You can change the grid size to any dimension„'   Better intro and ending screens„'   Better Game Play, with commands„'   Multiple games are possible„'   Save/Continue played games„'„' Alright, so I haven't added computer difficulty.„' That's up to you, I programmed this for two„' players.  You can probably add modem features to„' play head-to-head via modem.„'„' FOR MODEM PLAY:„'   All that needs to be sent are X values via modem„'   You can replace/modify ComputerTurn to wait for„'   the modem to send something and call the„'   DropChip subroutine to validate it.„'===================================================„„DEFINT A-Z„DECLARE SUB DrawGrid ()„DECLARE SUB DrawChip (X%, ChipColor%)„DECLARE SUB EraseChip (X%)„DECLARE SUB DropChip (X%, ChipColor%, Valid%)„DECLARE SUB SwitchTurn (X%, ChipColor%, ChipColor2%)„DECLARE SUB CheckForWin (Row%, Col%, ChipColor%)„DECLARE SUB WhoWon (ChipColor%)„DECLARE SUB ComputerTurn (ChipColor%, ChipColor2%)„„DIM SHARED Grid(8, 8)' Do not change unless you know what you're doing„CONST True = 1       ' Define Constants„CONST False = 0„CONST Computer = 12  ' Define Colors for Computer/User„CONST User = 9       ' Computer = Red / User = Blue„                     ' Computer <> User„CONST Player = 1     ' One or Two Players„                     ' If two players then Player Two = Computer„CONST Level = 0      ' Level of difficulty against computer„                     ' 0 = Moronic„                     ' 1 = Easy          Please implement„                     ' 2 = Normal        computer difficulty„                     ' 3 = Hard„                     ' 4 = Really Hard„SCREEN 7, 0, 0, 0    ' Change to other screen modes if desired„„DrawGrid             ' Call DrawGrid Subroutine (Draws Playing Field)„„„GoesFirst = True     ' User goes first (Change to False to go second)„„IF GoesFirst THEN„  ChipColor = User          ' Using two variables for swapping later„  ChipColor2 = Computer„ELSE„  ChipColor = Computer„  ChipColor2 = User„  ComputerTurn ChipColor, ChipColor2„END IF„„X = 144              ' X value changes Ò 28„                     ' Leftend value  = 60„                     ' Rightend value = 256„Drops = 0            ' Setup Counter  (Max of 64 Drops before grid is filled)„„DO„  IF Drops = 64 THEN GOTO TieBreak„  DrawChip X, ChipColor„  DO„    Key$ = INKEY$„  LOOP UNTIL Key$ <> ""„„  SELECT CASE Key$„    CASE CHR$(0) + "M"          ' User Pressed RIGHT ARROW„      EraseChip X„      IF X < 256 THEN           ' Make sure it's not end of grid„        X = X + 28„      ELSE                      ' Else go back to beginning„        X = 60„      END IF„    CASE CHR$(0) + "K"          ' User Pressed LEFT ARROW„      EraseChip X„      IF X > 60 THEN            ' Make sure it's not at beginning of grid„        X = X - 28„      ELSE                      ' Else go to the end of the grid„        X = 256„      END IF„    CASE CHR$(0) + "P", CHR$(13)    ' User Pressed ENTER or DOWN„      DropChip X, ChipColor, Valid  ' Drop the Chip„      IF Valid = True THEN          ' Valid Drop„        SwitchTurn X, ChipColor, ChipColor2„        Drops = Drops + 1           ' Increase counter„        Valid = False„        IF Player = 1 AND Drops <> 64 THEN ComputerTurn ChipColor, ChipColor2„      END IF„    CASE CHR$(27)               ' User Pressed ESC  (Quit Program)„      GOTO ProgramEND„  END SELECT„„LOOP„„TieBreak:„  LOCATE 1, 1: COLOR 15: PRINT "It's a tie!"„„ProgramEND:„  END„„SUB CheckForWin (Row, Col, ChipColor)„„'              <--- Column --->„'              1 2 3 4 5 6 7 8  XY„'              ----------------+„'              o o o o o o o o | 1„'              o o o o o o o o | 2„'              o o o o o o o o | 3„'              o o o o o o o o | 4„'  Start to -> o o o o o o o o | 5„'   Check      o o o o o o o o | 6„'    Down      o o o o o o o o | 7„'              o o o o o o o o | 8„'„' Here's what is checked first:„'„'   HORIZONTAL then VERTICAL then DIAGONAL„'„' You can change the order if you wish.„„Connect = 1„„FOR C = Col - 1 TO Col - 3 STEP -1„  IF C = 0 THEN EXIT FOR„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor„FOR C = Col + 1 TO Col + 3„  IF C = 9 THEN EXIT FOR„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor ELSE Connect = 1„„' Check Vertical, only if dropped chip is high enough to count downwards„' If not, forget checking„„IF Row < 6 THEN„  FOR C = Row + 1 TO Row + 3„    IF Grid(Col, C) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„  NEXT C„END IF„IF Connect = 4 THEN WhoWon ChipColor ELSE Connect = 1„„„' Diagonal Check (Left Up/Down)„„BackRow = Row„FOR C = Col - 1 TO Col - 3 STEP -1„  IF C = 0 THEN EXIT FOR„  IF Row = 1 THEN EXIT FOR„  Row = Row - 1„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor„Row = BackRow„FOR C = Col + 1 TO Col + 3„  IF C = 9 THEN EXIT FOR„  IF Row = 8 THEN EXIT FOR„  Row = Row + 1„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor ELSE Connect = 1„„„' Diagonal Check (Right Up/Down)„„Row = BackRow„FOR C = Col + 1 TO Col + 3„  IF C = 9 THEN EXIT FOR„  IF Row = 1 THEN EXIT FOR„  Row = Row - 1„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor„Row = BackRow„FOR C = Col - 1 TO Col - 3 STEP -1„  IF C = 0 THEN EXIT FOR„  IF Row = 8 THEN EXIT FOR„  Row = Row + 1„  IF Grid(C, Row) = ChipColor THEN Connect = Connect + 1 ELSE EXIT FOR„NEXT C„IF Connect = 4 THEN WhoWon ChipColor ELSE Connect = 1„„END SUB„„SUB ComputerTurn (ChipColor, ChipColor2)„„SELECT CASE Level„  CASE 0„    DO„      RANDOMIZE TIMER„      Col = INT(RND * 8) + 1„      X = 60 + ((Col - 1) * 28)„      DropChip X, ChipColor, Valid„    LOOP UNTIL Valid = True„  CASE 1„  CASE 2„  CASE 3„  CASE 4„END SELECT„„SwitchTurn X, ChipColor, ChipColor2„„END SUB„„SUB DrawChip (X, ChipColor)„„  CIRCLE (X, 7), 8, ChipColor„  PAINT (X, 7), ChipColor„„END SUB„„SUB DrawGrid„„LINE (45, 20)-(270, 180), 14, BF„LINE (51, 17)-(275, 17), 14„LINE (275, 17)-(275, 175), 14„LINE (51, 17)-(45, 20), 14„LINE (275, 17)-(270, 20), 14„LINE (275, 175)-(270, 180), 14„PAINT (273, 100), 6, 14„LINE (45, 181)-(270, 181), 12„LINE (276, 175)-(290, 189), 12„LINE (45, 181)-(31, 195), 12„LINE (270, 181)-(284, 195), 12„LINE (31, 195)-(284, 195), 12„LINE (290, 189)-(284, 195), 12„LINE (275, 176)-(270, 181), 12„PAINT (150, 185), 12„PAINT (282, 184), 4, 12„„FOR Y = 30 TO 170 STEP 20„  FOR X = 60 TO 260 STEP 28„    CIRCLE (X, Y), 8, 0„    PAINT (X, Y), 0, 0„    CIRCLE (X, Y), 6, 14, 4.6, .1„  NEXT X„NEXT Y„„END SUB„„SUB DropChip (X, ChipColor, Valid)„„  Col = (X - 60) / 28 + 1        ' Calculates the Column (1-8)„„  FOR C = 8 TO 2 STEP -1„    IF Grid(Col, C) = False THEN EXIT FOR„  NEXT C„„  IF Grid(Col, C) = False THEN ' Empty Holder, place your chip here„    Grid(Col, C) = ChipColor     ' Make it filled„    Row = ((C - 1) * 20) + 30    ' Calculate the Row„    CIRCLE (X, Row), 8, 8        ' Make Chip border color Dark Grey„    PAINT (X, Row), ChipColor, 8 ' Fill chip color„    Valid = True„    CheckForWin C, Col, ChipColor„  END IF„„END SUB„„SUB EraseChip (X)„ „  PAINT (X, 7), 0„„END SUB„„SUB SwitchTurn (X, ChipColor, ChipColor2)„„  EraseChip X„  SWAP ChipColor, ChipColor2    ' Swap the two variables„  X = 144                       ' Reset X Coordinates„  DrawChip X, ChipColor„„END SUB„„SUB WhoWon (ChipColor)„„  ' Check who wins„  ' Do whatever you want for the closing screen„„  IF ChipColor = User THEN„    IF Player = 1 THEN PRINT "You Win!" ELSE PRINT "Player One Wins!"„  ELSE„    IF Player = 1 THEN PRINT "Computer Wins!" ELSE PRINT "Player Two Wins!"„  END IF„„  END„„END SUB„„George Blank                   X-WING FIGHTER                 alt.lang.basic                 09-28-78 (00:00)       QB, QBasic, PDS        665  35172    XWING.BAS   10 KEY OFF: CLS„20 SCREEN 0„30 WIDTH 40„40 PRINT "000000000000000000000000000000000000000"„50 PRINT "0ZDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD?0"„60 PRINT "03                                   30"„70 PRINT "03            2060-A.BAS             30"„80 PRINT "03              XWING                30"„90 PRINT "03                                   30"„100 PRINT "03                                   30"„110 PRINT "03 BROUGHT TO YOU BY THE MEMBERS OF  30"„120 PRINT "03      \\\\\ \\\\\ \\\\\ \\\\\      30"„130 PRINT "03        [   [   [ [     [   [      30"„140 PRINT "03        [   [\\\[ [     [   [      30"„150 PRINT "03        [   [     [     [   [      30"„160 PRINT "03      \\[\\ [     [\\\\ [\\\[      30"„170 PRINT "03                                   30"„180 PRINT "03      International PC Owners      30"„190 PRINT "03                                   30"„200 PRINT "03P.O. Box 10426, Pittsburgh PA 1523430"„210 PRINT "03                                   30"„220 PRINT "0@DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDY0"„230 PRINT "000000000000000000000000000000000000000"„240 PRINT„250 PRINT "       PRESS ANY KEY TO CONTINUE"„260 A$ = INKEY$: IF A$ = "" THEN 260„270 WIDTH 80„280 CLS„1000  REM * STAR PILOT GAME *„1010  REM * WRITTEN BY GEORGE BLANK, LEECHBURG, PA. *„1020  REM * FOR  PUBLIC DOMAIN UNLESS MOVIEMAKERS OBJECT *„1030  REM * VERSION 4.0    SEPTEMBER 25,1978 *„1040  REM * MODIFIED TO RUN ON THE IBM PC BY ERNEST *„1050  REM * SMITH AND RAYMOND ROGERS, HOUSTON, TEXAS *„1060  REM * DECEMBER 82 *„1070  KEY OFF: CLS : WIDTH 80: DEF SEG = 0: A = PEEK(&H410): POKE &H410, (A AND &HCF) OR &H20„1080  WIDTH 40: SCREEN 1: SCREEN 0: WIDTH 80: WIDTH 40: SCREEN 1: COLOR 0, 1„1090  GOTO 1200„1100  V = V - 1: IF V < -3 THEN V = -3„1110  RETURN„1120  W = W - 1: IF W < -5 THEN W = -5„1130  RETURN„1140  W = W + 1: IF W > 5 THEN W = 5„1150  RETURN„1160  V = V + 1: IF V > 3 THEN V = 3„1170  RETURN„1180  KEY(1) ON: KEY(2) ON: KEY(11) ON: KEY(12) ON: KEY(13) ON: KEY(14) ON: RETURN„1190  KEY(1) STOP: KEY(2) STOP: KEY(11) STOP: KEY(12) STOP: KEY(13) STOP: KEY(14) STOP: RETURN„1200    LOCATE 8, 1: PRINT "***************************************";„1210    PRINT "*                                     *";„1220    PRINT "*      X W I N G   F I G H T E R      *";„1230    PRINT "*                                     *";„1240    PRINT "***************************************";„1250  SOUND 525.25, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 587.33, 18.2 / 6: SOUND 1046.6, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 587.33, 18.2 / 6„1260  SOUND 1046.5, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 698.46, 18.2 / 6: SOUND 587.33, 18.2„1270 LOCATE 16, 1: PRINT "DO YOU WANT INSTRUCTIONS (Y OR N)?";„1280  K$ = INKEY$: IF K$ = "Y" OR K$ = "y" GOTO 6930„1290  IF K$ <> "N" AND K$ <> "n" GOTO 1270„1300 CLS : CLEAR : DEFINT A-Z: DEFSNG G, J, O, S„1310 RANDOMIZE (VAL(RIGHT$(TIME$, 2)))„1320  ON KEY(1) GOSUB 5350: ON KEY(2) GOSUB 5750: ON KEY(11) GOSUB 1100: ON KEY(12) GOSUB 1120: ON KEY(13) GOSUB 1140: ON KEY(14) GOSUB 1160„1330  LOCATE 8, 1: PRINT "IMPERIAL FIGHTER:  ": DRAW "C2;BM145,59;M+0,0;BM+10,1;M+0,-2;M+2,2;M+0,-2;BM+10,-1;M+0,4;BM+6,-4;M+0,4;M+0,-2;M-6,0"„1340  DIM IM(6): DIM IM1(6): DIM IM2(6): DIM IM3(6): GET (145, 59)-(145, 59), IM: GET (145, 59)-(145, 59), IM1: GET (155, 58)-(157, 60), IM2: GET (167, 57)-(173, 61), IM3„1350  DIM IM4(13): IM4(0) = 22: IM4(1) = 7: IM4(2) = 128: IM4(3) = -32760: IM4(4) = 2048: IM4(5) = 128: IM4(6) = -22008: IM4(7) = -22358: IM4(8) = 128: IM4(9) = -32760: IM4(10) = 2048: IM4(11) = 128: IM4(12) = 8„1360  DIM IM5(20): IM5(0) = 26: IM5(1) = 9: IM5(2) = 128: IM5(3) = -32768!: IM5(4) = 128: IM5(5) = -32768!: IM5(6) = 128: IM5(7) = -32768!: IM5(8) = 128: IM5(9) = -32768!: IM5(10) = -21846: IM5(11) = -32598: IM5(12) = 128„1370  IM5(13) = -32768!: IM5(14) = 128: IM5(15) = -32768!: IM5(16) = 128: IM5(17) = -32768!: IM5(18) = 128: IM5(19) = -32768!„1380  DIM IM6(44): IM6(0) = 34: IM6(1) = 17: IM6(2) = 2048: IM6(5) = 32: IM6(7) = -32768!: IM6(9) = 512: IM6(12) = -32760: IM6(14) = 8192: IM6(15) = 32: IM6(17) = 2176: IM6(20) = 2: IM6(23) = 128: IM6(25) = 8192: IM6(28) = 8„1390  IM6(29) = 128: IM6(30) = 512: IM6(31) = 2: IM6(33) = -30720: IM6(36) = 32: IM6(38) = -32768!: IM6(40) = 512: IM6(43) = 8„1400  DIM IM7(44)„1410  IM7(0) = 30: IM7(1) = 21: IM7(2) = -22006: IM7(3) = -22358: IM7(4) = 32: IM7(5) = 8192: IM7(6) = -21846: IM7(7) = -32598: IM7(8) = 2048: IM7(9) = 128„1420  IM7(10) = 2048: IM7(11) = 128: IM7(12) = 2048: IM7(13) = 128: IM7(14) = 2048: IM7(15) = 128: IM7(16) = 2048: IM7(17) = 128: IM7(18) = 2048: IM7(19) = 128„1430  IM7(20) = 2560: IM7(21) = 32: IM7(22) = 2048: IM7(23) = 128: IM7(24) = 8704: IM7(25) = 128: IM7(26) = 2048: IM7(27) = 128: IM7(28) = 2048: IM7(29) = 128„1440  IM7(30) = 2048: IM7(31) = 128: IM7(32) = 2048: IM7(33) = 128: IM7(34) = 2048: IM7(35) = 128: IM7(36) = 2048: IM7(37) = 128: IM7(38) = -22518: IM7(39) = -22358„1450  IM7(40) = 2592: IM7(41) = 8192: IM7(42) = -21846: IM7(43) = -32598„1460  DIM IM8(102)„1470  IM8(0) = 50: IM8(1) = 29: IM8(3) = 2048: IM8(7) = 10: IM8(10) = 2048: IM8(11) = 128: IM8(14) = 8200: IM8(17) = 2048: IM8(18) = 8: IM8(21) = 514„1480  IM8(25) = -32640: IM8(28) = 8192: IM8(29) = 32: IM8(32) = 2184: IM8(35) = 514: IM8(36) = 2: IM8(38) = 2048: IM8(39) = -32760: IM8(40) = 128: IM8(42) = 8352„1490  IM8(43) = -32736: IM8(45) = 8194: IM8(46) = 2176: IM8(47) = 128: IM8(48) = 512: IM8(49) = 34: IM8(50) = -32766: IM8(51) = 128: IM8(52) = 10250: IM8(54) = -24448„1500  IM8(55) = 8704: IM8(56) = 32: IM8(58) = 136: IM8(59) = -24446: IM8(61) = -32256: IM8(62) = 514: IM8(63) = 128: IM8(65) = -30592: IM8(66) = 8: IM8(68) = 8192„1510  IM8(69) = 8224: IM8(72) = 8200: IM8(73) = 128: IM8(75) = 512: IM8(76) = 34: IM8(79) = -22528: IM8(80) = 128: IM8(83) = 8224: IM8(86) = 2048: IM8(87) = 8„1520  IM8(90) = 2050: IM8(94) = 136: IM8(97) = 10240: IM8(101) = 8„1530  LOCATE 10, 1: PRINT "DARTH VADER     :  ": DRAW "C2;BM145,75;M+0,0;BM+10,1;M+0,-2;M+2,2;M+0,-2;BM+11,-1;M-1,1;M+0,2;M+1,1;BM+4,-4;M+1,1;M+0,2;M-1,1;BM+1,-2;M-6,0"„1540  DIM DV(6): DIM DV1(6): DIM DV2(6): DIM DV3(6): GET (145, 75)-(145, 75), DV: GET (145, 75)-(145, 75), DV1: GET (155, 74)-(157, 76), DV2: GET (167, 73)-(173, 77), DV3„1550  DIM DV4(13)„1560  DV4(0) = 22: DV4(1) = 7: DV4(2) = 8: DV4(3) = 8320: DV4(4) = 8192: DV4(5) = 128: DV4(6) = -22008: DV4(7) = -22358: DV4(8) = 128: DV4(9) = 8200„1570  DV4(10) = 8192: DV4(11) = 8: DV4(12) = 128„1580  DIM DV5(20)„1590  DV5(0) = 26: DV5(1) = 9: DV5(2) = 8: DV5(3) = 8: DV5(4) = 32: DV5(5) = 2: DV5(6) = 128: DV5(7) = -32768!: DV5(8) = 128: DV5(9) = -32768!„1600  DV5(10) = -21846: DV5(11) = -32598: DV5(12) = 128: DV5(13) = -32768!: DV5(14) = 128: DV5(15) = -32768!: DV5(16) = 32: DV5(17) = 2: DV5(18) = 8: DV5(19) = 8„1610  DIM DV6(32)„1620  DV6(0) = 30: DV6(1) = 15: DV6(2) = -22528: DV6(4) = 2: DV6(6) = 8: DV6(8) = 34: DV6(10) = -32640: DV6(12) = 8320: DV6(14) = 2176: DV6(16) = 512„1630  DV6(19) = 2176: DV6(21) = 2080: DV6(23) = 2056: DV6(25) = 8194: DV6(27) = -32768!: DV6(29) = 2: DV6(31) = 168„1640  DIM DV7(44)„1650  DV7(0) = 32: DV7(1) = 21: DV7(2) = 10752: DV7(3) = -24406: DV7(4) = -32768!: DV7(5) = -30720: DV7(6) = -22014: DV7(7) = 682: DV7(8) = 520: DV7(9) = -30688„1660  DV7(10) = 544: DV7(11) = 8224: DV7(12) = 512: DV7(13) = 32: DV7(14) = 512: DV7(15) = 32: DV7(16) = 512: DV7(17) = 32: DV7(18) = 512: DV7(19) = 32„1670  DV7(20) = 512: DV7(21) = 136: DV7(22) = 512: DV7(23) = 32: DV7(24) = 2048: DV7(25) = 160: DV7(26) = 512: DV7(27) = 32: DV7(28) = 512: DV7(29) = 32„1680  DV7(30) = 512: DV7(31) = 32: DV7(32) = 512: DV7(33) = 32: DV7(34) = 520: DV7(35) = 544: DV7(36) = 546: DV7(37) = 2080: DV7(38) = -21888: DV7(39) = -24534„1690  DV7(40) = 546: DV7(41) = -32640: DV7(42) = -22006: DV7(43) = 170„1700  DIM DV8(76)„1710  DV8(0) = 46: DV8(1) = 25: DV8(3) = 10752: DV8(4) = 128: DV8(6) = -32768!: DV8(7) = 32: DV8(9) = -22526: DV8(10) = 8: DV8(12) = 512: DV8(13) = 2„1720  DV8(16) = -32640: DV8(18) = 512: DV8(19) = 8224: DV8(21) = 2048: DV8(22) = 2056: DV8(24) = 8192: DV8(25) = 2082: DV8(27) = -32766: DV8(28) = -30592: DV8(30) = -32248„1730  DV8(31) = 10240: DV8(32) = 128: DV8(33) = -30712: DV8(34) = 2048: DV8(35) = 128: DV8(36) = -24536: DV8(37) = 2048: DV8(38) = 128: DV8(39) = -32630: DV8(40) = 2048„1740  DV8(41) = 672: DV8(42) = -32760: DV8(44) = 2184: DV8(45) = 10: DV8(47) = 8322: DV8(48) = 32: DV8(50) = -32640: DV8(51) = 128: DV8(53) = -32224: DV8(56) = -30712„1750  DV8(59) = -24062: DV8(62) = -32768!: DV8(63) = 168: DV8(65) = 8192: DV8(66) = 136: DV8(68) = 2048: DV8(69) = 136: DV8(71) = 512: DV8(72) = 136: DV8(75) = 168„1760  LOCATE 12, 1: PRINT "DEATH STAR      :  ": DRAW "C3;BM145,91;M+0,0;BM+11,-1;M-1,1;M+2,0;M-1,1;BM+12,-3;M+1,0;M+1,1;M-3,0;M+0,1;M+3,0;M-1,1;M-1,0"„1770  DRAW "C3;BM+12,-5;M+2,0;M+1,1;M-4,0;M-1,1;M+6,0;M+0,1;M-6,0;M+0,1;M+6,0;M-1,1;M-4,0;M+1,1;M+2,0"„1780  DIM DS(8): DIM DS1(8): DIM DS2(8): DIM DS3(8): DIM DS4(8): GET (145, 91)-(145, 91), DS: GET (145, 91)-(145, 91), DS1: GET (155, 90)-(157, 92), DS2: GET (167, 89)-(170, 92), DS3: GET (178, 87)-(184, 93), DS4„1790  DIM EXPL3(18): DIM EXPL4(18): DIM EXPL5(18): DIM EXPL6(18): DIM EXPL7(18): DIM EXPL8(18)„1800  DATA 22,11,0,0,0,8194,0,-32608,-22006,2560,-32598,-22006,128,168,8706,0,0,0,0„1810  FOR I = 0 TO 18: READ EXPL3(I): NEXT I„1820  DATA 22,11,-30720,2048,136,-30718,-24544,-32608,-22006,-21848,-22358,-22006,-23936,10274,-30206,2048,-32632,-30720,0„1830  FOR I = 0 TO 18: READ EXPL4(I): NEXT I„1840  DATA 22,11,-30712,512,136,8194,-32760,-24416,-21974,-21976,-22358,-21974,-32608,2216,-30206,512,138,-30712,128„1850  FOR I = 0 TO 18: READ EXPL5(I): NEXT I„1860  DATA 22,11,-30712,2048,136,8194,-24536,-32608,-22006,-21976,-22358,-22006,-24448,10408,8706,2048,-32632,-30712,128„1870  FOR I = 0 TO 18: READ EXPL6(I): NEXT I„1880 DATA 22,11,-30688,2048,2080,8194,-32736,-32608,-21974,-22008,-22358,-22006,-24448,10408,8706,2048,-32632,-30688,32„1890  FOR I = 0 TO 18: READ EXPL7(I): NEXT I„1900  DATA 22,11,-30688,2048,2184,-30718,-24544,-32608,-22006,-21848,-22358,-22006,-23936,10274,-30206,2048,-32632,-30688,32„1910  FOR I = 0 TO 18: READ EXPL8(I): NEXT I„1920  LOCATE 17, 1: PRINT "SELECT SKILL LEVEL FROM 0 TO 3"„1930  S$ = INKEY$: IF S$ <> "0" AND S$ <> "1" AND S$ <> "2" AND S$ <> "3" GOTO 1920„1940  SKILL = VAL(S$): CLS„1950  DIM LASAR(381)„1960  LASAR(0) = 148: LASAR(1) = 40: LASAR(2) = 64: LASAR(11) = 5136: LASAR(20) = 16385: LASAR(21) = 16385: LASAR(29) = 5120: LASAR(31) = 20: LASAR(38) = 256: LASAR(39) = 64: LASAR(40) = 256: LASAR(41) = 64: LASAR(48) = 20„1970  LASAR(50) = 5120: LASAR(57) = 16385: LASAR(60) = 16385: LASAR(66) = 5120: LASAR(70) = 20: LASAR(75) = 256: LASAR(76) = 64: LASAR(79) = 256: LASAR(85) = 4: LASAR(89) = 20480: LASAR(94) = 20480: LASAR(99) = 5„1980  LASAR(103) = 1280: LASAR(109) = 80: LASAR(113) = 80: LASAR(118) = 1280: LASAR(122) = 5: LASAR(128) = 20480: LASAR(131) = 20480: LASAR(138) = 5: LASAR(140) = 1280: LASAR(148) = 80: LASAR(150) = 80„1990  LASAR(157) = 1024: LASAR(159) = 1: LASAR(167) = 16385: LASAR(168) = 5120: LASAR(177) = 276: LASAR(178) = 64: LASAR(186) = 256: LASAR(187) = 84: LASAR(196) = 21505: LASAR(205) = 5120: LASAR(206) = 16385„2000  LASAR(214) = 256: LASAR(215) = 64: LASAR(216) = 20: LASAR(224) = 4: LASAR(225) = 256: LASAR(233) = 20480: LASAR(235) = 20480: LASAR(242) = 1280: LASAR(245) = 5: LASAR(252) = 80: LASAR(255) = 80„2010  LASAR(261) = 5: LASAR(264) = 1280: LASAR(270) = 20480: LASAR(274) = 20480: LASAR(279) = 1280: LASAR(284) = 5: LASAR(289) = 80: LASAR(294) = 80: LASAR(298) = 1: LASAR(303) = 1024: LASAR(307) = 5120„2020  LASAR(313) = 16385: LASAR(316) = 256: LASAR(317) = 64: LASAR(323) = 20: LASAR(326) = 20: LASAR(332) = 256: LASAR(333) = 64: LASAR(335) = 16385: LASAR(342) = 5120: LASAR(344) = 5120: LASAR(352) = 16385„2030  LASAR(353) = 256: LASAR(354) = 64: LASAR(362) = 20: LASAR(363) = 20: LASAR(371) = 256: LASAR(372) = 16448: LASAR(381) = 4096„2040  REM * INITIALIZE VARIABLES *„2050  M = INT(RND * 61) + 10: N = INT(RND * 21) + 10: O = INT(RND * 32001) + 70000!„2060  E = INT(RND * 61) + 10: F = INT(RND * 21) + 10: G = 25000„2070  H = INT(RND * 61) + 10: I = INT(RND * 21) + 10: J = INT(RND * 32001) + 40000!„2080  Q = 5: Z = 3„2090  IMX = 38: IMY = 21: IMR1 = 1: IMR2 = 1„2100  DVX = 38: DVY = 21: DVR1 = 1: DVR2 = 1„2110  IF SKILL = 0 THEN A1 = 5: A2 = 0: BYPASS = 3„2120  IF SKILL = 1 THEN A1 = 3: A2 = 0: BYPASS = 2„2130  IF SKILL = 2 THEN A1 = 2: A2 = 45: BYPASS = 1„2140  IF SKILL = 3 THEN A1 = 2: A2 = 30„2150 K$ = "5"„2160   LINE (1, 1)-(76, 42), 3, B„2170  DRAW "C3;BM2,21;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+12,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0;BM+6,0;M+0,0"„2180  DRAW "C3;BM38,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,6;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0;BM+0,3;M+0,0"„2190  LOCATE 8, 1: PRINT "REPUBLIC      X-WING     STAR FIGHTER"„2200  LOCATE 10, 5: PRINT "TORPEDOES"„2210 LOCATE 12, 1: PRINT "HOR.   VERT. DIRECTION"„2220  LOCATE 15, 1: PRINT "SPEED MACH"„2230  LOCATE 17, 1: PRINT "RADAR TARGETS"„2240  LOCATE 18, 8: PRINT "KM TO IMPERIAL FIGHTER"„2250  LOCATE 19, 8: PRINT "KM TO DARTH VADER"„2260  LOCATE 20, 8: PRINT "KM TO DEATH STAR"„2270  LOCATE 22, 1: PRINT "TIME REMAINING"„2280  PLAY "T250"„2290   SEC1 = VAL(RIGHT$(TIME$, 2))„2300  GOSUB 1180„2310  REM * MASTER CONTROL ROUTINE *„2320  GOSUB 1190„2330  PUT (38, 21), DS1„2340  LOCATE 10, 1: PRINT Z„2350 LOCATE 13, 1: PRINT W; "     "; -V„2360  LOCATE 15, 12: PRINT Q * 10„2370  GS = G - S: IF GS < 0 THEN GS = 0„2380  LOCATE 18, 1: PRINT GS„2390  JS = J - S: IF JS < 0 THEN JS = 0„2400  LOCATE 19, 1: PRINT JS„2410  OS = O - S: IF OS < 0 THEN OS = 0„2420  LOCATE 20, 1: PRINT OS„2430  LOCATE 22, 16: PRINT A1; ":"; A2NEW„2440  SOUND 37 * Q, 1„2450  PUT (38, 21), DS1„2460  GOSUB 1180„2470  REM * DISPLAY DEATH STAR *„2480  IF O - S = 30000 OR O - S > 30000 GOTO 2840„2490  IF O - S < 20000 AND DSTAR2 = 0 THEN DSTAR2 = 1: DSFLAG = 1: DS(0) = DS2(0): DS(1) = DS2(1): DS(2) = DS2(2): DS(3) = DS2(3)„2500  IF O - S < 10000 AND DSTAR3 = 0 THEN DSTAR3 = 1: DSFLAG = 2: DS(0) = DS3(0): DS(1) = DS3(1): DS(2) = DS3(2): DS(3) = DS3(3)„2510  IF O - S < 5000 AND DSTAR4 = 0 THEN DSTAR4 = 1: DSFLAG = 3: DS(0) = DS4(0): DS(1) = DS4(1): DS(2) = DS4(2): DS(3) = DS4(3): DS(4) = DS4(4): DS(5) = DS4(5): DS(6) = DS4(6): DS(7) = DS4(7): DS(8) = DS4(8)„2520  IF FLAG1 <> BYPASS THEN FLAG1 = FLAG1 + 1: GOTO 2550„2530  FLAG1 = 0„2540  M = M + INT(RND * 5) - 2: N = N + INT(RND * 5) - 2„2550  M = M - W: N = N - V„2560  IF M < 2 THEN M = 2 + INT(RND * 3)„2570  IF M > 69 THEN M = 69 - INT(RND * 3)„2580  IF N < 2 THEN N = 2 + INT(RND * 3)„2590  IF N > 35 THEN N = 35 - INT(RND * 3)„2600  GOSUB 1190„2610  PUT (M, N), DS„2620  IF DSNEW = 0 THEN DSNEW = 1: GOTO 2680„2630  IF DSFLAG = 0 GOTO 2670„2640  IF DSFLAG = 1 THEN DSFLAG = 0: PUT (MP, NP), DS1: GOTO 2680„2650  IF DSFLAG = 2 THEN DSFLAG = 0: PUT (MP, NP), DS2: GOTO 2680„2660  IF DSFLAG = 3 THEN DSFLAG = 0: PUT (MP, NP), DS3: GOTO 2680„2670  PUT (MP, NP), DS„2680  GOSUB 1180„2690  MP = M: NP = N„2700  IF O - S > 10000 OR FLAG = 1 GOTO 2840„2710  GOSUB 1190„2720  FOR K = 1 TO 2„2730   LOCATE 24, 1: PRINT "*** DEATH STAR WITHIN TORPEDO RANGE ***";„2740  PLAY "L2 N0"„2750   LOCATE 24, 1: PRINT "                                       ";„2760  PLAY "L16 N0"„2770  NEXT K„2780   LOCATE 24, 1: PRINT "*** DEATH STAR WITHIN TORPEDO RANGE ***";„2790   PLAY "L1 N0": PLAY "L1 N0"„2800   LOCATE 24, 1: PRINT "                                       ";„2810  GOSUB 1180„2820  FLAG = 1„2830  REM * DISPLAY IMPERIAL FIGHTER *„2840  GOSUB 1190„2850  IF G - S > 26000 THEN GOSUB 1180: GOTO 3910„2860  IF G - S < 20000 AND IMPFIGH2 = 0 THEN IMPFIGH2 = 1: IMFLAG = 1: IM(0) = IM2(0): IM(1) = IM2(1): IM(2) = IM2(2): IM(3) = IM2(3): IMX = 37: IMY = 20: IMR1 = 2: IMR2 = 2„2870  IF G - S < 10000 AND IMPFIGH3 = 0 THEN IMPFIGH3 = 1: IMFLAG = 2: IM(0) = IM3(0): IM(1) = IM3(1): IM(2) = IM3(2): IM(3) = IM3(3): IM(4) = IM3(4): IM(5) = IM3(5): IM(6) = IM3(6): IMX = 35: IMY = 19: IMR1 = 4: IMR2 = 3„2880  IF FLAG2 <> BYPASS THEN FLAG2 = FLAG2 + 1: GOTO 2910„2890  FLAG2 = 0„2900 E = E + INT(RND * 5) - 2: F = F + INT(RND * 5) - 2„2910 E = E - W: F = F - V„2920 IF E < 2 THEN E = 2 + INT(RND * 3)„2930 IF E > 69 THEN E = 69 - INT(RND * 3)„2940 IF F < 2 THEN F = 2 + INT(RND * 3)„2950 IF F > 37 THEN F = 37 - INT(RND * 3)„2960  PUT (E, F), IM„2970  IF IMNEW = 0 THEN IMNEW = 1: GOTO 3020„2980  IF IMFLAG = 0 GOTO 3010„2990  IF IMFLAG = 1 THEN IMFLAG = 0: PUT (EP, FP), IM1: GOTO 3020„3000  IF IMFLAG = 2 THEN IMFLAG = 0: PUT (EP, FP), IM2: GOTO 3020„3010  PUT (EP, FP), IM„3020  GOSUB 1180„3030  EP = E: FP = F„3040  IF G - S > 5000 OR FLAG3 = 1 GOTO 3170„3050  GOSUB 1190„3060  FOR K = 1 TO 2„3070  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER ATTACKS ****";„3080  PLAY "L2 N0"„3090  LOCATE 24, 1: PRINT "                                  ";„3100  PLAY "L16 N0"„3110  NEXT K„3120  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER ATTACKS ****";„3130  PLAY "L1 N0": PLAY "L1 N0"„3140  LOCATE 24, 1: PRINT "                                  ";„3150  GOSUB 1180„3160  FLAG3 = 1„3170 IF G > S THEN GOTO 3910„3180  REM * IMPERIAL FIGHTER ATTACKS *„3190  FLAG3 = 0: IMNEW = 0: IMNEW1 = 0: IMPFIGH2 = 0: IMPFIGH3 = 0: PUT (E, F), IM„3200  GOSUB 1190„3210  DELTAX = 29 - E: DELTAY = 19 - F„3220  IF DELTAX > 0 THEN E = E + 1„3230  IF DELTAX < 0 THEN E = E - 1„3240  IF DELTAY > 0 THEN F = F + 1„3250  IF DELTAY < 0 THEN F = F - 1„3260  IF DELTAX = 0 AND DELTAY = 0 GOTO 3320„3270  PUT (E, F), IM: IF IMNEW1 = 0 THEN IMNEW1 = 1: GOTO 3290„3280  PUT (EP, FP), IM„3290  EP = E: FP = F„3300  PLAY "P32"„3310  GOTO 3210„3320  PUT (EP - 4, FP - 1), IM4„3330  PUT (EP, FP), IM„3340  PLAY "P4"„3350  PUT (EP - 9, FP - 2), IM5„3360  PUT (EP - 4, FP - 1), IM4„3370  PLAY "P4"„3380  PUT (EP - 12, FP - 6), IM6„3390  PUT (EP - 9, FP - 2), IM5„3400  PLAY "P4"„3410  PUT (EP - 9, FP - 7), IM7„3420  PUT (EP - 12, FP - 6), IM6„3430  PLAY "P4"„3440  PUT (EP - 20, FP - 14), IM8„3450  PUT (EP - 9, FP - 7), IM7„3460  PLAY "P4"„3470  PUT (EP - 20, FP - 14), IM8„3480  FOR J2 = 10000 TO 100 STEP -500„3490  SOUND J2, .001 * 18.2„3500  NEXT J2„3510  FOR A = 1 TO 50: NEXT A„3520  FOR J2 = 10000 TO 100 STEP -500„3530  SOUND J2, .001 * 18.2„3540  NEXT J2„3550  G = G + 25000„3560  E = INT(RND * 61) + 10: F = INT(RND * 21) + 10„3570  K = INT(RND * 10)„3580  IF K > SKILL THEN 3790„3590  KEY(1) OFF: KEY(2) OFF: KEY(11) OFF: KEY(12) OFF: KEY(13) OFF: KEY(14) OFF„3600  CLS„3610  PRINT "BLAM!"„3620  FOR J2 = 1000 TO 37 STEP -10„3630  SOUND J2, .01 * 18.2„3640  NEXT J2„3650  PRINT„3660  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„3670  PRINT "YOU HAVE JUST BEEN SHOT DOWN BY AN";„3680  PRINT "IMPERIAL SKY FIGHTER!"„3690  PRINT„3700  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„3710  PRINT "YOU ARE A HERO!"„3720  PRINT„3730  PRINT "UNFORTUNATELY, YOU ARE A DEAD HERO AND";„3740  PRINT "DEAD HEROES DON'T WIN WARS. DARTH VADER";„3750  PRINT "WINS!"„3760  PRINT„3770  PRINT "*********   YOU   LOSE!!   *********"„3780   GOTO 5310„3790  FOR K = 1 TO 2„3800  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER MISSED ****";„3810  PLAY "L2 N0"„3820  LOCATE 24, 1: PRINT "                                 ";„3830  PLAY "L16 N0"„3840  NEXT K„3850  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER MISSED ****";„3860  PLAY "L1 N0": PLAY "L1 N0"„3870  LOCATE 24, 1: PRINT "                                 ";„3880  IM(0) = IM1(0): IM(1) = IM1(1): IM(2) = IM1(2): IM(3) = IM1(3): IM(4) = IM1(4): IM(5) = IM1(5): IM(6) = IM1(6)„3890  GOSUB 1180„3900  REM * DISPLAY DARTH VADER *„3910  GOSUB 1190„3920  IF J - S > 26000 THEN GOSUB 1180: GOTO 5140„3930  IF J - S < 20000 AND DVADER2 = 0 THEN DVADER2 = 1: DVFLAG = 1: DV(0) = DV2(0): DV(1) = DV2(1): DV(2) = DV2(2): DV(3) = DV2(3): DVX = 37: DVY = 20: DVR1 = 2: DVR2 = 2„3940  IF J - S < 10000 AND DVADER3 = 0 THEN DVADER3 = 1: DVFLAG = 2: DV(0) = DV3(0): DV(1) = DV3(1): DV(2) = DV3(2): DV(3) = DV3(3): DV(4) = DV3(4): DV(5) = DV3(5): DV(6) = DV3(6): DVX = 35: DVY = 19: DVR1 = 4: DVR2 = 3„3950  IF FLAG2 <> BYPASS THEN FLAG2 = FLAG2 + 1: GOTO 3980„3960  FLAG2 = 0„3970 H = H + INT(RND * 5) - 2: I = I + INT(RND * 5) - 2„3980 H = H - W: I = I - V„3990 IF H < 2 THEN H = 2 + INT(RND * 3)„4000 IF H > 69 THEN H = 69 - INT(RND * 3)„4010 IF I < 2 THEN I = 2 + INT(RND * 3)„4020 IF I > 37 THEN I = 37 - INT(RND * 3)„4030  PUT (H, I), DV„4040  IF DVNEW = 0 THEN DVNEW = 1: GOTO 4090„4050  IF DVFLAG = 0 GOTO 4080„4060  IF DVFLAG = 1 THEN DVFLAG = 0: PUT (HP, IP), DV1: GOTO 4090„4070  IF DVFLAG = 2 THEN DVFLAG = 0: PUT (HP, IP), DV2: GOTO 4090„4080  PUT (HP, IP), DV„4090  GOSUB 1180„4100  HP = H: IP = I„4110  IF J - S > 5000 OR FLAG4 = 1 GOTO 4350„4120  GOSUB 1190„4130  IF DVGONE = 0 GOTO 4240„4140  FOR K = 1 TO 2„4150  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER ATTACKS ****";„4160  PLAY "L2 N0"„4170  LOCATE 24, 1: PRINT "                                  ";„4180  PLAY "L16 N0"„4190  NEXT K„4200  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER ATTACKS ****";„4210  PLAY "L1 N0": PLAY "L1 N0"„4220  LOCATE 24, 1: PRINT "                                  ";„4230  GOTO 4330„4240  FOR K = 1 TO 2„4250  LOCATE 24, 1: PRINT "**** DARTH VADER ATTACKS ****";„4260  PLAY "L2 N0"„4270  LOCATE 24, 1: PRINT "                             ";„4280  PLAY "L16 N0"„4290  NEXT K„4300  LOCATE 24, 1: PRINT "**** DARTH VADER ATTACKS ****";„4310  PLAY "L1 N0": PLAY "L1 N0"„4320  LOCATE 24, 1: PRINT "                             ";„4330  FLAG4 = 1„4340  GOSUB 1180„4350  IF J > S THEN GOTO 5140„4360  REM * DARTH VADER ATTACKS *„4370  FLAG4 = 0: DVNEW = 0: DVNEW1 = 0: DVADER2 = 0: DVADER3 = 0: PUT (H, I), DV„4380  GOSUB 1190„4390  DELTAX = 41 - H: DELTAY = 19 - I„4400  IF DELTAX > 0 THEN H = H + 1„4410  IF DELTAX < 0 THEN H = H - 1„4420  IF DELTAY > 0 THEN I = I + 1„4430  IF DELTAY < 0 THEN I = I - 1„4440  IF DELTAX = 0 AND DELTAY = 0 GOTO 4500„4450  PUT (H, I), DV: IF DVNEW1 = 0 THEN DVNEW1 = 1: GOTO 4470„4460  PUT (HP, IP), DV„4470  HP = H: IP = I„4480  PLAY "P32"„4490  GOTO 4390„4500  IF DVGONE = 0 THEN PUT (HP, IP - 1), DV4 ELSE PUT (HP, IP - 1), IM4„4510  PUT (HP, IP), DV„4520  PLAY "P4"„4530  IF DVGONE = 0 THEN PUT (HP + 3, IP - 2), DV5 ELSE PUT (HP + 3, IP - 2), IM5„4540  IF DVGONE = 0 THEN PUT (HP, IP - 1), DV4 ELSE PUT (HP, IP - 1), IM4„4550  PLAY "P4"„4560  IF DVGONE = 0 THEN PUT (HP + 2, IP - 6), DV6 ELSE PUT (HP + 2, IP - 6), IM6„4570  IF DVGONE = 0 THEN PUT (HP + 3, IP - 2), DV5 ELSE PUT (HP + 3, IP - 2), IM5„4580  PLAY "P4"„4590  IF DVGONE = 0 THEN PUT (HP + 1, IP - 6), DV7 ELSE PUT (HP + 1, IP - 6), IM7„4600  IF DVGONE = 0 THEN PUT (HP + 2, IP - 6), DV6 ELSE PUT (HP + 2, IP - 6), IM6„4610  PLAY "P4"„4620  IF DVGONE = 0 THEN PUT (HP + 2, IP - 6), DV8 ELSE PUT (HP + 2, IP - 6), IM8„4630  IF DVGONE = 0 THEN PUT (HP + 1, IP - 6), DV7 ELSE PUT (HP + 1, IP - 6), IM7„4640  PLAY "P4"„4650  IF DVGONE = 0 THEN PUT (HP + 2, IP - 6), DV8 ELSE PUT (HP + 2, IP - 6), IM8„4660  FOR J2 = 10000 TO 100 STEP -500„4670  SOUND J2, .001 * 18.2„4680  NEXT J2„4690  FOR A = 1 TO 50: NEXT A„4700  FOR J2 = 10000 TO 100 STEP -500„4710  SOUND J2, .001 * 18.2„4720  NEXT J2„4730  J = J + 25000„4740 H = INT(RND * 61) + 10: I = INT(RND * 21) + 10„4750  K = INT(RND * 10)„4760  IF K > SKILL + 1 THEN 4910„4770  KEY(1) OFF: KEY(2) OFF: KEY(11) OFF: KEY(12) OFF: KEY(13) OFF: KEY(14) OFF„4780  CLS : PRINT "****  B O O M !  ****"„4790  FOR J2 = 1000 TO 37 STEP -10„4800  SOUND J2, .01 * 18.2„4810  NEXT J2„4820  PRINT„4830  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„4840  IF DVGONE = 1 THEN PRINT "TOO BAD.  YOU HAVE BEEN SHOT DOWN.": GOTO 4880„4850  PRINT "YOU HAVE JUST BEEN PERSONALLY SHOT DOWN";„4860  PRINT "BY DARTH VADER.  THE FORCE WAS NOT WITH";„4870  PRINT "YOU."„4880  PRINT„4890  PRINT "*********   YOU   LOSE!!   *********"„4900   GOTO 5310„4910  IF DVGONE = 0 GOTO 5030„4920  FOR K = 1 TO 2„4930  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER MISSED ****";„4940  PLAY "L2 N0"„4950  LOCATE 24, 1: PRINT "                                 ";„4960  PLAY "L16 N0"„4970  NEXT K„4980  LOCATE 24, 1: PRINT "**** IMPERIAL FIGHTER MISSED ****";„4990  PLAY "L1 N0": PLAY "L1 N0"„5000  LOCATE 24, 1: PRINT "                                 ";„5010  DV(0) = DV1(0): DV(1) = DV1(1): DV(2) = DV1(2): DV(3) = DV1(3)„5020  GOTO 5140„5030  FOR K = 1 TO 2„5040  LOCATE 24, 1: PRINT "**** DARTH VADER MISSED ****";„5050  PLAY "L2 N0"„5060  LOCATE 24, 1: PRINT "                            ";„5070  PLAY "L16 N0"„5080  NEXT K„5090  LOCATE 24, 1: PRINT "**** DARTH VADER MISSED ****";„5100  PLAY "L1 N0": PLAY "L1 N0"„5110  LOCATE 24, 1: PRINT "                            ";„5120  DV(0) = DV1(0): DV(1) = DV1(1): DV(2) = DV1(2): DV(3) = DV1(3): DV(4) = DV1(4): DV(5) = DV1(5): DV(6) = DV1(6)„5130  REM * X - WING FIGHTER ROUTINE *„5140  GOSUB 1180„5150 Z$ = INKEY$„5160 IF VAL(Z$) > 0 AND VAL(Z$) < 10 THEN Q = VAL(Z$)„5170  S = S + Q * 100„5180  IF S > O GOTO 6410„5190  REM * TIME ROUTINE *„5200   SEC2 = VAL(RIGHT$(TIME$, 2))„5210   SECNEW = SEC2„5220   IF SECNEW = SECOLD GOTO 5280„5230   IF SECNEW < SECOLD THEN N8 = N8 + 1„5240   SECOLD = SEC2„5250   A2NEW = A2 - (SEC2 + (60 * N8) - SEC1)„5260   IF A2NEW < 0 THEN A2NEW = A2NEW + 60: A1 = A1 - 1: A2 = A2 + 60„5270   IF A1 < 0 GOTO 6760„5280   GOTO 2320„5290  REM * DISPLAY SKY FIGHTER *„5300  IF J - S < 10000 THEN A = 3„5310  REM * NEW GAME *„5320   PRINT„5330 PRINT "HIT ENTER TO PLAY AGAIN, ESC TO GIVE UP"„5340 B$ = INKEY$: IF B$ = CHR$(13) THEN GOTO 1300 ELSE IF B$ = CHR$(27) THEN CLS : WIDTH 80: SCREEN 0: KEY ON: END ELSE GOTO 5340„5350  REM * FIRE CANNON *„5360  KEY(2) STOP: KEY(11) STOP: KEY(12) STOP: KEY(13) STOP: KEY(14) STOP„5370  PUT (2, 2), LASAR„5380  FOR J2 = 5000 TO 100 STEP -250„5390    SOUND J2, .01 * 18.2„5400  NEXT J2„5410  PUT (2, 2), LASAR„5420  IF G - S < 26000 AND ABS(IMX - E) < IMR1 AND ABS(IMY - F) < IMR2 GOTO 5450„5430  IF J - S < 26000 AND ABS(DVX - H) < DVR1 AND ABS(DVY - I) < DVR2 GOTO 5580„5440  GOTO 5730„5450  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL3: PLAY "P64": PUT (E - 2, F - 3), EXPL3: NEXT I9„5460  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL4: PLAY "P64": PUT (E - 2, F - 3), EXPL4: NEXT I9„5470  PUT (E, F), IM„5480  IF IMR2 = 1 GOTO 5540„5490  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL5: PLAY "P64": PUT (E - 2, F - 3), EXPL5: NEXT I9„5500  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL6: PLAY "P64": PUT (E - 2, F - 3), EXPL6: NEXT I9„5510  IF IMR2 = 2 GOTO 5540„5520  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL7: PLAY "P64": PUT (E - 2, F - 3), EXPL7: NEXT I9„5530  FOR I9 = 1 TO 2: PUT (E - 2, F - 3), EXPL8: PLAY "P64": PUT (E - 2, F - 3), EXPL8: NEXT I9„5540  G = G + 25000: E = INT(RND * 61) + 10: F = INT(RND * 21) + 10: FLAG3 = 0: IMNEW = 0: IMPFIGH2 = 0: IMPFIGH3 = 0„5550  IMX = 38: IMY = 21: IMR1 = 1: IMR2 = 1„5560  IM(0) = IM1(0): IM(1) = IM1(1): IM(2) = IM1(2): IM(3) = IM1(3): IM(4) = IM1(4): IM(5) = IM1(5): IM(6) = IM1(6)„5570  GOTO 5730„5580  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL3: PLAY "P64": PUT (H - 2, I - 3), EXPL3: NEXT I9„5590  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL4: PLAY "P64": PUT (H - 2, I - 3), EXPL4: NEXT I9„5600  PUT (H, I), DV„5610  IF DVR2 = 1 GOTO 5670„5620  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL5: PLAY "P64": PUT (H - 2, I - 3), EXPL5: NEXT I9„5630  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL6: PLAY "P64": PUT (H - 2, I - 3), EXPL6: NEXT I9„5640  IF DVR2 = 2 GOTO 5670„5650  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL7: PLAY "P64": PUT (H - 2, I - 3), EXPL7: NEXT I9„5660  FOR I9 = 1 TO 2: PUT (H - 2, I - 3), EXPL8: PLAY "P64": PUT (H - 2, I - 3), EXPL8: NEXT I9„5670  J = J + 25000: H = INT(RND * 61) + 10: I = INT(RND * 21) + 10: FLAG4 = 0: LOCATE 19, 8: PRINT "KM TO IMPERIAL FIGHTER";„5680  DVNEW = 0: DVADER2 = 0: DVADER3 = 0„5690  DVX = 38: DVY = 21: DVR1 = 1: DVR2 = 1„5700  IF DVGONE = 0 THEN DV3(0) = IM3(0): DV3(1) = IM3(1): DV3(2) = IM3(2): DV3(3) = IM3(3): DV3(4) = IM3(4): DV3(5) = IM3(5): DV3(6) = IM3(6)„5710  DV(0) = DV1(0): DV(1) = DV1(1): DV(2) = DV1(2): DV(3) = DV1(3): DV(4) = DV1(4): DV(5) = DV1(5): DV(6) = DV1(6)„5720  DVGONE = 1„5730  KEY(2) ON: KEY(11) ON: KEY(12) ON: KEY(13) ON: KEY(14) ON„5740  RETURN„5750  REM * FIRE  TORPEDO *„5760  KEY(1) STOP: KEY(11) STOP: KEY(12) STOP: KEY(13) STOP: KEY(14) STOP„5770  IF Z = 0 THEN 3600„5780  FOR J2 = 1500 TO 100 STEP -20„5790    SOUND J2, .01 * 18.2„5800    SOUND 3600 - J2, .01 * 18.2„5810  NEXT J2„5820  Z = Z - 1„5830  IF O - S > 10000 THEN 5990„5840  IF POINT(38, 21) <> 3 THEN 5880„5850  IF SKILL = 0 GOTO 6100„5860  K = INT(RND * 10)„5870  IF K > SKILL + 1 THEN 6100„5880   FOR K = 1 TO 2„5890  LOCATE 24, 1: PRINT "**** TORPEDO  MISSED  ****";„5900  PLAY "L2 N0"„5910  LOCATE 24, 1: PRINT "                          ";„5920  PLAY "L16 N0"„5930   NEXT K„5940  LOCATE 24, 1: PRINT "**** TORPEDO  MISSED  ****";„5950  PLAY "L1 N0": PLAY "L1 N0"„5960  LOCATE 24, 1: PRINT "                          ";„5970  IF Z <= 0 THEN 4780„5980  GOTO 6080„5990 FOR K = 1 TO 2„6000  LOCATE 24, 1: PRINT "**** OUT  OF  RANGE  ****";„6010  PLAY "L2 N0"„6020  LOCATE 24, 1: PRINT "                         ";„6030  PLAY "L16 N0"„6040 NEXT K„6050  LOCATE 24, 1: PRINT "**** OUT  OF  RANGE  ****";„6060  PLAY "L1 N0": PLAY "L1 N0"„6070  LOCATE 24, 1: PRINT "                         ";„6080  KEY(1) ON: KEY(11) ON: KEY(12) ON: KEY(13) ON: KEY(14) ON„6090   RETURN„6100  REM * GAME WON *„6110  KEY(1) OFF: KEY(2) OFF: KEY(11) OFF: KEY(12) OFF: KEY(13) OFF: KEY(14) OFF„6120  FOR SCALE = 1 TO 24„6130  DRAW "C3;S=SCALE;BM38,21;NM+6,0;NM-6,0;NM+0,-3;NM+0,3;NM-6,3;NM+6,-3;NM-6,-3;NM+6,3;NM+3,-3;NM-3,3;NM+3,3;NM-3,-3;NM+6,2;NM-6,-2;NM-6,1;NM+6,-1;NM+1,3;NM-1,-3"„6140  NEXT SCALE„6150  CLS„6160  FOR K = 1 TO 5„6170  SOUND 37, .1 * 18.2„6180  SCREEN 0: WIDTH 40„6190  FOR A = 1 TO 10: NEXT A„6200  SCREEN 1: WIDTH 80„6210  NEXT K„6220  WIDTH 40„6230  CLS : PRINT : PRINT : PRINT„6240  PRINT "* * * * * * * * * * * * * * * * * * * *";„6250  PRINT "*                                     *";„6260  PRINT "*                                     *";„6270  PRINT "*    THE  FORCE  IS  WITH  YOU  !!    *";„6280  PRINT "*                                     *";„6290  PRINT "* YOU HAVE DESTROYED THE DEATH STAR ! *";„6300  PRINT "*                                     *";„6310  PRINT "*    YOU HAVE SAVED THE REPUBLIC !    *";„6320  PRINT "*                                     *";„6330  PRINT "* PRINCESS LEAH WILL LOVE YOU ALWAYS! *";„6340  PRINT "*                                     *";„6350  PRINT "* * * * * * * * * * * * * * * * * * * *"„6360  SOUND 525.25, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 587.33, 18.2 / 6: SOUND 1046.6, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 587.33, 18.2 / 6„6370  SOUND 1046.5, 18.2: SOUND 783.99, 18.2 / 2: SOUND 698.46, 18.2 / 6: SOUND 659.26, 18.2 / 6: SOUND 698.46, 18.2 / 6: SOUND 587.33, 18.2„6380  PRINT„6390  GOTO 5310„6400  REM * COLLISION WITH DEATH STAR *„6410 KEY(1) OFF: KEY(2) OFF: KEY(11) OFF: KEY(12) OFF: KEY(13) OFF: KEY(14) OFF„6420  DELTAX = 35 - M: DELTAY = 18 - N„6430  IF DELTAX > 0 THEN M = M + 1„6440  IF DELTAX < 0 THEN M = M - 1„6450  IF DELTAY > 0 THEN N = N + 1„6460  IF DELTAY < 0 THEN N = N - 1„6470  IF DELTAX = 0 AND DELTAY = 0 GOTO 6530„6480  PUT (M, N), DS„6490  PUT (MP, NP), DS„6500  MP = M: NP = N„6510  PLAY "P32"„6520  GOTO 6420„6530  FOR RAD = 4 TO 20„6540  CIRCLE (38, 21), RAD, 3„6550  PLAY "P32"„6560  NEXT RAD„6570  CLS : PRINT "CRASH"„6580  FOR J2 = 1000 TO 37 STEP -10„6590  SOUND J2, .01 * 18.2„6600  NEXT J2„6610  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„6620  PRINT„6630  PRINT "DAOFF"„6760„6770  CLS : PRINT "TOO LATE!"„6780  FOR J2 = 1000 TO 37 STEP -10„6790  SOUND J2, .01 * 18.2„6800  NEXT J2„6810  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„6820  PRINT„6830  PRINT "DARTH VADER IS LAUGHING AT YOU."„6840  PLAY "L1 N0": PLAY "L1 N0": PLAY "L1 N0"„6850  PRINT„6860  PRINT "THE DEATH STAR HAS JUST DESTROYED";„6870  PRINT "PRINCESS LEAH AND THE ENTIRE REBEL";„6880  PRINT "STRONGHOLD";„6890  PRINT„6900  PRINT "*********   YOU  LOSE!!   *********"„6910  PRINT„6920   GOTO 5310„6930  CLS„6940  PRINT "       STAR  PILOT  INSTRUCTIONS"„6950  PRINT„6960  PRINT "    THE DEATH  STAR SPACE STATION, UNDER";„6970  PRINT "THE COMMAND OF DARTH  VADER, IS THE MOST";„6980  PRINT "POWERFUL  WEAPON  THE UNIVERSE  HAS EVER";„6990  PRINT "KNOWN.   A FRONTAL  ATTACK BY  ANY OTHER";„7000  PRINT "CRAFT WOULD BE ABSOLUTE SUICIDE. HOWEVER";„7010  PRINT "INTELLIGENCE DELIVERED  TO  OUR REPUBLIC";„7020  PRINT "HEADQUARTERS  BY  THE  ANDROIDS R2D2 AND";„7030  PRINT "C3PO GIVES A FAINT  HOPE OF A SUCCESSFUL";„7040  PRINT "ATTACK  BY A SMALL ONE OR TWO  PASSENGER";„7050  PRINT "X-WING FIGHTER."„7060  PRINT„7070  PRINT "    THERE IS A SMALL, UNSHIELDED EXHAUST";„7080  PRINT "PORT  ON  THE  SURFACE OF THE DEATH STAR";„7090  PRINT "THAT LEADS DIRECTLY TO THE MAIN REACTOR.";„7100  PRINT "SINCE IT IS AN EMERGENCY THERMAL PORT IN";„7110  PRINT "CASE THE REACTOR OVERHEATS, IT COULD NOT";„7120  PRINT "BE SHIELDED."„7130  PRINT„7140  INPUT "     (PRESS ENTER  TO  CONTINUE)", B$„7150  CLS„7160  PRINT„7170  PRINT "    IF YOU CAN  SLIP YOUR  SMALL FIGHTER";„7180  PRINT "PAST THE  DEATH STAR'S DEFENSES AND MAKE";„7190  PRINT "A DIRECT HIT ON THE THERMAL EXHAUST PORT";„7200  PRINT "WITH  A  TORPEDO, THERE IS A CHANCE THAT";„7210  PRINT "THE  TORPEDO  WILL   PENETRATE  TO   THE";„7220  PRINT "MAIN REACTOR AND START A CHAIN REACTION,";„7230  PRINT "DESTROYING THE DEATH STAR."„7240  PRINT„7250  PRINT "    IT IS A SLIM  CHANCE,  BUT IT IS THE";„7260  PRINT "ONLY  HOPE  THE  REPUBLIC HAS.   OBI-WAN";„7270  PRINT "PO, YOU  CAN  EXPECT  THE";„7840  PRINT "ENEMY TO TAKE EVASIVE ACTION."„7850  PRINT„7860  PRINT "    WHEN SELECTING THE SKILL LEVEL, 0 IS";„7870  PRINT "THE EASIEST  GAME AND 3 IS THE  HARDEST.";„7880  PRINT "SKILL LEVEL  0  PROVIDES THE BEST CHANCE";„7890  PRINT "OF BEING  MISSED BY THE  FIGHTERS AND OF";„7900  PRINT "HITTING  THE DEATH STAR.  LEVEL  0  ALSO";„7910  PRINT "PROVIDES  THE LARGEST  TIME LIMIT BEFORE";„7920  PRINT "THE DEATH STAR DESTROYS THE REBEL BASE."„7930  PRINT„7940  PRINT„7950  INPUT "PRESS ENTER FOR  TAKE-OFF", B$„7960  CLS„7970  PRINT "****************************************"„7980  PRINT„7990  PRINT "    MAY  THE  FORCE  BE  WITH  YOU"„8000  PRINT„8010  PRINT "****************************************"„8020  PLAY "L1 N0": PLAY "L1 N0"„8030   GOTO 1300„„tlipschultz@delphi.com         RPG GAME ENGINE                alt.games.final-fantasy        06/23/95 (10:00)       QB, QBasic, PDS        344  22731    QBRPG.BAS   '>>> Page 1 of RPG.ZIP begins here. TYPE:BINAA TLEN:16712„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.1„SUB V1:OPEN "O",1,"RPG.ZIP",4^6:Z&=16712:?STRING$(50,177);„U"%up()%9%%%7-%&u7VD[b9v#Qe%%%ed%&%,%%%%wu%lSgfOxeL:n*##KNYFmVlxI„U"56\:-(J,[g_nKG'e<G]2*?sA84tD0_?8/QYrXL?Pc.i8,L&>mbJ*TeI$HR([KCJ„U"&z&&NXzz9HW5pbUVX\;;AgJ6JlI8EoQp?(+KLf?Okjzg#cr4vebYY,%v9dA0?YJ„U"ZCqmk0]UdqbmYp[<UUmk3m%2Q0OUN^V/L_i1.Hs#[etQhUoGMrPA;im\cqns6NO„U"x&XrX=P0Q0W+T?R)l,Qk;YS*SF-HU\hoUo,vot'x[uQ<tQZ2EK3[h\Em]CR3,Zg„U"Rs4hrI]A$RotUG;ibQPVQEgMrH6%hM070vvQhtn6svhZqZa_mS;+.6L/Oj7a_W1„U"owt^x6xox=CTCUrBA^85CjT2aSD*[&_fT.x&$8Ro6we0efbgE[rX]<Qo[:3HD^F„U"H4vK&nE[.pBVJAaH&o^>oJ'D0MOd_/HqqC$V2IGh'p[r]94?eEbksvEZOCk67f_„U"DmKD$t8&t,hPFfNQWc.U-M$Rz3SijjO^A_4e;*VUJLxNOs?26>eY.8vAM#CMIu+„U"6n/utgm[\eABu(<Kd^X$3ga)FnSs&=tTT-AFQrVb(U6cmwLRuF+JvBdb(EQlbgC„U"+LJM>oEMRFk4U3Z*[EmT,q:UPh3mS\$BJsRVTfFuj\6cKr1_RvKpQik)5CaR_3l„U"LLjUc$VYjapK&0h?sn=C;%EA3\mlGa#ApO%Et+A>J^%\Yx^_F0;Hf?Cpe8>3c_G„U"[t[g9h6jJNAP-\o;Cf?SCAJ1$>]wsUJh6t/0v%LB<Ub6UjbV8DGfK]*UrQ0nJ4g„U"u)^ZQy]rY0LmfSxv5W?rM8-+kVI>Wo4+5#YA,zu$F\yQ,kQ(RG1Fm]W>YbbmUEJ„U"4z_-Q>WeAA0rpBQ7Dr<JW<]'ahC-<C$>vfWL=ZBVW[7T?fud+5:W-=v34&)b3of„U"MQ]eV6%l?%5,WhLDS%=F6Le5gdlH%Y,32aVk'76L9t6f:j-^oW.jNdE>CGk<p3g„U"LWCo_Xg+e[MCK%'Kj7KtjOPoTc]DbCJxA?A3w;7g%dLCcQwA-Z?J[i&;^hH$3VC„U"]h2U3$&T;<2m>lOtZq_AM?l(g9]qXNbJ']lkR>L'inqS'hG_O]G1KxLIKCrDnV8„U"g_gI4623cs35Op8]R>gxi$paInfAawq,duAfIX.%kc1'kZK[a[1J6*MX1kr?elL„U"T?m(eEDl)R1\$,\\,o%L/Kdd.4bBtae\Ra'O.#'Ub?^1XMmv#?$nL5[[PXf\[tZ„U"VCeKbLFl537\pre'1D1XS^iRg4dvJ;??rZZDm30Xdx=(\3]$eo]-tlI+zQl;b\b„U"PA%bbL\UD'w*pclt4tM&+$ljhPugSv#X8M92[I&ch:+7un6^^ZWXDKDEN,oZmf0„U"u7]L1vyh^m3ZgF(Ulj48M6v]S[,w=UxO#R6*qy_ZBdVu(lyQFSb7X<+9dc[nDD$„U"cac/C#_tDD\$3^vV6#sz0a>cc/Bdc[D1D*DDj<JJ,ACAs-'h+%Z>h,x0Ta\((7J„U"bk566W<h*FbQAr:7nAp]M6d#,[2idRKC0]g6D=4i\?qt.hORKPMMsZj'XQayQaf„U"e%ba<Tf2<CDiT>3]N=A\t6AY=]0fWc9lT\.2r_]CRl;gG:WjKc6)\$6hLsrRV3&„U"KoeBrS^Hi(6?HW+pnE;+aLMWbv'e_>V)>oUJ99cf#00?=v=N?#atZ,Q;MbqZ((B„U"$Yp2*w4A3.kY34=&26ICWtD5gFr-%JI=:xfigUB>c?i)0esaLGig[Ob]XQY*K0I„U"]T\r<9FP8.X:2oLe'gx]?oJct3r64HbNT*GQuUW+#uwoOFWBD0J[fOBkurmffj,„U"K1X4sG=mkVUK2Q2fmZ[xnmghbcKuqAJ=T4Ve4Y_4;C*l$2&u<nLl4StT<w)xN[w„U"IN/O)k'dpYtNdYE$6e)0jwPxBeI-Pw\,2RY:?HqJoI2H(:mSx]liF9cP_\&$<ru„U"I#2FO\64?kFBca?kInN4V8u=IndKd2fu<u4i2O1fU>nIRrDRf6miHmPB0>avn,Z„U"]X<Fl\Z:Ol]p6VYZ,LZrne^3ur0bQ3/$e3cM9gTVK?(RIHKy>fRs9-OYPO=_p.)„U"8=932;r-PF:9xnIR:b^%,2,_Y(d_4ZYn.1v#V]9Xi_3%3d=Z:x$X4V_5,\JiB2C„U"lpPfY0,3Yct_Ush0b[c_>(_o((vp$IDQB#DTdkPDP*$aB8ppu,i4g?kNoOQePQ.„U":',R%t)9(DiBuK(iHXQFK:TT=e<%<wZxRIj?j67qU[<r>9Vt7zr(yBX;D8xbsSx„U"3\<+T?sG:>o%i*7:sgP7&OYov5)0wL]pUJ8j*M*25j2:(ehf4k3&N1emlQ7x?JV„U"#Ij-57i.]S3BTQFJi7Cg.aT9SP1G5s-2K%.W6aoE#'=EmNw7=9[sBk*+YPLXw9+„U":3\cX0gJ&5ZB*i3e=me/7,.lWT6CG9RU\a,XJB:BDVn1D'KBjcQ6=eyS-hP[hRJ„U"'H<Pdl_zrZZIDptW>=Z(0mMnbvhaCozl#Mx7e2n;cilNizU#p6MV[<Ur%u=vp%v„U"E?5NiMzig^h\vPU0QPh,nAj%?dPj)?fb7p7L9BRxep]6&aVOVa2.AAU$4T4Vtr,„U"(+:v_ezrMnNiR/[IN-O9-A8No$JX\q,#g1qT-jAWX-F7Z*'f:DWn:zSjqT*d(LP„U"nJ\m*P&\B42X=V_.JSqu^aucHmsm'ipc9lDA9a68pu^[Bh22MW)(>1JTxU>6N.o„U"PMafH$SI33]RE#k_%z+2ATtzqv8w+k>KZ999P2E&/i-3<>Nf9o^GL&7];)mcc=&„U"(:WA7]m%^^K0Nf/AI'U4m7&&,&bl=lS??EIqRj2wdefNtQPy67/<f9KwqJQxC*:„U"''RS??aBc8I^1_v/z)SvfShT%Y%nIy2;0O3?Oav'_6-[+?k<2pM]^=fF3bd4HOr„U"8oBNeRRE$h-QYL&,.m$ju:m]AEY-/Rx#:bzeaD),Lj3Hac'k-VQ>-XcJ]T_twF&„U"8V=2kN1__#;#3si38PuD?EVU^J.A?]2?HSQDe;yWrNXqPnvx:lqFVd^tvD4m<IC„U"a6q>T[lnh9a.KwH;<Yl-\qPm4'Yk>paY)_(kZ>>nI6Is8NSCpCuN^O=q<Xe\<Fh„U"$FY4]DoV=L3&/'I^sp3]\tu61+FgR<I/sXRf/'s*65^\&h<YS&e(2'uu_Gemd/X„U"9:7F4fYI[tB]Vqr\3[Jmrwmo+2xs:9?xsLqWOPn^A:9'Z)r)3%G4Pq5:rh,-IM2„U"/40P1k25Pe5YF><(UXf^MA#%*k9u2s$d>Y+$m7aZAVgGMcW.Ooi$-#mNqONBUcm„U"aijYM_Ko3#=snk\3$/_O3U+V*JGolEp395bC-]U6jA]+.%Lr>GrK(VApN&QbOHe„U";TJx1geafamS(>%O'bF6j,9]ChTG=oc(&S>>-FK,7u>9Jq[u(BH[;IILSvIfJ]i„U"J0h9hbWpK;B>67ap<N_G?V?\vn7<K$GhhXG;q_oU3b[EF7iUJCYP+Uhk^_O.MZO„U"0TXv?4lj>FCy/_Z^W-F?&4d?V[SC>EbP?2hOkm_KjCKc7_hAV7DntXARWo;VDNq„U"7qgNXujMj[[6]6FngS(J9VrT2UX0FW]McV2>,6]GW,DK&meFUOC'cvATVKdTsfd„U"IHa=19&P:VOl;nT;NZaVtLL](0A$q9?Q$q346bMVU9w:W??96EW_aL%XKtnnik%„U"u0iS$qTks;g6_'76dJx7WFFMBIJXkMWEs#]hHI7loMIvsnXe^:Tc_i5C(U,wwCw„U"gdN*cET_W]AqY1mx$FD?#\q\_G]If^e&^'Vx<m\'RD2eR8l7FGh8%o:QJiCuTCG„U"X#WJ0a9p.mX>o:/AJX/L$ud+64?J?o5TU(VR>O7n/[nnsP7Un90iIUs#*JKL:Wi„U"nCR1JiKWb_0+R'EJTClmMCT>&Fo%q'cxT/u9n-HAi5kO-&YA92*$k_ZvYhF9IRl„U"#LZp1BAHtGIBQ4N%na?ruYvv/<[4*8VVg0*LSzB+am=FezLX+D]61R*+NU\(Irc„U"9iru.Kr?eAlTU1BQ[sbc/OjDZ+;8HUv*G7+t_y-_]Vep5h\Yo?R]8VG8aps0agD„U"fn'h>-([K\C4(MayBmS.&Vb$HMP^W8Y%?_Q2:n/ES/?U%Fxc^b+2<(NTT\kbiFw„U"W^BMviUJ+,&C(X9bO9)>scH^E?=772.,(P:0?%AC*oUYX4(v3=%kV^4nr6D5Xsg„U"ac>LWGwt?Gx9[/'3qaI>f-OAn;2*Qlj>PoKgL?-rsE.yX/]+Nj?W\r3;s%G<9OZ„U"K/+X_4xRJY/OF5k9^wP%?ru-gyi-40gz:Rak)wjocr(R51x)2PeR=J;<ZO8[2Ln„U"uhLg]Rg(F,t)Makb?NJv;ZiSoQCod85*=OiBFm/>r$Nu<MV00nDf4g$ePN,-08'„U":Gg.u<nKkXvx<k.o':<e[:\P,DNe;Q[:vMaLO6a]t]fr:.fXp21^WlRImYuD&TZ„U"AB]?#WAJC6Q#iPy%S(mv.dAL3gDD:tP-w&CZ;3Wn?sKD'#AGO-j2wpG9ehdfm[,„U"Za<i+^Im=QtXDc%PD%tn0kIe2m[^)w-aVo9J\J8_'+VuF5NR3MqUWC)6TnGN5x\„U"Y6PkEmo:rMGVd%HnYY)22NL4\k^ybJPTisKGP9yreZ_Ju\(GT41QeEN[>o)J%np„U"<5)Qq<ewSPaaZdu'X7-q*Q&D=2TpJ:^'n0ucM6zT4*#Ln4D5bN5=AwMO?+T*Onl„U"iR[LakCcto_duXAF$)$+Bww#XdZ.R6'tD'xe_,,U([ge(.n>H#HjSpa0dRK:7hz„U"sggq\gHV$>8cF]orY_F+Coj7?j2]Vq<B&SNMtAe;9s+KUn6HQmJ4'h*&w=Ftn.g„U"G$915UZlkm<KIjN$H22-6>actD]M3/911FW5E>Y7>G9H4f79kZA02Fm6nBvyzdK„U"lR7&.?C:_?DVPR\Sxqe_B8t#sJ%n<.5E?*sCV8'rrrDs2dd[XHskx#OJ80S&.^'„U"^.^6n/^fN5w\$lu]Ak-DZ1-WPG^g$J$+t'O=A0xNdqc/vmSYwSwqS>9KU?d/bAZ„U"-*Y+-Z<\8QjSg%E^)G?4Q3-1/W_r#oU=yC0):ATMfPR;'LONLJZc1\8n$]2N]NR„U"q:8q6igmbPa\0l0(5VQ<]coJ8H45KRG_umKa-<uf5_LFWae>EU.Hd$/u2vI64EV„U".t\>FiCcoOjp-PT3^K2a2WbM6hGRsT33l0[$ClW:=Nh>JscHh*L^sA8TW-K2Q6b„U"6t&<]5a^30f7nbM<>,,Uhc-l8Zp?zB0HsXdNJL?LP&Nw6VW]+ZfL#3/e'3o0YYD„U"m=c9Z]-Ub5.%6lbkpF+9r#o;+#[MO/Yu]<ndiVo-TA2.Lf_&.m<)R?5\t6VgNNo„U"%NK<pium#sTcEu85g]+g#UM+lq-:g]qJj\%-p/AP3+&a?*p0R,)9oSBCRQ(SGy0„U"?o]hV:kyn3sIjh70Ho2>hPH'a(,]wj4MuJh,/MUkLr3;>6bc&z\R+fVUHDW5^Z^„U")n_Kb_ksFw#*;=%oueTbsg7Mg_5/q)9rKon_br4W7\,z=Oppyk*he\3P7K3mmuZ„U"34OG&FzvqCe[dy[3pXoYlvRV]G*eie+lH7ccCEjb-kmLWRS#]oJrT]1z=A[NWF>„U"(ql*e2F&va7$0(3=2\$g^qsUYvR8gKosC23bi+AB24a%]l8]SW;:5H-FP^uIHJ\„U")%4pjEH3sL0]]*aupekuT*ubzX6<5IWRS-YPfwGC7PI5(pYA?Mnq2G_)#yD8zfT„U"\FceQRLcMF-W,x9DP).]t.9jp<Uofa>3Tc:NT*q&^A%=L3I-tzoTLnn8yLY\E'0„U"6<\(J0IV]ICE:SOOz8_KU#UopuKc#IHbK)w&L(A^GXK3_%cB./12_7iqoqro,63„U"NRpwd6h>l<wCs3,_7LztUA7u5.oT47es.Lj,$&dSC:ov&f:6jSANKPC#XLN?,'1„U"o%W,kWt.&8'[LD<WdW6doUt$6%P&?oqgdfRgB(t:PW'os[(6V;raa[iPdM##TG*„U"26&R:HGmHPngW][I[d;Kj=,;5Dv.?7oE.>MfB?,ev2;7&&7yGAOg)BZgXduJN_d„U"OdeD3uJ),-ut_5#WCFp5eezY1;.]1Tm5J#7D1'cfn[a.fENS'.WfdW8_)ID6C3=„U"R^k)QIQ8bag%62g&xm8cX*6kfS3_[%IPZ]6R;BLuy,akZ?38u/rNTp_O%g=V\M)„U"vaQq6,]mJmh)KR8,,h=\Zl08*FJA-\/n[A5E&rl39VjagR+MmcALUecp<jAV>kY„U"Acc30T#h-[h?eOp_Tk#XRa\M8X8F\N8rX;0/l0=bQG=P$i%)a[jIdCSF/yHr&Dz„U"^O_T6tSQ50,H;qS'_W/m^U:V$yscZ,lw9]$DWOnmfoqEo*Q2)qD(4p?D5as2rqc„U"P_0fy$ZL+f7Mq9/LCBVy)U-_(1cQr-qnti?Yd^A8M\2%o5jl>r1-%gtkzhD/f09„U"^[0l%GbDLv^fR,%n':TpWQCw>zYlMpBM.#[DDdx4iI^hGrr<,.VXU'<QRueekkq„U"YK31RbbD0ci6f'RYV/G<\DIv8+ANFmCGr:h9/]GVjg\>Y>bY])q4jp2qofBF9=#„U"fd%An7KL2=\SfTB[Fe%uMq%Vj;a=uLRuvkv>9W3cxj:J$eg3_zvI4d#R11%ntsE„U"FP4[Q6kC*GfBz:&(HD)D\4o>956JUgA[C,o^ozAVh\Uh.$,BklV=4r^A<1SJjCM„U"MAq$blbo%preu46unwko>a]$i0L1wDC9d1'rJR[85z]d?[#9&n1^ijT?BeFH4JL„U";[97#JcShr9e,Tm=Ls(GBZp3a.X1W6DrK[xKnbsRQ_\%_Cht&Um;NaKU+'<hW?D„U"6V$i=4'Mv.U*ts)/c_B9KDXJ\uHO*Opcnb,h);EGra&;X,YOGO&p4UR(U;WH2b'„U"9XyJbfWj2HVSgBE\d>%_*S9)ebSIjnERFtll:tYq:(&u8.4[cKo&f1heuUBUSmY„U"?Wvi6NwW\R_.cPcDc,84&Jp*n,C>;XvJX*..alb98=s59f&,/Y7C#IBMlN6(j3f„U"?-*6ZUwtNHp_vR_BIz(,gXxAVU<b2[&^P*5MWmNCfj[n<+/wfsNr1R>4P4SCmpP„U"41U=$7Z1bBd<SK?&f=m&Tejwp4S,_#D;2,ZLC>w)<_4]v5ON+%,xHAuo<J<B(z5„U"mP$:JAzK88Mq<?(Yc#,?r\R\$P8g9J7Fy\19i9&7DtA4&y>vM]t3v&T;mjT9ZGZ„U"hs.?Moa;Whj<;$ot(2c+?.?Rs0K_o1MMcal5>psL&&zEdsfc9MkZZ#Ck+/<mD5w„U"eHGLqFp8+u_X4iGqraSJ.BfE7ieVT](8%,xAN++N*[:3#P_fFn6&_tupaC]=y;=„U"keWRI7/W:')BQNjOCWb>CMra:_'9uWptI>>Lg:AhGtpgh6GINu9SM,$k$lSY[rO„U"FIm#Mq*[zyjp+A4Be4zX*#^?ENoeJN%\mY_OT(L%HY4$ql;PzZ*lrk-16jJ\_db„U"HR\d6NCM\Qqf0s/D?Db#BZPWs<+H:?qEcmC<9#^tN0.7htB$V]&z8l>y/P#+Z[A„U"#$WT(>hL_rC/DZv<?04P<V>PUF3%MJBE+?Jj+6;ZR\EB<6>aJ-1kEBS\o(wM^q*„U")(-K2y.gjojx0o;Z_([eBuhD_.L^^NK,&WXt1'M4HIy^<Ol#s\4eT>mIqoMgn;g„U"s(o*65tAXtrI<7cG_HlvQ0]NLbw7bk(mzhSLdXvislucoVeI%JF'D_G+.S:(E>$„U"1\$3mwsO('e%q&=vjeo<6rj+%&=n)v*/1NOYls.D[(=9)kf,[sJ'+:747cI3IrS„U"4dP6^OuqN_L(&u7z*d92/9AE'7:pa'YJC+MD%kG^,SjQaHNbQ5s;z/.izNI6aZO„U"MB3E7bNwbjec'0rHL29y+:ug[p4,2B>RR9_7OS7#mJ3RDnqcGsia'6x9tok=1LN„U"C[KgJN/bQ)BDF=*mKM6A)e;k.V/Wun;7Q36-aerWxMf.FP.pp+_GD7?bG6$6OTh„U"$a]+HA'J)Z18VK3-coJZ&mh[A#afu.:_G7z3$K=,(7Liv?r\3,-ebAa^h$tZ&Co„U"xV5(<9IE0?Zs'H5Eo/vFna9QQ^eq/9*:hGY6'0_U7uR%*v40T*)R>O;TukK8?<k„U"wccjsONqo,oV;z\9RvM(#B.R74f]dIvK4J\hZSTd[ANNd<T-:i?Z&)cR[:uW6Gv„U"Dm<T%Xpl6nu>;nEPH.JAck1gz.nq'1iS=o&#DJYkCbP%_;K-D0Z(OdTc-p.-)Go„U"7YQ$:oM^\<)RVL)c]C=8)>:V>PkHGvZ*BVhiP4.?%HD,a<-)4++sXg%PHF7yN7a„U"6WCF(.GrP&p2;_e)FD?=hjM/l26cnKOD*&YWg3(9r*&FB+38L9W83DTaH2h(1*,„U"TF=>Kh/4ZRw_YtQ.+bDiUBS,4$.N19xXhv(aKZW)p)H5eplKHIsh>u^b>?'/v_-„U"8\%*tVXKsFc&4CYQAd2\#Xu5m/XC8546+;&o2+^$v%*V.sp\Gk+)g4_rF5mMDvR„U"y]CJMLL2e>0gBF^GIRIM%+<B+L<)?'d_,'MuamHxJn?e.YC_,Ftp/aKPu%?rJ-t„U"L8lmbis,7Pw.Pl[tu65zXwfuwnbuBCv6mh+%^TO4Pfn[BZ6bp+z3-BoZyJFaGQ4„U"$1,xR5plD;s<ZiW_;22ih'EXxH1jBMubYjM1i[Z\GfgWtgo/K[49vdP4wi]u<V%„U"/>%,//0]Jmt^lgRBgdws9XSi8U[Dj(W;OI\9ph5MHFQo8t[):NaLe=>BtO22g#-„U"rB*rOFC:h>gG,VV\6JLm=Tko4ET*3^'d3'ap>r#(^KPgYT064F&,wuaF0K[htCs„U":5W'9naT72L=&Fqc*O&B)S]Ei\+hj$o8R;A*io3g)=O:gPc02/I+;RjA2nB3F,P„U"45G'C],L0$3u:15wxjDq)g1Fjn/7gzzI)ZJBf5QO&m7W&)gIgkn*d2]<^WK7VU#„U"Hq=5oPj<6,$UN$,n^4US44qn'?x(A<G4.fU3;6+':wM&n<W.6GJ>8=3%&VzCU-S„U"cO#E4+A5_=#m++JHJ.v+%=#%1ldtFPVgjdPE_2(57vt_8cIk)wA#=u&dBaGU.t>„U"K+.\\$s52nxUK$9Pa<uGC,p1>[aqi[*^,uMI('j#.h3e2YIkVU&SmQn-I0)rte^„U"2#kz;8A9G5&s8O3'kZ(r;SN0FqcD8,o?k+r+t/N3CpoHj;Qc\yrmJHQTnCN.2P4„U"5LRCJ9b=<jq]p8:7,EbhloB^WsuU.pueS<+s#l#h]-r<Q..1[:5_^'LDrln^HJb„U"5k\^t-or&-mK>FOZ+j$Qn'Wu=gJ:/?/.j[d\0W0dU(kQv=5f#b4'#zlGoh09Br6„U"-w_M0)k-jM;a3GU_K0E4Q'O$,0MjmGUSb\FC#YNBZ(0*$K*9DJ8TiuBV_W?k[0(„U">;cQMR\U4PDL0(tL:)]R?D#wZ-O5i)B';e)%\pYXQT20crkJJ[VEH$/OQ.7qL:u„U"rMuBXVp%(1[QF[>0690t7RY5>/byCG)_O:B<b$$gB#1(:QKnG&>-2,gkEA7P-iG„U"S%fU_JZ&0W'O-bZ,qi$k,e>Z.'7G\i.AE_MTr9;95jqLx,JupN<;F:Ka9q>(N+N„U"P:,XuJ7X[;rLE,w,GY:Ac]2*'6*T<Ht*V9Q?$sq[<)7V(Ys:loGa4sB/+1AuHW-„U"?y)1,f:nx]'Y#E=>SOFTthgl9?neuqXotSb&uV=,5h3]n;'Tc?IqA0(]>6PEl?e„U"FYzOPeWtX2)z(+5Rw7to;$$J5Cs9lo9$gXW%yuod[9grLoV.z<jE$S28+VV/)9e„U"J?e</p]:Eqn2aQ4^o/Jx/YEWg]?/u7>9QSWOVZ9Y*q.-#;u.(uknlYl-US]PtNj„U"[z2e4>8g,].NA8MOWC):Zn\sbtwQ]IQ&WKq+(ph]cl$quFA;#a;Vv>J*22ke_q+„U"cdk0T?^p-g=J-Dc:Em^PrLJtRXAEl=stH4P3T*ndhkmD>d(Pe$ff8TMUFn4/(6h„U"DK58qCA55RWgSsL01JxNuS2Q5w3I<H\kpkwgT_Me2*9Xx'FYdf&-qkt[/O%oDrC„U"IHm8d-xM61G<&_=i;i4u]xHaM:G32,QK%(qi-38+Gc^E/Dh,O)^F6B*nf.iKo'N„U"h)C%-l?spwF:7x%Pq$bLd\bXkS/>y3R9qS6+*.xC?(Jp4_jR7Fp)*D..2mx&l#U„U"K)I-&>8ZTt:%TNE&e>*gj2RM^K,(_PazkaBeAk5d][eDcOwW)6E->rHVeGJJnaI„U"\3CyuWCm4>ZMNGPI(n^iH1XpGs00>Knv8SKMTvv[]Ji3k-U$jgt]q+(=F'4lP>B„U",c(rq^BX.^6MtQd62'k.(Lj>;Le:</k1JJTcq[NO8&l3oF,*jM^_cTN*e6RRHGE„U"A)nk3/S7BFst38_nV8+X03_-7WoKJP1g_b9,#KVNC8%<e\L<_&8[3LQQgkZg2K5„U";QBd,$c&&zM1ItXmU#oMqRFM,s1vq21VOUrFs5trbZTP4YmalUlXI%U;tp<Ih9c„U"U-XuX:J+Z)'S>AB*bV3sDvq5XX;=\w8(^=<mW?Kc6Q1Kx'NGa9i$q$LRdvkl[<(„U"=e(O2KsNOM3Oo<#?K9v1n?DDq:kOw3NA#v(RK-XORC&F2X2QCXDq4EXF.ljErw$„U",6C79%mn*_o.?\#'W6);v1A=RA1oFiG1PAWz\5x<X&Q?DKJG:*IJaFsCfCj8T6h„U"O5aqigGco$-ye^g*%-NNCz)HS<P(5ZLmF9E9z'2VlLeHX':\OfD2o..B=l(/.Rp„U"a$IMUAjabiW_^7tS[gZj9O8D\,OxAJCCZSdfqg*j?B8.OtI_/-0HS/$m)3Z8-Z$„U"x&l_nD<u9g$Kb?83vg?7tgPA.t:^u#5wCi/^QP,pfqPZG?SJVv=5FoS:e64x#iW„U"GpmotVNwN:)zJ_-PQCfLdnb%&8?+[qVf9xwkk\jAo)'g]+aaQ-&f04CGVQ/n:88„U"(QT?**EFV/?pIdCs?;::GN?K<p$H)H[fH#5QDZr(H/g7dn-EYoJbQ=Bs7OQuRA0„U"\Zw:EDbtuhJq0Ulg/z%:sdf%h,#?Z66iLwaUMh_9L*<aWa1U0L1,SA).;SJ<*Ve„U"21XGBg>M_%y_c8FH<wPa2Gg;*qawDj\Oc$0_M[a3qr%BfM)]kA^ootsgbntq\L8„U"vwS[LFvtL>u#g%1b/Y<^Y6VX5b?Vg7^54%q.(XJn)b]_YagW2[AtT^cqFV,dl8l„U"[2tADnk;8^e3v?TnesRf63D6$hn(?QT/'Pc7^rP_6SsO,EHFRKCpKL\FH%bVNB$„U"wlD)DFvr6\DIZW,DY)7gGq-Ux209C^WSXP'BYodlLt^6F%&,w)khfT&(g^-'_S[„U"7=YXACJ+qRkPa5(14$s*AD]%6jZpx\bhDWf4V\+EL#W2+>AIlV/-JgA5Ul=?U;Y„U"pL(v_oINaZ9rKZ_9cH&9^-w5t4Um_?l;f$VL[&;WRi=tf(#n^\g=Al+&XwfAYLA„U"it/'=0F[79/SiFTdJ<1x[K&W>U^/60g4*P#x*gcC?gf[$;XS(=T5>]\5G\1^Yh$„U"]?Fi?:MOg=\T5>\.5G2A1e&(hVTr$C-&$)CcA>(:Qwv1r3<gTyUSVkwI)TppSEr„U"HA3JAUQ/'wxgfi_&YkQSa91*9:XemhDe4*Mm\tmb*,6wW8_Arg:X9pr\5_%s$gf„U"'L6B-5GwAnRQ>gWoe3&/zmL.SltIb.1?sGI21$voHEC?i4Rp5PKZy<rr3.;1%(l„U"mcn5%,&FoQr'af58?sd78&'hpK*FF\aEU;HuS,ENQQ(PYeo-#I=352_Z.FX24OP„U";L7.L:2x,y([j],N1j5H92f8wk;Sh7B=,>*&ivB(<9$)6fO\68kItTS7l8C.7mZ„U">(fkJ3&O^wfsJh6)t0D<n96/#;*0#cU=U8P)oB#xK6pUKnH2%r%uL(,R8jF0eVa„U"W.Cw=CM[8*OWP3_R'%2:#%<-vi>^TY)+gzo#x\]46Ptt/GeQQ2nr*q'G^+G]:QA„U"A$)V*Nb(Q'5XvB8:BFWOID#5dg,2QS9lfbg/oHn'?I?J8R>FPU\9qIWPVv?Osr/„U"jJT9d?f;c3$CDt.e4C>p*irGIjf7(*)rqPTeBWLNh)U^vaaE\*2Fps023]JnK;2„U"ajX4wqCdg#$.;]jIo<9bF0E)MYkH^(KlB78QwN8L/LcWfBC?:5K^%%3>EhbGYvS„U"G7XH0BULhg1brgF:Fb]F&R%Rv/AtUn'EmW%H?a(2i1n[:$I'sl<?Q_yBK*gcBUi„U"NFh*3.?%v+-gmerDisM(pVaxDlVR6x,X(*)QrfsFal0REhG(x7ML$I&UFggPuZb„U"3J?,c.5eZS(m3rmcrl^'N\Ot57m4f1l#nq.8=uxLMZ+.E664RCMu10)k_f]MuVV„U"Vf3._,BTQH.mSd:QaH6IG)qGk^O.iE'%%3OX:dCwbAZK5N)E9+4N$98s)(s3QJX„U"YZrae_zUa$5ukmYqw2ARH>rbPc\FL5)3pt$+X)UW4\riuu\EfT/40r%;I1l[ibH„U"t[oC&irA,so(8g.roD<6$On#gQ.ok??(.5HEnGVpfby#0$6D>pTa6Q0_([(Ei,J„U"AFPFR4q(S<3\,oWdE)%kpYRSTXMDP+ab5hUz612vc-#pW7QH>DIX#$$OM(JTfG;„U"Qz;K9K),QP3i*2Cl-uU.9MsAsN2d.sf^bQH3Akf=e3cQh<.[Vj/+peGT*j>s=gZ„U"VScVeBU&9:8KSf:J;:_URko8kVh-nm8uW626,M6P'KX_7?C.XSDuO6Q^Z1A\*lJ„U"SxeDOY&mm9xk:p/Vs<%j'S_hRn_2kwQBZZr>%\R=cX#n.abMl6U<YV.7Gx,MV^,„END SUB„SUB V2„U"Trdo_Q2]yh7)4S;8]L'nfxELW^/l:S]CHO-[VWbg&h;Qhl;JdVf2,Gi_XCcs%o=„U"%(:xHGv4>uox-an=n/kal(iEykcf[3Eqi^RzYHCK6pk6M)Yn[whSWZdGZRV.L#V„U"aE%lMQmRyfku0F=8Nk^OmM0lanAe_;5pc+$,_KkiPhUwqmEw1V8v3;ZSJ0:cD_C„U"gQd_mNaEdPH1fPJ3\Ase.848I_o,tbM(8crbc.NxHWPu0K+O,sJA5+$l$kb]2iu„U"wQxuT\\>Z:xnE_'7d2SIlhR#0laBj:p6QNn?lHiGmui\1FlwhafGrTH[-x2=17x„U"RPX-xAA\SvPpFJi,xpFSW,g]P6:^$h9mNrsC$%ZdU<wEy]CAp=.eB%U&5EV(DT)„U"jwf\eqOLI9,p9C(-Or0u)dC/*'w0+#ae%Xle:BXu)i7[&FfIp77:H_r6,aVIwqb„U"<FcH>&^t:7J[XK8o=Y%)PUUIRY,7aGn(*G1;4Y&n.0IPp73R3\KJf8h]_DZh)MM„U"VLEjad*mKRchM6s)6.iKRCbMTtrI*3D1MCxGKM9)u'\M/7*=CCn+II'a:3Df(+R„U"6epM^4:3FJ3eZig5gGeq,\(et<7b%.-rg..UwVbO/?fs/8?<LNx;.3^^&=tAQ:A„U"2EBMT5N9Z(g[M8_5.h\%hw]AgK]x2\5*3?l4Ww1-'fRIy%_-Pe8'A11+r7*gKZz„U",tdZ:%TV(%F(&%&.oF7Po#O[M#=VLB(Sh>bdn_v'Jp(aPJgXe4lohBGs]$v<P\J„U"8dr(3\qHEoGz0HH[KzFexnn(2-=fPo6R[:HpA&N;TY:u<XstxqBTtLA3ArlW/95„U"NqX+.t^jKzODD)'>+JW69$'E^+Pkg?l+PQ(tdK$>,Pf2=8H5.bmiOX520]k+##\„U"^\<:^Fje>jO]Rbf]PmMGvT&?q:jWSOLw4WHUY%7\*)%fW47:,9dA0sf;&?eAH?Q„U"\t+8v)J3w:no<>&Yy*(g]n0qR_/gDm]Cl,h#pm_/]*]R3[*FSZK:&:GlA.u4)Te„U"Uw\UuMZiml_6sW56PZ_qvJ3,A?5-o$e+=%YH,X],*qN*p$^/0K.Wn0H_2NU]#j:„U"A*.kt(e:'nGC9?c.A/U^J[d\7uwtOhVa)rGp]Y]'+MAju8LpZVg)4qirK]'Q_,c„U"UZiw3,,e%S(Lyw*h=G56=Ae[QaBnX%quvED2'uo*q-<)N4(OyS0'K.2n\5W<d3q„U"S>BWS]0o^OfMnmwEwOkR;4\n(7oZ$7LEHb4[cmusa[fZ^rbNDDddxk41oW)yiIK„U"2?IoqQII<Wn<cDZ8t+CMuXWid6iV8;u?9#W&jB:s]-%8k*fz*yRhecufTfzZL'B„U"_:9ZW>bN/Ri.D#O^wcr1/S:meu4fXe/w.6i/EjUd?SCFKyg>KE+a0D-R?+IA'-&„U"TxpC(1BP3IJYMb/Z/YbCEt(sf(1?lD-,$>je.qqWf'Wbr[g,6AT9'9LLIv,Mkiq„U"nNVhcy;CDuJ:?\;&:r.h'B5,EJE/bvme%hItEvJK?coC%TF7iF)=&a0IbsIG'O0„U"dsYM;IG\YJaw_f\.dVCa3zD6P-cg+r2^OO2\ZW>wFi7:Gw._iK)nP.=lj56&_fm„U"7Fe>\l1qi+)Kpu*WUH1qM?.X=9e;2(R7,G)C42ah1r0AT7&3]+Oq9URm62L.+nD„U"U1dky]]//T6A9QhTcWJ#[?(q&-e6:ko7%7w-I5B,Z5*fM'l%fvQd='&NpayX?J.„U"l_irbe,O319ljcH^l9UA[xo+P[NYGuV626Q5gabLM*kV2b]EZI3AjR<qPK.pr><„U"J?<0o3ZM3ob^Ut5#2AiT0V=y=<-%wnsB,\x2V\e=rC*S*G2ND77,XtlM3SfH?HS„U"Py4_]Ukbd3>eOEvUVJ^$s<9NcZ1^sGj&Ih:pWm64r_d:ygmPdLJ3K+t*nd9>Kv9„U"Gjmx30Kt$nad>Kv:9jm<1A$GqQ,3Y7G%mjAT]<U$5y',#Fyu^=4(/itXM.-mZ;K„U"j#m*DKg>0NW0EmIGg93ue*Hf.:Jjcp:*7ye/XLOnVGnOhX0h[rB$/.haf4#VFfM„U"<SAZlS9tg(/uNUe&Go<agow?)gZT_I<Fe?$ZekD4*YAi&DC<*CHQ)n%pPwk*r/i„U"u77(oI'8^Nn&-B%w7upv_muv1H9_)^PMVeD)rHpmTe'cGa*_kk'9^YwAI,4t:[y„U"oORSR0D[2]24r;29YnBFV<a-j#U+<YFSJghW',2aZeJ2LZ4U1Um3Bo8PA(KLHrg„U"Gu4ft6M<bt&fzb8Nkt)+PbS)3?b+l)2l>p_tnu?.J+A]pR_HdW)xr.l'pLcv2Y>„U"Qb2FrKg%='sPJ\BLO*v'&//[t]O6<J%O/e=9QgRCxxEE8-;p.r.Ba7mD):o<Is%„U",7i\h%Dl?8aXE&fjzrBO99.zHjk9-iIWAUR:?+oauw=>qR>-#p8QfVNZot_MACK„U"Qj3/A>h6Xm--,J=k/N4vwO+*VD]oW2=E4fXCc[TaZ4.=8*8enPKQt76<0$U(b%a„U"qa>Unv_$,9WDeMZRd'/<9k*pu5GQ*C/[A53fio1lP>=Kehk]Ns?K85A^Q7Fb->3„U"ua,JK7-E/I[r(JQ(mU$Ag4bSv=hp1\LYbMRFWHHI-J<_b38Rl1MfklcmX6OAtqI„U")1KHcvnW6K%0bZ8:#F,dJ'ox.0[V.>p+9EST.brUrg->dpSW1fVZFT2s./AT-TQ„U"6[-ELT-IhGm8<F:=MbR%$^u<uZu[475b?.$*3x3u:6qs?fcQHH\U<,q[&x7==xl„U"Sc?rY/ZA;xojn%p$?)_sx2'28tZ$2U_?(IFzt%1BUKnajmQcl;IucH*bkx'<L0\„U"Y)RZWhTBd9QsOH>s&^pL9<jmi41E-V:$eop:aK82](#0#yp:nDRO26a?%*cdN+:„U"*&y2+b,([Ohsl&)k;Iz<u[]&,8cB)ZPB\HGuREfxUbBxTLqiA0nco&J0<fXRC_6„U":AB8L&^e>;axM:]K1[TGl=h(3:l.ukuKFobxbcH/QL;#UWi\'TZtpoubn*(1*w+„U"T0'^CtuFSQn6XMQ0>LKjWN9B)E*qeI1m3m65Nhz1D6-e-sNJ17/+\&C:<zr783Y„U"PlR$TC'b,ohR.Q^1aOGaqm3R#tgjaDruDKG(NO&.'R<6grJcP3R-v/[GY.K?.[x„U"OF+>Sm;N%i)-Xq#vsCKk%-A*9<Q$WYefV>B;9(+Sp;?$vQ>8?]v7SF%$#7?;4wb„U"o3k:(*_OQtNSDh/(CLPus7(65Pi./[p'Vl\Grp2B:TIwgq/z^U:EabaAzzLzN2O„U"R_Dy.q[9<19b*[VPCpa&7id\<69ZC&_qL17+;4tk*a##h#Bfxep&U;Aa_%,PpR2„U"(Q4DL)t?t/ZFNi/GWhdQgBzg3:?Oi+F62*>q*Qw;CT0FPNKmX74^Q,a0of9<[7;„U"AfvD3$NtlNWA;Y(Y*sq\)pb>j0KnTku0n_o<8(o$NP&VcnP#Mccf>K>mHTIcp&o„U"ICD_8aq$awD2X#<o<]#e(#cXP7D/5z^3#1[3<.'Nkcy,v++)oUblgM+Gh%Q:Ir=„U"FQc*#BZaO73<F=jgT;,gVIyTWkP$XqJbE/]4PJs\1/eNVJ*ZOX4UbOxe-VG&qFR„U"YoZ=Z-,?lk[aq[1DA]K6Gbc]ekq[%cp^pAe6IdSQF&uf9=oA5[F0\iKtT>*R15N„U"6Lq]U,b2?0VaLla)Q3tY45AV4Hu?QR2H1X_uou;:h,kU>qpRw%S],e0a>+eTp:A„U"tP=9QZSc,m(?F?wpHQQT2.(a^^=#v]Nb-WIt1T=aAa<U$rmK0,R3mufw^?b\VC]„U"rNH/O-LAS=,;h:9NWqLL0^aT4U^[cUE=X^X=\3u4\heeXwdRjG86k2ZOP8#UM'%„U";lONGG/F.'RP'OlGOnG/9<.QMI'[lOoFGYH=/i$>&tVe:&0cO=/Drf$U/'9va/Q„U"WWOO;L%S?\<39+1iig&mS\NBJm-[)/:I9&YNcWZp;K=c.r_N_QTBc$?.MtCa;bN„U"2#yqqkU$c)'L\sXrY-k(]^7,oXFru-oAKw*p3Bvb'da&Y.U-91B1m(F,f+vP,p?„U"/ss5I)DA+XbLY>OpITp,8%.=cw9D7)FXRe:A3P<1Te%P;0J^Sn%:UE5c&238j*G„U"'zV=;%]0m.4tR,R+e_cLlX1JGuPyUIRl?UCe?%90/ZYF]q4/c.Dtib0U\&.B9?'„U"&[x\FgD+$eARon>H-'RTKG'd*0ny/R<NFiL[/Q5cm5:%kPTFZmtiwS_U&/VmI\4„U"_8$dj,]O4$:iPTwT>)Mp*v>nQ60$,G[o7bG7)+kZX4sDl66*/vTgFEpLDdG5o.D„U"1/seU&SgUSHo++5?taABiB1u3H_MG%sUzMjLdS9mh(qjbC_&j?2sss7,p0,#rsw„U"'ohK[w]Tom^[uIcpAd:aV9U8Pf]U7n#F6P?%>NF0*B%<C,$QGNT%I>Abb7$8PMZ„U"Y-91]Z2Yd(Tr)).1f0R^mDrEg<E()dJ7sVt/.+Q2cGx,h;ZB:L^-57]h)JTn%kU„U"TDAX\FL4cFKD$KT7Ny/gKZP2B/jXl]=MCa*.MmPeqd&Qk3'*9Nl]vjJIT=&JV0p„U"((D%9'<nAEMC%gNRhD\j8w+-)EuQ.\^vFb[]DD'3bg]caU&rjS+;bb7'S%-8SVg„U"axFl5SX]LD+:aL+N[.LR8to92TZKh=aNYCrpgi1hjSvvR$a^rYp(Lt$$\LfITbM„U"llYj/S5mMKTT8>1m]>ltZag0a7W;K2mK0hI#F?4<H'D^&KDH;W34rn+VFQ+.l-o„U";.J45*Fle:&HE%D6j>hTTDdbRf&CKP0GDTG_s/:YmV+7ouPDr9<;[]wK>Lt0k]j„U"=U=\U2UZsQ^FCYdtrq8YGY:#nJV-E%sxMiiX#OI]hO-WZ'G:r(JsrRM]/$D](b%„U",]PY4MaBD(3v7+2DO4j#b1Q[FX)PJ]=eB2)Xt\C/guee7'Su?2Ne)U]k5Q9PwkT„U"+UFaeJmV4Q/R,6Wr5GYcF0O'rh9<9:%V;'=KALU9EEKT>.aq[7g$6>1l)X2Zrtu„U"3qwdhY4wAavF-^GC$.1yn8&$xU(T_738D(QQs)_k:m:)(*7f55%tVPtL>RY^HTk„U"[8=R9a84<L>%B6jP>b=L](O6HKN-[Dy6+s76w?6N$A<;G055Vb-M^d7C$UY8.DR„U"/w:U37cn2pJQ:ib#<jcTe#kqe,nSD2s<o[92>K:OT$jn<=dXRr)_.:CUuZFI#au„U"pmFIm88B,DFJdx1s2G:x[XobP+e0#R:ZQt'aGq0mDe0\2;xoi#4Mf=TA2K6(NlL„U"zm]t#0XCD\foXjtaA$r&(5r-S9W:FNFnV0*o5YGRvkgw[$=_ac'-.q6GjvTj$aY„U"L]\hqFu.V,,RB$EMND]C=^XSL:'>QR.R)OB#DOL6-o6vmPMBnR#,.0TP&mV,oO;„U"rVi1&4iaP^Av\hRO1CTt[^igjHD%YB<;i'lC;/gEjJbH\R'e)Dp.NTeo&sF/WKw„U";j:.TXU0NK*9lJ.+i8AKebG^eu(Gf5cA<:3^^IvA$0#G7hWIcm/bMMh<g5LMGuL„U"NHGY+F(;S>k;X>/;5prtH,L)_n=ri4DP_m;o$>fneGfw[Zqc\EGQ)FAS)g&I8NL„U"[uly<oH&wqxKHwoh%WR+Teh+4&Y1wpp7uTIUDRiHd%e]=G'dU3-.g)8d&%bG2+M„U"XVWy9R*Kp.sdEj%=IO,T\s0oo1g\cCI5F**?Pt34>uU^?<o*7Oj.$[EsUTMb-NU„U"--N?R:wup-otlbvLPd]N0]lZd5pr^K1(wg\\T6f_F/vK.5du7,hR1Y[XjS.;?:W„U"ISv_wOW]4OJH(]LC/$AK>\0Z]/.Gq$'\z/0\&=TYU7md3K_vE7J<+JrnSDmM/wC„U"T]*i]I/se2ApO%b]CNHBAwLfJJ:7=3kX./GTg]Q(E+M4dG1(7P,z:=KP:oYDtro„U"05'ZWv6X702;(BAh($fMz2[%2V$bF%2L\4q05rp5(pZZeCpx[eDm2vm]&Nc;2gc„U"%7V:1.Y(oG.'AzTx7K'-OKhg_&MUh1CLsOBi1MrYX5/tN(emLErpa?'&rg;0p-o„U"e5*CZCORY\EJ(Wp%7NDx8Cj%CTicB.5s/Z\-E2;T>L/RuQ2<6\q%^'7zs#?j_7k„U"P-K?w*AYzk]LO(j*ez*kFbt;J\PJ+X?+_pbMtfKaO0'GNP061+*HZxijBg;]I#V„U"sl(A^%2FYoE'GY#:2A&lU[9%Q7OgOIDX)mB'V=Jn[qYUS\FR_nk_:g?.DTrmYe$„U"Wo;$OUuR^[ory<+0h5s(Ct&+]iFzh)WI3mtVgM_rjudBI\FBP(Zt300D<FTHXc^„U"qRRqY^G3q#tW8BPof58\=d55muay<eOr8Q0l2H8XeD<\w0urN3%1P+t;qtC)dZ0„U"c]/a.=_k/B1'V:HtLQn\W-2L:j8$);TI8%nC/obu(^&]&A3V,w7.47?V+/T/=O;„U"uugL>uBfb^rx>hsGmTYQli46u%dut$k2R##DOsYA-V0Y4D8l>&/la2##&8>x#eA„U"LNtLRVTZ46\_muPnPfmF]Yloo]^>Mh0D[\7Cl:r?SYuD>P_Vw5nP6EWRG50Y,PJ„U"S>x<;/uI,Ob*?A\RXn5-\Iq;jaJnBtIido4[RV29<xOa>x+-F^oc_2;z%?_OrOw„U"TdM]iP^5N/(ttv>>.keYmTP6L-N-f$bLAx3C(drCPp^%Ba/$[Pn,5r$k60=vaPx„U"dqeJbV^&*&aKH'+:j;)z=iH\Eo(qP->j<4577pSUM-\Ws1:?A:)T?bd^;e*aYbG„U"Qogfn,APZ^nOW,?6E]C6.8eTS-YhKuP9HI+h:]t_?INef&GCDNIGA;'d=(V+uSL„U"8/?X)mx#^,n5hLn%D)vtGwKQfZ+]tp.h(_]_*/UWTbHV[wF8ZVJ()Y=6t$%-fEL„U"Uu*WG::Z2]sja*Q3>cso#sg*iaBCE,an)Dmh/&7I&*uy+TXJ-j]]qxup86mu8*0„U"xV4H+'9[?sw*LXIo'9K/7/>63)$aTy;iF(/mSTXOD9BT-z+FCx#7Uva=/Y)<$j;„U"ce<(#rd]<1[04US*E5p\I4_rU:tfUZ#pQ-Te;Ol4f7(=n863(Y3CDHv>h5BM>W0„U"d0q^>k2Wt#Q0Ccz1wcVm_&K2w(+N+:)qO7xX]Q=.aTnT^'O:0DQ%&KAt:u#MsRA„U"*rYy':T:=kOBI9Dl*-MC<M$(?Uqf#u7;4]4XgW,jW#XZ;B\3daRxDmi%ZP*9O,O„U"][NW1jBNaRe]RNdV1b$r:cA\nm2b^jjepI+n7-G#n*Yc;tJK,e?_q:KZ*j=]c5$„U"?/$GEYMQ$&?TEF\V;1Oe%HweMWrLu;Wu4Ak_#juY^tGnT#5s-UW*vX%9tf<L\Q3„U"r[y<]/[6#lZuY+aYbU0NVOi>%d-i;i2'x8?4.Z]iWeTURYkP#csEgY]HGQtnXVu„U"gWNLT0wAY]?T]LA$EX;BO8'R)F,GaQ1,S3)sjR%I(w;E]-D?+F/%([iluQoJqQA„U"N]Ujh:hT2*e2Az+L&[?ux/TxuX7s)'.$X8f1QZo?,U=7Jl+).nPN>L;G.g%mp?]„U"aO%qF1(^/28NFL3WVT%[wNLtPGF3V=h86DWZo\>60gn\/eD#Y?(K#zr.P%=h[\,„U"3k]\r3)xA_h:HYS>EYwXm[ULBkD)JudrgIY,S\h#:j3cJVl^=OtN(DeBNt4RhK.„U"lV>VEjVSixE5lgwOAZGiOx<7]0cAX4lMEc$ghf$Zh/j-.DRQ%MAC8)nAea9JR:>„U"q#*e)qgGFkRi^Ug<q=+djKW$,Y1[vy2kgGya\fvPWZEish*Y-o+Mk6_BqjQDuXn„U"NDRl$g$9i*wxl<17xE<m&fGILn89i<p<4hRP=2>xV'.A\?DJ=\D9&-$80(rFF;,„U"io60Of8/mh?6g-E;ntnhehTCcU$9-gZ7_s60rG3Fz_*sY:(#-n50jq$hZwZ+w^w„U"zRiQ1*$aL)-Y;sCT?,BmuFA6nY^WL]2cKNYYbloG&>Y-5tm&fp_mBcZtqqKDJ50„U"2\LMqUjZo,<nr.7I;\Q8HD(\krJu#5ie=lVFZ0Vtf(*dW%[k/$B)P:Y.dtW'7R$„U"ePvzEBPg6=n2Dk.5A$N#:*6?^_ez>N]76-p,('3$n*2cao>o)iHN'7QM(::-F#<„U"/L-?O;w5j,_3R^H^M+aX+Ie.d[HkTixMF1Tw_Y_&8qO:40z=6o[H=M$?^Ts;V_E„U"DXB;Pnd/9$vdFjOsF8r6u;$l(w<'ziNNQMjy'.ZRxo7;3)gTl]\?^v<;\3[&<[p„U";FpT^OK:o?*e%$L'GiWECFquChKcvgeK9k^(OlDJK4I\b3?28r7t.6S1T5<;;nd„U"fOi7*SaU6(:#-qy10bDL)ahdF13'%%f]%Wo:N%NGZKz;Vz&0C1%qrVAO6Lsbxno„U"E?iHM%,up&%'9%9%%%%-+%&uVaD[bv+#Qe%%%ed&%%,%%%%%%%%%&%E%%%%%%%%„U"%w%ulSg%fxup%*+%%%%%&%%&%Z%7%%ve%%%%%„END SUB„V2„CLOSE:IF S=126AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„'>>> Page 1 of RPG.ZIP ends here. Last page. TCHK:126„Unknown Author(s)              HANGMAN GAME                   FidoNet QUIK_BAS Echo          10/16/95 (00:00)       QB, QBasic, PDS        344  8561     HANGMAN.BAS DEFINT A-Z„„DECLARE FUNCTION GetKey% ()„DECLARE FUNCTION Enput$ (FieldLength)„DECLARE SUB XLocate (Column)„    „  „   CONST Esc = 27, Enter = 13, BackSpace = 8„   CONST NumWords = 18„„   SCREEN 0„   WIDTH 80„   COLOR 13„   CLS„   LOCATE , , 0„  „   RANDOMIZE TIMER„„    PRINT "This is a game of hangman.  You may play aginst the computer or another person."„    PRINT "      You will get a body part added to the man if you get a letter wrong."„    PRINT "           If you get the letter correct you will get another guess."„    PRINT "                 You will have the possibility of six errors."„    PRINT "           You must get the word correct before your man gets hanged."„    PRINT„    PRINT "   BEWARE:  There maybe hyphens, periods, numbers, and you must guess spaces. "„    PRINT "                               Good luck!"„    LOCATE 23„    PRINT "                        Press a key to continue..."„   „    KeyCode = GetKey%„    „Top:„    SCREEN 0„    CLS„    COLOR 9„    LOCATE 9„„    PRINT TAB(20); "1) YO! G U WON'T PLAY DIS 1!!!!"„    PRINT„    COLOR 10„    PRINT TAB(20); "2) HA!HA!  PLAY DIS MODE!!! HA!HA!"„    PRINT„    COLOR 15„    PRINT TAB(20); "3) C'YA! OUTTY 5000 G!!"„    PRINT„    COLOR 4„    PRINT TAB(20); "   WHICH 1 U BE WANNIN!!"„230„    KeyCode = GetKey%„    „    SELECT CASE KeyCode„        CASE 49     '1„            '„            ' **** WORD INPUT BY COMPUTER ****„            '„            RESTORE WordList:„            FOR Temp = 0 TO INT(RND * NumWords)„                READ Word$„            NEXT Temp„            Word$ = UCASE$(Word$)„„        CASE 50     '2„            '„            ' **** WORD ENTERED BY PLAYER ONE ****„            '„          „            PRINT "TYPE IN A WORD, AND THE PRESS THE ENTER KEY."„          „            Word$ = UCASE$(Enput$(50))„        CASE 51     '3„            GOSUB 970„        CASE Esc    'ESC„            END„        CASE ELSE„            GOTO 230„    END SELECT„    'GOTO 180„„490„    '„    ' **** GUESS ROUTINE ****„    '„    SCREEN 2„    CLS : LOCATE 6, 10„    GOSUB 1070„    Mistakes = 0: WordLen = LEN(Word$)„    PRINT "THA WORD HAZ"; WordLen; "LETTERS"„    LOCATE 10, 10„    S = 5„    Guess$ = STRING$(WordLen, 221)„    PRINT Guess$„   „    DO„        LOCATE 18, 10: PRINT "U HAVE "; Mistakes; " MIZTAKEZ!"„        LOCATE 19, 10: PRINT "GUEZZ DA LETTER:  ";„        Letter$ = UCASE$(Enput$(1))„       „        IF KeyCode = Esc THEN„            GOTO Top:„        END IF„       „        LOCATE 21, 5: PRINT "U HAVE PICKED THEZE LETTERS...."„        S = S + 2„        LOCATE 23, S„        PRINT Letter$„„        FOR J = 1 TO WordLen„            IF MID$(Word$, J, 1) = Letter$ THEN„                GG = 1„                MID$(Guess$, J, 1) = Letter$„            END IF„        NEXT J„        LOCATE 10, 10: PRINT Guess$„       „        IF GG <> 1 THEN„            Mistakes = Mistakes + 1„            ON Mistakes GOSUB 1190, 1280, 1320, 1400, 1480„        ELSE„            GG = 0„            IF Guess$ = Word$ THEN EXIT DO„        END IF„        „    LOOP WHILE Mistakes < 6„   „    LOCATE 18, 10: PRINT "U HAVE "; Mistakes; " MIZTAKEZ!"„    GOSUB 1190„    GOSUB 1280„    GOSUB 1320„    GOSUB 1400„    GOSUB 1480„    GOSUB 1520„„    LOCATE 14, 10„    IF Guess$ = Word$ THEN„        PRINT " ' B O U T  T I M E ! !"„        GOSUB 1590„    ELSE„        PRINT "HA HA ! !... THA WORD WUZ "; Word$„        GOSUB 1560„    END IF„   „    GOTO Top:„„970„    '„    ' **** PROGRAM EXIT ROUTINE ****„    '„    „    SCREEN 0„    END„„1070„     ' **** GALLOWS ****„      LINE (260, 170)-(350, 199), 1, BF„      LINE (600, 0)-(590, 199), 1, BF„      LINE (500, 170)-(600, 199), 1, BF„      LINE (355, 170)-(495, 170), 1, BF„      LINE (422, 0)-(600, 3), 1, BF„      LINE (515, 0)-(600, 43)„      LINE (500, 0)-(600, 50)„      LINE (422, 0)-(426, 50), 1, BF„      CIRCLE (424, 64), 10, 1, , , .9„      LINE (420, 50)-(428, 55), 1, BF„      RETURN„„1190„     ' **** HEAD ****„      CIRCLE (424, 64), 10, 0, , , .9       'Erase noose„      CIRCLE (424, 50), 30, 1„      CIRCLE (424, 50), 28, 0„      PAINT (424, 50), 0                    'Erase rope„      CIRCLE (415, 47), 2, 1„      CIRCLE (433, 47), 2, 1„      CIRCLE (424, 56), 9, 1, , , .2„      CIRCLE (424, 50), 1, 1„      RETURN„   „1280„     ' **** BODY ****„      LINE (421, 64)-(427, 70), 1, BF„      CIRCLE (424, 92), 25, 1, , , .9„      RETURN„„1320„     ' **** ARM 1 ****„      LINE (401, 83)-(350, 95)„      LINE (409, 73)-(350, 95)„      LINE (350, 95)-(340, 93)„      LINE (350, 95)-(338, 96)„      LINE (350, 95)-(336, 100)„      LINE (350, 95)-(348, 103)„      RETURN„„1400„     ' **** ARM 2 ****„      LINE (448, 83)-(500, 95)„      LINE (432, 70)-(500, 95)„      LINE (500, 95)-(515, 90)„      LINE (500, 95)-(518, 95)„      LINE (500, 95)-(513, 99)„      LINE (500, 95)-(510, 102)„      RETURN„„1480„     ' **** LEG 1 ****„      LINE (417, 115)-(410, 163)„      CIRCLE (402, 165), 10, 1, , , .3„      RETURN„    „1520„     ' **** LEG 2 ****„      LINE (433, 115)-(440, 163)„      CIRCLE (446, 165), 10, 1, , , .3„      RETURN„„1560„     ' **** LOSE ****„      'CIRCLE (415, 47), 2, 0„      'CIRCLE (433, 47), 2, 0„      'PSET (415, 47)„      'PSET (433, 47)„     „      LINE (355, 170)-(495, 170), 0, BF     'Erase floorboard„      KeyCode = GetKey%„      RETURN„„1590„     ' **** WIN ****„      CIRCLE (424, 64), 10, 0, , , .9„      LINE (420, 50)-(428, 55), 0, BF„      LINE (422, 0)-(426, 50), 0, BF„      CIRCLE (424, 50), 30, 1„      CIRCLE (424, 50), 28, 1„      PAINT (424, 50), 0„      CIRCLE (415, 47), 2, 1„      CIRCLE (433, 47), 2, 1„      CIRCLE (424, 56), 9, 1, , , .2„      CIRCLE (424, 50), 1, 1„     „      KeyCode = GetKey%„„      RETURN„„„WordList:„„DATA "JUJU BEE"„DATA "R.T."„DATA "NICE BUTT"„DATA "B.B."„DATA "CHAD BECK"„  „DATA "KIETHERS"„DATA "PARIS"„DATA "PRINCE"„DATA "9-MILLIMETER"„DATA "TECH-9"„„DATA "SYSTEM"„DATA "ICE-T"„DATA "BUSH KILLA"„DATA "GUERRILLAS IN THE MIST"„DATA "DEATHPOOL"„„DATA "MARK SALASBALLS"„DATA "LIVIN' IN THA SESTPOOL"„DATA "I HATE KRISTA REALLY WITH A PASSION!!!!!!!"„„FUNCTION Enput$ (FieldLength) STATIC„    SHARED KeyCode, KeyStroke$„  „    'Define internal defaults„    ReturnVar$ = ""     'Used to hold output„    Col = POS(0)„    CharsCollected = 0„    EmptySpaceChar$ = "›"„   „    ' Supply usable keys„    AllowCharsMask$ = CHR$(34) + " !#$%&'()*+,-./0123456789:;=?@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz[\]_"„  „  „    ' begin main loop„    DO„        IF CharsCollected THEN„            'Column = Col + CharsCollected„            CALL XLocate(Col + CharsCollected)„        ELSE„            CALL XLocate(Col)           'On„            PRINT STRING$(FieldLength, EmptySpaceChar$);„            CALL XLocate(Col)           'On„        END IF„    „        KeyCode = GetKey%„       „        SELECT CASE KeyCode„            CASE Esc            'Abort program„                EXIT DO„            CASE BackSpace      'Back up„                IF CharsCollected THEN„                    CharsCollected = CharsCollected - 1„                    'Column = Col + CharsCollected„                    CALL XLocate(Col + CharsCollected)„                    PRINT EmptySpaceChar$;„                    ReturnVar$ = LEFT$(ReturnVar$, CharsCollected)„                END IF„            CASE Enter          'Accept„                EXIT DO„            CASE 1 TO 255       'Normal key„                KeyStroke$ = CHR$(KeyCode)„                IF INSTR(AllowCharsMask$, KeyStroke$) THEN  'see if it's printable„                    IF CharsCollected < FieldLength THEN„                        ReturnVar$ = ReturnVar$ + KeyStroke$„                        CharsCollected = CharsCollected + 1„                        PRINT KeyStroke$;„                    END IF„                END IF„        END SELECT„    LOOP„    Enput$ = ReturnVar$„    PRINT„  „END FUNCTION„„FUNCTION GetKey% STATIC„   „    DO„        Ky$ = INKEY$„        KeyCode = 0„        SELECT CASE LEN(Ky$)„            CASE 1„                KeyCode = ASC(Ky$)„            CASE <> 0„                KeyCode = -ASC(RIGHT$(Ky$, 1))„        END SELECT„    LOOP UNTIL KeyCode„„    GetKey% = KeyCode„„END FUNCTION„„SUB XLocate (Column) STATIC„    LOCATE , Column, 1„END SUB„„Douglas Hergert                GAME OF 21 (BLACKJACK)         GAME,21,BLACKJACK              Unknown Date           QB, QBasic, PDS        514  17614    BJACK.BAS   DECLARE SUB BubbleSort (array%(), number%)„DECLARE SUB Shuffle (shuffledArray%())„DECLARE SUB DisplayCard (verticalPos%, horizontalPos%, card%, show%)„DECLARE SUB CountHand (hand%(), number%, total%)„DECLARE SUB Winner ()„DECLARE SUB DealerPlay ()„DECLARE SUB Pause ()„DECLARE SUB PlayerPlay (over21%)„DECLARE SUB MovePointer ()„DECLARE SUB GetBet (quit%)„DECLARE SUB StartGame (win%)„DECLARE SUB InitializeDeck ()„„'   Filename: BJACK.BAS„'„'   Author: Douglas Hergert„'„'   For: Qbasic 1.x, QuickBASIC 2.x - 4.5„'„'   Plays the game of 21 (or Blackjack). The computer is always„'       the dealer, and the person at the keyboard is the player.„'       No "splitting" of pairs is allowed, nor is "doubling down" of„'       bets allowed. The player begins with $250, and may place bets„'       that range from $10 to $100.„„'---------------------| Global Variable Declarations |---------------------„„        OPTION BASE 1„        DIM rank$(13), deck%(52), playerHand%(11), dealerHand%(11)„„        COMMON SHARED rank$(), deck%(), playerHand%(), dealerHand%(), nextCard%, currentHoldings%, betAmount%, playerCards%, dealerCards%, true%, false%„„'   ---- Set the player's initial gambling sum to $250.„    currentHoldings% = 250„„'   ---- Initialize Boolean variables true% and false%.„    true% = -1„    false% = 0„„'----------------------------| Function Area |-----------------------------„„'   The Upper$ function converts alphabetic characters in a string„'       value into uppercase letters.„„DEF FNUpper$ (textVal$)„    STATIC i%, number%, character$„„'   ---- Find the length of the string value received.„    number% = LEN(textVal$)„„'   ---- Examine each character in the string, and convert as necessary.„    FOR i% = 1 TO number%„        character$ = MID$(textVal$, i%, 1)„        IF (character$ >= "a" AND character$ <= "z") THEN„            MID$(textVal$, i%) = CHR$(ASC(character$) - 32)„        END IF„    NEXT i%„    FNUpper$ = textVal$„END DEF„„'   The TransCard$ function translates a number from 1 to 52 into a„'       two-character string representing the suit and rank of the„'       corresponding card.„„DEF FNTransCard$ (cardNumber%)„    suit$ = CHR$(((cardNumber% - 1) \ 13) + 3)„    rnk$ = rank$(((cardNumber% - 1) MOD 13) + 1)„    FNTransCard$ = suit$ + rnk$„END DEF„„'   The HitOrStay function asks the player if he or she wants to "hit"„'       (take another card), or "stay" (play with the current hand).„'       HitOrStay returns a value of true if the player wants to stay.„„DEF FNHitOrStay„    LOCATE playerCards% + 12, 5„    answer$ = ""„    PRINT "Your hand: Hit or Stay? ";„    WHILE (answer$ = "") OR (INSTR("HS", answer$) = 0)„        LOCATE , , 1„        answer$ = INKEY$„        answer$ = FNUpper$(answer$)„    WEND„    LOCATE playerCards% + 12, 5: PRINT SPACE$(25);„    FNHitOrStay = (answer$ = "S")„END DEF„„'-------------------------| Main Program Area |----------------------------„   „    CLS„    LOCATE , , 1„„'   ---- Initialize the deck, and shuffle it.„    CALL InitializeDeck„    nextCard% = 1„    CALL Shuffle(deck%())„„'   ---- The play:  For each round, get a bet, deal two cards each to the„'        player and the dealer, and draw more cards if appropriate.„'        Declare the result of the round.„„    gameOver% = false%„    WHILE NOT gameOver%„        CALL GetBet(gameOver%)„„        IF NOT gameOver% THEN„            CALL StartGame(roundOver%)„            IF NOT roundOver% THEN„                CALL PlayerPlay(busted%)„                IF NOT busted% THEN„                    CALL DealerPlay„                END IF„            END IF„            CALL Winner„        END IF„    WEND„„    END„„'----------------------------| Subprogram Area |---------------------------„„DATA 2,3,4,5,6,7,8,9,T,J,Q,K,A„„'   The BubbleSort subprogram is a bubble sort routine.  It is used to„'       rearrange the cards in a hand before the hand is diplayed on the„'       screen.  Since a hand seldom has more than five or six cards, a„'       bubble sort is just as efficient as any of the more sophisticated„'       sorting routines.„SUB BubbleSort (array%(), number%) STATIC„    FOR i% = 1 TO (number% - 1)„        FOR j% = 1 TO (number% - 1)„            IF (array%(i%) > array%(j%)) THEN SWAP array%(i%), array%(j%)„        NEXT j%„    NEXT i%„END SUB„„'   The CountHand subprogram counts the value of a hand, and returns the„'       value of the count in the total% parameter.  The other parameters„'       are hand%, an array of card numbers, and number%, the number„'       of cards in the hand.„SUB CountHand (hand%(), number%, total%) STATIC„    total% = 0„    aces% = 0„„'   ---- Tens, Jacks, Queens, and Kings are worth ten. The ace is worth„'        eleven unless the player's hand is over 21.  Other cards are„'        worth their face value.„    FOR i% = 1 TO number%„        cardRank$ = RIGHT$(FNTransCard$(hand%(i%)), 1)„        IF (INSTR("TJQK", cardRank$) <> 0) THEN„            cardValue% = 10„        ELSEIF (cardRank$ = "A") THEN„            cardValue% = 11„            aces% = aces% + 1„        ELSE„            cardValue% = VAL(cardRank$)„        END IF„        total% = total% + cardValue%„    NEXT i%„„'   ---- If total% is over 21, and if the hand contains aces, count one„'        or more aces as 1 rather than 11.„    WHILE (total% > 21) AND (aces% > 0)„        total% = total% - 10„        aces% = aces% - 1„    WEND„END SUB„„'   The DealerPlay subprogram draws more cards for the dealer's hand until„'       the count is 17 or over.„SUB DealerPlay STATIC„'   ---- Begin by displaying the dealer's hidden card.„    CALL DisplayCard(2, 35, dealerHand%(1), true%)„„'   ---- Count the hand.„    CALL CountHand(dealerHand%(), dealerCards%, dealerTotal%)„„'   ---- The dealer must stay at 17 or greater, no matter what the player's„'        count is.„    WHILE dealerTotal% < 17„„'   ---- Deal the dealer another card.„        LOCATE 11 + dealerCards%, 37: PRINT SPACE$(30)„        LOCATE 12 + dealerCards%, 37„        PRINT "Count is"; dealerTotal%; "==> Dealer hits."„        CALL Pause„        dealerCards% = dealerCards% + 1„        dealerHand%(dealerCards%) = deck%(nextCard%)„        CALL BubbleSort(dealerHand%(), dealerCards%)„„'   ---- Display the dealer's cards, sorted by suit.„        FOR i% = 1 TO dealerCards%„            verticalPos% = i% + 1„            horizontalPos% = 32 + i% * 3„            CALL DisplayCard(verticalPos%, horizontalPos%, dealerHand%(i%), true%)„        NEXT i%„        CALL MovePointer„        CALL CountHand(dealerHand%(), dealerCards%, dealerTotal%)„    WEND„„'   ---- Display the appropriate card count information.„    LOCATE 11 + dealerCards%, 37: PRINT SPACE$(30)„    LOCATE 12 + dealerCards%, 37„    IF (dealerTotal% > 21) THEN„        PRINT "Count is"; dealerTotal%; "==> Busted!" + SPACE$(8)„    ELSE„        PRINT "Count is"; dealerTotal%; "==> Dealer stays."„    END IF„END SUB„„'   The DisplayCard subprogram displays one card on the screen.  The„'       subprogram has four parameters:  verticalPos% and horizontalPos%„'       are the line and column locations of the upper-left corner of the„'       card display; card% is the card's number (from 1 to 52); and show%„'       is a Boolean value indicating whether the card is to be displayed„'       face up or face down.„SUB DisplayCard (verticalPos%, horizontalPos%, card%, show%) STATIC„'   ---- Begin by drawing the outline of the card.„    topEdge$ = CHR$(218) + STRING$(14, 196) + CHR$(191)„    LOCATE verticalPos%, horizontalPos%: PRINT topEdge$„„    FOR i% = verticalPos% + 1 TO verticalPos% + 8„        LOCATE i%, horizontalPos%: PRINT CHR$(179)„    NEXT i%„„    LOCATE verticalPos% + 9, horizontalPos%: PRINT CHR$(192) + STRING$(2, 196)„„'   ---- If the card is face up (show% is true), display the card's suit and„'        value.  Use the TransCard$ function to determine these from the„'        card's number.„    IF show% THEN„„'   ---- Prepare a two-character string containing symbols for the card's„'        suit and vlaue.„    card$ = FNTransCard$(card%)„„'   ---- Print the suit.„        LOCATE verticalPos% + 2, horizontalPos% + 1: PRINT LEFT$(card$, 1)„„'   ---- If the card value in the card$ string is "T", print "10";„'        otherwise print the value followed by a space.„        LOCATE verticalPos% + 1, horizontalPos% + 1„        IF RIGHT$(card$, 1) = "T" THEN„            PRINT "10"„        ELSE„            PRINT RIGHT$(card$, 1) + " "„        END IF„„    END IF„END SUB„„'   The GetBet subprogram announces the player's current holdings (or„'       indebtedness), and invites the player to place a bet.„SUB GetBet (quit%) STATIC„    lowBet% = 10„    highBet% = 100„    PRINT : PRINT : PRINT„    PRINT "     Twenty-one"„    PRINT "     =========="„    PRINT„    PRINT "        The computer is the dealer."„    PRINT "        ";„    IF (currentHoldings% >= 0) THEN„        PRINT USING "You currently have: $$#,###"; currentHoldings%„    ELSE„        PRINT USING "You owe the house: $$#,###"; ABS(currentHoldings%)„        PRINT "        (The house extends credit.)"„    END IF„„        PRINT„        PRINT "     Place your bet."„        PRINT "     ---------------"„        PRINT "        The house betting limits are:"„        PRINT USING "           ->  minimum bet -- $$###"; lowBet%„        PRINT USING "           ->  maximum bet -- $$###"; highBet%„        PRINT "        (Press <Enter> for maximum bet.)"„        PRINT "        (Press <Q> to Quit.)"„        PRINT„„'   ---- Read the bet amount as a string value, betString$.  If betString$„'        is empty, assume that the player wants to bet the maximum amount.„'        If betString$ is "Q", Quit the program.„        ok% = false%„        WHILE NOT ok%„            PRINT "              ";„            INPUT "==> ", betString$„            IF betString$ = "" THEN„                betAmount% = highBet%„                ok% = true%„                quit% = false%„            ELSEIF (betString$ = "Q") OR (betString$ = "q") THEN„                ok% = true%„                quit% = true%„            ELSE„                betAmount% = VAL(betString$)„                ok% = (betAmount% >= lowBet%) AND (betAmount% <= highBet%)„                quit% = false%„            END IF„        WEND„        CLS„END SUB„„'   The InitializeDeck subprogram initializes the rank$ and deck% arrays.„SUB InitializeDeck STATIC„    FOR i% = 1 TO 13„        READ rank$(i%)„    NEXT i%„„    FOR i% = 1 TO 52„        deck%(i%) = i%„    NEXT i%„END SUB„„'   The MovePointer subprogram increments the nextCard% variable.  When„'       nextCard% goes past 52, this routine shuffles all the cards that„'       aren't currently on the table.„SUB MovePointer STATIC„    nextCard% = nextCard% + 1„„    IF (nextCard% > 52) THEN„        tableCards% = playerCards% + dealerCards%„        usedCards% = 52 - tableCards%„        LOCATE 25, 25: PRINT "Reshuffling"; usedCards%; "cards...";„„'   ---- The tempDeck% array will contain all those cards that are not„'        in a current hand.„        REDIM tempDeck%(usedCards%)„„        FOR i% = 1 TO usedCards%„            tempDeck%(i%) = deck%(i%)„        NEXT i%„„'   ---- Shuffle the tempDeck% array.„        CALL Shuffle(tempDeck%())„„'   ---- For the next shuffle, keep a record of the cards that are on the„'        table.  (In effect, put these cards on the bottom of the deck.)„        FOR i% = 1 TO usedCards%„            deck%(tableCards% + i%) = tempDeck%(i%)„        NEXT i%„„'   ---- The nextCard% variable should point to the top of the newly„'        shuffled cards.„        nextCard% = tableCards% + 1„        CALL Pause„        LOCATE 25, 25: PRINT SPACE$(54);„    END IF„END SUB„„'   The Pause subprogram suspends the program until the player is ready to„'       continue. Pause places a message in the lower-right corner of the„'       screen, and waits for the player to press the Enter key (any key„'       will work).„SUB Pause STATIC„    LOCATE 25, 50: PRINT "Press <Enter> to continue.";„    character$ = ""„    WHILE character$ = ""„        character$ = INKEY$„    WEND„END SUB„„'   The PlayerPlay subprogram gives the player a chance to take more cards.„'       If the player's hand goes over 21, PlayerPlay returns a value of„'       true in the variable over21%.„SUB PlayerPlay (over21%) STATIC„    over21% = false%„    done% = false%„„'   ---- Continue until the player is done or the hand goes over 21.„    WHILE NOT (over21% OR done%)„        done% = FNHitOrStay„        IF NOT done% THEN„„'   ---- Deal the player another card.„            playerCards% = playerCards% + 1„            playerHand%(playerCards%) = deck%(nextCard%)„„'   ---- Redisplay the hand with the new card (sort cards by suit).„            CALL BubbleSort(playerHand%(), playerCards%)„            FOR i% = 1 TO playerCards%„                CALL DisplayCard(i% + 1, i% * 3, playerHand%(i%), true%)„            NEXT i%„            CALL MovePointer„„'   ---- Analyze the new hand count.„            CALL CountHand(playerHand%(), playerCards%, playerTotal%)„            IF (playerTotal% > 21) THEN„                over21% = true%„                LOCATE playerCards% + 12, 5„                PRINT "Count is"; playerTotal%; "==> Busted!"„                BEEP„            ELSEIF (playerTotal% = 21) THEN„                done% = true%„            END IF„        ELSE„            CALL CountHand(playerHand%(), playerCards%, playerTotal%)„        END IF„    WEND„„    IF done% THEN„        LOCATE playerCards% + 12, 5„        PRINT "Count is"; playerTotal%„    END IF„END SUB„„SUB Shuffle (shuffledArray%()) STATIC„'   ---- Use the current time as the seed for RANDOMIZE, QuickBASIC's„'        built-in random-number generator.„    RANDOMIZE (TIMER)„„'   ---- Find the length of the array to be shuffled.„    length% = UBOUND(shuffledArray%)„„'   ---- Swap each element of the array with a randomly selected element.„    FOR card% = 1 TO length%„        randomCard% = INT(RND * length%) + 1„        SWAP shuffledArray%(card%), shuffledArray%(randomCard%)„    NEXT card%„END SUB„„'   The StartGame subprogram deals the first two cards to the player and„'       the dealer, and determines if anyone has 21 at the outset.  If so,„'       StartGame sends a Boolean value of true back to the main program„'       in the win% variable.„SUB StartGame (win%) STATIC„    playerCards% = 0: dealerCards% = 0„    FOR i% = 1 TO 2„        playerHand%(i%) = deck%(nextCard%)„        CALL DisplayCard(i% + 1, i% * 3, playerHand%(i%), true%)„        playerCards% = playerCards% + 1„        CALL MovePointer„„        dealerHand%(i%) = deck%(nextCard%)„        CALL DisplayCard(i% + 1, 32 + i% * 3, dealerHand%(i%), 1 - i%)„        dealerCards% = dealerCards% + 1„        CALL MovePointer„    NEXT i%„„    LOCATE 14, 5: PRINT "Your hand"„    LOCATE 14, 37: PRINT "The dealer's hand"„„'   ---- Count the hands.„    CALL CountHand(playerHand%(), 2, playerTotal%)„    CALL CountHand(dealerHand%(), 2, dealerTotal%)„„'   ---- Analyze the situation, and display the value of each hand if„'        appropriate.  (The dealer's hand will not be displayed if the„'        player gets a 21.)„    IF (dealerTotal% = 21) OR (playerTotal% = 21) THEN„        win% = true%„„        IF (dealerTotal% = 21) THEN„            CALL DisplayCard(2, 35, dealerHand%(1), true%)„            LOCATE 15, 40„            PRINT "Twenty-one!"„        END IF„„        LOCATE 15, 4„        IF (playerTotal% = 21) THEN„            PRINT "Twenty-one!"„        ELSE„            PRINT "Count is: "; playerTotal%„        END IF„    ELSE„        win% = false%„    END IF„END SUB„„'   The Winner subprogram announces whether the player has won or lost,„'       and adds the bet amount to---or subtracts it from---the player's„'       current holdings.„SUB Winner STATIC„    CALL CountHand(playerHand%(), playerCards%, playerTotal%)„    CALL CountHand(dealerHand%(), dealerCards%, dealerTotal%)„„'   ---- If the counts of the two hands are equal, the round is a draw.„    IF (playerTotal% = dealerTotal%) THEN„        difference% = 0„„'   ---- If the player has busted, or has a lower count than the dealer,„'        the player loses.„    ELSEIF (playerTotal% > 21) OR (playerTotal% < dealerTotal% AND dealerTotal% < 22) THEN„        difference% = -1 * betAmount%„    ELSE„„'   ---- If the player had 21 after the intial deal (of 2 cards)„'        then the player earns twice the bet.„        IF (playerTotal% = 21) AND (playerCards% = 2) THEN„            difference% = 2 * betAmount%„„'   ---- Otherwise, the player simply earns the bet itself.„        ELSE„            difference% = betAmount%„        END IF„    END IF„„'   ---- Add difference% (a negative or positive amount) to the player's„'        current worth, currentHoldings%.„    currentHoldings% = currentHoldings% + difference%„„'   ---- Announce the result of the round.„    LOCATE 25, 10„    IF (difference% = 0) THEN„        PRINT "A draw... ";„    ELSEIF (difference% < 0) THEN„        PRINT USING "You lose $$###."; -1 * difference%;„    ELSE„        PRINT USING "You win $$###."; difference%;„    END IF„„    CALL Pause„    CLS„END SUB„„Ron Williams                   SUPER STAR TREK                comp.lang.basic.misc           05-15-76 (00:00)       QB, QBasic, PDS        449  29555    STREK.BAS   'SUPER STAR TREK by RON WILLIAMS  05/15/76„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.1„SUB V1:OPEN "O",1,"STREK.ZIP",4^6:Z&=21839:?STRING$(50,177);„U"%up()%9%%%7-%4s.bDu<8X\Zy[%%5r%%%+%%%%xy%SgfxVkLTAud/+Y;Jyk40Qc„U":K2afs5OE:ZaE.uM$Da8vsRqw/d,Vv]z6lv.UBa0e_2abLsawD7:Lkr#:+YsKNH„U"3kQS2GMM;HvnwE8qDksL1,HQ3+.Nv[1EiNL14,fDJ#SINj-ELoN[8wX7[t^f'?U„U"+IVU1flpN-e2=q:#TjvNDVdnt.)NXACRgIo<kFRW.cI8pvnJ7xseZkW5BATh(SW„U"hPig,#74bpD#Tqm<aPh.1ZH[e-V5hc1.e%jA,&75F,I?Susp:GYcQ>]kTgQ?DdG„U"?x/IPtpF0v$0T/Ei$#$':i979d+ihHa\l>%2SSfjCi4j5uC[^(c8A%jNnY9<=2-„U"qFYmwHbDHtj$=42a\TVkm4lL0,8kyvVDjpWfq0R3uH3<D&?bWcu;*1.q\,Nvj*b„U"S]HhLSq;]Cz2eyll^)pVtJg.by+SEW$DP.$kLN335w)x&(W*T3P0wpu*hk<Z)S0„U"u0suEP==>wu5E[a\Y46CFnHx-FP9xaFUHc:qI-p$nilr8&jMtp4$gVzJKgtzy\w„U"ppIYygsLlW%iu96__hTb_qEE&oTpUJVB<fFdyJj4r?fh&174Up(-]l-NJN5.lI*„U"TV\Vs^FX-Ff2QydnHz0FG#.P^azL=qquL(oE^yTjkyf%^r$t=7\+$hVZ#7fV.z*„U"N21;mlpJH]cusXv7f9CzR9bz5>km3k.c#Ohx&OBDIDsS4u-r3CfwI+hc.?C3G2q„U"eg)55f#Kz8cr2XWhio16c^Dv<gAL4Wl<Azk=Nd#h:<-e>ocIzqnz5Ts4PgS%#a.„U"xuLOnnPBN.ykL7a:Ok(s)jnl$&8Qz1o6E0G:P<-x$DYqaWghbZ>T$wuOaR-m>l,„U"ai;R9Q>FaF01+0le3U/TVgW[+P=eaxuS[lYP.;^%-A3Q*kvx/:5K<+#6Ye+W9;3„U"9vA;,1VWq%N034//s=)FNN%C4G-9;zVe*Jc5n<E/\q'+R&^E+v(]T/>,7q7tT=5„U"vf+5*f#;#*cp%M>XGfYA.9h3e3fAbqa;tnP.a6DZIVaj*]/*vDLyI9)un5Lk<FJ„U"0%nmTafZRa5u=K%Hdj)-rdTngEyRAYdqlv:-OVZ:GRJs3-G\1,[:am6s5CzUXW&„U"w5iDD5XttoKrGj[bg4$NTU'a3;X;r0t'q.B&%iw?iG89:n$'LNkr:O^v:EcrAs+„U"QO[m'J^?LuE;Vn%IsPn.qFr(qigjf-'>%ZD<i<tPL3+72T2zj2)09#hLh<sN'c3„U"4a_?g4E^1RqY%US)zPQ0q$Z3cj,LlV(\w:xhfohVN0dopM<mw\1)iW'#\IX).jd„U"c<I6&[37=In4aV]$Y<vNYX'eASxq-h[+]IP0Z)cW9TF=TQ\4<Iq(0J[U)[Qvf)d„U"7o8l=l<0)W74_*#-TgG46;Z5\-iUTXW_s:3QhWIa')-97G%LuIzhh]oY#5I0iGU„U"<**QnpKUyf,$PEURau/;v:pJ&0lJ-RQkd[te7o]Rw:=vo']#x%D5JF6,d9m-U/U„U"soth(yo,Du6-][l1aSAl57;6a<9g]fBiSr[5M*C4m59gcto9%Gt._*npXi43dWt„U"IXMBs-#1TBYCA6S.(4mQ2+QWh$8VFp<)9d7Dm+,x,V_(;$$:-tMA+_0mMDh^mUy„U"i[31GbP3jUKf.?i+8'/p=*3USs;aGfv<>2A$X:9'SJ:8sNhhQC7*098^RXBhi;]„U"4JH;JaI2rL6^edU'o=\aQ:l:N<%r#OIZXV)aT-M)?[XEIYOHW1ktbF8Xy_v'#hg„U"GgnsH-k?-rQ\<(V-u&Q^>>5,rM<>Zb+riV3f7p(X;jGhV't<kdI-xd.O(WiU.)O„U"Bka8/Qbe&PHbKVia#sXLb\Tm5JR-+t)*Xnw1X6aNPasYLT<RMj=yuj(^Pka%pa&„U"SIAX[Yovvw4H44mD'R75b$izTI>suJOllG*oJ3c2LjwgyE#Zu:]fR,F)29jhUM#„U"4ZEjs4Fnfsn\4fN(UrV,_6c065;/a%JRH_*Jpp9mV3\%meu;G,#fNqgO']w8&*8„U"k59X++[UaCJEAXXF?wK(JeZDbU+$0KhzBS;J+xwhhyXuLoGob;I_W029Rei(7Mz„U"VqiF>h1nUAniY<.l1ANTOl*VWY^NjW1OIl%J<?luMGNdo#MwiyN#N0Mf3gwl.Id„U"DGoGPeu&nvw9/.;hF89rV(?C9XqD.?CaF\ALhUh'UW-m&vo-#*v^rZF*?JVWp.:„U"f((+FiYQ7$/0=A]^c3eA+<t5$]79EIIQm3*BsHSXjzAO_Z]]&yT'A',a(hCEc#q„U"7]pAT;FEhqop7i,[zO8T_PV4FiltsB6?BdPACY4:6dUnYI8^E-9BAbTFL*g2e3(„U"T8LF(l167$X<YW=)qCF&fMD+.G4h)RPRO%.'$Tu0CB]<jZ%r9CoV6%a.2c-L0a+„U"P:2tIuUU<BCKo*Ud[5b(]-8>NZO4ieeWXq$PE#(Ee,9>v:)1REACfR#X-;kj>Cy„U"LMM[gN'[/*SU/[UwUAbuu>?oZ>Aq7s)Le,hPd&C,%l'2yh8M8TL*[B^M^BFLED*„U"9=0a'CY;Ib>=WxN%[&3f1NfbVF(:/v%BmusKsbCucOk4j2C<yfN5gNo_TGN>fLD„U"qPcXE0K92av&rN/b91unqjl6UYP4)7:?dqjRr<o<j?c(EPU.SL-ehKsmc/y^i+<„U"kPiJU4yev:z'UTp$&BV1n-2hcWS5s&ie^4e:IM;1Gt0zL]9GrU-7Bi=dX2mKS/N„U"YO*A]:qp/]s79;Cg:sf&#Cr+5p[/i8ZPYv]fV-R^Fl*IGfYT^fyl:IOAQ#VHMkM„U"WFN=ufl?pkJ6?CcP)F3CGAe_1R2ja6RBJ4E2#EJ-XJTe&C0-H%;IOG:$,-(3.XM„U"%n(vgVnP36OvY<K?J9pjF'4wHBVh_8O-*dgrsZnFGnXjWR%?m.o(>-:k.7jPqGn„U";3De7AzMW=)Ylsl=4NlPFzV?;D_0v3f<F$?6AJjMq*2oGV,fFH3wCuNH)D>'=II„U"p+.8sL=:?f9V]U:*vq+hS2(C[r5nR=MtJB5qQo7k^35s\jSlw]DPfLFOcH^Nt]B„U"<p:,[M%Ed:j-tJ5w$17kE7(fCOiZq=wN%8D9-Tt?C=Y*ql<e.L]MgiN]3-pwECZ„U"C^qL0RGE8+0OZ*54vnVJcD'51>#IYGDoQ+3(Z0$-qD3'+^3TqU_[37\b<x#9l?3„U"#Ia<4M[3OW52(erKRB>Ghy=nw15VMv9;Jsn#-\wSCgL^y6PDYeo;,ET6FJAwd,k„U"L>/gH>Wl$1HOURw/C<<e4E5ju.U/FVn#7Tou.ha[48VpHMP[$$w3JkLPGprHX7V„U"S=#hCTje9$QFVHRi/auYd,jKg+8]bsahpfXr%>>bL.df]k#2wN'zY2926[(6-#V„U"hrRd5o[8\((>xb=cO,ZDw0CCI(ikm,o-g8/sX&IpOi3Vuw%\)3($*V6X<<#o/['„U"j7R0bKifoA$9'ai&ge;Z=q_X.?>j/sc69_FZ2f=345TZVk1C9fug,?gP1sB#X0d„U"C8B;Y%gjO(4]tXj8m7q'5tC6',8aiy7w?AY.?.%sbc4'O,FMn),P4)NGeemc)rx„U"y&Be':wLn&0=Zk3eUnN.ht%8%sskZb(uPapqV&eT<x)v9iSlW'HJK^2\Ws/UBw3„U"->jF3(iy^m?M-[jYfJ7T:KmSPek+Eu#+RXg)D:V2i]DzR&?8pLa.Ums;QD.Gz2>„U"FFr?&&Xf[(pdcdcn=r-Pf0-,cK:Q$M_h++d(<HO;vo?t&OuAgMQG24o4Tqw3\bp„U"]]+r7\=$0ZoUC]u]kU[d=HeMpx9yMWhD4],FAS:7cq).nG7y4AE9tEbWZ<A]9Ca„U"-R_uE=\3.+nQGCg)jSI_Cuf*%'S2'aTA29)$a/.h'97*GGhUiok=u=7#Mt?%#/q„U"n?'E9Va[6(ZQ\MgZea16rYe<9_gi1Oj<RKgFlMx]FX(N%5qBqIx9Ke7+Wbp=OVR„U"yiHu&&D7JP[h1Q:-3-439>-d&jduIEhV%3[TA'lW[F*/b/t,G=(IEG*;?cEHLoG„U"NR]gvF9<&K<%3,?t&?qc9\cL4#%)iT\gKp*S20s#1h''In&^\:j]qo+\U'XMKqP„U"OQ]#;mi6t($XM3#fe2E<gjBF[%G^L2Vez'*w[1ZggGK7YmlthhNprg<hNSruZF8„U"H=upn%uV_bsqOdn?Xv<O)95SmbpIV:+/qCU/lU/HHKd)_tcXv*5(m9v-&=Po?=%„U"\/\R)Z$AwdlZ2Uxobdj\w2&p-QPGwG3L5%/$#t9R'Z^uazE/b9P^$uPOYgN[3:_„U"_X77&)LiXjlAfUmHhqcp75'B90*Qlrspt/n/UlXCD1wO*&V8y<7]Q7?suuq&SkX„U"gWV0Y72,2D)P]r?K;TV=VfJu)Jc2S_7(B$SaTNHMr[(?K-uc>wS_D4XMm\]#E;j„U"r;\=0lnr?kFgrAhTp'LJ35ofn?\di.<JMIS,A5H%lq-h^;QKjRe6LcEO\F#E_Zm„U"e^t;I9BewX,^qcA<XR5z?hT,zLIhMMi-,,99R\3r^-*XvO?lNb%m>q\CNcJPoax„U"KEiMYD<NW9L8dd)'DdjS]r7>-nZ,0)a1T-Z2Pd?Qa:2;FUusM$?5*Z$VT*;4Cn^„U"P/zi%Uo\X.ZAG*Z-V)1Gz7%lC5_/SgG4=Zp'\i%a(cI[sBHX5.P6:SJktO/Av%f„U"-1&OjAj(=tG_>4lqmfBZn:alnakQ;;Wllw0H/dgzhZYnUhT:GUFI%gBTmThToFx„U"R14m,Ba=u2cJ8r^apvalT:A,:=LuqvqAF*3YApdX5j7dAuq2)-?VCol_x5J<mWX„U"1uV2?'.lz)B#\?Whi9wk63szi&zoE/arS$I_Woj>:uwqCLxrC0?w24qPW17CF1Q„U"tp88I)/fE;)I0Y'*N)GQ:)I2Iu=n\JC5DVa/pOfaUrPJJvo8g>(r,?1Hr)?PgJ/„U"\)G_06rdd<>Uhut'Xu*LE?:b'U&i-2<&?(bZY=h'iBgge&HUeFn&=rN+sar]?)%„U":2UW2'A:(tD-M0ye1<W6zc-=[YQ&b#V^m0,:WB=RhkEe[eDk'G(WMcKbCZD5qC*„U"6a3rd9P^0Vr'8/xMyclXN4j_SeC8q$#\&3FNF:clvu6Df:_cpZk.5ICT,JZek,7„U"J?DqPe,,I/+\9xPqo:jGOXjz#tBeU_0Iw0Tp7:^PE:G2K6Hdy5$U5Tk-'UGb$WX„U"PA8h,=0lm$PdCOK'k#1a]E*eP#.H1o-_Nh#/s<VYIt;G%7*D-r.-5r6,lm&>EZ:„U"T)DZMhqcjUXo^NI<z6)FgX\\3C(NTB4P?w^.I(P)E12l8-C'i#Cf:a%);^?p)/R„U"^EZA.;_9$l'CMAHgJ4mRaT%;sB\+F661vBT6FNEfIqLRNrAu5QsQkU9T=YQ$t?5„U"ml5NVFe'A[S:Z%8mNi9Qnu93bkoiWe2k31^<LaJ:SNE?qKx-8.+n9l\D0t*]$HZ„U"+1?KG]kYgUe3on\Ge:1HnwA*m'rB%v.4n]rXCk.H&GC#--x,+G.lbLs%#e5ROcF„U":kPa>q^-#0p$25*#([-j5BCBSGaY13&OId;j7,O=tt:^El9M2)89gdp9vM*V]*M„U"nudj-r56wVksH#,Hv*Q::3f#ZcA<\S[IIka4FGXinuXXB>LOb4r^[ONxG+(D=C7„U"sR%m0gBHv#VhOOaIgF[EPT%Z5VNs(_t7_0x0VJ)9h:HhlH/7&o7Yf2ocFGA_yPm„U"-^TFgfHI>Z_9$YV5Rf/qbOe2odbN#%9:dnEPpGN\XF+-aqfd75cMjU9,n-$[:Z^„U"F.'Rg[?)b]B9=1,;T3'5#+6s1CF0+e&bB3,facpt0rX;/Kp,.9c3&SqN3YiN8M4„U"\>J]Ob9e/N?Adf'S'F3Qz_2,ZKMnJIjS5RT^+0$;6^TSLOArMR)DiC,cY?j&qS7„U"-)gfc%8(Z3eI(GW'?CTbr4F-_icptYPOw7<G(fM)a/ym/OF%o&2[>WT1$\_<:I9„U"pWuFl9d$xBaOMsI;H38#jTAR,L&AdS-I6tJ;mbZA84jI#z*6j/bm^nE3iD?,WMO„U"ay#I,p^6(.Iv)_.k-S9Sql5O>ReUt1*B=B8r>#\5)A4*H=\]D6u*etFZc2:teYW„U"R2/j$G91prTK=bJOgh\8>N&p),l#uEPl/dkV$C%umz7hWp,KNKqE74,q8yc>N2(„U"LMoWe9va%$Ylp1t7O0j.zo/Fd7/%&ZQ=PlAuM02^=i4A&QU.mqr,NLFyy(anEV=„U"C$j_>)Rla&+L#'VE&<uXBC&Lr8>T'/w?+Xi$:^7DC$My82*5)pP98\dV0Ta)ne<„U"LBmZFx8?uXegI?eK;'a\.q?SIpfoi:\EEM?*YDD:Y_=lgpF9om_,Z<74[IcYo\Y„U"09l&n]Ed1=:n_*9R[rnBrlRkx^%QPY_bm3*kl+Gcv3d/2;q$P3Q*#h_C5C3kJW%„U"S3KgK%,,0xVOV[q,QLDU:cZ3b1SkOC2R/H'BULj5r<gmE4E*q9^?J'\ulllMIeB„U"RkSG'g?ha+LMOZ$iDI9^gprJV)6D$e\UspgT0jj'&_pR).Z-190k[,;c=N]cFFF„U"[6==$/G<cuI%URBdi,6JL1&,fXB?u*7ubA0<rEWW#/wW1Jhh;2vW5K9Pa#LTF**„U"l/2j7W_>]fY4jxbx0Ab/L;SRq.M4+$K2cG\Bs2q:.k^k)-R]SBRiYW&2%R]5uJ$„U"CZ1:SY2-q::)RjARE\=eL*-?:e3abq(9/nG/bO;W:HYCXLs5?Hbe^Eon&81aAsI„U"5gqTK]5hDr'II]ZI.#WEH*hDu3a\u$-9'Lf\?<T:2u:FGqeRq0Cp;^&dlDxJ-7=„U"O[Y?QFZNPK.i1W3+^5SZc#nCApm3AO/k.W9]gKLp(nWtBWWiw).:Be-uoe0U4^u„U"n6ei1;(fhh(;M<o3VT,_z3pW7Qz3:j(WM,r&wZN&z)etL0lG*'j1FW?UQg_2WLM„U"&G*Oo_Mf&-R,fvr5?.x;[50()yhxje'/sEi9P5_d5:UDc$Zu'$$[.uO&Mxv)I,E„U"nYmf)cl+'(CdoSR=XS4xnFvbQS.M_mfb28]d&2UnHNX/p_fbuU.LJ&5,u/1*[y6„U"bV3_7:1W>smo?)ojk;FHdz:]$D1Cw&WZa=*GoX_s]TW]x'b*En%k2z?K)BI+Piw„U"C+%1:UDa5?evuc>ZScY&\(M&E]MRh_,#%WW$><^JR1#b;m#-_4og=qu4=sIseFt„U"k:9F;]VtE3:T:YrG31g.X=Ae&%XW)VRAHPgGR#t5[Jg(%,OYA$)8L<BlLG5E4mW„U"*915>%,au2d<GGQ_4bW/W(a+W==+-:MeCMkRe/WNBD5;1Os^Le;m%<Dbi7+)m=N„U"O$hr4e[$[4hNNdE)Nwj5.CY*ao-L#3w8=N$S7n/_]oBG)<vTivfXVU3Srb<6RUk„U"6GI?NeMUGo\tLF:,WXj6Sq(^;W30l4rC<7S$XK>si[47=$=&dq&BR_QEP-R*]Bg„U"wFWQRqHeV\hT65A?Pr9_W.in)WX;7jNpH[(Dq36c,s%#%^D0Y?&BrX;Hp(LK+L+„U"8W$+4\AYQ;(6okq&/2C+UkH0FHu00%#>_zi:*AU3/ELMmp(jBGFx#NE+?r0[/+g„U"<Ew_sAOgn=t3$Ab&,[83_.=$$K*GDC;C&VyOnN[C5B4Wd2W*3r<kkD_?.ax.R\c„U"Qyah1jTA\if2\PCFl18v\l_m7\QPjE1%)d9e?vf0e4Bh-#$;7G)#ZGAl3.]Psq>„U"no-2>Fp7:=D3aIo>87Z1)4Fp)q\9o=lV$&YKQzRUeZZ,Lcu:eVJyfbQB;,j4/W7„U"Jx.IK&]Ek(KIsE]Ie=urLL?g:53kLvu1t+dS3t-2DGiUK5(dMevnbge8=ajl7X^„U"$(R3Nkk&G)<74'R'a>t<ey/U;L;o5<i*9:7c(.k=<lw/lB#L[N-dTYe-je2G(xQ„U"A9/*xz>zRAgXn)Gi6*))(D_4kJ]Z:zUp#u9'gf=85Ov?7;BHe>1B\I%7$c5'lch„U"XK7iL]c1IX;dM>K*AMi%6+skoDgUt*/LPiY9_Rk\0Tha-SnuP]ZLlZ;hak<MTqB„U"^4QS;ihG^a%YGxu&OsMbaF9fViJFCG4aJFu=7;^,,:FGLZLfEiA]ZUY^qK<)Ta<„U"(sb;uSAs/:O^gR*S0^sAUA^HVaJhW\w'Bqo-75bATiJ55r31Ps'F]lPM%\_sO='„U"'gk:Z+*;]1O3b/QBQ./_,/9o6SQTyOJlzs^Y7]gN47:R65ZXk%c8b-(3Cp2%lc?„U"c<Yr,J>o6Y>rk8,jF%_BXcw=GbI=l*h]T?6&NNG5EDPDWhCi'iOq8vUIARh)=F[„U"aV^?gdKFeub6>Q9Bsu$1uH04XIdd6mu+W(UO>5?v>+,q\m>9H(x3)^+1<jS;S01„U"MvHio:J%dR4598L45=xK)O1%2Ulq7oL#CKeRU'v1m3&O2hL4m#2wt($V6VEZLBz„U"V\l17+4CAS+FJHf4b2lK[YTRjE__#Hj*^Ah$VV+IKwpzwb3B+C,%O2oNn4\[t*)„U"&RPM021Qv7xJS+)'4Xy?.)coLw01VUfSr\*c7c*>MEt;<#-X7MzYCfnPnXsF<1<„U"KDcKe/P.6BR(2V+t]sMYPtUN1,pIY,bTSmgEn^x2YJ:b.(5N8n=\:_?4h]Z,-[7„U"$#+67Ua%/30l&O-VCut'+r'']rmW1.?av\hk*SrKpjI%'jT^PFqL5;4=(AR6d=i„U"GLdLT/WGk(Kx9(e:bOoCiO7TCtC]oOJnd#Br:OfIUVKU+LVY;IG=rbT&3M$ji18„U":Kl]YmNmSI]-a7nI3aHLM?ic'*_\z8#jL(&=Wmr%fu>7ppl:A+P2<O,5gn4-dP1„U"mv1c#8$Kr[tN09S#UlhEr9^&;1&Oz*r-s\TfpWRS1Ul+]S2EU:Xkw4U\dL186V+„U"IQd%]Z4u3J?[V9\9%)?^L;z;me3xQr%;0V3Q[,<;hf,2s=9P7E=A_TXI5kAK&:d„U"2a<P1iLJA,dFf^p=B/GTLWBlp:.G;*Aw[];:<L+2*0v>$>vtD?PJB\VH]\ouHFf„U"LKJm\o4N:VScmd'm%*;NCxZSS/2JC'.e,-PKISHutC%RE\kp$&a\5K\<FU;0\xi„U"gA^BY',R:jEIECB0/7MSK30MA<(Mf#Akd4'Tb)43mD1VLs?7dWuuC&L5s[/ZFK)„U"[7Rw&Zqj)Ah5IT$g$TA&HrCfq6+C-SCdSU:%kQ2]GxTrQ4#1#u^QB'bipAV;a?^„U"bsv^=d]Vq.?k-eV+-YDW35^:.a>rLTv9S5;E/3:wAHrosA8[I>jX)a>8%eHTcQ,„U"PCaJOzsKE3Ris>?3pEiRU?=4\i<DbPWiSPJf'RgtK_e\-:QJ0Qgo'iIKOGFM>0q„U"'njGl1Fce\BM>_'(<7$]7NY:WLo/?uus%N=,Z>17.\#o/?Ep<o>[LK[kta*i+$%„U"nc-1\(YmP.W[HJBQAjbAw.uJ^_Kc.$;eFwI%qAU)=u0RS>sdA02Y-.<JL/Fj[4N„U"-mEC.<J>$?*(lCkR\pspmY3(9G:)W-4arO=L'+Dlc>d2R'^ibP&XsAcc&k-8WZ#„U"SaD'Z'<>mPE&<B$:uR\::1KMRF/=0?MPQ9X9Z1o8<Dwxq^jXa8,[fx)Npf+dCtp„U"cQck>ce]6aPMYbm(MedtG-GifruAGBcg]1f[x)HOX#+)oeRoHK?8Sc8(nhq[j84„U"[[E\'V_eZtns+<QY\f1.sB(Q0cFT:[>YY5BB4?Kb1K;_^reBa4/4Af3Em4\9[6b„U"Y4:w+'(?0e_.7gu4O3(T8;Nl-XL)&lPuB+.#nm/.>IE3]REZ^7fYm:HCQ-)oQe]„U"6un0fJY\Y>7Z/i4ASzFrbG&cQZ?-)'Fu[Sc'&Ml3ZTvI0KGf8]f?qFEOn9LTPe7„U"VA;8h(LaL,Z[BVj6Tb\[_G&n:;6]i1_2RMIUYgm+J:TJ[1$wk7.$BS9Ao5Ks/A<„U"ivPqjZAtuDDf,<;8_/WCjQ3cS+d*o2MC'*%zbO95Ub=Kf'8lB^FWlI+atkF*eEA„U"S;#c&Z_LO(Tx6a(t\?rkolJ8oa(&[4#h8jDa.^S#E-5jH4MlP'?^8i]2F:Ga'MU„U"TB9ML;N_#\t1#?zvV0el[L;.,:Ak]Luq&/JJQCaNV5%4-e>fCk4:8pc+1;/VvpG„U":RcwUk>[A<VnwZ2]TtW3MB,U7-&xYm3z,(X?QZe/_n[=,/1#33C34x0vQi;(2Yb„U"Kl:lk%'UfjaaH81Pn]?j=_WMH=?xt8'-4P4ze,xrS,\Wp3h8lk1.oF]J/^a>qm?„U"BkJA#R7qFvg*Ra#i8a=MefHPGQg>3&pu80t<CEp7q(9sBDKGsmmA<[BNb0:/JB5„U"SCS4LLzfL.9XE<.<nDGZ7yAH,YB5Je*n0bKLFQ&FfZ\FJj89&la+G$LsJ)>gHdo„U"oJ&-Js0[%F-PBV_,AQGN-+ik=wopZT-Vr&rM'_3/P$AKM$Am-Ta&%#0\L%D^MJ%„U"e>pBZgC.&7rqOddROv8]?,d#VUdZMDWv(Z8?bR*ewG(#<h/DN]eF\&GR$t(I[J&„U"[Vh.\b?3l3U;T)L$gR]p.TkzZ%9ee[EhBn14u<heVZ&A4jZc>])eD)NRJ,o4XPB„U"=a%X*^X3[2mi&D]jC^u4'e(cnYs/jAfzvcC5>3dWD=[er?-u8\i615lcwaS.e;?„U"Zt5(]gr(;aKo,X/eI#dB4-l]lIOy]5RTsR$#p(]Yp8Vu6Zf?Bn-Cq8&IFAtYthm„U"^(dg_l<;$#6yT#<M0Ev2pB=9SX\emE2pr%2:-%$hb6<,KoCJ]183#5ejJ%g_Ue'„U"S/]]IZ+/4nt#;gMTuWB9W203]ru3B<M)Yacf2QkhjHFTtp;Zo8jF,)D^Ag_\G-U„U"n=7WWN^isa0EV<(Jl(#bq=w_ezI/N<iJevsM\-P=;Jy^XKR,V3f<c'/r0xTF:-T„U"s#Kit97]<apowBO<O#0gT?:Pj__$Ha_Gt+<6u[o)]>wnta.htoQqHAKb%VBo.vm„U"qUEUP:Wo]RQWFEiaCNj_n=[t5O&/VhttGN)Nj^Gj_0v0v[q.7v<YsmGT'Dd7YyX„U"G7K8_A'XsWU/f+S<LD2+8oa=lzI_\U>%6bfS3sB9>n4,V-N::\hm.IJ,tFV&4<O„U".AdRmJ.#3f+xl=\3c8T4$a(cD<[%g7ff\wiH;y4V_ZAu4oRKWl$9,1N]$Cb];yd„U"Q0gL8.J:Qc-\=0qnbR_uL6UBihdr$v^hE9y<rGOW(h^&q0&IdOD:T-K8Zh8ID4r„U"frY%<jT]g>ZcWMCGV=0ZDXb7\A>9Gn5%r]ZKp>u8JTs$X18[JN-s6OHFtCYoVVv„U"&4d-KkSmvniVl(R/sKabXXc4jG#Q^_nCCgw6i)mmm=#:xdX/%P<JPi8u3EL%/7t„U"JwL\++_$&^X%S;q,cF8H8Nh<*f:QJl6ZjO9,E(>EgT6\Fi7^N#)t8q?\U%Od3h%„U"gwG'$M7GTLJNR[>dY(Hu+P#Al-N9TP'Tv\3\#Y[ko+0,Qno=+_G2OSpE9]f<vD8„U"TfD'PIg*o1dZxdO>&<G'FnYYi+Uv=xmg#Lc[Jk<twJUNB#JhR-yApaxPGseV9LP„U"9\]qn*JQ71wOxWd3$z\uyz=hY./t_I[.Ks.YdI8uTAUDy=1v<TA+KW%7lC(JZ+x„U".pF^20BFcp-Y/&SPz4M#O.B'B^&fQErBAZ&#%n'w=5d=&UFo5+_:[j2God$q+F=„U"nERcx+6IY5JbJafRj:J&(<.-[X[HO5'BFnV#>Q-h4FF8v>[_1kzDar6GW&wk26b„U"3ZwlgQ+cf:/G^>XiT0>PZHC4]afgQn*1Xu(xeRn\mv)tt^b.?X%VHccR]R>^<$Z„U"IXY7tc4ya[K%Vbk3cd]XV\YAKrI+sn94o54%,kQsV;^j]US_/VW7JKAE9?V\#(a„U"_;QTnN4*nCxgn=L%6NC%?T&Nxv';aU=Qk>G=,p-m_z?]HAq6(VI)r]UJLOuXp+h„U"'D?'J]%t3NNO^V+RrwlOFix/p[(Z)AUe?Bp:'BH,_j,%WAvNAf6tS<A*m^+6PQL„U"70/%43zULKkk)j4]oeGSL%c=]5(1[J.]GICKbmz6KU,SE5Mdbzqf&*7yUcF<I;>„U"T\,e>K.*bNYBv%+=UHhG%t<9Mk6^+*F;g,PgV[qbKi2&K+0+<.oPredK)Kb+NWh„U"t#T3,#AJ]yJXhP6Tm52UL#qTtW+El94V>&1YR>ggQ5s?;Xn_htSaH2->5'UL3hM„U"MP+Z=B9]0^t>MHJNy1o7.'Z?+fYz..TGm)>&CE9<b=PGP7'C:-jBFL5IxCdaI3N„U"O<#EQF*gWn]N>Gnp4e9I*\7[ha2_YL==&1.KmYW=lOs,Gd>>AK+BAk/OC/E#s*M„U"$q(dkQy(i+Eva]ruiH=ZuJ7OwUp_o,fXDXW\8FTeT//Ob>H\SrUIA.$k$<34uvS„U"Y'WjTOm&]X/pX+25A5k[8,-1%P^4-d\?9ms<OAmY?LZAe%4A0JI:dnOrgQX$t'y„U";htB.:#_+l.MX6pvcVtW6A$,D\Pk<5[Megsr]:h-%>QxniS4H#Y1k-qK05Iq8FK„U"kw7iJ^79by=e:u#;vORh2vv1e*[VbI.f0GagJ>^AJyT(u*qVS7XGOC,>**rodU&„U"2OPmuBafM))qZX_UPbaGNoQh4di,M=V+7JG,OFhe*$>b.uxhN[o57AIPX5cb97u„U"bt9XnPB:#koj^kKr,oI4+Fb+o0APQb4k7fuE]H<X6b8C.wGn1cJA2Ki>)h1BMYr„U"EJR0pIuj9h&6KKa44_':Ix6:i[<GLW(^5Rim5_;2;Ln&#&)a':EsG)Tt5$BB=iD„U"-m(H##nKH]/oDdIkV?Dd#2Dn*-ihdg)L&TnT\SFQI_4C(j3V(iG7%I$'V8IV&oF„U"GPDmR.;t*/VL)L&6TcGTSGq7Wsg0%JV-L#$[#^&OV&k5[8WuX.BaZ_gn+F]8,6T„END SUB„SUB V2„U"MkbrdTt$*&<k..d*<_75?]6KIPP*jE8Vk%g?SQ\*<NR)/(u^3[:LV=1=4AHl:-c„U"s(rky9-s4lduM%K1g,G5:\iua;>Xp_xAm.[3<B%Aa=bkrZl.SA)oFrR^6QPCf[n„U"Y:.l7.\;GsW&SEUE'+PZr:o>R-%M')O*W[mR(+jtNCjO]qNLP.kr%l%(o>9n=Ca„U"fOPIc>MgnA4O??p8>n?'n5QC5u2?];k[UjHY1P*oS%rB^SDOe,2'Fcl:j4?gVYs„U"LhgU_YgrDnaTs#\Ge9h#WG+:3g:]>pkq&n0Hva\wRVbr?oI2ab#0YF53,IB(mT3„U"uX8r9Y.rA^aaXEiB+YbbeXwOJ+Y(*oDj4FK-d83(hq.8SCKK[7Pfk<_uTxwa/$J„U"/V>lFL8i&O8b3w8+/j6FmC_5uEO4kf9oXM44$*et^=V7YiH,ITh<X(7ahs/k7;c„U"g7'4FOTor)Vx0Pcq-lgO27?u(FO2l;jSFU+nRP*GZ?*H^llC]a6)]-OLDkw:M0n„U"-cfOZ)XaW+=j^[YY-V3+SS7&544?VXil\S[]%dmiUpfF4;-Ro:'oH\#1HI1:L>f„U"NV9T?Yj)IdmZ=2Y2#-#^s*'NFia#l4nF<LG<Z7O.ccA5mTSs\Z(i-em7Ok19DiT„U"<\.u=2PnQD>/NPW4MmQ==Q+e*;X,Y#]^=$8+ug*r1/w.Kr%G;l5nV+8r)m*^j^)„U"jpKSBJ?QUPIK7g+w^A()WrONAgeBnLpY0.ro3%E=nY&xlObIq2S3i&>Fnq'Ax=$„U"d?_OAs*&Y^%;v?[=;[&mo\bTK5OtpVUzx<N%Ij%aJWeVAE:Hy(=9?BEbeLX'T[V„U"p*f*=YmN]6MCMMMc1]fL4UFBGY^V#oT_/EW$d<nG]DG2AlmIl%8Y,CGuaf<pl<7„U":tCVbifV&9TQ?N^,fz8B^Ibg3=z4SjMCuP1P+OX2$r]hNRn#u<UUge%xlH;_VG5„U"Y)Xw4mPk\Zc[2+m$tE=)XNIp'R)HCKn?y?[4T4-<*1wWsH^,:NQRU9ZkjxQcjJl„U"*r'LD+8>BV8McCDZ[*uwa+q\]0)QZwqloa=oqagR<U5*3R1VMIi#\NhIVNT&,HW„U"tj'3l*^i'D453]DZ]TWIIo_m+qLqoEEOX*LQGyR2\\\>8kwKJceqG25s=S^I8nC„U"qV3nQp]uX%5=.7'k=5KfFR^D=_a9,xwpD5M4ZiJH1P7)]^cux5VljxR7l$x/WPm„U"kN39v+u5d7%7?%8']u($XTZ,UbaNf/3v7lnWwQfEJ:1=#fTX.:n$8,^RVx,YhQ-„U"9QhEt9+Lv$&'%0wi8neqcGB]t&dMK&U*aka]AVVBC.nYx+$ZYKlt:8b2MqP#D[,„U"?Zlj%:_1Vv_K>1B2Mno3BvtFZRa,gwzEST2390i?gGjGS4Ff1';DGZ>&c5gw>n'„U"9[Gj1?t\4d7^zeIrgq'oPUw9=1nZtg-=+Wi<:JJIiJGnP]]OlPs*5apct/Z+)[P„U"M'QnSMHc9bKaPWuS4&2ZEO6,A5#;h&KMH*]%^?i^3<#(9\g0G09'065V>-u1zaK„U"l'7'VmEPFpXaod\+IlJOYUsg#qJ1EH=L:m0jIQfve\+(0DEbRvL7Z0D;dh:b3MH„U"_/)=.+\eZ+4^1*C^Jm&IE=5S=<5c>7:wg%%XQOuPHICOh=k=$^*[_5P6vpWh]FD„U"-f9oy67*$x^X%Kn-e'b3([:y)M<1Ti9IRW/U?$ewexjXNicHcYDU$<M5-iw6y\X„U"%2FiFmZRZS%h7K+rse_P4El2J6\vQ*x/oxS9VvVUc3oR5oxRc\3&WGkD7D1PgG[„U"e&=rp<?R%D\[0>zZR6t.=UJI_d&'O^;X.O6\W<U>N'#8eA[j[1<1fhBUqO;DU3i„U"VF*$gu\YEWlcgd1-ac2?em81>:jvh?Mg%_yG,T=4vi%BxI-lkeF7r8HyJuL4-<b„U"DY-aY(8X_#=.8nt+[x=hQjPyXS$HPmOU\x$MdLNm]6LQs2$^Qxur?],j;,&:?Uv„U"YCe]hOd?IHX*?^S?AKO=f+/\VVyiiIVCtljZ\h[048'HTa,AEQl^\?t9&/GU.fB„U"S70Y(hRDxudVh=UQ8ftDP*vg)g8^SmPqE-+AP;K)5q1tKm1Xh\7jfQ55EtVLh\x„U"x*/k+2+f#yIJFC8bBIe>VW:+AXpVh9PYh//-<7Dt2S40%z%Cty]M5)rHTjx&#/X„U"?vOgG3p/1xT^6W_*\X3?K9a-#w'+?*Hk3*[RXCha[IetuuQ0drfTK2yI^Bo4xT-„U"gztkQR2=e%<ODtf2?9uf8OMM.M?Vh[B]I(dJC.jOU5cPx=uK(M3AH?L<HFYrjZ_„U";3NsbSTXiHN^_UdNwVUW=;CrW,EIT^r+qf3ZB9viku-)l0E-0T/sgg%(\?MeqXs„U"lMJX9V1/xag0i[Dn-M)1oy/qTq))&_)#M-'GMiNa;,fn8m;m9gRA5OVR.%xbG9_„U"gZpPYFWP6s2*C7Jx)zsl-<M+[;rFve8Yn+xPfQd=W/k\BsL8ap&[';_Z;)q:c+y„U"SDgs;Yu-^Vu5pgh94+>K+0w:PLfJjZY>&>K3,wC7ew6_wA,%J:HkEtKx=BEY+[k„U"ohGk=2B-Z7KdkB-ta++hQc>^j1g)WEVx[,[%JnepoWsUGV&#LsuRi$b6-BS5$UT„U"mhPm)KMb>,YFs3xM_D5AhKB>w^,t5wSsJIN$1.Qz9_bqHtwhK*>7OfrfvCFkipb„U"JmjxIHo7=?Z-nNe8b>n]M0BrNSbvN5840b0,:eho2\6:bPoBt6IkOnYM:Nj3Kc%„U"5<#%nsR^fSxDcQU+=L,RI9u4R6hk<N#G]?;0[jDH]'MzzbfJrVk+>5NUCV*D[4Y„U";:qC/($9-4gFp]#6b7>]kTgmrz8n?KSP.kcv.x^ARxL)Wu,W>GMOOCD0.;Vw_AI„U"PNS)n-P*GV=PANfb/MfLF8AaOE(1li6rt,a>hx8(u)PtE#$5N]LO2fEu$s3*KWh„U"(O#;kq(W$4Rin/H&K7Q2aMG8*^5.9ov^^jP)kFX?9GA./G*;W:wfQ:Faou.Q*T/„U"kZ32<B7I/cQU>)7zX9oJ0E-qo>S\Ahi+>fW,q]o1)tll)S8'So<V&A=\$Va#pn8„U"1*6Wx0IcHolN0[K9OXiONX*f-8lj5q^Wk5suH/[ZE<>go0\A7N%e2J5fPXEI1:u„U"Da^<8]:Z5Q?^fP,GY&06W\tE(4Hci7V9h)oa^S8/kH3Rq+-QNaQ8fKQ4N\/t)0X„U"6469s-fo?tGA4r%FB]xQ]RC7+Fc5iZOFZ(LHNg>6j:jK.0)5*;ZqDd>Pfhz,u7(„U",^I$_[3:/>t>4#G6h0,#V+.>&5mEu)%v,Toc+#Uu:<9Lj5TpL91I%;]FE[H#^_8„U"-Iqn2iWFd%r)'8ppLXsTrGg4'LBkXEiGr>=>RaGh6V_f_z.2\aI,UMQPlp3c#nC„U"ll169c;<nYxCaEZr?o#Y+/=DRxYFP<p']mu/s&VW^eAXd2Fjf$g+nHH\FHbH2Kn„U"1sF3llaIOJ'cg827vx?iVS%/=b[j%a>[sIF0n$3^%-qH-X2jXTgM_YD561(M^r$„U"f0&F,86vaVK32[SnWU20g+6sOBBe(S?OY]Pn:U_8RiOt__VSoR)mV+7C9cRR52O„U"Z+.79hR5Z\;_>EjIqd8d0Xl:RuR)^;lX2gm=1f5F3eT^1bnEXX:[Nbnx/\+QI)D„U"4oeq(:^t7jjpF7>E8<KLq(SsK$V(v.H+CmY\?_O>HdB5%YV[01T1>-r)mkpkXhu„U"w'^kFtaRMxQh;oZ?#$A?JO]YRFR9Ylr(%LTW).>)(H^o-v)x/O?%pj8x7Ram#]6„U"W*\$>P,6EJG,rBh)DpQf^LIqn9mmdg*wUP\cl>+yhYwb$5$'_w+$t*QCBNEdx4v„U"7fClV9Yan>PbhxNq^0=vQ)fGe4tg<$lsu4%SzgJ34mUw88:%2>DTfFuOb9/]eSE„U"sR;0vx,'?4qiDYM__f,0LJ(U#K#cWV+#o&.CSXt-c3gA^Kl_0=;_f?UY-&Q5fiA„U"Et9%J?Dr'a'sBuEv$b4i:agu;$KOB_xT84Xgo;JJ_+-5lZ6dv<IEq(jJAt:cPjw„U"$JoLlS_(2c8tXh)>^.]Nw8>smyOIJOq.kD2:Z)_]p'_q*=V)xus(f[4aW>N<.:\„U"OY)riOg'ngJ9kA5<'t+'mViG+e'Yt&d9.tpbnu[,N13o_YjE5kZrF>t<;FYZrV7„U"u/$,;]w?(S3c#:(6^u*#k^A\&-PGt4YL?hk*,y?8csu\h\$tyR[0g9o>9R-S>L;„U"\0mIwBZg>b(p=WSii]*(>]XxB42:.]wAqk_8$[z2c-LdOhy+V(2l);$PK\7coQ[„U"950_ZuXBZoD2\LFD[gPny<b>D-w%\S/Oiq4;_\0-L3=,FDeF'M\$HRk^;q;8+]p„U"bs,jAlDUfyu[C^B<;ZSWlcI=4q'lQkHRUkjrEl$/sW#-#/(OAfcZ$.F[pS-klg*„U"UjPY=7X.i4KNlZ[\*(gv1BT02hO/mUP';\sWJtiiqrj^.(5x.[&'B:9QFxqSQ7i„U"/TxmR#=A'INI&&2/78\n(7W<rh?/D>giKghg%;yqIXVvSQ+?zOaH'-h8nd1GU8[„U"C4PTb,O'Y73V_Q+8YVAsaTJgI%A8hlF8Vzjv#Xu-v;PoasR2,1#fp#p>B5#TXL)„U"gwe6:L/hKclkLI_7.Km%w,x7l0Ud._xO%o;OzU/H.mJ-=zuuS^oysh\lT*?_+16„U"B2DZaXDlpyeaPH_bA%&A2<=rvZ=c3;A'3j.cCa_,z1N7JhZAhF5ZaRW&9p'rT(T„U"uTrUtTKPiK-Xu]&Gvv#&DC2kPC11*guvF[Yc7HP<%VV<8N,u15r^T)dfY0i+x+C„U"Gqfvh]l%8A5G=DQ4M#^b9vFoVbQI/QT#UB2,2AT%oFb89qGM?3+X1U8:lWZ$+Ss„U"zn'GN\tb2Sa2LK19.rxL-H1mZea.OdT?,$i$d[027.Ypm'U9%&k[cw\m>9'tv*f„U"KNW5O^Ot'$94*]>dk1i&FN'kLw]-WhlVW54oi4mHKl6Q80h0w4BN#-#]eN*C=gJ„U"dS8A<_LC1-DV_/89f'Jek=tPu:cTvr,Ig_aVoK-w'fA5$?1g01(ou*28f[R)AP<„U"O.G7j[lj?$+*U_*Vyqg-$(\HqHD166*xKa$YEii=Lc5J+XZ^:sWhgS=UkrWT)#k„U"]Iz.))Yf;3mAKf3(b&bA2fM-C[j^9)$_rOFcn5PZa'k<UDMK)'[nsho(\9k$]an„U"k%b^oSa['=R\Msn-o>SIal9_W\q(W-P>rJy_A0\*z6-w_<Rs_o1Qd)M0m1=o^Ml„U"ehefiJf&bcBaoP^N=UM.Gt,=ds3vVU'cAN]>UR#Un'GG#%pTR=B]dd9Z75Dk7q(„U"0QnSjo_WUW3O8L,41gVdKSSr\R:5dqA*\REuos;Rq1EGA&UdnJaXO=O09d;:1Ql„U"4(GNI\pDFead<eG518ERvt<VR=%R<5aG*:bB?+3F_nEC-Lk*f3kq(]oM?Rf5:ZU„U"<4K$86F%av#m8;:b9k+n8>6XlrJpT#\gUkhEOmt=]fHkd]'(y,RW1864pH:)mFx„U"hM?uMOLoOaUwqN8P3uT/'%ix>/8SR?%R1K<kJtX3QbJ-0_<mJzeQV]3##aDY%$W„U"rnY707>ahpn=4):xo+IHGiOAg]f^1,0apoM6Dd%5b(<oHvt*^U'J+'n.9r=(;-i„U"1g>wov\cVYKFimXRD;%Sh20u8Ah7Zl+HQl.1*JvZLqppZMTZE<2OX\8OkzfrKY>„U"]5n4tWI6XjwlwOt#e#Z;MUdNjQ0t'.e<j)^B$gWw1VW_dI/oU)H8B*vi/L>J+C$„U"0XVA\fms^J2h5W9=KR2WfBG4_sGaYu)Ge>>OIucb<^-2:mV[=?0sam*S0g-+1o=„U"P3#[*KW$LnmpFratK?,]<F1ZU#=.Blf')%3i[1eCg]$l^-lqX2diMu[rY5%DYG0„U"cwE4be:Z,enDHv?1o[.>y5\KJpLgros,JXu\O.h<9UE=;tj\oNS,k\*=Rmg=a[=„U"^&c7Y:Lyg=+P/WjL.qpQ4Q#d83Tncq(N[oCMY>wj*^]F=rSC;/*s3pJT0i$fi81„U"p^920V.ZQoBYYNl.WR6WT*B=3OTJ-i=g*Z\:szJR[XlXWjYD2X>^8Fo=hw:hK,c„U",H=J>RO7b0XCs;T22%l>XPN2^j-(Z[M:d$1#q[ZJ1SLz;;k;SS'[>da:1p\C[CM„U"-x_G9\n'^8\QNtxExL4/YK-e-\HA#do?Wp(T^?a*,DVlVor_B7dc=8l$t%oasDr„U"Q^GS;MS=a2Rlvk'CtQoXEwbp5^P<sGrgMul3\Zd;][>ymx3=#LIFDm1pYp*$_6P„U"Ec';N*aaAjQW='$MYj#<1,a^I:#XYQm&d\/RRuT?i7nRO10oS5Vn?dLO=L8#X$u„U"lt?''v81(pRk>^mG:vjZu&l5.>NLoublXtFppb784KQs.YJ8V&zFvsMq.Sqnm8l„U"u,aDcEtMxN0sGsHJlx?Ko:xN&Wa[R5Kp1Cv'ZM(4(#E#pQ=f7Wt3OG2>,YO1ht*„U"(rZ8JgokzPn7^&r8mFqq(j'XQ#hitw%G3k8;DSfInI)Xe37Ip>a9CADkIi_9*0T„U"#tM7Ws]<J6&=fOn4*J&QoT<RuA+_nu.RN4&mImC*Qo992+.kSVQEk+%_2n=NB=&„U"4RIm:\AD6q#4*)XJ9Gy5JGgoO-Sbrep^^u3sJa4T3_JKMm*=XOwb/)N[:e/j:Zp„U"nw-t&hFo*[d$ELQ2W1B-GPc]LTvc-<rUjpYzF+FGehYl:gI'Vjm$yocsNo?QMVL„U"K_[^r%:[c96a2H1MRoacOvZkGF,ARA+Z2Z5P,Gta,.7k2tVe9_Upx>vb_q:U9'i„U"t70v.d)?9/O>o#fjnFP\>'aXO;/9]gW<FYrWp^hoQMhi2b?1m11Vdna-xmO%+nH„U"l(gPLWDzL,*lH[ZY%BeZw;W)90,&rk39*4A=>e#Su;5Xr=tU#QJ]GdtAYMf/U)W„U"rpgQRZEJFYs$el0()d)?>Z]H3EM*mT88*d$Y.^_$.E+81/tZdtc%8s(%1dxS.L7„U"9ljUowKtXm#;C/tQ>2ohGi/3]#Tm0=2\&K9%?:\_X#b$IlxgCW#dx\212>%BbHb„U"#kld%X>1G2f6HKJJJ.QF1giT+s)7M#&J,orfoDC3AUH&p5QW=^+.dAy\5#zJ/cv„U"rw8T?.nT7j#9qHZ&h$7,\4Py6':iL<F$+j*#sD7YctdY4'jF\)v5$GcF/[w*1.#„U"nz[Er[B,SiNKsj':P#?JMxRw/o9/vn=l84+#$9ga^VlNkJV%HAWjK9Z433;:\GG„U"(St0T>'G^_#V.vT^PA1)f#>4/_0,B4>E)e6g<1#)A]++/r4:_Ee%70vNoegoU$l„U"-r)s0QhB>S4Vwcb*2j45e0BMGWRbq'Y.6rNsUjNWV1dqx+u%mDZ4NDx<,dcY(j/„U"Hg(&.3g8^l$ny0x]6^u:U&_0>bNSg(>/\_%9vF+J]#M4WXh6dZ;J0)NO0]JP<&0„U"t9V<ifEV_Vmp%]Na,UB/]lid.&wi^MFcg]bB,(H;H-^BNuIsJ&8H<N:I0>*[\Ef„U"NbnRZhuVO=]J=NJ6h-l3N%6iAPb5t3Us26i75,xH]94anw7:k4^*QJ(R0>$>#*W„U"<OVSLe(e.p>$lz)CI/JQtB/NDrJU9g8Zg58i3rr*c^$)E40eVIn1=q2p$Pf)u:Q„U"iidgi\8)*aaqq\hY0i1W#CKP-r2Cdsvm#cIomkKA_22,.EW'F-,]I=nV+,E=(4D„U"5Y)-/h<]xMgbV\-KOk)>aLp$2_>4\1=7p09M_2d/PD(xH#CkjjO4U?x]vw<'LIT„U"DQRr('3d$s=*J+gcOXmNINuTvl&Xxkp80k$^JSl'([1VmSU&0bwt<s6MgBbCU71„U"/&$^pM\HKb+DWtJH??*:1;<8,\)>k&ETEG(op?wsNJ%HpE6'6=[<o7_v:y;Ukr1„U";ej9^L:=OSfk==nU91SLT[eLWMQf#LCC6'\h.$=>REF32sto;M6Pilz+<=#OI=)„U"NX-_K$jp\MF&oghRJ\HB>NYpW(tO1n_b9c;?47*Y=3B.-cT4nwdil;Q0#ZKrPi$„U"t'dgeu((qiKu]sd;>88.&y/A;%W;X6&z*Xu[l5T070g%pM<7Mi<JipO<bOCR#Rq„U"Zq46<9pR/mWG&P5bsXP[GL6-(GIV,7$^tZs&3TaP;(_,O>ape=[BZcg%bK$QI49„U"Rq(d#>TC(/i2Vz>U#rtiDC:,0rt.EaPv$acTKkw8R4Q:iZ7Z_Jy?as>cJ_22=h$„U"W<Gt.LIk#&\>Q*i.5Lq'Q*U.kJY(ajSY?EBpdgX0[F+SOD4(F^E-K)[W#-'yh+S„U"/DRr&KPYN#sB^rbLxmRs,_Pa3]Qm2CB/IiRf;p$EcW,#^73\a,6f%?e<<(rrMfT„U"<$9Py-oE+^2]2(DfHAERXXk7>7ieGzEn)D73*NY33T9&D7$Y'_R;I[BLeg\&.65„U"WU0bbyh=L#Z1>]Aapc4%nkqw]#C^g[zE]?,k&Wd96DiTRwRE6&us4%hVEIw$J]e„U"Rb;=%_MWL1T)lCl3w.]W>QtWiT[^0HIId,V,>AtVjYF;*_ye5cnQJG:<6XkM?fs„U"UOLUf42.z<Bc&Sx<iWL/,j=R>Vh]zqCjZ#uSjkNE4=d7o*p:M4\)<b8GM5i4#G?„U"_%DMDv[4o9RS8sC/n*s3c>rgP\/Nkp*;.F4fC_Hi5*Ki&7CAorj(-K#H;($Z$sO„U".&,muUjw9S5FLl32sMp3W/Av<qFv6JmWwq*mkUDZT]h<Ik'6VYG^1Hp1D7;ZYvW„U"0JCTj5AD)%qs)C<LNi2T$5E5aA*.Fn]zL\j^^YNQg&3G5OH42s3hUvp*?Q*5YX9„U"w1D==-kQSW2Np81(tk=bY,ajCs0f.-iDaiFUcDtH:PBk$hSrJug16)Gn$9kL6FK„U"=3[8GGL7mlu\wcwq%FCKC)zgG78nOJ>G=i[DOm&CbZD[]5$1k\mNvzQ.6vfT8GU„U"(qPe(oZ9g^H3jnHH[lVh3YB\QY7-eA+iRg0*'qB?kFseSDY-u%IZ0kBpAGmT0tk„U"5>x]ZjN2A9.2siFsLU)g0$)jwCq'?b4?RGC,Sezh*8Aa7bbcw,d21n-ho0FN48Y„U"n^R9FFd(cV_;[><&k[Z/Q.Ou;-]+5^Y42K3D6_5+%$Ct;p1jFA77FEdAf1h0JD/„U"z2l%dVQSr<FKGZ\ltiLR5rNCjUN4AgOj=r<R6?7NxK[mupJ+W?gHUE_X2d];c.\„U"i(Z4UnjY/:TsIO59UhPSvbTsOQ((kDK0G<_:u2l9I&.9=wDT7qRr1w-A]JvjgWV„U"o&BI^fPbb2rhMJ.UXnU.W%v)J\s,7f*hNfnn7W>nI2.:;H:^bs3K2YhEhC5gC\o„U"ZZlL)?PBu;_k.C])&W/$&$b]#dcKlkl5DDG\ky]-Yc.&in]R?gnO%XU7.xFLNU,„U"x?SpS9VUJ)W*ggA6_b2sg&rOaW3?5ZY&'cTb-nxY<>0N7m_)9?c+#qIB^G.Sxu3„U"8O%t#:-lF+_MR,1Cvt)1CN7#q4)kE.+]]6mi>o'JX%'K=1/9<eF4IJZghs+3VU0„U"+5Eo]vG;7UqsD\gqTwNR<#:EC'uj%mv+6MqK0r4<k$8SKm/a<\wjKrfYE<ATZtX„U"cw3*UFA56VLZx$bV>?3J.QLL'V:I1k5/=RT^;rtsn9/G+k]OY.lv2B0W<2:#Uei„U"YtPM.^\/3fJfqfBZZBW\XW<W,hytPqFY4zBA7mgD%hnGlqWv+G&N=0%QB>a<rg*„U";TUnQGv=2cf,KrsETUlf>LDXJ5i*QX&4*2:)Q3Ft)))w?C(B1_vRZHohD9T[d_D„U"Ix-::x[.u=FSIl0HP&l'5*HiEW^HtDMXjy:\45t%)Ldv>Lo&=RCEo0,*h#x#]t-„U"a:T&N.g#x9vXslT6'ge>[7WoRVVhAV0u9?[Ni=D(u3?6R-cFw7#[HMA5DS\v^1q„U"];MCnr&28/0V-oTG.B'?JA'ju/xT<H>J,XD[Hj?Cv><*'/;'.xi:p_N<nhW>xxq„U"sPX\2myE.8.fr:4kd%d,+>Ql=sdXU[5rD=zD_%T(Ws21?%LcR_$3uYKe]xvZ&X#„U"uu&*c%T/wRzg.ow.Q;tEC.P7dlOsC^2qTo=x*+^x5P48dApb'[lI1pU6kSb+\9e„U"1ScB&_x#BWEN4bl]4?+cp'ic+JANy[:'b6/;j02bba#W.0GRx]qN(-WxAhk^hez„U"gL-g]cU?k=RoQBbA_\N0F'7zIfW,N2jBY,;t0OD#i5ExCSlwvXksm8vI&'fa&X_„U"xLa<vYD.RJfYJ<\s\osr7:-Uf+5qc9HF%>c:BsrG/^Hd;:p;2<qHclBK.rm.u2>„U"EB89(ZS8-Mj+l:meBJfelT\5D'H7.uctH-HteW_JL4:rgq*KP6PFvD:r_u5VLH?„U"[M$)Z+0Wok0DQ9fQY&c7co;IduvXv+se-J5=Lk=H#K7qWpI'lFnKII>b3LgaHa\„U";mGc9nrGIW2_]m.IDa9-*nz+#nFIT.LNUIG4ERh$Y=SLf:CF5+au-ILJ9JIGh=o„U"/A.]#lPk:b).]#%,MJAYDZ#d*o.ps7n\ckKCAqaOqCWilZLMX>_/M=[L.wyruB'„U"QDKg%OhZ7L2rtm*/\=o2BR\438PSPImI0jEB_?#v))Q5P2vpE:f^.s;1)++'aWE„U"8hj2JCpgQ0<+s=J5\raU5('?HLj%/vCa]7Oq1(Q*l;Xq#0u?=U8,M^)7*e&#I-2„U"eLrH0=Te:Gq<T70LVtoOpJfI,;9^oxI/C2xP'sPA5e#3]4V%-lHR,c,.F?)8P\F„U"hg7I[YB^7;/t?g/8Hk\3*cQzZGGd/6=W[NlT3zTQp3r_WZvgE2j[Ikg.r$K?v1G„U"agt_ww'$bBZ3_0Dp5%kXmKa6Lp3H+e%jbT0#2;c+2X-44[Y+s#7^N0x$-Vv)]+0„U"8bBQgj,Y/..zVL+8;rS#gh3-k#\zGlGiN\a2CwP,Xqj0x>DhQc#P^.nLT',d/rk„U"<BdPPG8&^xrvg3Tg;I-9DM':y,n#97X,[^rO&gi^aZ.Y]1J6fTWC].n=K7[fJY7„U"0'993Z[.HobsMid2*H6Py&tiDAd_]df*oc,<)7*+q.Il7&52b%CIljNISW0Lo:(„U"MJ#]nHa.0c#=_u9)wu+pih0.3ldK9,t22,_.r5)lD&2j^X'TYCU8%.CEhSz3N5k„U"P+ZR_CH]eR6a+1+Q+gman_SV-W'xK&<;Q;x$brX>x7K,:[H$X*fJ0SA7<xs-7k6„U"xj[TU[kJ8#LkJeda5+TXUhJ)bLt,8zI>)t$3Y>H[IJO/m>GdC=O='Eg43EC>*?J„U"9;W,QQh%jVYX.VN^3Yj?[+ng?_hsud*^QN;]Q:5>V1a;wC_b:akeB[f9di,=6Im„U">WrT7MiZDUW#oLLRhEqGE4b=j\v0a3kaQ'1FOT/=3Dk+FtuVDnotaEx($W71^L-„U"TL.=0F,_X3UxB,3A01d-RVU=X,BV<u6Sh322J1Jsn-S0.Rf<Eqq0n6;9^%fkG&.„U"prfT8:OY71BdVOewrQ%4gVx=rx7zT\SQ*,Ba9cZOI-i%U-nR<>'E0EN3(2(CM+I„U"NEbGZsd[0pb%JoCQ+Ne&kvs)p_p12V:jiqJ$<5dfEd-9(^P-+Z0ki.'=/sbFXQS„U"U,QG8_.15#-'+SaWoUD+OA3MG?IbRqK)d;b^^2N5KMqq3Vt*YKY#s8;&HELkr/,„U";0b+I$Z/b$S#eRe#E0I4sdE/g?.8rQs7T&1fm.XCK,VY2.#nemq9(1'7dLu7zw4„U"J.s,FfHI1*Th1[pVWL_<mZ:mcKo?TLSV9&8>LP$m:QjW)_BJdppk&h>J,sC]&#?„U"T12TGkdd]Tx#c5Cp&[EdK[k8F)ZA48q4iEoK\Td^6NEk752B1j)1cpgl\>t+i4'„U"45vIVf<&EEV]NnSLs.WwogW>d#s(M<M[\o)]u%g$;;>DCFEg1gFVg-91kVA^N=-„U"LA]M_]/)X[(A7%^sPHP2%\tGVM&GmVDB.cgutstpFdUYFj8V[6EIEWx-mEoo,;g„U"HXp'G>ta*ord6U/IgAjBh#X.1]KsNr+97Jrrw<Y11&(Vm6v.G%l-XOZXL%&7VK?„U"6v:/K-<D;dg8Hvgt_cdj-gX[8mMg.N1vQ*G82\YotpAVRLzUllV\zKBW#$[/pyr„U"y&HuhSZch_jjq^:;4[\3kV#;uk+A5IC,WIFK;y''^''XnLqh38N:'(Q'0K0.JlT„U"7GR?nOq4:n'3O$Rw^koBFmN7\rw4lQ$2o&0h2oknwRK/vxtTDMz.ZqK'(mFDMPl„U"Vyf=sCMeK3*B+A8Kx;$-DeZO'>12a;p>BB?t+_8N:-BP8h.RmY3K6r+KZkg;2$;„U"yj=;*$d7Cmrd$Zntko8ww=DeNUaqM-wJmu'cN(T*VrN;)A0SNd$KOO$CY/6]h)J„U"rEnidrwr191[r.hf;aDG>Fn8XcRPE+OElXbCIG:(9ltqQJiRl,1h?Lk'OM:tM-'„U":'qYCnjXX98P,s;y?m8n^MuZG'c(eDM1Pjw<F%Bge:K3r7RQowtniqA;(Z7584[„U"AWnU_5k*>:4JP-*g,\dj4i\t6k>1OZ+'X2&Ga46o0_yN&LZt04is$EBVDiVxV2J„U"q7:.Y;+cg5YYow$8'Y.UTBnWvPdd^MCH/;2CRkvP5v$y^9k8^Zl>t[hWtBm)TfS„U"Wf,b/?^swl/pKo,<vD)Vc;1y3yV%%;ZkifO8tme/1g7)]BJ-pEzm.Zz-8GBaqQ:„U"$etNDB>4bI]92RXkr:W#vF#b+DrH(ebnTCSG-P7:]YL=H02q+jmmrFDn-UA5([H„U"R215LiV84LGXI6#^DK1D2aiDc6[PfU_=dS#EFill]ckI[6-)4X(e&D2\B6Cjb_i„U"\b_JYef$Sd^LHSNxa%1*q^b<&igmW#KVKYZObLB-se_t)1UjBo8F(9Q>'8_oT&9„END SUB„SUB V3„U"awuof&N)\KRFb5&3-wrKCpsqhcXa3-Z:Ol$UAs**t,/FsA(96(S;RUh[\oh.pjJ„U"GSFS2KR4:L3o]P?j$[?_9kPLm-1tk#l7ANyBrhvy\GcFj$7KYq*WI=O%+oG3:G#„U"DVy6o4&fd3sv9B6kMHU?q\o]5zZ>WC=2quoffL^VKWY,joWjtiLeK]QYsHSEKkA„U"7_X\1S09S0],)AEm3Cf(Np\qax0w\qT_kkoZ30v:#S%zRM.uuEJpj05Le6uT$\L„U"u2m4GfP9QHUMx53q'xrtlRN:*.X(pN^TUfOK^27[8wk8b=8rpIw)Ul<V8n7BC,-„U"/SUh[ls9&8-&Xs)(d+B3QfwrHE&]Z?gCn)*KEAxO+R[3qT_FE=U3D4yAFl:DU5$„U"O_r53TsB.T0\,7=0iD$mwHT2eEd)KuAguJn^bo'r1C,&MZnU?^ZF0jWI8Y.F,js„U"R=LTJAMoRGSxa/a1i:Lp'L_9?&7?jojuIXi\cU$7rq^+sSn]>)vVEg9WaUdSvXj„U"oj]G-V68](g_k3^Q_;l1kFa4Q41sGb^U&zS(UT9'Mm*DA?1=O:*jk1gDJ$Q[[tD„U"pAWsc9=3((8>PX)9=22>Ls3BtT>13xLsqOp)*Ag/P/xHBJ(K\6bPf-qxgAs)QZ<„U"';'/OP/H\dtmCdJ6N(W,%sy=&B]ap;7c-<P6ja,D[[4YW^:7SHC$\vWs09O6HxU„U"jBJ8bfE;iZ*%V9>pC_3t_TqtNBV2-3R6qZV2p9A'05t-vc+Ji:tU2n-VPrNG2Ko„U"$tm=j0GKwI0L1sK5WXl4z*g='/vGOY2t*wf7QH24T#mE*Pfkb9$)O(Dm*o^XIqr„U"+qNM(R<R82JN=DikQ>kYw1*mqp]6cm9s&[*=*w#_k5ndeVoTN(IW^naBP^MQ'q3„U"r\(Jp7ty>]5<FZ0Q%Do2K.gOO=u)Y%4n-7CKo=t'+j)4H+k*\:M%$/mSUTJ'BBT„U"LqCxrMvy=j^_I$NQn'Ud_YOdsUoBe)T>=8yU9x+^ezy&C.a'CGO#1cnZOV<vIM/„U"=>me;1l5%a_B&TA)NBvSG&[KJ=I4JO_lpr.9sdQL[SU5v$9rT;dv1(6&)T:v5U-„U"&R9km4e8%C.X.p:2oJ7]Lcg3V,,.DbFe04V;]9dE$OnX1$7\;M%AGHm#ivYhZ*+„U"tf[y'HKArOU3[x4\a;$?:hVq=d)yb8i:u1^rpX[<Umj:6cZo43lifn5$Vy\c^NN„U"FAL]YKwWuXW8rA?_GEea=W(dXZ(.cTp>-NatJup3rH;XV#_q_U0fXasNvI$wgw2„U"A2An7p^DM)*MqHTuvOA]X+PF4YI4,gm1pLxF+4Q52/U+Us>k#IB3?G:=nV,aM+:„U"[od$%;:>Nde%B)Q]vKUDd3(<YclT6w]?.M\W>gg0urtd+[mpnMBB5n+xPTZwjWt„U"B_d&NVG#w#B7iQnl6mJ3Fo0+4lsTU-D=MBOSHQ-0*zO5eGeDYV'L%+;Uf17&Z==„U"J,AQv'AK3eDBI.sO'GM)p3\7#^P[YC;:8^YV+eN%x4:S3yJ_;+1(tzHdLrqXBa#„U"s<Q0#99;_D6VQEAm><[;M?'3ww&I;^*?vP&8l93STQj;'[jypnE_Rq;EW0qj5pE„U".]OLg[d^[dMIF;m#?3^lr*zW4P?P'<3TvhRQ<Ee0^+n_s3U='\/4eu4)DO4mp6D„U"#s\Oc7qYp<cedy_\v\E1BmTvMq5S.H\+(oYEQ<k'0X/Ymmn?AjeuhD,.2'n1V?1„U";ilpK(g:vCp^^U9o2gB78O#02jcE$i,4.ZUJ+w_*GnHGDj]J+m-dw)-vEDpApKc„U"&WU9.y=47V7Uswu<iY=bu4<feqi'j.7lM424Ld+7eTnF5W#+Jq3=IZSNkgipS>w„U"YB'PvYnPdg+n;s&uV?8'=[RQF&ja<'Np)8enBqR/^X8mhD0Yiw<Au'w>oV\7pJa„U"pwx=F=a7/5j;Cz?eDk*8aEa-n2%mQWVki\4\%0EaV\&:GSmY<_NDCaipq[[(]/6„U";*OjHOm1<TLzf=_og&'BtBRdp?]WC%>8CbXX,sT=QNu4n8xlnhNv%dup&%'9%9%„U"%%%-+%4sbCDu<X+\Zy%7%5r%%%+%%%%%%%%%&%E%%%%%%%%%x%ySgf%xup*%+%%„U"%%%&%&%%Y%%%%*z%%%%%„END SUB„V2„V3„CLOSE:IF S=240AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„'>>> Page 1 of ST.ZIP ends here. Last page. TCHK:240„Christy Gemmell                PIPELINE REVISION              Martin Montes                  12-15-90 (00:00)       QB, QBasic, PDS        294  12061    PIPELINE.BAS' PIPELINE.BAS  a game for personal computers with Colour Graphics Adaptor„'               or better.„'„'   Author:     Christy Gemmell„'   Version:    3.10„'   Date:       15/12/1990„'„'   Compile:    BC /O pipeline;„'   Link:       LINK pipeline,,, qb.lib;„'   IDE:        QB pipeline.bas /L qb.qlb„'   QBasic:     QBasic pipeline.bas „'„'   Converted from Borland TurboBASIC for use with Microsoft QuickBASIC.„'   Adapted and embellished from the original TRS-80 Colour Computer program„'   by Martin Montes and the author.„'„'   $DYNAMIC„'„    DECLARE SUB ABSOLUTE (Ticks AS INTEGER, Address AS INTEGER)„„    DECLARE SUB Centre (Row%, Text$)„    DECLARE SUB Continue ()„    DECLARE SUB Move (DX%, DY%)„    DECLARE SUB Pause (Ticks%)„„    DIM SHARED MCode(1 TO 20) AS INTEGER„    DEF SEG = VARSEG(MCode(1))„    OffSet% = VARPTR(MCode(1))„    RESTORE Code„    FOR I% = 0 TO 39„        READ Byte%„        POKE OffSet% + I%, Byte%„    NEXT I%„    DEF SEG„„    SCREEN 0: WIDTH 40: COLOR 15, 1: CLS„    LOCATE , , 0: KEY OFF: RANDOMIZE TIMER„    DIM SHARED E$(4), X0%(10), Y0%(10), HX%(30), HY%(30)„    K% = 1: L% = 3: PLAY "t240o3l8d#fgl8b-p8l8gl2b-": PLAY "mb":„    PLAY "l8t255o3bo4cdo3bo4co3abgaf#t120gbt200dp8t255o4cdecdo3bo4co3abg"„    PLAY "t120f#at200dp8t255ef#gdef#gef#g#aef#g#ag#abo4co3bo4cdeco3af#gd"„    PLAY "gbt120g": LOCATE 2, 8: PRINT "Silly Software Presents ..";„    LOCATE 10, 11: PRINT "+-----------------+";„    LOCATE 11, 11: PRINT "| P I P E L I N E |";„    LOCATE 12, 11: PRINT "+-----------------+";„    LOCATE 23, 11: PRINT "By Christy Gemmell";„    WHILE PLAY(1): WEND: PLAY "mf": COLOR 15, 0: CLS„    FOR J% = 15 TO 1 STEP -1„        FOR I% = 1 TO J%„            LOCATE L%, 9: PRINT STRING$(25, 32);„            L% = L% + K%: COLOR I%„            LOCATE L%, 9: PRINT "Do you need Instructions?";„            Pause 1„        NEXT I%„        K% = -K%„    NEXT J%„„    PLAY "l64t140o3deg#f#ggc#d#edc#ccaa#g#fc#"„    DO„       COLOR 3: LOCATE 14, 18, 1„       PRINT "> "; : A$ = UCASE$(INPUT$(1))„    LOOP UNTIL A$ = "Y" OR A$ = "N"„ „    IF A$ = "Y" THEN„       WIDTH 80: COLOR 14, 6: CLS : LOCATE , , 0„       LOCATE 1, 31: PRINT "+-----------------+";„       LOCATE 2, 31: PRINT "| P I P E L I N E |";„       LOCATE 3, 31: PRINT "+-----------------+";„       LOCATE 4, 1: PRINT STRING$(80, "-"); „       RESTORE Text„       COLOR 30: LOCATE 2, 33: PRINT "P I P E L I N E";„       COLOR 0, 3: FOR R% = 5 TO 24: LOCATE R%, 2: PRINT SPACE$(78); : NEXT„       FOR R% = 6 TO 20: READ Q$: Centre R%, Q$: NEXT: Continue„       FOR R% = 5 TO 24: LOCATE R%, 2: PRINT SPACE$(78); : NEXT„       FOR R% = 6 TO 21: READ Q$: Centre R%, Q$: NEXT: Continue„    END IF„„    LOCATE , , 0„    DEF fnA% (A%) = INT((RND * A%)) * 16„    DEF fnB% (B%) = INT((RND * B%)) * 8„    E$(0) = "c2l16c0u0bu1br4r8bd2l8": E$(1) = "c2u8c0u0br2bd2d4bl4u4"„    E$(3) = "c2d8c0u0br2bu2u4bl4d4": E$(4) = "c2r16c0u0bu1bl4l8bd2r8"„    S$ = "bu2r4d4l8u4r4bd2": En$ = "bu2g2f2e2h2bd1"„    UA$ = CHR$(0) + CHR$(72): LA$ = CHR$(0) + CHR$(75)„    RA$ = CHR$(0) + CHR$(77): DA$ = CHR$(0) + CHR$(80)„„    DO„        SCREEN 1: Level% = 1: Pts% = 0„        LOCATE 2, 35: PRINT "Level"; : LOCATE 4, 37: PRINT "  1";„        LOCATE 7, 35: PRINT "Score"; : LOCATE 9, 37: PRINT "  0";„        LOCATE 12, 36: PRINT "Time"; : LOCATE 14, 37: PRINT "100";„        DO„            X% = fnA%(15) + 15: Y% = fnB%(22) + 9: HX%(0) = X%: HY%(0) = Y%„            Time! = 100: LINE (2, 3)-(254, 182), 3, BF„            Ep% = 5 + INT(RND * 4) + 1„            LINE (2, 3)-(254, 182), 2, B: LINE (0, 183)-(319, 199), 0, BF„            FOR I% = 1 TO Ep%„               X0%(I%) = fnA%(14) + 23: Y0%(I%) = fnB%(21) + 5„            NEXT I%„            R$ = S$ + "br16": L$ = S$ + "bl16"„            U$ = S$ + " bu8": D$ = S$ + " bd8"„            R0$ = "br16;": FOR I% = 1 TO 14: R0$ = R0$ + R$: NEXT„            L0$ = "bl16;": FOR I% = 1 TO 13: L0$ = L0$ + L$: NEXT„            D0$ = " bd8;": FOR I% = 1 TO 20: D0$ = D0$ + D$: NEXT„            U0$ = " bu8;": FOR I% = 1 TO 19: U0$ = U0$ + U$: NEXT„            I% = 14: DRAW "c0bm15,9" + MID$(R0$, 5) + "x" + VARPTR$(S$)„            PLAY "l64o2t255egfd#d#c"„            DO„                PLAY "ccc#gc#"„                DRAW LEFT$(D0$, (I% + 7) * 20 + 1) + "x" + VARPTR$(S$)„                PLAY "dad#": IF I% = 0 THEN EXIT DO„                DRAW LEFT$(L0$, I% * 20 + 1) + "x" + VARPTR$(S$)„                PLAY "ebf"„                DRAW LEFT$(U0$, (I% + 6) * 20 + 1) + "x" + VARPTR$(S$)„                PLAY "f#o3d#o2g#"„                DRAW LEFT$(R0$, (I% - 1) * 20 + 1) + "x" + VARPTR$(S$)„                I% = I% - 2„            LOOP WHILE 1„            FOR I% = 0 TO Level%„                IF I% THEN„                   HX%(I%) = fnA%(15) + 15: HY%(I%) = fnB%(22) + 9„                END IF„                PLAY "l60o1abeo5fda"„                Place$ = "bm" + STR$(HX%(I%)) + "," + STR$(HY%(I%))„                DRAW "x" + VARPTR$(Place$) + "c2s6x" + VARPTR$(S$)„            NEXT I%„            DRAW "s4": PAINT (X%, Y%), 1, 0: PLAY "o2l61df#eg#a"„            FOR I% = 1 TO Ep%„                Place$ = "bm" + STR$(X0%(I%)) + "," + STR$(Y0%(I%))„                DRAW "c0x" + VARPTR$(Place$) + "x" + VARPTR$(En$)„                Note$ = "n" + STR$(INT(RND * 11) + 1)„                PLAY "o4l58x" + VARPTR$(Note$)„            NEXT I%„            PLAY "l62o4t250dggdg#aao3dggdaa#a#o2dggda#bb"„„            DO„                I$ = INKEY$„                SELECT CASE I$„                    CASE UA$„                         Move 0, -1„                    CASE LA$„                         Move -1, 0„                    CASE RA$„                         Move 1, 0„                    CASE DA$„                         Move 0, 1„                    CASE CHR$(32)„                         PLAY "o1l64t255cdgf#c#c#c#d"„                         PAINT (HX%(0), HY%(0) + 1), 1, 0: I% = 1„                         DO WHILE I% <= Level%„                            IF POINT(HX%(I%), HY%(I%) + 1) <> 1 THEN„                               Place$ = "bm" + STR$(HX%(I%)) + "," _„                                      + STR$(HY%(I%))„                               DRAW "x" + VARPTR$(Place$)„                               FOR J% = 1 TO 27 + 2 * Level%„                                   PLAY "o5cdggb": DRAW "c2x" + VARPTR$(S$)„                                   PLAY "o4baffdc": DRAW "c1x" + VARPTR$(S$)„                               NEXT J%„                               Time! = 0: EXIT DO„                            END IF„                            I% = I% + 1„                         LOOP„                         IF I% > Level% THEN„                             FOR I% = 2 TO 4„                                 Octave$ = "o" + STR$(I%)„                                 PLAY "l32x" + VARPTR$(Octave$) + "dfgg#"„                                 PAINT (HX%(0), HY%(0) + 1), 2, 0„                                 PLAY "g#d#fc#c"„                                 PAINT (HX%(0), HY%(0) + 1), 1, 0„                             NEXT I%„                             PLAY "t192l8o1cp32cl4p32cd#l8gp32gap32al4gl2d"„                             Pts% = Pts% + INT(Time!): Level% = Level% + 1„                             LOCATE 4, 36: PRINT USING "####"; Level%;„                             LOCATE 9, 36: PRINT USING "####"; Pts%;„                         END IF„                         EXIT DO„                    CASE ELSE„                END SELECT„                IF INT(RND * 20) + 1 = 1 THEN„                   I% = INT(RND * Ep%) + 1: L% = X0%(I%): M% = Y0%(I%)„                   I$ = "bm" + STR$(L%) + "," + STR$(M%)„                   DRAW "c0x" + VARPTR$(I$) + "x" + VARPTR$(En$)„                   IF (INT(RND * 2) + 1) = 1 THEN„                      J% = SGN(X% - L%): K% = 0„                   ELSE„                      J% = 0: K% = SGN(Y% - M%)„                   END IF„                   Place$ = "m" + STR$(L% + J% * 16) + "," _„                          + STR$(M% + K% * 8)„                   DRAW "x" + VARPTR$(I$) + "c0x" + VARPTR$(Place$) _„                        + "x" + VARPTR$(En$)„                   X0%(I%) = L% + J% * 16: Y0%(I%) = M% + K% * 8„                END IF„                Pause 1: Time! = Time! - .1„                IF Time! >= 0 THEN„                   LOCATE 14, 36: PRINT USING "####"; INT(Time!);„                   Place$ = "bm" + STR$(INT(Time! * 2 + 5)) + ",185"„                   DRAW "c3x" + VARPTR$(Place$) + "r2d2l2u2"„                END IF„            LOOP UNTIL Time! < 0„        LOOP WHILE Time! > 0„        LINE (0, 185)-(320, 200), 0, BF„        LOCATE 24, 12, 1: PRINT "Another Game? > ";„        R$ = UCASE$(INPUT$(1))„    LOOP WHILE R$ = "Y"„    SCREEN 0, 0, 0: WIDTH 80: COLOR 15, 0: CLS„END„„'   Centre a string of text within a screen row.„'„SUB Centre (Row%, Text$)„    LOCATE Row%, 40 - (LEN(Text$) \ 2): PRINT Text$;„END SUB„„'   Prompt for a response from the user.„'„SUB Continue„    LOCATE , , 1: Centre 23, "Press <ENTER> to continue > "„    DO„       R$ = INPUT$(1)„    LOOP UNTIL R$ = CHR$(13)„    LOCATE , , 0„END SUB„„'   Move in response to direction keys.„'„SUB Move (DX%, DY%)„    SHARED X%, Y%, Place$„    X% = X% + DX% * 16: Y% = Y% + DY% * 8„    IF X% < 15 THEN„       X% = 15: BEEP„    ELSEIF X% > 239 THEN„       X% = 239: BEEP„    ELSEIF Y% < 9 THEN„       Y% = 9: BEEP„    ELSEIF Y% > 177 THEN„       Y% = 177: BEEP„    ELSE„       PLAY "o4l63e"„       Place$ = "bm" + STR$(X% - DX% * 16) + "," + STR$(Y% - DY% * 8)„       DRAW "x" + VARPTR$(Place$) + E$(DX% * 2 + DY% + 2)„    END IF„END SUB„„'   System-independent time delay„'„SUB Pause (Ticks%)„    DEF SEG = VARSEG(MCode(1))„    OffSet% = VARPTR(MCode(1))„    ABSOLUTE Ticks%, OffSet%„    DEF SEG„END SUB„„'       Data Division.„'„Code:„„DATA  &H55, &H8B, &HEC, &H51, &H52, &H06, &H8B, &H5E, &H06, &H8B   „DATA  &H0F, &HE3, &H14, &H33, &HC0, &H8E, &HC0, &H26, &HA1, &H6C„DATA  &H04, &H50, &H26, &HA1, &H6C, &H04, &H5A, &H3B, &HC2, &H74„DATA  &HF6, &HE2, &HF4, &H07, &H5A, &H59, &H5D, &HCA, &H02, &H00„„Text:„„DATA    "Your have been hired as the Chief Civil Engineer of"„DATA    "West Moronia and your job is to ensure that all the"„DATA    "towns and villages are provided with their supplies"„DATA    "of Natural Gas. The problem is that the countryside"„DATA    "is located on a big geological fault and is subject"„DATA    "to frequent earthquakes which fracture the pipeline"„DATA    "carrying the gas supplies.","  "„DATA    "At the beginning of each round, you will be shown a"„DATA    "map of one of your provinces, with it's chief towns"„DATA    "highlighted and the local pumping station filled in"„DATA    "with light blue. You must build a pipe joining this"„DATA    "pumping station to all the 'thirsty cities' of this"„DATA    "particular province, without any break or blockages"„DATA    "caused by earthquake activity."„DATA    "You construct the pipe using the Arrow keys to show"„DATA    "the direction in which you want it to go. Once that"„DATA    "you are confident you have a sound pipeline without"„DATA    "any breaks, hit the <SPACEBAR> to begin the flow of"„DATA    "gas through the system.","  "„DATA    "If a section is blocked due to earthquake activity,"„DATA    "the flow will look for an alternative route. If the"„DATA    "flow does not succeed in reaching all the locations"„DATA    "on the map then an alarm sounds, the 'thirsty city'"„DATA    "blinks and the game ends. If you manage to complete"„DATA    "the pipeline successfully in the time allotted, you"„DATA    "will begin the next round with a new province and a"„DATA    "new set of cities to service. a peculiarity of your"„DATA    "new homeland, incidentally, is that each successive"„DATA    "province has one more city than the last!"„„Unknown Author(s)              PAPER-SCISSORS-ROCK GAME       PB Revision                    Unknown Date           PB                     199  4047     ROCKPAP.BAS $IF 0„  ROCKPAP.BAS for PowerBASIC, adopted from PAPEROCK.BAS.„$ENDIF„$LIB ALL OFF„DEFINT A-Z„„black = 0: blue = 1: green = 2: cyan = 3: red = 4: magenta = 5„yellow = 6: white = 7: bright = 8„Charge$ = "T240MFCfa>c.<a>l2C"„„begin:„ WIDTH 80„ RANDOMIZE TIMER„„'SCREEN 9„ COLOR white + bright, cyan         ' COLOR foreground, background„ CLS„ LOCATE 5, 8, 1                     ' show cursor this screen!„ PRINT "Would You Like To Play The Paper-Scissors-Rock Game...?";„ DO„  WHILE NOT INSTAT: WEND„  Ans$ = UCASE$(INKEY$)„ LOOP UNTIL TALLY (Ans$, ANY "YN" + CHR$(27))„ PRINT Ans$„ LOCATE , , 0                       ' hide cursor„ IF Ans$ <> "Y" THEN„   GOTO ending„ END IF„„One:„PLAY Charge$                        ' and set the tempo for future PLAY's„LOCATE 11, 1„PRINT "       ... Press a Key to Play"„SLEEP„Junk$ = INKEY$                      ' empty the buffer„„GAME:„CLS„LOCATE 2, 19„PRINT "Welcome To The Paper, Scissors, Rock Game!"„LOCATE 5, 17„PRINT "You pick either (P)aper, (S)cissors, or (R)ock"„LOCATE 7, 10„PRINT "and the computer will randomly select one of the other two."„LOCATE 9, 18„PRINT "Please press the Q key to (Q)uit at any time."„LOCATE 11, 25„PRINT "Now, What Do You Want... "„LOCATE 13, 30„PRINT "(P/S/R) "„„DO„ WHILE NOT INSTAT: WEND„ guess$ = UCASE$(INKEY$)„LOOP UNTIL TALLY (Guess$, ANY "RPSQ")„„IF guess$ = "P" THEN GOSUB paper„IF guess$ = "S" THEN GOSUB scissors„IF guess$ = "R" THEN GOSUB rock„IF guess$ = "Q" THEN GOSUB ending„„WHILE INSTAT: Junk$ = INKEY$: WEND'empty the buffer„„GOTO GAME„„paper:„x% = INT(RND * 9) + 1„IF x% > 5 THEN GOSUB winp„IF x% < 5 THEN GOSUB loses„IF x% = 5 THEN„ Item$ = "Paper"„ GOSUB TieBallGame„END IF„RETURN„„scissors:„x% = INT(RND * 9) + 1„IF x% > 5 THEN GOSUB wins„IF x% < 5 THEN GOSUB loser„IF x% = 5 THEN„ Item$ = "Scissors"„ GOSUB TieBallGame„END IF„RETURN„„rock:„x% = INT(RND * 9) + 1„IF x% > 5 THEN GOSUB winr„IF x% < 5 THEN GOSUB losep„IF x% = 5 THEN„  Item$ = "Rock"„  GOSUB TieBallGame„END IF„RETURN„„winp:„CLS„LOCATE 8, 3„PRINT "You chose Paper..."„LOCATE 10, 4„PRINT "The computer chose Rock..."„LOCATE 12, 5„PRINT "Paper wraps rock... You WON!!! ";„PRINT CHR$(1)„PLAY "MF O3 L6 C C C L4 < G L6 > E E E C"„SLEEP 1„RETURN„„wins:„CLS„LOCATE 8, 3„PRINT "You chose Scissors..."„LOCATE 10, 4„PRINT "The computer chose Paper..."„LOCATE 12, 5„PRINT "Scissors cut Paper... You WON!!! ";„PRINT CHR$(1)„PLAY "MF O3 L6 C C C L4 < G L6 > E E E C"„SLEEP 1„RETURN„„winr:„CLS„LOCATE 8, 3„PRINT "You chose Rock..."„LOCATE 10, 4„PRINT "The computer chose Scissors..."„LOCATE 12, 5„PRINT "Rock breaks Scissors... You WON!!! ";„PRINT CHR$(1)„PLAY "MF O3 L6 C C C L4 < G L6 > E E E C"„SLEEP 1„RETURN„„losep:„CLS„LOCATE 8, 3„PRINT "You chose Rock..."„LOCATE 10, 4„PRINT "The computer chose Paper..."„LOCATE 12, 5„PRINT "Paper wraps Rock... please try again..."„PLAY "MF O1 L4 G G L8 G L4 G L4 B- L8 A L4 A L6 G L4 G L6 F+ L4 G"„SLEEP 2„RETURN„„loser:„CLS„LOCATE 8, 3„PRINT "You chose Scissors..."„LOCATE 10, 4„PRINT "The computer chose Rock..."„LOCATE 12, 5„PRINT "Rock breaks Scissors... please try again..."„PLAY "MF O1 L4 G G L8 G L4 G L4 B- L8 A L4 A L6 G L4 G L6 F+ L4 G"„SLEEP 2„RETURN„„loses:„CLS„LOCATE 8, 3„PRINT "You chose Paper..."„LOCATE 10, 4„PRINT "The computer chose Scissors..."„LOCATE 12, 5„PRINT "Scissors cut Paper... please try again..."„PLAY "MF O1 L4 G G L8 G L4 G L4 B- L8 A L4 A L6 G L4 G L6 F+ L4 G"„SLEEP 2„RETURN„„errortrap:„LOCATE 19, 19„PRINT "Please type (P)aper, (S)cissors, or (R)ock  "„LOCATE 21, 22„PRINT "Press the Q key if you wish to (Q)uit"„PLAY "MF L6 O1 C A B C A"„SLEEP 2„RETURN„„ending:„CLS„LOCATE 10, 5„PRINT "Thanks For Playing... Good Bye!"„END„„TieBallGame:„CLS„LOCATE 8, 3„PRINT "You chose "; Item$; "..."„LOCATE 10, 4„PRINT "The computer chose "; Item$; "..."„LOCATE 12, 5„PRINT "No Winner!!! ";„PRINT CHR$(1)„PLAY Charge$„SLEEP 1„RETURN„„„Kurt Kuzba                     SIMPLE DICE GAME               FidoNet QUIK_BAS Echo          09/95 (00:00)          QB, QBasic, PDS        78   2956     DICEGAME.BAS'_|_|_|   DICE_EX.BAS„'_|_|_|   A simple dice game in BASIC, using the RND function.„'_|_|_|   Released to the   Public Domain   by Kurt Kuzba„'_|_|_|„DECLARE SUB DrawDice (vl%, x%, y%)„RANDOMIZE (TIMER + INP(64)): play$ = "yes"„WHILE play$ = "yes"„   COLOR 7, 0: CLS„   LOCATE 3, 10: PRINT "SPACE to begin play, or RETURN to quit"„   k$ = "": WHILE k$ <> CHR$(13) AND k$ <> CHR$(32): k$ = INKEY$: WEND„   IF k$ = CHR$(13) THEN„      play$ = "no"„   ELSE„      player% = 0: computer% = 0„      COLOR 7, 0: CLS : COLOR 15, 1: LOCATE 9„      LOCATE , 23: PRINT "[][][][][][][][][][][][][][][][][][]"„      LOCATE , 23: PRINT "[]  Press SPACE to roll the die.  []"„      LOCATE , 23: PRINT "[]  Player #1       Computer      []"„      LOCATE , 23: PRINT "[]                                []"„      LOCATE , 23: PRINT "[]                                []"„      LOCATE , 23: PRINT "[]                                []"„      LOCATE , 23: PRINT "[]  Presently playing turn #      []"„      LOCATE , 23: PRINT "[][][][][][][][][][][][][][][][][][]"„      FOR turn% = 1 TO 10„         COLOR 15, 3„         LOCATE 11, 37: PRINT player%„         LOCATE 11, 52: PRINT computer%„         LOCATE 15, 52: PRINT turn%„         WHILE INKEY$ <> CHR$(32): WEND„         FOR roll% = 1 TO 20„            vl% = ((RND * 999) MOD 6) + 1: DrawDice vl%, 12, 30„         NEXT: player% = player% + vl%„         FOR roll% = 1 TO 20„            vl% = ((RND * 999) MOD 6) + 1: DrawDice vl%, 12, 45„         NEXT: computer% = computer% + vl%„      NEXT„   COLOR 15, 3„   LOCATE 11, 37: PRINT player%„   LOCATE 11, 52: PRINT computer%„   LOCATE 15, 52: PRINT turn%„   LOCATE 16, 23: COLOR 15, 1„   IF player% > computer% THEN„      PRINT "[]     You Won the Game!!         []"„   END IF„   IF player% < computer% THEN„      PRINT "[]     The Computer Won!!         []"„   END IF„   IF player% = computer% THEN„      PRINT "[]     It was a Tie Score.        []"„   END IF„   LOCATE , 23: PRINT "[]     Hit RETURN to continue     []"„   LOCATE , 23: PRINT "[][][][][][][][][][][][][][][][][][]"„   WHILE INKEY$ <> CHR$(13): WEND„   END IF„WEND„END„SUB DrawDice (vl%, x%, y%)„   COLOR 15, 1: LOCATE x%„   d$ = "                     "„   WAIT &H3DA, 8: WAIT &H3DA, 8, 8„   LOCATE , y%: PRINT LEFT$(d$, 7)„   LOCATE , y%: PRINT MID$(d$, 8, 7)„   LOCATE , y%: PRINT RIGHT$(d$, 7)„   SELECT CASE vl%„      CASE IS = 1: d$ = "          O          "„      CASE IS = 2: d$ = " O                 O "„      CASE IS = 3: d$ = " O        O        O "„      CASE IS = 4: d$ = " O   O         O   O "„      CASE IS = 5: d$ = " O   O    O    O   O "„      CASE IS = 6: d$ = " O   O  O   O  O   O "„   END SELECT„   COLOR 1, 7: LOCATE x%„   WAIT &H3DA, 8: WAIT &H3DA, 8, 8„   WAIT &H3DA, 8: WAIT &H3DA, 8, 8„   LOCATE , y%: PRINT LEFT$(d$, 7)„   LOCATE , y%: PRINT MID$(d$, 8, 7)„   LOCATE , y%: PRINT RIGHT$(d$, 7)„END SUB„Mike Beckman                   ROOM GAME                      mikebeckma@aol.com             Unknown Date           QB, QBasic, PDS        118  2584     ROOMGAME.BASOPTION BASE 1„'this makes the lbound of all arrays default to 1, which is much easier„'to work with over 0„„DIM room(57), north(57), east(57), south(57), west(57)„„CLS„l = 30„c = 1„WHILE c <= 57„   READ room(c), north(c), east(c), south(c), west(c)„   c = c + 1„WEND„„„rooms:„PRINT "Room:"; room(l), "n"; north(l), "e"; east(l), "s"; south(l), "w"; west(l)„„PRINT„PRINT "You Can go ";„„IF north(l) <> 0 THEN„   PRINT "(n)orth ";„END IF„IF east(l) <> 0 THEN„   PRINT "(e)ast ";„END IF„IF south(l) <> 0 THEN„   PRINT "(s)outh ";„END IF„IF west(l) <> 0 THEN„   PRINT "(w)est ";„END IF„PRINT "(q)uit (?)redraw"„INPUT "Which way"; d$„IF d$ = "?" THEN GOTO rooms:„d$ = UCASE$(d$)„IF d$ = "N" AND north(l) <> 0 THEN l = north(l)„IF d$ = "S" AND south(l) <> 0 THEN l = south(l)„IF d$ = "E" AND east(l) <> 0 THEN l = east(l)„IF d$ = "W" AND west(l) <> 0 THEN l = west(l)„IF d$ = "Q" THEN END ELSE GOTO rooms:„„„DATA 1,0,2,11,0„DATA 2,0,3,12,1„DATA 3,0,4,13,2„DATA 4,0,5,14,3„DATA 5,0,6,15,4„DATA 6,0,7,16,5„DATA 7,0,8,17,6„DATA 8,0,9,18,7„DATA 9,0,10,19,8„DATA 10,0,0,20,9„DATA 11,1,12,21,0„DATA 12,2,13,22,11„DATA 13,3,14,23,12„DATA 14,4,15,24,13„DATA 15,5,16,25,14„DATA 16,6,17,26,15„DATA 17,7,18,27,16„DATA 18,8,19,28,17„DATA 19,9,20,29,18„DATA 20,10,0,30,19„DATA 21,11,22,31,0„DATA 22,12,23,32,21„DATA 23,13,24,33,22„DATA 24,14,25,34,23„DATA 25,15,26,35,24„DATA 26,16,27,36,25„DATA 27,17,28,37,26„DATA 28,18,29,38,27„DATA 29,19,30,39,28„DATA 30,20,0,40,29„DATA 31,21,32,41,0„DATA 32,22,33,42,31„DATA 33,23,34,43,32„DATA 34,24,35,44,33„DATA 35,25,36,45,34„DATA 36,26,37,46,35„DATA 37,27,38,47,36„DATA 38,28,39,48,37„DATA 39,29,40,49,38„DATA 40,30,0,50,39„DATA 41,31,42,51,0„DATA 42,32,43,52,41„DATA 43,33,44,53,42„DATA 44,34,45,54,43„DATA 45,35,46,55,44„DATA 46,36,47,56,45„DATA 47,37,48,57,46„DATA 48,38,49,0,47„DATA 49,39,50,0,48„DATA 50,40,0,0,49„DATA 51,41,52,0,0„DATA 52,42,53,0,51„DATA 53,43,54,0,52„DATA 54,44,55,0,53„DATA 55,45,56,0,54„DATA 56,46,57,0,55„DATA 57,47,0,0,56„„'this building looks like...„'„' 1- 2- 3- 4- 5- 6- 7- 8- 9-10„' |  |  |  |  |  |  |  |  |  |„'11-12-13-14-15-16-17-18-19-20„' |  |  |  |  |  |  |  |  |  |„'21-22-23-24-25-26-27-28-29-30„' |  |  |  |  |  |  |  |  |  |„'31-32-33-34-35-36-37-38-39-40„' |  |  |  |  |  |  |  |  |  |„'41-42-43-44-45-46-47-48-49-50„' |  |  |  |  |  |  |„'51-52-53-54-55-56-57„'„'As of now, all the rooms are easily connected, but by changing a few numbers„'you can make someone have to take the long way around.„Rez Beheshti                   3D TIC-TAC-TOE                 x2ftp.oulu.fi                  Year of 1982           QB, QBasic, PDS        400  13952    3DTTT.BAS   10  '********************************************„20  '*                                          *„30  '*           3D TIC-TAC-TOE                 *„40  '*                                          *„50  '*       (C) 1982 Reza Beheshti             *„60  '*                                          *„70  '*  3504 Pence Ct.                          *„80  '*  Annandale, VA.  22003                   *„90  '*  (703) 560-4821                          *„100 '*                                          *„110 '********************************************„120 '„130 ' System requirments:„140 '„150 ' IBM PC 64K MEM. Min.„160 ' 1 Disk drive„170 ' Color/Graphic Board„180 ' 80 Column monitor (RGB Recommanded)„190 ' Run under "BASICA"„200 '„210 ' ------ ENJOY IT -----„220 '„230 '„240 '„250 '„260 SCREEN 1,0:KEY OFF„270 ON ERROR GOTO 3720„280 CLS:RANDOMIZE 12„290 DEFINT A-Y:DEFDBL Z:DIM AA(3000),A(514),NAM$(11),LOS(11),WIN(11),SCR(11)„300 COLOR 0,0:Y=1:N=0:T=0:W=0:X=0:INSTFL=0:DIFFL=0:WELFL=0„310 IF DIFFL<> 0 THEN 700„320 DIFFL=1„330 GOSUB 3700„340 DRAW "c1bl90bu30r30f3d20g3f3d25g3l30"„350 DRAW "u5r24e3u21l25u5r25u20l27u3"„360 DRAW "br60bd30r40u4l40d4"„370 DRAW "bu4br60nu25d28r30e4u45h4l30"„380 DRAW "bu4r32f7d47g7l36u61r4"„390 DRAW "c2bl120bd2e15r25f3d32g3f3d19g9"„400 DRAW"u24h3e3u20h4l9"„410 DRAW "br59bd26e15r36d9g10u4l40" '- shade„420 DRAW "bu29br55e15r34f7d60g11l8e7u49h7l35" ' d shade„430 PAINT(110,100),2 '3 shade„440 PAINT(100,110),1 ' 3 itself„450 PAINT(150,99),1  '- itself„460 PAINT(150,82),2  ' - shade„470 PAINT(187,82),1 ' d shade„480 PAINT(230,70),2  ' d itself„490 LOCATE 22,12,0:PRINT" TIC - TAC - TOE"„500 Y1=5:Y2=Y1+32:FL=1:GOSUB 980„510 GET(65,45)-(250,133),AA„520 FOR I=1 TO 800:NEXT„530 GOSUB 3700„540 PUT (65,45),AA,XOR„550 XX=65:YY=65„560 FOR KI=1 TO 3„570 FOR K=1 TO 3„580 PUT (XX,YY),AA:XX=XX+15:YY=YY-15:NEXT K„590 FOR I=1 TO 700:NEXT„600 XX=XX-15:YY=YY+15„610 GOSUB 3700„620 FOR K=1 TO 2„630 PUT (XX,YY),AA,XOR:XX=XX-15:YY=YY+15:NEXT K„640 NEXT KI„650 DIFFL=1„660 GOSUB 3700„670 CLS:LOCATE 12,7,0:PRINT"WELCOM TO 3D TIC-TAC-TOE"„680 LOCATE 24,3,0:PRINT "(C) 1982  Reza Beheshti"„690 FOR I=1 TO 2500:NEXT I„700 FOR I=1 TO 514:A(I)=0:NEXT I„710 GOSUB 1310„720 SCREEN 1,0,0:CLS„730 GOSUB 790„740 REM do human's move„750 REM see if tie game though„760 YZ=YZ+1:IF (YZ=9)*(V=1)+(YZ=33)*(V>1) THEN 3260„770 GOSUB 1660„780 GOTO 1750„790 COLOR 1,0„800 Y1=10:Y2=Y1+32:FL=1„810 GOSUB 980„820 Y1=50:Y2=Y1+32:FL=1„830 GOSUB 980„840 Y1=90:Y2=Y1+32:FL=1„850 GOSUB 980„860 Y1=130:Y2=Y1+32:FL=1„870 GOSUB 980„880 LOCATE 1,22,0:PRINT"1   2   3   4"„890 LOCATE 2,18,0:PRINT"1"„900 LOCATE 3,16:PRINT"2"„910 LOCATE 4,14:PRINT"3"„920 LOCATE 5,12:PRINT"4"„930 LOCATE 3,37:PRINT"(1)"„940 LOCATE 8,37:PRINT"(2)"„950 LOCATE 13,37:PRINT"(3)"„960 LOCATE 18,37:PRINT"(4)"„970 RETURN„980 LINE (160,Y1)-(272,Y1)„990 LINE -(205,Y2)„1000 LINE -(95,Y2)„1010 LINE -(160,Y1)„1020 IF FL=1 THEN PAINT (161,Y1+1),2,3„1030 LINE (188,Y1)-(123,Y2),3„1040 LINE (216,Y1)-(151,Y2),3„1050 LINE (244,Y1)-(179,Y2),3„1060 LINE (143,Y1+8)-(255,Y1+8),3„1070 LINE (126,Y1+16)-(238,Y1+16)„1080 LINE (110,Y1+24)-(222,Y1+24)„1090 RETURN„1100 END„1110 ' display X or O subroutine„1120 ULX=160                    'upper left coord. of board„1130 ULY=(BORD-1)*40+10            '„1140 ULY=ULY+(ROW-1)*8            'upper left coord. of box„1150 ULX=ULX+(COL-1)*28-(ROW-1)*16  '„1160 IF FG=0 GOTO 1220„1170 IF FG=2 GOTO 1270„1180 ' print an X„1190 LINE (ULX,ULY)-(ULX+11,ULY+8),3   ' ul-lr line„1200 LINE (ULX-16,ULY+8)-(ULX+27,ULY),3 ' ll-ur line„1210 RETURN„1220 ' Print an ellipse„1230 FOR P=1 TO 15„1240 COLOR  ,0:CIRCLE (ULX+5,ULY+4),8,1,,,.36„1250 CIRCLE (ULX+5,ULY+4),8,0,,,.36:NEXT P„1260 RETURN„1270 ' print the winning marks on screnn„1280 GOSUB 3700„1290 COLOR ,1:CIRCLE (ULX+5,ULY+4),8,0,,,.2„1300 RETURN„1310 SCREEN 0,0,0:COLOR 0,4,0„1320 WIDTH 80:CLS„1330 LOCATE 3,15,0:PRINT"WELCOME TO ":COLOR 1 :LOCATE 3,28„1340 PRINT"T I C  -  T A C  -  T O E"„1350 IF INSTFL<>0 THEN 1540„1360 COLOR 2:INSTFL=1„1370 PRINT:PRINT TAB(5)"My name is ";:COLOR 1:PRINT"WIZY ";„1380 COLOR 2:PRINT"and I will be your opponent"„1390 PRINT:INPUT"What is your name";NA$„1400 LOCATE 7,5,0:PRINT:PRINT"Do you need instructions ";NA$„1410 INPUT K$:K$=LEFT$(K$,1)„1420 IF K$="y" OR K$="n" OR K$="Y" OR K$="N" THEN 1460„1430 BEEP:PRINT "Please answer with a YES or NO":FOR I=1 TO 950:NEXT„1440 FOR J=8 TO 10:LOCATE J,1,0:PRINT"                                      ":NEXT J„1450 GOTO 1400„1460 IF K$="n" OR K$="N" THEN 1540„1470 PRINT:PRINT TAB(3)"3-D TIC-TAC-TOE is played on four boards. You must get 4 in"„1480 PRINT TAB(3)"a row to win. (Horizonal, Vertical, or Diagonally)"„1490 PRINT TAB(3)"There are 4 rows and 4 columns on each board, you enter your choice of"„1500 PRINT TAB(3)"box by a three digit number indicating the row, column, and board number"„1510 PRINT TAB(3)" i.e. [231] is row 2, column 3, on board 1"„1520 PRINT TAB(3)"You will play the 'X' and I will take 'O' and I let you play first"„1530 INSTFL=1„1540 LOCATE 18,3,0:PRINT"There are 2 versions available as follows:"„1550 PRINT TAB(5)"1) Moderately hard to beat"„1560 PRINT TAB(5)"2) Hardest to beat"„1570 LOCATE 21,3,0:PRINT NA$;" Which one would you like";:INPUT V„1580 IF V>0 AND V<3 THEN 1620„1590 BEEP:PRINT"Please chose 1 or 2 only":FOR I=1 TO 999:NEXT„1600 FOR K=21 TO 24:LOCATE K,1:PRINT"                                    ":NEXT„1610 GOTO 1570„1620 LOCATE 25,3,0:PRINT"One moment.."„1630 GOSUB 3360„1640 V=V+1:LOCATE 25,2,0:PRINT"Hit [ENTER] to start";:BEEP:INPUT XXX„1650 SCREEN 1,0,0:RETURN„1660 REM Input query starts here.„1670 CODE=0:LOCATE 23,3,0:INPUT"Which box [RCB]";BOX$„1680 GOSUB 1790   ' to subroutine for valid input check„1690 IF CODE=1 THEN 1670„1700 GOSUB 1980„1710 IF A(D)<>0 THEN 3600„1720 A(D)=1:FG=1:GOSUB 1110„1730 LOCATE 23,1,0:PRINT" I'm thinking .......       ":FOR I=1 TO 1500:NEXT I„1740 RETURN„1750 REM evaluate all moves„1760 GOSUB 2620„1770 GOSUB 2090                  ' do computers move„1780 GOTO 750                    ' to -> see if tie game though„1790 ' Subroutine to check VALID input from the player.„1800 LN=LEN(BOX$):IF LN=3 THEN 1840„1810 BEEP:LOCATE 23,24,0:BEEP:PRINT"Bad Input":FOR I=1 TO 1500:NEXT„1820 LOCATE 23,15,0:PRINT"                    "„1830 CODE=1:RETURN„1840 R$=MID$(BOX$,1,1):ROW=VAL(R$)„1850 C$=MID$(BOX$,2,1):COL=VAL(C$)„1860 B$=MID$(BOX$,3,1):BORD=VAL(B$)„1870 RER$=" ":CER$=" ":BER$=" "„1880 IF ROW<1 OR ROW>4 THEN RER$=" ROW   "„1890 IF COL<1 OR COL>4 THEN CER$=" COLUMN"„1900 IF BORD<1 OR BORD>4 THEN BER$=" BOARD "„1910 IF RER$=" " AND CER$=" " AND BER$=" " THEN RETURN„1920 CODE=1„1930 LOCATE 23,1,0„1940 BEEP:PRINT"Invalid  "+RER$+CER$+BER$+"    "„1950 FOR I=1 TO 2000:NEXT:LOCATE 24,1,0„1960 LOCATE 23,1,0:PRINT"                                 ":RETURN„1970 ' **** Subroutine to convert to RCB input„1980 CON1=(BORD-1)*16„1990 CON2=(COL-1)*4„2000 D=CON1+CON2+ROW„2010 RETURN„2020 ' ******* Subroutine to convert from RCB„2030 ZUM1=D/16:BORD=INT(ZUM1+.9899999)„2040 B1=BORD-1:B2=B1*16:B3=D-B2:ZUM1=B3/4:COL=INT(ZUM1+.9899999)„2050 B5=COL-1:B6=B5*4:ROW=B3-B6„2060 RETURN„2070 REM„2080 REM---main logic subroutines---„2090 REM make computer move.„2100 REM„2110 REM see if we have a must block condition„2120 IF (YZ<3)*(V>1)+(YZ=1) THEN 2560„2130 IF Q=0 THEN 2200„2140 FOR G=0 TO 3„2150 E=A(65+G+(Q-1)*4)„2160 REM find empty box to block with„2170 IF A(E)=0 THEN K=E : G=4„2180 NEXT G„2190 GOTO 2590„2200 REM clear box value array„2210 FOR I=1 TO 64 : A(450+I)=0:NEXT I„2220 REM if u=0 then cats game„2230 U=0„2240 REM compute value for each box as it appears in the win array„2250 FOR I=1 TO (-10*(V=1)-76*(V<>1)) STEP (1-3*(V=2))„2260 B=A(370+I)„2270 REM if value of win combo is zero then forget it„2280 IF B=0 THEN U=1:GOTO 2460„2290 REM get strategy value of this win combo in f„2300 F=0„2310 IF (B=1) + (B=5) THEN F=1„2320 IF B=2 THEN F=4„2330 IF B=3 THEN STOP„2340 IF B=10 THEN F=2„2350 IF F=0 THEN 2460„2360 U=1„2370 REM increment each box in win combo by win value„2380 E=(I-1)*4+65„2390 FOR G=0 TO 3„2400 REM get box number in c„2410 C=A(E+G)„2420 REM see if this box is used„2430 IF A(C) <> 0 THEN 2450„2440 A(450+C)=A(450+C)+F„2450 NEXT G„2460 NEXT I„2470 REM see if cats game„2480 IF (U=0)*(V<>2) THEN 3260„2490 REM get best box now„2500 L=0„2510 FOR I=1 TO 64„2520 IF A(450+I)>L THEN L=A(450+I):K=I„2530 NEXT I„2540 REM see if any move found. if not do a random move„2550 IF L>0 THEN 2590„2560 GOSUB 3660„2570 IF A(I)=0 THEN K=I:GOTO 2590„2580 GOTO 2560„2590 REM do computer move in k„2600 GOSUB 2970„2610 RETURN„2620 REM„2630 REM evaluate all moves„2640 REM„2650 Q=0:R=0„2660 REM skip first move on version 1„2670 IF (YZ<3)*(V>1) THEN 2870„2680 K1LL=0 'if set then we are to get out of do loop„2690 FOR I=1 TO (V<>1)*-76+(V=1)*-10„2700 IF K1LL=1 THEN 2840  'human won, we done! if wizy won .                        keep checking to make sure human didn't win first.„2710 E=(I-1)*4+65„2720 F=370+I„2730 C=0„2740 FOR J=0 TO 3„2750 C=C+A(A(J+E))„2760 NEXT J„2770 REM see if wizy lost„2780 A(F)=C„2790 IF C=4 THEN R=I:K1LL=1:GOTO 2840„2800 REM must block if human has three in a row„2810 IF C=3 THEN Q=I„2820 REM see if comy won„2830 IF C=15 THEN R=I:K1LL=2:GOTO 2840„2840 NEXT I„2850 IF K1LL=1 THEN 3230„2860 IF K1LL=2 THEN 2890„2870 RETURN„2880 REM wizy won. find empty box!„2890 FOR H=0 TO 3„2900 C=A(65+H+(R-1)*4)„2910 IF A(C)=0 THEN K=C:H=4„2920 NEXT H„2930 REM do wizy move„2940 GOSUB 2970„2950 REM wizy won.„2960 GOTO 3050„2970 REM„2980 REM do wizy move specify in k„2990 REM„3000 D=K:A(D)=5„3010 GOSUB 2020„3020 FG=0:GOSUB 1110„3030 LOCATE 23,1,0:PRINT"COMPY takes box ";ROW;COL;BORD:FOR I=1 TO 4000:NEXT„3040 GOSUB 3630:RETURN„3050 REM„3060 REM wizy won/lost„3070 REM„3080 FG=2:GOSUB 3300    ' subroutine to mark thru winning boxes„3090 LOCATE 23,1,0:PRINT"HURRAH I WON !!!";:X=X+1:FOR I=1 TO 9000:NEXT„3100 CLS:LOCATE 4,1,0:PRINT"Wins: ";W;" Losses: ";X;" Ties: ";T„3110 LOCATE 7,2,0:PRINT"Do you want to play again ";NA$„3120 INPUT AN$:AN$=LEFT$(AN$,1)„3130 IF AN$="y" OR AN$="Y" THEN 310„3140 IF AN$="n" OR AN$="N" THEN 3180„3150 BEEP:LOCATE 10,3,0:PRINT"Yes/No please":FOR I=1 TO 1500:NEXT„3160 LOCATE 10,3,0:PRINT"               "„3170 GOTO 3110„3180 CLS:LOCATE 9,1,0:PRINT"I liked playing with you..."„3190 PRINT:PRINT"See you soon!"„3200 LOCATE 23,1,0„3210 CLS:RUN "MENU.PGM"„3220 REM wizy lost„3230 FG=2:GOSUB 3300  ' *********  mark the winning boxes„3240 LOCATE 23,1,0:PRINT"BOO-HOO I LOST .....":W=W+1:FOR I=1 TO 9000:NEXT I„3250 GOTO 3100„3260 LOCATE 23,1,0:PRINT"Tie game ...":FOR I=1 TO 9000:NEXT I„3270 GOSUB 3630„3280 GOTO 3100„3290 REM„3300 REM mark thru wins„3310 REM„3320 FOR H=0 TO 3:D=A(65+H+(R-1)*4)„3330 GOSUB 2020  ' convert d to rcb„3340 F=2:GOSUB 1110  ' mark thru wins„3350 NEXT H:RETURN„3360 REM„3370 REM setup win array„3380 REM„3390 RESTORE„3400 FOR I=1 TO 10:FOR C=0 TO 3:READ A(65+C+(I-1)*4):NEXT C:NEXT I„3410 FOR I=57 TO 76:FOR C=0 TO 3„3420 READ A(65+C+(I-1)*4)„3430 NEXT C:NEXT I„3440 FOR I=1 TO 3:FOR C=1 TO 10:FOR E=0 TO 3„3450 A(E+65+(C+I*10-1)*4)=A(E+65+(C-1)*4)+16*I„3460 NEXT E:NEXT C:NEXT I„3470 FOR I=41 TO 56:FOR C=0 TO 3„3480 A(65+C+(I-1)*4)=C*16+I-40:NEXT C:NEXT I„3490 RETURN„3500 DATA 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,5,9,13,2„3510 DATA 6,10,14„3520 DATA 3,7,11,15,4,8,12,16,1,6,11,16,4,7,10,13,1,22,43,64„3530 DATA 5,22,39,56,9,26,43,60,13,26,39,52,2,22,42,62,14,26„3540 DATA 38,50„3550 DATA 3,23,43,63,15,27,39,51,4,23,42,61,8,23,38,53,12,27„3560 DATA 42,57,16,27,38,49„3570 DATA 1,21,41,61,1,18,35,52,4,19,34,49,4,24,44,64„3580 DATA 13,25,37,49,13,30,47,64,16,31,46,61,16,28,40,52„3590 REM„3600 LOCATE 23,1,0:BEEP:PRINT"Box already taken!":FOR I=1 TO 1500:NEXT I„3610 GOSUB 3630„3620 GOTO 1670„3630 ' subroutine to clean up line 23 on screen„3640 LOCATE 23,1,0:PRINT"                              "„3650 RETURN„3660 Z1=(RND*100)„3670 I=INT(Z1):IF I<1 OR I>64 THEN 3660„3680 RETURN„3690 REM Subroutine to play the music„3700 PLAY "MBL12T128O3CDEFGABFEDCBADO4C"„3710 RETURN„3720 REM error handling routine„3730 CLS„3740 IF ERR=53 THEN 3830„3750 IF ERR=61 THEN 3860„3760 IF ERR=70 THEN 3910„3770 IF ERR=71 THEN 3940„3780 IF ERR=73 THEN 3970„3790 XX=ERR„3800 PRINT:PRINT"UNEXPECTED error number [";XX;"]"„3810 PRINT:PRINT"Please look it up in your basic manual"„3820 PRINT" in Appendix A.":END„3830 PRINT" Seems like you have the wrong disk in drive 'A`"„3840 PRINT "Please double check it."„3850 GOTO 3990„3860 PRINT"Opps... Your disk space is full, please make "„3870 PRINT" sure you have the right diskette in drive 'A`"„3880 PRINT" or you have to erase some data from the diskette"„3890 PRINT" in drive 'A` before you could save any more data on it."„3900 GOTO 3990„3910 PRINT" Diskette write protection notch is covered and I can "„3920 PRINT"not record your score unless you remove it."„3930 GOTO 3990„3940 PRINT" Drive 'A` is not ready, please insert the right "„3950 PRINT "diskette in, or make sure the drive door is closed."„3960 GOTO 3990„3970 PRINT" Advanced BASIC is required. Please load BASICA and rerun"„3980 END„3990 PRINT:PRINT„4000 end„Frederick Volking              MAD MAD MAD MAZES              x2ftp.oulu.fi                  Year of 1989           QB, QBasic, PDS        635  22555    MADMAZES.BASCLS„LOCATE 25,1„PRINT "MAD MAD MAD MAZES!   Copyright 1989 Frederick Volking   Version: 1.0";„„LOCATE 13,20 : PRINT "         <C> = Color Graphics Adapter (CGA)";„LOCATE 14,20 : PRINT "         <E> = Enhanced Graphics Adapter (EGA)";„LOCATE 15,20 : PRINT "         <V> = Video Graphics Adapter (VGA)";„LOCATE 11,20 : PRINT "Which Graphics Adapter? : ";„DO : GMode$ = INKEY$ : LOOP WHILE (GMODE$ = "")„IF GMode$ = "" THEN END„GMode$ = UCASE$(GMode$)„IF INSTR("CEV",Gmode$) = 0 THEN END„IF GMode$ = "C" THEN GMode% = 2„IF GMode$ = "E" THEN GMode% = 8„IF GMode$ = "V" THEN GMode% = 12„'================================== Initialize Hardware & Random Seed Generator„Screen GMode%„ScoreFile$ = "MAZESCOR.DAT"„DEFINT A-Z„K% = VAL(MID$(DATE$,4,2))+VAL(RIGHT$(TIME$,2))+VAL(LEFT$(TIME$,2))+VAL(MID$(TIME$,4,2))„Randomize K%„'============================================ Define Static Substitution Macros„%FALSE  = 0„%TRUE   = 1„%UP     = 1„%LEFT   = 2„%DOWN   = 3„%RIGHT  = 4„„%OUP    = 1„%ORIGHT = 2„%ODOWN  = 4„%OLEFT  = 8„%TUP    = 16„%TRIGHT = 32„%TDOWN  = 64„%TLEFT  = 128„'====================================================== Define Default settings„IF GMode% = 2 THEN„   Xaxis% = 191 : Yaxis% = 639„END IF„IF GMode% = 8 THEN„   Xaxis% = 191 : Yaxis% = 639 : PcolorON% = 3„END IF„IF GMode% = 12 THEN„   Xaxis% = 380 : Yaxis% = 639 : PcolorON% = 3„END IF„DIM STATIC HighTimes&(10),Whose(10)„IF GMode% = 2 THEN„   TokenColor% = 1„   CrumbColor% = 1„   WallColor% = 1„ELSE„   TokenColor% = 12„   CrumbColor% = 11„   WallColor%  = 7„   GOSUB SetUpColors„END IF„Cmd$ = UCASE$(COMMAND$)„CountDown% = %TRUE„'===================================================== Main Program Loop Begins„Cycle% = 1„WHILE (Cycle% < 11)„   CLS„   SELECT CASE Cycle%„      CASE =  1 : CellSize% = 30„      CASE =  2 : CellSize% = 25„      CASE =  3 : CellSize% = 20„      CASE =  4 : CellSize% = 15„      CASE =  5 : CellSize% = 12„      CASE =  6 : CellSize% = 9„      CASE =  7 : CellSize% = 7„      CASE =  8 : CellSize% = 5„      CASE =  9 : CellSize% = 3„      CASE = 10 : CellSize% = 2„   END SELECT„   GOSUB PrintLine25„   '=========================================== Calculate global default values„   CellsTall%   = ( FIX(Xaxis% / CellSize%))„   CellsWide%   = ( FIX((Yaxis% / CellSize%) / 2 ))„   FrameBottom% = (CellsTall% * CellSize%)„   FrameRight%  = (CellsWide% * (CellSize% * 2))„   WallsToDraw% = ((CellsTall%+1) * (CellsWide%+1)) - ((CellsTall%+CellsWide%) * 2 )„   '============================================== Dimension appropriate arrays„   DIM DYNAMIC Walls%(CellsTall%,CellsWide%)„   '=================================================== Initialize array values„   FOR C% = 0 to CellsWide%„      Walls%(0,C%) = 1„      Walls%(CellsTall%,C%) = 1„   NEXT„   FOR C% = 0 to CellsTall%„      Walls%(C%,0) = 1„      Walls%(C%,CellsWide%) = 1„   NEXT„   '================================================================= Draw maze„   GOSUB DrawMaze„   ERASE Walls%„   DIM DYNAMIC Pfield%(CellsTall%+1,CellsWide%+1)„   '============================================================ One Maze Cycle„   DoorOut% = (FnR%(CellsTall%-2))+1„   LINE (0,DoorOut%*CellSize%) - (0,(DoorOut%*CellSize%)+(CellSize%)), 0„   OriginX% = (FnR%(CellsTall%-2))+1„   CurX% = OriginX%„   CurY% = CellsWide%„   LastCurX% = CurX%„   LastCurY% = CurY%„   IF Cmd$ = "DEMO"  THEN„      KeepGoing% = %FALSE„      AutoSolve% = %TRUE„   ELSE„      KeepGoing% = %TRUE„      AutoSolve% = %FALSE„   END IF„   INCR DoorOut%„   MazeIsDrawn% = %TRUE„   BeginTimer! = TIMER„   WHILE (KeepGoing%)„      IF PField%(CurX%,CurY%) = 1 THEN„         CALL DrawPiece(LastCurX%,LastCurY%,0,0)„         PField%(LastCurX%,LastCurY%) = 0„      ELSE„         CALL DrawPiece(LastCurX%,LastCurY%,TokenColor%,1)„      END IF„      CALL DrawPiece(CurX%,CurY%,TokenColor%,0)„      PField%(CurX%,CurY%) = 1„      LastCurX% = CurX%„      LastCurY% = CurY%„      DO„         K$ = INKEY$„         GOSUB ShowElapsed„      LOOP WHILE (K$ = "")„      IF (LEN(K$) = 2) THEN K% = 1000 ELSE K% = 0„      K% = K% + ASC(RIGHT$(K$,1))„      Xnext% = CurX%„      Ynext% = CurY%„      SELECT CASE K%„         CASE 1072 : DECR Xnext%           ' Up„         CASE 1077 : INCR Ynext%           ' Right„         CASE 1080 : INCR Xnext%           ' Down„         CASE 1075 : DECR Ynext%           ' Left„         CASE   27 : GOSUB ExitRequested   ' ESC„      END SELECT„      IF ((Xnext% = DoorOut%) AND (Ynext% = 0)) THEN„         KeepGoing% = %FALSE„      ELSE„         IF FnBlocked%(CurX%,CurY%,XNext%,Ynext%) THEN„            XNext% = CurX%„            YNext% = CurY%„         END IF„      END IF„      CurX% = Xnext%„      CurY% = Ynext%„   WEND„   MazeIsDrawn% = %FALSE„   IF AutoSolve% THEN„      BeginTimer! = TIMER„      GOSUB YouDoIt„      GOSUB ShowTotalMazeTime„      IF Cmd$ = "DEMO" THEN„         W% = FnStartTimer%(10)„         WHILE FnSecondsElapsed%(25,70) > 0„            IF INKEY$ > "" THEN GOSUB ExitRequested„         WEND„      ELSE„         LOCATE 25,1 : PRINT SPACE$(79);„         LOCATE 25,21 : PRINT "Press <ANY KEY> to return to DOS";„         WHILE INKEY$ = "" : WEND„         CLS„         END„     END IF„   ELSE„      GOSUB ShowTotalMazeTime„   END IF„   ERASE Pfield%„   INCR Cycle%„   IF Cmd$ = "DEMO" THEN„      IF Cycle% = 11 THEN Cycle% = 1„   END IF„WEND„LOCATE 25,1 : PRINT SPACE$(79);„LOCATE 25,21 : PRINT "Press <ANY KEY> to return to DOS";„WHILE INKEY$ = "" : WEND„END 'of main program loop„'==============================================================================„'===================== Functions & Subroutines Begin ==========================„'==============================================================================„'================================================ Define Random Number Function„DEF FnR%(X%) = INT(RND * X%) + 1„'=================================================== Automatically solve a maze„YouDoIt:„   '========================================= Erase old path & return to origin„   KeepBacking% = %True„   WHILE KeepBacking%„      PField%(CurX%,CurY%) = 0„      CALL DrawPiece(CurX%,CurY%,0,0)„      IF ((CurX% = OriginX%) AND (CurY% = CellsWide%)) THEN„         KeepBacking% = %FALSE„      ELSE„         Trim% = 0„         IF FnBlocked%(CurX%,CurY%,CurX%-1,CurY%  ) = %FALSE THEN _„            IF (PField%(CurX%-1,CurY%  ) = 1) THEN Trim% = %UP„         IF FnBlocked%(CurX%,CurY%,CurX%  ,CurY%-1) = %FALSE THEN _„            IF (PField%(CurX%  ,CurY%-1) = 1) THEN Trim% = %LEFT„         IF FnBlocked%(CurX%,CurY%,CurX%+1,CurY%  ) = %FALSE THEN _„            IF (PField%(CurX%+1,CurY%  ) = 1) THEN Trim% = %DOWN„         IF FnBlocked%(CurX%,CurY%,CurX%  ,CurY%+1) = %FALSE THEN _„            IF (PField%(CurX%  ,CurY%+1) = 1) THEN Trim% = %RIGHT„         SELECT CASE Trim%„            CASE %UP    : DECR CurX%„            CASE %LEFT  : DECR CurY%„            CASE %DOWN  : INCR CurX%„            CASE %RIGHT : INCR CurY%„         END SELECT„      END IF„   WEND„   '================================================================ Solve Maze„   AllTested% = %TUP + %TRIGHT + %TDOWN + %TLEFT„   PField%(CurX%,CurY%) = %ORIGHT + %TRIGHT„   NotFoundYet% = %TRUE„   MazeIsDrawn% = %FALSE„   IF Cmd$ = "DEMO" THEN„      CALL DrawPiece(CurX%,CurY%,TokenColor%,0)„      W% = FnStartTimer%(10)„      WHILE FnSecondsElapsed%(25,70) > 0„         IF INKEY$ > "" THEN GOSUB ExitRequested„      WEND„   END IF„   DO„      IF INKEY$ > "" THEN GOSUB ExitRequested„      GOSUB ShowElapsed„      IF ((PField%(LastCurX%,LastCurY%) AND AllTested) = AllTested) THEN _„         CALL DrawPiece(LastCurX%,LastCurY%,0,0) _„      ELSE CALL DrawPiece(LastCurX%,LastCurY%,TokenColor%,1)„      CALL DrawPiece(CurX%,CurY%,TokenColor%,0)„      LastCurX% = CurX%„      LastCurY% = CurY%„„      IF ((PField%(CurX%,CurY%) AND %TUP) <> %TUP) THEN„         IF FnBlocked%(CurX%,CurY%,CurX%-1,CurY%) = %TRUE THEN„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TUP„         ELSE„            IF ((PField%(CurX%-1,CurY%) AND AllTested%) = AllTested%) THEN _„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TUP„         END IF„      END IF„„      IF ((PField%(CurX%,CurY%) AND %TDOWN) <> %TDOWN) THEN„         IF FnBlocked%(CurX%,CurY%,CurX%+1,CurY%) = %TRUE THEN„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TDOWN„         ELSE„            IF ((PField%(CurX%+1,CurY%) AND AllTested%) = AllTested%) THEN _„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TDOWN„         END IF„      END IF„„      IF ((PField%(CurX%,CurY%) AND %TLEFT) <> %TLEFT) THEN„         IF FnBlocked%(CurX%,CurY%,CurX%,CurY%-1) = %TRUE THEN„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TLEFT„         ELSE„            IF ((PField%(CurX%,CurY%-1) AND AllTested%) = AllTested%) THEN _„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TLEFT„         END IF„      END IF„„      IF ((PField%(CurX%,CurY%) AND %TRIGHT) <> %TRIGHT) THEN„         IF FnBlocked%(CurX%,CurY%,CurX%,CurY%+1) = %TRUE THEN„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TRIGHT„         ELSE„            IF ((PField%(CurX%,CurY%+1) AND AllTested%) = AllTested%) THEN _„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TRIGHT„         END IF„      END IF„„      IF ((PField%(CurX%,CurY%) AND AllTested) = AllTested) THEN„         IF ((PField%(CurX%,CurY%) AND %ORIGHT) = %ORIGHT) THEN„            INCR CurY%„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TLEFT„         ELSE„            IF ((PField%(CurX%,CurY%) AND %OLEFT) = %OLEFT) THEN„               DECR CurY%„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TRIGHT„            ELSE„               IF ((PField%(CurX%,CurY%) AND %OUP) = %OUP) THEN„                  DECR CurX%„                  PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TDOWN„               ELSE„                  INCR CurX%„                  PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TUP„               END IF„            END IF„         END IF„      ELSE„         IF ((PField%(CurX%,CurY%) AND %TRIGHT) <> %TRIGHT) THEN„            INCR CurY%„            PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TLEFT + %OLEFT„         ELSE„            IF ((PField%(CurX%,CurY%) AND %TLEFT) <> %TLEFT) THEN„               DECR CurY%„               PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TRIGHT + %ORIGHT„            ELSE„               IF ((PField%(CurX%,CurY%) AND %TUP) <> %TUP) THEN„                  DECR CurX%„                  PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TDOWN + %ODOWN„               ELSE„                  INCR CurX%„                  PField%(CurX%,CurY%) = PField%(CurX%,CurY%) + %TUP + %OUP„               END IF„            END IF„         END IF„      END IF„      IF ((CurX% = DoorOut%) AND (CurY% = 1)) THEN NotFoundYet% = %FALSE„   LOOP WHILE (NotFoundYet% = %TRUE)„   CALL DrawPiece(LastCurX%,LastCurY%,TokenColor%,1)„   CALL DrawPiece(CurX%,CurY%,TokenColor%,0)„   IF Cmd$ <> "DEMO" THEN SOUND 500,10„RETURN„'=========================================== Determine if XY to XY move is Okay„DEF FnBlocked%(OldX%,OldY%,NewX%,NewY%)„   SHARED CellSize%,CellsTall%,CellsWide%„   LOCAL TestDirect%,XPoint%,YPoint%„   IF ((NewX%<1) OR (NewX%>CellsTall%) OR _„       (NewY%<1) OR (NewY%>CellsWide%)) THEN„      FnBlocked% = %TRUE„   ELSE„      IF OldX% = NewX% THEN„         IF OldY% > NewY% THEN TestDirect% = %LEFT ELSE TestDirect% = %RIGHT„      ELSE„         IF OldX% > NewX% THEN TestDirect% = %Up ELSE TestDirect% = %DOWN„      END IF„      Xpoint% = ((CurX% - 1) *  CellSize%) + 1„      Ypoint% = ((CurY% - 1) * (CellSize% * 2)) + 1„      SELECT CASE TestDirect%„         CASE %UP    : DECR Xpoint%                      ' Up„         CASE %RIGHT : Ypoint%=Ypoint%+((CellSize%*2)-1) ' Right„         CASE %DOWN  : Xpoint%=Xpoint%+(CellSize%-1)     ' Down„         CASE %LEFT  : DECR Ypoint%                      ' Left„      END SELECT„      IF POINT(Ypoint%,Xpoint%) THEN FnBlocked% = %TRUE ELSE FnBlocked% = %FALSE„   END IF„END DEF„'==================================================================== Draw Maze„DrawMaze:„   LINE (0,0) - (FrameRight%, FrameBottom%), WallColor%, B„   HalfWallsToDraw% = int(WallsToDraw% / 2)„   WHILE (WallsToDraw% > HalfWallsToDraw%)„      IF INKEY$>"" THEN GOSUB ExitRequested„      DO„         MostX% = FnR%(CellsTall%)„         MostY% = FnR%(CellsWide%)„      LOOP WHILE (Walls%(MostX%,MostY%) = 1)„      GOSUB DrawWall„   WEND„   CyclicMostX% = 1„   CyclicMostY% = 1„   WHILE (WallsToDraw% > 0)„      IF INKEY$>"" THEN GOSUB ExitRequested„      DO„         INCR CyclicMostY%„         IF CyclicMostY% = CellsWide% THEN„            CyclicMostY% = 1„            INCR CyclicMostX%„            IF CyclicMostX% = CellsTall% THEN CyclicMostX% = 1„         END IF„      LOOP WHILE (Walls%(CyclicMostX%,CyclicMostY%) = 1)„      MostX% = CyclicMostX%„      MostY% = CyclicMostY%„      GOSUB DrawWall„   WEND„RETURN„'=========================================================== Draw players piece„SUB DrawPiece(AtX%, AtY%, UseColor%, DroppingMark%)„   LOCAL  TopXcoord%,TopYcoord%,BotXcoord%,BotYCoord%,CenterY%,CenterX%,Rads%„   SHARED CellSize%, PColorON%, CrumbColor%„   TopXcoord% = ((AtX% - 1) *  CellSize%) + 1„   TopYcoord% = ((AtY% - 1) * (CellSize% * 2)) + 1„   BotXcoord% = (TopXcoord% + CellSize%) - 2„   BotYcoord% = (TopYcoord% + (CellSize% * 2)) - 2„   IF DroppingMark% THEN„      LINE (TopYcoord%, TopXcoord%) - (BotYcoord%, BotXcoord%), 0, BF„      CenterY% = TopYcoord%+CellSize%„      CenterX% = TopXcoord%+FIX(CellSize%/2)„      Rads% = INT(CellSize% / 3)„      IF CellSize% = 2 THEN„         PSET (TopYcoord%+1, TopXCoord%), CrumbColor%„      ELSE„         IF Rads% < 3 THEN„            PSET (CenterY%, CenterX%), CrumbColor%„         ELSE„            CIRCLE (CenterY%, CenterX%), Rads%, CrumbColor%„         END IF„      END IF„   ELSE„      LINE (TopYcoord%, TopXcoord%) - (BotYcoord%, BotXcoord%), UseColor%, BF„   END IF„END SUB„'================================================== Print Title & Current Level„PrintLine25:„   LOCATE 25,1„   PRINT SPACE$(79);„   LOCATE 25,1„   PRINT "MAD MAZES!  Copyright 1989 Frederick Volking  V:1.0  Level: ";„   PRINT USING "## of 10";Cycle%;„RETURN„'==================================================================== Draw Wall„DrawWall:„      FOR Which% = 1 TO 0 STEP (-1)„         Direc% = FnR%(4)„         InitMostX% = MostX%„         InitMostY% = MostY%„         WHILE (Walls%(MostX%,MostY%) = Which%)„            SELECT CASE Direc%„               CASE = 1 : DECR MostX%  'Up„               CASE = 2 : INCR MostY%  'Right„               CASE = 3 : INCR MostX%  'Down„               CASE = 4 : DECR MostY%  'Left„            END SELECT„            IF ((MostX% < 0) OR (MostX% > CellsTall%) OR _„                (MostY% < 0) OR (MostY% > CellsWide%)) THEN„                IF Direc% = 4 THEN Direc% = 1 _„                   ELSE INCR Direc%„                MostX% = InitMostX%„                MostY% = InitMostY%„             END IF„         WEND„      NEXT„      SELECT CASE Direc%„         CASE = 1 : LastDirec% = 3  'Up„         CASE = 2 : LastDirec% = 4  'Right„         CASE = 3 : LastDirec% = 1  'Down„         CASE = 4 : LastDirec% = 2  'Left„      END SELECT„      LastX% = MostX% * CellSize%„      LastY% = (MostY% * 2) * CellSize%„      DeadEndReached% = %FALSE„      DO„         Cycles% = 0„         KeepLooking% = %TRUE„         DO„            INCR Cycles%„            NewX% = LastX%„            NewY% = LastY%„            Direc% = LastDirec%„            Turn% = (FnR%(3)-2)„            IF Turn%<>0 THEN„               Direc% = Direc% + Turn%„               IF Direc% > 4 THEN Direc% = 1„               IF Direc% < 1 THEN Direc% = 4„            END IF„            SELECT CASE Direc%„               CASE = 1 : NewX% = LastX% -  CellSize%       'up„               CASE = 2 : NewY% = LastY% + (CellSize% * 2)  'right„               CASE = 3 : NewX% = LastX% +  CellSize%       'down„               CASE = 4 : NewY% = LastY% - (CellSize% * 2)  'left„            END SELECT„            IF Cycles% < 10 THEN„               IF ((NewX% => FrameBottom%) OR (NewX% <= 0) OR _„                   (NewY% => FrameRight% ) OR (NewY% <= 0) ) THEN„                  KeepLooking% = %TRUE„               ELSE„                  XC% = FIX(NewX% / CellSize%)„                  YC% = FIX(NewY% / (CellSize% * 2))„                  IF Walls%(XC%,YC%) = 0 THEN KeepLooking% = %FALSE _„                     ELSE KeepLooking% = %TRUE„               END IF„            ELSE„               KeepLooking% = %FALSE„            END IF„         LOOP WHILE (KeepLooking% = %TRUE)„         IF Cycles% < 10 THEN„            LINE (LastY%,LastX%) - (NewY%,NewX%), WallColor%„            Walls%(XC%,YC%) = 1„            DECR WallsToDraw%„            LastX% = NewX%„            LastY% = NewY%„            LastDirec% = Direc%„            DeadEndReached% = %FALSE„         ELSE„            DeadEndReached% = %TRUE„         END IF„      LOOP WHILE (DeadEndReached% = %FALSE)„RETURN„'============================================================== Exit Requested?„ExitRequested:„   LOCATE 25,1 : PRINT SPACE$(79);„   LOCATE 25,34„   PRINT "Quit? (Y/N) : ";„   DO„      K$ = UCASE$(INKEY$)„   LOOP WHILE ((K$ <> "Y") AND (K$ <> "N") AND (K$ <> CHR$(27)))„   IF K$ = "Y" THEN„      IF MazeIsDrawn% = %TRUE THEN„         LOCATE 25,1 : PRINT SPACE$(79);„         LOCATE 25,25„         PRINT "Shall I Solve It? (Y/N) : ";„         DO„            K$ = UCASE$(INKEY$)„         LOOP WHILE ((K$ <> "Y") AND (K$ <> "N") AND (K$ <> CHR$(27)))„         IF K$ = "N" THEN„            SCREEN 0,0„            CLS„            END„         END IF„         IF K$ = "Y" THEN„            AutoSolve% = %TRUE„            KeepGoing% = %FALSE„         END IF„      ELSE„         SCREEN 0,0„         CLS„         END„      END IF„   END IF„   GOSUB PrintLine25„RETURN„'============================= Display Total elapsed playing time for this maze„ShowElapsed:„   TimerNow! = TIMER„   TotTime! = TimerNow! - BeginTimer!„   Minutes% = FIX(TotTime! / 60)„   Seconds% = INT(TotTime! - (Minutes% * 60))„   IF Seconds% <> LastSeconds% THEN„      LOCATE 25, 73, 0„      PRINT USING "###";Minutes%;„      PRINT ":";„      PRINT RIGHT$(STR$(Seconds%+100),2);„      LastSeconds% = Seconds%„   END IF„RETURN„'======================================= Display Time required to complete maze„ShowTotalMazeTime:„      TimerNow! = TIMER„      TotTime!  = TimerNow! - BeginTimer!„      Minutes%  = FIX(TotTime! / 60)„      LSeconds! = TotTime! - (Minutes% * 60)„      LOCATE 25,1 : PRINT SPACE$(79);„      LOCATE 25,1„      IF AutoSolve% = %TRUE THEN PRINT "COMPUTER's "; _„         ELSE PRINT "Your ";„      PRINT "time to complete level";Cycle%;"was: ";„      IF Minutes% > 0 THEN PRINT Minutes%; "Minute(s) ";„      PRINT USING "##.# Seconds  - Press <ANY KEY>";LSeconds!;„      IF Cmd$ <> "DEMO" THEN„         WHILE INKEY$ = "" : WEND„      END IF„RETURN„'====================================================== ReDefine and Set Colors„SetUpColors:„   CLS„   DIM DYNAMIC TempColor%(3)„   TempColor%(1) = WallColor%„   TempColor%(2) = TokenColor%„   TempColor%(3) = CrumbColor%„   FOR C% = 1 to 15„      LINE (29+(c%*32),30) - (29+(C%*32)+20,70), C%, BF„      LOCATE 10, (c%*4)+5„      PRINT USING "##";C%;„   NEXT„   LOCATE 14,20 : PRINT "Color for Maze Walls     : ";„   LOCATE 16,20 : PRINT "Color for Player's Token : ";„   LOCATE 18,20 : PRINT "Color for Bread Crumbs   : ";„   LOCATE 21,20 : PRINT "Press - <Up> & <Down> to Select";„   LOCATE 22,20 : PRINT "      - <Left> & <Right> to change color";„   LOCATE 2,20 : PRINT "       <ENTER> when finished";„   CurLine% = 1„   DO„      IF CurLine% < 1 THEN CurLine% = 3„      IF CurLine% > 3 THEN CurLine% = 1„      FOR C% = 1 to 3„         IF TempColor%(C%) <  1 THEN TempColor%(C%)= 15„         IF TempColor%(C%) > 15 THEN TempColor%(C%) = 1„         LOCATE ((C% - 1) * 2) + 14, 47„         PRINT USING "##     ";TempColor%(C%);„      NEXT„      LOCATE ((CurLine% - 1) * 2) + 14, 50„      PRINT "<--";„      DO„         KeyChoice$ = INKEY$„      LOOP WHILE KeyChoice$ = ""„      Choice% = ASC(RIGHT$(KeyChoice$,1))„      SELECT CASE Choice%„         CASE 72 : DECR CurLine%             ' Up„         CASE 80 : INCR CurLine%             ' Down„         CASE 77 : INCR TempColor%(CurLine%) ' Right„         CASE 75 : DECR TempColor%(CurLine%) ' Left„         CASE 27 : GOSUB ExitRequested„      END SELECT„   LOOP WHILE (KeyChoice$ <> CHR$(13))„   CLS„   WallColor% = TempColor%(1)„   TokenColor% = TempColor%(2)„   CrumbColor% = TempColor%(3)„   ERASE TempColor%„RETURN„'=============================================================================„DEF FnStartTimer%(Long%)„   SHARED Elapsed&,CountDown%„   IF Long% = 0 THEN„      CountDown% = %FALSE„      Elapsed& = 0„   ELSE„      CountDown% = %TRUE„      Elapsed& = (CLNG(Long%)) * 997564„   END IF„   MTIMER„END DEF„'=============================================================================„DEF FnSecondsElapsed%(TUR%,TUC%)„   SHARED Elapsed&,CountDown%„   LOCAL TimeSinceLast&, K%„   TimeSinceLast&=MTIMER„   MTIMER„   Elapsed& = Elapsed& - TimeSinceLast&„   IF Elapsed& < 0 THEN Elapsed& = 0„   K% = FnShowTime(Elapsed&)„   FnSecondsElapsed% = K%„END DEF„'=============================================================================„DEF FnShowTime%(HowMuch&)„   SHARED LastSecond%,CountDown%„   LOCAL Minutes%, HoldSeconds%„   HoldSeconds%=INT(FIX(HowMuch&/997564))„   Minutes%=INT(FIX(HowMuch&/59853831))„   HowMuch&=HowMuch&-(CLNG(Minutes%) * 59853831)„   Seconds%=INT(FIX(HowMuch&/997564))„   IF LastSecond%<>HoldSeconds% THEN„      LOCATE 25,73„      PRINT USING "###";Minutes%;„      PRINT ":";„      PRINT RIGHT$(STR$(Seconds%+100),2);„      LastSecond%=HoldSeconds%„   END IF„   FnShowTime%=HoldSeconds%„END DEF„'=========================================================== End Of Programming„„The ABC Programmer             JOYSTICK PADDLE WARS           JOYSTICK,PADDLE,WARS           Year of 1994           QB, QBasic, PDS        172  6415     PADDLE.BAS  '================================================„' JOYSTICK PADDLE WARS GAME by William Yu (1994)„'„' Requires a joystick installed„' There's no calibration, so you may have to„' change the joystick values to match your own„' or make a calibration at startup.„' The keyboard will not function properly unless„' you remove all occurances of STICK and STRIG„'================================================„„DIM PAD(80), SHADOW(80), BALL(25)„CLS„SCREEN 7„V = STICK(0)„LOCATE 25, 8: COLOR 9: PRINT "Press a key to continue..."„LOCATE 1, 4: COLOR 10: PRINT "PADDLE WARS"; : COLOR 2: PRINT " VERSION 1.0"; : COLOR 13: PRINT " (C) 1994"„LOCATE 3, 8: COLOR 14: PRINT "PROGRAMMED BY WILLIAM YU"„LOCATE 5, 5: COLOR 12: PRINT CHR$(24): LOCATE 6, 3: PRINT CHR$(27); " * "; CHR$(26)„LOCATE 7, 5: PRINT CHR$(25)„CIRCLE (100, 42), 4, 12: PAINT (100, 42), 12„CIRCLE (115, 36), 4, 9: PAINT (115, 36), 9„CIRCLE (130, 42), 4, 10: PAINT (130, 42), 10„CIRCLE (115, 50), 4, 14: PAINT (115, 50), 14„LOCATE 8, 2: COLOR 11: PRINT "JOYSTICK": LOCATE 6, 20: PRINT "SHOOT"„LOCATE 10, 1: COLOR 15: PRINT "SIMPLE INSTRUCTIONS:"„LOCATE 12, 1: COLOR 7: PRINT "Red looking balls will fall from the sky"„PRINT "Your mission is to destroy those balls!"„PRINT "Easy no?"„PRINT : PRINT "To chicken out, press"; : COLOR 15: PRINT " ESC"„PRINT„COLOR 10: PRINT "You may use your keypad, but it will go"„PRINT "slower because of the joystick"„PRINT "interference."„PRINT : COLOR 14: PRINT "Arrow keys to move, "; : COLOR 12: PRINT "ENTER"; : COLOR 14: PRINT " to shoot"„I$ = INPUT$(1)„PADDLEPLAY:„CLS„CIRCLE (160, 150), 20, 10, , , 1 / 9„PAINT (160, 150), 10„GET (134, 145)-(186, 155), PAD„LINE (0, 200)-(320, 180), 11, BF„X = 135: Y = 145: Z = 185„CIRCLE (X + 25, 190), 20, 3, , , 1 / 9„PAINT (X + 24, 190), 3„GET (134, 185)-(186, 195), SHADOW„PSET (140, 190), 11„PSET (140, 150), 0„LINE (0, 20)-(1, 140), 9, BF„LINE (2, 20)-(10, 140), 11, BF„LINE (10, 20)-(10, 140), 3„LINE (8, 20)-(8, 140), 15„„RANDOMIZE TIMER„A = INT((300 - 20 + 1) * RND + 20)„E2 = INT((280 - 20 + 1) * RND + 20)„E3 = INT((280 - 20 + 1) * RND + 20)„CIRCLE (A, 20), 4, 12„PAINT (A, 20), 12„GET (A - 5, 14)-(A + 5, 24), BALL„E = A - 5: F = 14„M = 20: N = 3„„DO„  T = STICK(0)„  S = STICK(1)„  FOR C = 1 TO 10„    IF T = C THEN GOSUB MOVELEFT„    IF S = C THEN GOSUB UP„  NEXT C„  FOR CC = V + V - 10 TO V + V„    IF T = CC THEN GOSUB MOVERIGHT„    IF S = CC THEN GOSUB DOWN„  NEXT CC„  V$ = INKEY$„    IF V$ = CHR$(0) + "K" THEN GOSUB MOVELEFT„    IF V$ = CHR$(0) + "M" THEN GOSUB MOVERIGHT„    IF V$ = CHR$(0) + "H" THEN GOSUB UP„    IF V$ = CHR$(0) + "P" THEN GOSUB DOWN„    IF V$ = CHR$(13) THEN GOSUB SHOOT„    IF V$ = "+" AND N < 6 THEN N = N + 1„    IF V$ = "-" AND N > 1 THEN N = N - 1„    IF STRIG(0) THEN GOSUB SHOOT„    IF STRIG(2) THEN GOSUB SHOOT„    IF STRIG(4) THEN GOSUB SHOOT„    IF STRIG(6) THEN GOSUB SHOOT„  GOSUB ENEMY„  LOCATE 1, 1: COLOR 15: PRINT "SCORE: "; : COLOR 14: PRINT " Computer:"; : COLOR 12: PRINT EN; : COLOR 14: PRINT "You:"; : COLOR 10: PRINT P„LOOP UNTIL V$ = CHR$(27)„GOTO QUITPLAY„„ENEMY:„F = F + 2„IF P >= 5 THEN F2 = F2 + 1„IF P >= 25 THEN F3 = F3 + 1.5„PUT (E, F), BALL, PSET„IF P >= 5 THEN PUT (E2, F2), BALL, PSET„IF P >= 25 THEN PUT (E3, F3), BALL, PSET„IF F >= 165 THEN EN = EN + 1: PUT (E, F), BALL: F = 14: RANDOMIZE TIMER: E = INT((300 - 20 + 1) * RND + 20)„IF F2 >= 165 THEN EN = EN + 1: PUT (E2, F2), BALL: F2 = 14: RANDOMIZE TIMER: E2 = INT((280 - 20 + 1) * RND + 20)„IF F3 >= 165 THEN EN = EN + 1: PUT (E3, F3), BALL: F3 = 14: RANDOMIZE TIMER: E3 = INT((280 - 20 + 1) * RND + 20)„RETURN„„MOVELEFT:„IF X <= 5 THEN RETURN„X = X - N„PUT (X, Y), PAD, PSET„PUT (X, Z), SHADOW, PSET„RETURN„„MOVERIGHT:„IF X >= 262 THEN RETURN„X = X + N„PUT (X, Y), PAD, PSET„PUT (X, Z), SHADOW, PSET„RETURN„„UP:„IF Y <= 145 THEN RETURN„Y = Y - 2„IF Z > 180 THEN Z = Z - 1„PUT (X, Y), PAD, PSET„PUT (X, Z), SHADOW, PSET„RETURN„„DOWN:„IF Y >= 168 THEN RETURN„Y = Y + 2„IF Z < 189 THEN Z = Z + 1„PUT (X, Y), PAD, PSET„PUT (X, Z), SHADOW, PSET„RETURN„„SHOOT:„LINE (0, M)-(10, M + 1), 0, BF„M = M + 1„IF P >= 25 THEN LINE (X + 15, Y - 5)-(X + 15, Y - 100 - P), 9„IF P >= 25 THEN LINE (X + 14, Y - 5)-(X + 14, Y - 100 - P), 11„IF P >= 25 THEN LINE (X + 39, Y - 5)-(X + 39, Y - 100 - P), 9„IF P >= 25 THEN LINE (X + 38, Y - 5)-(X + 38, Y - 100 - P), 11„LINE (X + 26, Y - 5)-(X + 26, Y - 100 - P), 11„LINE (X + 25, Y - 5)-(X + 25, Y - 100 - P), 9„FOR D = 1 TO 200: NEXT D„FOR T = 18 TO 25„IF X = E - T AND F > 40 - P THEN P = P + 1: PUT (E, F), BALL: F = 14: RANDOMIZE TIMER: E = INT((300 - 20 + 1) * RND + 20): EXIT FOR„IF X = E2 - T AND F2 > 40 - P THEN P = P + 1: PUT (E2, F2), BALL: F2 = 14: RANDOMIZE TIMER: E2 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„IF X = E3 - T AND F3 > 40 - P THEN P = P + 1: PUT (E3, F3), BALL: F3 = 14: RANDOMIZE TIMER: E3 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E - T + 15 AND F > 40 - P THEN P = P + 1: PUT (E, F), BALL: F = 14: RANDOMIZE TIMER: E = INT((300 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E2 - T + 15 AND F2 > 40 - P THEN P = P + 1: PUT (E2, F2), BALL: F2 = 14: RANDOMIZE TIMER: E2 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E3 - T + 15 AND F3 > 40 - P THEN P = P + 1: PUT (E3, F3), BALL: F3 = 14: RANDOMIZE TIMER: E3 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E - T - 13 AND F > 40 - P THEN P = P + 1: PUT (E, F), BALL: F = 14: RANDOMIZE TIMER: E = INT((300 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E2 - T - 13 AND F2 > 40 - P THEN P = P + 1: PUT (E2, F2), BALL: F2 = 14: RANDOMIZE TIMER: E2 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„IF P >= 25 AND X = E3 - T - 13 AND F3 > 40 - P THEN P = P + 1: PUT (E3, F3), BALL: F3 = 14: RANDOMIZE TIMER: E3 = INT((280 - 20 + 1) * RND + 20): EXIT FOR„NEXT T„LINE (X + 26, Y - 5)-(X + 25, Y - 100 - P), 0, BF„IF P >= 25 THEN LINE (X + 15, Y - 5)-(X + 14, Y - 100 - P), 0, BF„IF P >= 25 THEN LINE (X + 39, Y - 5)-(X + 38, Y - 100 - P), 0, BF„IF M = 140 THEN GOTO STOPPLAY„RETURN„„STOPPLAY:„LOCATE 10, 11: COLOR 15: PRINT "ANOTHER GAME? <Y/N>"„HUH:„I$ = INPUT$(1)„IF UCASE$(I$) = "Y" THEN GOTO PADDLEPLAY„IF UCASE$(I$) = "N" THEN GOTO QUITPLAY„GOTO HUH„„QUITPLAY:„LOCATE 10, 11: COLOR 15: PRINT "THANKS FOR PLAYING!!!"„SLEEP 1„„Ken Sweet                      MASTERCODE                     Like Cribbage                  Unknown Date           QB, PDS                1160 37930    MCODE.BAS   DEFINT A-Z„„TYPE RegTypeX„     ax    AS INTEGER„     bx    AS INTEGER„     cx    AS INTEGER„     dx    AS INTEGER„     bp    AS INTEGER„     si    AS INTEGER„     di    AS INTEGER„     flags AS INTEGER„     ds    AS INTEGER„     es    AS INTEGER„END TYPE„„TYPE CodeMatrix„    Code AS STRING * 8„    Clue AS STRING * 8„    Blk AS INTEGER„    Wht AS INTEGER„END TYPE„„DECLARE SUB InterruptX (intnum%, inreg AS RegTypeX, outreg AS RegTypeX)„DECLARE FUNCTION GetScreenMode% ()„DECLARE SUB MouseDriver (Mouse0%, Mouse1%, Mouse2%, Mouse3%)„DECLARE SUB MouseHide ()„DECLARE SUB MousePoll (Row%, Col%, LButton%, RButton%)„DECLARE SUB MouseInit ()„DECLARE SUB MouseShow ()„DECLARE SUB TitleScreen ()„DECLARE SUB Directions ()„DECLARE SUB StartUp ()„DECLARE SUB SetColors ()„DECLARE SUB CodeBar (NumPegs%)„DECLARE SUB ColorBar (NumColors%)„DECLARE SUB GameBoard (NumPegs%)„DECLARE SUB ScoreCard ()„DECLARE FUNCTION SelectCode$ (NumPegs%, NumColor%)„DECLARE SUB ShowCode (NumPegs%, Xcode$)„DECLARE SUB PegLarge (PegXloc%)„DECLARE SUB PegSmall (PegXloc%, PegYloc%)„DECLARE SUB GiveClues (Xcode$, Scode$, NumPegs%, TurnNum%)„DECLARE SUB SetClue (ClueNum%, TurnNum%, Clr%)„DECLARE SUB ComputerShow (Xcode$, NumPegs%)„DECLARE SUB ComputerMatrix (RightColors$, NumColors%, NumPegs%)„DECLARE SUB CalculateColors (NumColors%, NumPegs%, TurnNum%)„DECLARE SUB ColorWrongScan (CompRight$, CompWrong$, Xcode$, NumPegs%, TotalPeg%)„DECLARE SUB ColorRightScan (CompRight$, CompWrong$, Xcode$, NumPegs%, TotalPeg%)„DECLARE FUNCTION CalculateCode$ (NumPegs%, TurnNum%)„DECLARE SUB WordPrint (Row%, Col%, Fclr%, Bclr%, Text$)„DECLARE FUNCTION WordInput$ (Row%, Col%, Fclr%, Bclr%, HFclr%, HBclr%, TextLen%, Text$)„DECLARE FUNCTION Kbd$ ()„DECLARE SUB SetPalette (Number%, Red%, Green%, Blue%)„DECLARE SUB DrawBox (Row%, Col%, ColLen%, Fclr%, Bclr%, Format$, Style%)„DECLARE SUB Xalpha (Row%, Col%, Fclr%, Bclr%, Text$)„DECLARE SUB Xpatern (Row%, Col%, Fclr%, Bclr%, Patern$, BitNum%)„DECLARE SUB TimePause (TimeDelay%)„DECLARE FUNCTION PlayAgain% ()„DECLARE SUB GameInit ()„„DIM SHARED PlayerName$(7), PlayerScore%(7), PlayerPeg%(7), PlayerColor%(7)„DIM SHARED NumPlayer%, NumGames%, Guess(29) AS CodeMatrix„DIM SHARED PegLoop%(7), PegMatrix0%(7), PegMatrix1%(7), PegMatrix2%(7, 7)„DIM SHARED CodeMatrix$(7), PegRight%(7), PegWrong%(7, 7)„„CONST True% = -1: False% = 0„„MouseInit„„MainGameStart:„ON KEY(10) GOSUB ExitGame„KEY(10) ON„„SCREEN 12: WIDTH 80, 30„TitleScreen„SetColors„GameInit„„StartGame:„StartUp„„CLS„FOR Zloop% = 0 TO NumPlayer%„    PlayerScore%(Zloop%) = 0„NEXT Zloop%„ScoreCard„„IF INSTR(COMMAND$, "/DRACOS") > 0 THEN„    ON KEY(31) GOSUB GameHelp„    KEY(31) ON„END IF„„FOR PlayGame% = 0 TO NumGames%„    FOR Player% = 0 TO NumPlayer%„        GameBoard PlayerPeg%(Player%)„        ColorBar PlayerColor%(Player%)„        SecretCode$ = SelectCode$(PlayerPeg%(Player%), PlayerColor%(Player%))„        WordPrint 2 + Player%, 24, Player% + 1, -1, ""„        CurrentColor% = 1„        IF LEFT$(UCASE$(PlayerName$(Player%)), 4) = "COMP" THEN„            FOR Zloop% = 0 TO 7„                PegRight%(Zloop%) = -1„                PegMatrix1%(Zloop%) = -1„                CodeMatrix$(Zloop%) = CHR$(255)„                FOR Xloop% = 0 TO 7„                    PegWrong%(Zloop%, Xloop%) = -1„                    PegMatrix2%(Zloop%, Xloop%) = -1„                NEXT Xloop%„            NEXT Zloop%„            ComputerCode$ = "": ComputerScan% = 0„            FOR Zloop% = 1 TO PlayerColor%(Player%)„SetComputerCode:„                Ztemp% = INT(RND * PlayerColor%(Player%)) + 1„                IF INSTR(ComputerCode$, CHR$(Ztemp%)) > 0 THEN GOTO SetComputerCode„                ComputerCode$ = ComputerCode$ + CHR$(Ztemp%)„            NEXT Zloop%„        END IF„        ERASE Guess„        FOR Turn% = 0 TO 29„            PlayerScore%(Player%) = PlayerScore%(Player%) + 1„            ScoreCard„            CodeBar PlayerPeg%(Player%)„            WordPrint 2 + Player%, 29, Player% + 1, -1, "Guess" + STR$(Turn% + 1) + "   Round" + STR$(PlayGame% + 1)„            currentGuess$ = STRING$(8, 255)„            IF LEFT$(UCASE$(PlayerName$(Player%)), 4) = "COMP" THEN„                GOSUB ComputerTurn„            ELSE„                GOSUB PlayerTurn„            END IF„            IF Guess(Turn%).Blk = PlayerPeg%(Player%) + 1 THEN„                EXIT FOR„            ELSEIF Guess(Turn%).Blk + Guess(Turn%).Wht = PlayerPeg%(Player%) + 1 THEN„                FOR Zloop% = 0 TO Turn%„                    FOR Xloop% = 0 TO PlayerPeg%(Player%)„                        IF INSTR(SecretCode$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) = 0 THEN„                            PegSmall Xloop%, Zloop%„                        END IF„                    NEXT Xloop%„                NEXT Zloop%„                FOR Zloop% = 1 TO PlayerColor%(Player%)„                    IF INSTR(SecretCode$, CHR$(Zloop%)) = 0 THEN„                        PAINT (18 + (Zloop% - 1) * 27, 361), 15, 15„                    END IF„                NEXT Zloop%„            END IF„        NEXT Turn%„        WordPrint 2 + Player%, 24, 0, -1, SPACE$(23)„        ShowCode PlayerPeg%(Player%), SecretCode$„        BEEP„WaitButton:„        MousePoll Row%, Col%, LButton%, RButton%„        IF NOT (LButton%) AND NOT (RButton%) THEN GOTO WaitButton„    NEXT Player%„NEXT PlayGame%„„IF INSTR(COMMAND$, "/DRACOS") > 0 THEN„    KEY(31) OFF„END IF„„PlayDone% = PlayAgain%„„IF PlayDone% THEN„    GOTO StartGame„ELSE„    GOTO ExitGame„END IF„„„„PlayerTurn:„    MouseShow„GetMouse:„    MousePoll Row%, Col%, LButton%, RButton%„    IF NOT (LButton%) AND NOT (RButton%) THEN GOTO GetMouse„    MouseHide„„IF (Col% > 6 AND Col% < 383) AND (Row% > 204 AND Row% < 252) THEN„    CurrentPeg% = INT(Col% - 7) \ 47„    IF CurrentPeg% > PlayerPeg%(Player%) THEN GOTO nextClick„    IF LButton% THEN„        IF MID$(currentGuess$, CurrentPeg% + 1, 1) = CHR$(255) THEN„            MID$(currentGuess$, CurrentPeg% + 1, 1) = CHR$(CurrentColor%)„            CIRCLE (30 + CurrentPeg% * 47, 228), 21, CurrentColor% - 1„            PAINT (30 + CurrentPeg% * 47, 228), CurrentColor% - 1, CurrentColor% - 1„        ELSE„            NewColor% = ASC(MID$(currentGuess$, CurrentPeg% + 1, 1)) + 1„            IF NewColor% > PlayerColor%(Player%) THEN NewColor% = 1„            MID$(currentGuess$, CurrentPeg% + 1, 1) = CHR$(NewColor%)„            CIRCLE (30 + CurrentPeg% * 47, 228), 21, NewColor% - 1„            PAINT (30 + CurrentPeg% * 47, 228), NewColor% - 1, NewColor% - 1„        END IF„    ELSEIF RButton% THEN„        MID$(currentGuess$, CurrentPeg% + 1, 1) = CHR$(255)„        PegLarge CurrentPeg%„    END IF„ELSEIF (Col% > 5 AND Col% < 383) AND (Row% > 347 AND Row% < 375) THEN„    NewColor% = INT(Col% - 6) \ 27 + 1„    IF NewColor% > PlayerColor%(Player%) THEN GOTO nextClick„    CurrentColor% = NewColor%„    PAINT (12, 319), CurrentColor% - 1, 14„ELSEIF (Col% > 136 AND Col% < 256) AND (Row% > 416 AND Row% < 464) THEN„    Done% = -1„    FOR Zloop% = 0 TO PlayerPeg%(Player%)„        IF MID$(currentGuess$, Zloop% + 1, 1) = CHR$(255) THEN Done% = 0„    NEXT Zloop%„    IF NOT (Done%) THEN„        GOTO nextClick„    ELSE„        GiveClues currentGuess$, SecretCode$, PlayerPeg%(Player%), Turn%„        RETURN„    END IF„ELSEIF (Col% > 507 AND Col% < 635) AND (Row% > 24 AND Row% < 475) THEN„    OldCode% = 29 - (Row% - 25) \ 15„    IF OldCode% > Turn% - 1 THEN„        GOTO nextClick„    ELSE„        currentGuess$ = Guess(OldCode%).Code„        FOR Zloop% = 0 TO PlayerPeg%(Player%)„            Ztemp% = ASC(MID$(currentGuess$, Zloop% + 1, 1))„            CIRCLE (30 + Zloop% * 47, 228), 21, Ztemp% - 1„            PAINT (30 + Zloop% * 47, 228), Ztemp% - 1, Ztemp% - 1„        NEXT Zloop%„    END IF„END IF„„nextClick:„MouseShow„TimePause 2„GOTO GetMouse„„„ComputerTurn:„ShowCode PlayerPeg%(Player%), SecretCode$„IF LEFT$(ComputerCode$, PlayerPeg%(Player%) + 1) = LEFT$(Guess(0).Code, PlayerPeg%(Player%) + 1) THEN„    IF ComputerScan% THEN„        currentGuess$ = CalculateCode$(PlayerPeg%(Player%), Turn% - 1)„    ELSE„        CalculateColors PlayerColor%(Player%), PlayerPeg%(Player%), Turn% - 2„        ComputerScan% = -1„        currentGuess$ = CalculateCode$(PlayerPeg%(Player%), Turn% - 1)„    END IF„ELSE„    IF Turn% = 0 THEN„        currentGuess$ = LEFT$(ComputerCode$, PlayerPeg%(Player%) + 1)„        ComputerCode$ = MID$(ComputerCode$, 2) + LEFT$(ComputerCode$, 1)„    ELSEIF Guess(Turn% - 1).Blk + Guess(Turn% - 1).Wht = PlayerPeg%(Player%) + 1 THEN„        ComputerCode$ = Guess(0).Code„        ComputerMatrix Guess(Turn% - 1).Code, PlayerColor%(Player%), PlayerPeg%(Player%)„        ComputerScan% = -1„        currentGuess$ = CalculateCode$(PlayerPeg%(Player%), Turn% - 1)„    ELSEIF Turn% > 2 THEN„        CalculateColors PlayerColor%(Player%), PlayerPeg%(Player%), Turn% - 2„        IF CodeMatrix$(0) = CHR$(255) THEN„            currentGuess$ = LEFT$(ComputerCode$, PlayerPeg%(Player%) + 1)„            ComputerCode$ = MID$(ComputerCode$, 2) + LEFT$(ComputerCode$, 1)„        ELSE„            ComputerCode$ = Guess(0).Code„            ComputerScan% = -1„            currentGuess$ = CalculateCode$(PlayerPeg%(Player%), Turn% - 1)„        END IF„    ELSE„        currentGuess$ = LEFT$(ComputerCode$, PlayerPeg%(Player%) + 1)„        ComputerCode$ = MID$(ComputerCode$, 2) + LEFT$(ComputerCode$, 1)„    END IF„END IF„         „ComputerShow currentGuess$, PlayerPeg%(Player%)„GiveClues currentGuess$, SecretCode$, PlayerPeg%(Player%), Turn%„RETURN„„„GameHelp:„    ShowCode PlayerPeg%(Player%), SecretCode$„    RETURN„„ExitGame:„    CLS : END„„FUNCTION CalculateCode$ (NumPegs%, TurnNum%)„„ComputerRight$ = ""„FOR Zloop% = 0 TO NumPegs%„    ComputerRight$ = ComputerRight$ + CodeMatrix$(Zloop%)„NEXT Zloop%„„FOR Zloop% = 0 TO TurnNum%„    IF Guess(Zloop%).Blk > 0 AND Guess(Zloop%).Wht = 0 THEN„        FOR Xloop% = 0 TO NumPegs%„            IF INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) > 0 THEN„                FOR Yloop% = 0 TO NumPegs%„                    PegWrong%(Xloop%, Yloop%) = Yloop%„                NEXT Yloop%„                PegWrong%(Xloop%, INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) - 1) = -1„                PegRight%(Xloop%) = INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) - 1„            END IF„        NEXT Xloop%„    ELSEIF Guess(Zloop%).Wht > 0 AND Guess(Zloop%).Blk = 0 THEN„        FOR Xloop% = 0 TO NumPegs%„            IF INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) > 0 THEN„                PegWrong%(Xloop%, INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) - 1) = INSTR(ComputerRight$, MID$(Guess(Zloop%).Code, Xloop% + 1, 1)) - 1„            END IF„        NEXT Xloop%„    END IF„NEXT Zloop%„„FOR Zloop% = 0 TO NumPegs%„    Ztemp0% = 0: Ztemp1% = -1: Xtemp0% = 0: Xtemp1% = -1„    FOR Xloop% = 0 TO NumPegs%„        IF PegWrong%(Zloop%, Xloop%) = -1 THEN Ztemp0% = Ztemp0% + 1: Ztemp1% = Xloop%„        IF PegWrong%(Xloop%, Zloop%) = -1 THEN Xtemp0% = Xtemp0% + 1: Xtemp1% = Xloop%„    NEXT Xloop%„    IF Ztemp0% = 1 THEN„        FOR Xloop% = 0 TO NumPegs%„            PegWrong%(Zloop%, Xloop%) = Xloop%„        NEXT Xloop%„        PegRight%(Zloop%) = Ztemp1%„        PegWrong%(Zloop%, Ztemp1%) = -1„    END IF„    IF Xtemp0% = 1 THEN„        FOR Xloop% = 0 TO NumPegs%„            PegWrong%(Xloop%, Zloop%) = Zloop%„        NEXT Xloop%„        PegRight%(Xtemp1%) = Zloop%„        PegWrong%(Xtemp1%, Zloop%) = -1„    END IF„    IF PegRight%(Zloop%) > -1 THEN„        FOR Xloop% = 0 TO NumPegs%„            PegWrong%(Zloop%, Xloop%) = Xloop%„            PegWrong%(Xloop%, PegRight%(Zloop%)) = PegRight%(Zloop%)„        NEXT Xloop%„        PegWrong%(Zloop%, PegRight%(Zloop%)) = -1„    END IF„NEXT Zloop%„„FOR Zloop% = 0 TO NumPegs%„    IF PegRight%(Zloop%) > -1 THEN„        PegMatrix1%(Zloop%) = 0„        PegMatrix2%(Zloop%, 0) = PegRight%(Zloop%)„    ELSE„        PegMatrix1%(Zloop%) = -1„        FOR Xloop% = 0 TO NumPegs%„            IF PegWrong%(Zloop%, Xloop%) = -1 THEN„                PegMatrix1%(Zloop%) = PegMatrix1%(Zloop%) + 1„                PegMatrix2%(Zloop%, PegMatrix1%(Zloop%)) = Xloop%„            END IF„        NEXT Xloop%„    END IF„NEXT Zloop%„„StartPegLoop:„PegLoop%(0) = PegLoop%(0) + 1„IF PegLoop%(0) > PegMatrix1%(0) THEN„    PegLoop%(0) = 0„    PegLoop%(1) = PegLoop%(1) + 1„    IF PegLoop%(1) > PegMatrix1%(1) THEN„        PegLoop%(1) = 0„        PegLoop%(2) = PegLoop%(2) + 1„        IF PegLoop%(2) > PegMatrix1%(2) THEN„            PegLoop%(2) = 0„            IF NumPegs% = 2 THEN GOTO EndPegLoop„            PegLoop%(3) = PegLoop%(3) + 1„            IF PegLoop%(3) > PegMatrix1%(3) THEN„                PegLoop%(3) = 0„                IF NumPegs% = 3 THEN GOTO EndPegLoop„                PegLoop%(4) = PegLoop%(4) + 1„                IF PegLoop%(4) > PegMatrix1%(4) THEN„                    PegLoop%(4) = 0„                    IF NumPegs% = 4 THEN GOTO EndPegLoop„                    PegLoop%(5) = PegLoop%(5) + 1„                    IF PegLoop%(5) > PegMatrix1%(5) THEN„                        PegLoop%(5) = 0„                        IF NumPegs% = 5 THEN GOTO EndPegLoop„                        PegLoop%(6) = PegLoop%(6) + 1„                        IF PegLoop%(6) > PegMatrix1%(6) THEN„                            PegLoop%(6) = 0„                            IF NumPegs% = 6 THEN GOTO EndPegLoop„                            PegLoop%(7) = PegLoop%(7) + 1„                            IF PegLoop%(7) > PegMatrix1%(7) THEN„                                PegLoop%(7) = 0„                            END IF„                        END IF„                    END IF„                END IF„            END IF„        END IF„    END IF„END IF„EndPegLoop:„„FOR Zloop% = 0 TO NumPegs%„    PegMatrix0%(Zloop%) = PegMatrix2%(Zloop%, PegLoop%(Zloop%))„NEXT Zloop%„„Done% = -1„FOR Zloop% = 0 TO NumPegs%„    IF PegMatrix0%(Zloop%) < 0 OR PegMatrix0%(Zloop%) > NumPegs% THEN GOTO StartPegLoop„    FOR Xloop% = 0 TO NumPegs%„        IF (Xloop% <> Zloop%) AND (PegMatrix0%(Zloop%) = PegMatrix0%(Xloop%)) THEN„            Done% = 0„            EXIT FOR„        END IF„    NEXT Xloop%„    IF NOT (Done%) THEN EXIT FOR„NEXT Zloop%„„IF NOT (Done%) THEN GOTO StartPegLoop„TestGuess$ = ""„FOR Zloop% = 0 TO NumPegs%„    TestGuess$ = TestGuess$ + CodeMatrix$(PegMatrix0%(Zloop%))„NEXT Zloop%„ComputerShow TestGuess$, NumPegs%„„FOR Zloop% = TurnNum% TO 0 STEP -1„    Done% = -1: Black% = 0: White% = 0„    FOR Xloop% = 1 TO NumPegs% + 1„        IF INSTR(Guess(Zloop%).Code, MID$(TestGuess$, Xloop%, 1)) = Xloop% THEN Black% = Black% + 1„    NEXT Xloop%„    IF Black% <> Guess(Zloop%).Blk THEN„        Done% = 0„        EXIT FOR„    END IF„NEXT Zloop%„„IF NOT (Done%) THEN GOTO StartPegLoop„„CalculateCode$ = TestGuess$„„END FUNCTION„„SUB CalculateColors (NumColors%, NumPegs%, TurnNum%)„„FOR Yloop% = 0 TO NumColors%„    FOR Zloop% = 0 TO TurnNum%„        Peg0% = Guess(Zloop%).Blk + Guess(Zloop%).Wht: Peg1% = Guess(Zloop% + 1).Blk + Guess(Zloop% + 1).Wht„        CodeNum0% = Zloop%: CodeNum1% = Zloop% + 1„        FirstPeg$ = MID$(Guess(Zloop%).Code, 1, 1): LastPeg$ = MID$(Guess(Zloop% + 1).Code, NumPegs% + 1, 1)„        GOSUB ComputerCheck„    NEXT Zloop%„NEXT Yloop%„„IF LEN(ComputerWrong$) + 1 = NumColors% - NumPegs% THEN„    FOR Zloop% = 1 TO NumColors%„        IF INSTR(ComputerWrong$, CHR$(Zloop%)) = 0 THEN„            IF INSTR(ComputerRight$, CHR$(Zloop%)) = 0 THEN ComputerRight$ = ComputerRight$ + CHR$(Zloop%)„        END IF„    NEXT Zloop%„ELSEIF LEN(ComputerRight$) = NumPegs% + 1 THEN„    FOR Zloop% = 1 TO NumColors%„        IF INSTR(ComputerRight$, CHR$(Zloop%)) = 0 THEN„            IF INSTR(ComputerWrong$, CHR$(Zloop%)) = 0 THEN ComputerWrong$ = ComputerWrong$ + CHR$(Zloop%)„        END IF„    NEXT Zloop%„END IF„„IF LEN(ComputerRight$) <> NumPegs% + 1 THEN EXIT SUB„„ComputerMatrix ComputerRight$, NumColors%, NumPegs%„„EXIT SUB„„ComputerCheck:„IF (NumPegs% + 1) - Peg0% = NumColors% - (NumPegs% + 1) THEN„    FOR Xloop% = 1 TO NumColors%„        IF INSTR(Guess(CodeNum0%).Code, CHR$(Xloop%)) = 0 THEN„            IF INSTR(ComputerRight$, CHR$(Xloop%)) = 0 THEN„                ComputerRight$ = ComputerRight$ + CHR$(Xloop%)„            END IF„        END IF„    NEXT Xloop%„END IF„IF (NumPegs% + 1) - Peg1% = NumColors% - (NumPegs% + 1) THEN„    FOR Xloop% = 1 TO NumColors%„        IF INSTR(Guess(CodeNum1%).Code, CHR$(Xloop%)) = 0 THEN„            IF INSTR(ComputerRight$, CHR$(Xloop%)) = 0 THEN„                ComputerRight$ = ComputerRight$ + CHR$(Xloop%)„            END IF„        END IF„    NEXT Xloop%„END IF„„ColorRightScan ComputerRight$, ComputerWrong$, Guess(CodeNum0%).Code, NumPegs%, Peg0%„ColorRightScan ComputerRight$, ComputerWrong$, Guess(CodeNum1%).Code, NumPegs%, Peg1%„„ColorWrongScan ComputerRight$, ComputerWrong$, Guess(CodeNum0%).Code, NumPegs%, Peg0%„ColorWrongScan ComputerRight$, ComputerWrong$, Guess(CodeNum1%).Code, NumPegs%, Peg1%„„IF Peg0% < Peg1% THEN„    IF INSTR(ComputerWrong$, FirstPeg$) = 0 AND INSTR(ComputerRight$, FirstPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + FirstPeg$„    IF INSTR(ComputerRight$, LastPeg$) = 0 AND INSTR(ComputerWrong$, LastPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + LastPeg$„ELSEIF Peg0% > Peg1% THEN„    IF INSTR(ComputerWrong$, LastPeg$) = 0 AND INSTR(ComputerRight$, LastPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + LastPeg$„    IF INSTR(ComputerRight$, FirstPeg$) = 0 AND INSTR(ComputerWrong$, FirstPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + FirstPeg$„ELSEIF Peg0% = Peg1% THEN„    IF INSTR(ComputerRight$, FirstPeg$) > 0 AND INSTR(ComputerWrong$, LastPeg$) = 0 THEN„        IF INSTR(ComputerRight$, LastPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + LastPeg$„    ELSEIF INSTR(ComputerRight$, LastPeg$) > 0 AND INSTR(ComputerWrong$, FirstPeg$) = 0 THEN„        IF INSTR(ComputerRight$, FirstPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + FirstPeg$„    ELSEIF INSTR(ComputerWrong$, FirstPeg$) > 0 AND INSTR(ComputerRight$, LastPeg$) = 0 THEN„        IF INSTR(ComputerWrong$, LastPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + LastPeg$„    ELSEIF INSTR(ComputerWrong$, LastPeg$) > 0 AND INSTR(ComputerRight$, FirstPeg$) = 0 THEN„        IF INSTR(ComputerWrong$, FirstPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + FirstPeg$„    ELSEIF LEN(ComputerWrong$) = NumColors% - (NumPegs% + 2) THEN„        IF INSTR(ComputerRight$, FirstPeg$) = 0 AND INSTR(ComputerWrong$, FirstPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + FirstPeg$„        IF INSTR(ComputerRight$, LastPeg$) = 0 AND INSTR(ComputerWrong$, LastPeg$) = 0 THEN ComputerRight$ = ComputerRight$ + LastPeg$„    ELSEIF LEN(ComputerRight$) = NumPegs% THEN„        IF INSTR(ComputerWrong$, FirstPeg$) = 0 AND INSTR(ComputerRight$, FirstPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + FirstPeg$„        IF INSTR(ComputerWrong$, LastPeg$) = 0 AND INSTR(ComputerRight$, LastPeg$) = 0 THEN ComputerWrong$ = ComputerWrong$ + LastPeg$„    END IF„END IF„RETURN„„END SUB„„SUB CodeBar (NumPegs%)„„LINE (0, 200)-(388, 256), 14, BF: LINE (4, 204)-(384, 252), 15, BF„FOR Zloop% = 0 TO NumPegs%„    PegLarge Zloop%„NEXT Zloop%„WordPrint 12, -25, 13, -1, "ENTER CODE"„„LINE (136, 416)-(256, 464), 14, BF: LINE (140, 420)-(252, 460), 15, BF„WordPrint 28, -25, 6, -1, " TEST CODE "„„END SUB„„SUB ColorBar (NumColors%)„„LINE (0, 343)-(388, 379), 14, BF: LINE (4, 347)-(384, 375), 15, BF„LINE (0, 307)-(388, 343), 14, BF: LINE (4, 311)-(384, 339), 15, BF„LINE (8, 315)-(380, 335), 14, BF: LINE (12, 319)-(376, 331), 0, BF„FOR Zloop% = 1 TO NumColors%„    CIRCLE (18 + (Zloop% - 1) * 27, 361), 11, Zloop% - 1„    PAINT (18 + (Zloop% - 1) * 27, 361), Zloop% - 1, Zloop% - 1„NEXT Zloop%„WordPrint 19, -25, 13, -1, "COLOR BAR"„    „END SUB„„„„SUB ColorRightScan (CompRight$, CompWrong$, Xcode$, NumPegs%, TotalPeg%)„„Ztemp% = 0„FOR Xloop% = 1 TO NumPegs% + 1„    IF INSTR(CompRight$, MID$(Xcode$, Xloop%, 1)) > 0 THEN Ztemp% = Ztemp% + 1„NEXT Xloop%„IF Ztemp% = TotalPeg% THEN„    FOR Xloop% = 1 TO NumPegs% + 1„        IF INSTR(CompRight$, MID$(Xcode$, Xloop%, 1)) = 0 THEN„            IF INSTR(CompWrong$, MID$(Xcode$, Xloop%, 1)) = 0 THEN„                CompWrong$ = CompWrong$ + MID$(Xcode$, Xloop%, 1)„            END IF„        END IF„    NEXT Xloop%„END IF„„END SUB„„SUB ColorWrongScan (CompRight$, CompWrong$, Xcode$, NumPegs%, TotalPeg%)„„Ztemp% = 0„FOR Xloop% = 1 TO NumPegs% + 1„    IF INSTR(CompWrong$, MID$(Xcode$, Xloop%, 1)) > 0 THEN Ztemp% = Ztemp% + 1„NEXT Xloop%„IF Ztemp% = (NumPegs% + 1) - TotalPeg% THEN„    FOR Xloop% = 1 TO NumPegs% + 1„        IF INSTR(CompWrong$, MID$(Xcode$, Xloop%, 1)) = 0 THEN„            IF INSTR(CompRight$, MID$(Xcode$, Xloop%, 1)) = 0 THEN„                CompRight$ = CompRight$ + MID$(Xcode$, Xloop%, 1)„            END IF„        END IF„    NEXT Xloop%„END IF„„END SUB„„SUB ComputerMatrix (RightColors$, NumColors%, NumPegs%)„„Ztemp% = 0„FOR Zloop% = 1 TO NumColors%„    IF INSTR(RightColors$, CHR$(Zloop%)) > 0 THEN„        CodeMatrix$(Ztemp%) = CHR$(Zloop%)„        PegLoop%(Ztemp%) = NumPegs% - Ztemp%„        Ztemp% = Ztemp% + 1„    END IF„NEXT Zloop%„PegLoop%(0) = NumPegs% - 1„„END SUB„„SUB ComputerShow (Xcode$, NumPegs%)„„FOR Zloop% = 0 TO NumPegs%„    NewColor% = ASC(MID$(Xcode$, Zloop% + 1, 1))„    CIRCLE (30 + Zloop% * 47, 228), 21, NewColor% - 1„    PAINT (30 + Zloop% * 47, 228), NewColor% - 1, NewColor% - 1„NEXT Zloop%„„END SUB„„SUB DrawBox (Row%, Col%, ColLen%, Fclr%, Bclr%, Format$, Style%)„„SELECT CASE Style%„    CASE 0: Box0$ = "⁄": Box1$ = "ƒ": Box2$ = "ø": Box3$ = "≥": Box4$ = "√": Box5$ = "¥": Box6$ = "¿": Box7$ = "Ÿ"„    CASE 1: Box0$ = "…": Box1$ = "Õ": Box2$ = "ª": Box3$ = "∫": Box4$ = "Ã": Box5$ = "π": Box6$ = "»": Box7$ = "º"„    CASE 2: Box0$ = "÷": Box1$ = "ƒ": Box2$ = "∑": Box3$ = "∫": Box4$ = "«": Box5$ = "∂": Box6$ = "”": Box7$ = "Ω"„    CASE 3: Box0$ = "’": Box1$ = "Õ": Box2$ = "∏": Box3$ = "≥": Box4$ = "∆": Box5$ = "µ": Box6$ = "‘": Box7$ = "æ"„END SELECT„„IF Bclr% >= 0 THEN„    COLOR Fclr%, Bclr%„ELSE„    COLOR Fclr%„END IF„„FOR Zloop% = 0 TO LEN(Format$) - 1„    LOCATE Row% + Zloop%, Col%„    BoxTemp$ = MID$(Format$, Zloop% + 1, 1)„    SELECT CASE UCASE$(BoxTemp$)„        CASE "T":  PRINT Box0$ + STRING$(ColLen%, Box1$) + Box2$;„        CASE "M":  PRINT Box4$ + STRING$(ColLen%, Box1$) + Box5$;„        CASE "S":  PRINT Box3$ + SPACE$(ColLen%) + Box3$;„        CASE "B":  PRINT Box6$ + STRING$(ColLen%, Box1$) + Box7$;„    END SELECT„NEXT Zloop%„„END SUB„„SUB GameBoard (NumPegs%)„„LINE (503, 0)-(639, 479), 14, BF: LINE (399, 0)-(506, 479), 14, BF„LINE (507, 4)-(635, 475), 15, BF: LINE (403, 4)-(501, 475), 15, BF„FOR Xloop% = 0 TO NumPegs%„    FOR Zloop% = 0 TO 29„        PegSmall Xloop%, Zloop%„        CIRCLE (494 - Xloop% * 12, 467 - Zloop% * 15), 3, 14„        CIRCLE (494 - Xloop% * 12, 467 - Zloop% * 15), 2, 14„        LINE (399, 460 - Zloop% * 15)-(639, 460 - Zloop% * 15), 14„    NEXT Zloop%„    CIRCLE (518 + Xloop% * 15, 15), 5, 14„    PAINT (518 + Xloop% * 15, 15), 14, 14„    CIRCLE (518 + Xloop% * 15, 15), 3, 15„    LINE (518 + Xloop% * 15, 15)-(518 + Xloop% * 15, 467), 14„NEXT Xloop%„„END SUB„„SUB GameInit„„FOR Zloop% = 0 TO 7„    PlayerName$(Zloop%) = "PLAYER  #" + LTRIM$(STR$(Zloop% + 1))„NEXT Zloop%„„END SUB„„FUNCTION GetScreenMode%„„    TempMode% = True%„    „    ON LOCAL ERROR GOTO GetScreenModeError„        COLOR , 0„„    GetScreenMode% = TempMode%„„    EXIT FUNCTION„„GetScreenModeError:„    TempMode% = False%„    RESUME NEXT„„END FUNCTION„„SUB GiveClues (Xcode$, Scode$, NumPegs%, TurnNum%)„„CurrentClue% = 0: CurrentClue$ = STRING$(8, 255): CurrentCode$ = STRING$(8, 255)„Guess(TurnNum%).Code = Xcode$: Guess(TurnNum%).Clue = STRING$(8, 0)„FOR Zloop% = 0 TO NumPegs%„    Ztemp% = ASC(MID$(Xcode$, Zloop% + 1, 1))„    CIRCLE (518 + Zloop% * 15, 467 - TurnNum% * 15), 5, Ztemp% - 1„    PAINT (518 + Zloop% * 15, 467 - TurnNum% * 15), Ztemp% - 1, Ztemp% - 1„    IF MID$(Scode$, Zloop% + 1, 1) = MID$(Xcode$, Zloop% + 1, 1) THEN„        MID$(Guess(TurnNum%).Clue, CurrentClue% + 1, 1) = CHR$(1)„        MID$(CurrentClue$, Zloop% + 1, 1) = CHR$(1)„        MID$(CurrentCode$, Zloop% + 1, 1) = CHR$(1)„        SetClue CurrentClue%, TurnNum%, 0„        CurrentClue% = CurrentClue% + 1„        Guess(TurnNum%).Blk = Guess(TurnNum%).Blk + 1„    END IF„NEXT Zloop%„FOR Zloop% = 0 TO NumPegs%„    FOR Xloop% = 0 TO NumPegs%„        IF MID$(CurrentClue$, Xloop% + 1, 1) < CHR$(255) OR MID$(CurrentCode$, Zloop% + 1, 1) < CHR$(255) THEN„            GOTO NextPeg„        ELSEIF MID$(Scode$, Xloop% + 1, 1) = MID$(Xcode$, Zloop% + 1, 1) THEN„            MID$(Guess(TurnNum%).Clue, CurrentClue% + 1, 1) = CHR$(2)„            MID$(CurrentClue$, Xloop% + 1, 1) = CHR$(2)„            MID$(CurrentCode$, Zloop% + 1, 1) = CHR$(2)„            SetClue CurrentClue%, TurnNum%, 1„            CurrentClue% = CurrentClue% + 1„            Guess(TurnNum%).Wht = Guess(TurnNum%).Wht + 1„        END IF„NextPeg:„    NEXT Xloop%„NEXT Zloop%„„END SUB„„FUNCTION Kbd$„„Key$ = ""„WHILE Key$ = ""„    Key$ = INKEY$„WEND„„Kbd$ = Key$„„END FUNCTION„„SUB MouseDriver (Mouse0%, Mouse1%, Mouse2%, Mouse3%) STATIC„„    DIM Registers AS RegTypeX„„    IF NOT (MouseChecked%) THEN„        DEF SEG = 0„        MouseSegment& = 256& * PEEK(207) + PEEK(206)„        MouseOffset& = 256& * PEEK(205) + PEEK(204)„        DEF SEG = MouseSegment&„        IF (MouseSegment& = 0 AND MouseOffset& = 0) OR PEEK(MouseOffset&) = 207 THEN„            MousePresent% = False%: MouseChecked% = True%„            DEF SEG„        END IF„    END IF„„    IF NOT (MousePresent%) AND MouseChecked% THEN„        Mouse0% = False%„        EXIT SUB„    END IF„    „    Registers.ax = Mouse0%: Registers.bx = Mouse1%: Registers.cx = Mouse2%: Registers.dx = Mouse3%„    InterruptX 51, Registers, Registers„„    Mouse0% = Registers.ax: Mouse1% = Registers.bx: Mouse2% = Registers.cx: Mouse3% = Registers.dx„„    IF MouseChecked% THEN EXIT SUB„„    IF Mouse0% AND NOT MouseChecked% THEN„        MousePresent% = True%„        Mouse0% = True%„        DEF SEG„    END IF„    MouseChecked% = True%„    „END SUB„„SUB MouseHide„„   MouseDriver 2, 0, 0, 0„„END SUB„„SUB MouseInit„„    MouseDriver 0, 0, 0, 0„    „END SUB„„SUB MousePoll (Row%, Col%, LButton%, RButton%)„„    ScreenMode% = GetScreenMode%„„    MouseDriver 3, Button%, Col%, Row%„„    IF ScreenMode% THEN„        Row% = Row% / 8 + 1: Col% = Col% / 8 + 1„    END IF„                                                „    IF Button% AND 1 THEN„        LButton% = True%„    ELSE„        LButton% = False%„    END IF„„    IF Button% AND 2 THEN„        RButton% = True%„    ELSE„        RButton% = False%„    END IF„„END SUB„„SUB MouseShow„„    MouseDriver 1, 0, 0, 0„„END SUB„„SUB PegLarge (PegXloc%)„       „CIRCLE (30 + PegXloc% * 47, 228), 21, 14„PAINT (30 + PegXloc% * 47, 228), 14, 14„CIRCLE (30 + PegXloc% * 47, 228), 17, 15„CIRCLE (30 + PegXloc% * 47, 228), 16, 15„CIRCLE (30 + PegXloc% * 47, 228), 15, 15„„END SUB„„SUB PegSmall (PegXloc%, PegYloc%)„       „CIRCLE (518 + PegXloc% * 15, 467 - PegYloc% * 15), 5, 14„PAINT (518 + PegXloc% * 15, 467 - PegYloc% * 15), 14, 14„CIRCLE (518 + PegXloc% * 15, 467 - PegYloc% * 15), 3, 15„„END SUB„„FUNCTION PlayAgain%„„CodeBar -1„ColorBar 0„GameBoard -1„„Clr% = 0: Peg% = 1„FOR Zloop% = 1 TO 2„    CIRCLE (30 + Peg% * 47, 228), 21, Clr%„    PAINT (30 + Peg% * 47, 228), Clr%, Clr%„    Clr% = 1: Peg% = 6„NEXT Zloop%„„WordPrint 18, -25, 6, -1, "PLAY AGAIN                    EXIT GAME"„TimePause 2„MouseShow„PlayAgainPress:„MousePoll Row%, Col%, LButton%, RButton%„„IF (Col% > 6 AND Col% < 383) AND (Row% > 204 AND Row% < 252) THEN„    IF LButton% THEN„        MouseHide„        TestPoint% = POINT(Col% + 1, Row% + 1)„        MouseShow„        IF TestPoint% = 0 THEN„            PlayAgain% = -1„        ELSEIF TestPoint% = 1 THEN„            PlayAgain% = 0„        ELSE„            GOTO PlayAgainPress„        END IF„    ELSE„        GOTO PlayAgainPress„    END IF„ELSE„    GOTO PlayAgainPress„END IF„„MouseHide„„END FUNCTION„„SUB ScoreCard„„DrawBox 1, 1, 20, 15, -1, "TS" + STRING$(NumPlayer%, "S") + "B", 1„FOR Zloop% = 0 TO NumPlayer%„    Ztemp$ = RIGHT$("000" + RIGHT$(STR$(PlayerScore%(Zloop%)), LEN(STR$(PlayerScore%(Zloop%))) - 1), 3)„    WordPrint 2 + Zloop%, 3, 1 + Zloop%, -1, PlayerName$(Zloop%) + SPACE$(15 - LEN(PlayerName$(Zloop%))) + Ztemp$„NEXT Zloop%„„END SUB„„FUNCTION SelectCode$ (NumPegs%, NumColor%)„„RANDOMIZE (TIMER)„„CodeColor$ = STRING$(14, 1)„„FOR Zloop% = 0 TO NumPegs%„NewColor:„    Ztemp% = INT(RND * NumColor%) + 1„    IF MID$(CodeColor$, Ztemp%, 1) = CHR$(255) THEN GOTO NewColor„    TempCode$ = TempCode$ + CHR$(Ztemp%)„    MID$(CodeColor$, Ztemp%, 1) = CHR$(255)„NEXT Zloop%„„SelectCode$ = TempCode$„„END FUNCTION„„SUB SetClue (ClueNum%, TurnNum%, Clr%)„„CIRCLE (494 - ClueNum% * 12, 467 - TurnNum% * 15), 3, Clr%„PAINT (494 - ClueNum% * 12, 467 - TurnNum% * 15), Clr%, Clr%„„END SUB„„SUB SetColors„„CLS„SetPalette 0, 0, 0, 0      ' BLACK„SetPalette 1, 55, 55, 55   ' WHITE„SetPalette 2, 25, 25, 25   ' GRAY„SetPalette 3, 45, 0, 0     ' RED„SetPalette 4, 0, 45, 0     ' GREEN„SetPalette 5, 0, 0, 45     ' BLUE„SetPalette 6, 53, 53, 0    ' YELLOW„SetPalette 7, 40, 0, 40    ' PURPLE„SetPalette 8, 60, 30, 0    ' ORANGE„SetPalette 9, 0, 40, 40   ' CYAN„SetPalette 10, 63, 31, 31  ' PEACH„SetPalette 11, 44, 0, 24   ' ROSE„SetPalette 12, 0, 20, 5    ' GRASS„SetPalette 13, 0, 20, 60   ' SKY„SetPalette 14, 18, 9, 0    ' BROWN 2„SetPalette 15, 32, 16, 0   ' BROWN 1„„END SUB„„SUB SetPalette (Number%, Red%, Green%, Blue%)„„    PALETTE Number%, 65536 * Blue% + 256 * Green% + Red%„„END SUB„„SUB ShowCode (NumPegs%, Xcode$)„„FOR Zloop% = 0 TO NumPegs%„    Ztemp% = ASC(MID$(Xcode$, Zloop% + 1, 1))„    CIRCLE (518 + Zloop% * 15, 15), 5, Ztemp% - 1„    PAINT (518 + Zloop% * 15, 15), Ztemp% - 1, Ztemp% - 1„NEXT Zloop%„„END SUB„„SUB StartUp„„CLS„„Xalpha 20, 1, 13, -1, "MASTERCODE"„„WordPrint 2, -41, 4, -1, "…ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª"„WordPrint 3, -41, 4, -1, "∫                            ∫"„WordPrint 4, -41, 4, -1, "»ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº"„WordPrint 3, -41, 12, -1, "NUMBER OF PLAYERS  (1-8)  "„„Sloop.01:„    NumPlayer% = VAL(WordInput$(3, 53, 11, -1, 11, -1, 1, "1")) - 1„    IF NumPlayer% < 0 OR NumPlayer% > 7 THEN GOTO Sloop.01„„WordPrint 5, -41, 4, -1, "…ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª"„FOR Zloop% = 0 TO NumPlayer%„    WordPrint 6 + Zloop%, -41, 4, -1, "∫                            ∫"„NEXT Zloop%„WordPrint 7 + NumPlayer%, -41, 4, -1, "»ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº"„„FOR Zloop% = 0 TO NumPlayer%„    WordPrint 6 + Zloop%, 28, 12, -1, "PLAYER  #" + RIGHT$(STR$(Zloop% + 1), 1)„    PlayerName$(Zloop%) = WordInput$(6 + Zloop%, 40, 11, -1, 12, -1, 14, PlayerName$(Zloop%))„NEXT Zloop%„„WordPrint 8 + NumPlayer%, -41, 4, -1, "…ÕÕÕÕÕÕÕ              ÕÕÕÕÕÕÕª"„FOR Zloop% = 0 TO 1„    WordPrint 9 + Zloop% + NumPlayer%, -41, 4, -1, "∫                            ∫"„NEXT Zloop%„WordPrint 11 + NumPlayer%, -41, 4, -1, "»ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº"„„FOR Zloop% = 0 TO NumPlayer%„    WordPrint 8 + NumPlayer%, -41, 0, -1, SPACE$(14)„    WordPrint 8 + NumPlayer%, -41, 9, -1, PlayerName$(Zloop%)„    WordPrint 9 + NumPlayer%, 28, 12, -1, "TOTAL PEGS IN CODE (3-8)"„    WordPrint 10 + NumPlayer%, -41, 0, -1, SPACE$(26)„SLOOP.02:„    PlayerPeg%(Zloop%) = VAL(WordInput$(9 + NumPlayer%, 53, 11, -1, 11, -1, 1, "3")) - 1„    IF PlayerPeg%(Zloop%) < 2 OR PlayerPeg%(Zloop%) > 7 THEN GOTO SLOOP.02„    LowDif$ = CHR$(PlayerPeg%(Zloop%) + 50)„    WordPrint 10 + NumPlayer%, 30, 12, -1, "TOTAL COLORS (" + LowDif$ + "-14)"„SLOOP.03:„    PlayerColor%(Zloop%) = VAL(WordInput$(10 + NumPlayer%, 50, 11, -1, 11, -1, 2, LowDif$))„    IF PlayerColor%(Zloop%) < VAL(LowDif$) OR PlayerColor%(Zloop%) > 14 THEN GOTO SLOOP.03„NEXT Zloop%„„WordPrint 8 + NumPlayer%, -41, 4, -1, "…ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª"„FOR Zloop% = 0 TO 1„    WordPrint 9 + NumPlayer%, -41, 4, -1, "∫                            ∫"„NEXT Zloop%„WordPrint 11 + NumPlayer%, -41, 4, -1, "»ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº"„WordPrint 9 + NumPlayer%, -41, 12, -1, "NUMBER OF ROUNDS TO PLAY"„WordPrint 10 + NumPlayer%, -41, 12, -1, " TOTAL ROUNDS (1-9) # "„SLOOP.04:„NumGames% = VAL(WordInput$(10 + NumPlayer%, 50, 11, -1, 11, -1, 1, "1")) - 1„IF NumGames% < 0 OR NumGames% > 8 THEN GOTO SLOOP.04„„END SUB„„SUB TimePause (TimeDelay%)„„StartTime& = TIMER * 100 + TimeDelay% * 10„„DO„LOOP UNTIL (TIMER * 100) > StartTime&„„END SUB„„SUB TitleScreen„„SetPalette 1, 0, 0, 0: SetPalette 2, 0, 0, 0: SetPalette 3, 0, 0, 0„Xalpha 2, 1, 1, -1, "MASTERCODE"„GOSUB TitleExit„Xalpha 13, 32, 2, -1, "BY"„GOSUB TitleExit„Xalpha 23, 5, 3, -1, "KEN SWEET"„GOSUB TitleExit„FOR Zloop% = 0 TO 63„    SetPalette 1, Zloop%, 0, 0: SetPalette 2, 0, Zloop%, 0: SetPalette 3, 0, 0, Zloop%„    GOSUB TitleExit„NEXT Zloop%„FOR Zloop% = 0 TO 63„    SetPalette 1, 63 - Zloop%, Zloop%, 0: SetPalette 2, 0, 63 - Zloop%, Zloop%: SetPalette 3, Zloop%, 0, 63 - Zloop%„    GOSUB TitleExit„NEXT Zloop%„FOR Zloop% = 0 TO 63„    SetPalette 1, 0, 63 - Zloop%, Zloop%: SetPalette 2, Zloop%, 0, 63 - Zloop%: SetPalette 3, 63 - Zloop%, Zloop%, 0„    GOSUB TitleExit„NEXT Zloop%„FOR Zloop% = 0 TO 63„    SetPalette 1, Zloop%, 0, 63 - Zloop%: SetPalette 2, 63 - Zloop%, Zloop%, 0: SetPalette 3, 0, 63 - Zloop%, Zloop%„    GOSUB TitleExit„NEXT Zloop%„„EXIT SUB„„TitleExit:„IF INKEY$ <> "" THEN EXIT SUB„RETURN„„END SUB„„FUNCTION WordInput$ (Row%, Col%, Fclr%, Bclr%, HFclr%, HBclr%, TextLen%, Text$)„„Text$ = LEFT$(Text$ + SPACE$(TextLen%), TextLen%)„TempText$ = Text$: Done% = 0: TextPos% = 1„„DO WHILE NOT (Done%)„    LOCATE Row%, Col%„    IF Bclr% >= 0 THEN„        COLOR Fclr%, Bclr%„    ELSE„        COLOR Fclr%„    END IF„    PRINT LEFT$(RTRIM$(TempText$) + STRING$(TextLen%, "_"), TextLen%);„  „    LOCATE Row%, Col% + TextPos% - 1„    IF HBclr% >= 0 THEN„        COLOR HFclr%, HBclr%„    ELSE„        COLOR HFclr%„    END IF„    PRINT MID$(TempText$, TextPos%, 1);„„    WKey$ = Kbd$„„    SELECT CASE WKey$„        CASE CHR$(27): TempText$ = "": GOTO ENDINPUT„        CASE CHR$(0) + "G": TextPos% = 1„        CASE CHR$(0) + "O": TextPos% = TextLen%„        CASE CHR$(0) + "S": TempText$ = LEFT$(TempText$, TextPos% - 1) + MID$(TempText$, TextPos% + 1) + " "„        CASE CHR$(13): Done% = -1„        CASE CHR$(0) + "K": TextPos% = TextPos% - 1: IF TextPos% < 1 THEN TextPos% = 1„        CASE CHR$(0) + "M": TextPos% = TextPos% + 1: IF TextPos% > TextLen% THEN TextPos% = TextLen%„        CASE CHR$(0) + "R": TempText$ = LEFT$(LEFT$(TempText$, TextPos% - 1) + " " + MID$(TempText$, TextPos%), TextLen%)„        CASE CHR$(8)„            IF TextPos% > 1 THEN„                TempText$ = LEFT$(TempText$, TextPos% - 2) + MID$(TempText$, TextPos%) + " "„                TextPos% = TextPos% - 1„            ELSE„                TempText$ = MID$(TempText$, 2) + " "„            END IF„        CASE " " TO "~"„            MID$(TempText$, TextPos%, 1) = WKey$: TextPos% = TextPos% + 1„            IF TextPos% > TextLen% THEN TextPos% = TextLen%„    END SELECT„LOOP„„ENDINPUT:„„LOCATE Row%, Col%„IF Bclr% >= 0 THEN„    COLOR Fclr%, Bclr%„ELSE„    COLOR Fclr%„END IF„PRINT LEFT$(RTRIM$(TempText$) + SPACE$(TextLen%), TextLen%);„WordInput$ = RTRIM$(TempText$)„„END FUNCTION„„SUB WordPrint (Row%, Col%, Fclr%, Bclr%, Text$)„„IF Col% >= 1 THEN„    LOCATE Row%, Col%„ELSE„    LOCATE Row%, ABS(Col%) - LEN(Text$) / 2„END IF„„IF Bclr% >= 0 THEN„    COLOR Fclr%, Bclr%„ELSE„    COLOR Fclr%„END IF„„PRINT Text$;„„END SUB„„SUB Xalpha (Row%, Col%, Fclr%, Bclr%, Text$)„„FOR Zloop% = 1 TO LEN(Text$)„    ColTemp% = Col% + (Zloop% - 1) * 8„SELECT CASE UCASE$(MID$(Text$, Zloop%, 1))„    CASE " ": Xchr$ = "00000000000000"„    CASE "A": Xchr$ = "081422227F4141"„    CASE "B": Xchr$ = "7E41417E41417E"„    CASE "C": Xchr$ = "3E41404040413E"„    CASE "D": Xchr$ = "7E41414141417E"„    CASE "E": Xchr$ = "7F40407E40407F"„    CASE "K": Xchr$ = "41424478444241"„    CASE "M": Xchr$ = "41635549414141"„    CASE "N": Xchr$ = "41615149454341"„    CASE "O": Xchr$ = "3E41414141413E"„    CASE "R": Xchr$ = "7E41417E444241"„    CASE "S": Xchr$ = "3E41403E01413E"„    CASE "T": Xchr$ = "7F080808080808"„    CASE "W": Xchr$ = "41414149556341"„    CASE "Y": Xchr$ = "4141413E080808"„END SELECT„„Xpatern Row%, ColTemp%, Fclr%, Bclr%, Xchr$, 6„„NEXT Zloop%„„END SUB„„SUB Xpatern (Row%, Col%, Fclr%, Bclr%, Patern$, BitNum%)„„IF Bclr% >= 0 THEN„    COLOR Fclr%, Bclr%„ELSE„    COLOR Fclr%„END IF„„FOR Zloop0% = 1 TO LEN(Patern$) STEP 2„    LOCATE Row% + INT(Zloop0% / 2), Col%„    Pvalue% = VAL("&H" + MID$(Patern$, Zloop0%, 2))„    IF Pvalue% = 0 THEN„        PRINT SPACE$(BitNum% + 1);„    ELSE„        FOR Zloop1% = BitNum% TO 0 STEP -1„            IF (Pvalue% AND 2 ^ Zloop1%) = 2 ^ Zloop1% THEN PRINT "€";  ELSE PRINT " ";„        NEXT Zloop1%„    END IF„NEXT Zloop0%„„END SUB„„