Michael G. Stewart             BASE64 ENCODER                 mikegs@juno.com                09-16-00 (19:35)       LB                     87   2677     BASE64.BAS  'works with LB1.42w, and should work with LB2.0, but not tested.ãã[base64encode]ã'required variables:ã' base64string$ - the string to be encodedã'returns:ã' base64encoded$ - the base64 encoded stringã'uses:ã' with tcp4w.dll for HTTP user authentication.ãbase64code$ = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"ã'convert to binaryãfor b64a = 1 to len(base64string$)ã  base64char = asc(mid$(base64string$, a, 1))ã  if base64char >= 128 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 128ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 64 thenã    base64bin$=bin$+"1"ã    base64char = base64char - 64ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 32 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 32ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 16 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 16ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 8 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 8ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 4 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 4ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 2 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 2ã  elseã    base64bin$=base64bin$+"0"ã  end ifã  if base64char >= 1 thenã    base64bin$=base64bin$+"1"ã    base64char = base64char - 1ã  elseã    base64bin$=base64bin$+"0"ã  end ifãnext b64aã'make it a multiple of 6 bits.ãif (len(base64bin$)/6)-int(len(base64bin$)/6) <> 0 thenã  for b64a = 1 to ((len(base64bin$)/6)-int(len(base64bin$)/6))*6ã    base64bin$ = base64bin$ + "0"ã  next b64aãend ifã'convert each 6-bit "byte" into a charãfor b64a = 1 to len(base64bin$) step 6ã  b64temp$ = mid$(base64bin$, b64a, 6)     ã  base64char = 0ã  if mid$(b64temp$, 1, 1) = "1" then base64char = base64char + 32ã  if mid$(b64temp$, 2, 1) = "1" then base64char = base64char + 16ã  if mid$(b64temp$, 3, 1) = "1" then base64char = base64char + 8ã  if mid$(b64temp$, 4, 1) = "1" then base64char = base64char + 4ã  if mid$(b64temp$, 5, 1) = "1" then base64char = base64char + 2ã  if mid$(b64temp$, 6, 1) = "1" then base64char = base64char + 1ã  base64encoded$ = base64encoded$ + mid$(base64code$, base64char, 1)ãnext b64aã'add on padding to make it a multiple of 4bytes.ãif (len(base64encoded$)/4)-int(len(base64encoded$)/4) <> 0 thenã  for b64a = 1 to ((len(base64encoded$)/4)-int(len(base64encoded$)/4))*4ã    base64encoded$ = base64encoded$ + "="ã  next b64aãend ifãreturnã