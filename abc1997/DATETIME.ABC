Egbert Zijlema                 PRINT COUNTRY SPECIFIC DATE    E.Zijlema@uni4nn.iaf.nl        11-02-96 (16:40)       PB                     55   1766     DATES.BAS   ' CTRYDATE.BAS    - prints a date on the screen, using country specific„'                   separator - e.g.: dot in Germany, slash in UK & Japan,„'                   hyphen in USA etc.„„' Author          : Egbert Zijlema (E.Zijlema@uni4nn.iaf.nl)„' (up)Date        : November 22, 1996„' Language        : Power Basic 3.2„' Copyright status: Public Domain„„' Notification    : Result depends of correct COUNTRY setting„'                   in your CONFIG.SYS file!„„' ------------- begin code --------------„DEFINT A - Z„„SUB GetCountryInfo(format, seperator$)„  buffer$ = SPACE$(64)                ' information buffer„  REG 8, STRSEG(buffer$)              ' DS = segment of buffer„  REG 4, STRPTR(buffer$)              ' DX = offset of buffer„  REG 1, &H3800                       ' AX = service„  CALL INTERRUPT &H21„„  ' after the call buffer$ = filled:„  format = ASC(buffer$)               ' date format (1 out of 3) = 1st byte„  seperator$ = MID$(buffer$, 12, 1)   ' delimiter = 12th byte„END SUB„„FUNCTION CountrySpecificDate(InputDate$) AS STRING„„  ' InputDate$ as MM-DD-YYYY (= default format)„„  IF InputDate$ = "" THEN InputDate$ = DATE$„  MM$ = MID$(InputDate$, 1, 2)„  DD$ = MID$(InputDate$, 4, 2)„  YY$ = MID$(InputDate$, 7)„„  GetCountryInfo form, delim$„  SELECT CASE form„    CASE 0„      FUNCTION = InputDate$          ' USA (Basic's default)„    CASE 1„      FUNCTION = DD$ + delim$ + _„                 MM$ + delim$ + YY$  ' EUR„    CASE 2„      FUNCTION = YY$ + delim$ + _„                 MM$ + delim$ + DD$  ' JAP„  END SELECT„END FUNCTION„„' demo call„CLS„  PRINT "To-day's date is: "; CountrySpecificDate("")      ' use actual date„END„„' ----- end code ------------------------------„Egbert Zijlema                 MULTI-LANGUAGE CALENDAR ROUTINEe.zylema@castel.nl             01-13-97 (13:05)       PB                     512  18235    CELEBRAT.BAS$LIB ALL OFF„$ERROR ALL OFF„$OPTIMIZE SIZE„$FLOAT NPX                             ' for machines with math processor„$CPU 80386                             ' 386 and higher„„' $COMPILE EXE "FEESTDGN.EXE"          ' dutch   }„' $COMPILE EXE "FEIERTAG.EXE"          ' german  } un-REM filename of choice„' $COMPILE EXE                         ' english }„„„' CELEBRAT.BAS - a multi-language calendar routine„' Author       : Egbert Zijlema (E.Zijlema@uni4nn.iaf.nl)„' (up)Date     : 13 January 1997 (Julian 2450462)„' Status       : Public Domain„' Compiler     : Power Basic 3.2 for DOS„„' CELEBRAT.BAS displays the dates of the celebration days for a given year.„' Additionally it performs a browsable monthly calendar.„„' Screen text is either in English, German or Dutch, which depends„' of a correct COUNTRY setting in your CONFIG.SYS file.„' German text will be shown in Germany and Austria, Dutch in The„' Netherlands. In any other country the program defaults to English.„' When writing a date to the screen, it uses the correct„' delimiters (e.g. dot for Germany, slash for the UK, hyphen for„' the USA and The Netherlands)„„' Note: ASCII characters > 127 are written as: CHR$(<value>). This has„'       no special reason, except to avoid that Window's Notepad will„'       change them when copying the code to my Internet mailer (e.g.:„'       the German name for March, the Dutch florin sign)„„DEFINT A - Z                          ' all variables integer, unless tagged„DIM SevenDays(1 : 7) AS SHARED STRING„DIM TwelveMonths (1 : 12) AS SHARED STRING„DIM DaysInMonth(1 : 12) AS SHARED INTEGER„DIM ScreenText(1 : 15) AS SHARED STRING„„SUB FillDaysInMonth„  DaysInMonth( 1) = 31 : DaysInMonth( 2) = 28„  DaysInMonth( 3) = 31 : DaysInMonth( 4) = 30„  DaysInMonth( 5) = 31 : DaysInMonth( 6) = 30„  DaysInMonth( 7) = 31 : DaysInMonth( 8) = 31„  DaysInMonth( 9) = 30 : DaysInMonth(10) = 31„  DaysInMonth(11) = 30 : DaysInMonth(12) = 31„END SUB„„SUB GetCountryInfo(format, buffer$)„  ' results depend on correct COUNTRY settings in CONFIG.SYS„„  buffer$ = SPACE$(64)                ' information buffer„  REG 8, STRSEG(buffer$)              ' DS = segment of buffer„  REG 4, STRPTR(buffer$)              ' DX = offset of buffer„  REG 1, &H3800                       ' AX = service„  CALL INTERRUPT &H21                 ' fill buffer$„  format = ASC(buffer$)               ' date format (1 out of 3) = 1st byte„END SUB„„SUB FillDutchArrays„  SevenDays(1) = "maandag"  : SevenDays(2) = "dinsdag"„  SevenDays(3) = "woensdag" : SevenDays(4) = "donderdag"„  SevenDays(5) = "vrijdag"  : SevenDays(6) = "zaterdag"„  SevenDays(7) = "zondag"„„  TwelveMonths( 1) = "januari"   : TwelveMonths( 2) = "februari"„  TwelveMonths( 3) = "maart"     : TwelveMonths( 4) = "april"„  TwelveMonths( 5) = "mei"       : TwelveMonths( 6) = "juni"„  TwelveMonths( 7) = "juli"      : TwelveMonths( 8) = "augustus"„  TwelveMonths( 9) = "september" : TwelveMonths(10) = "oktober"„  TwelveMonths(11) = "november"  : TwelveMonths(12) = "december"„„  ScreenText( 1) = "Datum: "         : ScreenText( 2) = "Tijd : "„  ScreenText( 3) = " = afsluiten"    : ScreenText( 4) = " = maand"„  ScreenText( 5) = " = jaar"         : ScreenText( 6) = "FEESTDAGEN"„  ScreenText( 7) = "Nieuwjaar    : " : ScreenText( 8) = "Goede vrijdag: "„  ScreenText( 9) = "Pasen        : " : ScreenText(10) = "Hemelvaart   : "„  ScreenText(11) = "Pinksteren   : " : ScreenText(12) = "Kerstdagen   : "„  ScreenText(13) = " v.C."           : ScreenText(14) = " = eeuw"„  ScreenText(15) = "Tijd- en datumroutines door: "„END SUB„„SUB FillEnglishArrays„  SevenDays(1) = "Monday"    : SevenDays(2) = "Tuesday"„  SevenDays(3) = "Wednesday" : SevenDays(4) = "Thursday"„  SevenDays(5) = "Friday"    : SevenDays(6) = "Saturday"„  SevenDays(7) = "Sunday"„„  TwelveMonths( 1) = "January"   : TwelveMonths( 2) = "February"„  TwelveMonths( 3) = "March"     : TwelveMonths( 4) = "April"„  TwelveMonths( 5) = "May"       : TwelveMonths( 6) = "June"„  TwelveMonths( 7) = "July"      : TwelveMonths( 8) = "August"„  TwelveMonths( 9) = "September" : TwelveMonths(10) = "October"„  TwelveMonths(11) = "November"  : TwelveMonths(12) = "December"„„  ScreenText( 1) = "Date : "         : ScreenText( 2) = "Time : "„  ScreenText( 3) = " = Quit"         : ScreenText( 4) = " = Month"„  ScreenText( 5) = " = Year"         : ScreenText( 6) = "CELEBRATION DAYS"„  ScreenText( 7) = "New Year     : " : ScreenText( 8) = "Good Friday  : "„  ScreenText( 9) = "Easter       : " : ScreenText(10) = "Ascension day: "„  ScreenText(11) = "Whit days    : " : ScreenText(12) = "Christmas    : "„  ScreenText(13) = " b.C."           : ScreenText(14) = " = Century"„  ScreenText(15) = "Time & date routines by: "„END SUB„„SUB FillGermanArrays„  SevenDays(1) = "Montag"   : SevenDays(2) = "Dienstag"„  SevenDays(3) = "Mittwoch" : SevenDays(4) = "Donnerstag"„  SevenDays(5) = "Freitag"  : SevenDays(6) = "Samstag"„  SevenDays(7) = "Sonntag"„„  TwelveMonths( 1) = "Januar"    : TwelveMonths( 2) = "Februar"„  TwelveMonths( 3) = "M" + CHR$(132) + "rz"„  TwelveMonths( 4) = "April"„  TwelveMonths( 5) = "Mai"       : TwelveMonths( 6) = "Juni"„  TwelveMonths( 7) = "Juli"      : TwelveMonths( 8) = "August"„  TwelveMonths( 9) = "September" : TwelveMonths(10) = "Oktober"„  TwelveMonths(11) = "November"  : TwelveMonths(12) = "Dezember"„„  ScreenText( 1) = "Datum: "         : ScreenText( 2) = "Zeit : "„  ScreenText( 3) = " = Ende"         : ScreenText( 4) = " = Monat"„  ScreenText( 5) = " = Jahr"         : ScreenText( 6) = "FEIERTAGE"„  ScreenText( 7) = "Neu Jahr     : " : ScreenText( 8) = "Karfreitag   : "„  ScreenText( 9) = "Ostern       : " : ScreenText(10) = "Himmelfahrt  : "„  ScreenText(11) = "Pfingsten    : " : ScreenText(12) = "Weihnachten  : "„  ScreenText(13) = " v.C."           : ScreenText(14) = " = Jahr100"„  ScreenText(15) = "Zeit und Datum Routinen durch: "„END SUB„„SUB DisplayCalendar(page, annum)„  FirstDay$ = DayOfTheWeek(annum, page, 1)     ' 1st day of the month„„  Y = VAL(MID$(DATE$, 7))                      ' }„  M = VAL(LEFT$(DATE$, 2))                     ' } actual date„  D = VAL(MID$(DATE$, 4, 2))                   ' } we need this to test„  ToDay& = Julian(Y, M, D)                     ' } for inverse displaying„„  days = DaysInMonth(page)                     ' number of days„  IF page = 2 THEN                             ' February„    days = days + LeapYear(annum)              ' 28 + 1 ?„  END IF„„  COLOR 0, 1                                   ' calendar's background blue„  FOR row = 1 TO 8„    LOCATE row, 1„    PRINT SPACE$(55)„  NEXT„„  COLOR 15„  FOR count = 1 TO 7„    header$ = header$ + LEFT$(SevenDays(count), 3) + SPACE$(3)„  NEXT„  LOCATE 1, 16 : PRINT RTRIM$(header$)„„  COLOR 11„  LOCATE 2, 2 : PRINT YearToDisplay(annum)„  LOCATE 3, 2 : PRINT TwelveMonths(page)       ' name of the month„„  ' display calendar:„  col = INSTR(header$, LEFT$(FirstDay$, 3)) + 16„  row = 3„  FOR count = 1 TO days„    fore = 7„    TestDate& = Julian(annum, page, count)„    IF col      = 53 OR _„      count = 1 AND page = 1 OR _              ' NewYear„      count = 25 AND page = 12 OR _            ' Christmas Day„      count = 26 AND page = 12 OR _            ' Boxing Day„      TestDate& = GoodFriday(annum) OR _„      TestDate& = EasterMonday(annum) OR _„      TestDate& = AscensionDay(annum) OR _„      TestDate& = WhitMonday(annum) THEN INCR fore, 7      ' yellow„„    IF TestDate& = ToDay& THEN„      IF fore = 14 THEN COLOR 14, 7 ELSE COLOR 1, fore     ' inverse„    ELSE„      COLOR fore, 1„    END IF„    LOCATE row, col„    IF annum = -4713 AND page = 11 AND count < 25 THEN„      PRINT SPACE$(2)                          ' skip Julians < 1„    ELSE„      PRINT RIGHT$(SPACE$(2) + LTRIM$(RTRIM$(STR$(count))), 2)„    END IF„    INCR col, 6„    IF col = 59 THEN„      col = 17 : INCR row„    END IF„  NEXT„END SUB„„SUB DisplayCelebrations(year)„  COLOR 7, 0„  FOR row = 13 TO 16„    LOCATE row, 18 : PRINT SPACE$(63)         ' clear fields„  NEXT„  temp$ = JulToDate(GoodFriday(year))„  LOCATE 13, 18„  PRINT LTRIM$(MID$(temp$, 4, 2), ANY "0"); CHR$(32);„  PRINT TwelveMonths(VAL(LEFT$(temp$, 2)))„  TwoDays EasterSunday(year), EasterMonday(year), temp$„  LOCATE 14, 18 : PRINT temp$„  temp$ = JulToDate(AscensionDay(year))„  LOCATE 15, 18„  PRINT LTRIM$(MID$(temp$, 4, 2), ANY "0"); CHR$(32);„  PRINT TwelveMonths(VAL(LEFT$(temp$, 2)))„  TwoDays WhitSunday(year), WhitMonday(year), temp$„  LOCATE 16, 18 : PRINT temp$„END SUB„„SUB TwoDays(first&, second&, result$)„  temp1$ = JulToDate(first&)„  temp2$ = JulToDate(second&)„  month1$ = TwelveMonths(VAL(LEFT$(temp1$, 2)))„  month2$ = TwelveMonths(VAL(LEFT$(temp2$, 2)))„  result$ = LTRIM$(MID$(temp1$, 4, 2), ANY "0")„  IF month1$ = month2$ THEN„    result$ = result$ + ", " + LTRIM$(MID$(temp2$, 4, 2), ANY "0") + _„              CHR$(32) + month2$„  ELSE„    result$ = result$ + CHR$(32) + month1$ + ", " + _„              LTRIM$(MID$(temp2$, 4, 2), ANY "0") + CHR$(32) + month2$„  END IF„END SUB„„FUNCTION GetKey AS INTEGER„  STATIC t$„  DO„    IF t$ <> TIME$ THEN„      t$ = TIME$„      COLOR 15, 0„      LOCATE 2, 65 : PRINT CountrySpecificTime„      LOCATE 3, 65 : PRINT TwelveTime„    END IF„  LOOP UNTIL INSTAT„  FUNCTION = CVI(INKEY$ + CHR$(0))„END FUNCTION„„SUB InitialScreen„  COLOR 12, 0„  LOCATE 5, 58 : PRINT "Esc"„  LOCATE 6, 58 : PRINT CHR$(27, 32, 26)„  LOCATE 7, 58 : PRINT CHR$(25, 32, 24)„  LOCATE 8, 58 : PRINT "PgUp/Dn"„  LOCATE 9, 58 : PRINT "Home"„„  COLOR 15„  LOCATE 1, 65 : PRINT CountrySpecificDate(DATE$)„  LOCATE  9, 1 : PRINT TextualDate(DATE$)„  LOCATE  9, 1 : PRINT UCASE$(LEFT$(TextualDate(DATE$), 1))  ' dutch„  LOCATE 11, 1 + LEN(ScreenText(6))„                 PRINT " IN "; YearToDisplay(VAL(MID$(DATE$, 7)))„  LOCATE 11, 1 : PRINT ScreenText(6)„  LOCATE 12, 3 : PRINT ScreenText(7)„  LOCATE 13, 3 : PRINT ScreenText(8)„  LOCATE 14, 3 : PRINT ScreenText(9)„  LOCATE 15, 3 : PRINT ScreenText(10)„  LOCATE 16, 3 : PRINT ScreenText(11)„  LOCATE 17, 3 : PRINT ScreenText(12)„  LOCATE 25, 1 + LEN(ScreenText(15)) : PRINT "Egbert Zijlema";„„  COLOR 7„  LOCATE 1, 58 : PRINT ScreenText(1)„  LOCATE 2, 58 : PRINT ScreenText(2)„  LOCATE 5, 65 : PRINT ScreenText(3)„  LOCATE 6, 65 : PRINT ScreenText(4)„  LOCATE 7, 65 : PRINT ScreenText(5)„  LOCATE 8, 65 : PRINT ScreenText(14)„  LOCATE 12, 18: PRINT "1 "; TwelveMonths(1)„  LOCATE 17, 18: PRINT "25, 26 "; TwelveMonths(12)„  LOCATE 25, 1 : PRINT ScreenText(15);„END SUB„„SUB Menu„  page  = VAL(LEFT$(DATE$, 2))„  annum = VAL(MID$(DATE$, 7))„  DisplayCalendar page, annum„  DisplayCelebrations annum„„  DO„    KeyIn = GetKey„    calendar = 0 : celebrat = 0„    SELECT CASE KeyIn„      CASE 77 * 256                                     ' right arrow„        IF annum = 9999 AND page = 12 THEN EXIT SELECT  ' highest 4 digityr„        INCR page„        IF page > 12 THEN„          page = 1„          INCR annum„          celebrat = -1„        END IF„        calendar = -1„      CASE 75 * 256                                     ' left arrow„        IF annum = -4713 AND page < 12 THEN EXIT SELECT ' Julian < 1„        DECR page„        IF page < 1 THEN„          page = 12„          DECR annum„          celebrat = -1„        END IF„        calendar = -1„      CASE 81 * 256                                     ' PgDn„        IF annum > 9899 THEN EXIT SELECT„        INCR annum, 100„        calendar = -1„        celebrat = -1„      CASE 71 * 256                                     ' Home„        yr  = VAL(MID$(DATE$, 7))„        mth = VAL(LEFT$(DATE$, 2))„        IF annum = yr AND page = mth THEN EXIT SELECT„        IF annum <> yr THEN„          annum = yr„          celebrat = -1„        END IF„        page = mth„        calendar = -1„      CASE 72 * 256                                     ' up arrow„        IF annum = 9999 THEN EXIT SELECT„        INCR annum„        calendar = -1„        celebrat = -1„      CASE 73 * 256                                     ' PgUp„        IF annum < -4612 THEN EXIT SELECT„        DECR annum, 100„        calendar = -1„        celebrat = -1„      CASE 80 * 256                                     ' down arrow„        IF annum = -4712 THEN EXIT SELECT„        DECR annum„        calendar = -1„        celebrat = -1„    END SELECT„    IF celebrat THEN DisplayCelebrations annum„    IF calendar THEN DisplayCalendar page, annum„  LOOP UNTIL KeyIn = 27„  COLOR 7, 0„  CLS„  SYSTEM„END SUB„„FUNCTION CountrySpecificDate(InDate$) AS STRING„  ' InDate$ as MM-DD-[-]YYYY (= default format)„„  year = VAL(MID$(InDate$, 7))„  YY$  = YearToDisplay(year)„  GetCountryInfo form, buffer$„  delimiter$ = MID$(buffer$, 12, 1)                  ' 12th byte„  REPLACE "-" WITH delimiter$ IN InDate$„„  SELECT CASE form„    CASE 0 : FUNCTION = LEFT$(InDate$, 6) + YY$                  ' USA„    CASE 1„      FUNCTION = MID$(InDate$, 4, 3) + LEFT$(InDate$, 3) + YY$   ' EUR„    CASE 2„      FUNCTION = LEFT$(YY$, 4) + delimiter$ + LEFT$(InDate$, 3) + _„                 MID$(InDate$, 4, 2) + MID$(YY$, 5)              ' JAP„  END SELECT„END FUNCTION„„FUNCTION TextualDate(InDate$) AS STRING„  ' InDate$ as MM-DD-[-]YYYY (= default format)„  ' output (sample): Saturday, 4 January 1997„„  year  = VAL(MID$(InDate$, 7))„  month = VAL(MID$(InDate$, 1, 2))„  day   = VAL(MID$(InDate$, 4, 2))„„  FUNCTION = DayOfTheWeek(year, month, day) + ", " + _„             LTRIM$(STR$(day)) + CHR$(32) + _„             TwelveMonths(month) + CHR$(32) + _„             LTRIM$(YearToDisplay(year), ANY "0")         ' no zeros here„END FUNCTION„„FUNCTION CountrySpecificTime AS STRING„  ' Are there countries anyway, NOT using the default delimiter„  ' in TIME$? Not sure! Did'nt find any, but you never can tell.„  ' Therefore this harmless but perhaps also useless routine.„„  t$ = TIME$„  GetCountryInfo dummy, buffer$„  REPLACE ":" WITH MID$(buffer$, 14, 1) IN t$  ' time delimiter = 14th byte„„  FUNCTION = t$„END FUNCTION„„FUNCTION TwelveTime AS STRING„  temp$ = CountrySpecificTime„  hour = VAL(LEFT$(temp$, 2))„  SELECT CASE hour„    CASE > 11„      IF hour > 12 THEN DECR hour, 12„      extension$ = " PM"„    CASE ELSE„      IF hour = 0 THEN hour = 12„      extension$ = " AM"„  END SELECT„  FUNCTION = RIGHT$(SPACE$(2) + LTRIM$(RTRIM$(STR$(hour))), 2) + _„             MID$(temp$, 3) + extension$„END FUNCTION„„FUNCTION YearToDisplay(year) AS STRING„  CountYear = year„  IF CountYear < 1 THEN„    DECR CountYear„    extension$ = ScreenText(13)„  END IF„  FUNCTION = RIGHT$("0000" + LTRIM$(RTRIM$(STR$(ABS(CountYear)))), 4) + _„             extension$„END FUNCTION„„FUNCTION EasterSunday(year) AS LONG„  temp1 = ((8 * (year \ 100)) + 13) \ 25 : DECR temp1, 2„  leap  = (year \ 100) - (year \ 400) - 2„  temp2 = (15 + leap - temp1) MOD 30„  temp3 = (6 + leap) MOD 7„  days  = ( temp2 + 19 * (year MOD 19) ) MOD 30„  IF (days = 29) OR (days = 28 AND year MOD 19 >= 11) THEN DECR days„  factor = ( 2 * (year MOD 4) + 4 * (year MOD 7) + 6 * days + temp3 ) MOD 7„  INCR days, factor + 21„  FUNCTION = Julian(year, 3, 1) + days       ' 1 March + nbr of days„END FUNCTION„„FUNCTION EasterMonday(year) AS LONG„  FUNCTION = EasterSunday(year) + 1„END FUNCTION„„FUNCTION GoodFriday(year) AS LONG„  FUNCTION = EasterSunday(year) - 2„END FUNCTION„„FUNCTION AscensionDay(year) AS LONG„  FUNCTION = EasterSunday(year) + 39„END FUNCTION„„FUNCTION WhitSunday(year) AS LONG„  FUNCTION = EasterSunday(year) + 49„END FUNCTION„„FUNCTION WhitMonday(year) AS LONG„  FUNCTION = EasterSunday(year) + 50„END FUNCTION„„FUNCTION Julian(year, month, day) AS LONG„  temp& = (month - 14) \ 12„  JulPart& = day - 32075 + (1461 * (year + 4800 + temp&) \ 4)„  JulPart& = JulPart& + (367 * (month - 2 - temp& * 12) \ 12)„  FUNCTION = JulPart& - (3 * ((year + 4900 + temp&) \ 100) \ 4)„END FUNCTION„„FUNCTION JulToDate (Jul&) AS STRING„  ' converts a Julian number into a computational date ("MM-DD-[-]YYYY")„„  INCR Jul&, 68569„  help& = 4 * Jul& \ 146097„  DECR Jul&, (146097 * help& + 3) \ 4„  TempYear& = 4000 * (Jul& + 1) \ 1461001„  DECR Jul&, 1461 * TempYear& \ 4„  INCR Jul&, 31„  TempMonth& = 80 * Jul& \ 2447„„  day& = Jul& - (2447 * TempMonth& \ 80)„  day$ = RIGHT$("00" + LTRIM$(RTRIM$(STR$(day&))), 2)„„  month& = TempMonth& + 2 - (12 * (TempMonth& \ 11))„  month$ = RIGHT$("00" + LTRIM$(RTRIM$(STR$(month&))), 2)„„  year& = 100 * (help& - 49) + TempYear& + (TempMonth& \ 11)„  year$ = RIGHT$("0000" + LTRIM$(RTRIM$(STR$(ABS(year&)))), 4)„  IF year& < 0 THEN year$ = "-" + year$„  FUNCTION = month$ + "-" + day$ + "-" + year$„END FUNCTION„„FUNCTION LeapYear(year)„  OutDate$ = JulToDate(Julian(year, 2, 28) + 1)        ' 28 Feb + 1 day„  IF LEFT$(OutDate$, 5) = "02-29" THEN„    FUNCTION = 1                                       ' 1 extra day for Feb„  ELSE„    FUNCTION = 0„  END IF„END FUNCTION„„FUNCTION DayOfTheWeek(BYVAL year, BYVAL month, BYVAL day) AS STRING„  ' returns the name for each day of the week„„  DECR month, 2„  IF month < 1 OR month > 10 THEN„    INCR month, 12 : DECR year„  END IF„  century = year \ 100„  year = year MOD 100„  temp = INT(2.6 * month - .19) + day + year + (year \ 4)„  result = (temp + (century \ 4) - (century * 2)) MOD 7„  IF result < 1 THEN INCR result, 7„  FUNCTION = SevenDays(result)„END FUNCTION„„CLS„  FillDaysInMonth„  GetCountryInfo dummy, buff$„  country$ = EXTRACT$(MID$(buff$, 3, 2), ANY CHR$(0))„  SELECT CASE LTRIM$(RTRIM$(country$))„    CASE CHR$(159) : FillDutchArrays                   ' Netherlands„    CASE "DM" : FillGermanArrays                       ' Germany„    CASE "S"„      IF MID$(buff$, 12, 1) = "." THEN                 ' Austria„        FillGermanArrays„      END IF„    CASE ELSE : FillEnglishArrays                      ' other countries„  END SELECT„  InitialScreen„  Menu„END„Gary N. Wilkerson, Jr.         ANALOG/DIGITAL CLOCK DISPLAY   comp.lang.basic.misc           04-01-97 (12:00)       QB, QBasic, PDS        438  11306    CLOCK2.BAS  ' Analog/Digital Clock„' by Gary N. Wilkerson Jr.„„' Constants„CONST ClockH = 130„CONST ClockV = 120„CONST Left = 1„CONST Right = 3„CONST TRUE = -1„CONST FALSE = NOT TRUE„CONST TwoPI# = 2 * 3.141592654#„„' Sub and Function modules„DECLARE SUB OnOff (cond)„DECLARE SUB Box (cond)„DECLARE SUB Center (row, text$)„DECLARE SUB KeyPause ()„DECLARE SUB FuncKeyOn ()„DECLARE SUB FuncKeyOff ()„DECLARE SUB RunClock ()„DECLARE SUB DrawScreen ()„DECLARE SUB ClockBells ()„DECLARE SUB TimeDate (row)„DECLARE SUB GetCurrTime (Hour, Min, Sec, a$)„DECLARE SUB ScreenSaver ()„DECLARE SUB DisplayAlarmStatus ()„DECLARE SUB DisplayChimeStatus ()„DECLARE SUB DisplayClockStatus ()„DECLARE FUNCTION Hplot (Length, ClockPos)„DECLARE FUNCTION Vplot (Length, ClockPos)„„' Converts clock face position into Radiens„DEF FnRad (x) = -(x - 30) * TwoPI# / 60„„' Set up the Function Key traps„KEY OFF„ON KEY(1) GOSUB SetTime„ON KEY(2) GOSUB SetDate„ON KEY(3) GOSUB SetAlarm„ON KEY(4) GOSUB ToggleAlarm„ON KEY(5) GOSUB ToggleChime„ON KEY(6) GOSUB Switch12or24„„' Global variables„DIM SHARED Military, Chime, Alarm, Alarm$, AlarmOn, ScreenSave„Military = FALSE: Chime = TRUE: Alarm = FALSE: Alarm$ = "12:00:00"„AlarmOn = FALSE: ScreenSave = FALSE„„' The main routine„    DrawScreen„    FuncKeyOn„    RunClock„    SYSTEM„„' Function Key traps„SetTime:„    FuncKeyOff„    RESTORE TimeSet„    Box Left„    LOCATE 13, 26„    LINE INPUT a$   ' Get new time„    a$ = LTRIM$(a$): a$ = RTRIM$(a$)        ' Remove excess spaces„    IF a$ <> "" THEN„        ON ERROR GOTO TimeError„        TIME$ = a$      ' Reset system time„        ON ERROR GOTO 0„    END IF„    DrawScreen„    FuncKeyOn„    RETURN„„TimeSet:„DATA Enter new time,"In 24 hour [##:##:##] format"," ",ZZ„„TimeError:„    Center 19, "   Invalid Time   "„    KeyPause„    RESUME NEXT„„SetDate:„    FuncKeyOff„    RESTORE DateSet„    Box Left„    LOCATE 13, 30„    LINE INPUT a$„    a$ = LTRIM$(a$): a$ = RTRIM$(a$)„    IF a$ <> "" THEN„        ON ERROR GOTO DateError„        DATE$ = a$      ' Reset System Date„        ON ERROR GOTO 0„    END IF„    DrawScreen„    FuncKeyOn„    RETURN„„DateSet:„DATA Enter new date,"In ##-##-#### format"," ",ZZ„„DateError:„    Center 19, "   Invalid Date   "„    KeyPause„    RESUME NEXT„„SetAlarm:„    FuncKeyOff„    RESTORE AlarmSet„    Box Left„    LOCATE 13, 26„    LINE INPUT a$„    a$ = LTRIM$(a$): a$ = RTRIM$(a$)„    IF a$ <> "" THEN„        ' Sets the alarm„        ON ERROR GOTO AlarmError„        b$ = TIME$„        Alarm$ = a$„        TIME$ = a$„        TIME$ = b$„        ON ERROR GOTO 0„    END IF„    ' Set alarm to system format„    a$ = TIME$„    TIME$ = Alarm$„    Alarm$ = TIME$„    TIME$ = a$„    DrawScreen„    FuncKeyOn„    RETURN„„AlarmSet:„DATA Enter time for alarm,"In 24 hour [##:##:##] format"," ",ZZ„„AlarmError:„    Center 20, "   Invalid Time   "„    KeyPause„    Alarm$ = "12:00:00"„    RESUME NEXT„„ToggleAlarm:„    IF AlarmOn THEN AlarmOn = FALSE: RETURN ' If alarm is active, shut it off„    Alarm = NOT Alarm„    IF NOT ScreenSave THEN DisplayAlarmStatus„    RETURN„„ToggleChime:„    Chime = NOT Chime„    IF NOT ScreenSave THEN DisplayChimeStatus„    RETURN„„Switch12or24:„    Military = NOT Military„    IF NOT ScreenSave THEN DisplayClockStatus„    RETURN„„ClockMenu:„DATA [F1] -- Sets Time,[F2] -- Sets Date,[F3] -- Sets Alarm„DATA [F4] -- Toggles Alarm,[F5] -- Toggles Chime,[F6] -- Switch 12/24 hour„„' Box„' Draws a box around the DATA for the READ statements until it reaches ZZ„SUB Box (cond)„DIM temp$(5)„„u = 0   ' Variable <u> will equal length of longest string in BOX„„' Variable <t> will equal the number of strings in BOX„FOR t = 0 TO 15„        READ temp$(t)„        IF temp$(t) = "ZZ" THEN EXIT FOR„        IF LEN(temp$(t)) > u THEN u = LEN(temp$(t))„NEXT t: IF t = 0 THEN EXIT SUB„„y = 39 - u / 2: LOCATE 11 - t / 2, y    ' Center the BOX on screen„COLOR 14, 0„PRINT "…"; STRING$(u, 205); "ª"         ' Top border of BOX„FOR x = 0 TO t - 1„        a = cond        ' Set variable <a> to current condition„        LOCATE CSRLIN, y„        COLOR 14, 0„        IF temp$(x) = "Õ" THEN„                PRINT "Ã"; STRING$(u, 205); "π"         ' BOX concecrator„        ELSE„                PRINT "∫"; SPACE$(u); "∫";      ' BOX side borders„                ' First character of string may override condition„                SELECT CASE LEFT$(temp$(x), 1)„                        CASE "Æ"„                                a = Left: temp$(x) = MID$(temp$(x), 2)„                        CASE ""„                                a = 2: temp$(x) = MID$(temp$(x), 2)„                        CASE "Ø"„                                a = Right: temp$(x) = MID$(temp$(x), 2)„                END SELECT„                ' Justify according to condition„                SELECT CASE a„                        CASE Left       ' Left justify„                                LOCATE CSRLIN, y + 1„                        CASE 2          ' Center„                                LOCATE CSRLIN, 40 - LEN(temp$(x)) / 2„                        CASE Right      ' Right justify„                                LOCATE CSRLIN, y + u + 1 - LEN(temp$(x))„                END SELECT„                COLOR 15, 0„                PRINT temp$(x);„                LOCATE CSRLIN + 1, y„        END IF„NEXT x„COLOR 14, 0„PRINT "»"; STRING$(u, 205); "º"         ' BOX bottom border„COLOR 15, 0„END SUB„„' Center„' Centers the text$ at a given row„SUB Center (row, text$)„LOCATE row, 40 - LEN(text$) / 2„PRINT text$„END SUB„„'ClockBells„' Sounds the Alarm and Chime at the correct time„SUB ClockBells„' Hourly Chime„IF Chime THEN„        IF RIGHT$(TIME$, 5) = "00:00" THEN„                PLAY "MBo3L8ED+ED+Eo2Bo3DCL2o2A"„        END IF„END IF„IF Alarm THEN IF TIME$ = Alarm$ THEN AlarmOn = 16„„' Clock's Alarm„IF AlarmOn THEN„        AlarmOn = AlarmOn - 1„        PLAY "MBo4L16BBBB"„END IF„END SUB„„SUB DisplayAlarmStatus„    COLOR 14„    LOCATE 14, 40: PRINT "Alarm"; : OnOff Alarm„END SUB„„SUB DisplayChimeStatus„    COLOR 11„    LOCATE 11, 40: IF Chime THEN PRINT "{Hourly Chime}" ELSE PRINT SPACE$(14)„END SUB„„SUB DisplayClockStatus„    COLOR 9„    LOCATE 16, 40: PRINT "Time reads at ";„    IF Military THEN PRINT "24";  ELSE PRINT ; "12";„    PRINT " hour mode"„END SUB„„' DrawScreen„' Draws the screen with the clock on it„SUB DrawScreen„    'Initialize Screen„    IF ScreenSave THEN CLS : EXIT SUB„    SCREEN 9„    COLOR 15, 0„    CLS„„    ' Draw Border„    PRINT "…"; STRING$(78, 205); "ª"„    FOR Count = 1 TO 22„        PRINT "∫"; TAB(80); "∫";„    NEXT Count„    PRINT "»"; STRING$(78, 205); "º";„„    'Draw clock face„    CIRCLE (130, 120), 110, 15, , , .87„    CIRCLE STEP(0, 0), 115, 15, , , .87„    FOR Count = 0 TO 59„        LINE (Hplot(105, Count), Vplot(90, Count))-(Hplot(110, Count), Vplot(95, Count)), 15„        IF Count MOD 5 = 0 THEN„            LINE -(Hplot(100, Count), Vplot(85, Count)), 11„        END IF„    NEXT Count„„    COLOR 4„    RESTORE ClockMenu„    FOR Count = 4 TO 9„        LOCATE Count, 40„        READ a$: PRINT a$„    NEXT Count„„    DisplayChimeStatus„    COLOR 14„    LOCATE 13, 40: PRINT "Alarm Set At "; Alarm$„    DisplayAlarmStatus„    DisplayClockStatus„„    COLOR 13„    Center 20, "Analog / Digital Clock"„    Center 21, "1994 by Gary N. Wilkerson Jr."„    Center 22, "Press [ESC] to quit"„END SUB„„' FuncKeyOff„' Turns all the Function Key traps OFF„SUB FuncKeyOff„FOR Count = 1 TO 6„        KEY(Count) OFF„NEXT Count„END SUB„„'FuncKeyOn„' Turns all Function Key traps ON„SUB FuncKeyOn„FOR Count = 1 TO 6„        KEY(Count) ON„NEXT Count„END SUB„„' GetCurrTime„' Gets the current TIME from the system TIME„SUB GetCurrTime (Hour, Min, Sec, a$)„a$ = TIME$„Min = VAL(MID$(a$, 4, 2)): Sec = VAL(RIGHT$(a$, 2))„Hour = (VAL(LEFT$(a$, 2)) MOD 12) * 5 + (Min / 12)„END SUB„„' Hplot„' Converts the hand length and clock face position„' into an X coordinate„FUNCTION Hplot (Length, ClockPos)„Hplot = Length * SIN(FnRad(ClockPos)) + ClockH„END FUNCTION„„' KeyPause„' Suspends program activity until key is pressed„SUB KeyPause„Center CSRLIN, "  -->Press any key to continue<--  "„WHILE INKEY$ <> "": WEND        ' Clear keyboard„SLEEP„END SUB„„' OnOff„' PRINTs ON if cond is TRUE, OFF is cond is FALSE„SUB OnOff (cond)„PRINT " -- ";„IF cond THEN„        PRINT " [ON]"„ELSE„        PRINT "[OFF]"„END IF„END SUB„„' This is the main routine for the„' graphics style analog / digital clock„SUB RunClock„    DO UNTIL INKEY$ = CHR$(27)„        GetCurrTime Hour, Min, Sec, a$„„        ' Second Hand„        LINE (Hplot(90, Sec), Vplot(75, Sec))-(ClockH, ClockV), 4„        ' Minute Hand„        LINE -(Hplot(80, Min), Vplot(65, Min)), 14„        ' Hour Hand„        LINE (ClockH, ClockV)-(Hplot(50, Hour), Vplot(35, Hour)), 3„„        TimeDate 18„        ClockBells„„        ' At a 5 minute interval, activate ScreenSaver„        IF Min MOD 5 = 0 AND Sec = 0 THEN ScreenSaver„„        ' Pause for a second to pass„        WHILE a$ = TIME$: WEND„„        ' Erase the hands„        LINE (Hplot(90, Sec), Vplot(75, Sec))-(ClockH, ClockV), 0„        LINE -(Hplot(80, Min), Vplot(65, Min)), 0„        LINE (ClockH, ClockV)-(Hplot(50, Hour), Vplot(35, Hour)), 0„    LOOP„END SUB„„' ScreenSaver„' Deletes the graphics clock and display a small„' moving text clock to save the screen„SUB ScreenSaver„    ScreenSave = TRUE„    RowPos = 1      'Beginning clock position„    SCREEN 0: COLOR 15, 0: CLS„„    DO UNTIL INKEY$ = " "„        GetCurrTime Hour, Min, Sec, a$„„        ' At every 2 minute interval, move the text clock„        IF Min MOD 2 = 0 AND Sec = 0 THEN RowPos = (RowPos + 4) MOD 16: CLS„„        Center RowPos, "Clock has been erased to preserve screen"„        Center RowPos + 1, "Press <Space Bar> to restore clock"„        TimeDate RowPos + 3„„        ClockBells„        WHILE a$ = TIME$: WEND„    LOOP„„    ScreenSave = FALSE„    DrawScreen„END SUB„„' TimeDate„' Writes the digital Date and Time for the regular and Screen Saver screens„SUB TimeDate (row)„     COLOR 15„     ' Display the system date„     LOCATE row, 10: PRINT DATE$;„„     ' Get and display the system time according to display mode„     a$ = TIME$„     LOCATE row, 60„     IF Military THEN„        ' 24 hour display mode„        PRINT a$„     ELSE„          ' 12 hour display mode„          y = VAL(LEFT$(a$, 2))„          ' Let's determine the hour„          IF y >= 12 THEN„               ' The hour is noon or later„               b$ = " pm"„               IF y > 12 THEN y = y - 12„          ELSE„               ' Hour is morning„               b$ = " am"„               IF y = 0 THEN y = 12     'Burning the midnight oil!„          END IF„          PRINT STR$(y); RIGHT$(a$, 6); b$;„     END IF„END SUB„„' Vplot„' Converts the hand length and clock face„' position into a Y coordinate„FUNCTION Vplot (Length, ClockPos)„Vplot = Length * COS(FnRad(ClockPos)) + ClockV„END FUNCTION„Nick Kochakian                 PRECISE DELAY                  NickK@worldnet.att.net         05-20-97 (15:00)       QB, QBasic, PDS        60   1005     GOODELAY.BASDECLARE SUB halfpause ()„DECLARE SUB secpause ()„DECLARE SUB initdelay ()„'Good delay„'„'5/20/97 By: - Nick Kochakian -„'„'This program should help programmers out alot by making delays (or pauses)„'ALOT more accurate! I hope most of you will use this code in your games,„'demos, etc.„'„'If you have any comments or questions e-mail me at: nickk@worldnet.att.net„„DIM SHARED cpusec„DIM SHARED ok$„„CALL initdelay„'CALL secpause 'Pause for a second„'CALL halfpause 'Pause for a half of a second„„END„„'You have to add these 3 lines of code for the delay init to work„ok:„ok$ = "ok"„RETURN„„SUB halfpause„'Pause for a half of a second„„cntend = cpusec * .5„cnt = 0„DO„cnt = cnt + 1„LOOP UNTIL cnt >= cntend„END SUB„„SUB initdelay„'Init the delay„„ok$ = ""„„TIMER ON„ON TIMER(1) GOSUB ok:„cpusec = 0„DO„cpusec = cpusec + 1„LOOP UNTIL ok$ = "ok"„„END SUB„„SUB secpause„'Pause for a second„„cnt = 0„DO„cnt = cnt + 1„LOOP UNTIL cnt >= cpusec„„END SUB„Andras Hoeffken                BAVARIAN CLOCK                 FidoNet QUIK_BAS Echo          06-16-97 (10:39)       QB, QBasic, PDS        72   2533     FUNCLOCK.BAS'A German idiom says:„„'      "In Bavaria, clocks run differently"„„'Have fun with the following code, it demonstrates some principles „'of the DRAW statement:„„'BAYUHR.BAS - Bayrische Uhr auf dem PC-Bildschirm„„SCREEN 12: CLS„„xm = 320: ym = 240                 'Mittelpunkt des Ziffernblatts„„FOR x = -200 TO 839 STEP 40        'blaues Rautengitter„  LINE (x, 0)-(x + 200, 479), 1„  LINE (x, 0)-(x - 200, 479), 1„NEXT„FOR y = 1 TO 6                     'bayer. Farben hinein„  ord = y * 95.5 - 48„  FOR x = 24 TO 656 STEP 39.5„    PAINT (x, ord - 48), 15, 1     'weiss„    PAINT (x - 20, ord), 1, 1      'blau„  NEXT x„NEXT y„CIRCLE (xm, ym), 180, 14           'grosser Uhrenkreis, Radius 180 dots„PAINT (xm, ym), 7, 14              'innenfarbe 7 = grau„                                   'Skala:„FOR n = 6 TO 360 STEP 6            '360 Grad, 60 Minuten -> 6¯/min„  wi = (n / 180) * 3.1415926#„  x = xm + SIN(wi) * 180           'Radiuspunkt„  y = ym + COS(wi) * 180„  f = 7: l = 5                     'l/f = kleine Strichlaenge / grau„  IF n MOD 30 = 0 THEN             'bei 5 min Punkten:„    f = 15: l = 14                 '  grosse Strichlaenge / weiss„    s = xm + SIN(wi) * 195         'Printposition„    z = ym - COS(wi) * 180„    LOCATE z \ 14 - 1, s \ 8„    v = 360 - n                    'Winkel rechtsrum -> linksrum„    IF v = 0 THEN v = 360„    PRINT v \ 30;                  'Zahl printen„  END IF„  PSET (x, y), f                   'vom Radiuspunkt aus„  DRAW "ta"+STR$(n)+"u"+STR$(l)    'Strich nach innen ziehen„NEXT n„„LOCATE 29,2: PRINT "In Bavaria, clocks run differently";„„PSET (xm, ym)„asw$="10":amw$="10":ahw$="10"      '"alte" Werte initialisieren„„DO                                 'Zeiger animieren:„  x$ = TIME$„  h = VAL(LEFT$(x$, 2)) MOD 12„  m = VAL(MID$(x$, 4, 2))„  s = VAL(RIGHT$(x$, 2))„  hw$ = STR$(INT(h * 30 + m * .5)) 'h Wert„  mw$ = STR$(INT(m * 6 + s * .1))  'm Wert„  sw$ = STR$(s * 6)                's Wert„  IF asw$ <> sw$ THEN„    DRAW "c7ta" + ahw$ + "nu130"   'alter Stundenzeiger weg„    DRAW "c7ta" + amw$ + "nu162"   '  "   Minuten  "     "„    DRAW "c7ta" + asw$ + "nu162"   '  "   Sekunden "     "„    DRAW "c0ta" + hw$ + "nu130"    'neue Stunden / Minuten = schwarz„    DRAW "c0ta" + mw$ + "nu162"„    DRAW "c14ta" + sw$ + "nu162"   'neue Sekunden = gelb„    asw$=sw$:amw$=mw$:ahw$=hw$     'alte Werte merken„  END IF„  A$ = INKEY$„LOOP UNTIL A$ <> ""                'Tastendruck = Ende„SCREEN 0„CLS„END„Brian Mahocker                 CALCULATE SECONDS              Kain121182@aol.com             07-03-97 (12:01)       QB, QBasic, PDS        46   1248     CALCSEC.BAS CLS„INPUT "How many seconds? : ", Secc#„LOCATE , , 0„CLS„PRINT "Seconds :" + STR$(Sec) + "   "„PRINT "Minutes :" + STR$(Min) + "   "„PRINT "  Hours :" + STR$(Hour) + "   "„PRINT "   Days :" + STR$(Day) + "   "„PRINT "  Years :" + STR$(Year&) + "   "„PRINT "Secconds left : " + LTRIM$(STR$(Secc#))„DO„LET num = num + 1„IF Secc# > 60 THEN„   LET Min = Min + 1„   IF Min = 60 THEN„      LET Min = 0„      LET Hour = Hour + 1„      IF Hour = 24 THEN„         Hour = 0„         LET Day = Day + 1„         IF Day = 365 THEN„            LET Day = 0„            LET Year& = Year& + 1„         END IF„      END IF„   END IF„END IF„LET Secc# = Secc# - 60„IF num = 5000 THEN„   LOCATE 1, 1„   PRINT "Seconds :" + STR$(Sec) + "   "„   PRINT "Minutes :" + STR$(Min) + "   "„   PRINT "  Hours :" + STR$(Hour) + "   "„   PRINT "   Days :" + STR$(Day) + "   "„   PRINT "  Years :" + STR$(Year&) + "   "„   PRINT "Secconds left : " + LTRIM$(STR$(Secc#))„   LET num = 0„END IF„LOOP UNTIL Secc# < 60„LET Sec = Secc#„LOCATE 1, 1„PRINT "Seconds :" + STR$(Sec) + "   "„PRINT "Minutes :" + STR$(Min) + "   "„PRINT "  Hours :" + STR$(Hour) + "   "„PRINT "   Days :" + STR$(Day) + "   "„PRINT "  Years :" + STR$(Year&) + "   "„Michael G. Stewart             DIGITAL CLOCK/TIMER            mikegs@juno.com                07-11-97 (12:37)       QB, QBasic, PDS        384  10001    TIMER.BAS   DECLARE SUB showdate ()„DECLARE SUB quit ()„'TIMER.BAS„'DIGITAL CLOCK/TIMER v. 1.0„'Copyright (C) 1997 Arrowhead Corporation„'PUBLIC DOMAIN„'„'If You Use This Program In Your Own Program,„'Give Me (Mike Stewart) Credit.„'„'Have Fun! |:-)„DECLARE SUB setime ()„DECLARE SUB display (hr%, mn%, sc%, mode$, las%)„DECLARE SUB drawwatch ()„DECLARE SUB runwatch ()„DIM SHARED mode„CONST up = 1„CONST down = 0„CLS„SCREEN 12„drawwatch„mode = 1„runwatch„„SUB display (hr%, mn%, sc%, mode$, las%)„hra% = CINT((hr% / 10) - .5)„hrb% = hr% - (CINT((hr% / 10) - .5) * 10)„mna% = CINT((mn% / 10) - .5)„mnb% = mn% - (CINT((mn% / 10) - .5) * 10)„sca% = CINT((sc% / 10) - .5)„scb% = sc% - (CINT((sc% / 10) - .5) * 10)„FOR a% = 1 TO 8„ IF a% = 1 THEN l% = hra%: c% = 20„ IF a% = 2 THEN l% = hrb%: c% = 26„ IF a% = 4 THEN l% = mna%: c% = 34„ IF a% = 5 THEN l% = mnb%: c% = 40„ IF a% = 7 THEN l% = sca%: c% = 48„ IF a% = 8 THEN l% = scb%: c% = 54„ IF a% = 3 OR a% = 6 THEN l% = 10„ IF a% = 3 THEN c% = 32„ IF a% = 6 THEN c% = 46„ SELECT CASE l%„  CASE 0„   a$ = "‹ﬂﬂﬂ‹"„   b$ = "€   €"„   c$ = "‹   ‹"„   d$ = "€   €"„   e$ = " ﬂﬂﬂ "„  CASE 1„   a$ = "    ‹"„   b$ = "    €"„   c$ = "    ‹"„   d$ = "    €"„   e$ = "     "„  CASE 2„   a$ = " ﬂﬂﬂ‹"„   b$ = "    €"„   c$ = "‹ﬂﬂﬂ "„   d$ = "€    "„   e$ = " ﬂﬂﬂ "„  CASE 3„   a$ = " ﬂﬂﬂ‹"„   b$ = "    €"„   c$ = " ﬂﬂﬂ‹"„   d$ = "    €"„   e$ = " ﬂﬂﬂ "„  CASE 4„   a$ = "‹   ‹"„   b$ = "€   €"„   c$ = " ﬂﬂﬂ‹"„   d$ = "    €"„   e$ = "     "„  CASE 5„   a$ = "‹ﬂﬂﬂ "„   b$ = "€    "„   c$ = " ﬂﬂﬂ‹"„   d$ = "    €"„   e$ = " ﬂﬂﬂ "„  CASE 6„   a$ = "‹ﬂﬂﬂ "„   b$ = "€    "„   c$ = "‹ﬂﬂﬂ‹"„   d$ = "€   €"„   e$ = " ﬂﬂﬂ "„  CASE 7„   a$ = " ﬂﬂﬂ‹"„   b$ = "    €"„   c$ = "    ‹"„   d$ = "    €"„   e$ = "     "„  CASE 8„   a$ = "‹ﬂﬂﬂ‹"„   b$ = "€   €"„   c$ = "‹ﬂﬂﬂ‹"„   d$ = "€   €"„   e$ = " ﬂﬂﬂ "„  CASE 9„   a$ = "‹ﬂﬂﬂ‹"„   b$ = "€   €"„   c$ = " ﬂﬂﬂ‹"„   d$ = "    €"„   e$ = " ﬂﬂﬂ "„  CASE 10„   IF las% = 1 THEN„    a$ = " "„    b$ = "‹"„    c$ = " "„    d$ = "ﬂ"„    e$ = " "„   ELSE„    a$ = " "„    b$ = " "„    c$ = " "„    d$ = " "„    e$ = " "„   END IF„ END SELECT„ LOCATE 12, c%: PRINT a$„ LOCATE 13, c%: PRINT b$„ LOCATE 14, c%: PRINT c$„ LOCATE 15, c%: PRINT d$„ LOCATE 16, c%: PRINT e$„NEXT a%„FOR b% = 1 TO 5„ let$ = MID$(mode$, b%, 1)„ LOCATE b% + 11, 61: PRINT let$„NEXT b%„„„„END SUB„„SUB drawwatch„CLS„PAINT (320, 240), 3„CIRCLE (320, 240), 200, 15„PAINT (320, 240), 0, 15„LINE (151, 175)-(489, 256), 15, B„CIRCLE (200, 140), 30, 15„PAINT (200, 140), 8, 15„CIRCLE (440, 140), 30, 15„PAINT (440, 140), 8, 15„CIRCLE (200, 291), 30, 15„PAINT (200, 291), 8, 15„CIRCLE (440, 291), 30, 15„PAINT (440, 291), 8, 15„COLOR 14: LOCATE 8, 30: PRINT "End(1)"„LOCATE 20, 30: PRINT "Mode(2)"„LOCATE 8, 39: PRINT "(3)Start/Stop"„LOCATE 20, 44: PRINT "(4)Reset/Date"„END SUB„„SUB quit„CLS„PRINT "TIMER.BAS"„PRINT "DIGITAL CLOCK/TIMER v. 1.0"„PRINT "Copyright (C) 1997 Arrowhead Corporation"„PRINT "PUBLIC DOMAIN"„PRINT„PRINT "If You Use This Program In Your Own Program, "„PRINT "Give Me (Mike Stewart) Credit."„PRINT„PRINT "Good-Bye"„END„END SUB„„SUB runwatch„SELECT CASE mode„ CASE 1„  DO„   hr% = VAL(LEFT$(TIME$, 2))„   mn% = VAL(MID$(TIME$, 4, 2))„   sc% = VAL(RIGHT$(TIME$, 2))„   mode$ = "CLOCK"„   display hr%, mn%, sc%, mode$, 1„   kbd$ = ""„   kbd$ = INKEY$„   IF kbd$ = "1" THEN quit„   IF kbd$ = "2" THEN mode = 2: runwatch„   IF kbd$ = "3" THEN BEEP„   IF kbd$ = "4" THEN showdate„  LOOP„ CASE 2„ resets = 1„ display 0, 0, 0, "TIMER", 1„ mode$ = "TIMER"„  DO„   IF resets = 1 THEN„    a% = 0„    b% = 0„    c% = 0„    resets = 0„   END IF„   DO„    kbd$ = ""„    kbd$ = INKEY$„    IF kbd$ = "1" THEN quit„    IF kbd$ = "2" THEN mode = 1: runwatch„    IF kbd$ = "3" THEN EXIT DO„    IF kbd$ = "4" THEN a% = 0: b% = 0: c% = 0: display 0, 0, 0, mode$, 1„   LOOP„   DO„    display a%, b%, c%, mode$, 1„    a$ = TIME$„    b$ = TIME$„    WHILE a$ = b$„     a$ = TIME$„     kbd$ = ""„     kbd$ = INKEY$„     IF kbd$ = "1" THEN quit„     IF kbd$ = "2" THEN mode = 1: runwatch„     IF kbd$ = "3" THEN resets = 1: a$ = ""„     IF kbd$ = "4" THEN start = 1: a$ = ""„    WEND„    IF resets = 1 THEN EXIT DO„    c% = c% + 1„    IF c% = 60 THEN„     c% = 0„     b% = b% + 1„     IF b% = 60 THEN„      b% = 0„      a% = a% + 1„      IF a% = 100 THEN„       BEEP: BEEP„       a% = 0„       b% = 0„       c% = 0„      END IF„     END IF„    END IF„   LOOP„  LOOP„END SELECT„END SUB„„SUB setime„CLS : END„„END SUB„„SUB showdate„a% = VAL(LEFT$(DATE$, 2))„b% = VAL(MID$(DATE$, 4, 2))„c% = VAL(RIGHT$(DATE$, 2))„display a%, b%, c%, "DATE", 0„SLEEP 2„END SUB„„'(stat!(i) - meanMi!) ^ 2): NEXT„sdMi! = sdMi! / 10„PRINT sdMi!; "("; 100 * sdMi! / meanMi!; " % )"; : COLOR 7, 0: PRINT„PRINT : PRINT "Normally the most tight test is at 1 %"„PRINT "Press a key to compare deviations with DO LOOP SOLUTION deviations";„SLEEP„FOR k = 0 TO 9„  i = -30000„  c! = TIMER„  DO„    i = i + 1„  LOOP UNTIL i > 30000„  d! = TIMER„stat!(k) = d! - c!„NEXT„COLOR 7, 0: PRINT "DO LOOP TESTVALUES":„FOR i = 0 TO 9: sumL! = sumL! + stat!(i): COLOR 0, 7:„PRINT stat!(i); : COLOR 7, 0: PRINT "", : NEXT:„meanL! = sumL! / 10„PRINT "LOOP MEAN : "; : COLOR 0, 7: PRINT meanL!; : COLOR 7, 0„PRINT "  SD LOOP : "; : COLOR 0, 7:„FOR i = 0 TO 9: sdL! = sdL! + ((stat!(i) - meanL!) ^ 2): NEXT„sdL! = sdL! / 10„PRINT sdL!; "("; 100 * sdL! / meanL!; " % )"; : COLOR 7, 0: PRINT„„'In general all timerroutines can at least match up to the deviation„'which the DO LOOP solutions are returning. Furthermore i have noticed„'that the distance of one variation for DO LOOP is most times bigger then„'the single differences for the timers. Even better: it is well known„'that for the do loop solution it makes a great difference if you run„'under plain dos or not, while the timer routines seems not to make„'a difference. Also they should be consistent on different machines,„'a thing which is certainly not so for DO LOOP„„'If someone has results that are way out of line then I would appreciate„'some mail, stating if you are using plain dos/ dosbox, and what kind„'of deviations you got..„„„'Rick(rick@tip.nl)„„„DEFSTR A-Z„FUNCTION millitimer$„'-----------------------------------------------„'Making use of the toggling of bit 4 of port &h61„'every ~/10000 second..„„'To maintain reliability we can not go any closer„'then a ~ 1.18 msec.„„'------------------------------------------------„„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&HB9) + CHR$(&HFF) + CHR$(&HFF) 'mov cx,ffff 1/100„ASM = ASM + CHR$(&HBA) + CHR$(&H2) + CHR$(0)     'mov dx,2„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„'timerloop:„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&H38) + CHR$(&HC4)              'cmp ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF8)              'jnz -8 timerloop„ASM = ASM + CHR$(&H49)                           'dec cx„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF3)              'jnz -13 timerloop„ASM = ASM + CHR$(&H4A)                           'dec dx„ASM = ASM + CHR$(&H75) + CHR$(&HF0)              'jnz -16„„„'and return to qbasic„ASM = ASM + CHR$(&HCB)                           'retf„„millitimer = ASM„„END FUNCTION„„FUNCTION minitimer„'-----------------------------------------------„'Making use of the toggling of bit 4 of port &h61„'every ~/10000 second..„„'To maintain reliability we can not go any smaller„'then aproximataly~ 1.18 msec.„„'------------------------------------------------„„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&HB9) + CHR$(&HFF) + CHR$(&HFF) 'mov cx,ffff 1/100„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„'timerloop:„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&H38) + CHR$(&HC4)              'cmp ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF8)              'jnz -8 timerloop„ASM = ASM + CHR$(&H49)                           'dec cx„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF3)              'jnz -13 timerloop„„„'and return to qbasic„ASM = ASM + CHR$(&HCB)                           'retf„„minitimer = ASM„„„END FUNCTION„„FUNCTION Tenthtimer„'-----------------------------------------------„'Making use of the toggling of bit 4 of port &h61„'every microsecond..„„'------------------------------------------------„„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&HB9) + CHR$(&HFF) + CHR$(&HFF) 'mov cx,ffff 1/100„ASM = ASM + CHR$(&HBA) + CHR$(&H11) + CHR$(&H0)  'mov dx,11h  1/100 sec„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„'timerloop:„ASM = ASM + CHR$(&HE4) + CHR$(&H61)              'in al,61„ASM = ASM + CHR$(&H24) + CHR$(&H10)              'and al,10„ASM = ASM + CHR$(&H38) + CHR$(&HC4)              'cmp ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF8)              'jnz -8 timerloop„ASM = ASM + CHR$(&H49)                           'dec cx„ASM = ASM + CHR$(&H88) + CHR$(&HC4)              'mov ah,al„ASM = ASM + CHR$(&H75) + CHR$(&HF3)              'jnz -13 timerloop„ASM = ASM + CHR$(&H4A)                           'dec dx„ASM = ASM + CHR$(&H75) + CHR$(&HF0)              'jnz -16 timerloop„'and return to qbasic„ASM = ASM + CHR$(&HCB)                           'retf„„Tenthtimer = ASM„END FUNCTION„Brian Bacon                    DELAY ACROSS MIDNIGHT ROLL-OVERkyberteknik@geocities.com      07-21-97 (13:44)       QB, QBasic, PDS        27   1136     MDELAY.BAS  'MDELAY.BAS - delays across the midnight roll-over„'written by Brian Bacon.. No warrenty - period.„'If you want to pay me for this(yeah right) visit my web page.„' http://home.jinko.com/brian/„'or at least write me mail:  kyberteknik@geocities.com„'You can use this is any way you want, just give me a little bit of credit.„„'NOTE - Check out these delay values you probably don't want to use...„'if you use .01 it wont change, if you use .02 to .04 it takes .06 seconds„'sometimes .05 takes .06 seconds too, not all the time though„'if you use anything above or equal to .06 it usually works fine.„'I've concluded that this routine takes .05-.06 seconds to run MINIMUM.„delay! = .02„„PRINT TIMER  'This just prints the timer..„„'---The Actual Timing Routine---„Cur! = 0„Start! = TIMER„Endt! = Start! + delay!„WHILE Cur! < Endt! - .02      'I subtract .02 because this is usually„      Cur! = TIMER            '.02 seconds off, BASIC is slow.„      IF Cur! < Start! THEN Start! = 0: Endt! = Endt! - 86400„WEND„'-------------------------------„„PRINT TIMER  'This confirms it is the first one +delay! seconds.„Nigel Traves                   MANY DATE/TIME FUNCTIONS       FidoNet QUIK_BAS Echo          09-01-97 (04:55)       QB, PDS                128  8475     DATETIME.BASDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"DATETIME.ZIP",4^6:Z&=6088:?STRING$(50,177);„U"%up()%9%%%#-%6=RLHnQ'iR4.7%%4$%%%-%%%%yn%rjSgRfxN*9hxT]=?wG1ExR„U"SbM-bPAU.TfED*g.X=xU_,/\rp$-t>0SBBA][W\;0.$o>dBqa4bn_:([6]gBD)c„U"*mahXtBK:uj5fGVUbD$fl0HwujeYEYL74rXclVxr<nggV[kZ3N)?WFSHkWT'BMm„U"gfKFn<:EM/tGudM(cKdMqLkN.T?Z8RBfb;/wrcP:GlPTG<M?z7j>SeG0t>OJf2u„U"Opa'lTq/+jbwKb0iM=B,0K_RNGJ(OL'.pW(f=z0aswsu4LX<rn<A>Hj?[]<jed]„U"Ax0o<EB;7g6m7)y/,MD$6l0?$6feV4M^41gj%>0_rWcRTtMr+sjXLUtrP[i8f'l„U"z4Oz+pouRoZp]Ig-LUosG;*vd1aGA.1r4OQ3B-VNlvPl;GDo<7uk1hBw\DwVB>l„U"hhjA>c13'*vD7YnaMk6dcUdQ4=6'd()$mrJN>)4gL:,#Uy7SRs'#dqdFmUD:E=h„U"#>Thg1Z$LbKjk5BCa\[XOuZJ,VPle]kk_j/[j^H'$Gi,Gp.dHFo$U76W_<g7m3c„U"NJ1QpBKj;O65$$hIU1VuAxHnM]anZqlZ/mWFgEeF;ZDF08hjlstq,%I87x0.M+a„U"db=-lE$+ttD0CrM:HV#dd.jhK5)\CcNCjt,gLsbnF>Ac,o+ls4j$G;=q1q1CTcr„U"iC[d2Pud9HM[1_8]wNv$xy5FIKG5<9K/GKZT&7#\SI:fca(CGBeeY&-bO\TUrUe„U"RY7C[R2&xFp=hGA2q_lCsUqdaacw&DI,WoM9OuM](l#W>mK_S6jHl>^L0d%tn4B„U"WW2c:.n+_5RMhG]p&2_mi7tOKBcD%7()5rZ^QN7COf-sH81P<HlKOSLgIKA:0fZ„U":qK4mkJCK+gC9T(d+P^KU)4KAuWPnEos9E4mX#&Uc>31aVCif(<sX<FJi9kuFLv„U"P(orWkc0J]4JalW4AO0]_M\U5u%<i3\VUANG0aD1=9#.M\]VtuUyZ[6,[[zBbY<„U"ciSLojB^RYHY*uc');xQ[:+kJ,c9'm%CSWE$w)fkT:V]CQtJrENegs-AE+AkNp%„U"3$]hI>GvZiB5oeUC[qy[rh[je7gMDR7FN(gc5bc.PVr'ADX/M/doeMG44$P8bnO„U"TDf*[X#MaLsi^<rT$Y*09D_hhV*J/FUY33I09w[UEg]3aIV#&Z<eSG$2I&m+=e2„U"1WE.-_?A'(5=W.0%N+TB[GPP9/r$H/QxMB#u\X)BbE\g.?bIL[X9bb_SkLb5#3<„U">hp&3,w?jz\JDiTaE/>7#5^3N&^VM7/,-l+?jFKGB;5\G;[&p;mvSC,a>6*P);r„U"g?^GpS;Tg0K_rpE:/QfVEbmeEk/AUeTK.qg%#;P'eZX2:lj)3\fRpW6/wI(<:$:„U"$rikZ>SF#YN<I7I[Qi\qW5\ZLl]U5VRpR'&7[5?g3PUbTXUlz5b7y1?DYcHQCTa„U":ZCRUfRJM)_,s&NF-TNHp81eRdRy1MF9g?RNdZA0D'CHq?H87MGLm,2f6&2TQJ7„U"T_wR\tuT1$<F;Zu[rZAELzpoTzoB8r^2_AFL3hO],]QWha0?no(Z6F;Rxn$^lLl„U"NrTHD_-(ZH$]4J1+386jR<YsWE2afiV;8'dYxUE1iO)cqlnV)3'n^JTCj\NNUkD„U"cF$4u=0Da;.pT$KddWlk]yR-<[td92Ten&p/5n4ORMJ0%%JEr&z/[%[wP97z.<_„U"O\0d6_['\nh.0\gJX>ra^#O2L*']XUDi[e(DgiNpVl#lCw1f[o_;.IlA(<EOHc.„U"Jbsn0LD.ET95;r<p;7bTla$TME2zp(ViW)0RN6w?l<H914_4,]4+Pn[T^Kv<JgL„U"nplRO_t\S)Krh,,xo(8$wBdO*K;3u^p1xI*PPXPiJt%M)Nyc2:tc<jDnYFqTp(g„U"&mpqsedQvOpc<]=)UG8b?W=G8Y%:wNS#*iRE_hw&$QNsGZFBch$C6PrYl-vC5n^„U":<VL3jVofDcQoEOM.pgpSbb6xRva,3wRrONhBlQYv$lNB(H_*o3tWpvaFWo:LSm„U"Y$Scn_k/rs8fb$s6\G(bt%qNS,y?OY;xk=nvLb9jY&L:^w5/OEVimHox'I_K4i4„U"BdPzGV5zWk(UZU/IW5%NO<4>UH-#.AWB+yi2XZt\wePd;NU]yh^/MRN19f8=csd„U"c3\$S%0nO(5<EQMI21AlAk.^MhvT+8/OA4ZAZ_MI'vTVD%MDMT:zRpwI.EJX?)K„U"]+r.d<Rq/D&;z%l:5yu%.pk5J5;lpkGxjnVL?0L;W[[vELlRz6b]Kc&Fc)gm8_x„U"GeLg[)3mkUrR'*AWe=E%iR8yQ%E%2tr>2Y(^4:-,*))%Q3u[Ym4'oo>KL*--h0$„U"Ek/GW$UVX8P*7I]>OxVGx[Zo>k;:N'm/s:HB1g^h9UFND9'=BG],yd*iA'])Yz[„U",U+yptayasQc9m&0VyyGfO89&ugE_4>IOa+j4?Dm+8m>;xn,OG6^IEyS7\EGak>„U"C+3>(D2T5m=<E6wq.vk)F_CrVufd9&%[;sQi=Ap\UrWEM_;m1rI4jJ9(^.E;r9z„U"8yWv7L0XA5,j[F)mScMJS8Nnye8G3$&m2n+rPW.1ndA<1.ddT#qxq^E381bL+wj„U"U].zb'&E,ps?*wyYw&EVA-4=t/*sLYb8dHa=l:d$x.oq9U(P=Ra<=H7c4EGUH6Z„U"ugULEx0Wl'FTcSsaxkLZNn$.Z\8k2j)g[s04(sv>,ZZy#r&uOa>H<=;\=<d9Ro'„U"tWuHs0+s\)x-HFWR6]2r[j9FHmCzvud5PWmWK^o%Lmulvh[bk%G:JoDdq8Y1J\]„U"0\0:eB17W&L?TgB,%l:v.Yx-97FJOpuE(f_\*x.z/R0l[c4ol>;lrAsZ3aEYm]#„U"<5]BOOGS'G&P1R*0ckNU).Y&hn\2[YdK.2KAIh2NiL1K&W6%d\#;KHtFD?4zdMm„U"gm3#GL<#,4I),Nv,3fkcJ7=X&WBk/H5GE.^B=DO$eCaTe+x%(up(%)9%%[%-%N&„U"<LH/6<8)d[-%%S%M%%,%%%%y%nrjSRgnV(;<>T]O7w-orx0)aFFGf#CHvnjj%v_„U"_ktj=ei];64Q6>Lo,t*ry#G*wYh:/$XAMAwee4JEUUrc[][-1nJg1nH_STH+FiO„U"PNwZ&jsd2dTBC&psU%#]'mHb[FFL0r*V9DD)akS^goc,taC>QR\;kBb9cO;NGqC„U"D%\gEb/-;+uwZJ'14^\gW/V0+JBNk;qBFpL-_+\n_gr[+qj\2eVbG7%5A%'ASrW„U"lE'r=H=LMEZIX(E#0Jwu:V&HDcN\3k4m%I0b]n$v=>5G;14f3]4cMj&e,L1i&uY„U"xoYu3r*B(5JZ)?;VmA5u&e$OsC58g?;SjQ,+nUg/uVSy[g_f1*GU64TYy?[VZ)_„U"LZvc]yoTD9rrj4xeFDi6ERb=m=6e^]tfxDK6(cRT8j9(.F6$e2ECj7T^?tIg3fG„U"cnnpog/wPQV5B$x?FJ9ZGDx/5hX0VhxuAJ\i:>aFj*jfTNj&kbijF'pJuw\s8L*„U"skYHOC,_/)tVm40q:Nvx4Q-KjeuCnoQH6RL1PI?un$JQd54p*:6Ed8VC7MnQc_1„U"l]Q[X<L8XQ*To&wa[3:OFfZksN('p9MQRMawM0ibc%8R.;mLk$kA(VU;MMht+o:„U"+TJ1B+i/j%<Q-W$>Q>AP$DbbjR6c92+sw)JZEW30i2g-CF/6Y)_xK%_>18qC-59„U"2>%O6Kaz.5E)TONY=oV5NEKs3X3:f3Nh[c[bG-\'A5(Hcl.61fz919PQdk-#%L5„U"&fu.LJHZ9ZtHsLS^J6ZI8r3?q_3R,CCi/=2aCN%*&J$S;d8:32mb(2Xa0;C=a=7„U"B:7b$lbUf-ic)VRi^Yto3Za:BiUC1w6#FnK#Tj=)Dp$F)M*$*u#]#k7W&ikCf[9„U"dmM[sY(4oDxA>uE9/8\,SN,3S%$H6cT+D8KZ5Uk+^/bejQm#5'R0aON\fk1;Nd?„U"8v)pO/oKl';N+=g4\mOlgZ0,5%Pm43sxqQ>992*Wa=XGh?42/H1v^-HH*R0?RGv„U"Y_^O7D7[=CyL8\07B5sG+#%tb/g?wr\1H=m4/606bBeR9PLQ8'16Bq5uU2q+mGg„U"FMnW,K*E?LGAUd,Ew=0*y%jXS/Ib-R'QIBa.xH^7cMLBK*_h(73oFFjwOM/wm(i„U"ncHA;YD6GYQG$Xr-ILCR0l.P9Dc2?S9*-\iUOyGUANrn;Wdr_#77zq.b3;B>Cp$„U"gX^_QU,(fcM>PoOC8$aJ=H%W=K1aj0Q[)pTeZDSQFr[z(h(-%JGPrZpwE\at_[[„U"=hsE%PqXJU-5x:VN/WcXy_.Zn6Kg\20XhHCv%=d/a/1X#F#HSA+L6j<Z)hb-48+„U"8G222o3OpPU^?p0._Yv))FMk%(RUF'v#8CqeQmacxRyTc<TCH<>l\]qp>uZ03o/„U"bQ3QTSU/';901NTHmh5:t(x<ax_&B0j]_9B1i;EN[WE%a4O#rj^tVHYwC/&aL8>„U"]]z(DQ9*D_c21MNe\oS1JTlp#4zYuT)z(Scjpu3<tl5oR053sw&w8Ng]f_'tLQs„U"-o0f_[jR$yOR?XFEG,.6k0MZ;7i[$s&>nS6LI8U.4j$H7wpKiM3)#/r_U1/>H_Q„U"lkq5.Yst/'$B3:%^c;yK]oedEm'K1I/?rZWR9?R:Q1CvehX1eUTjHD(j^VFCuKm„U"cEGbPi&d]EBkhFbUoc7?_8Aa(K*=x(//H[Afh'BMfCa#aJl7T#$s(eI$e+o8frO„U"dUVJe<fQZ?l/BF*8*b<uzefga=4VPKJxrS]^4)gd3&dQVxY,H#OS&n8%2f^m(qF„U"#j7hWp.YI'VQqastj.[r+y?hxZ?olc2eXpR=L/0FuwOcB4l\&K7a]#F\/?Y07\F„U"5KK4syEb\+MC&\8QSa:orfNCgi(0T9,bD9/rEqlef+=[27v#h36KcS>a)$q-%He„U"(>^AA1yagH0s5Ut>\qfV;5\vB;zrGrG&k\.T=IfnMc(\3#_2M/IvMS_yHf4&CdV„U"t'TzaFOPoSu?-(oepJ)scY-GL]%9C1WtCbr\qGmF'8.D%du/k]Odz1<'9&d?S-l„U"7ZrtbY\_WN3P>sz4eK2;ksLLwt=pc11]c)CyVz:8mDz\GGN?[J]lvKwWqiNiCyG„U"uU7r\C>%8m\=:t0\wf[uD;]ZKTq-v[Lg;J<[AcBH0NHG;mRm<p>o^:C->3fz:8m„U"dz&G_^-T<q7==Q(oZuZrP?'uQ[ib&\Nh4va;Y6[X\jR_Z=YfIuzEKH$rtZUDM3k„U"&(9Pb[GP1bOWz$61d%k:;8lwr$sl#ZBhfil\).>T\s=M_)m3gfNVh+bwa9Ug[QY„U"bnt2i1S++xRq#=J*swTlq#&*a#sye3*bE^LPL2x/[IN-k=V*bCJQ22d:fj9j2_*„U",^VlSaJ'jK4M8uX0Ul3MkMMEl-8m[Tza/c)$*<<_i:hsDEt&^<(,xt'LP^V?M9.„U"s;r[uuN'hA17z8jj9M3PfPzD%6itYYnz.H8=D>,GWb:;r5m4]bAkjTm$hFz4kYv„U">1H40^-l?rN8(4HQ%H8,]XeYTjKuggkwgdj>UicrlsEuDcGR(DZfE4j$NjEf&LQ„U"V9r2fai09aZfkXG,WBJfI+T-gH]0lnf,n]#l&kp:bAFt_)N9HsXRn>YmMaXNEq_„U"O/6viDA)9lBulfn>M5JR85l>CzEahT%Hr7_^0Fz#/B,2lzg/B<$,%GlPh*eYduu„U"OJ4]VIKhFzHTA\.c2HgXkjx%<up(%)9%%%%-%x\=LHmP-Wnh['%%V%:%%1%%%%y„U"%jxyy%nrjS[gfxffQp>S[e5,iK4JNVM$Tc%IrHT2&7P>dG/:4[kf$t+j?0o/&E*„U"k6I<cJ6k;##IPwSm2sS)ltoH+#O+-frtp)e0)Sl,1$W;FgUT[kPC$FEQH&k$5Th„U"U/5$h8IMp-7%0DbQu.E:=%4YoLZ2T.DjEQba%EIOZDZDA<[<Pd)hu#V1nvOk%Aw„U"*$BW'o[lU+Q8K\Gt;VPjuORuLE4OK5>tvXke**80XSGqGDBXOrNQSBH/FewBm8?„U"vP\D8AEz3Y[z/Q7c)8Nu=Mmj:454QX-9Zt#TCKIS9<EMqe1fqeNerG)Z^XU$ePy„U"G:;RZl[atBIDG_2aLIZ95&R2Ifi0xWQ?j1vh\(-9Kde/Rq?D&35&n,UtJir^OK]„U"NY2LmP.ODZ11<D_LFob5N[9MG.u/<s<wGj71vg3xRckAca3&wHsl8sHMV;v2KVG„U"yYy_F/M.va8K.cbcLNbs9N\MFHnuL(sLwD+ZYYE%2uhs4hK_CIDs6sjXMWLAWYg„U"lAB_Ll,bo^c=5Ll9eB?b?)waxnIOvfkISnfwIPs&sFPMZvb:KZcbUL2bp+DDb_e„U"CpXur7]D:bL'SuwK#HPZcNK,(Iz<EBpMBayv%Qmx<t&e1DZ')[Zh^ZSs6*R-tQD„U"3TiN2hj&)F>R+KoC2dwe4wC%o#^oN&%NZwo)\dwg%NZvoCrdwmXwCx&ZcNI<J)'„U"t\:htMq#N:Nti_9xdi$i^>IoNxcJ)Ot%:ox.wh9rcSZwx6f$p&bV+ea+gm\5Wg1„U"ewNi/Chp#a/Vua/Ug:MbC893GpI2T#\d9kr9ulNtflOcH1H3z)FIj6IBgW/3c;I„U"z9N0<>[Q'N5.7dL&\rc0=;LCfT%up()%9%%%I-%1=#LH'/-a:z'.%%1)%%%-%%%„U"%yn%rjSy&'yrx<F=TUa17#iL$?vD(eech0,*R4]d3.)$,1V*%?nYIYy'XM5s]Eb„U"p*AAhY^](S9ASWWVg7ZY3W\]2g$YHPVFLpF#W1(g.%X4R1)m++AE&fM/.o5UIU#„U"fOK'UfZs%9.='*gyur\LX*][ui&K[.*VjJEY;m)\]sALQN0k3)U*ME&u:5qIFd<„U"xko%;6xC]YaCVGL92OX25ST7ptz+%#y7=5Cfb78$%%ApKV$<EN:Hbcrwb+xW[z_„U"$AQy#xM5$2atT>jMSFtHvU&M9FX=771TD&XS*Eq:7HB=$55^;JU$R\7;*3Rj6;:„U"OFfiXL'qec*j4nG<;M-k'OG.#Likf+wVZbQ/W>0cmR7EKaV>$i*T:kkAe*u[.I/„U"-8Mjrd^d9=Z2hi<7[zwWG0;[\?C/axGgm02Yg6Gu<:7%/MssLf5w)bI(JI=r>SB„U"5[&kta/8sVYP+K1w/9[sd<JfLG7d]S]7cQcj9.ukCfTNQ&X8Q%#7.U>nJPM\>c[„U"ig5*mJ.F3X2+hAkCl[%2pH^ZE_>GGY/FrLm5X2A+R]&7a?hW/hv8:I8F;(S7_k8„U"gtmJU:Dbwp)U:DZ;HTlq_lDfU2a>kip'?GwkI/&2d7w,Rk/FCMDEpVf2.5)_&nG„U"8djMxV<(aU\l+R>Q.z.Emt&hk^vllwiCKZ*>C+n2<?R5HZ8IUtv7JIm=CBiW&r]„U"C[ll.A^QT]W#8(&K8BbQ;XDTy$9V-bl6MJB(IL'H8xC\0r&.-r9)G[3bmV26,ov„U"(u%p&'9%%9%%%%-%6\=LHn,QiR4[.%%4%$%%-%%%%%%%%%&%%E%%%%%%%%%ynr%„U"jSgf%xup&%'9%9%%%%-4%N<LmH/<8&)d-%+%SM%%%,%%%%%%%%%&%E%%%%Z%.%%„U"y%nrjS%gnup%&'9%%9%%%#-%x=RLHm-3Wnh'7%%V:%%%1%%%%%%%%%&%%E%%%&h„U"6%%%yjxy%ynrj%Sgfx%up&'%9%9%%%%-%)1=LHp'/a:%z'%%&1)%%%-%%%%%%%%„U"%&%E%.%%+9%%%yn%rjSy&'yup%*+%%%%%)%7)%T%7%%P;%%%%%„END SUB„CLOSE:IF S=33AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„William Deer                   CALCULATING DELAY VALUES       ag312350@student.uq.edu.au     10-26-97 (20:22)       QB, QBasic, PDS        68   2370     DELAY.BAS   DECLARE SUB Delay (Value#)„DECLARE SUB CalculateDelay ()„' TIMER.BAS„' Some of us have found that the same program runs at entirely different„' speeds on different computers, and this makes some games difficult to„' operate without modifying a delay component. This program will„' automatically calculate delay values which should be accurate enough„' for most applications.„'„' The program will store the values, SecondDelay, and MilliDelay as double„' precision variables. These values can be used to produce quite accurate„' delays.„' To produce a delay of 3 seconds, include  CALL Delay(SecondDelay*3)„' To produce a delay of 500 milliseconds,   CALL Delay(MilliDelay*500)„'„' This program was written in Qbasic v1.1 (if I could find anyone in„' Australia willing to sell me their v4.5, I would probably use it instead),„' so it should be compatible with v1-oo„„„DIM SHARED SecondDelay AS DOUBLE:      ' Delay value for 1 second„DIM SHARED MilliDelay AS DOUBLE:       ' Delay value for 1 millisecond„„CLS„PRINT "Timer.BAS    by William DEER c/o ag312350@student.uq.oz.au "„PRINT "Calculating Delay Values"„PRINT„CALL CalculateDelay„PRINT "Value for 1 msecond delay (stored in MilliDelay)  = "; MilliDelay„PRINT "Value for  1 second delay (stored in SecondDelay) = "; SecondDelay„PRINT„PRINT "To obtain a delay of 10 seconds, type CALL Delay(SecondDelay*10)  "„PRINT "On this computer, it will take .....";„A# = TIMER: CALL Delay(SecondDelay * 10): B# = TIMER„PRINT USING "##.###"; B# - A#;„PRINT "   seconds"„PRINT„PRINT "To obtain a delay of 645 milliseconds, type CALL Delay(MilliDelay*645)  "„PRINT "On this computer, it will take .....";„A# = TIMER: CALL Delay(MilliDelay * 645): B# = TIMER„PRINT USING "###.#"; (B# - A#) * 1000;„PRINT "   milliseconds"„PRINT„PRINT "If anyone knows of an easier way of obtaining accuracy, please let us "„PRINT "know. Because the SLEEP command handles seconds quite well, this"„PRINT "program could be made to handle only milliseconds."„„„„„„„„„SUB CalculateDelay„Test# = 50000     ' Test variable to pass number to Subrountine„StartTimer# = TIMER„CALL Delay(Test#)„StopTimer# = TIMER„Difference# = StopTimer# - StartTimer#„SecondDelay = Test# / Difference#„MilliDelay = SecondDelay# / 1000„END SUB„„SUB Delay (Value#)„  FOR A# = 1 TO Value#„  NEXT A#„END SUB„