Dieter Folger                  DISK FORMATTING PROGRAM FOR PB folger@bnv-bamberg.de          12-28-99 (18:05)       PB                     566  20364    PBFORMAT.BAS'----------------------------------------------------------------------------„' PBFORMAT.BAS is a complete disk formatting program based upon„' DISK13IO.PAS written by Kurt Diesch using Turbo Pascal.„' PBFORMAT allows to format 360k / 1.2M / 720k / 1.44M disks in„' drives A or B.„' Changes to DISK13IO.PAS: A special boot sector is written that„' boots from hard disk when no system is found on floppy.„' PBFORMAT is freeware (c) 1995 by D. Folger„' Use at your own risk.„'----------------------------------------------------------------------------„$COMPILE EXE„$ERROR ALL OFF„$OPTIMIZE SPEED„DEFINT A - Z„%False = 0 : %True = NOT %False„„'==== main program ========================================================„ IF DosVersion! < 3.3 THEN„    PRINT "Need MS-DOS 3.3 or newer" : END„ END IF„ CY=CSRLIN:Cx=POS(0)„ SaveScreen Temp$„ Cm$ = UCASE$(COMMAND$)„ IF Cm$ = "" THEN„    PRINT : Print "  -˛- P B F O R M A T -˛-"„    PRINT„    PRINT " Drive A or B (or ESC to quit): ";„    DO„       DO : K$ = UCASE$(INKEY$) : LOOP UNTIL LEN(K$)„       IF K$ = CHR$(27) THEN GOTO Quit„    LOOP UNTIL INSTR("AB", K$)„    PRINT K$: PRINT„    DriveNumber = ASC(K$) - 65„    PRINT " 1 = 360K 5¨" + CHR$(34) + "  3 = 720K  3´" + CHR$(34)„    PRINT " 2 = 1.2M 5¨" + CHR$(34) + "  4 = 1.44M 3´" + CHR$(34)„    PRINT :  Print " Disk size 1 - 4 (or ESC to quit): ";„    DO„       DO : K$ = INKEY$ : LOOP UNTIL LEN(K$)„       IF K$ = CHR$(27) THEN GOTO Quit„    LOOP UNTIL INSTR ("1234", K$)„    PRINT K$ : PRINT„    DiskType = VAL(K$)„    DoVerify = %True„ END IF„ IF LEN(Cm$) THEN„    IF INSTR(Cmd$,":") THEN DriveNumber = ASC(MID$(Cm$,INSTR(Cm$,":")-1,1)) - 65„    IF DriveNumber < 0 OR DriveNumber > 1 THEN Syntax = %True„    DiskType = VAL(MID$(Cm$,INSTR(Cm$, "/1")+1,1)) + _„               VAL(MID$(Cm$,INSTR(Cm$, "/2")+1,1)) + _„               VAL(MID$(Cm$,INSTR(Cm$, "/3")+1,1)) + _„               VAL(MID$(Cm$,INSTR(Cm$, "/4")+1,1))„    IF DiskType < 1 OR DiskType > 4 THEN Syntax = %True„    IF INSTR(Cm$, "/V") THEN DoVerify = %True„    IF INSTR(Cm$, "/?") THEN Syntax = %True„ END IF„ IF Syntax THEN„       PRINT "Syntax: PBFORMAT Drive /DiskType [/V] [/Q]"„       PRINT "        Drive = A: or B:„       PRINT "        Disktype: /1 = 360k  /2 = 1.2M„       PRINT "                  /3 = 720k  /4 = 1.44M„       PRINT "        /V = Verify„       END„ END IF„ PRINT " Insert disk in drive "; CHR$(DriveNumber + 65);„ PRINT " and press RETURN (or ESC to quit)";„ DO„    DO: K$=INKEY$: LOOP UNTIL LEN(K$)„    IF K$ = CHR$(27) THEN END„ LOOP UNTIL K$ = CHR$(13)„ CLS„ F = FormatDisk (DiskType, DriveNumber, DoVerify)„ IF F = %False THEN el = 255„ Quit:„ RestoreScreen Temp$„END el  'end program with errorlevel„„'===========================================================================„FUNCTION FormatDisk (BYVAL DType, BYVAL Drive, DoVerify) PUBLIC SHARED„'---------------------------------------------------------------------------„ InitData (DType)„ FormatDisk = %False„ SELECT CASE DType           ' determine drive type„        CASE 1               ' 360k or 1.2M drive?„             ! MOV AX, &H1500„             ! MOV DX, Drive„             ! INT &H13„             ! MOV Dt, AH„             SELECT CASE Dt„                    CASE 1  ' 360K in 360K drive„                         ! MOV AX, &H1701„                    CASE 2  ' 360K in 1.2M drive„                         ! MOV AX, &H1702„                    CASE ELSE  'invalid type„                         IF Error13 (251,0) THEN EXIT FUNCTION„             END SELECT„        CASE 2                  ' 1.2M in 1.2M drive„             ! MOV AX, &H1703„        CASE 3,4                ' 720K or 1.44M in 720K or 1.44M drive„             ! MOV AX, &H1704„  END SELECT„  Spt = Spt(DType)„  Tpd = Tpd(DType)„  ! MOV DX, Drive„  ! INT &H13„  ! MOV AX, &H1800„  ! MOV DX, Drive„  ! MOV CH, Tpd„  ! MOV CL, Spt„  ! INT &H13„  ResetDrive Drive„  BadSectors = 0 : Track = 0 : Sector = 1„  '-----------------„  ' Formatting„  '-----------------„  IF Tpd(DType) = &h27 THEN Sx = 2„  Box 8,22,13-Sx,35,15,3„  VIEW TEXT (22,8)-(57,25)„  LOCATE 2,5„  Print "   -˛- P B F O R M A T -˛-" : PRINT„  Y = 2 : X = 9„  COLOR 0,3„  FOR i=1 TO (Tpd(DType)+1)/20„      LOCATE Y + i, X„      PRINT STRING$(20,176)„  NEXT„  COLOR 15,3„  Y = 1 : X = 1„  Fat$ = STRING$(Spf(DType) * 512, CHR$(0))„  MID$(Fat$,1,3) = CHR$(Fid(DType)) + CHR$(&HFF) + CHR$(&HFF)„  RTotal = 2 * Spf(DType) + Dsc(DType) ' number of reserved sectors„  IF QuickFormat = %False THEN„     LOCATE 8-Sx,3 : PRINT " Formatting";Tpd(DType)+1;"tracks"„     DO„       Side = 0„       LOCATE 9-Sx,3 : PRINT " Formatting Track ";„       PRINT USING "##"; Track + 1;„       DO„         LOCATE 2+Y,8+X : IF Side=0 then COLOR 12,3 ELSE COLOR 14,3„         PRINT "≤";„         Chrn$=""„         FOR Sector = 1 TO Spt(DType)„             Chrn$=Chrn$ + CHR$(Track)+ CHR$(Side) + _„             CHR$(Sector) + CHR$(Ssz(Dtype))„         NEXT„         COLOR 15,3„         LOCATE 9-Sx, 24: PRINT "Side"; Side;„         Offs& = STRPTR(Chrn$) : Segm& = STRSEG(Chrn$)„         Tries = 0 : Done = %False„         DO„           ! MOV AH,&H05    ;Format„           ! MOV AL, Spt„           ! MOV CH, Track„           ! MOV CL, 1„           ! MOV DH, Side„           ! MOV DL, Drive„           ! MOV ES, Segm&„           ! MOV BX, Offs&„           ! INT &H13„           ! MOV FormatError, AH„           IF FormatError THEN„              INCR Tries„              IF Tries > 2 THEN„                 IF Error13 (FormatError,1) THEN„                    EXIT FUNCTION„                 ELSE„                    Tries = 0„                 END IF„              ELSE„                 ResetDrive (Drive)„              END IF„           ELSE„              Done = %True„           END IF„         LOOP UNTIL Done„         INCR Side„       LOOP UNTIL Side = 2„       '-------------------„       ' Verifying„       '-------------------„       IF DoVerify THEN„          Maxbad = 100 : Side = 0„          LOCATE 9-Sx, 3 : PRINT " Verifying ";„          DO„             V = VerifySectors (DType,Drive,Track, Side,1,Spt(DType))„             IF V = 0 THEN„                IF Track = 0 THEN IF Error13 (253,0) THEN EXIT FUNCTION„                Sector = 0„                DO„                  INCR Sector„                  V = VerifySectors (DType,Drive,Track,Side,Sector,1)„                  IF V = 0 THEN„                     MarkBadSector DType, Track, Side, Sector„                     COLOR 12,3„                     LOCATE 10-Sx, 3 : PRINT " Bad sectors"; BadSectors„                     LOCATE Y+2,X+8 : PRINT "≤":COLOR 15,3„                     IF BadSectors > MaxBad THEN„                        IF Error13 (252,0) THEN EXIT FUNCTION„                     END IF„                  END IF„                LOOP UNTIL Sector = Spt(DType)„             END IF„             INCR Side„          LOOP UNTIL Side = 2„       END IF„       IF Side=2 THEN INCR X : IF X MOD 21 = 0 THEN X = 1 : INCR Y„       INCR Track„     LOOP UNTIL Track > Tpd(DType)„  END IF„  '----------------------------------„  ' Writing boot and FATs„  '----------------------------------„  W = WriteSectors (DType, Drive, 0, 0, 1, 1, BootRecord$)„  RWritten = 0 : Track = 0 : Side = 0 : Sector = 2 : FATNum = 0„  DO„    IF Sector > Spt(DType) THEN Sector = 1 : INCR Side„    IF RWritten < Spf(DType) * 2 THEN„       IF FATNum > Spf(DType) - 1  THEN FATNum = 0„    ELSE„       MID$(FAT$,1,512) = STRING$(512, CHR$(0))„       IF RWritten = 2 * SPF(DType) THEN„          VIEW TEXT (1,1)-(80,25)„          Box 22-Sx,10,2,60,15,3„          LOCATE 23-Sx,11„          PRINT "Volume name (11 characters or RETURN for none): ..........."„          LOCATE 23-Sx,59,5„          VLabel$ = ""„          DO„             K$ = INKEY$„             IF K$ = CHR$(8) THEN„                LOCATE 23-Sx, POS(a) - 1 : PRINT " ";„                LOCATE 23-Sx, POS(a) - 1„             END IF„             IF K$ > CHR$(31) THEN„                PRINT K$;„                VLabel$ = VLabel$ + UCASE$(K$)„             END IF„          LOOP UNTIL K$ = CHR$(13)„          VLabel$=LEFT$(VLabel$+SPACE$(11),11)+CHR$(8)„          MID$(Fat$,1,12) = VLabel$„          MID$(Fat$,23,4) = Packtime$„       END IF„       FatNum = 0„    END IF„    W = WriteSectors (DType, Drive, Track, Side, Sector, 1, _„                      MID$(FAT$,1 + Fatnum * 511, 512))„    IF W THEN INCR Sector :  INCR RWritten :  INCR FatNum„  LOOP UNTIL RTotal = RWritten„  '--------------------------„  ' Give summery and clean up„  '--------------------------„  RestoreTable„  DiskInfo Drive, Total&, Free&„  LOCATE 18-Sx,23,0„  PRINT " "; Total&;" bytes total    "„  LOCATE 19-Sx,23„  PRINT " "; Free&; " bytes available"„  LOCATE 20-Sx,23„  IF BadSectors THEN PRINT " "; BadSectors * 512 ; "bytes marked as bad"„  FormatDisk = %True„  LOCATE 23-Sx,11„  PRINT "                        Press a key                        "„  WaitKey„END FUNCTION„'--------------------------------------------------„SUB MarkBadSector (Dtype, Track, Side, Sector) PUBLIC SHARED„'--------------------------------------------------„BadMark = &H0FF7  ' bad cluster mark„' CNum = cluster number„' FOffs = offset into fat for this cluster„' FVal = FAT value for this cluster„' OldVal = Old FAT value for this cluster„ CNum = (((((Track * 2) + Side) * Spt(DType)) + Sector - RTotal - 2) _„         \ ASC(MID$(Brd$(DType),1, 2))) + 2„ IF CNum > 1 THEN '   make sure it is in data space„    Foffs = ((CNum * 3) \ 2) +1„    FVal$ = MID$(Fat$, FOffs,2)„    FVal& = ASC(FVal$)„    IF CNum MOD 2 > 0  THEN„       OldVal = FVal& AND (BadMark * (2^4))„    ELSE„       OldVal = FVal& AND BadMark„    END IF„    IF OldVal = 0 THEN ' if not already marked bad, mark it„       IF CNum MOD 2 > 0 THEN„          FVal& = FVal& OR BadMark * (2 ^4)„       ELSE„          FVal& = FVal& OR BadMark„       END IF„       FVal$=RIGHT$("0000"+HEX$(FVal&),4)„       FVal$ = CHR$(VAL("&H"+(MID$(FVal$,3)))) + _„       CHR$(VAL("&H"+(LEFT$(FVal$,2))))„       MID$(Fat$,FOffs,2)=FVal$„       INCR BadSectors, ASC(LEFT$(Brd$(DType),1)) ' Count bad sector„    END IF„ END IF„END SUB„'-----------------------------------------------------------------------------„FUNCTION PackTime$„' format time and date as unsigned integer„' and return as string„'-----------------------------------------------------------------------------„ Year  = VAL(MID$(DATE$,7))„ Month = VAL(LEFT$(DATE$,2))„ Day   = VAL(MID$(DATE$,4,2)) :„ CurDate = (Year - 1980) * 512 + Month * 32 + Day„ D$ = HEX$(CurDate)„ Seconds = VAL(MID$(TIME$,7))„ Minutes = VAL(MID$(TIME$,4,2))„ Hours   = VAL(LEFT$(TIME$,2))„ CurTime = VAL("&B"+ BIN$(Hours) + RIGHT$("00000000000" + BIN$(Minutes) + _„            RIGHT$("00000"+BIN$(Seconds\2),5),11))„ T$ = HEX$(CurTime)„ PackTime$ = CHR$(VAL("&H"+MID$(T$,3))) + CHR$(VAL("&H"+LEFT$(T$,2))) + _„             CHR$(VAL("&H"+MID$(D$,3))) + CHR$(VAL("&H"+LEFT$(D$,2)))„END FUNCTION„'--------------------------------------------------------------------„SUB RestoreTable PUBLIC SHARED  ' Restore formatting table„'--------------------------------------------------------------------„ DEF SEG = DtSegm„     POKE$ DtOffs, Dfpt$„ DEF SEG„END SUB„'--------------------------------------------------„SUB ResetDrive (Drive)„'--------------------------------------------------„  ! MOV AX, 0„  ! MOV Dx, Drive„  ! INT &H13„END SUB„'--------------------------------------------------„FUNCTION WriteSectors (BYVAL DType,BYVAL Drive, BYVAL Track, BYVAL Side, _„                       BYVAL SSect, BYVAL NSect, Buffer$) PUBLIC SHARED„' write absolute disk sectors„'--------------------------------------------------„  WriteSectors = %False„  Tries = 0 : Done = %False„  Segm& = STRSEG(Buffer$) : Offs& = STRPTR(Buffer$)„  DO„    ! MOV AH,3„    ! MOV AL, Nsect„    ! MOV BX, Offs&„    ! MOV CH, Track„    ! MOV CL, SSect„    ! MOV DH, Side„    ! Mov DL, Drive„    ! MOV ES, Segm&„    ! INT &H13„    ! MOV WriteError, AH„    IF WriteError <> 0 THEN„       INCR Tries„       IF Tries > 2 THEN„          IF Error13 (WriteError,1) THEN EXIT FUNCTION ELSE Tries = 0„       ELSE„          ResetDrive (Drive)„       END IF„    ELSE„       Done = %True„    END IF„  LOOP UNTIL Done„  WriteSectors = %True„END FUNCTION„'--------------------------------------------------„FUNCTION VerifySectors (BYVAL DType, BYVAL Drive, BYVAL Track, BYVAL Side, _„                        BYVAL SSect, BYVAL NSect) PUBLIC SHARED„'--------------------------------------------------„  BUFF$ = STRING$(4000,CHR$(0))„  Offs& = STRPTR(Buff$):„  Segm& = STRSEG(Buff$)„  VerifySectors = %False„  Done = %False„  Tries = 0„  DO„   ! MOV AH,4„   ! MOV AL, Nsect„   ! MOV BX, Offs&„   ! MOV CH, Track„   ! MOV CL, Ssect„   ! MOV DH, Side„   ! Mov DL, Drive„   ! MOV ES, Segm&„   ! INT &H13„   ! MOV VerifyError, AH„   IF VerifyError THEN„       INCR Tries„       IF Tries > 5 THEN„          IF Error13 (VerifyError,1) THEN EXIT FUNCTION ELSE Tries = 0„       ELSE„          ResetDrive (Drive)„       END IF„    ELSE„       Done = %True„    END IF„  LOOP UNTIL Done„  VerifySectors = %True„END FUNCTION„'----------------------------------------------------------------------------„SUB InitData (DType) PUBLIC SHARED„'----------------------------------------------------------------------------„DIM Ssz(1:4), Spt(1:4), Tpd(1:4), Spf(1:4), Dsc(1:4), Fid(1:4), Brd$(1:4)„Ssz(1) = &H02 : Ssz(2) = &H02 : Ssz(3) = &H02 : Ssz(4) = &H02 'Sector size„Spt(1) = &H09 : Spt(2) = &H0F : Spt(3) = &H09 : Spt(4) = &H12 'Sectors/track„Tpd(1) = &H27 : Tpd(2) = &H4F : Tpd(3) = &H4F : Tpd(4) = &H4F 'Tracks/disk„Spf(1) = &H02 : Spf(2) = &H07 : Spf(3) = &H03 : Spf(4) = &H09 'Sectors/FAT„Dsc(1) = &H07 : Dsc(2) = &H0E : Dsc(3) = &H07 : Dsc(4) = &H0E 'Dirs/Sectors„Fid(1) = &HFD : Fid(2) = &HF9 : Fid(3) = &HF9 : Fid(4) = &HF0 'FAT identity„Brd$(1) = CHR$(&H02)+CHR$(&H01)+CHR$(&H00)+CHR$(&H02)+CHR$(&H70)+CHR$(&H00)+ _„          CHR$(&HD0)+CHR$(&H02)+CHR$(&HFD)+CHR$(&H02)+CHR$(&H00)+CHR$(&H09)+ _„          CHR$(&H00)+CHR$(&H02)„Brd$(2) = CHR$(&H01)+CHR$(&H01)+CHR$(&H00)+CHR$(&H02)+CHR$(&HE0)+CHR$(&H00)+ _„          CHR$(&H60)+CHR$(&H09)+CHR$(&HF9)+CHR$(&H07)+CHR$(&H00)+CHR$(&H0F)+ _„          CHR$(&H00)+CHR$(&H02)„Brd$(3) = CHR$(&H02)+CHR$(&H01)+CHR$(&H00)+CHR$(&H02)+CHR$(&H70)+CHR$(&H00)+ _„          CHR$(&HA0)+CHR$(&H05)+CHR$(&HF9)+CHR$(&H03)+CHR$(&H00)+CHR$(&H09)+ _„          CHR$(&H00)+CHR$(&H02)„Brd$(4) = CHR$(&H01)+CHR$(&H01)+CHR$(&H00)+CHR$(&H02)+CHR$(&HE0)+CHR$(&H00)+ _„          CHR$(&H40)+CHR$(&H0B)+CHR$(&HF0)+CHR$(&H09)+CHR$(&H00)+CHR$(&H12)+ _„          CHR$(&H00)+CHR$(&H02)„FOR i = 1 to 177„    READ B$„    Boot$ = Boot$ + CHR$(VAL("&H"+B$))„NEXT„BootRecord$ = Boot$ + STRING$(333,CHR$(0)) + CHR$(85) + CHR$(170)„MID$(BootRecord$, 14,14) = Brd$(DType) ' Insert variable part of boot record„' Change disk parameter table„  DEF SEG = 0„  DtOffs = PEEK(120) + PEEK(121) * 256„  DtSegm = PEEK(122) + PEEK(123) * 256„  DEF SEG = DtSegm„     Dfpt$ = PEEK$(&H522,11) ' Save table that we can restore it later„     SELECT CASE DType       ' set gap length for formatting„            CASE 1   : POKE DtOffs + 7, &H50 ' 360K„            CASE 2   : POKE DtOffs + 7, &H54 ' 1.2M„            CASE 3,4 : POKE DtOffs + 7, &H6C ' 720K or 1.44M„     END SELECT„     POKE DtOffs + 4, Spt(DType) ' sectors per track„     POKE DtOffs + 8, 247        ' formatting char (˜)„  DEF SEG„' boot record data„ DATA EB,29,90,50,42,46,4F,52,4D,41,54,00,02,02,01,00„ DATA 02,70,00,D0,02,FD,02,00,09,00,02,00,00,00,00,00„ DATA 02,70,00,D0,02,FD,02,00,09,00,02,00,00,00,00,00„ DATA 00,00,00,00,00,00,00,00,00,00,00,33,C9,8E,D9,8E„ DATA C1,FA,8E,D1,BC,00,7C,FB,C6,06,40,04,01,8B,F4,BF„ DATA 00,7E,B5,01,FC,F3,A5,E9,00,02,8B,DC,41,BA,80,00„ DATA B8,01,02,CD,13,72,0A,81,3E,FE,7D,55,AA,75,02,FF„ DATA E3,E8,2C,00,49,6E,73,65,72,74,20,73,79,73,74,65„ DATA 6D,20,64,69,73,6B,20,61,6E,64,20,70,72,65,73,73„ DATA 20,61,6E,79,20,6B,65,79,20,20,20,20,20,20,20,00„ DATA 5E,AC,22,C0,74,06,B4,0E,CD,10,EB,F5,32,E4,CD,16„ DATA B8,0D,0E,CD,10,B8,20,0A,32,FF,B9,50,00,CD,10,CD„ DATA 19„END SUB„'-----------------------------------------------------------------------------„SUB Waitkey„'-----------------------------------------------------------------------------„ DO : K$ = INKEY$ : LOOP UNTIL LEN(K$)„END SUB„'-----------------------------------------------------------------------------„FUNCTION Error13 (ErrNum, Ask) PUBLIC SHARED„' Show error and allow to retry„'-----------------------------------------------------------------------------„  Error13 = %True„  SELECT CASE ErrNum„         CASE 1    : ErrMsg$ = "Invalid drive"„         CASE 2    : ErrMsg$ = "Bad address mark"„         CASE 3    : ErrMsg$ = "Write protect error"„         CASE 4    : ErrMsg$ = "Bad sector"„         CASE 8    : ErrMsg$ = "DMA failure"„         CASE 16   : ErrMsg$ = "Bad CRC check"„         CASE 32   : ErrMsg$ = "Controller failure"„         CASE 64   : ErrMsg$ = "Bad seek"„         CASE 128  : ErrMsg$ = "Drive not ready"„         CASE 251  : ErrMsg$ = "Invalid media type"„         CASE 252  : ErrMsg$ = "Too many bad sectors"„         CASE 253  : ErrMsg$ = "Bad disk, cannot format"„         CASE 255  : ErrMsg$ = "Disk not formatted."„         CASE ELSE : ErrMsg$ = "Unknown disk error"„  END SELECT„  VIEW TEXT (1,1)-(80,25)„  M$= ErrMsg$„  IF Ask THEN„     M$=M$ + " (A)bort or (R)etry? "„  ELSE„     M$=M$+" - Press a key"„  END IF„  Xp=(80-LEN(M$)-2)\2„  SaveScreen T$„  Box 22,Xp,2,LEN(M$)+2,12,3„  LOCATE 23,Xp+1 :PRINT M$;„  IF Ask THEN„     DO„        DO : K$ = UCASE$(INKEY$) :LOOP UNTIL LEN(K$)„     LOOP UNTIL INSTR(CHR$(&H27)+"AR", K$)„     IF K$ = "R" THEN Error13 = %False„  ELSE„     Waitkey„  END IF„  RestoreScreen T$„  VIEW TEXT (22,8)-(57,22)„ COLOR 15,3„END FUNCTION„'---------------------------------------------------------------------„FUNCTION DosVersion! PUBLIC SHARED ' Get DOS version decimal (e.g. 6.2)„'---------------------------------------------------------------------„    ! MOV AX, &h3000„    ! INT &H21„    ! MOV Hi, AH„    ! MOV Lo, AL„    DosVersion! = Lo + Hi / 100„END FUNCTION„'---------------------------------------------------------------------„SUB DiskInfo (BYVAL Drive, Total&, Free&) PUBLIC SHARED„'--------------------------------------------------------------------„ LOCAL f,c,s,b„    Drive = Drive + 1     ' A = 1 / B = 2„    ! MOV AX,&H3600       ; AH 36h = Get drive information„    ! MOV DX, Drive       ; drive number„    ! INT &H21            ; do it„    ! MOV f, BX           ; free clusters„    ! MOV c, DX           ; total number of clusters„    ! MOV s, AX           ; sectors per cluster„    ! MOV b, CX           ; bytes per sector„    Total& = c * s * b    ' bytes total„    Free&  = f * s * b    ' bytes available„    Bytes  = b * s        ' bytes per cluster„    Clusters = c          ' clusters on disk„    Sectors = s           ' sectors per cluster„END SUB„'-----------------------------------------------„SUB Box (Row, Col, Rows, Cols, Fgc, Bgc) PUBLIC„'-----------------------------------------------„COLOR Fgc,Bgc„LOCATE Row, Col„PRINT "⁄" + STRING$(Cols - 1, "ƒ") + "ø"„LOCATE Row + Rows , Col„PRINT "¿" + STRING$(Cols - 1, "ƒ") + "Ÿ"„FOR i = 1 TO Rows - 1„    LOCATE Row + i, Col„    PRINT "≥" + SPACE$(Cols - 1) + "≥"„NEXT„END SUB„'-----------------------------„SUB SaveScreen (Scrn$) PUBLIC SHARED„'-----------------------------„  IF (pbvScrnCard AND 1) = 0 THEN„	Address = &HB800„  ELSE„	Address = &HB000„  END IF„  DEF SEG = Address„      Scrn$ = PEEK$(0,4000)„  DEF SEG„  END SUB„'--------------------------------„SUB RestoreScreen (Scrn$) PUBLIC SHARED„'--------------------------------„  IF (pbvScrnCard AND 1) = 0 THEN„	Address = &HB800„  ELSE„	Address = &HB000„  END IF„  DEF SEG = Address„      POKE$ 0,Scrn$„  DEF SEG„END SUB„'==== eof ==================================================================„Mark Paruzel                   CD PLAYER V3.2                 Paruzel@aol.com                01-03-00 (12:56)       QB, PDS                349  23076    CDPLAY32.BAS' CD Player v3.2 by Mark Paruzel„' Run this code under QBasic to extract CDPLY_32.ZIP in current directory„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"CDPLY_32.ZIP",4^6:Z&=16972:?STRING$(50,177);„U"%up()%/%'%R%%=jShLQ/'q0:%%%%:%%%%/%%%%hi%nskt%Shiu%W]^YI^X&0MA2„U"A0)5CEn%n2/2%/up(%)9%'%%-%t$8-LwCf$v,%f%%4'/%%1%%%%h#iuq(&.XWS[„U"gfxEJL0?+WNdYHlV(NcG=vQ0=>)2W5a)[JN0;2[V<Q]%e*7eMPq4<2gESeWtbM1„U"N<VC0QIN*hS:.dHw+I>K].D/577gVEy:f$E1')I>8J9\Gg&(gVq;5b&%Z4,B3$+„U"_G.i9uuOtJG2hrnJ(NmRQiGps&rbr7Jhr<UJHbkntHw%<uE)Snvg%r5o1Uty#Xu„U"qbB$3?YU2g9qn^==aZ32l7aIIsb[2W<Pxu7]'xGC+birMr2vVPT1oCQ8AL53:jW„U"27KCct&K2>-SZX<T?H8kJ'*v*-J'Y:\M*bZ:u)=ix+p#bJZApjRbpteL^->KR/V„U"GvKZ1J,Ju7&4_:$D.z:>z$-q,=g>=<m2n#r?A,r#l%axq1I_]78%7iDYbdA/P\$„U"?$Gcsw#)+h'MbBxE#u&Z)US5hA#4+VnSyuo>g9?^$Vf)*C[YX\xSw'7#=b&^<<D„U">1+3<'#imTl$LN2km<)BP$_RD>:yu#kRA8Yg((XTBPPr,+3dM0d.Fjb$pPuVHDK„U"HVpMRoAG,vIh\G$_q-O85P=WM=KxB2u'[9X4PYi>BqbbF\lz,vPrB$Agc#7aA(*„U"'gascX^)K#XZ?jIIi+KPRxqgLKFYx<>TO*PoFDyw<5qu^1)E:HrNc9ANGWt+YZ]„U"_<;KF^f>DBI#r6K,($>f4+LJWZ'*g.TCF2:[[^Wl^Z1_qc-3GmZ=9?NDf*,L5g+„U"+ZIq^4.:aVXf>wH(\Jub-jwOF4SoF/+4MctwCKnpzEYiCG^A*Y6'dSdcbF(uG/m„U"d?2Bs6F^$Ac#UX8b^v/#U?I=/RmoOO,ofP+Y)'P':6xpYUi,H,hGF#]-x'bp>2w„U"4hs+KbVfb]YU91mnjPH\>Z#FWT:WlDWH/,XoIAr0q#3C>JbTwR+#ejx_I#kH&dD„U"x,:#]aPGrQN(-6qP:fUlu.-PV5ArDdC>$>hW/Dw&wWG5lJLT,q#=Z#:qQbfL.6_„U"sfd$mC1Ami[Q-9o:pG$DfwvN\\rR_bfgkE<JKocX\CtphXCx%[<vU)WgbQjg.cQ„U"kds4w\<s;r_UDG*nss^,8JB4IxSAKpVhM?2njRA;k1uC'gR/D604_.cN8dDl3R[„U"EQp3jp3ObeqVCuXi=IN)YleOSbTKE*KN5J\J=?pX]\>(q(Ds=svS(RC?;,R(]#a„U"PVKi%05tTu0k5eBELZYmBFO)a&V7]P+UhN4aYI0/4=Xuy,7;kt*a)Kr$,3sPk=n„U"?O*)MOXbrD>fEoODt*,kl>]w,TIo%?HH>sDsM<[;ke.U_^GRaf6Iu\fAHXgsoK.„U"VeXq:S.ef0ahhWHP2+jbObl*;VUn>49Aa<sa\LA$x:]hk]$ZSPJQjr5cjB:DdQc„U"fS)Na>PpqtfBXIF+PMXRbG:r\-V?8D*Ki^,gE=6NRPYBt4T?5V;d[b&S0djeJNm„U"\&o11:tI4'ctk3h//QMV2&+UQcxlOD5h+s^01iU0^XboB:n2/&bMT]c3qVW$pB3„U"EM+cZ*qU3J-\\lxc*:%qhwn#/pQ1T?mKxtol?#VXElRTbdp<Zb5dH/[Y1ZmF[ae„U"9pHf6Vm$NQc8V>[acYe$5MDNkNd5eV--])q887NTc<8m#<m/cy-++L:>q5bGr?<„U"TKYh$*)fBHRajd%UaA$hCC34#<?Uh9H<\*db\XUHI%hlTtN%b+Q$0*>,t54aa%5„U"w<;Z[z4anu4$48cDEM=G9TLWvq74?1Cs\Z(unoQ8I4%CXJueC=uC&Kkv?Xps(8d„U"^sU</UQHD%.fIja6Cf<-&>f^Q$2qY>AW;OV6offl($A,nserm:<nTfv]/b/;nNR„U"#-2--t_mT)5TKU1iuHO%C)5dXjE#uLN>zKy1#*bjU>a[Ha:[EbOS2Ky^dX]?Wl8„U"f5gA*c(586wFJQns*Pikxmg=)pkL$'>idY6EGEpX6L92Aoh4E3'QDexjLg-k4'u„U"h;*GaoL:>_%fp0k1H3]O-ovfLd8Jjk(wifRrT69hJj-w52X/M1_k+f-6*e_fst_„U"bVTTRTKkYE=iK\^j4RqWcDTK16r_qr;4ouWPs%w<r3>1Cc&fRGL)xtaJ5NcV+s[„U"1UvK^ESgEdQyW*fM-t3cBI>DV^P;n>u6MW.hkG$<o_(&604F5#]rU')$E8$4m-[„U"'-Od=C%DOmFmv/jR?d2p#&yOK%(N#K*mJ25bgFT_UYax$1+?6WYhtvoM1.d.d0e„U"Ot$%[olf2+?Fa<889;X*ajZ%lQYS35Uw76S>kBFut2-.8jN)lk=?^D^lXgimGA;„U"RP:+=?:aUY\SOUpfc=mLwAuw?d2/%os;JqrMXVxD[x$eNm1H4^Ta_5+PJ%feyDn„U"^([r_eax2mlcPTE>52Pf'7WVim/_Q:c&J+^KhH0Wd%6FLoTx0,6=rrqt8gb#w)B„U"2%?jOk-k5V9nOl+5f7kQ+*G&j5rfCAwaR7IhI=#HC=]cQt.[UC^#vYq\j39es]1„U"7*S,%-adq:*lB]bYarU+cb/+i-L]Bl-,iU[:T)A[k/<ZrSTgrNf[akvB(i(vgt;„U"Aq9oECOmpM/R#PZrFa5;:V8DHcKIQ/[hHhq7[BZpSl=BH$0ITZw9=vPk/N/WIr>„U"[lnU%GMrT')J_:1DnWbI9)4[>CeQCFD/[(T*x^U1fNC]6G[G;KtZZ5Eh-9ksGwv„U"X1MhE,$eC(2UO+n6A'J_k8\dWefsPpX7vOx3)jWnq36YTXcl2-KGr8(\sFw4dm8„U"fw4BtDv_Y5CRNA;eD7m=8j8'='?.meNG]04hR&6?2WRRfAgq\MlIaD&8O-1A3zw„U"l;2J9aqGQ8o<n,70EjnNJ3IvfGxx5toM\q[,nJoLH)r8nskAaa3I3;aAHT3SPk/„U"6Q0YlXC+o>++:[2(?BFLedB_T2c0m%wl_$<;Ok+2gH$/2xJE/e4S[yT2?BJ';Ij„U"U*'a74nf[;k.CBC3P#tnW5KIp8JBq%iQZ_%[^gR%c6do,4PDr;uC%?(BiIo%hNO„U"p5\?wQR^Y:Npx2uP:hNt>HJBHaj-*D=&3g2qtg=j>d\v0G8LQ4m_Gwfi?(j4)$\„U"iX$*Gl(]I*,0-[*J%tlvi>]HpK+OEL?*uPq<19,KaiQ:F]>7ZB*qs?QV8p%A_FK„U"\U7l=oMu[a=r*j8^yJ,ODmWL1P5>sW0?L?Iuttt<>J>/V.VcEIUKU\xq3'fh%J-„U"DgKe1.HofRPKfTsK4CxWF0,$=f;2w6]I'>macCQUKVl>jG[sm+,,^xW$:$=#0[c„U"QB];'q[>$LS'SaNt2cF=-l;CfJLUI]<=k7P8;Z2]a)r=7iOGiNI>6YEv1WM;+oU„U".%9[fx&1IKu0*8ms?;\\q/iM1ME>oIPGQ=3hM1]+z[k=e93$d6y,7T)TJw<0k##„U")oni.t./_t.XLo)>7%jmq5PkJdV#lmH<bU\<b.lRK>RNK=^d(3GQc>YMJUd1BO'„U"H+[+C$\T'ag:Z6MPluctfPyd7<#th>Gt0&d(;#;PYO\$AT:bucqt.[K;>AbHkkx„U"S&Km>*xhSL$LH+mL+os_$uMan>&t/p;h-*M4=2K2MPRdT_6dLdJr=>Z$cMM-vg,„U"gp'kTS-4inz)P2hTnBuP+Y6x+'4*U^_&y1plpspkBwRu,K-wL.)t1B^*mz%</o<„U"vY8bt-/Z/dCF)-pw%P?^DCbhoZVm:))fmgRNDqf?kmR/:l4qjto\]<U]b&9m8S0„U"pxuha=TXA2?hFm<f.2aqQSQ9e'>(0VS9H,UYS4t+<HdTq>\v,;P6<Z.DW>K#>YC„U"B#se.9(IQ*(93**kU;q)2WHhW,5A7OcQOP*?VCQ;)gb7de&O+.T;D1W]TTWw1,+„U"uI>GZTS],jBiK=OMMu]+?g<%Z?s,]1A0&Jr^;5>17QcW_[Sgp4LRs_4E50DZ,cB„U",tgOkm+1OAcAwkt1o8#M<t*;ZbF/CH(T?ri6=9n%F\vD)B*7Z3^uesGBGnM5eUe„U"a-U^KCLc6zNoX?n6rioTcu<#2_<L+sh>Mw.2flP[r8D#ed92d\Wj^xltd4P80b9„U"^\TiK*;b8Po3(YUN4,fg_BCI0x'9Bon?pA+uux$H&y,W$*Z=-G8tJ5w(y;fH427„U"U'^RAVmC]km+WLZ>X7)Od%SU4VcR7E/Gt<kHd\0U+zm_^2FaB\5/gLC_hB#$r-0„U"GP4bNG)=a]<EF$-.D0Tj7hR'ebvgac=YWmB%\4h%\Dfnnzi>Yh#1Bl_=is?L8-P„U"tX5+1wRbJN+7ITq8z/+c.3=7R(BwB?$;c4WVv*NE4/[.I9nYa*=pQTL9XhC^vbZ„U"p5BF&bDvp>:;madeIJBRu<Uk%VfCZMZh$>n_i0.2v5=%nN/X>\K-mCs2g(L$#+m„U"x_f[VdrmuaiqQ\pc.pF=;v:FS;cJiXoUI]aF9]ky9D+$WBk65E%&Y>)l+2QOfdH„U"0h#HYp+\WL<ISqYSL[6g.R0-z4Ya-A(EM\?mZMG<8_yO5l+?0'K**:+e[Z35XTk„U",q.MB?VJ^Fi-McDZ+nF$OV*]w$HE64Vl6FHkYBcciDlv#,$OxpxO&;r,nnmp_vp„U"[/.)=2*mu:0hhQ%343G3[itzFxci(f)DJ6:Qpx4(vVd4pmHVK<IP+XWet$gPf)-„U"YUHo;-T(Q8d3D>U$G8>C)H)E*b0QoPYklvOW5f/ap1T35)c(>mqVV99va1q>27g„U"QTPG9<d<Z90<F#aB1L>b:RPDdaDJU[ABk=vkX#&wBYPRpkG>=#;c$1chE*QFKw.„U"6_-#sXP_uRFv8,BgakB4+VLd;'e%RQ]d6RM8s]0aDAuvkC/..9AY;cU;B_O^YC^„U"LkTP)%DI^bZ4X/ofLAptFlk>jkM(UgJS:pY/>KxN^/4^6L#>ntiDh)Yy+-Cu;'6„U"^mA]txuYZc#(0:X<5mueHg?S^p'D_ip(T5<D_xVsTji):\swjOJn:^khsT#/VbA„U"?6/\Bm'E9<ZM,o='REnK80:C48'$,Tv-LuRRLsfgF_c1T.T;8kn6:=kG8+FMS;k„U"R3(:e&70R&JMEfOpH3rkBISNpPj;AYh$yTQ\(Gkzr8;*$?AB]o9s3GTuNl<T^37„U"<]1.=twO*:E/Q?;A*v##G[KO0\BPD#l[0[wCi>,8(YIZ4lNQZ-U[I6WT\GMmDAy„U"1Z.*blPcZ=^NPLf=y1boUy8a1&J_WN.g/=(B?f76UI,QK0L$kZjZ.uXwoPB2KhW„U".gYtL)k]tcG&4Y&?5\9R8,NS.7y>vkQQ^MdPdPNls4$sPfn5X3.wRHH>[m]J6z>„U"/e-?MTI-Fcn7enJvdSmY5Oeb%MbE;>G/(uiM%7A[mcJKQln)0+VMGi_&Q9M1(Ss„U"nXokmBZkZ5G3.p_G-wgQC)^Nb6[VHJ%.c)X$+-4*jXcjZUpEi9R\k),&Sfhhp#t„U"hHr,o]6aT5GO6<q9*iHN/C'7Se\fNLZr/J;XEh*7nQ][*G?o$\[m5bH4Eslf9m_„U"pFUaIs[N&X53AZ^xXpd,2KPoYS#&r,pyfvEa*27KA]irOSb:IgfKI1oP$uXfE8P„U"Tll2P)FP[_^(DmXn7ppKGfnBAdQ]4d2bDGF0:[nK]FsM<L_Bki=?b0O*vc_;n1i„U"EUcD]4J(FhN0%>irFNIa6UOLV7,#NAiaR=7RJ+J&HLN&-gu%VhA=hIx-EwJ'WoD„U"T&'2P-Q^6twt>IJ+Hb)<AviT9]^^&KA9ZS%9-MLM=ZZM3H#Es[5*X,x6vG7hfM)„U"tw:2f2nB:C0K5k/&7&H:cO;W.U4L0JLnI&#+pwp4RQ;-C&(\B=U-$-2=):nZIC*„U"y\UV/A97r56?\hwuka4/osfOMG:S;Nv,gw3J6d]S0OE)[Dnhd#5W>w/]T?Qo'P?„U"Q_k6Eh>u,3qTVkYX_R6D*8c<Rk<c5[eRAKRaf.W<km<ciwz%aZ)0,Q+D.bo+$wP„U"NG&\-0I1BiqJMiJu8H-dP'&a$BPcWyqgiCQw_zKfxSDccbQT)l3[b\%F^(9H?C$„U"pOh-$pE]r_l&NbS$.g2\F,\$ZW7VK#\'I-DM+shhtHS_WYniuCMQ]:-u7/QxWw6„U"qv=Y^s[3SOVPFa7[W[QcNZT8Wu-%Ox,jiR[R^Q[V28l;oD+PgkU_Iq?AG(RQ'KQ„U"/EN=A?'ShwGlit6Kx#Y*V\TYaeoH97p,o-72Oj/F8QPTHS-/-Qq*dIR-Y]6RVF7„U"&_2)G8k&E+-WdfBRK2>?;BVLD$tB&SA9IH_owgIX+:GkE7+;AEH)=]5n.aK/&+V„U"7=HBvg%Ap<XZbb%]X1]>Kgczpf1LU_2I#08QW3[1\St5A/3-j&&&vOq<Vx%8+NN„U"2eJ<)&t)knnwD=D:mn4=RsCB??h*J%4S0K/mgp_;%=4c'Q+M:brB6W*_PCZop;s„U"hln&A(X9'o^dxmHc]h:bI4o<b$kI:LT'x-re<WB.]ooO)kS+2N;E2=QZn.O*YxL„U"fw3V(,#IlC=/d._6uD)Hi+aFEWHr8oeEF#+xN-vgY1<Q3#[RwgD_3dg,6?,>u'F„U"pN2L9Os<ln_&gn$fe1iBsv\^OUh2XVtH6wDBKgu^L,[2B=vos$1E4SK?c$'QEJU„U"g_olc*ScNHj/Zv1#L3->T:$ULW)tbwGD9PvxAS?FwJ-.4'g'Ua?df88]^mcWat9„U"d,,KQfq)mcg.]gH;]YG4Cr;Z*B[+p+VI=*oL1b<IhEgR_Pfw??OsZSTY)0e\heN„U"sJ6[-jx[cJ?deJpp^j-]#5R:B5/BnJhbjz^Kc6y8WB-(,I/nF&NPN1dpAafg#E^„U"1P$vC:CN[LYcl>sz>C9.'[*a4vOV/^E1:q8&_O?;2ff5be]ER3mQN]G>-c%]<>.„U"w_&[d;SvlAZQr*l^qm+*Dz9zHEDSAX+NT:(nxr4)$5UyJTFzUN$[CHqfe$#I[n2„U"uk+EE\D.bVB?29JK&v)*P77ik5l9W>[bM0IC([iR3Rr6'x8&O\A1w.+ZJ1rgBKg„U"A]'p5;$WJ;(%N(&.Ot+?)^bSv<L(:^^c1&&tBjpvz\4r%]H_Yf3<M0edHM?Ga?a„U"RRlRU&AcX\=T4R]gV&,HIU2(H&GtO5Kteq\eovsk=c%YZjBJ?4JxxC8gnwX6TGF„U"LIVzv54m3gcd%3*5wbN2S<6ioy&&:[,QU1]lV./$-]J3DM&->mIuKlw63qAT>k-„U"GuGcE>[IQQs(chKDR//,'[]6Edh$aN?92%CdTKQJ%GSm_mh<Q&j[)3/$-*G1VXU„U"F,*Ze3_LCc;$3FQ0\i(y>dM$a0eWr6LBJpC+]\1A*-Z]eifk[PQK7bh-Jo>[y.y„U"W<y1PXPBG1P3=u]gfT[0zhW6+O_,j:$_0UWSnME*23V9Ms>SR7F.&>#GS-i6F)h„U"Tt94mC3x]MRzgK]D+<%fMY0u#o'9#soH9$oNoH>p1&>p&;>pJ37(*fC=/UHmoP?„U"NM[2oq2.7(iPQu]9.-ZhxaeNIlf0t5%&3*dAfh$8w'1>oitB(v8xTn_;;3Et4.^„U"3?MIIVgXz?*m%0ru5BvbgtEw&JyV;#(]18S5\7zU7UQ:avqtIOtMSu<-uE=A0pg„U"p]9T2X=wYK4F-'T,.u[1m3VfWtm-c\McXXTmo^1r\D57BaG0)^cUOg',je3E__P„U".AD4tLS$V^\Eo]xCJ]H8WlxrdL3k;deTuk/g&%lp5ruR-urR5Yn=TU40dz(j\'D„U"=\j$*PH+'Pnv,V=b,n;c581Yg2JydSBcWy#pQnluppZ2E1NlfP/6<BX_UTaF78r„U"iV7t[4-M[BDIA*T^X[A^5i/'ai?1<2bx#lx'.B\lxgN+zk=f;GDGp1IpV9ZEc/.„U"L8cDYt34xH'MjL*_)O_B=?_]R^_rYCYzE$Mlru:Z;OAQkiF3,0e-2oNH9UQrEdJ„U"F+[pK-ka/S;L&2D-+\N-^2C)gA9<R5EHj%wUoT:aI[a,%3]-rFnmN47.ri*0jr/„U"XXSP\0=Md0=>6s,QJYH5FW^,+P(ABYuSd)AMM&o-yp^4/VM<';P,uZZZ8Ec?YV)„U"\IAY;C[=-Z=FV-qEjcl=1R;SkWW)1c[p-d3m$CLVUV,;rZKZ.h89^g^1vkvrY62„U"aaukWED.e4z&j3Jj1EXypn?]K_zntD0:H/MNdl)&dKQL)hQ5Hb9GV&C'g8,?m=h„U"At(SJ4'9z)THh*6OEf]oTOrNK,P1)SJ^4Yol]4WXw]eA%C<]2P&(i,^zjborb4g„U"\G_-$5<A%t1oZ_Kx0+(gWTw&,r,Y5ARX^(G6/Eqvp%=(=m;I:F36c#fu%K$uX,b„U"5n>Ic2f12o3w'0oBE=SYFGms%Bs>jMV*5W-7n(,UiG)]&4uRUjd+JJGkKm&:Yv2„U"V)rQ0RQD=xV='OTmij/0MGt;>P1Rm33Ru+xW+Hm8%XHE\#Xq,.+o>pYs(;_4#x;„U"Sa1kl3fG-Ge(hGf4:._M1m1&d2La?sxmA[3isE4ecX/qVR'aGp#,&(/FN;?mP<U„U"O)/sk6rK.TU8R0L_Iq_QHIUOQm5Yz'/yR>3S*$FtCYA.KTFu8$(piv1kqh[io*G„U"L;?*h3Z:#:F=5e^Y0?funI'HW&UrnF_(e#Kwh*09&&U)?y$QVHsJBoBJs5gl-K;„U"0yBo\m_7E%iXJp76/Ep0G%5qj\5,>y=/8Bab-.Np+\eKg?^;#HBO2SBIqEX1(/0„U"5nCT$aN??2b#NF2A+yrRKX*yC:/(4,OMhLJQQ(]P3cajK/>MosC>Z%zF(g;a[.D„U"=PGCI^Gf9RT[)\Yu547\EpcBQA=ePMt$YCb?6Hlr'i#vYl([6pkBGuk3_rg'hTM„U"6xU+9ff>6ZTLD%(VlV;(Hh?f1,[W='n,l&$Fe'Bh(R&6O3dCzdqdi36%EJoM3Yo„U"RnkP7,$K&M_HD-SBUObHAX1C4&V;i)%:-]_s-_kp^h;:uEIJ&(A+.)-77Pw=]9i„U"Mbj3S_f]6;+5x1*Vp7248ZQ%2eY6hd\er9fWxW(]c[KOy.-ceV.3f4r+E(UIDvs„U"Xi<rj;4M1g_JPSNCmgs(9O1k+I=\P,RqSfe2t<7dZ]e>?SW)._FSa7FH(%6c.bM„U"G$&cV#S='l<vRF<Ba:5g6Vn1)x,fbqE*/w83,G\'<al*='u87w=7MXGqbhAF2gt„U"[*I4&1$SGrK(RbgI[hUbxunCl=qeCPDag3Mi0Ru4DaUv<jc'nn-?d]7\>r#//QF„U"OPlF7AhP1U(FGjC1i;_;SD\jo[gruSbtCA0&jxeAI/cetl;AlBR3cl*R[x^AXUT„U"fq^psu?A'na7$9JJ':cJJiPi/,&plCNM$nsJLR:jb/&0%0D]Y>8$a-lo\se4c$P„U"^Wwt]MC1\XJRlBb8Gg&hVL%;P(\9U_+UV8V>$GZYDvWBDj8V'<IVG\nLNf:z\;V„U"i#=*CsAiCYs/:Yn:eSM.&Tk+Od'qT+S&hg4n28Sx^A-Qnali_AmN)1ZE,L.fY#u„U"2%#w)HasEs_pb*K^(1jLidpdTdq2.b[?7*<G-b;$q+f.G\p<NNHLHf\AoFlieB8„U"fd*jia-Dqym$4no8V;cCaOp13ZM.iCS*j7&_Fl+B\U_l,$O3dkq0Q1\YsDfwNUK„U"tV>7\N.2ECk7-)T:p2;+*G(C<l2aYKLBeVfGX?fQPp6JYQ<1YRA4Ulu7s]+9c>u„U"aI#k6JOv^#$K(=0[a^g$h+zss(WB4GL%dZpaMMT)SVwtg/yFEHGK;9TUO&jt'^z„U"wA]Pw^F0'FIV88v[0=s_o:FRZUgK\AdTVRY]$XO')1O<p,ei1ffkku5fOOLcHBG„U"Z:Y2K_:'2dN_^5lTq$J/NN6C]ClaEV-F1PTGvN=F)PEWU[QQ3Xy<W_&LFj,_;qX„U"#)V4Q&OVX--i<jp0+;%DwQb1iKSJ>X?Dky+H8R^AO-I6uAQXd(8Plh#2a^:xl^]„U"6V9(TqRg'#3BsK-j8Y5mK1tFD>v5X4iBc^1Y,S9S'sAi2AxXgc],Og7qD>o1,4L„U"YP?UA0;CnCHa;-qI4:5$;FPkweD?Q;#U>CppP\s4b9PTb&72Y0K9k0FJ<-C#)Y)„U"R/PJc?SgcEHWIff'ZYrGOqnrThPqiZ*+ht'QQ8TUO]oK>2lnTWF*hy[ouKVS:T7„U"l0aoC,kw=jxaG;_=fXPB7;iHiFdiPr1k2GMi)v(0h_fbjTHH*8iw?v9(DEPoZ=d„U"5WcA'.TOd1=1BkpHGWVAXHV=oj_]T'ATdx[igB1/8tW?#\d.V?NX3*#kEZ1IeIo„U"JUqUlS2dXhgiM$S[E8n\1g5D2nfYp>>uI&DLw>lt&bjnu>FYb?kkKs3bkBrA9?1„U";R:g_-DV8j,i*Dz2]U_O\N?zrk8QWlEO?tg<B:0C^e)L4JF-)r'r6DZ^.yTkM$Y„U"6GbLoj?gI^u-*;BY6B^6A*$gle1otRU+Y4E(s;/mlLt)6v+[F+j]Kj3[.tM'I*%„U"88LB)Qp\WUS%Ga6[E:*n)D[.Sp5RR=Oso2K,?+g/llUqiT3vvSkl?*jPay7]cH8„U"qky(+.5=t6SQaqOD)*CD$t%&T?l]3<8PBVewlD\q?dvYs^b;pRop[&&lb=/[[,;„U"Xae=*t1w4Rod#+;9\QhO>')BDmc?+I+d7*b^ig2<.r.tWn-Wp>;%?oJ3Rta*P2C„U"\do5D]xHTg)LYHI.Ru,G$pkNEE_LrC$:u<$%O0eY+R?30DC^4YU-,2i=9?5?cQ0„U"heG\e<A%EpJX*SrRY#$3_Bev*erH%H$oaPtF=QfZK^rE>9Zp]/H$6/ep*2nE9pD„U"xyRbFyKg<4N&90blh0;+<5*9JX:fK>fqgJnws;0:wThvaORqqq%%\<CYl/)367N„U".o_YA)-Uqc*F3]PU7Lyd/8[a[eg:tfHmltl5ISh0aMDAv;J;jbiG/1;K:oDKh#k„U".rVTmpemD]0F<tjQ\_SHD2Rar[[fZU9W=EggW9WWW,e#_2g3o%-MU0EX;87R3iV„U"H[Hg4]<q.iW5y%C?r8a/DqL.q0^-qz^-q:Q7,CkG>OKo:n+O0(KR7[LqdeiQ$P4„U".tI(DOLmh:o/=OefzfQTy5Jj#Mz?P_%(F]5sW(H-+>NIhfj%s(.+bfO?_*2yrv?„U"c#>?GLD\0q8DKecVSar:r\K1'NDbfZWwA,W&%c.K4W^m%yq:$aJL=+>nM]zHWLe„U"*e]g+6$pyb4\F2i=0:c-6i4+zeDsWm3O^eX_XX+D7VH4(d7qH&pqodfLm</lbUw„U"u-/0G/UA:-znfCB?>Zf[eT[5mlp-F;>&ZW[mlr'QF^BdUN9b2A)iPOOV7eVi'Fd„U"p/*b9l9kA&BKCS,M-]gt))5Shbp>q7i)Q[]o$XQN?Kpd[oc3M'&z<<UQgP84H+c„U"Erh.)AL8-b^.BrDJzkXHo3YO/%SBxOlyFhGa2QHM0Ljhcns[mn,j$(H=b=n/<tZ„U"sKigRpSE;_j[t?JI*LC[fAs=b1\Ls<0Ua'gl7[oM#4lw%vFV[UWicvE,gkl^N-?„U",(M7CjRFT9KXLTxLPurLsGHArJ83F3g9KfP'iE)8Q6^_LP93oKVd+DBl8m;8rSP„U"f>2JvhV;kt80HUv_SZFqfjs'oav0WMqocGRS4%(xzWK49$=FHV+&9DKp-v-kRO4„U"9Z(hmbUERlP*^X2eCquRLFI($W$Uf1A?+>bW$WHG&,MY?C9cC;$cjcE*#6D?jX2„U"Kv.AefNt%3+.>A3wr9X2C'-Oc;eP6\xhFB$x^87vg7LwJVxi62rOl(Qxn=z)5x8„U"R?^7p[QLOYO<s,sL9f(H_*CEI?Ey,E[<hIkEQ)Lqr7ZTOUh6_W]b?c%l^b/2lvJ„U"7_Bhh#-/xL:+^a#r^4q&%ThtZ'b>RxvM\Q^E$Pd[D.%UcQdu]Zo<us7WJlt2sMy„U"nq7D*mgr0t+3/*XEnh[c/&]VlIlI>TgKMF5R?9jhEplU^(VSCO9WE&2o->V3X&D„U"*G;HzfF(KTOf7$snM'6;=k>5*jFlzgjciuB<0,ObX(tbJAJ$k[nEq9XjO-tL=(l„U"r*XBN_+kmsQ6LF]h8R^ncA(l:d/ifGTot\'LQT<b9v/cJhZYwQXm<k7V*=jd62j„U"V&^sLyTI^,JvHm>6\b0aR_%'CZMp]'jpMXp]M8_QYar^0Xit::2y,:8C$E2l,Mr„U"a.NT$eMr&QMn:n/)fOCbl*G$]qd29V\GX\hX-Z3WoU,Tau>mJxK6#01PrXCP1Vf„U"BW<d$w8TJNv&^9I,jTA>TI1c##KdNX-w?r83$Wc:lY/9\NN>3Cm>$XIHMQhkVkQ„U"O-iVXYE?'^7jx>4BRK+-iduVB4<v<fBRc/nTUPr$N0=WnP*5C2f\O_0O$]\esY5„U"d*Se(Oarw_J0+nswnA<S_W5I(jAL=z\2>?E4CO/El'YZ;0,5a;Of.fktwnQMx9\„U"%NfH\UtHEN^?GO\EqZHKXfD^HLfU<CxX4r>gvV0aTvrNpt[??eviDg]Xah4t8F_„U"6I_$U6H>Z&#4C86r(1lZUEe)<UBg?=Een\UC+v<O1kJOR:H5byTr\ynZX-N9#2C„U"9L]0;Z?1$#^t'.,l22sA\*<YxnY7hyPRvWrDY73'P2YpsBiut#-M9^6bOkr5#-O„U"]966d(#f2Z*roTE/ld][Zq9r)Q$p[2D+;?O?$h>:M[*P1?AZ*Ib,(pKN$ja1(Ge„U"q3M\'l=Yn0N_:xXqm)17GNH8A9nRAnS*V1n(D88K\l;#G?KO4#l_2dH)2+N83z[„U",u]$e6b'$N#wy0IhZ0#D51Q:8IiNdi$K+NM)i$Dqpll):?eV90Lpxp$0xK%o^DM„U"s4^$,ZoemUq(m&WZ8cmJz(lIV#NYk>DD0\pa\Em0/'.KQ$s%?P:Y9kU;-F(pO$)„U"le[KA+D6E>C$N0?bFTs->5F#c(4Uj^q&w[3qD[j7<VqLD\D<S8Bf,q:Ew$1Z66R„END SUB„SUB V2„U"?ffu9D)K7lDprV#&KQZo92.w7ZTSSJ_L)goqWHXxGx?oNqS%XlqfFNeaCAf<#(6„U"rUs,+D1svf*VDwEe+A:eq<dYEE(Qb,CN-)HGZjf6-'P4fTG-Zr<1N*wn)uTS\hT„U"4:Ry_jI;Ou+od>+67%]#?T%]Ju0OrTr'Y7cri]O--oM&86O+us\./.=<dm=sc3.„U"PO94Ua)ANj*An#KUk=%9.MrC;a^pR5n9D:1tt=)OAWEw=9Q&nt$M5Y5q2ruZ9%B„U"BUHa?k?%)wv2O(ZEzwf4D/%*md5$S\k#f#)][[.Dc;eV0y;8O0banJmLv,nz]&<„U"[6T/(G-hUJhurlO=Abdgs_?i3FGY]k1$Fy2f3M&$u1w\I$NuP$^ES^IV4M<Q$Cx„U"QTJ%w3,[&SJ#B5SN4MT7=yriz9H6q5ts6TG9Rkih&JbKMsLr\srO[?YT(%pxX3r„U")NGfVtji0c\dn/iW^;%c>RHfasG7f<nJ\#0f<u\eISAKYK.6Mh>+IJkVb\NIYDz„U"q,HeG#iFOb_Ih<,gqE=Xa,srx$QF)bucQqFSuBkhmO1o;C/Ioubixg0HtN,<)r$„U"JO-E$jdaXb(,QK)3J-J6*0L;%r/t9*c4895%/PJC&?SdT%]?g0Orbj'Y77s%/5^„U"s'QkOp0O\XnstJ2SetJ+rPv)T>F2KN;*6ca*S&0M'kKl-Sm-S<if<fOc/fRxC/-„U"m7;,-A4Wc?SI5P6_<*bJziuN,=#j+H='e4HM)ER8H)(\*[gW[oU<)j89gQmN)h<„U"Df3dN/h;RCRfT?8v[Ls&xR\ql202gQN/+vunrW_Y9dL1)'nEgHM,cS0#]9lq.ud„U"9qN,m6f'lWp$nN8%LHW_ugBJD,AKTh0L0,St,Gx%e6=)<6TWtaaAJY,G;^U',Py„U")d%9PH]24v&yv_Xg[:l+[f:_Z:S%Kx,9#H=+)E^m),WS8S\)WD%?IcN,:A#u2m)„U"H2VNf>-t=iNu'[%T$7jr:Hr;+a>'&boqz70,=LN6+pP$Ffb'\j9d8BFGqRH1L\]„U"ta5EAu?Y_/VR?7cnl=0+2;(r:Z:ETHYTpYV?#Pz2<(=*r\Z6nWB1lbmK7:K?U(d„U"QB,oGLB(K*,7P9Qbx>Yf)1's%H7ibOk,cC*QALA7YYTfsptR6gT-l+2d,,zXkXN„U"Y^ehtl3J6biUFbHd'r[WBl/H5a]<p,PHI%:M9geg4h=TRk;-WOg=?].sp=d^<Tu„U"j1f%_RqrHk7n>(&6TMTNAdAAeCI7E2ft<u-\W4iNXJ#QO.#&.][#lSuOvMYsKh-„U"?ep%ct*'Ndts<KiaW0Vc?(gnrb:m_j;RI.[dd+=cH8tTFr/##^fG[=6uu<nXpw\„U"w4o0/pVqfNqw;jAmDPnfZg;ct?Im#f6p4_/_Qj,TZAj=5N2<>r%NUpu1.cAo5M]„U"/S]q^2sqoFnOZq$>RLYXQ\r#j\Z$o//n1d)7)N_81cVjc&vo)X?W+3:8?(vkVCz„U"dgrP(pDD=l21\[%j1FruDjh6VISzk_H:?hJOd2d9?j2noQeQz7H^EnTMYsf-UiF„U"d'%sCWhO<Zu/zTvEwu\'Cyq/;4]lAfN<rR3$0'AwL:fKo]t1=tHSwJp#vWN_Js+„U"U5mNa3jf[P6-Fa1\wF>Xlcr/BVGx$KIIh?*:7&M?sBLOMHd>XDXk<-='$HB'pcP„U"5sW0L)CQ-wNa,]'&AJbSHmf[%^^Z)Pua-o][^<8V6koHkE4;RYFhjUv<Q$l$Ho#„U"bD^1V^K]W(bA&GHoA*W'QH<EM1^+O/WbA&=GoA*GWQH]7-Z+k/S?(XLg\kF\S?V„U"uE1W:pcwsobjhQ5Y-:xL6fcfV(,BiaHEMW:pk]gwF3bV]uk(L&#Xg?v3nsos[g^„U"u8W.uK*wn*PNk_$'Pv?X['R=['\a-HRbIPfU,YeqNDN,gkFjgos0'>e[>WA4jKF„U"(j$*jCv+w$?\?AF3p_1iNg=Ff)+ze/\&*APpZS;)(JoM5_o70PfAh_3%kv=rI/-„U"7aQ3)jVa'BhZ0/M_?A]vIHoAxVxpWBg4AqR+tjEkk2ouXlHMkhN=ZX$g.[w-Y-m„U"Kcanf(sMisiqc]F*2_H8Ng'sgsKeNWB25-B[$T/HHWg%pH^2$dvsFO>3nJ86<np„U"YM-<K?h[/..en]XH76Lr^N[CM](]VclPk'5#kkgsbZcX*U:P5h[\(F$J;CTeifA„U"/(:;48v3P'rNN33/*yY%;d^N,Onk\5$1v3UrBQAR$[9F2?Cr48'>M+)2$3>A;7p„U"H<8d?$YzVP^X9Z__fh,&W?SH-9%)Hbh=^y2sl:/r./7cnXc04m;b]v^SjetB8E1„U"fX0OhlZsPXRwEu?9<[pqr?c]0;H>*4$R6bQwQL,JqxIXO5,QlDy:pcHaKCC?nIh„U"<)cF*,lddrLG/\?'D_Xnke&TY8Y%5S5QU=kD0o'oI;MQk%V6du,fL2CVwXrcRej„U"b9T9XD,B_Cs<Do0;rH*4$cFNckTMcwG*;8DG2sLkApdgojZ[q(rkLik$Pbj5B=C„U"07DjYH8MgkG=llc=RTsmp(2;\KsN<Mj-<J%WMJQZFX?GJZ>8aTuyRg0b-xP8bng„U"GcwtINv6sNjkrnnis6txkYkNCidnbw%TqG<p+maGZ]U9/I#(KN*a.Zi'.v<w&X\„U"j8>6(r=[sBK4&J'f<KOV+d_8/-*3=T8siPG^qV#>6&cNSaP2/Xu#+w6Cm6n)lO;„U"-<.UM+dw7V)Lb8:&kV;W_-ku2Z&,H>E3=dS^5OPVCJfCS^6K#mzFHA+#w*##$N)„U"rX=(W5Xh'\59r_'PuPfF.&S58?OH^?=kFbqx;ZPe3QTRLc?,448)I#]I)r5mksr„U"GaDqPJ<w^1E]qF#r#t]3)GqUD.w+N-UQ7R2N,zSGX+L:1PgjgbUfe'dVy35-t(F„U"kb?g7rUnarMI;-KkdXfqKV.*AQ>^<wSfm:]'dzUTBwEkx=B?M71bNSc$YUDBC9K„U"I#;CPXEL<K.Z4V1+A5Ad;R<r>:GQ'i:W=PeLl,a9(eUDl=0MTsJ[:T\i1i;N^3L„U"Vx2+Wx=-?M'7j)i8GnW\zvx5[m<W:r$WIs,w,j1$Wjv0fdKEm-Y3k<b)7jIp)>2„U"[->:L3A#U[Q[]:F?Sv5\LgD9o(+&/osRSM#.csIzuimbK<\hFBksPi$Ku9IRE=8„U"?axbb</F.kGFEkwRe2?6n4)3[Uo>V=u;Ca_VtYcoR=_=c'xxYcB>)=.+eIT-,,Q„U"<6_]%s\%[WD%tio0\ZTGq+zU;36\\R:i4XjKYCrQ/.Xum?)\^wu.3.//<FYMLG&„U"%9U\'xYhUwj)a;x#Eo$j5ta18:j;'v_5#SYPB>+hKr6j3Uud=bq;\lnS8&31z9d„U">p4PFW/[[?cg3zW&=e==4\>Yc<:]:9I9J.$+L0ZH^_j:7)FecS7P-KCQkpH%2uo„U"7g-OW;L5S^PWZ'%(sXs*MM^8[whLrn(GksrKjz[G[a<Ji[e+qP1[FQ3w9H=d:3,„U"Gb$9DB'qO.q==2>b:BW?[VAj?nQL&_h'T\9;-BCFp8laCuSIHn8</p]BUQ=BT97„U">$gv'Ju)GLEglmpj4w$H_l7==_UU5$jBIU,o2KX\MlLK^shxhX_2[Tt3_6oI=Pn„U"&OL2kiN[iu9(o%JM^$\1z5:g<r?sC8d>dnCg,\xgD3U-\xqSxMng6SMm68N*+[3„U".<#3tIN(>k?CuW6\i]+C5,,S)g9wm$kJ06^T7-F\Q,-3$.Vt^GfgyC/d/sf.,<-„U"_JO9=7;mAqYKx-rzS2P333N3^(,ixM%63Lgu'pCfa^?Mu,jWp1qV8Sm34/gZFY<„U"24_Oi&W?</r..:>z8l4#J)IdVqvONqysS%mrUB3\Fxd'f9l*fkJgTC7W:IAYf6e„U"4D>Ug3ip_85uv*:A,6jJfqBg5j,lTnMcWo+004VC3L91n.8b;=.X=6i)kk00.0Z„U"kA&RT*.8Ae89;6-?.+2Vg[(+[CAj[0^)LuJS6V=T/TpC45[J&m'w*Iro9s<hAa/„U"tt5yL<R1o7:pYM&au6I&[7zBfnZ7<>?hjG.-MW>h^J+x=Us7-(XxJ')GM+VoIHS„U"Ro$b&lF_J\:F6/90f7E;YY6N+%_e&T[(e3?zpA]P])?+\>C_b+:_zoNA0J7mH8O„U"cAW_5v<i+/c/[A1=mfA/ABCbiC;.2((%pbhNY[$sWzkOXbyo>:N=NnXR83DU0-U„U"\dMm>1m[xz0(Vi;*/1M<:c\=[H.'-7j2wFJ3Zt65Sw'UxH&9xf&m58VMKiWh81w„U"<NKwb]ne(:.O4-IPINBmUeT;JxQuECVI7;f3t5OgpO*((:iEUZiLS+?P,,sR7.u„U"??-=gvH^\kt*sxXsOp^k7eZcR.B#)&M_CxuL)u>X*5\cnl+VPW%lk/RzvE$ELwr„U"+C;b=*$v-gaiJCuXX8\ERq1kj#[=x=P)\1Qz(ovlLctpa*B?D9:E3=>2J6]%v/Y„U"Zn\W7GWg=uf#:5F?gA1\%EP_:t0vPS>f_<=I%FuMU2Qjz+;K57lR3*(AD'JEq?-„U"8BiNL4q555'J=O,(cvd:cwCy%9$ajWUUwv43TS75TRkRtIh[f&9lP??N-LrU(LM„U"-zB4t]n)N0=dNwSG]7KVHfhrMZODA.7H0jO#.8Mz)t['?i<Cn(,4[CcaG3vGoNt„U"ER2huZUTLe+uwE8Do;9F_VhxW;.41#]c::kt8:*_%)vf1;'KSWBuOYphADtk+3c„U"D[2rAroWN15n:V^KiZEPX\w&Y2#d%2K#g]Rv_1Koa=9bayd1v*OlZx<s^YIiVOi„U"=23'kWkXg>2v35ZZcI(xky5*co*YBCe$,maE[taw\tu=5G>TLHyEe\pYf.jm-BV„U"1jENtV3;MF'>fg+[Vkhumkx[,>1#cgE];eGS3Nu'.^lnzoV[:DPQDw#$WoQJ&oQ„U"*;*e>^*55rHHJ&OmyC>W/]+b5Pz_S_nw8UV[mS$Jl$'O:+h4Md;_UHD-2GOqk-_„U"Oy^'UHc:(DKFm^3ADxV.VFx\k6f<&/*1$4NcLxTKN$9zAFi7Yg6y>6%yNme/-4q„U"aU=%_]7zH5rF^jQ'uNnCO\ig\&7W-8A5JU:$8dKNvXx95pKNf/)2cN>+&W?g-^S„U"iqRa(9\E37'95MijP.kbBE\_k$2IiG'EprR9]i,Ad*/bglLdG$8mO<3eCAC<bF[„U"4J0i.G,g-q]*vfKB?1a5P?iec\6zUq]9kiC4b,'x(_,hmS<95UHq4KpSUh[4F5C„U"iWp#tffaw6_.HfG2h^gkg+'>eSSIG6uTjj?\=(K$q=krCZrH*<I[K3Joa2sSrca„U".4joeCpH;)eAkoQBhe#.>%ijG#t;wW4CL1.[.1C2_[LQ'N3Ohh$$=O*VpHSA'as„U"6(quhmNrgUx)UBN:7bsPP(/yrn(]=p=b&^jaE1Y72<l'C7rTm=L^r[3-LAGI>2z„U"/d=^dWvQdz/^R7NqA9m;>k3:'d8,:*A39Y.rVP]U7x/o=n4MD['<-K+LlCPpv;'„U"-.n#w6[B_yA,f9&MQVBCi=eJOb$d&bpXEE[2%Hf>UE=SO6T7C?.l.>nOtr*a\Zf„U"5l03H$vT#gKqeou0DNIk5oXzr\Ht:%Xr#+WH2&rC2#Xh1[aU>57;e&\M%dVLl<:„U"kV4mf1E$IFlnU-j'2I8.aX,PCfmH$c,8J)JfsXk&M$72RL>L.oL[-P%40vKB;Ya„U"VDZ8E(a?[G^%'Njb(IU)kG9FfjbU]K^bg4)BO.4RVjc)UYeTj-x,EL:$X-iAvZj„U"18RSfMhEj,h1n:/EiFVc_GeeOi/#gyyveFQqOp#jz'=EQSuFUKRMlR#ipO(/Bm&„U"uR&I7Uld^_7(opI04L1p+&NKB(A0WyaS\kEJD=<N:sYf;:K[/6avO6x<fe'uWY]„U"TU%2=6A)VX:I4%8n,mkV(O(pAJHdA$N#0u?asjf<V3/2CgCU.pHBdG\Co8_Xow]„U"5&'?n66WYa/sB])_+>7%Dhgo4Sb\etD(YsreH41Zg+o#k4HiT(z&5Y6<e/^++Mt„U"Y4&X>+Z/Hm.u5%l0:Yl>.o(n?N?xKtbJMtH2e+Jq>Z+HvjQKv%wC>UH5kQ8;aLy„U"wmpIjy3Z]1rR[h]].lj#3)M\gwevZ/WOh;L^O6HO&/)23a3A.A9/dRR.1*BDXs:„U"GP-,b2,wG4KRh\\:1V'<32%wR(34kkLLU,KJl^:L2#F6U,hm/.K=Y<=D:nRFj2d„U"-+7rh^4\\3hfdwFGvXrFraZ6+gVIWOS+g=2whF\mgJk+8rhh8i%=kBby?HmTyRe„U"4zrm4C%$s?.]TG1;?-*ENpxDCIoON:DyYrT4G?LQmg/CTjq-Sp:#?<\fUY8l11A„U"jZK>^0\F:ag[y&?NGRBhWksd^aK=#8y]1*$vL/Z*3Gd5.\$rHu>c8J)iIrBVi[7„U"1YXCITe07w#=DhYMQ/TbBxohQ?uXK?/ib1/9d/-s/tf%8c*F+[xcY(yI=:Mtjy7„U"lGBPM)$&jDK3ySj+0XK:*bpOwHwZO9Y6/f;.StKEQ1nuX$E:6xZ?:D<A9P>6,No„U"3B]QBm^(Kvm0_*::,qAzBwQ0Z2>;6=?Oe<'T&+KD>7VEKRTfu9=Jben]mIw-U:<„U"cuq4-S5?7]Ku'lXknXtS\e#kpsvhK5%D>8?ca)%Z4(3nVWL-g*6rbNVe?72:>dV„U"G6(RcPJtrg%a>_Ko_5tGE&ogkd8-1xit=WY[t0(ieYA3$gszUZ=bK[]r?*U'^US„U":wVGcl9n:bo>la4*vXh,X/Q:#DK_]:HX&FySX*ItYd1=A_K.Hv#)Q;]o<dJ=zsB„U"Z5brK>SnoQ5%3fvg.uMQl:ZS;8gK<]qjzor9CBPdn9V>dd6$^5'REOgH&3i*\d#„U"WH8V6S3E*dNSgS='TKIt5]%,3cIS2G]',Q-?6L=Fp3=;+2j=80uW:dXs<ca88<(„U"*Ij+)Qv+8j'HeA*Th'>-FO0-24m-T\c0R(AWDuQ_TeHSaJjb3k6uYqs+-Ox_;Ll„U"52[tRLIa#SzmzZj%lq1dVO/#mOjvp&c0&<N8ttj*3,U#7GU)qvtRmA;K_h]W5^R„U"m8j:[,mi1eU'8,B;B':tYv-tf-:^.O=MXRQb^vnt-4*#5io'Vke#$;RF0x(r=QQ„U"UR+=DG(7fX(m*Il$[CVc?OXRWCg=Q/iixLWdhtTXb'qqpTI(0yt6Zp0Jqb<12/%„U"W18mj6KB=eAM5zl,kPSX:1#SGWT%c_zoupc).8/bfj<wSk'lNL2-K.glR7a>[vC„U"/#LqeKBFUE1MPqj].wNuR$iJ<NN8TF3*z7&;nEPP2XzH?sHiHJG?*:C[VmENb;=„U"XD*:qWp^Ks3W9ElU.e^GW_]B)&e=3,a.noH;8)BC[g)mXusbqv-P,[vxCadMebg„U"D>EpX9d'CuF4T7Q#^D9.Plc#jLNNj?6xvElJ0.ou=-7=1n*K/]oCwWua\<B=ig6„U"rdkSx8QrfBV8B/1oW;ufqnt1-NslzglnuI>r+Yift^0rtt]hB7u<p>aQq]>44dQ„U"6P>rLuMHZAh0sSat;M'TnNt8MKnq?[NY$H.\D+hXhp(=KM.PqZLzKHEp0Qhnh3U„U")J(No5DurSV50FS;>BVah[5Zup&;k5#88c%3Bec]33e?fZ(_J&L%WC%^%>b%,uT„U"l%3EDlm(W78lH7ZgbpArSQ]^$3\Z6IxIubjBc<d0;4(o_X^5\:%YP6m'Ws[sULZ„U"^S-N(S=_N)A44/I&2Tq++5-IW\Df+ho*hZ;H;dCT,y_TkO]/t'A2rLpBm_c3ctu„U"jF,zDWD/>G1gyMHA_c(_R_^Nlb>T.TsGA1bP&wVKEwv)ZM(hFhIe^SEW^n^Z;fv„U"$<]$<TRF7u=CXlfTL+OlQo&Td7m]JzvHTr?I&5KqucnZ?PIIwaR+$[Xu7ayUiSH„U"G$(3VJNJ]1,ogz#'QwV.r)5*r89&Z8;lkQ-lv^qbp8HESA2dxNuroQ[3[?SDJpb„U"diD3,6Ia(^=k?Rpui)#4RD<FC=#QH(\PfY8v-j1&fcUSE?k80[)emo4w_S0qfl#„U"wL]?ZeX&mLDc79<D[1s0eI8q8vrD[%cNoV[^-6j*O[53X_):i.W1Ki??K]]s\H]„U";mYddk>\J%e:6e\A2'=_Fmm(pdq%CiMUHeT&:[]HXAS4WIGUvHdL=D(+ivIL$(E„U"EB[nLZ4T0$iFR\Z7FQb2^mQhLBUkmXr$10i)GN;<u;Bg/J_Rq?l&B+P0GY?15*)„U"jqXqMKgdeVp#o;KE<vk0&KiFi\q27G;&$+KEa#%ezhhlZL<dY=qS1'tQpMkqv0%„U"XCM5+H,D+][L-L?-=BBQO+_Ew#UJu$%A*w>[dfL#G8$9AI^pP,((9H;\q+OUhsl„U"'FxHc9*oELQ:/6(e]#[hw'??=,F5sW'8V9JsT]oV?w>ZQC$,cbL<i02TLWU&nps„U"0H*f4EhbIIkMOP$j:KQHONiEMO>+%pin&ci0,3cWAzrw+^1N9;t.RQ9fSP<A7Oj„U"OROLm&+epvIW<SsNN).?$a4sUl=&^e1If2Ji4G)>Q%F\%o\Ih<+aRDjBY,o(O^0„U"Qzr=k%Zn-f<DQiVK+Rg3H0_7/>ICB;XZ/]n>I=n3G%Mh3W-m5I;m>7u+[X;0iG9„U"8pIqU:(]uX=Ol;7[qTSJqRcPXNWa1x<kZ\NWY_9fgd8GzGP?LM>540+0+S7aK:.„U"Xw4%up&'%90/%%'%%%3=jhL<Q/q0%:%%%%:%%%%/%%%%%%%%%&%E%%%%%%%%%hi„U"%nskt%Shiu%up&'%909%%'%-%4t8-L0wf$v&,f%%+4/%%%1%%%%%%%%%%%E%%%%„U"b%%%%hiIuq(.%XWSg%fxup%*+%%%%%'%.'%A%7%%=f%%%%%„END SUB„V2„CLOSE:IF S=159AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„James A. Davis                 SMALL CD PLAYER                jad@iswt.com                   01-22-00 (16:43)       QB, PDS                610  21429    JCD.BAS        '** not responsible **„   '** use at your own risk ***„   '** I am James Davis : email   jad@iswt„   '** DOSEN'T LOOK LIKE MUCH,BUT IT WORKS FOR ME„   '** USE QB45 ***„   '** USE  MOUSE„   '** MUST BE LOADED WITH QB /L QB ON THE DOS PROMPT COMMAND LINE„   '** WORKS IN DOS OR WIN 31, I DON'T KNOW ABOUT WIN 95 OR 98„„„    '********************   declare       **************************************„TYPE REGTYPE„     ax    AS INTEGER„     bx    AS INTEGER„     cX    AS INTEGER„     dx    AS INTEGER„     es    AS INTEGER„     bp    AS INTEGER„     si    AS INTEGER„     di    AS INTEGER„     FLAGS AS INTEGER„END TYPE„„   DIM inreg AS REGTYPE, outreg AS REGTYPE„   DECLARE SUB interrupt (intnum AS INTEGER, inreg AS REGTYPE, outreg AS REGTYPE)„   SCREEN 9„   DIM song(200)„   DIM a$(550)„   DIM b$(200)„   DIM al$(200)„   DIM sg(200)„   DIM secc$(500)„   DIM secc(500)„   DIM ccc(500)„   DIM oldsong(200)„   tt = TIMER„„„„  ddd = 255          '*** for volume„„   md$ = SPACE$(75)„ CLS„   '**********************   screen  ***************************„   COLOR 11„   LOCATE 1, 1           '          Top, Left„   PRINT CHR$(201); STRING$(37, 205); CHR$(203); STRING$(40, 205); CHR$(187)„ FOR row = 2 TO 24„   LOCATE row, 1„   PRINT CHR$(186); SPC(78); CHR$(186);„ NEXT row„   LOCATE 24, 1       'Bottom, Left„   PRINT CHR$(200); STRING$(37, 205); CHR$(202); STRING$(40, 205); CHR$(188);„   ee = 100„ FOR row = 2 TO 23              'MIDDLE VERTICAL LINE„   LOCATE row, 39„   PRINT CHR$(186): NEXT„„ COLOR 11„   LOCATE 6, 52: PRINT CHR$(24); : COLOR 3: PRINT " PREVIOUS SONG": COLOR 11„   LOCATE 7, 52: PRINT CHR$(25); : COLOR 3: PRINT " NEXT SONG": COLOR 11„   LOCATE 8, 52: PRINT "P"; : COLOR 3: PRINT " = PLAY": COLOR 11„   LOCATE 9, 52: PRINT "S"; : COLOR 3: PRINT " = STOP": COLOR 11„   LOCATE 10, 52: PRINT "E"; : COLOR 3: PRINT " = EJECT": COLOR 11„   LOCATE 11, 52: PRINT "C"; : COLOR 3: PRINT " = CLOSE": COLOR 11„   LOCATE 12, 52: PRINT "Q"; : COLOR 3: PRINT " = QUIT": COLOR 11„   LOCATE 18, 55: PRINT "Stopped"„   'LOCATE 23, 2: PRINT "TOTAL TIME"  MUST PUT IN LATER AT      ' AT 600„   LOCATE 22, 43: COLOR 3: PRINT "LEFT MOUSE SELECTS - RIGHT PLAYS IT"„„„„                         COLOR 7, 0„   '****************** see if there's a drive **********************„main:„         '****** see if mscdex is installed ****„   inreg.ax = &H150C„   inreg.bx = 0„ CALL interrupt(&H2F, inreg, outreg)„   IF outreg.bx = 0 THEN CLS : LOCATE 12, 27: PRINT "MUST HAVE MSCDEX INSTALLED": SLEEP: END„„„„         '******** Does it have a drive if so what number******„         '******** bx = how many cx=drive number, 8 on mine„   inreg.ax = &H1500„   inreg.bx = 0„   inreg.cX = 0„   inreg.dx = &H0„ CALL interrupt(&H2F, inreg, outreg)„„„   IF outreg.bx = 0 THEN LOCATE 10, 10: PRINT "NO CD-ROM DRIVE FOUND SORRY.": SLEEP 3: END„   '******************     300   setting up headers ********************„„„   dr = outreg.cX                 '***** got a drive so I go on *********„„   ADD& = 256 * PEEK(VARPTR(md$) + 3) + PEEK(VARPTR(md$) + 2)„„   ds = VARSEG(md$) '„„   'PRINT "this is where its stored  "; HEX$(DS); " : "; HEX$(ADD&); ":"; HEX$(SADD(md$))  '******print„   DEF SEG = ds:„„ FOR x = 0 TO 35: POKE ADD& + x, 0:„ NEXT  'put 0 in md$ space„   ER = ADD& MOD 256 + 26   '2 right numbers of ofset„   rr = (ADD& + 26) \ 256   'left numbers of ofset„   fd = ds \ 256      'left 2 numbers of 4  seg„   DDS = ds MOD 256„           „'**************    how long is the disk    ****************************„ DEF SEG = ds:„   POKE ADD& + 0, &H1A          'how long header is„   POKE ADD& + 2, 3              '   command„   POKE ADD& + 3, 0„   POKE ADD& + 4, 0           '****** must clear this„   POKE ADD& + 5, 0           '****** must clear this„   POKE ADD& + 14, ER   ' right 2 of ofset  +26 = where the command is„   POKE ADD& + 15, rr   'left 2 of offset„   POKE ADD& + 16, DDS   'right 2 of seg„   POKE ADD& + 17, fd   'left 2 of seg„   POKE ADD& + 18, 1„   POKE ADD& + 26, &HB  'a=disk b=song how long is first song if not music it returns a 65 else 01„   POKE ADD& + 27, 1       'which song„ DEF SEG„   inreg.ax = &H1510„   inreg.bx = ADD&„   inreg.cX = dr      'drive #„   inreg.dx = &H0„   inreg.es = ds„ CALL interrupt(&H2F, inreg, outreg)„   inreg.ax = &H1510                     ' some times it won't work on 1 call„ CALL interrupt(&H2F, inreg, outreg)„ DEF SEG = ds„   fg = PEEK(ADD& + 26)„   pg = PEEK(ADD& + 29)„  ppg = PEEK(ADD& + 32)„ DEF SEG„   COLOR 3„   IF pg = 0 AND ppg = 0 THEN GOSUB stp:  GOSUB opn: LOCATE 10, 5: PRINT "NO DISK": LOCATE 12, 5: PRINT "PRESS C TO CLOSE": GOSUB erlines: GOSUB 800: pp = 0: GOTO clock„   IF pg = 2 AND ppg = 64 THEN GOSUB stp:  GOSUB opn: LOCATE 10, 5: PRINT "NOT A MUSIC DISK": LOCATE 12, 5: PRINT "PRESS C TO CLOSE": GOSUB erlines: GOSUB 800: pp = 0: GOTO clock„   IF pg = 2 AND ppg = 65 THEN GOSUB stp:   GOSUB opn: LOCATE 10, 5: PRINT "NOT A MUSIC DISK": LOCATE 12, 5: PRINT "PRESS C TO CLOSE": GOSUB erlines: GOSUB 800: pp = 0: GOTO clock„„ DEF SEG = ds„   POKE ADD& + 2, 3„   POKE ADD& + 3, 0„   POKE ADD& + 4, 0           '****** must clear this„   POKE ADD& + 5, 0           '****** must clear this„   POKE ADD& + 26, &HA              ' A how long the disk„   POKE ADD& + 27, 0„„ DEF SEG = ds„„   inreg.ax = &H1510„   inreg.bx = ADD&„   inreg.cX = dr      'drive #„   inreg.dx = &H0„ CALL interrupt(&H2F, inreg, outreg)„   pa = PEEK(ADD& + 26)         'this is command„   pb = PEEK(ADD& + 27)„„   pc = PEEK(ADD& + 28)„   pd = PEEK(ADD& + 29)         '   lo„   pe = PEEK(ADD& + 30)         '   mid„   pf = PEEK(ADD& + 31)         '   hi„   pg = PEEK(ADD& + 32)„   ph = PEEK(ADD& + 33)„ DEF SEG„   hlong = (pf * 60 * 75) + (pe * 75) + pd - 150„„    '150 the start of song(1)in seconds.will use any extra frames later„    'if the start is above 150. hlong   is lenght of disk -150 .„    'I can't find all of song(1)start address till songs are read„    wc = hlong MOD 4500„    frame = wc MOD 75„    MIN = (hlong - wc) / 4500„    sec = (wc - frame) / 75              '***    how long„    LOCATE 16, 48: COLOR 3: PRINT "Total Time "; : COLOR 11: PRINT MIN; : COLOR 3: PRINT "Min"; : COLOR 11: PRINT sec; : COLOR 3: PRINT "Sec": COLOR 7'on screen„    '*************       above how long is the disk      ***************„    '*************   below how long is each sector and how many„             'sector„ DEF SEG = ds„   POKE ADD& + 2, &H3„   POKE ADD& + 3, 0„   POKE ADD& + 4, 0           '****** must clear this„   POKE ADD& + 5, 0           '****** must clear this„   '**** this arrary song(n) is the starting sector for each song  **********„„   oldsong = 1„ FOR N = 1 TO 100     '**** 99 songs i think„   POKE ADD& + 26, &HB   'b start of  one song„   POKE ADD& + 27, N     ' which song„ DEF SEG = ds          'take start from the next one to see how long„                      'the start one is,  start from next start = lenght„   inreg.ax = &H1510„   inreg.bx = ADD&         'add&„   inreg.cX = dr            'drive #„   inreg.dx = &H0„ CALL interrupt(&H2F, inreg, outreg)„   pa = PEEK(ADD& + 26)         'this is command„   pb = PEEK(ADD& + 27)„   pc = PEEK(ADD& + 28)    'frames„   pd = PEEK(ADD& + 29)    'sec take the first one from total to get how long„   pe = PEEK(ADD& + 30)    'min„   pf = PEEK(ADD& + 31)„   pg = PEEK(ADD& + 32)„   ph = PEEK(ADD& + 33)„   song(N) = (pe * 4500) + (pd * 75) + pc - 150„  'had to take off the 150 here  to where song(1) starts to get right count ' makes a number for each song„   IF oldsong = song(N) THEN ee = N - 1: N = 100: GOTO 10„   oldsong = song(N)  'if last song get out„ NEXT„ DEF SEG„              '*******    length disk  total time  ********„10           '*******     start of each song     *******„              '*******    length of each song    *******„„„   t = 1„ FOR N = 1 TO ee          'got ee above it is how many songs, also must„  IF N = ee THEN wa = hlong - song(N): : GOTO 20  'step backward to get right„    wa = song(N + 1) - song(N)                     'size„20    wc = wa MOD 4500„    frame = wc MOD 75„    MIN = (wa - wc) / 4500„    sec = (wc - frame) / 75„   „   sg(N) = wa              '***** sg(n)  this arrary is length of each sector„   MIN$ = STR$(MIN)„   sec$ = STR$(sec)„   ee$ = STR$(N)„   b$ = CHR$(35)„   secc = sec + (MIN * 60)„   ccc(N) = sec + (MIN * 60)„   secc$(N) = STR$(secc)„   MN$ = "  "„   MIN$ = MN$ + MIN$„   a$(N) = " MIN" + MIN$ + "  SEC " + sec$„„ NEXT„                  '********    MOUSE   SETUP     **********„„„   inreg.ax = &H0„   inreg.bx = &H0„   inreg.cX = &H0„   inreg.dx = &H0„  GOSUB mice„            „   IF outreg.ax <> -1 THEN CLS : LOCATE 15, 30: COLOR 11: PRINT "Where is the mouse ?": SLEEP 9: END„  GOSUB show             'turns on cursor„   inreg.ax = 4         'set cursor position„   inreg.bx = &H0„   inreg.cX = 280„   inreg.dx = 30„ GOSUB mice„„ GOSUB where       'shows  mouse„„   inreg.ax = &HA„   inreg.bx = &H0„   inreg.cX = &H0„   inreg.dx = &H1D11   'shape of cursor„ GOSUB mice„„    '    ***************    MENU    ******************************„ COLOR 7„   GOSUB volume„   a = 1„   ZW = 1„   COLOR 2: LOCATE 2, 70: PRINT "jad"„   COLOR 3, 0:„   LOCATE 15, 50: PRINT "Quiet "; CHR$(45)„   LOCATE 14, 56: PRINT "VOLUME"„   LOCATE 15, 61: PRINT CHR$(43); " Loud"; ': CHR$(43): COLOR 7, 0„   LOCATE 15, 57: COLOR 11: PRINT ddd \ 17  'color 11„   c = 0„   a = 1„120                 '*** display different song times *********„   COLOR 3„  „   IF ee < 21 THEN xX = ee ELSE xX = 20„ FOR x = 1 TO xX„   LOCATE x + 2, 7: PRINT b$; x + c;„   LOCATE x + 2, 15: PRINT a$(x + c);„   IF x + c = ee THEN x = 20„ NEXT„    V = 1„    '***********   lighted line of songs selection ***********„    tt = TIMER„130„    COLOR 11: LOCATE a + 2, 3: PRINT "--> "; b$; a + c  '** print the arrow„    LOCATE a + 2, 12: PRINT "   "; a$(a + c);„  GOSUB show     '**** turning on mouse arrow„   '*************  end lighten line *********„clock:„„  GOSUB show      '  calls mouse to start and show mouse„    COLOR 3, 0:„    ff = ff + 1„    IF ff < 40 THEN jad = 1„    IF ff > 40 AND ff < 80 THEN jad = 11„    IF ff >= 80 THEN ff = 0„    LOCATE 21, 59: COLOR jad: PRINT " :": COLOR 3„    hr$ = LEFT$(TIME$, 2)„    am$ = " AM"„    nh = VAL(hr$)„    IF nh > 12 THEN nh = nh - 12: am$ = " PM"„    nh$ = STR$(nh)„    nh$ = RIGHT$(nh$, 2)„   LOCATE 21, 53: COLOR 3: PRINT "TIME "; : COLOR 11: PRINT nh$; : LOCATE 21, 61: PRINT MID$(TIME$, 4, 2) + am$: COLOR 3„    ti = TIMER„    IF ccc(a + c) + tt >= ti AND pp = 1 THEN 141 ELSE GOTO 142„141                                                       „    ti = TIMER„    sec = (ccc(a + c) + tt - ti) MOD 60„    MIN = (ccc(a + c) + tt - ti) \ 60„    sec$ = STR$(sec)„    MIN$ = STR$(MIN)„    sec$ = RIGHT$(sec$, 2)„    MIN$ = RIGHT$(MIN$, 2)„   LOCATE 18, 47: PRINT "Song Elasped "; MIN$; " min "; sec$; " sec"„    smin = hlong - song(a + c)„    wl = tt + (smin / 75) - ti„    sec = wl MOD 60„    MIN = wl \ 60'(wc - frame) / 75             '***    how long„    MIN$ = STR$(MIN)„    sec$ = STR$(sec)„    MIN$ = RIGHT$(MIN$, 2)„    sec$ = RIGHT$(sec$, 2)„   LOCATE 19, 47: PRINT "Time Left    "; MIN$; " min "; sec$; " sec";„    MIN$ = STR$(MIN)„    sec$ = STR$(sec)„  GOTO 143„142„  IF pp = 1 THEN a = a + 1: GOTO 503„143„   nn$ = INKEY$: IF nn$ = "" THEN 144 ELSE 190„144„„   GOSUB where:„„   aa = a„   dd = (ee * 14 + 24)'12„        '********************      SELECTION OF SONGS    *************„   IF outreg.bx = 1 AND outreg.cX >= 6 AND outreg.cX < 244 AND outreg.dx <= dd AND outreg.dx > 14 THEN 150  '25„„      '*********************         MENU          ********************„„   IF outreg.bx = 1 AND outreg.cX >= 404 AND outreg.cX < 516 AND outreg.dx >= 68 AND outreg.dx < 166 THEN 180„„   '*********************         PLAY        ***************************„   IF outreg.bx = 1 AND outreg.cX < 303 THEN an$ = "p": GOTO 191: GOSUB stp: GOSUB pla: GOTO clock'play when enter is pressed„   IF outreg.bx = 2 THEN an$ = "p": GOTO 191„   '********************    VOLUME             *********************„   IF outreg.bx = 1 AND outreg.cX >= 472 AND outreg.cX < 528 AND outreg.dx <= 208 AND outreg.dx > 193 THEN nn$ = CHR$(43): FOR x = 0 TO 9000: NEXT: GOTO 192 '42„   IF outreg.bx = 1 AND outreg.cX >= 390 AND outreg.cX < 456 AND outreg.dx <= 208 AND outreg.dx > 193 THEN nn$ = CHR$(45): FOR x = 0 TO 9000: NEXT: GOTO 192 '42„  GOTO clock„   '********** go up or down   mouse   *********„150„   a = outreg.dx \ 14:„   a = a - 1„   IF a <= aa THEN GOSUB stp: GOSUB erlines: pp = 0: GOTO 160„   IF a > aa THEN GOSUB stp: GOSUB erlines: pp = 0: GOTO 170„   GOTO clock     '**************   up    ***** „160   GOSUB hide    ' hid arrow„   GOSUB stp: GOSUB erlines„   LOCATE 18, 55: COLOR 11: PRINT "Stopped": COLOR 7„   FOR x = 0 TO 50000: NEXT          '***************** speed control„   LOCATE 2 + aa, 2: COLOR 3: PRINT "     "; b$; aa + c; :  '*****  up  ******„   LOCATE 2 + aa, 15: PRINT a$(aa + c);„   dd = (ee \ 20)„   IF a = 0 AND c >= 20 THEN c = c - 20: a = 20:  GOSUB clr: GOTO 120„   IF a = 0 AND ee <= 20 THEN a = ee: GOSUB clr:  GOTO 120„   IF a = 0 THEN c = dd * 20: a = ee - c: GOSUB clr: GOTO 120„   GOTO 130   '**************   down ***********„170 GOSUB hide     '*** hid arrow„   LOCATE 18, 55: COLOR 11: PRINT "Stopped": COLOR 7„   GOSUB stp: GOSUB erlines„   FOR x = 0 TO 50000: NEXT                  '****** speed control„  LOCATE 2 + aa, 2: COLOR 3: PRINT "     "; b$; aa; :  '*******  down  *****„   LOCATE 2 + aa, 15: PRINT a$(aa):„   LOCATE a + 1, 3: COLOR 3: PRINT "    "; b$; a + c - 1; :„   LOCATE a + 1, 15: PRINT a$(a + c - 1);„   IF c + a > ee THEN c = 0: a = 1: GOSUB clr: GOTO 120„   IF c + a > 100 THEN c = 0: a = 1: GOSUB clr: GOTO 120„   IF a >= 21 THEN c = c + 20: a = 1: GOSUB clr: GOTO 120„   IF a >= ee + 1 THEN a = 1: GOSUB clr: GOTO 120„   GOTO 130„   ' *********** end of up and down   mouse ***********„   '************ where mouse picks off of menu **************„180„   b = (outreg.dx \ 14 - 4)„   IF b = 2 THEN :   mm$ = "P": GOTO 197„   IF b = 1 THEN mm$ = "H": GOTO 210„   IF b = 3 THEN an$ = "p": GOTO 191: 'play           „   IF b = 4 THEN an$ = "s": GOTO 191' 'stop„   IF b = 5 THEN an$ = "e": GOTO 191: 'open„   IF b = 6 THEN an$ = "c": GOTO 191: 'close„   IF b = 7 THEN CLS : END„ GOTO clock„     '************ end of mouse ****************„190„   IF LEN(nn$) = 2 THEN GOTO updown '196„   an$ = RIGHT$(nn$, 1)„191„   IF an$ = "s" OR an$ = "S" THEN GOSUB erlines: GOSUB 800: GOSUB stp: pp = 0: GOTO clock„   IF an$ = "p" OR an$ = "P" THEN GOSUB stp: GOSUB erlines: tt = TIMER: GOSUB pla: pp = 1: GOTO clock„   IF an$ = "e" OR an$ = "E" THEN GOSUB stp:  GOSUB opn: LOCATE 12, 5: PRINT "PRESS C TO CLOSE": GOSUB erlines: GOSUB 800: pp = 0: GOTO clock„   IF an$ = "q" OR an$ = "Q" THEN CLS : END„   IF an$ = "c" OR an$ = "C" THEN GOSUB clo: : LOCATE 12, 5: PRINT "READING DISK, PLEASE WAIT": SLEEP 9: LOCATE 12, 5: PRINT SPACE$(32): a = 0: ee = 100: pp = 0: GOTO main„   IF an$ = CHR$(13) AND pg <> 0 THEN GOSUB stp: GOSUB erlines: tt = TIMER: GOSUB pla: pp = 1: GOTO clock„           '****  volume *******   below ****„192„   mm$ = RIGHT$(nn$, 1)„„   IF ASC(mm$) = 45 THEN GOTO 194„   IF ASC(mm$) = 43 THEN GOTO 193„„      GOTO clock„„193„  GOSUB hide„   LOCATE 15, 57: COLOR 11: PRINT (ddd \ 17);„   IF ddd >= 255 THEN ddd = 255 ELSE ddd = ddd + 17  '** ddd is how much louder„   COLOR 3„  GOSUB volume„  GOSUB show     'mouse„  GOTO clock„194„  GOSUB hide„   LOCATE 15, 57: COLOR 11: PRINT (ddd \ 17):„   IF ddd <= 17 THEN ddd = 17 ELSE ddd = ddd - 17    '**  ddd is how much quieter„   COLOR 3„  GOSUB volume„  GOSUB show 'mouse„  GOTO clock„  '****************  down  and up      KEYS     *******************„updown:„196  mm$ = RIGHT$(nn$, 1)„197„    IF mm$ = "P" THEN a = a + 1: GOSUB stp: GOSUB erlines: pp = 0:  ELSE 210   '***********DOWN„200„    LOCATE 18, 55: COLOR 11: PRINT "Stopped": COLOR 7„    FOR x = 0 TO 50000: NEXT                        '*** speed control„    LOCATE a + 1, 3: COLOR 3: PRINT "    "; b$; a + c - 1; :„    LOCATE a + 1, 15: PRINT a$(a + c - 1);„    IF c + a > ee THEN c = 0: a = 1: GOSUB clr: GOTO 120„    IF c + a > 100 THEN c = 0: a = 1: GOSUB clr: GOTO 120„    IF a >= 21 THEN c = c + 20: a = 1: GOSUB clr: GOTO 120„    IF a >= ee + 1 THEN a = 1: GOSUB clr: GOTO 120„  GOTO 130„210 IF mm$ = "H" THEN a = a - 1: GOSUB stp: GOSUB erlines: pp = 0:    ELSE GOTO clock'*****************UP„    LOCATE 18, 55: COLOR 11: PRINT "Stopped": COLOR 7„    FOR x = 0 TO 50000: NEXT                     '**  ******* speed control„220 LOCATE a + 3, 2: COLOR 3: PRINT "     "; b$; a + c + 1; :„    LOCATE a + 3, 15: PRINT a$(a + c + 1);„    dd = (ee \ 20)„    IF a = 0 AND c >= 20 THEN c = c - 20: a = 20: GOSUB clr: GOTO 120„    IF a = 0 AND ee <= 20 THEN a = ee: GOSUB clr: GOTO 120„    IF a = 0 THEN c = dd * 20: a = ee - c:  GOSUB clr: GOTO 120„  GOTO 130„      ' *******     end down and up  *************„      '************** down  open *****************„opn:„  GOSUB clr    'erase„    POKE ADD& + 2, &HC„    POKE ADD& + 26, 0   '0 = open„    POKE ADD& + 14, ER   ' right 2 of ofset  +26 = where the command is„    POKE ADD& + 15, rr   'left 2 of offset„    POKE ADD& + 16, DDS   'right 2 of seg„    POKE ADD& + 17, fd   'left 2 of seg„  GOSUB 350„ RETURN„       '*************** down  close ******************„clo:„  GOSUB clr      '**erase„    POKE ADD& + 2, &HC„    POKE ADD& + 14, ER   ' right 2 of ofset  +26 = where the command is„    POKE ADD& + 15, rr   'left 2 of offset„    POKE ADD& + 16, DDS   'right 2 of seg„    POKE ADD& + 17, fd   'left 2 of seg„    POKE ADD& + 26, 5   '5=close„  GOSUB 350„  RETURN„         '*********** down is stop **********************„stp:„   POKE ADD& + 2, &H85„  GOSUB 350„  RETURN„        '*************  down is play  ********************„pla:„    w = a + c„    ws = song(w)„    ww = ws \ 256„    ls = ww \ 256„    cs = ww MOD 256„    rs = ws MOD 256            'right 2 numbers„    bws = hlong - song(w) ' this is used for all the rest of the songs„    bww = bws \ 256„    bls = bww \ 256„    bcs = bww MOD 256„    brs = bws MOD 256„    POKE ADD& + 2, &H84        '&h84 = play  &h85 = stop„  FOR x = 3 TO 14: POKE ADD& + x, 0:„  NEXT„   POKE ADD& + 14, rs       'start„   POKE ADD& + 15, cs        'start„   POKE ADD& + 16, ls       'start„   POKE ADD& + 17, 0„   POKE ADD& + 18, brs„   POKE ADD& + 19, bcs„   POKE ADD& + 20, bls„   POKE ADD& + 21, 0„   POKE ADD& + 22, 0„   POKE ADD& + 26, 5              '5=close„  FOR x = 22 TO 32: POKE ADD& + x, 0:„  NEXT„   GOSUB 350„   RETURN„END„350„   DEF SEG = ds„   POKE ADD& + 27, 0„   inreg.ax = &H1510„   inreg.bx = ADD&„   inreg.cX = dr„   inreg.dx = &H0„   CALL interrupt(&H2F, inreg, outreg)„   inputreg.ax = 3„  RETURN„       END„where:„   inreg.ax = 3„   inreg.bx = 0„   inreg.cX = 0„   inreg.dx = 0„   CALL interrupt(&H33, inreg, outreg)„   RETURN„500„   IF an$ = "P" OR an$ = "p" THEN 501 ELSE 130„501„   RETURN„503„   LOCATE a + 1, 2: COLOR 3: PRINT "     "; b$; a + c - 1; :„   LOCATE a + 1, 15: PRINT a$(a + c - 1):„   IF a + c >= ee + 1 THEN a = 1: c = 0: GOSUB 515„   IF a = 21 THEN c = c + 20: a = 1: GOSUB clr: GOSUB 515„   IF a = 41 THEN c = c + 20: a = 1: GOSUB clr: GOSUB 515„   IF a = 61 THEN c = c + 20: a = 1: GOSUB clr: GOSUB 515„   IF a = 81 THEN c = c + 20: a = 1: GOSUB clr: GOSUB 515„   COLOR 11: LOCATE a + 2, 3: PRINT "--> "; b$; a + c;„   LOCATE a + 2, 12: PRINT "   "; a$(a + c):  COLOR 3:„   tt = TIMER„  GOSUB stp:„  GOSUB pla„  GOTO clock„510„   GOTO 130„515  COLOR 3, 0„    IF ee < 21 THEN xX = ee ELSE xX = 21„  FOR x = 2 TO xX:„    LOCATE x + 1, 7: PRINT b$; x - 1 + c„    LOCATE x + 1, 15: PRINT a$(x - 1 + c)„  NEXT„  RETURN„clr:„  FOR x = 2 TO 23: LOCATE 0 + x, 2: PRINT SPACE$(34):„  NEXT:          'this erases the song list„  RETURN„erlines:„   LOCATE 18, 45: PRINT SPACE$(34)„   LOCATE 19, 45: PRINT SPACE$(34)„    'this erase the times of disk and song„   RETURN„800„   LOCATE 18, 55: COLOR 11: PRINT "Stopped": COLOR 7„   RETURN„„hide:     '********** hides the cursor ************„    inreg.ax = 2„   CALL interrupt(&H33, inreg, outreg)„   RETURN„show:     '***** show mouse **********„   inreg.ax = 1„ CALL interrupt(&H33, inreg, outreg)„  RETURN„mice:„  CALL interrupt(&H33, inreg, outreg)„  RETURN„volume:„    POKE ADD& + 2, &HC„    POKE ADD& + 14, ER   ' right 2 of ofset  +26 = where the command is„    POKE ADD& + 15, rr   'left 2 of offset„    POKE ADD& + 16, DDS   'right 2 of seg„    POKE ADD& + 17, fd   'left 2 of seg„    POKE ADD& + 26, 3    '3  audio control„    POKE ADD& + 27, 0    'channel 0„    POKE ADD& + 28, ddd  '    how loud„    POKE ADD& + 29, 1    'channel 1„    POKE ADD& + 30, ddd  '    how loud„    POKE ADD& + 31, 2    'channel 2„    POKE ADD& + 32, ddd  '    how loud„    POKE ADD& + 33, 3    'channel 3„   POKE ADD& + 34, ddd  '  how loud„   GOSUB 350„    ss = ss - 50„RETURN„Randall L. Glass               GET DIRECTORY DISKSPACE        rlglass@yahoo.com              08-16-00 (12:25)       PB                     375  12405    DIRSIZE.BAS '----------------------------------------------------------------------------„'                                  DirSize„'                             By Randall L Glass„'                               CopyRight 2000„'„'----------------------------------------------------------------------------„'„' This program is freeware. You may use it anyway you want as long as you„' give me credit in your program or documentation.„'„' This Program looks a directory and subdirectories and adds up the file„' sizes to give you the total amount of space that the directories in that„' directory that up.„'„' This is useful for finding junkfiles and wasted space on your hard drive.„' So you can delete the junk files and compress the files that waste a lot„' of disk space.„'„'--------------------------------------------------------------------------„„$CPU 8086                 ' program works on any CPU„$COMPILE EXE              ' compile to an EXE„„$ERROR ALL OFF            ' turn off error handling„„$STACK  16384             ' use a 16k stack„„$OPTION CNTLBREAK OFF     ' don't allow Ctrl-Break to exit program„„DEFINT A-Z                ' default all variables to integers for maximum„                          ' speed and minimum size„DECLARE FUNCTION GetStrLoc(BYVAL AllocHandle%) AS LONG„„SHARED TotalTreeSize&&, TotalFiles%, TotalDirectories%,Directories%,FileNumber%„SHARED SubDirTreeSize&&, SubFileNumber%, DirFileNumber%, SubDirectories%„SHARED AllocSubDirTreeSize&&,ClusterSize&&,Numberlines%„„Drive$ = LEFT$(CURDIR$, 1)                       'get the default drive„Cmd$ = COMMAND$„Directory$ = TRIM$(UCASE$(Cmd$))„„FileSpec$  = "*.*"„„IF LEN(FileSpec$) = 0 THEN„  PRINT„  PRINT "Usage:  DirSize Directory"„  PRINT "Finds total size of directories"„  PRINT„  END 1„END IF„„TempDir$ = ENVIRON$("TEMP")+"\"„REPLACE "\\" WITH "\" IN TempDir$„„DiskInfo Drive$,DiskSize&&,Diskfree&&,ClusterSize&&„PRINT„PRINT "Disk Waste Finder"„PRINT "By Randall Glass"„PRINT "Getting Total Size of Directories"„PRINT "Checking Directories for files \";„„OPEN TempDir$ +"Dskspace.use" FOR OUTPUT AS #1„DirectorySize&& = DirSize&&(Directory$, FileSpec$)„Numberlines% = 22 - (Numberlilnes% MOD 22)„PRINT #1, STRING$(78,"-")„PRINT #1, LTRIM$(STR$(Directories%)); " Directories";„PRINT #1, ": "  FormatSize$(DirectorySize&&); " in "; STR$(FileNumber%); " Files"„PRINT #1, STRING$(78,"-")„PRINT #1, "Total Directories% = "; STR$(TotalDirectories%); ": ";„PRINT #1, "Total Files ="; STR$(TotalFiles%)„PRINT #1, "Total Size of Directory And SubDirectories = "; FormatSize$(TotalTreeSize&&)„PRINT #1, "Total Allocated Size of Directory And SubDirectories = "; FormatSize$(DiskSize&& -Diskfree&&)„PRINT #1,„PRINT #1, "Disk Size = "; FormatSize$(DiskSize&&)„PRINT #1, "Free Disk Space = "; FormatSize$(Diskfree&&)„PRINT #1, "Disk Cluster Size = "; LTRIM$(USING$("###,###,###",ClusterSize&&)); " Bytes"„„FOR I% = 1 TO NumberLines% -10„	PRINT #1,„NEXT I%„CLOSE„PRINT„SHELL "EDIT.COM " + TempDir$ + "Dskspace.use"„END„„FUNCTION DirSize&&(StartPath$, FileSpec$) PUBLIC„  DIM SPIN$(3)„  SPIN$(0) = "-"„  SPIN$(1) = "\"„  SPIN$(2) = "|"„  SPIN$(3) = "/"„„  DriveNo% = ASCII(UCASE$(StartPath$))„  IF DriveNo% > 63 AND DriveNo% < 91 AND RIGHT$(StartPath$,1) = ":" THEN StartPath$ = StartPath$ + "."„„  StartPath$ = TrueName$(StartPath$)„„  StartPath$ = StartPath$ + "\"„„  REPLACE "\\" WITH "\" IN StartPath$„  REPLACE "//" WITH "/" IN StartPath$„„  FileName$ = DIR$(StartPath$ + FileSpec$, 55)„„  WHILE LEN(FileName$) > 0„      AllocatedFileSize??? = 0„      DirInfo DirAttrib?,FileSize???„      IF Bit(DirAttrib?,4) AND FileName$ <> "." AND FileName$ <> ".." THEN„		SubFileNumber% = 0„		SubDirectories% = 0„		SubDirTreeSize&& = 0„		AllocatedSubDirSize&& = 0„		AllocSubDirTreeSize&& = 0„		SubDirectorySize&& = SubDirSize&&(StartPath$ + FileName$ + "\", FileSpec$)„		TotalTreeSize&& = TotalTreeSize&& + SubDirectorySize&&„		AllocatedTreeSize&& = AllocatedTreeSize&& + AllocSubDirTreeSize&&„		TotalFiles% = TotalFiles% + SubFileNumber%„                TotalDirectories% = TotalDirectories% + SubDirectories% + 1„                INCR Directories%„                IF (Directories% -1) MOD 19 = 0 THEN„                        PRINT #1, STRING$(78,"-")„			PRINT #1, "Directory  Number Files    AveragSize       Bytes     Allocated Bytes"„                        PRINT #1, STRING$(78,"-")„                END IF„                INCR Numberlines%„                INCR Spin%„                QPRINT SPIN$(Spin% MOD 4)„		PRINT #1, USING$("\        \",FileName$);„                PRINT #1, "  "+USING$("###,###",SubFileNumber%)+"  ";„                IF SubFileNumber% > 0 THEN„                	AverageFileSize&& = SubDirectorySize&&\SubFileNumber%„                	PRINT #1, USING$("###,###,###,###",AverageFileSize&&);„                ELSE„                	PRINT #1, " Not Applicable";„                END IF„                PRINT #1, USING$("###,###,###,###",SubDirectorySize&&);„                PRINT #1, USING$("###,###,###,###",AllocSubDirTreeSize&&)„„      ELSEIF ISFALSE Bit(DirAttrib?,3) THEN„                ClusterNumber??? = FileSize???\ClusterSize&&„      		ModSize??? = FileSize??? MOD ClusterSize&&„		IF ModSize??? <> 0 THEN„      			AllocatedFileSize??? = (ClusterNumber??? + 1) * ClusterSize&&„                ELSE„			AllocatedFileSize??? = FileSize???„      		END IF„                'IF FileSize??? = 0 THEN AllocatedFileSize??? = ClusterNumber???„		INCR FileNumber%„		DirectorySize&& = DirectorySize&& + FileSize???„		AllocatedDirSize&& = AllocatedDirSize&& + AllocatedFileSize???„      END IF„„      IF INKEY$ = CHR$(27) THEN END  'is escape is pressed„      FileName$ = DIR$„  WEND„  DirSize&& = DirectorySize&&„  TotalTreeSize&& = TotalTreeSize&& + DirectorySize&&„  AllocatedTreeSize&& = AllocatedTreeSize&& + AllocatedDirSize&&„  TotalFiles% = TotalFiles% + FileNumber%„„„END FUNCTION„„FUNCTION SubDirSize&&(Path$, FileSpec$) PUBLIC„„  GetDta DtaSeg??,DtaOfs??„  DEF SEG = DtaSeg??„    SubOldDtaBuffer$ = PEEK$(DtaOfs??, 44)    'save current DTA information„  DEF SEG„„  FileName$ = DIR$(Path$ + FileSpec$, 55)„„  WHILE LEN(FileName$) > 0„      DirInfo DirAttrib?,FileSize???„      IF Bit(DirAttrib?,4) AND FileName$ <> "." AND FileName$ <> ".." THEN„		AllocDirSize&& = 0„		SubDirSize&& Path$ + FileName$ + "\", FileSpec$„		INCR SubDirectories%„      ELSEIF ISFALSE Bit(DirAttrib?,3) THEN„                ClusterNumber??? = FileSize???\ClusterSize&&„      		ModSize??? = FileSize??? MOD ClusterSize&&„		IF ModSize??? <> 0 THEN„      			AllocatedFileSize??? = (ClusterNumber??? + 1) * ClusterSize&&„                ELSE„			AllocatedFileSize??? = FileSize???„      		END IF„„                'IF FileSize??? = 0 THEN AllocatedFileSize??? = ClusterNumber???„		INCR SubFileNumber%„		DirectorySize&& = DirectorySize&& + FileSize???„		AllocatedDirSize&& = AllocatedDirSize&& + AllocatedFileSize???„      END IF„„      IF INKEY$ = CHR$(27) THEN END  'escape is pressed„      FileName$ = DIR$„  WEND„„  DEF SEG = DtaSeg??„    POKE$ DtaOfs??, SubOldDtaBuffer$   'restore saved DTA information„  DEF SEG„„  SubDirTreeSize&& =  SubDirTreeSize&& + DirectorySize&&„  AllocSubDirTreeSize&& = AllocSubDirTreeSize&& + AllocatedDirSize&&„  SubDirSize&& = SubDirTreeSize&&„„END FUNCTION„„'===========================================================================„' Subject: PB DISKINFO V2.5                  Date: 06-21-98 (05:12)„'  Author: Marc van den Dikkenberg           Code: PB„'  Origin: excel@xs4all.nl                 Packet: DISK.ABC„'===========================================================================„DEFINT A-Z„„SUB DiskInfo(drive$,DiskSize&&,Diskfree&&,ClusterSize&&) PUBLIC„   Dim Drivename AS String * 4„   Dim Filesysname AS String * 8„„   LOCAL Rax??, Rbx??, Rcx??, Rdx??„„   Drive$ = ucase$(left$(drive$,1))„   Drivename$ = left$(drive$,1) +":\"+CHR$(0)„   DiskSize&& = 0„   Diskfree&& = 0„„   Seg1?? = varseg(drivename)„   Off1?? = varptr(drivename)„   Seg2?? = varseg(filesysname)„   Off2?? = varptr(filesysname)„„	! MOV AX,&H71A0„        ! MOV DS,Seg1??„        ! MOV DX,Off1??„        ! MOV ES,Seg2??„        ! MOV DI,Off2??„	! MOV CX,&HFF„	! INT &H21„        ! MOV Rax??,AX„        ! MOV Rbx??,BX„„        if Rax?? = &H7100 then„	   ' FAT32 not supported -- Using FAT16 Method instead.„           Driv% = asc(left$(drive$,1))-64„	   ! PUSH DS„	   ! MOV AX,&H3600„	   ! MOV DX,driv%    ; Disk-#  01=A:, 02=B:, etc.„	   ! XOR CX,CX„	   ! XOR BX,DX„	   ! INT &H21„           ! MOV Rax??,ax„           ! MOV Rbx??,bx„           ! MOV Rcx??,cx„           ! MOV Rdx??,dx„	   ! POP DS„           IF Rax?? <> &H0FFFF THEN„              DiskSize&& = Rax?? * Rcx?? * Rdx??„              Diskfree&& = Rax?? * Rbx?? * Rcx??„              ClusterSize&& = Rax?? * Rcx??„           ELSE„               'Disk not found„               Diskfree&& = -1„               Drive$ = chr$(255)„               END IF„        ELSE„	   Dim buffer as String*44„                Seg1?? = varseg(buffer)„                Off1?? = varptr(buffer)„                Seg2?? = varseg(drivename)„                Off2?? = varptr(drivename)„„		! PUSH DS„		! MOV AX,&H7303„                ! MOV ds,Seg2??„                ! MOV dx,Off2??„                ! MOV es,Seg1??„                ! MOV di,Off1??„		! MOV CX,128„		! INT &H21„		! POP DS„„		if cvwrd(left$(buffer,2))<>0 then„                        ' FAT32„			DiskSize&& = CVDWD(mid$(buffer,9,4)) * CVDWD(mid$(buffer,5,4)) * CVDWD(mid$(buffer,17,4))„                        Diskfree&& = CVDWD(mid$(buffer,9,4)) * CVDWD(mid$(buffer,5,4)) * CVDWD(mid$(buffer,13,4))„                        ClusterSize&& = CVDWD(mid$(buffer,9,4)) * CVDWD(mid$(buffer,5,4))„                else„                        ' Disk not found„                        drive$ = chr$(255)„                        Diskfree&& = -1„		end if„	end if„END SUB„„SUB DirInfo(DirAttrib?,DirectorySize???) PUBLIC„  LOCAL DirDate??,DirTime??,DirAttr?,Dsize???„  ! mov  AX, &H2F00              ; function 2Fh, get DTA location„  ! int  &H21                    ; call DOS„  ! MOV  AX,ES:[BX +26]„  ! MOV  DSize???[0],AX„  ! MOV  AX,ES:[BX +28]„  ! MOV  DSize???[2],AX„  ! MOV  AL,ES:[BX +21]„  ! MOV  DirAttr?,AL„  DirectorySize??? = DSize???„  DirAttrib? = DirAttr?„END SUB„„SUB GetDTA(DtaSeg??, DtaOfs??) PUBLIC„  ! push DS „  ! mov  AX, &H2F00              ; function 2Fh, get DTA location„  ! int  &H21                    ; call DOS„  ! lds  SI, DtaSeg??            ; point DS:SI at DtaSeg„  ! mov  DS:[SI], ES             ; put segment of DTA in variable„  ! lds  SI, DtaOfs??            ; point DS:SI at DtaOfs„  ! mov  DS:[SI], BX             ; put offset of DTA in variable„  ! pop  DS„END SUB„„FUNCTION FormatSize$(Bytes&&)„IF Bytes&& > 3999999 THEN„        FormatSize$ = LTRIM$(USING$("###,###,###.##",Bytes&&/1000000))+" Megabytes"„ELSEIF Bytes&& > 999999 THEN„        FormatSize$ = LTRIM$(USING$("###,###,###,###,###.##",Bytes&&/1000))+" Kilobytes"„ELSE„        FormatSize$ = LTRIM$(USING$("###,###,###,###,###",Bytes&&))+" Bytes"„END IF„END FUNCTION„„FUNCTION TrueName$(Directory$)„REPLACE "\\" WITH "\" IN Directory$„REPLACE "//" WITH "/" IN Directory$„DIM Canonicalized AS STRING * 128„DirName$ = Directory$ +CHR$(0)„DirNamePtr??? = STRPTR32(DirName$)„CanonicalizedPtr??? = VARPTR32(Canonicalized$)„DosError?? = 0„„!PUSH DS„!LDS SI,DirNamePtr???„!LES DI,CanonicalizedPtr???„!MOV AH,&H60„!INT &H21„!POP DS„„!JNC NoError„!MOV DosError??,AX„NoError:„IF LEFT$(Canonicalized$,2) = "\\" THEN„        Drive$ = MID$(Canonicalized$,3,1)+":"„        Path$ = EXTRACT$(MID$(Canonicalized$,8),CHR$(0))„        IF Path$ = "" THEN Path$ = "\"„	FUNCTION = EXTRACT$(Drive$ +Path$,CHR$(0))„ELSE„FUNCTION = EXTRACT$(Canonicalized$,CHR$(0))„END IF„END FUNCTION„„SUB QPRINT(Txt$) PUBLIC„ ! LES     BX,Txt$„ ! MOV     AX,ES:[BX]„ ! PUSH    AX„ ! CALL    GetStrLoc„ ! JCXZ    Quit„ ! MOV     ES, DX„ ! MOV     SI, AX„ ! MOV     AH,&H0E„ ! MOV     BH,PbvScrnVpage„ ! MOV     BL,7„ Printit:„ ! MOV     AL,ES:[SI]„ ! INT     &H10„ ! INC     SI„ ! LOOP    Printit„Quit:„END SUB„