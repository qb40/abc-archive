Sylvain Bizorre                FRENCH MORPION (TICTACTOE LIKE)sbfg@wanadoo.fr                01-01-00 (14:41)       RAPIDQ                 458  19284    QMORP.BAS   $TYPECHECK ONããdeclare sub AfficheCoup                 ' Affiche le coup de l'ordi ou du joueurãdeclare sub CalculScores                ' Met à jour la grille après un coup jouéãdeclare sub CommencerPartie             ' Détermine les couleurs de chaque joueur        ãdeclare sub InitTableau                 ' Initialisation du tableau de grilleãdeclare sub JeuJoueur                   ' Coup du joueur ãdeclare sub JeuOrdi                     ' Coup de l'ordinateurãdeclare sub JoueurCommence              ' Le joueur choisit de commencerãdeclare sub OrdiCommence                ' C'est l'ordi qui commenceãdeclare sub AfficheGrille               ' Affiche la grilleãdeclare sub Quitterãdeclare sub Grille10                    ' Sélection des 3 dimensions de grilleãdeclare sub Grille15ãdeclare sub Grille20ãdeclare sub PrefereRouge                ' Le joueur préfère les rougesãdeclare sub PrefereBleu                 ' ... ou les bleusãdeclare sub JaiGagneãdeclare sub TextesOrigine               ' Textes de base de la fenêtre d'infos ããCONST ORDI   = 0ãCONST JOUEUR = 1ãconst VRAI   = 1ãconst FAUX   = 0ãconst ROUGE  = &HFFãconst BLEU   = &HFFOOOOããdim AfficheCoupX as word            ' Coordonnées X, Y du coup à afficherãdim AfficheCoupY as wordãdim Numalign as integerãNumAlign = 2 * (21 - 4) * ((2 * 21) - 4)ãDIM CoupJoueurOrdi(21, 21) as integer 'Tableau des cases jouées par le joueur (-1), l'ordi (1) ou no jouées (0)ãdim al(21, 21, 0 to 20) as integerãdim NbrPionsAlign(Numalign) as integerãdim OrdiJoue as Integerãdim Ponderation(5)  as wordããdim Gauche as Integer                  ' Position gauche de la grilleãdim Haut   as Integer                  '          Hauteãdim Largeur as Integer                 ' Largeur de la grilleãdim Hauteur as Integer                 ' Hauteur  ãdim NumeroRangee as integer            ' Pour numéroter les rangées de la grilleãdim CouleurJoueur as integer           ' Couleur choisie par le joueur (ROUGE ou BLEU)ãdim CouleurEnCours as integer          ' Couleur du coup en coursãdim CouleurOrdi    as integerãdim QuiCommence   as Integer           ' ORDI ou JOUEUR  ãdim Gagne as byte                      ' Quelqu'un a gagné ããdim CaseH as Integerãdim CaseV as Integerãdim Alignement as integerãdim Coup_Joueur_Ordi as Integer        ' coup du joueur = -1 , coup de l'ordi = 1ãdim DimGrille as Integerãdim Nalign as Integer                  ' Nombre d'alignements d'une caseãdim ponderRef as integer               ' Pondération de référence minimum pour calcul coup ordiãdim PonderCase as integer              ' Pondération de la case en cours d'évaluation (calcul coup ordi)ãdim CaseHCoupJoue as Integer           ' Case X du dernier coup jouéãdim CaseVCoupJoue as Integer           ' Case Y     ããdim DernierCoupOrdi$ as string         ' Texte du dernier coup joué par l'ordi ãdim DernierCoupJoueur$ as string       ' Texte du dernier coup joué par le joueur ãdim CoupsJoues as word                 ' Nombre de coups jouésããdim a$ as string                       ' Chaîne générale  ããPonderation(1) = 1                     ' en modifiant ce tableau de pondération, vous pouvezãPonderation(2) = 3                     ' modifier la tactique de jeu de l'ordinateurãPonderation(3) = 9ãPonderation(4) = 30ãPonderation(5) = 10000ããDimGrille = 10 ãOrdiJoue= 1                            ' Interdit un clic sur la grilleãQuiCommence = JOUEURãCouleurJoueur = ROUGEãCouleurOrdi = BLEUãããCREATE Fenetre_Principale as Qform     ' on crée la fenêtre principaleã  width = 640ã  height = 475ã  BorderStyle = 4ã  create FenetreJeu as Qcanvas         ' On crée un grille de 10 x 10 par défautã    Top = 70ã    Left = 200ã    Width = 202ã    Height = 202ã    onpaint = AfficheGrilleã    OnClick = JeuJoueurã  end createã  create menu as qmainmenu             ' On fabrique le menu Fichierã    create menu1 as qmenuitemã      caption = "&Fichier"ã      create menu_CommencePartie as qmenuitemã        caption = "&Commencer une partie"ã        Onclick = CommencerPartieã      end create      ã      create menu_Inter as qmenuitemã        caption = "-"ã      end createã      create menu_Quitter as qmenuitemã        caption = "&Quitter"ã        onclick = quitterã      end createã    end createã    create menu2 as qmenuitem          ' puis le menu des grillesã      caption = "&Grille"ã      create menu_grille10 as qmenuitemã        caption = "&10 x 10"ã        onclick = Grille10ã        checked = VRAIã      end createã      create menu_grille15 as qmenuitemã        caption = "1&5 x 15"ã        onclick = Grille15ã      end createã      create menu_grille20 as qmenuitemã        caption = "&21 x 21"ã        onclick = Grille20ã      end createã    end createã    create menu3 as qmenuitem          ' puis le menu des options  ã      caption = "&options"                 ã      create MenuRouge as QmenuItemã        caption = "Vous jouez avec les &Rouges"ã        Checked = VRAI ã        onclick = PrefereRougeã      end createã      create MenuBleu as QmenuItemã        caption = "Vous jouez avec les &Bleus"ã        onclick = PrefereBleu ã      end create  ã      create OptionsInter1 as QmenuItemã        caption = "-"ã      end createã      create MenuStartHomme as QmenuItemã        caption = "Vous commencez"ã        checked = 1ã        onclick = JoueurCommenceã      end createã      create MenuStartOrdi as QmenuItemã        caption = "Je commence"ã        onclick = OrdiCommence ã      end create  ã    end create       ã  end create       ã  create BarreInfos as QstatusBar      ' et enfin la barre d'informations  ã    SizeGrip = FAUXã    AddPanels "", "", "",""ã    Panel(0).Width = 260ã    Panel(1).Width = 110ã    Panel(2).Width = 135ã    Panel(0).Alignment = 2             ' Centréã  end create   ã  centerã  showmodalãend createã'------------------------------------------------------------------------------------------------ãsub Grille10                           ' grille 10 x 10ã  Menu_grille10.checked = 1ã  Menu_grille15.checked = 0ã  Menu_grille20.checked = 0ã  FenetreJeu.Top = 70ã  FenetreJeu.Left = 200ã  FenetreJeu.Width = 202ã  FenetreJeu.Height = 202ã  DimGrille = 10ã  AfficheGrilleãend subã'------------------------------------------------------------------------------------------------ãsub Grille15                           ' grille 15 x 15ã  Menu_grille10.checked = 0 ã  Menu_grille15.checked = 1ã  Menu_grille20.checked = 0ã  FenetreJeu.Top = 25ã  FenetreJeu.Left = 150ã  FenetreJeu.Width = 292ã  FenetreJeu.Height = 292ã  DimGrille = 15ã  AfficheGrilleãend subã'------------------------------------------------------------------------------------------------ãsub Grille20                           ' grille 21 x 21ã  Menu_grille10.checked = 0ã  Menu_grille15.checked = 0ã  Menu_grille20.checked = 1ã  FenetreJeu.Top = 0ã  FenetreJeu.Left = 100ã  FenetreJeu.Width = 400ã  FenetreJeu.Height = 400ã  DimGrille = 21ã  AfficheGrilleãend subã'------------------------------------------------------------------------------------------------ãsub AfficheGrille                      ' Affichage de la grilleã  dim i as wordã  Gauche = FenetreJeu.Leftã  Haut = FenetreJeu.Topã  Largeur = FenetreJeu.Widthã  Hauteur = FenetreJeu.Height ã  fenetrejeu.fillrect = 20,20,Largeur, hauteur, &HC2FEFBã  NumeroRangee = 0 ã  for i=20 to Largeur step 18               ã    numeroRangee= numeroRangee + 1                   ' Pour numéroter les rangéesã    a$=str$(NumeroRangee)                            ' Numéros verticauxã    FenetreJeu.TextOut(0, i+5, a$, 0, &HC0C0C0)ã    fenetrejeu.line(20,i,Largeur,i, &H808080)        ' Trait horizontal ã    fenetrejeu.line(20,i+1,Largeur,i+1, &H808080)    ' ... doublé ã    fenetrejeu.line(i,20,i,hauteur,&H808080)         ' Trait verticalã    fenetrejeu.line(i+1,20,i+1,hauteur,&H808080)     ' ... doubléã    FenetreJeu.Textout(i+5, 5, chr$(NumeroRangee+64), 0, &HC0C0C0) ' Numéros Horizontauxã  next iã  FenetreJeu.FillRect(20,19,Largeur,22, &HFFFFFF)    ' Bords blancs Haut et gaucheã  FenetreJeu.FillRect(19,20,22,hauteur, &HFFFFFF)ã  FenetreJeu.FillRect(23, hauteur - 2, Largeur,hauteur, 0)ã  FenetreJeu.FillRect(Largeur-2,Hauteur,Largeur, 23, 0)ã  call TextesOrigineãend sub  ã'------------------------------------------------------------------------------------------------ãsub TextesOrigineã  BarreInfos.Panel(0).Caption = " French Morpion (version provisoire)"ã  BarreInfos.Panel(1).Caption = " Coups joués : 0 "ã  BarreInfos.Panel(2).Caption = " Votre dernier coup : "ã  BarreInfos.Panel(3).Caption = " Mon dernier coup : "ãend sub  ã'------------------------------------------------------------------------------------------------ãsub PrefereRouge                                 ' Le joueur préfère les rougesã  MenuRouge.Checked = VRAIã  MenuBleu.Checked  = FAUXã  CouleurJoueur = ROUGEã  CouleurOrdi   = BLEUãend subã'------------------------------------------------------------------------------------------------ãsub PrefereBleu                                  ' Le joueur préfère les bleus ã  MenuRouge.Checked = FAUXã  MenuBleu.Checked  = VRAIã  CouleurJoueur = BLEUã  CouleurOrdi   = ROUGEãend subã'------------------------------------------------------------------------------------------------ãsub JoueurCommence                               ' Le joueur choisit de commencerã  MenuStartHomme.Checked = VRAIã  MenuStartOrdi.Checked  = FAUXã  QuiCommence = JOUEUR                     ' 1 : Le joueur commence, 0 : L'ordi commenceãend subã'------------------------------------------------------------------------------------------------ãsub OrdiCommence                                 ' C'est l'ordinateur qui commenceã  MenuStartHomme.Checked = 0ã  MenuStartOrdi.Checked  = 1ã  QuiCommence = ORDI                       ãend subã'------------------------------------------------------------------------------------------------ãsub CommencerPartieã  OrdiJoue = 1                         ' cette variable interdit un clic de souris ã  call AfficheGrille                   ' pendant le jeu de l'ordinateurã  call InitTableau                     ' Initialisation du tableau de la grille      ã  if QuiCommence = ORDI then           ' c'est l'ordi qui commenceã    if CouleurJoueur = ROUGE thenã      CouleurEnCours = BLEUã    elseã      CouleurEnCours = ROUGEã    end if    ã    JeuOrdi                            ' c'est l'ordi qui commenceã  elseã    OrdiJoue = 0ã    CouleurEnCours = CouleurJoueur     ' C'est le joueur qui commenceã  end if  ãend subã'------------------------------------------------------------------------------------------------ã' Initialisation des tableaux d'alignementsãsub InitTableau                        ' Alignements par caseã  dim nt as integer   'Variable temporaire de NumAlign, puis variable de boucle NumAlignã  BarreInfos.panel(0).Caption = "Patience... Je me concentre..." ã  for CaseH = 1 to 21ã    for CaseV = 1 to 21ã        al(caseV, CaseH, 0) = 0ã    next CaseVã  next CaseH     ã ã  FOR CaseH = 1 TO DimGrille           ' Alignements horizontaux  ã    FOR CaseV = 1 TO DimGrille - 4ã    NumAlign = (CaseH - 1) * (DimGrille - 4) + CaseVã      FOR Alignement = 0 TO 4ã        ' Incrémente le nombre d'alignements de la caseã        al(CaseH, CaseV + Alignement, 0) = al(CaseH, CaseV + Alignement, 0) + 1ã        al(CaseH, CaseV + Alignement, al(CaseH, CaseV + Alignement, 0)) = NumAlignã      NEXT Alignementã    NEXT CaseVã  NEXT CaseHã  nt = NumAlignãã  FOR CaseV = 1 TO DimGrille           ' alignements verticaux ã    FOR CaseH = 1 TO DimGrille - 4ã      NumAlign = nt + ((CaseV - 1) * (DimGrille - 4) + CaseH)ã      FOR Alignement = 0 TO 4ã        al(CaseH + Alignement, CaseV, 0) = al(CaseH + Alignement, CaseV, 0) + 1ã        al(CaseH + Alignement, CaseV, al(CaseH + Alignement, CaseV, 0)) = NumAlignã      NEXT Alignementã    NEXT CaseHã  NEXT CaseVã  nt = NumAlignãã  FOR CaseH = 1 TO DimGrille - 4       ' alignements diagonaux 1ã    FOR CaseV = 1 TO DimGrille - 4ã      NumAlign = nt + ((CaseH - 1) * (DimGrille - 4) + CaseV)ã      FOR Alignement = 0 TO 4ã        al(CaseH + Alignement, CaseV + Alignement, 0) = al(CaseH + Alignement, CaseV + Alignement, 0) + 1ã        al(CaseH + Alignement, CaseV + Alignement, al(CaseH + Alignement, CaseV + Alignement, 0)) = NumAlignã      NEXT Alignementã    NEXT CaseVã  NEXT CaseHã  nt = NumAlignãã  FOR CaseH = 1 TO DimGrille - 4       ' alignements diagonaux 2ã    FOR CaseV = 5 TO DimGrilleã      NumAlign = nt + (CaseH - 1) * (DimGrille - 4) + (CaseV - 4)ã      FOR Alignement = 0 TO 4ã        al(CaseH + Alignement, CaseV - Alignement, 0) = al(CaseH + Alignement, CaseV - Alignement, 0) + 1ã        al(CaseH + Alignement, CaseV - Alignement, al(CaseH + Alignement, CaseV - Alignement, 0)) = NumAlignã      NEXT Alignementã    NEXT CaseVã  NEXT CaseHãã  for CaseH = 1 to DimGrille           ' tableau des coups de l'ordi et du joueurã    for CaseV = 1 to DimGrilleã      CoupJoueurOrdi(CaseH, CaseV) = 0ã    next CaseVã  next CaseH    ãã  NumAlign = 2 * (21 - 4) * ((2 * 21) - 4)ã  for nt = 1 to Numalign               ' note de pondération de chaque alignement à 0 ã    NbrPionsAlign(nt) = 0ã  next ntãã  CoupsJoues = 0                       ' Nombre de coups joués ã  if QuiCommence = JOUEUR thenã    BarreInfos.panel(0).Caption = "A vous..." ã  end ifãend subã'------------------------------------------------------------------------------------------------ãsub JeuOrdi                            ' Jeu de l'ordinateurã  BarreInfos.Panel(3).Caption = " Mon dernier coup : " + DernierCoupOrdi$ã  BarreInfos.Panel(0).Caption = "Je réfléchis ..."ã  OrdiJoue = 1                         ' Pour interdire un clic de sourisã  PonderRef = -10000ã  FOR CaseH = 1 TO DimGrilleã    FOR CaseV = 1 TO DimGrilleã      PonderCase = 0ã      IF CoupJoueurOrdi(CaseH, CaseV) = 0 THEN         ' Si cette case n'a jamais été jouéeã        Nalign = al(CaseH, CaseV, 0)ã        FOR Alignement = 1 TO Nalignã          NumAlign = al(CaseH, CaseV, Alignement)ã                                                                                                                                                                                                                                                                                                      IF NbrPionsAlign(NumAlign) <> 9999 THEN      ' Si pas de pions des 2 joueurs dans l'alignement ã            IF NbrPionsAlign(NumAlign) >= 0 THEN       ' S'il y a des pions de l'ordiã              PonderCase = PonderCase + Ponderation(NbrPionsAlign(NumAlign) + 1) ' Met à jour la pondération de cette case pour chaque alignementã            ELSE                                       ' Sinon, ce sont des pions du joueur ã              PonderCase = PonderCase + Ponderation(1 - NbrPionsAlign(NumAlign)) ' Met à jour la pondérationã            END IF ã          END IF   ã        NEXT Alignementã        IF PonderCase > PonderRef THENã          CaseHCoupJoue = CaseHã          CaseVCoupJoue = CaseVã          PonderRef = PonderCaseã        END IF  ã      END IF    ã    NEXT CaseVã  NEXT CaseHã  Coup_Joueur_Ordi = 1ã  CalculScoresã  CouleurEnCours = CouleurOrdiã  AfficheCoupã  if gagne then                      ' Si l'ordinateur a gagné ã    OrdiJoue = 2                        ã    call JaiGagneã  elseã    OrdiJoue = 0                         ' Autorise le clic sur la grilleã    DernierCoupOrdi$ = chr$(CaseHCoupJoue + 64) + " - " + str$(CaseVCoupJoue)ã    BarreInfos.Panel(0).Caption = "  Je joue en  " + DernierCoupOrdi$ + "   A vous..."ã  end if     ãend subã'------------------------------------------------------------------------------------------------ãsub JeuJoueurã  if OrdiJoue > 0 then                 ' Ne pas tenir compte de ce clic non autoriséã    exit sub                            ã  end if  ã  CaseHCoupJoue = (MouseX - 12) / 18ã  CaseVCoupJoue = (MouseY - 12) / 18ã  if CaseHCoupJoue = 0 or CaseVCoupJoue = 0 then   ' Clic en dehors de la grilleã    exit subã  end if  ã  DernierCoupJoueur$ = chr$(CaseHCoupJoue + 64) + " - " + str$(CaseVCoupJoue)ã  BarreInfos.Panel(2).Caption = " Votre dernier coup : " + DernierCoupJoueur$ã  CouleurEnCours = CouleurJoueurã  Coup_Joueur_Ordi = -1ã  call CalculScoresã  call AfficheCoupã  if gagne then                        'le joueur a gagnéã    call JaiGagne  ã  elseã    call JeuOrdiã  end if  ãend sub  ã'------------------------------------------------------------------------------------------------ãsub CalculScores                       ' Calcul et mise à jour des scoresã  Nalign = al(CaseHCoupJoue, CaseVCoupJoue, 0)ã  FOR Alignement = 1 TO Nalignã    NumAlign = al(CaseHCoupJoue, CaseVCoupJoue, Alignement)ã    IF NbrPionsAlign(NumAlign) <> 9999 THEN    ã      IF NbrPionsAlign(NumAlign) * Coup_Joueur_Ordi < 0 THEN ã        NbrPionsAlign(NumAlign) = 9999ã      else ã        NbrPionsAlign(NumAlign) = NbrPionsAlign(NumAlign) + Coup_Joueur_Ordiã        Gagne = (abs(NbrPionsAlign(NumAlign)) = 5)ã      end ifã    end if      ã    if gagne thenã      exit forã    end if  ã  NEXT Alignementã  CoupJoueurOrdi(CaseHCoupJoue, CaseVCoupJoue) = Coup_Joueur_Ordiã  inc CoupsJoues ã  BarreInfos.Panel(1).Caption = " Coups joués : " + str$(CoupsJoues)ãend subã'------------------------------------------------------------------------------------------------ãsub AfficheCoup                        ' Affiche le coup jouéã  AfficheCoupX = 5+(18*CaseHCoupJoue)ã  AfficheCoupY = 6+(18*CaseVCoupJoue)ã  fenetrejeu.line(AfficheCoupX, AfficheCoupY,AfficheCoupX + 13, AfficheCoupY + 13, CouleurEnCours)  ã  fenetrejeu.line(AfficheCoupX, AfficheCoupY + 1,AfficheCoupX + 12, AfficheCoupY + 13, CouleurEnCours)  ã  fenetrejeu.line(AfficheCoupX + 1, AfficheCoupY,AfficheCoupX + 13, AfficheCoupY + 12, CouleurEnCours)  ã  fenetrejeu.line(AfficheCoupX + 13, AfficheCoupY,AfficheCoupX, AfficheCoupY + 13, CouleurEnCours)  ã  fenetrejeu.line(AfficheCoupX + 12, AfficheCoupY,AfficheCoupX, AfficheCoupY + 12, CouleurEnCours)  ã  fenetrejeu.line(AfficheCoupX + 13, AfficheCoupY + 1,AfficheCoupX + 1, AfficheCoupY + 13, CouleurEnCours)  ãend subã'------------------------------------------------------------------------------------------------ãsub JaiGagne                           ' L'un des 2 joueurs a gagnéã  dim Couleur as integerã  OrdiJoue = 1                         ' Plus de clic autorisé dans la grilleã  if Coup_Joueur_Ordi = -1 thenã    BarreInfos.Panel(0).Caption = "Vous avez gagné en " + str$(CoupsJoues) + "  coups."ã  elseã    BarreInfos.Panel(0).Caption = "J'ai gagné en " + str$(CoupsJoues) + "  coups."ã  end ifã  couleur = CouleurEnCours   ã  for gagne = 1 to 10ã    CouleurEnCours = Couleurã    call AfficheCoupã    sleep 0.5ã    CouleurEnCours = &HC2FEFBã    call AfficheCoupã    sleep 0.5ã  next gagne ãend subã  ãsub Quitter                            ' Option Quitter du menuã  Fenetre_Principale.Closeãend subãErlend Rovik                   3D ROTATING CUBE               e-rovik@online.no              02-12-00 (18:30)       RAPIDQ                 111  4448     3DCUBE.BAS  'ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä-Äúú úã'³ *** Filled vector ***ã'³ã'³ (Hidden-line triangle based filled vector source)ã'³ã'³ Programmed by SkurK/b. (skurk@multinet.no)ã'ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä-Äúú úã'-----------------------------------------------------------------ã'Translated to RapidQ by Preacher / Bizarre Designz (Erlend Rovik)ã'-----------------------------------------------------------------ãDECLARE SUB Vectorã    ãDim NumPoints as integer, ConPts as integer, AngleX as integer, AngleY as integer, AngleZ as integerããNumPoints = 8            ' Number of points in objectãConPts = 12              ' How many connect-linesããDIM Points(NumPoints, 3) as integerãDIM Connects(ConPts, 3) as integerãDIM Rotated(NumPoints, 3) as integerãDIM Sinus(1 TO 720) as integer, CoSin(1 TO 720) as integerãã PI = 3.141592ã' Precalc Sine and CoSinus table, so we don't have toã' deal with realtime floating-pointsã FOR X = 1 TO 720ã  Sinus(X) = INT(SIN(PI * 2 / 512 * X) * 256)ã  CoSin(X) = INT(COS(PI * 2 / 512 * X) * 256)ã NEXT Xã' Copy DATA lines to our tables..ã' Points of objectãPoints(1, 1)=-50:Points(1, 2)=-50:Points(1, 3)=-50ãPoints(2, 1)=50:Points(2, 2)=-50:Points(2, 3)=-50ãPoints(3, 1)=50:Points(3, 2)=50:Points(3, 3)=-50ãPoints(4, 1)=-50:Points(4, 2)=50:Points(4, 3)=-50ãPoints(5, 1)=-50:Points(5, 2)=-50:Points(5, 3)=50ãPoints(6, 1)=50:Points(6, 2)=-50:Points(6, 3)=50ãPoints(7, 1)=50:Points(7, 2)=50:Points(7, 3)=50ãPoints(8, 1)=-50:Points(8, 2)=50:Points(8, 3)=50ãPoints(9, 1)=-50:Points(9, 2)=-50:Points(9, 3)=-50ã   ã' Connect-Lines dataãConnects(1, 1)=5:Connects(1, 2)=1:Connects(1, 3)=8ãConnects(2, 1)=1:Connects(2, 2)=4:Connects(2, 3)=8ãConnects(3, 1)=6:Connects(3, 2)=5:Connects(3, 3)=7ãConnects(4, 1)=5:Connects(4, 2)=8:Connects(4, 3)=7ãConnects(5, 1)=2:Connects(5, 2)=6:Connects(5, 3)=3ãConnects(6, 1)=6:Connects(6, 2)=7:Connects(6, 3)=3ãConnects(7, 1)=1:Connects(7, 2)=2:Connects(7, 3)=4ãConnects(8, 1)=2:Connects(8, 2)=3:Connects(8, 3)=4ãConnects(9, 1)=4:Connects(9, 2)=3:Connects(9, 3)=8ãConnects(10, 1)=3:Connects(10, 2)=7:Connects(10, 3)=8ãConnects(11, 1)=5:Connects(11, 2)=6:Connects(11, 3)=1ãConnects(12, 1)=6:Connects(12, 2)=2:Connects(12, 3)=1ããcreate sr as qrect:top=0:left=0:right=300:bottom=200:end createãcreate dr as qrect:top=0:left=0:right=300:bottom=200:end createãcreate bm as qbitmap:width=500:height=500:end createãcreate tim as qtimer:enabled=1:interval=5:ontimer=vector:end createãcreate Form AS QFormãcreate can as qcanvas:width=form.clientwidth:height=form.clientheight:end createãshowmodalãend create ããSUB Vectorã' Rotate anglesã IF AngleX < 512 THEN:AngleX = AngleX + 3:ELSE:AngleX = 1:end ifã IF AngleY < 512 THEN:AngleY = AngleY + 5:ELSE:AngleY = 1:end ifã IF AngleZ < 512 THEN:AngleZ = AngleZ + 4:ELSE:AngleZ = 1:end ifã' Now let's rotate the points according to anglesã FOR N = 1 TO NumPointsã  X = Points(N, 1)ã  Y = Points(N, 2)ã  Z = Points(N, 3)ã  Ty = ((Y * CoSin(AngleX)) - (Z * Sinus(AngleX))) \ 256ã  Tz = ((Y * Sinus(AngleX)) + (Z * CoSin(AngleX))) \ 256ã  Tx = ((X * CoSin(AngleY)) - (Tz * Sinus(AngleY))) \ 256ã  Tz = ((X * Sinus(AngleY)) + (Tz * CoSin(AngleY))) \ 256ã  Ox = Txã  Tx = ((Tx * CoSin(AngleZ)) - (Ty * Sinus(AngleZ))) \ 256ã  Ty = ((Ox * Sinus(AngleZ)) + (Ty * CoSin(AngleZ))) \ 256ã  Nx = ((128 * Tx) / (200 - Tz)) + 160ã  Ny = (100 - (128 * Ty) / (200 - Tz))ã  Rotated(N, 1) = Nxã  Rotated(N, 2) = Nyã  Rotated(N, 3) = Tzã NEXT Nã' And now, let's check if face N is visible, and if we should draw it.ã bm.fillrect 0,0,can.width,can.height,&h000000ã FOR N = 1 TO ConPtsã  X1 = Rotated(Connects(N, 1), 1)ã  X2 = Rotated(Connects(N, 2), 1)ã  X3 = Rotated(Connects(N, 3), 1)ã  Y1 = Rotated(Connects(N, 1), 2)ã  Y2 = Rotated(Connects(N, 2), 2)ã  Y3 = Rotated(Connects(N, 3), 2)ã  Z1 = Rotated(Connects(N, 1), 3)ã  Z2 = Rotated(Connects(N, 2), 3)ã  Z3 = Rotated(Connects(N, 3), 3)ã  Visibl = (X3 - X1) * (Y2 - Y1) - (X2 - X1) * (Y3 - Y1)ã  IF Visibl < -256 THENã  ' To see the INSIDE, do "Visible > 256" :)ã   bm.LINE X1,Y1,X2,Y2,N*10000ã   bm.LINE X2,Y2,X3,Y3,N*10000ã   bm.LINE X3,Y3,X1,Y1,N*10000ã   ' Remove next line to stop filling and increase speedã   bm.PAINT ((X1+X2+X3)\3,(Y1+Y2+Y3)\3,N*10000,N*10000)ã  END IFã NEXT Nã can.copyrect(sr,bm,dr): 'To Avoid Flicker!ãEND SUBãThe ABC Programmer             LIKE (PATTERN MATCHING) ROUTINEvoxel@edmc.net                 02-25-00 (10:03)       RAPIDQ                 128  4230     LIKE.BAS    ' LIKE Function - pattern matching routine for Rapid-Q by William Yuã' This emulates the VB LIKE operator.ã' Thanks to Thomas Binder for the original C codeã'ã' ?   Any single character.ã' *   Zero or more characters.ã' #   Any single digit (0-9).ã' [charlist]  Any single character in charlist.ã' [!charlist] Any single character not in charlist.ã'ã' A group of one or more characters (charlist) enclosed in brackets ([ ])ã' can be used to match any single character in string and can include almostã' any character code, including digits.ã'ã' Note:   To match the special characters left bracket ([), questionã' mark (?), number sign (#), and asterisk (*), enclose them in brackets.ã' The right bracket (]) can't be used within a group to match itself, butã' it can be used outside a group as an individual character.ã'ã' By using a hyphen (-) to separate the upper and lower bounds of the range,ã' charlist can specify a range of characters. For example, [A-Z] results inã' a match if the corresponding character position in string contains anyã' uppercase letters in the range A-Z. Multiple ranges are included withinã' the brackets without delimiters.ãããDECLARE FUNCTION Like(ParseString AS STRING, Pattern AS STRING) AS INTEGERãDECLARE FUNCTION IsDigit(S AS STRING) AS INTEGERããCONST INVERT = "!"       '-- Some like ^ or ~ instead, whatever you wantããFUNCTION IsDigit(S AS STRING) AS INTEGERã  IF S >= "0" AND S <= "9" THENã    IsDigit = 1ã  ELSEã    IsDigit = 0ã  END IFãEND FUNCTIONãããFUNCTION Like(ParseString AS STRING, Pattern AS STRING) AS INTEGERã  DIM prev AS INTEGER, matched AS INTEGER, reverse AS INTEGERãã  WHILE Pattern <> ""ã    SELECT CASE MID$(Pattern, 1, 1)ã      CASE "?"ã        IF ParseString = "" THENã           Like = 0ã           EXIT FUNCTIONã        END IFã      CASE "#"ã        IF IsDigit(MID$(ParseString, 1, 1)) = 0 THENã           Like = 0ã           EXIT FUNCTIONã        END IFã      CASE "*"ã        DOã          Pattern = MID$(Pattern, 2, LEN(Pattern)-1)ã        LOOP UNTIL MID$(Pattern, 1, 1) <> "*"ã        IF Pattern = "" THENã           Like = 1ã           EXIT FUNCTIONã        END IFã        WHILE ParseString <> ""ã           IF Like(ParseString, Pattern) THENã              Like = 1ã              EXIT FUNCTIONã           END IFã           IF ParseString <> "" THENã              ParseString = MID$(ParseString, 2, LEN(ParseString)-1)ã           END IFã        WENDã        Like = 0ã        EXIT FUNCTIONã      CASE "["ã        reverse = (MID$(Pattern, 2, 1) = INVERT)ã        IF reverse THENã           Pattern = MID$(Pattern, 2, LEN(Pattern)-1)ã        END IFã        prev = 256: matched = 0ã        DOã           Pattern = MID$(Pattern, 2, LEN(Pattern)-1)ã           IF (Pattern <> "") AND (esc <> 0 OR MID$(Pattern, 1, 1) <> "]") THENã              IF MID$(Pattern, 1, 1) = "-" THENã                 Pattern = MID$(Pattern, 2, LEN(Pattern)-1)ã                 IF Pattern = "" THENã                    Like = 0ã                    EXIT FUNCTIONã                 END IFã                 matched = matched OR (MID$(ParseString, 1, 1) <= MID$(Pattern, 1, 1) AND ASC(MID$(ParseString, 1, 1)) >= prev)ã              ELSEã                 matched = matched OR (MID$(ParseString, 1, 1) = MID$(Pattern, 1, 1))ã              END IFã              prev = ASC(MID$(Pattern, 1, 1))ã           ELSEã              EXIT DOã           END IFã           esc = 0ã        LOOPã        IF (prev = 256 OR MID$(Pattern, 1, 1) <> "]" OR ABS(matched) = ABS(reverse)) THENã           Like = 0ã           EXIT FUNCTIONã        END IFã      CASE ELSEã        IF MID$(ParseString, 1, 1) <> MID$(Pattern, 1, 1) THENã           Like = 0ã           EXIT FUNCTIONã        END IFã    END SELECTã    ParseString = MID$(ParseString, 2, LEN(ParseString)-1)ã    Pattern = MID$(Pattern, 2, LEN(Pattern)-1)ã  WENDãã  Like = ABS(LEN(ParseString) = 0)ãEND FUNCTIONããã'-- Test codeãã?Like("24","##")ã?Like("aBBBa","a*a")ã?Like("F","[!A-Z]")ã?Like("a2a","a#a")ã?Like("aM5b","a[A-GL-P]#[!c-e]")ã?Like("BAT123khg","B?T*")ã?Like("CAT123khg","B?T*")ãã?Like("Combine(10, 20) = 30", "*(*?,*?)*=*#")ãSteven Edwards                 WINDOWS HI-LO GUESSING GAME    steveags@bellsouth.net         04-06-00 (09:00)       RAPIDQ                 169  4908     WINHILO.BAS '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  Beginning Beginner Seriesã'  Hi-Lo / Guess the number gameã'  Windows variant for Rapid-Qã'  Steven Edwardsã'  March 2000ãã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  compiler directivesã$apptype GUIã$typecheck ONãã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  function / subroutine declarationsãdeclare sub NumUpdateãdeclare sub PlayerGuessãã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  global variablesãdim Target as byteãdim LowGuess as byteãdim HighGuess as byteãdim PlayerTries as integerãã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  GUI form layoutãcreate MainForm as QFormã  caption = "HI/LO (Guess the Number)"ã  width = 320ã  height = 200ã  centerã  create btnGuess as QButtonã    '  player clicks button to register new guessã    top = 95ã    left = 120ã    caption = "GUESS"ã    onclick = PlayerGuessã  end createã  create TrackBar as QTrackBarã    '  player moves slide bar to select new guessã    top = 50ã    left = 80ã    '  guess from 1 to 100ã    min = 1ã    max = 100ã    '  tick marks every 25 positionsã    frequency = 25ã    '  start player at 50th positionã    position = 50ã    '  highlight available area for guessesã    selstart = 1ã    selend = 100ã    onchange = NumUpdateã  end createã  create lblSelectedNum as QLabelã    '  label lets player see exact number of ã    '  trackbar positionã    top = 55ã    left = 250ã    caption = str$(TrackBar.position)ã  end createã  create lblAttempts as QLabelã    '  label shows a counter of attempted guessesã    top = 10ã    left = 120ã    caption = "Attempted : "ã  end createã  create lblMessage as QLabelã    '  label for messages to player from programã    top = 30ã    left = 120ã    caption = "Make a Guess"ã  end createã  create lblRating as QLabelã  '  label for rating the player performanceã  top = 135ã  left = 10ã  caption = "RATING : ?"ã  width = 300ã  alignment = 2ã  end createãend createãã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  main startup codeã'  generate a random number from 1 to 100ãrandomizeãTarget = rnd(100) + 1ã'  set available numbers to select at lowestã'  and highest pointsãLowGuess = 1ãHighGuess = 100ã'  set player attempts counter at zeroãPlayerTries = 0ã'  show form to start program runningãMainForm.showmodalããã'-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-ã'  function / subroutine implementationãsub NumUpdateã  '  routine is called when trackbar is movedã  if TrackBar.position < LowGuess thenã    '  do not let the player slide the selectorã    '  blelow the current lowest guessã    TrackBar.position = LowGuessã  end ifã  if TrackBar.position > HighGuess thenã    '  do not let the player slide the selectorã    '  above the current highest guessã    TrackBar.position = HighGuessã  end ifã  '  update label to show exact position of ã  '  trackbar selectorã  lblSelectedNum.caption = str$(TrackBar.Position)ãend subããsub PlayerGuessã  '  routine is called when player clicks the ã  '  GUESS button to try new guess ã  inc(PlayerTries)ã  '  increment player attempts counter and displayã  lblAttempts.caption = "Attempted : " + str$(PlayerTries)ã  if TrackBar.position < Target thenã    '  too low, let player know that a HIGHERã    '  number is needed and lock out selectionã    '  of numbers lower than current guessã    LowGuess = TrackBar.positionã    lblMessage.caption = "Guess Higher"ã  elseif TrackBar.position > Target thenã    '  too high, let player know that a LOWERã    '  number is needed and lock out selectionã    '  of numbers higher than current guessã    HighGuess = TrackBar.positionã    lblMessage.caption = "Guess Lower"ã  elseã    '  must have nailed it, lock out all other ã    '  numbers and disable the GUESS buttonã    lblMessage.caption = "CORRECT!!!!"ã    LowGuess = TrackBar.positionã    HighGuess = TrackBar.positionã    btnGuess.enabled = 0ã    '  give player a ratingã    select case PlayerTriesã      case is < 5ã        lblRating.caption = "RATING : LUCKY GUESS!"ã      case 5ã        lblRating.caption = "RATING : LUCKY MASTER STRATEGIST"ã      case 6 to 7ã        lblRating.caption = "RATING : MASTER STRATEGIST"ã      case 8 to 9ã        lblRating.caption = "RATING : STRATEGIST"ã      case 9 to 11ã        lblRating.caption = "RATING : SERIOUS PLAYER"ã      case 12 to 20ã        lblRating.caption = "RATING : BEGINNER"ã      case is > 20ã        lblRating.caption = "RATING : ASK DADDY FOR HELP"ã    end selectã    '  re-set following or centering of text doesã    '  not workã    lblRating.width = 300ã    lblRating.alignment = 2ã  end ifã  '  highlight track bar selections from lowestã  '  to highest selectable numbersã  TrackBar.selstart = LowGuessã  TrackBar.selend = HighGuessãend subãMesut Akcan                    FILE SPLITTER                  makcan@SoftHome.net            04-30-00 (00:18)       RAPIDQ                 320  7884     QFSPLIT.BAS ' QFileSplitter.bas for RapidQã' Coded by Mesut AKCANã' updated 22 April 2000ã' http://kaynak.cjb.netã' http://makcan.virtualave.netãã$apptype guiã$typecheck on ã$INCLUDE "RAPIDQ.INC"ããdeclare sub ExitClickãdeclare sub AboutClickãdeclare sub sourceselectãdeclare sub e2changeãdeclare sub splitãdeclare sub targetSelectãdeclare function fPath(fPFN as string)as stringã''ãdeclare sub OKclickãdeclare sub CANCELclickãã'----------- FORM ---------ãCREATE Form AS QFORMã    Centerã    Caption = "QFileSplitter v1.0"ã    Width = 315ã    Height = 265ã	create Mainmenu as qmainmenu 	ã		create mnuFile as qmenuitemã			caption="&File"ã			create mnuSoSel as qmenuitemã				caption="S&ource Select"ã				onclick = sourceselectã			end createã			create mnuTarSel as qmenuitemã				caption="&Target Select"ã				onclick = targetselect ã			end createã			create mnuSpl as qmenuitemã				caption = "&Split"ã				enabled = Falseã				onclick = splitã			end createã			create mnuBrk as qmenuitemã				caption="-"ã			end createã			create mnuExit as qmenuitemã				caption="E&xit"ã				onclick = ExitClickã			end createã	ã		end createã		create mnuHelp as qmenuitemã			caption = "&Help"ã			create mnuAbout as qmenuitemã				caption ="&About"ã				onclick  = AboutClickã			end createã		end createã	end createã    CREATE Label3 AS QLABELã        Caption = "Split size(bytes) :"ã        Left = 8ã        Top = 172ã        Width = 100ã    END CREATEã    CREATE Label5 AS QLABELã        Left = 119ã        Top = 192ã        Transparent = 1ã    END CREATEã    CREATE GroupBox1 AS QGROUPBOXã        Caption = "SOURCE"ã        Left = 4ã        Top = 4ã        Width = 292ã        Height = 80ã        TabOrder = 2ã        CREATE Label1 AS QLABELã            Caption = "Path / File :"ã            Left = 7ã            Top = 18ã            Width = 55ã            Transparent = 1ã        END CREATEã        CREATE Label2 AS QLABELã            Caption = "File Size"ã            Left = 7ã            Top = 58ã            Transparent = 1ã        END CREATEã        CREATE Edit1 AS QEDITã            Text = ""ã            Left = 7ã            Top = 35ã            Width = 239ã        END CREATEã        CREATE Button1 AS QBUTTONã            Caption = "..."ã            Left = 250ã            Top = 33ã            Width = 29ã            TabOrder = 1ã		onclick = sourceSelectã        END CREATEã    END CREATEã    CREATE Edit2 AS QEDITã        Text = "1457152"ã        Left = 9ã        Top = 187ã        Width = 101ã	  onchange = e2changeã    END CREATEã    CREATE Button2 AS QBUTTONã        Caption = "&Split File"ã        Left = 222ã        Top = 181ã        TabOrder = 1ã	  enabled=falseã	  onclick = splitã    END CREATEã    CREATE GroupBox2 AS QGROUPBOXã        Caption = "TARGET"ã        Left = 6ã        Top = 89ã        Width = 291ã        Height = 71ã        TabOrder = 3ã        CREATE Label4 AS QLABELã            Caption = "Path :"ã            Left = 7ã            Top = 18ã            Width = 55ã            Transparent = 1ã        END CREATEã        CREATE Edit3 AS QEDITã            Text = ""ã            Left = 7ã            Top = 35ã            Width = 239ã        END CREATEã        CREATE Button3 AS QBUTTONã            Caption = "..."ã            Left = 250ã            Top = 33ã            Width = 29ã            TabOrder = 1ã		onclick = targetSelectã        END CREATEã    END CREATEãEND CREATEã'----------- FORM2 ---------ãCREATE Form2 AS QFORMã    Caption = "Select a Folder"ã    Width = 320ã    Height = 330ã    Centerã    CREATE btnOK AS QBUTTONã        Caption = "&OK"ã        Left = 223ã        Top = 270ã		onclick = OKclickã    END CREATEã    CREATE btnCANCEL AS QBUTTONã        Caption = "&Cancel"ã        Left = 138ã        Top = 270ã        TabOrder = 1ã		onclick = CANCELclickã    END CREATEã	create dtree as qdirtreeã		top = 5ã		left = 5ã		width = 300ã		height = 260ã	end createãEND CREATEãããdim fsize as long , splsize as long , rmn as long ãdim spl as integerãdim file as QFileStream , nfile as QFileStreamãdim crLF as string , c34 as stringãcrLF = chr$(13) + chr$(10)ãc34  = chr$(34)ãã'--------------------------------------------------------------ãsub splitã DIM memory AS QMemoryStreamã dim n as integer , poz as longã dim sPF as string 	'source path/fileã dim tPF as string 	'target pathã dim sFName as string 	'source file nameã dim tFName as string 	'target file nameã dim tFull as string , fBAT as string , a as stringã dim bf as stringã sPF = edit1.text 	'source file pathnameã tPF = edit3.text 	'target file pathnameã sFName = sPF - fPath(sPF) 'source file nameã IF file.open(sPF , fmOpenRead) = FALSE then 'open source fileã	showmessage "Problem with reading " + sPF : EXIT SUBã END IFã memory.CopyFrom(file, fsize)ã file.closeã fBAT = "@echo off" + crLFã a = ""ã for n = 0 to  spl-1ã	poz = n * splsizeã	memory.Position = pozã	if n = spl-1 then splsize = fsize - poz 'remainã    	tFName = sFName + "." + right$ (("00" + str$(n)) , 3) ' target filenameã	a = c34 + sFName + c34 + "+" ã	if n=0 then a=""ã	fBAT = fBAT + "copy /b " + a + c34 + tFName + c34 + " " + c34 + sFName + c34 + crLF		ã	tFull  = tPF + tFName 	'target file full path nameã	poz = n * splsizeã	IF nfile.open(tFull , fmCreate) = FALSE then  'create target fileã		showmessage "Problem with creating " + tFull : EXIT SUBã	END IFã	nfile.closeã	IF nfile.open(tFull , fmOpenWrite)=FALSE then  'open target file for writeã		showmessage "Problem with writing " + tFull : EXIT SUBã	END IFã	nfile.CopyFrom(memory, splsize)   ' write target fileã	nfile.closeã nextã memory.closeã bf =  tPF + "merge_" + sFName + ".bat" 	 ' batch file nameã IF file.open(bf , fmCreate) = FALSE then  ' create bat fileã	showmessage "Problem with creating " + bfã 	EXIT SUB ã END IF ã file.closeã if file.open(bf, fmOpenReadWrite) = FALSE then  ' if errorã 	showmessage "Problem with writing " + bfã	EXIT SUBã END IF ã fBAT = fBAT + "REM This file was created by QFileSplitter" + crLF + "REM http://kaynak.cjb.net"ã file.WriteStr(fBAT,len(fBAT))      ' write to batch fileã file.closeã showmessage sFName + " SPLITTED !" ' OK.ãend subããsub sourceSelectã  DIM OpenDialog AS QOpenDialogã  dim FName as stringã  IF OpenDialog.Execute THENã	edit1.text 	= OpenDialog.FileNameã	FName 	= edit1.textã 	IF file.open(FName , fmOpenReadWrite) = FALSE then 'open source fileã		showmessage "Problem with reading " + FName : EXIT SUBã	END IFã	fsize	= file.sizeã	file.closeã	label2.caption = str$(fsize) + " bytes"ã	Edit3.text = fpath(FName)ã  END IFã  CALL e2changeãend subããsub e2changeã	splsize = val(edit2.text)ã	spl = int(fsize/splsize)ã	if splsize >= fsize then ã		button2.enabled  = falseã		mnuSpl.enabled = falseã		label5.caption=""ã	else ã		button2.enabled  = trueã		mnuSpl.enabled = trueã		rmn = fsize mod splsizeã		spl = int(fsize/splsize)ã		if rmn>0 then spl++ã		label5.caption = str$(spl) + " split files"ã	end ifãend subããfunction fPath(fPFN as string)as stringã	dim poz as integerã	dim lastpoz as integerã	doã		poz = instr(lastpoz + 1 , fPFN,"\" )ã		if poz=0 thenã			exit doã		end ifã		lastpoz = pozã	loopã	fPath = left$(fPFN,lastpoz)ãend functionããsub targetSelectã  if edit3.text then ã	dtree.initialdir = edit3.text ã  elseã	dtree.initialdir = CURDIR$ ã  end ifã  form2.showmodalãend subããsub OKclickã  edit3.text= dtree.Directoryã  form2.closeãend subããsub CANCELclickã  form2.closeãend sub ããsub ExitClickã	form.closeãend subããsub AboutClickã	showmessage "QFileSplitter v1.0" + crLF + "Programmed by Mesut AKCAN" + crLF _ã		+ "web: http://kaynak.cjb.net" + crLF + "mail: makcan@softhome.net"ãend subãã'**************ããForm.ShowModalãDennis V. Buyan                VECTOR FONT                    dvbuyan@mg.dp.ua               04-18-00 (10:48)       RAPIDQ                 101  6579     VECTOR.BAS  ' Vector fonts for Rapid-QãDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2ãSUB V1:OPEN "O",1,"VECTOR.ZIP",4^6:Z&=4640:?STRING$(50,177);ãU"%up()%9%'%.-%3m\aMJ['&I7..%%MD%%%/%.%%%j%hytw%SgfxTN>v>oSokp+muãU"4HaP3e\Qi)P+>j7mi9:YaMr]PLPebsIS9Y*/Z;:n6IZI8wEbEv.-pF9(ck$=(htãU"KHGGoG36:;J?bkEmhtpCXTd?%U:6J,zC.'+dm(S8=(?*h\yE4S<g,UhWR$dE5BKãU"d,b,W/Z$U-9I%QUJ33/kX37O/3()KOI%'U3I>YAoE,t&NNNp]v$Hs9WGkSNI/\SãU"5&*aA#gC,VqX0Fhc&hLHjSjC<$lx[:W$mbxG>n=bamceCk,$U/THtCmgXncO-x-ãU"%7bGm*N=\?aK-3s%iFI392%QE9pW9kN9EnoSx.%LhYeq):/ZLBptzFD5UK/_+=6ãU"#_*A>=))n0B':-Ahx\8f),1E5k;pR_a#S$o;De+^$-PC_bWjgx=M8D,\6Lqwg=5ãU"&pP4[obE]B-+e1JWjsk\kwqh6W;OX&p)h:42;'$*&dvc]UoWJKZ0w=d[K;07K-3ãU"6nvKEuWASF+cGBd;^<9ZiK$1-Kfh,h1dp;2i%.?0-Dr/6xmbuI&p<$#b1Qyk9KeãU"UqDuukk+BwU<U*M6;vUGcH%$aSds\Au^:G4ew[S'bwb_H1.Pk?R=a8X#C;IpF6)ãU"N(ahSS$9P$4H>zp0q(XZ+=92gGXXs.DVCSYNhhW5UHlCT0-#9G:*[rRA0AFX&T>ãU"1\PqOsA)a^ZR3S'nSYR#pPLlK+WhGLnt#-H\*HD/.%9<)\Tu,wT8Pz.U4p\*fDQãU"88KD,Mj4U=qqTrkvP7YXs+N>^X#qG<:%TqokVwlRmH*,B,EySXmObtGSoS,$L=IãU"+=neF<KDtnLOjO&nLq-:fc'Nq^>LREC-grO6ZOh$)aK;3RJY'hO+>ZO2hXWYRqaãU"I91%lhODk+q*1'CQe'PzW%;14A<Gf?P3471GoJrYQqw9/iX[::V?FLoz\s%f)4YãU":7;/lV:jara+'G9>;_<Zn']UE]Bqm+q:7MNN=EFq^dm%<3Q8O$5U_4(5u'BP#*OãU"ZS[e58cLJ6e]'GxS*c7TbQms9QfE+FhSmwtBo0aGqY>%/.S>#2Ey2ghA[RvP>'UãU"#YHB\<S1slcn\MFDU#6qc;?UOFY[I.70VH3$r*^u:pbVM*lWISC:Yu,$\<drgrLãU"UR\7a_D#iAX>)Hg_\YM<V<9r1WJd88&JNUCk2^Rx$ORIyDoDQ>V35q#q.;9[STZãU"a92;^Jr&4-?HkPKw&i(eEd+H9&so6iAKD:<8_,XVncU,]ds=*s;k)U0GVtNJY#dãU"S1WXu.JnLApw-)NGSr/vLKcGG)?[JSUFvKY&['fhGDGJ_\p$>5ad&sm.danIRJSãU"m/(YDL]M0Q#5BMWTkj&EQNJYob2Z/9LN\\P/9U^fuE0A5o*.J7UsTXbN?+I1%pOãU".E;b;aVGmmN'88i:<b?$R]shUKRW\gXGF\S->4w=oDG(M\?xea_*,lks;X*J56GãU"kQZ3tZZ-(vd'OcPWoWjEDC3X4l/0ZDBNc_gc2xMP1t:.SGeu]3=MnRmJkBQUMJSãU"lD+]v50K,bh,>TY3UpVB'rp''L*8IcjEP_ODq6a1w)$6g1v=9$aH%RaOMM;o8._ãU"0<b;g1QQW'p86>3GijgHhw(K<jl^siOQpcz'g'H8FQEFTj)mSJh8(LIqp]'tfL_ãU"l?N,WTgaIYn\l7'o6nrEgAhv7i.0h0og73uwV8Uk:wSlSiH13U89aL8RHCof(z#ãU"z?vG/N\DVZ4/YPiq:y/;\^:x;T\2Zp\e2.aEVGrUjqY\7if-ZOP^ze6'\nEc-p.ãU"fer-jt5SFr-k*tS&:W0rIjQ7lh,lX,<cc&vS>^p:+Th),O52Zs/[]6%-;cf\Dr.ãU"k8mEK'd<28MYDP)8MWac#4F]xDdQE8sDMuw7)8CT4:^W8XLFjKG&HIx7UcUicHwãU")9;QNi=3T>he'y0mec+/.=yv?*K%RD03FzuEn'75Qc9Hs0)GnN(iCsZe2qV=n^MãU"j/TY,=rsC=CG:L^e.GlxT9A$7]$hPorcYS<=Elf1QZ(E#x626:g3>U\jRrU\U:sãU"U84U[+Vx^WGj;Tt5C7IoCnoSi>Zc3uIfPe^2+z''hUb_gL:.aN;ooMhXolX$2Y1ãU"LO7s'MgNMPVI>m<LRQwvsVlw3X,#^iZL1'p0LEh4\Xq?I$AI)ToP(0)%Btz8MO(ãU"d4rhe11Xpw2cJ.FqL$Jf96_c.oU'2DJ>BATfq2E1Q$m,-oi%pVt9_9)2OvnE8:gãU"n.7Q\nNO<IO%56rWwE4l1\a>L)R$0koK5>CEVG2;#4cFKFf(Iw#9U1RDCN32q>VãU"7\%b5c$WAp2^n\^bC$AvvvXt4Jy_SrbXp7njEGBVLto-&?d3Kk,X+2V.U=plF(6ãU"1&Q)3676JfvTmjcBEyNX<\Z))k%RJ9Ye0K.204QmLcEP;KuoDY-\)eHGsRdbb\$ãU"WO$>.x3loA&F[Y^.X:4gosK'Z;IOE'4P[0C#4#=8HlCZ-Z,<ItW'&za&RE1<l<eãU":_\/5.[vQHpR-J)'jYT[GDeq?unICN)63K]osS]fC$B7zB&fJGWjnk0G?c^IbFgãU"Z;%,eom7,&RJ2C(huwXR)HX%*)&7h:My)fa'6_%wfN8iXa8?JvWHaIb=Ao_1^LYãU"'nA\ymqb'^\?Wbd*^*Q20K;/35+#:K+-b=<I:uP^%Ome'WK.jbRmkOKw9:T]NWRãU"2k0F<']_Be^C+Do=0N='I0bv#PDkT>/7OaBm;nR+bf$cEl*>[cXg_c;]v>-Us5^ãU":k#/Jt76#;#aAv0Tr8*N7siSdu&+m^L?mPr^J_gok5f*EumOKgk4j_mi)Be<*c7ãU"95h+q4zdjHA1*\c6J_f:qx_]LW&8f1hbY^Ayz-ohg8]V8^bKBt'[B8KKoo>Cm:*ãU"k;0JQ4[[<x2;8GOD::NvjFjTni['#a?=\>no^WLe.Hq:cZD-O&4r,^Xc&rQL)).ãU"XR?r'&cCA[Aw\=Q8/ik>2Dcx//m%)VtIU_EjH&MEA7?.k(/ao#4w'u<up%()9%%ãU"'%-%.?qaMrlqL9%]-%%%^E%%%/%%%%wzx]#[[S%Rky&(q(B\1L6MFdKxh6.*_'nãU"jhQsK5Yse*6<?X\n5;H=[ITNgQ(J5Mgd&M:.f8KF'4okfwi2B&w#f%C7nO)^R83ãU"zlUIE#..\.\?mR8%1,n37M8L,ee+]9bTCO.U;f/Fafe1*Rc<o+9d-83X1<JK.H%ãU".U^Ptlq3I838v0/_-y<Ddqp<+SA&>IbH#)iEt)C%\9FPQg63tO&'S=Q28(%wIZ/ãU"LoS(shA$nQR2TQsYsMgP/9tt:?)ee13/A+N.<CN3*c'Rw>NB+Wp8ZW9%%N2)dhCãU"WL)FLQtInpW4:aK<;c+l3GzP<)()'R)TNy\g\+CMXQx$D-XqHWF*Ld36*T,--QOãU"X^c2Hq3G)eEn(.('OTG-nP.5ILYzWGyH^#<6Q0(:knc0:K^W&CV[S=<%o+[X;PeãU"(0bB^^9[<Fy99W9&Cv0eX<5M.fzD2((((]^q,%9GqB^3AtQv6xL%N12K-ME,5UUãU"_ho#v;ss>an6wZCYaJRsVU#;)CS7.+M3BtJl>,qC=sGgpcArk6,&?<qhgg+jnaBãU"P5DxBEz#-BsvUoA?%tCGYbWn)C[p;?o_r_(6&EwlO>23%s1)Q#m3\*Cm3/3UhqVãU"/NHe;MB(E9Pg+ORs_qi&6XKx/$NVt%ST:1(naK4K.Hi<XoU?x)R*yMXP:$QCS:jãU"dI<Rm;Jq0B$?FopUkr#_MfDOrN>yWE)nzWJ)Y2?KkMYiF?r#A7JS1TWkkl<'$q7ãU"rfL%V'OJ.tX)WY4,+oNW.0-iU-9bdg,SX-0At*kzaqVY.DSh5j0vt83:Up5Gs8]ãU"3SUrtEB7pmtxf3_T-qf_ne^fBg=AoY/w6I['=%]^uta]ckT/?:O\)+v)ZiW7:cGãU"Ai<2ur,k_'T]Og6ct5u^ad3)hl2<IKRudV(I(H<Vi,86gIrgvDcdrlf$Pc$.K:NãU"gh/i#XJ,iI0k6*e4=l*/(8n.'5YZO\:?QajhTjiOL,4e(xp#)_rQOA=6]R$[+\zãU"J.KzDyk=cqK2hx//L3aLF2,h_SG'ssirqR]i,]*:m#B/S5aq-EH]VD)Cm:rr$7(ãU"d.l+x^=Gl+8&jTY=]Yhu;N(qXI<5t)ca9pmleh&,gU/XkC>7RY3&4[U?86t[ET1ãU"AM$Kr,EbjdjYavt;Jvf+jEN]LC;-H_C&SHR-i;WmaH.K=B'nR1BY,1RK9Em(U$WãU"W?:.06/[#]w<jPmwo/NA)p0K2%J7q+<6U+pJLWgUPEeu8-KO)Xs5oIXEqQDpZdBãU"B+>QS[1]z'pV=RH-Bgi.u[3>#y;#4?(vC5,o<jd;-1iSWeG1xj[2=<QLB.;[Hs2ãU"[)&9-\2q$($1?i4u',ldCf+=zj\z$HYmS,Z)0uS<4FZ'B_J,5'N5.l#O,=OV;F1ãU"*r=cP*#M_xtG=GQ5?ok<MvNQ'=V'D5>_<_5?0O?GPtk>/$S*>P.k2.pPAH&w(63ãU"Tfls.(d=gL(SMiQ_Ojldf,x-FWK*bM_4'#0j3R10nf[n$nv'kxr&\JZ6d$/'G%9ãU"ll:/?UY:rP-J#6\'#jP)Z:\'IDt9cQ/enlxCmloQLY9Ng)sQ7bO'N)\-\g\SQ.WãU"jX4V<1\Sx-M4wlr)O7^N[E^5Bx8dV42_Vsu+IQ)UNQ3^YVw7LqSDifasq(x/]]IãU"DWF0lw*+1%-:z^6e0Wr'oYbv6V]^OPCb2tebmBGO_7-rxwn2L*e\[$]<[ex)sr+ãU"jJWSH,GWe3JSel-SyMm)0n1nrQe*>4Q_=VJ7Cfpp)h,BlYe$F=Dg3Blj.F2qihPãU"Wkjvs&#wb-3%6pbL0ok&I4;#D.XW9'7prYv:8GM)DR9G;5ssbnKC/L0/m<l]'o4ãU"88?j_8t6mYM.ID7:bqmFfPS-dJOU$i7b1^dZ&l^WY.7ST1:+bhY1&*V7nCng0/%ãU"X:=NleQ081H'c2j$,Al$9v^:WMawCP4&J6p4]-qZ9&(/EiWp_N1$vvKs?#3g\1&ãU"*txRAW7ZU)L_gsc'=#.g-'4#<#FtKnp1RTtcUB?5Ls5mG#P79kMG?5+1dxd?plQãU"9=,Qm[/n=d-$yr(P4e$:1$c19(6y6cHJ()^QFdP;+C,e:d8.nnGYsufFF>oB:9LãU"8_ActY;H9Ko1uT&ij0Y>]lbL$'s(*osFR8XR#wfXYj5XL_KY1wqPznI\egcwlijãU"J.e.6an+lSwXFamkp?/HTX,2aA5i*JWRFhQ9XWr20A:'zr6ud)tHHxn>q1_]avfãU"N[a_f)q9R\3M7AErn]]rpUQ1gX$bZ1&KY*oix#hjI-ti57q(\$_=(d/4JAt,)#FãU"a:oMwd_piEg,[T&;BAT_x9.P]%Fxtp6.o2#cPB(45VQ]EdBWre/hlT0#r<pT9m&ãU";O(a$OCRh1'(8WcWRn8,3[F+Ytq4p4_v8<j5;u;zF73*Wp.fuV8faaK/=cFsVsAãU"\3pFrGNP&j$S1m$-XtK.C4r_b)SHUad]5Q^Hi]4mIo$D)9Geb6YQmxrrda7(a?*ãU"-bitvPUOa[2Sh\1ovn$-Bxb602QGx+c[<x40NZj9nl1aM*LoOZe().W;pCG#G?_ãU"/:j/cwF$#8U$;qkkd1$a9fr7C[dG3HxXdFYEv,?GQG_9UB>*kQwjTwfn$VNTqtXãU",XF9h)huzg<^bAWRNwtO'8\Mki$V>,Ocd8aWMmqis'T;_ahD1Wn<t>tPYrx;/dlãU"3nrNwO/u?9$f5MGMDU;NuKG'x*up%&'9%%9%'%.-%3m\aMJ['&I7..%%MD%%%/%ãU"%%%%%%%%&%%E%%%%%%%%&%jhy%twSg%fxup%&'9%%9%'%%-%?qSaMlq-L9]-%%%ãU"^E%%%/%%%%%%%%%&%%E%%%%_.%%%wzx]#[[S%%kyup%*+%%%%%'%.'%?%.%%i6%ãU"%%%%ãEND SUBãCLOSE:IF S=47AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!ãSUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32ãIF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1ãS=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUBãNick Ruisi                     CGI INCLUDE FILE               n_ruisi@softhome.net           03-27-00 (19:40)       RAPIDQ                 127  5045     CGI.INC     ' ---------------------------------------------------------------------------------------------------------------ã' CGI.INC version 1.0  ã' By Nick Ruisiã' Acknowledgements to Kevin O'Brien (Author of CGI4VB) for the ideaã'ã' ã'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãdim pairs (2,256) as string,CgiValue as string,rawp (256) as string, strTitle as string, newBlock$ as string  ãdim strpointer(256) as integer, x as integer,r as integerããdim CGI_Accept            As Stringãdim CGI_AuthType          As Stringãdim CGI_ContentLength     As Stringãdim CGI_ContentType       As Stringãdim CGI_Cookie            As Stringãdim CGI_GatewayInterface  As Stringãdim CGI_PathInfo          As Stringãdim CGI_PathTranslated    As Stringãdim CGI_QueryString       As Stringãdim CGI_Referer           As Stringãdim CGI_RemoteAddr        As Stringãdim CGI_RemoteHost        As Stringãdim CGI_RemoteIdent       As Stringãdim CGI_RemoteUser        As Stringãdim CGI_RequestMethod     As Stringãdim CGI_ScriptName        As Stringãdim CGI_ServerSoftware    As Stringãdim CGI_ServerName        As Stringãdim CGI_ServerPort        As Stringãdim CGI_ServerProtocol    As Stringãdim CGI_UserAgent         As Stringãdim lContentLength As Longãã'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãsub SendFooter (void)ã    print "</BODY></HTML>"ãend subã'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãsub SendB (strData as string)ã    print strData;ãend subã'---------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãsub SendHeader(strTitle as string)ã    print "Status: 200 OK"ã    print "Content-Type:text/html"ã    print chr$(13)ã    print "<!DOCTYPE HTML PUBLIC ";chr$(34);"-//IETF//DTD HTML//EN";chr$(34);">"ã    print "<HTML>"ã    print "<HEAD><TITLE>";strTitle;"</TITLE>"ã    print "<BODY>"ãend subã-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãfunction GetCgiValue (Param as string) as stringã  for i = 1 to 256ã    if pairs(0, i) = Param thenã      GetCgiValue = pairs(1, i)ã      exit functionã    end ifã  next iãend functionã'------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ãsub InitCgi(void)ããCGI_Accept = ENVIRON$("HTTP_ACCEPT")ãCGI_AuthType = ENVIRON$("AUTH_TYPE")ãCGI_ContentLength = ENVIRON$("CONTENT_LENGTH")ãCGI_ContentType = ENVIRON$("CONTENT_TYPE")ãCGI_Cookie = ENVIRON$("HTTP_COOKIE")ãCGI_GatewayInterface = ENVIRON$("GATEWAY_INTERFACE")ãCGI_PathInfo = ENVIRON$("PATH_INFO")ãCGI_PathTranslated =ENVIRON$("PATH_TRANSLATED")ãCGI_QueryString = ENVIRON$("QUERY_STRING")ãCGI_Referer = ENVIRON$("HTTP_REFERER")ãCGI_RemoteAddr = ENVIRON$("REMOTE_ADDR")ãCGI_RemoteHost = ENVIRON$("REMOTE_HOST")ãCGI_RemoteIdent = ENVIRON$("REMOTE_IDENT")ãCGI_RemoteUser = ENVIRON$("REMOTE_USER")ãCGI_RequestMethod = ENVIRON$("REQUEST_METHOD")ãCGI_ScriptName = ENVIRON$("SCRIPT_NAME")ãCGI_ServerSoftware = ENVIRON$("SERVER_SOFTWARE")ãCGI_ServerName = ENVIRON$("SERVER_NAME")ãCGI_ServerPort = ENVIRON$("SERVER_PORT")ãCGI_ServerProtocol = ENVIRON$("SERVER_PROTOCOL")ãCGI_UserAgent = ENVIRON$("HTTP_USER_AGENT")ãlContentLength = VAL(CGI_ContentLength)ã'    ã'ã' parse the data sent from the form, extracting fields from the & separatorã'ã  if CGI_REQUESTMETHOD = "POST" thenã    ContentLen = VAL(ENVIRON$("CONTENT_LENGTH"))ã    CGI_QUERYSTRING = GET$(ContentLen)ã  end ifã  qslength = len(CGI_QUERYSTRING)ã  x=1    ã  newBlock$ = ""ã  for i = 1 to qslengthã    kar$ = mid$(CGI_QUERYSTRING, i, 1)ã    if kar$ = "&" thenã      rawp(x) = newBlock$ã      newBlock$ = ""ã      x = x + 1ã    elseã      if kar$ = "+" thenã        newBlock$ = newBlock$ + " "  ' substitute space for the plus signã      elseã        newBlock$ = newBlock$ + kar$ã      end ifã    end if ã  next i   ã'ã' plug both sides of the equal sign (name and value) into the pairs arrayã'ã  for r = 1 to x ã    linelength = len(rawp(r))ã    for g = 1 to linelength ã      kar$ = Mid$(rawp(r), g, 1)ã      if kar$ = "=" then ã        pairs(0, r) = Mid$(rawp(r), 1, g-1)ã        pairs(1, r) = Mid$(rawp(r), g+1, len(rawp(r))-g)ã      end if ã    next g ã  next rããend subãã' ------------------------------------------------------------------------------------------------------------------------------------------------------------------ãJernej Simoncic                STANDARD MESSAGE BOX FUNCTION  jernej.simoncic@guest.arnes.si 05-03-00 (21:33)       RAPIDQ                 54   1762     MSGBOX.BAS  Declare Function MsgBox (text As String, buttons As Long, Title As String) As LongããDeclare Function MessageBox Lib "user32" Alias "MessageBoxA" (ByVal hwnd As Long, ByVal lpText As String, ByVal lpCaption As String, ByVal wType As Long) As Longããdeclare sub FormClickããMsgBox "Just A test",2,""ãMsgBox "Just A test",1+32+256,"RapidQ"ãMsgBox "MsgBox by Jernej Simoncic",64,"About"ãã'Shows standard Message Box, with buttons in local language (unlike RapidQ'sã'MessageDlg, which always shows English buttons)ã'ã'Usage: [button& =] MsgBox text$, buttons&, title$ã'ã' Thanks to RapidQ, you can use it as Sub or Function.ã'ã' button&   Returns clicked buttonã' text$     Text to display in message boxã' buttons&  Select which buttons and icons to display and which button isã'           default.ã' title$    Message box titleã'ã'buttons& values (you can combine them):ã' value   descriptionã' 0       Display OK button only.ã' 1       Display OK and Cancel buttons.ã' 2       Display Abort, Retry, and Ignore buttons.ã' 3       Display Yes, No, and Cancel buttons.ã' 4       Display Yes and No buttons.ã' 5       Display Retry and Cancel buttons.ã' 16      Display Critical Message icon.ã' 32      Display Warning Query icon.ã' 48      Display Warning Message icon.ã' 64      Display Information Message icon.ã' 0       First button is default.ã' 256     Second button is default.ã' 512     Third button is default.ã' 768     Fourth button is default.ã'ã'button& valuesã' 1   OKã' 2   Cancelã' 3   Abortã' 4   Retryã' 5   Ignoreã' 6   Yesã' 7   Noã'ã' by Jernej Simoncicã'ãFunction MsgBox (text As String, buttons As Long, Title As String) As Longã  MsgBox=MessageBox(Form.Handle,text,Title,buttons)ãEnd FunctionãAlejandro Damico               ANIMATED CURSORS               aledam@adinet.com.uy           06-28-00 (19:51)       RAPIDQ                 253  16592    ANI.BAS     ' Animated cursors for Rapid-QãDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2ãSUB V1:OPEN "O",1,"ANI.ZIP",4^6:Z&=12154:?STRING$(50,177);ãU"%up()%9%%%%-%%E.SHf[1'=W+.%%k=%%%.%%%%lq%tgjS[fsnf/gfZA7j9#P><9ãU":pt=[F_avIpLmU<h/A4677+9MT5%iV,HF1;g._+e^]7UD:xe,'LRH()9LK%4$rEãU"#_p3q_[hxn-zH=F=5mq?).T$Zt(pur3v_vlc6y(ugX6tTdl?KQorf.paGmig,:[ãU":Z.CP.fT,KVr[:lY?$hc8f8\,<uv(8rYS#xMZlY#VuXwma)4TvOUCr'Du=X1$^hãU"Mb\p0,6U-Z/?P3lUEF?8_[gt.i<xh+..l^PI3kA:3,Lo:43ii$>j$8Ey0Bl-hZmãU"A3t$K6JseRk:kZ<KChzRIxX:DSo_doX3%RL$i<PSX6BT6L/P]I\ER$E5y0M=P1YãU"56$aI$)DL1$^X+6lB_;veB0#e1DHSlVs^^05/-Hj.ZVjc_eL,0J9.\NEN42Rm?=ãU";Ui55Ps,AB4Ib-*ez]6sfHBjObFyl8unfWsHNwBdY*Ci6#i3q6,XBlO?QNCZurPãU"&t&IUZj'_rS6hbKXQH,n*r;K'(=_+uii,>9ak9Hr>q/DsYB9[\)_l-]elKI[]3hãU",w[Yz#u;io#$UpCBLx=3HgA73<03pT\r^^42cvNVg^nU>B$x4Vh.#BlCSMQ\&AhãU")N7<Lu7PrvCtHQ[5X*#4oU0p=-6xl9.m)nuIE6:^:936u1Ei]9hw%Vf>qNZiJ2iãU"p/Sm,N-RN=5_1gy6]Fi=E:IuUv0)?WvC.%9oh+mjC9h?OuQ%/m39#1ho9inoO&1ãU".SS&qIjIJtS]qg(AF$f8OnYV<>n\ZI..M5DVI*B4Ar08U_[a51/pbtdJ_]Lr=+<ãU"XMgl9M\kfcxO3gbAX06c/tmq\G^_p)l'=I]PC8-Bgezno(t4;b>U]=qE;=rXlOjãU"3y3mXMaU$e>Mq[<M]F4*wd3f8Y$TPr'(%glXtIWIx'.<LdF9JWK7n+zJg&3(da0ãU"[SX*U60]QfUG%eT7'Q>V]$'u9_LmV[*.,MenVh'aMdQS+:em\s1NOl5-P6uEk$XãU")H6M&YbV=O&(SCX6q6\A#t_%qCF\\8wBeq&]a=z#GEg&^Vr-5e]b]:AQ_KLyp/eãU"2T3;=N.$#dQ'6sPL%E$.Q6luW9h_U,Q0qf(N_Y<guxNMcZkypQ(bd>HSOS#6HSTãU"L,,*pS/7kz9,GF*S\5/U9.;-4/2oFRTj99p8IawO%&.S9U)LkPSE4cNOF$N9Aj=ãU"$+),m3f$j)4)c48.BN:k5J==DMghb&uf&G(hnV3$KT]h,.TU0ZN&ilVU#+3,$AjãU"U97Lt4J%z(=w>US&03020-vFuGO:AlPxrUQDFf0S%)]mj#yGbjM,jDnYDI;n-._ãU"'SP'%]wg:$j;%vH<Y=xO2GAASx/S$0K$R'__QP(f=?M8pOB7&T573>oONIoR0*&ãU"o9UZ,x^Z_/4/Ga7gZLN4*%zb-O^sN;_L9yTo&kKHNZOFAWdM_\Qlnf6l7O\USA8ãU"-dM=t[jfFRr#Q3ar1ZCEe..JiBdK&Pgcbpv.]E64/]e0O3\p%bheuGa../J\OlFãU"i4ZbFIb-^_7f;A.FA_10)xM+O_hXeR0qr-TH:6?/I_7,EF*q['lNT7$iQQGro9uãU"l5O9M[[R[()$NIqTtk/u+q;a1_(*Q5f*x91(9Xfn15NMO3'De_u8(-%%T#&yaeQãU"D,5RFiku.D$]'UL7('I.*wI4vu/5nf%KVCL-21chz<ere?E4*FbE,EvcuU6#,vlãU"4\Pa0%mBh<:*V<f9&Z29eY,(BE0.DlJ/7e2],*A$m[M_CqPx_OoHWwdyi3^)[WoãU"jl=x_D86qI$BHFFx1krI$/_Qs[+^hI<f-725jTak]O'V[EmA\uQf547?$bK8<OQãU"r[Dk;GXS/X5U;*tQm7rr)p$eLej\\'YJC,E;cE5]*?uDz=pki,-4%FIGVni4Q(IãU"Vw.ZXoMQSe*qX[iK(u/4gx3A#mrjmOmN]Rg*;pO6k=NPC.NNx(S4)]tB#&,>+01ãU"+wsdOun(4iOicDb3GSWy,h'd2^H&a&^<5?Jk/C.a05&k&*>qo>T9*tQ;2>p;wF/ãU"dEeX;s7$AZ=Och:ua11K:6CVNV#;BI6w&l7]iU8)#gZOXGRW%6H.Rn09NfVGA89ãU"vJgN'zICpg&KHv,PBFqfVIxwMqqTQAn1:fS0+*=*5*H&M9^y:?_mx/wD4:Jnu%pãU"()9%%%%-1%/(=sF'P%+D=(%(%?T%%%/%%I%jB?24A0Sh0=8f5iH>77f9#Dguf\?ãU"-;BPAk[j/ut#iI=)7jKMhX<bS\Rlm\C/X'pLZZv]tf30w:,Intoim[:Grx'XX.jãU"M_-m+Kr?#po,]E1prBR/_.eGQ>_HfeUHen\*a/EcfPKV('*QXSKm5N*b(POu5=sãU"P82/8#2XdPz7z6bn7Ngrf0tSHoGR;oTMhODzJz:jd4-&rPyn[kM2)2SRsfLu6u3ãU"-qnL)+Kk5Yd,AbKk)bt'x*.[;h0<F-ba/uvfa[S::k7ongp''n[lTk=.ikGX'+5ãU"#l[p0_?d$xY(I*uLd2upjKDC.NI;/Qz>[spwM[RUeEJU'2wP4CMSTEF58*c1p)GãU"Bv(bw)X-ShZOj*48(bXeoHOmu<]$d]);AD?*U#)<1(s=1,_3Ve6goft__8OV%q/ãU"Ur7NEB_sw9Ir1$]rqUua3-qev:jCxWlxX>l&dHa0sanB\>rq8Ul,XL7JJV9r7w>ãU"B;jGjI$HE&j8#aQPa]cTdD(M=&1w7O&sY<:2+$31eqO(%\F%)QX(1*O0t9MsA>LãU"rTZ=Z#,OsceHqRk(T(vP8N9)$wMYkHD1E]zJ)%$#5/,ZgujZKPr5139Maz<941TãU"p9]*39qy#ZY*,.reP^S.91i7'r:5dreP2/79[j$*uEMSC9A1AZsf6B*N=FFTL9SãU"EKJf&.m&*U#/ArP)u/a2)tORCO*[OiR'r:?J\gPgG5ltPSrNA7s/?Lq:9glkVPkãU"-im'r:Q)iS'V,\xc*4oK9/IY*2:nI/Gx+3b'M+u[Z*2iQ8Zm(/Gvcdr'wB\ixoUãU"Ng*[5QeZ)au0JX)N'*6m.USkQ0ldQ;S[Js;h1K?O*O$hia6S4pq;)f#(l.$ZLOlãU"t95lxuHADI-agrBi7uoT+9(-V=,?Q+nAA\SQ<eQKbdPju_a.St-)>7DMmpURZhOãU"nq2)P#W;53qh<S_.eX#<qLHaLLEXEJMi-Kcdq/GucF4=)7H-Vu0YJ__gbXkRA$sãU"8hNqs5o9>B)#V6^_dmt]<imHMu&47#Fl+#.$)<_S&E]c):W/w9_hi6s6Fr6\uNBãU"1B,%?rYLX=[4M+Om$XtfM^A#9dC%uCrf6sXpei&49&OX])gD3AeRF#[-'D*hy:7ãU"Vn>%$(EP7k)4hYkv==5jFdK-V:,8$a7pC<c;tVjTUoB$\MXXS'Ckg&hq>'CEf^zãU"auU76kJq/NShqBbcO[N>4XXidKY'lvLGOo(0n^]n;X3]&Oiodba+Pv&u%p()9%%ãU"%%-%%%%==D\jn*$m=%1%cd%%%.%%.%j9fD=8S0V=8elD,7A&ke#^j6)o5DDkL.MãU"p-#5A3BIX.R+Ld54g-#E2/6l&-hmS=36Gcq?OdB,D2E-7R>z)(B8=)R4[eRnr8wãU"QVqmwl[ViTWGPt*TSEK<#)1E_uV+/LCHMce3W$\=QVZ,$WB<8y3oUCQ,bJPOzskãU"zslsY&Nb%uV8h6tDt=JrP-4qn>%(5$sR\wuoaXv]iT%Yoa#(vcYa#(+AxxOZx<bãU"F;nMfLkvWu&r(kqZrp7DY+dv-s<6JsD$twQPOdP:AVH[O<o-oN8nqHuq;vvW^sbãU"qW4-x489'R+td<F$xnM*moneNnzUfm\Yh,3qbt8A#xe1i)Nhld(7vs*&hI;IcOcãU"n)&Cm9&q5q95q5q95q5q95q5m95m5m95m5m95m5m<5Wc%l-wUO>.Js0k)XpnjM&ãU"C6C7$-e6bq4_MMh].ku\fbEq4_M_h]t5aq5q5aq5q5aq5q5aq5m5am5m5am5m5aãU"m5m51m+lI\#E3=&P]5,][eAbaI*m#XTKjZ,CuGB98m#T6KjZ9ag5q5aq5q5aq5qãU"5aq5q5am5m5am5m5am5m5Fm5m+(JP]5+,[eA/W(#MTC9ANhCKo\[(BDaTqe#vEpãU"Rq.Ph7fXMfXfXMfXfXqfXDD%P7T7%T7T7%T7T7[T7Tk%PqPB&n]5,?[mw(rrMT*ãU"n2,eSK.0mGf[.Gchxv/Xi7L?YB9&]Coa55moKpictz(;d-(83LLskObRLt;xpxvãU"YmubLiw?th<,^DK%<l<<?Z';*=>1>P^c]s-cw$q2-<s5?##uZk^DQiR6nl:.:P2ãU"o%zfkrJO>o>jq[JZT/HnH>OP0P&=E6U8ND>=V24M:::?-$GBMO1VPRt6h9vi.*?ãU"d'OR]WeC0=UqgVJj8H=3Y^46l$ZZ]>H3QN5C?gX2&Hll\W<XokY[qtt<ktj8Q#dãU"]2&N'+P_<O*l6\[l69n7)p$Z#ZG\J#-r##]^]wHWt$F<gS#D\NA3geLAEh9W2#3ãU"WgU6J6p;hHqJ0$glv)NxPMQL3Xd9:R>?j]fg=tDx':'9/#*=a%AOHl]guM]9>d,ãU"-3gBP2#Y]:Ihq2?]Q#.]kHPb2JKKxnO2hR?4m#I9SmSSfCt<EvEzRYC;CO9;t?kãU"+^<hd.O.3p)r-'0V=T#KJMSfLk0Cc$OZ<ZOG&J^M+Sb&uG<rlu$ZERKlUG4:-u<ãU"F#=??QHraQktonEIe(]JoFQeSkGTlh6>/ae>.]VG+EGk>S=f3odbJeVl*p^M)O/ãU"U1$[aZiAk<5,i%T.Qy4q&UZd3n1WFErA>Un/sLN'uMjB<^i.me]Gs_BB.ueHgNGãU"04/XpY8s5ZW;el=?%((nr[aJ$Qu)M\fHp1Fq<MMp#^3M(Cs:9023-T^62qk;KBhãU"LA+C(OC#kOKsnNoXkeyUknK<Uu..:GpDQssS6QLmvg(8=[2K$X6LgV,butBJ54kãU"iA^K/.51oVuOi92)Mq*VD-p%\&Z<_FjNlXeq3T%iW,DsdKeUI%Dz]KU)xp?.:GHãU"muugVNoRC''Fgl9;]mJt<:woFaOBDWE1pm.;Ve>&T2eJ8ws(/;g:42D%axg3LfsãU"a=%Kv,E5ox>P4sTZKFm/sG7nTfpIX)U%KO1,>,5Sgp%BOO&dR(z7h(veV\J>,O.ãU"fJO7V=1/Zk<)lC$g5R,-fgfke1l+qHW(2g1eA<b4>gU>aI/<bAPzlfV'U8r:;cQãU"1;_ytpQW48&eSE3s5CQ0r)h[3\\c1/UjdOrW<E7MgO^up9PVnZ\9iB#tho2I?OtãU"4AhO.J.Zpu_s2w%ZSnRdV<2u2X[yt_Xx_lkQJ^qd=onw8_?E0PKv$A#NF?fUiZ[ãU"T+jDnEO1F(7&-=5r5.XFnr=8h__9+dmon<>nuNN178Bn=JeESUn]NNqN1#CX/<XãU"\$LZml,9;,WF4idF5=WEQ[z^VfG-VMTwysGBh't-p2B&^Y>:$^Q7Q;kTZnb;HgjãU"bJb[=?kW6>L#mYtDMvwx8CW)_MThhhpq[_H7G8d%HtT()64--DT?s&n,+E)S),NãU"4LP:HaZir>Sdoh.12A>(C+NwFgLp\Odt%'O,4IRHd#SdAE<JAU.$SR6]/X[B:;+ãU")vyC%K\hlWvDg1\A<(2kZB,E^H?VX3gaDlhDD+sX2VV=;J>CgU]-d$&/yR=Dm?vãU"i#_<wZn(A?'1Rsu#D9ST-6k2DvbyK:.D)qRT:#Q1;[Ia<$Ogd:fpxjL5IuZ+GpSãU"Y)[5Tc1Qad?jFgV69'P)v/LiF8hN^Sujx'mF)_lW5FH*kYc)ldPu]HGp1v2t1-'ãU"uBFWW0wApg-]Gyp<XZj//h4jD<J8>]rdVO^SCOEj3,-MOeuRwNd/:&M;?pmhBfgãU"I>JYiM[c7_G?m^G]h+F41Juf1)sobK=]dL(rB(t:p02r,-OI[F*/=yhHQr-UqTFãU":+<,a9ICg99ox_JCLeocvWI%S_Xba1X8bp=V^FzaO8:9BkFO&Z+Dq%'iICG]$wFãU"$bAth=Z(GJHD+oH]B]SKFUV_4glU>K$G,E\((7Dm_'N&bSpmQ>c?p88Me+ReUNtãU"?xCuQ/N=pI7\NkgDwL[dLfTgq*X\qD*>I>&6WmB1=/8Yo_LDosxaNn>Y-7q;:bZãU".WeU-M0GD/_/o?P,F5CpG_3].B8cr/VEEO#-ZbPO8,oLZ7\-Wx_AX<Q_t7<M/58ãU"r<HS/uX925[:&jAIOMJ+I+bYZ0URH8Xn:#9M7PujY8+0+bcsr2qs:c^49X:\b&nãU")06rGBsv6Z?a3nXs86/)^Y[RlWt:?trW[kqbY6pJ&_MCkZQ]QlR/Qd$)[p)#^q3ãU"u8nAB=C^a\RimAZCT<ygrrk'55jk^d7,oLB$.L[Vl3A%c5o#KeJeA<b4tgU>]aSãU"_$an1iO&&'hxd230A6d>\J=hzD)10&FTwsRD.u-ZceW_O:&fI'3zPCFID*m<.m1ãU"+.iP<VNNHt.Ms-hbsj++qR_UcU<1502+UC.P&(-dXSEP&bknrsjc(udlHECSuc8ãU"lPg;z8sH&)GJ^Ysh2X;P$z[YbK*T/1W&Y&$EDR%Kl2*2D^K\SJa'/,mwRgiztmaãU"P-I23s9xKVrwN)q'W.n8g5O\L3shpt>k$Sti[s_Cg3ei37(SUUbA;=DX(1$Ya8QãU"1i1H6o1Qe2_pl$3n[#SB]fjOAUFo)p\_28*T_&=,T)e.KlfKl=]j[2b&oCTbk:XãU"M2iS41O=?\]CBt+co\<s58_2g)A<kb4gUc>]S_j$_1/c7,/hNWlU4.Rcd:Dp,k%ãU"PSU3,ditOYXOE/4RI']>rLmDILh6TxeKImoZmVa'\,*r\l-(.+Mr:(+Zg%mv232ãU"[dp_fv>Q-Jv<OxLM*,[/EkJNf\Y3i,_/BJ$pfX6B_O<>Q0d?dlnm%<6.3HinrM-ãU"-Du&,m7QjhmZ8CU%Bvk%D^eKo>*bung&E6dSm<_TJZm:'4:jb[Sm2Vq0LS/6Io,ãU"3/*5zTeGnA6%XDrIS,5clEn1'KfvCZK;[#ZxOBYnN('r^thjnm^e0ATF>.?k5DkãU"'k72VBW#X&[6oCDNl=0_8AXIT)NAcl#&E\M7epJT%MnsWckeI0pO>;F/ox=&,vyãU"0H22Ugp%XORJ_Y,tHMU>B]SKFOV2ZH\CSkQ2>xZ5$RFy>.rRa:^u&vbX&;-4-MLãU"(I+vX#>:&wn##N&Q=0ToI'mYlF6U%PB[A'Su&\KkA2gjUH:fOwWglYkzGDrB0eGãU"j7CLmi/YJ*2A-R,BW>zB8qpEY(j1h=g:bxkXt<]no3L\UzWb&$MFbcOH?H6?OP<ãU"gLa]i&(Y&&zf#rM-*7EfWe/vBW>hlLWLSx)'sYr*[Nkz4+kaB^boeV$K)1fIyt_ãU"[5,D]q%E^nypB<a*''l-D8?6m6O)8F$T%h^2aD;Ou\.Ka*3A43i,upoOBHe%&hQãU"TwFWn1e;d5B8I<B]x'zti]3mtG_C&ErtQZgYB:D:[=aN#Z1IhC>n_jS74Rpx$2NãU"7OJ?.e#XB3Qp9k+&gJJ3sRuY.U>B]SKFOV2ZH#YSkWQM4xpr3YB;is5mB*FbibaãU"6sSG74pPwny(>rUVpW0H5_[,-lmb.hLn==rmvusgsB.8S5'59;o5khD.\?>F:/bãU"vHZkHsX0KH)kZc0<2,Mcpi[O9BG]D6+Y$,7E+n]'YbfMzmeuRx]'j/#-dJU4ThQãU"kM>9L<.k05RW(#aHvjGZ0JT+Vv*/,W.jnHg^Lig6&:wPbSKP7[dK'UrxUh6J>0QãU"gdE;f5;L#iJrH,%)j#oR4TQ4R?ia\iA^40gN/sJxjANbK(N<fsbpn5'D,%+e9h#ãU"gV-DkMaN'whT/4%^SZG9_lDjX6Loua[_r,WVtAW43ot7pZ?HkP8l[,,odQf7$t-ãU"^(Tq.c]?S57p$X0r_O,m,'iDtj35[\f\(9C2AXQ_%sW(WT7V]F]2(#n8<[sFC=sãU"N3g1A<kb4gU'>aW<,b6-zE83lWN%Vx,:R$sU$.xjq50$m-PJ(4Z_aC^_;-+LF(.ãU"fHAlpn<>ccnONV[S)<.n7&bDL,5Gh+<c1b325'^;>A$C(&bfPolv,3G#\2&&V:SãU"U-k\OYaHR11]fBa9Zg1F->1A$bnE%l5YJ&''#RD5>Utsx'#ZDU<rZd0d>eK9i3cãU"YBe^77D[%FI7P61nnJ?k\]teQoa-qr.P=XK^m>KHD4>iu)n3jJSQG6vUc=xG1CCãU"JN683\A1&lb\I5>4:k1,fK[b25xgsVp<TaOw)K6B.Pg3J0:/nb$C/QR/H??.d^gãU"t)8L#\-Ow?$uD\1WeL8fOM-kg+[CT*VoO-%vNe.0hJ+oF[Y+BHQqVfBBE%8Lr<_ãU"[*3-?E>X32Vk11BHL]SFV2Z$B,qgY17n#sVRw>]MG>0:qD,y#Mzg7(CN+Mk]^%TãU"V,b=y.lgDH%>.<gV7o9+sfT\\9o[\c)'.dkRIQOr;6l7?jB;&eJ\$$+2oM[mI2qãU"%Z1\=T4,zn#Wb/C#pMq:Fp'n#2\n.qN]G^T__>H<E<,2Soq)F\_V3#<*.\*5:Z<ãU"jy'N-.6V2gVU&FlaOYOBPbgNgd6IMQea'rpDy=Mc$]J1S#JSm$j2ik'jKZ]QT2_ãU"Y0GtT#>4MlfrKT%s.SjtfWbV&T8T*VHUY:kr<'knho.MG\b=ePG<s]pqWqqk2PHãU"CcGKki*i&vr<HKrgZH(/%79X5j=MpN'68]=gKO=&RQ+)30B5lX-Q]G-Aw+O>?t.ãU"uo\]kJv=+HO0ZfVd)QNkpT?^FH<idVbOC%\/>'fdU(7xSfCy\vuP^Wk()dLS<<EãU"u7DE/0E<Z&),g\onO,0gyGq2R$kS#V2ZtPU>]+S_4cT3\te#NqRm=jnvYZf'd=uãU"#6l:t7u2ZB62fa2%<*j]+Fmgt+.HqMwUiUU<p)B.Fo.dr<R_=po],7*d&7x[xVSãU"-AM(^3+oHLxpMGrZ+V/yE2yIK/ATj$=jiw7ai'xigpv)-rAx=.t2tJk;u>%b*_xãU"7<=9s7DSQ&Ru:bZISALaxlg74k29L$z-rIVR\g<Pe:;l?EyPdu49#]T_OSH\A5XãU">*B/3ht>66P:.G+AZdD[&lzt?VXcr/cIE,LD9xLxZ6*<%dg:sB>7n35q05NL1aPãU"$*s)hXgW>7k2>Eh:_Ld(Jri7_%?0WS30t[cf2j*F+OQAB_j,(cG+Nf0SdSM&VXXãU"3-X*MVdLbUbB>3Jd\DHWrA)lQC4?.'),T,-v1?1c\f%jAz4v\LGerXRVDVjr4gUãU">T]S_^,A7=F-/5<0Z4i(8Pgk>I%i7;lkg/];8Ozi'SSmG\9d\mMhf$ghT>[mw$(ãU"zblf6uS.gU7mm5]f>D)UESHtxXi$qRx,BGYb\ks0Z:>=z\Ki4gXjRu?^#b<PH7<ãU"'$']djk8=$\JVS;K1Ibn_%ql?o1IvNZcf*xt[2u-f;Iv6l#anOR4x1[g=b.;J]SãU"m<s[\sE*J[s;P=U\WldtBSl2u'vDY#6ehBM[7NVWm2YW^#1?mW4S.dc]jbY=#rjãU"4)C]VGdfAFig/a/BfAMpd&l6Re\uu]^4L4rZTG_KHlSi#PKVe^_FV25ZB,qrg1wãU"q2+[ze3/o(&W-,GvK[?)auucN39fvZRG-^E,7mbJH_29;'M1+^\X\sN%jfaBfRWãU"?U&\s(x29k=_>pNmh?eFf7$hRp16aST_5ir1c7njt?mA(viiOcZEsX(KmT,W?GCãU"jb37'dDbL;taX6TjY(PB1DvOUSB3iWrIE9i-4Sj==0<sCE8:]*/[mLE48JwRQHHãU"A27VGnIro'M_rd>3vrR1)7':WEr-8&ToDG2tK_LjXZ?'XP\/',/WId;BOLtI+Y(ãU"$eL#m4mTsffRA=-f]SbVM4tY:-/2:H9_cAIHTvf<Pw5gf^SdT+b^0ygCh;8M+))ãU"8jr%Fp;06,Da\uH_.SKFVW2ZB,ZEx,Z?Rs?O-U&$:C0&^sguHfP*.C?;'e7]G2TãU"z_k1kOc[.SI4cm>FmIa>TH\L*?$*23C*p?:na-Z,,Kf7Snn-URI.okHQ)>5-N<bãU"9gn\k-Vb0>C5:P91m=V+$b)__5aI'='b7]ErO%=s/kD8GBSV<t$m4Nkh+Ww?<nTãU"Ix''mcKs]9al>^AaX=<'&mSVNvWC^JIf=Dw-K4>T]IKPKYF#AXD7lBr8#k,Og];ãU"KPc7BNGrcnBv?;-a,:Vp<4mv3P*II*H4j=M.COvQh6*+bOJ<6mSj1#,_KRq.Gd(ãU"&HbEj;->Vwg*nX%#XDC21(5N<1*\ffdFk:CKsKQNv;a+D03]'mFbV+zrAmSdv-DãU"HSf-pr3QTDL%4%4zdw^>RZ+%oMd/C7B<br4gU>o]S_4W^11eoR/C/tQET+<u-H3ãU"duF\ms%Z_GCrluU1^qD^5#cq?)\-*6Mn>u6K7=0,U/ir1Py*)wWgSEK7Vz(;GYFãU"L2W_Z*rJB#ICmW,0f8KVN&N<LL8Fv'K+j1h;Tg_s=EO**NY:y,&rFqUJH-rJSL<ãU"Oe=$4#vs0G1l:8kLVe\92E:DLlxTCn*5Ni]g8;%H1sw<:nmD>TLx[#H))Sv88^sãU"Smi+=S)Y1;,f.bW.j:>u=*\O=t#?26B.fNNX*;Ffb[rY[93_vF6H'&NL#6[d*O*ãU"aAXFAE-1VZkElkBe5s-AFa#11>=)uvV7Y3Bd6(V7>iKOU8F(9oonTPxH29n2,3]ãU"_5%u9,ikAmj,9.$.SKFVW2ZB,0EHBVOG\U8qH%40DU*-?/Bj5)lDSY5hfr=d$9sãU"pKG4^''c8g,a8)et0JEF-OSxJcmbM<*1WTKVC6#Q#N$ay&\Y.q]lZDj1f+DP;INãU"e6%BAMGcN0_z)o_5N3Lp:HC$mU.lB-KASML^=VFV5LbQW[+a)5mnt0nyL1/[EoEãU"]9/Chn8#X*S2.pm$n'4TJN#^+M'arDjH*u=Z0;'du3HY6l3Yi%=OcN%Ti$Jh.qrãU"fJ6Gx]F)Bc8;%Sjrvh6Ua*9/H/<^V.ZphEQMP[AIz$dtcHEoF(SVmn[v$7(*&&rãU"*;htxnBeo<KOA_\Kn^32?h6VkNrHkW.TG=CPg9=z/S4-A(6j,SS;Qx.MJ6_idU5ãU"TZp.,1mg-moT*eY,5Tb*5YbwmE6kP4=3#P)Fzdg'#J8Q;36&xrNmUzK(>sWhF=5ãU"g*jS[HOduE\3k3c_D]urlMp,m3LrjtI5MxsE&<*+G&iHTb4KzP_,2'*(>m86F%OãU"Y[w^Yb2FngPALk80TK:.o1j&<\+9Luq[hV2>Tu0>+OAj_>bQ6[1$p)D*lXphsM$ãU"7nml$\Lj^WJ[-k.2<^mnG*nYn/K]<\tsp\2$4]TBnv$Jj>l>R$lPa#'jIY=9^h,ãU"FY]i5++*p.(7I,'m^6TpKOl-v#e0fRE#B-H4Un&FU+G#sgfPw?f$%ML<I(NT:c=ãU"d,kW=Fv+PNt8HqEe],;'S,NiR]R1Vjz,rYKb5>=c-]7ff(H%zE)=2AuK7&aem^%ãU"_<I3X+[P\3ll<h*f9F)4e[-a\_&7pE[T5]>JRqER)qUZJnvoWGJr(0USTWh1'M*ãU"/qG<tDFT]-#qNZqvt[1N3,V#YClf+0pt:Xd5;t#tNa#/KtSm/K'+*Ru*OesTC^gãU"IpsK9_2l%CzUd/w%FO2'_-E/8yk<>rpVQL$WHf;W5m0%up()%9%%%I-%/(.=Fp%ãU"0s8A(%%%wE%%%0%#%%uAM>24BJ>S0=58f%f&:8f9tMB/R=u>fj:NWeC[ia-?2R/ãU"p=^hp?*FR-bH9SuU[1uj_k/*fk^V8=wt5cw$m=4nO*Vp;bar$jV&5lR5xJ2QT5lãU"8FfB%\X$XU$HXjn,OHF-6/%oE,Z0>HCDP>:&o5U30'-MBFxZclcn\ch9t(&q<)DãU"Fgor(Vk+,-NRcY%f:#d&RLMfe%mCu8ric9r/gzBiOb;&v((ZQ$CM$wN9XyPOjrOãU"bbbnvuR%l'XvW\Q86\JgI5WXY=4Vb$gjJ[[Sv%)mj%strk735)TKcmKkDKq4(ZAãU"Fd,%1K&g^Rd3*i_/e;]IH35-5#C0$6[F&aq4%$0F#Svj.NfEj9FUq%1)'Wpy>X(ãU"x($##9Ff)Z_OA$P?ERy.rgGE2Gh2pEwpifUzGaL-1SnSA&Xbe-1.o46P'ZSV9BFãU"?^#[EQu#9qB^tNKN?L&+LO\=1uUvFus3C','*>wruu3gS6BvhP_W]U7$1*e.bKXãU"><jKM:&YiK'OS%r$n$k<LEJw>xa>N]Hp):[BJ:r7Xn?xI]mUj^MU)V;<nmRU^hiãU"<OOWBP_6OflwCq>_7#?./BZ.s)0RH3hTOanqjuQ:FOJTUaR:p<^8.2Zmof8S3lWãU"CS<Vd/Iy678Zi?r442Hq.ankEbSAGVIE438H0]QA1,I62VM\+U5JB(h7?TF?hLoãU"S]g:3\dTf'pyD,okLEcQ)ob[M*<jFgQs+:4EC*nx07&OWw<:1VlSWYY7CU</cQ4ãU"u</eC>x0U*<TSUaST*BS6tcQ#ce>xp0U<>pSW^c_0,5d>n3Yy*</e>&x0+h(SuzãU"4XeG_9hB-X[kk&i=(V1TYhIK4T9%:0r;ZzSxWOo\$+Bv1(5Tv83>Dg-^>Ys,L%?ãU"v<u1qEXcEJr=D^N%$=9/>2h0=Wv+QG3[rb.UJgbr#3AU*Vb(7U][CfC.b-T7ofkãU"3$4<=6rhGIM8ChyOjQn8hLj[lIVwUz?GP\Q$avla1Q_#mOfSp,HgQi_t7,'f+WxãU"VWSngRr7uCZ\MqB$;bzsQpL+_ABYs\2*lFfo]bMVzwG;#U1S6peTHABpi#'j^jXãU"iYABJZr_nJ5i,?[maEgL8FX+S_*r.8k([aF5$'lX4V3XKwXymP0aL0o]'oH+Sq2ãU"u%p()9%%%%-I%WDS.&VhN)b3(%(%^0%%%/%%L%0=81R4BSh10B>^z<tTRU5w]QMãU"x?Y+K&mu%Z*KY3&bG<+7i&[iqWk]]S?A4lQGoxDM6$8&b[ePRr?vOrhK7$H2Pe6ãEND SUBãSUB V2ãU"Gz,*.B1qj$.Fiir>HoKHC^A\.Hh2NgMO25G1/vg/8uV^o$oIb3K&Y?-6AMa?9'9ãU"Ds1/<cc]POd$4'ZYL[5:+n0WEQHN:hP7HNeMQZgjemu)=MB%\Ql]1W?6ZPf\<FfãU"5wAU(/IFy6;=do8n(QXq9X;:\dSLP)g&CchEDVo.iU2CkcGiE(P&4W8zaeeHIBpãU"huZT+ofn+.65j.OtWJ'&5mFNfAl^V)g.goMp$*#wAQV&:QNVfdINx^A>Fwf7<k0ãU"i(%YjM8Ce-\WY;nE>kRrvK8>'%JO)jDoHtp:]L8cwx)=1_s+;7xYDMc%h5C0hGPãU"(IMa6LaL-%p4)N$Oo$^]O)De=(SCVzTl\f4(:g_cdqhftf3u/B?E[/$j=XD'0ptãU"H3CFHlagTqAcLX2(uGkgw)gArEo/xk56=k=F^)I#,G-iCX$nPFepBtIr_e^Le=&ãU"P<xo)VJ2N2jIEhGW'0&Xm_Kd_IGY9aIH.JKIKUSn)+.*pXi)Z#FN9<D;4m''CpnãU"MJXbls*)%nw%(-A*U/-+9X/<k+Gav;s7_N^]?bAdBdEJgm+zRmn.\mlDUe:aRm?ãU"_MZc\wAx+xq#*'r$1;+BK+TQ1*mOm$Ic&4Jwye*jMRDJ?5SyD-Vf3b(?R_K^Ew7ãU"4L3F:_c[s0aMM8v.T,=+9SPu$opMmS-)89eW,2T1%=$0DN='z1B39jKoQ1<.2,^ãU"k8<(oSR5J&YQ(c7i+-*HhBTQqM:''WK_h*DDqKVZvd]wSlN^e_Xq#Zf.6G>U'(UãU"+R><&_<xZP;r;Cc:MlMa:'\H?XooAtBZ^#jtaJUG?$Fg=5.HhhF=+7:dr1S=lZeãU"\8QRD[t;ev'iHL>;/3K?,>E\:3*M,^\+cEWTtRpkK]xUTv[WT0Kt0<'I0o;\j6XãU"vOsSBB-%eyZ2hGO(foGmS?hCrfTS=;)-'k7(H4+sQ-IQoZJrCh7b[SX[o7[nk0,ãU"GGN1nWA3B;NI15ukwRaV<WyVyJz9\i4#3(.Z5<U[Mywpi)ldT9IZq)mu[c]V49BãU".u%p()9%%%%-L%?CSj&L&B)E5(%(%V0%%%/%%L%0=81R4=Sh10B>^z<tTRU5w]QãU"Mx?Y.Kvsw%Z*KYW&bCz\_=D?I+D$b_+*4Pa3/Xa?8XRs*Ss2TJdK\M$9FcXSBTHãU",to,LRJPt+u,qA5G3FAmbfnn]U-FgB\d*8?;71tZ1Fx:Yuk+BM84t0d+IS/h)XwãU"<.1NR8p\fK<)FaT1e1B_.iTCfLU[&/Q]XL5<i\4HamQ]g-p]Os70BPS*P*kz2kgãU"Z2\.a<L%Ip\p7K'azs=9%Cvp943'C^rt]lCZ<T'=EJm/5ZE6K(sXkCN-6EO4#b-ãU"_HIJXK(oPcXY<,FlFBYXY%&zjMog$AHp1FFpIr8sQ3XM]gVsH:wL=k8xlZ40bEGãU"X/WGjTP<s8._(#Fiit(]*:NC&??;D5oCEqA89Yg$5*w[Ot9/]%\ep*rxo-CIYN3ãU"Yp)aqZXyim#/,b;zA.MbNS?f);-f_w<W2)78q>z9MH><YC-2h0J\eQQgr2Rj%bBãU"Ud\8B->#sp7CCPxH\4;hA3Ph8#YSERv?hCjgu;6GJb$7u%Ha],X=:$Z/eKO1rC5ãU".nAIVqtA1P>_+Uld\G)*SHs<r7KEqDR90Yx2aUEU[Ii;MT?SaI&Ce/j*4)>7BOOãU"wUGa=c_5s)%n#w(-kC)?T(5d<wa2f0M3IwbkhqI]5K/pv,nM(DZc_CRiq2O'RCNãU"Oop]dB4eY3h1nN32:pZ\Q:VS]Y*\OF,Y3X_I8n7KcpK'%P+A*Vp9L#L5(e#kZlaãU"xO=nqJ\13jN8ZsvIHIxU5)[Q.O?xI6/[A#2O^W7W.gRXx,$i(q.=Ok.Y6[\5CM]ãU"=LACs[/y3va2z,9jvH1ZWLF6c9U/(b&>8;ll3_3u=jxLoN&b895A>NukpS]l<svãU"gOa/)T32k9AikRneZSgst73GntfnTTq*1'5,Kv+(8^#gad)8qoG(aS\ZDp$cHPNãU"IkTvK)4K\k\LuXn.h3Hwl',J)D4eJuF^cUqYDK31.zuDYF3s1C3%JQ3jDgH;>J>ãU"'iV\E;8SRTOs.%9e:i4#)uT<LRg<f#S)/'oS&-N$5,L%[)7,ibt:5S#4x\\eLKHãU"-^WZ\Ffi\h%eh2*Egq]i&fRB;SN^)t7uMKIF^oW$E<FsC?tyRRqdW60K0k9&L$hãU"umw%'up&%'9%9%%%%-%%%ES(Hf[')=W+%(%k=%%%.%%%%%%%%%%%E4%/P%%%%%lãU"%qtgj%Sfsn%up&'%9%9%%%%-%)/(=F?'P%D'=(%%&?T%%%/%%%%%%%%%%%E%</PãU"(+#%%jBM?4A0LS0=8%up&'%9%9%%%%-%%%%=Dc\jn$&m=%%)cd%%%.%%%%%%%%%ãU"%%E%3/Pj/#%%j91f=8S20=8u%p&'9%%9%%#%-%/A(=FpF%s8A%(%%w%E%%0%%%%ãU"%%%%%%[%E%/)P/H%I%uA>M24B>LS0=8%up&'%9%9%%%%-%1WDS&CVhNb&3(%%&^ãU"0%%%/%%%%%%%%%&%E%</PtKI%%0=J8R4BLS10B%up&'%9%9%%%%-%2?CS&WL&BEãU"&5(%%&V0%%%/%%%%%%%%%&%E%3/PVOI%%0=J8R4=LS10B%up*+%%%%%%+%+%%t&ãU"%%%:S%%%%%ãEND SUBãV2ãCLOSE:IF S=137AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!ãSUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32ãIF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1ãS=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUBãDaitau Aaron                   QHASH COMPONENT                daitau@hotmail.com             06-23-00 (18:31)       RAPIDQ                 118  2459     QHASH.BAS   ' QHash Componentã' ------------------------------------------------------ã' by Daitau Aaron (daitau@hotmail.com)ã'ã' This tries to imitate perl hash using QStringListã' Currently you may only assign simple strings as valuesãã$TYPECHECK ONããTYPE QHash EXTENDS QObjectãã  keys as QStringListã  values as QStringListã  pointer as integerãã  sub set (k as string, v as string)ã    WITH QHashã      dim l as integerã      l=.keys.indexof(k)ã      if l>0 thenã        .keys.delitems lã        .values.delitems lã      end ifã      .keys.additems kã      .values.additems vã    END WITHã  end subãã  function itemcount as integerã    WITH QHashã      Result=.keys.itemcountã    END WITHã  end functionãã  function get (k as string) as stringã    WITH QHashã      dim l as integerã      l=.keys.indexof(k)ã      if l>0 thenã        Result=.values.item(l)ã      elseã        Result=""ã      end ifã    END WITHã  end functionãã  function exists (k as string) as integerã    WITH QHashã      Result=(.keys.indexof(k)>0)ã    END WITHã  end functionãã  sub del (k as string)ã    WITH QHashã      dim l as integerã      l=.keys.indexof(k)ã      if l>0 thenã        .keys.delitems lã        .values.delitems lã      end ifã    END WITHã  end subãã  sub clearã    WITH QHashã      .keys.clearã      .values.clearã    END WITHã  end subãã  function key (i as integer) as stringã    WITH QHashã      Result=.keys.item(i)ã    END WITHã  end functionãã  function value (i as integer) as stringã    WITH QHashã      Result=.values.item(i)ã    END WITHã  end functionããEND TYPEããã' ------------------------------------------------------ã' example on how to use QHashã' ------------------------------------------------------ããdim header as QHashãã' set some keys and valuesãheader.set("Host","www.yahoo.com")ãheader.set("Date","12:37:44 GMT")ãheader.set("X-cache","yes")ãã' print out the whole thingãdim i as integerãfor i = 0 to header.itemcount-1ã  print header.key(i)+"="+header.value(i)ãnext iãã' retrieve value by keyãprintãprint "X-cache="+header.get("X-cache")ã' remove from hashãprint "delete X-cache..."ãheader.del "X-cache"ã' check for existenceãif header.exists("X-cache") thenã  print header.get("X-cache")ãelseã  print "X-cache does not exist"ãend ifã' clean the whole hashãprint "Clean the whole hash"ãheader.clearãprint "Host="+header.get("Host")ãRudy Elyn                      SOUND BLASTER OSCILOSCOPE      Rudy@vt4.net                   06-26-00 (17:33)       RAPIDQ                 75   4838     SBBAS.BAS   ' Sound Blaster OsciloscopeãDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2ãSUB V1:OPEN "O",1,"SBBAS.ZIP",4^6:Z&=3330:?STRING$(50,177);ãU"%up()%9%%%#-%(UoSMCo?tY1+.%%67%%%.%%%%xg%gfxS[gfx&h&:BS9A7vs4:xãU"ph,<O5Po%)jgD%ym,7CGaS7E,B3-RST(+?<Ig$\ak*Ml.NJA)7mOtb6.dJy)x.WãU"LLsCpX+5sqVNnSo>Pi0UGPt'V=1/R:,e9h:Qc[6<%m93JnG'sB:8=FmW+.^6)a.ãU"$Sr4)e$4J6k/ggca(c=j=:/[mNM<27]&U&,a3ZBiMjm]]<>,Er(8Z^il-/44^&TãU"mIa9B9OQnQe;<SeNY.8Hq;,.;NG5\90g.H:2H0hi?/Ja8A$kP&3Y'&uoiaI&68jãU".]$KHE7Aol_t9P\AZIp2+BleM7uw/NhQBpF2GqGe'O*IWGQV8CIr85bJ>yFyRUVãU"Cv<TPR/(;;l6h'cH?%anhjG'+:u^)>qmpswQ]VfS(plr_^BN0%M=P%H)u\0%$oFãU"*Jw?0#7L-s'3W+/7Hq2=jOn=KsNqy]ADpBG/^a'-*n<eraCDwYBd88EH<Di.(C=ãU"wN*:$HddiwDTnjaV_XQLLdM=SRH:3qu9=O=Xe(A3N(Wo-F(g[-H41Q0.Dp3&d:CãU"vJcdnO8DLYqa)ZnX*<=%<,X,s7W6IWB,5LcPKW)CoiM>cV^Q:HOwVZ#d.$(XR&pãU"6q.[:fmb?_Z7vW-==)YQI]6M[CVXH8g;2(*',j9ygJm1pj::W&2>(G786G^kp0vãU"guo6&vn7;FxH3]8K50Wo(:#Ba6p+o31#B=dz3Q7qKc*S[bs,H-^nYtc$U#fzU$oãU"uP$^R/U.'*kAE(.AiQdPm=mYqW^KV$g8v*3WZv:*j\]*\KEylb&LY&)e%2clr/=ãU"$4tGK]o6>RI5')J6VK7\J\rQC7Wv:j0t/tv8<5PH8/TDFW6W.&Qn8%9>k?Kn860ãU":n]LC[kTsbmV>&vD)-W>yiNm[e6/eSCgi+[$k48:rMeUc)f^RGuTI8\=K(.0rW)ãU"abae6_%5eB&6Mh>5r^P0+bqUEt8Lc-6c.k2(Jf.<Gj&gnAQ:bG-V6Wfl$_[:Fn5ãU":5b<HFxbzP%5PXt#5)J-DP59adr/j%Yz5oP'Id:)+j3.-]TS-Y-jRbDZVjbn;viãU"/nsWb0KSZi$<.$0+DwHK^uJeP'Krf#*l]ae*>%-iL+ZxB79o>+BDUAu)1L7)eXuãU"g%k?vwq#t&Jg5i%PL%zZG50COMj%:PF91>9R_^(9ibG?[akUCpUf&I1Re8$YhmAãU"G/ggNpepEEy';tD(7$/:zK$XLFrmq>v[Tl&s-v_95Zb(g]0GB;yh*K$oya_:LEPãU"rlmOlkmXFeYK$A%i.cr6h^QXd8]lP06pvqdYjnH'b7P&XqW7C8oj-lQlL<9XqYSãU"7EJIU50';v^mhda$N9/Hvb19k7_<H93Jt\81JumP4C?dH'PX0&uUj[34FSuX8=XãU";,K9K:P9<d0SZ7;q0*ho+JW<?p0-A[XNc6NM^7w:2-aI;kh6ekd#Epr29]Kh7^+ãU"tWOmtmhME>u'<I?d&>$KnZn?hP^cfW=2K^aa6F*d2k57Am/gfB.C+TWe\f;=qE2ãU">W(a$lFNJpdDi/d-26SU07%#=j$j#_m<[GK4>t<fg>?o$:8df^5+_5cM)%d$5yLãU",%uvhQ_rZnYis=%\uQUCZjV<f/>Y)4BrFpGPfh#14Rrr]&:jc(8H\%qGz4j,kr0ãU"BnQ^NDm'(Sp'Vnu'Jd2\BX,hgt^(p*dsZH,/qgMbEUMvtl^b**]UWtWh7t=wNJHãU"Ah+J?kw8)3N&OQUkZa(_15f%LqlF<;Nm7\,gtSv;bw.zM+B'Z9dvh5-%-buu4P9ãU"dA[9zZlKP^rrhEbu=;D5ojBEIQT8pgH7mrMP?bHc+#_hmbp-h*uI^o9%AnNZ.G8ãU"-UC;be$[j*oKr9qWhc.R&C#]D=xLkZFFjH8Dbo6$0$3Zw$X,ghG'*,WivThU6eJãU"6\DkUYgB4L$xXSolKj0et9A_oKKdhcbxqAVoCUVj$\jkLr3QP$''JRUNYH4ZMgHãU"CYo#8:b0tqnWQOp&n%dO\zard\LEa'Br?Z^8N4b7=\+1LEP93E/sbk'1d6pX\+2ãU"8N;piZ6;l6<)l\hu0h8[>22;TXWggdkHRh-=u-''F0s]dA(L1.Y?V#H[r%1Xhl)ãU"nHnkRr\-PKNM\Up'bNJ\M0K:q=iPRE81JZPbJw3Vdnu*Nsj,5mR3<?e]OuKf8GDãU"1ddU1]'E8V#\>=#3H7i/=CFRiiXTRJk^yA0M8m*$-Er(O>PDJ5W/0-6odu%p()9ãU"%%%%-g%3%S^MfOj&v6'%%%<-%%%/%%%%xgk%twrS[gfx&YdX(imU9#X5feNE?5iãU"+Qpucb<LCOZjL>-APZVrC^,=0.wpx9[wNt(ZAo-z5BRUVn?;wnh^9XC;YZklA'aãU"u/Vu3EG(I?bc\,i\?T>8e8S?\.2XbsOKI'hq*;C/j&4Zn5>xT0YhQLbR8mFBX3dãU",\JO(XsVrl?m46]RsW+%]J]>8F$V6wJbM8504A,MRq$1Kj5OglHt%5Ek:E(D)/#ãU"j<va[1ce0.Mi3d4\1uY*u\35W]CPVoU9X(8pThZiEcGuv,JljxHA:/dz[[%ruUnãU"2eT87N#Pn]mH]Wee0-Ot%o_wCKd1s]*:p6]+Y,:aU#_%WTa8A(1:J$X.z:GE7pPãU"Y,e8jr3'k:Xs;yqJpc)'Z1%_2;9HZ2EGgw0RQ\T1pNP0bS'8)JOBONO\ER)$G8^ãU"P\7uZEl]HAw/].S(z-uTSGPJu9=L2Pus7E'PJ70h\0t15q%M1le8a2Sr*\Cft5fãU"pk-'zRQ[#(C-X&vri1;?m6-EpBNj-;;2iy>zfPGF'.VIit_C]iIGvSfG*D^';P,ãU":9'A0rL/=Mm%[XMY2w03FOe4uDH(LXsjaMm6NgW%Q]16qp;x>tVG13Im^ZM7<-cãU"MXGBXJ+zMYtpTv3q-A5bP3ub0_M2=0\16Y43LZ?i:&I('2<#>M^ey'-fO/?O['#ãU"B8-V.+B?'>$D%up()%9%%%R-%FCTSMbc>8i_&%%%8*%%%.%%%%xg%qngS#gfxtLãU"w,>jde5K0-]xUTO2?#*,2NvzWRd)L#3mS].%LLJ*_1uV=<:2D6x7Jl5?9A8mz^bãU"Y8C$,Xp$/mXH-3Br(4V<Aa6fwe[^C3r)%uGT'Z?d^SEg[pU5JQ(DU(yu_*;jEcZãU"lM_9>,VE#q]i$cgKaC.5B3G(/sJV-qhMLL9=H$^iKl)).xqENboX^bTQ:J%CkE3ãU"2HKnjetICE+JP;1U*I\KlVGA\fFhFf0:RR>9e%'<W+:_Rqe#x$5kF=,F0p#Qh(4ãU"T#72?NM(+MH/AXNSaEJ7m&a2a9hXR32B]U:hhhWl7i$$p.T2*oFgUUXJ=B+MDL2ãU"-Ax/-gky%Yp<5u>$\jwBBMpF<E*Ipdtb<iB4BOoCsT5\VW9JE4q(s9ES0$nfnK;ãU"t02?wi_e:Dl0iBhFit:'<XF792ZX<lcRFy'y'r9/^WPV$3VD8kd?)/v9#OfKy2>ãU"d5jPD6j-Yz,<-sST3%6Na#.qz$^+nuNJc%#AHxFSRO/9F#nLQ-L=S06oBs0tlHPãU"-+l&c)%uc25?Z[=C:)94=ceN(:a0#K=c;3Wt.Jnr:[$xNZuErfc+s-Oiq[E)8hFãU"YwSDvumMm0OykrraiLn0+bQa%joOtL%QpIq-w%'up(%)9%%#%-%yazSMo$O5.<[ãU"%%%w%'%%.%%%%x%nszx%Snht<>$*3';E9j>n=&(=sG]r7K1v*jd&nMZ)W:Mq]2<ãU"S+&X(n$*uV32GP-3Af%*q8R9$sGs3#qH,qji_bEJF&^^#1Wf7Ad2Upg;9bqLIB'ãU"HN&1oxg;7BwWOi+25<$R;oUW+$qTit>H'#l+E.)*BTAkirOl^2F5<oCWP*.4P6hãU"b,8hR5Rea(5(chT_p0Ds.*JwA%6?kDCbs8m-$#RWskV1kCQJ&2TvPB(uqptRc6(ãU"Gtt8wo66WWBH-s,Cu%p&'9%%9%%%%-%(bUSMCuotY1#+%%6%7%%.%%%%%%%%%&%ãU"%E%%%%%%%%%xgg%fxSg%fxup%&'9%%9%%%I-%3%0SMfO*jv6'%%%<-%%%/%%%%%ãU"%%%%&%%E%%%'X+%%%xgkt%wrSg%fxup%&'9%%9%%%R-%FCTSMbc>8i_&%%%8*%%ãU"%.%%%%%%%%%&%%E%%%%=.%%%xgqn%gSgf%xup&%'9%9%%%%-^%yzSXMoO5+.<%%ãU"+%w'%%%.%%%%%%%%%%%E%%%%J%0%%x%nszx%Snht%up*+%%%%%%)%)%'V%%%%41ãU"%%%%%ãEND SUBãCLOSE:IF S=42AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!ãSUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32ãIF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1ãS=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUBãGerome Guillemin               A FRONT-END PROGRAM FOR BC FILEgguillemin@bvrp.com            06-15-00 (10:54)       RAPIDQ                 71   2699     BOOSTA.BAS  ' R A P I D - Q  B O O S T Aãã'/////////////////////////////////////////////////////////////////////////////////////////////////ã'   Rapid-Q Boosta is a tiny Front-End to Rapid-Q's BC files !ã'   -Purpose : using BC files compiled in mode RC -bã'   rather than always making Big EXE's with Rapid-Qã'   You can change code for your pleasure and use itã'   but if you use these routines, please mention theã'   author somewhere in your documentation :)ã'   -Thanks to William Yu for his great RapidQ Compilerã'   -Creation time 06-15-2000 by Gerome GUILLEMINã'   http://gedd123.free.fr (Some of my Freewares)ã'   mailto: gedd123@free.fr for any comments/bugs/improvementsã'   -Compiled with the Rapid-Q version of 09-06-2000ã'   -Needed file to run this Front-End: Rapidq32.dllã'ã'              * * * I M P O R T A N T ! * * *ã'   -As in Rapid-Q, Command$(x) always starts at 1, please note, in the BAS filesã'   turned into BC files, you'll have to note Command$(1) will be in fact Command$(2) !ã'   -Up to 9 command$(x) supported : Command$(2) to Command$(10)ã'   -Nota : when you compile 'File.bas -b', do not forget in your tests that Command$(1) isã'   in fact Command$(2) and so on...It can be more if you want... :)ã'   -This .BAS file have to be Compiled with RC with no parameters (to make an EXE at 1st)ã'   then, enjoy BC files ;)ã'ã'/////////////////////////////////////////////////////////////////////////////////////////////////ãã'Options for the Compilerã  $AppType GUIã  $TypeCheck ONã  $Optimize ONã  $include "RapidQ.inc"ãã' User's Variablesã  DIM szBCFile as STRINGã  ãIf Command$(1) = "/REG" then '(Must be launched once with '/REG' parameter to activate file association in the Registry !)ãã  'Declaration to execute '.BC' filesã  DECLARE FUNCTION RQ_ExecuteFile LIB "RAPIDQ32.DLL" ALIAS "RQ_ExecuteFile" (FileName AS STRING) AS LONGãã  Const HKEY_CLASSES_ROOT = &H80000000ã  'Const HKEY_LOCAL_MACHINE = &H80000002ãã'To be done in the Registry:ã  'HKEY_CLASSES_ROOT\BCFile = Rapid-Q Boostaã  'HKEY_CLASSES_ROOT\.bc = BCFileãã  DIM Registry AS QRegistryã  DIM szCmd as STRINGãã'Name & path of the executable  ã  szCmd = Command$(0) + " %1 %2 %3 %4 %5 %6 %7 %8 %9 %10"ãã' Associate BC files to this file once turned into executableã  Registry.RootKey = HKEY_CLASSES_ROOTã  Registry.OpenKey("\.bc", 1)ã  Registry.WriteString("","BCFile")ãã  Registry.OpenKey("\BCFile", 1)ã  Registry.WriteString("","Rapid-Q Boosta")ã  Registry.OpenKey("shell\open\command", 1)ã  Registry.WriteString("",szCmd)ããElseãã'Association is done ?, OK then... execute Code !ã  szBCFile = command$(1)ã  RQ_ExecuteFile(szBCFile)ã  ãEnd IfãGerome Guillemin               READ & WRITE INI FILES         gguillemin@bvrp.com            06-28-00 (18:14)       RAPIDQ                 54   2339     READINI.BAS '///////////////////// BEGIN ////////////////////////////////ãã' PURPOSE : Writing & reading with Ease into an INI Fileã' Originally issued from a VB Sample ã' Turned into Rapid-Q's way of life by Gerome GUILLEMINã' - http://gedd123.free.fr - mailto : gedd123@free.fr -ã'June 29th 2000ã'Feel Free to use this Code -ã'This Code is dedicated to the Rapid-Q's Community and all lovers of Basic Code !ã'Please Mention the '@' character to avoid an empty value (Byval needs this sometimes)ãã$TypeCheck ONã$Define MAX_PATH 260ãã'API declarationsãDeclare Function GetPrivateProfileString Lib "Kernel32" Alias "GetPrivateProfileStringA" _ã (ByVal lpApplicationName As String, ByVal lpKeyName As String, _ã ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As LongããDeclare Function WritePrivateProfileString Lib "Kernel32" Alias "WritePrivateProfileStringA" _ã (ByVal lpApplicationName$, ByVal lpKeyName As String, lpString As String, ByVal lpFileName$) As Longãã'User's VariablesãDim iLenght As IntegerãDim szReturn As StringãDim svReturn as StringãDim szReturned as StringãszReturned = Space$(MAX_PATH) 'Dimension a bufferãã'Main Function to GET information into an INI FileãFunction GetIni(szSection As String, svVariant As String, szFile As String) As Stringã        iLenght = GetPrivateProfileString(szSection, svVariant, "", @szReturned, MAX_PATH, szFile)ã        szReturned = Left$(szReturned, iLenght)ã        GetIni = szReturnedãEnd Functionãã'Main Function to WRITE information from an INI FileãFunction WriteIni(szSection As String, svVariant As String, svValue As String, szFile As String) As Integerã        WritePrivateProfileString szSection, svVariant, svValue, szFileãEnd Functionãã'To Write into your Favourite INI File you ca use these 2 wayz...ã        iLenght = WriteIni("Header", "Title", "Valuez", "c:\MyINI.ini")ã        'or...ã        call WriteIni("Header", "Title", "Valuez", "c:\MyINI.ini")ã        Sleep 1 '... after that it'll be time to read !ã'To read a Value OR a String in an INI File, you just have to type this :)ã        svReturn = GetIni("Header", "Title", "c:\MyINI.ini")ã        ShowMessage svReturnãã'Ciao bye-bye :)ãApplication.Terminateãã'///////////////////////// END ////////////////////ãThe ABC Programmer             OWNERDRAW MENU ITEMS           voxel@edmc.net                 06-29-00 (00:00)       RAPIDQ                 202  6295     MENUITEM.BAS' Ownerdrawn MenuItems, very tricky, not everything you expect will beã' available.  You can choose to put whatever you want in your menu items.ã' Created by William Yu for Rapid-Qãã$TYPECHECK ONã$INCLUDE "RAPIDQ.INC"ããCONST ODT_MENU = 1ããCONST ODS_SELECTED = 1ãCONST ODS_GRAYED = 2ãCONST ODS_DISABLED = 4ãCONST ODS_CHECKED = 8ãCONST ODS_FOCUS = &H10ãCONST ODS_DEFAULT = &H20ãCONST ODS_COMBOBOXEDIT = &H1000ããCONST WM_DRAWITEM = &H2BãCONST WM_MEASUREITEM = &H2CããCONST MF_BYCOMMAND = 0ãCONST MF_BYPOSITION = &H400ãCONST MF_OWNERDRAW = &H100ããCONST MF_STRING = 0ãCONST MF_BITMAP = 4ããTYPE TMEASUREITEMSTRUCTã    CtlType AS LONGã    CtlID AS LONGã    itemID AS LONGã    itemWidth AS LONGã    itemHeight AS LONGã    itemData AS DWORDãEND TYPEããTYPE TDRAWITEMSTRUCTã    CtlType AS LONGã    CtlID AS LONGã    itemID AS LONGã    itemAction AS LONGã    itemState AS LONGã    hwndItem AS LONGã    hDC AS LONGã    left AS LONGã    top AS LONGã    right AS LONGã    bottom AS LONGã    itemData AS DWORDãEND TYPEããDIM MeasureItem AS TMEASUREITEMSTRUCTãDIM DrawItem AS TDRAWITEMSTRUCTãDIM Mem AS QMEMORYSTREAMãDIM Bitmap AS QBITMAPãDIM Font AS QFONTãDIM I AS INTEGERãDIM S AS STRINGãããDECLARE FUNCTION ModifyMenu LIB "USER32" ALIAS "ModifyMenuA" _ã                 (hMenu AS LONG, uPosition AS LONG, uFlags AS LONG, _ã                  uIDNewItem AS LONG, lpNewItem AS LONG) AS LONGããDECLARE SUB FormWndProc (Hwnd&, uMsg&, wParam&, lParam&)ãããSUB MenuItemClick (Sender AS QMENUITEM)ã    ShowMessage("Thanks for clicking " + Sender.Caption)ãEND SUBãããDIM MenuItem(100) AS QMenuItemããCREATE Form AS QFormã  Centerã  Caption = "Ownerdraw Menus"ã  CREATE MainMenu AS QMainMenuã    CREATE FileMenu AS QMenuItemã      Caption = "&File"ã      CREATE OpenItem AS QMenuItemã        Caption = "&Open"ã        Hint = "Open"ã      END CREATEã      CREATE ReOpenItem AS QMenuItemã        Caption = "&ReOpen"ã        CREATE I1 AS QMenuItemã          Caption = "Item &1"ã          Hint = "Item 1"ã        END CREATEã        CREATE I2 AS QMenuItemã          Caption = "Item &2"ã        END CREATEã        CREATE I3 AS QMenuItemã          Caption = "Item &3"ã        END CREATEã      END CREATEã      CREATE BreakItem AS QMenuItemã        Caption = "-"ã      END CREATEã      CREATE ExitItem AS QMenuItemã        Caption = "E&xit"ã      END CREATEã    END CREATEã    CREATE EditMenu AS QMenuItemã      Caption = "&Edit"ã    END CREATEã    CREATE SearchMenu AS QMenuItemã      Caption = "&Search"ã    END CREATEã  END CREATEã  WndProc = FormWndProcãEND CREATEããFOR I = 1 to 10ã  MenuItem(I).Caption = "Item &" + STR$(I)ã  MenuItem(I).OnClick = MenuItemClickã  EditMenu.AddItems(MenuItem(I))ãNEXTãã'-- Change some properties of our menu itemsãFOR I = 1 to 10ã  S = MenuItem(I).Captionã  ModifyMenu(EditMenu.Handle, MenuItem(I).MenuIndex, _ã             mf_ByPosition OR mf_OwnerDraw, MenuItem(I).Command, VARPTR(S))ãNEXTããForm.ShowModalããããSUB FormWndProc (Hwnd&, uMsg&, wParam&, lParam&)ã    IF uMsg& = WM_MEASUREITEM THENã       Mem.Position = 0ã       '--ã       '-- lParam& is a pointer to the TMeasureItem structureã       '--ã       Mem.MemCopyFrom(lParam&, SIZEOF(MeasureItem))ã       Mem.Position = 0ã       '--ã       '-- After we copy it we have to read the structureã       '--ã       Mem.ReadUDT(MeasureItem)ã       IF MeasureItem.CtlType = ODT_MENU THENã          '-- There are other types, such as listboxes, etc. that weã          '-- want to avoid.ã          MeasureItem.itemWidth = 80      '-- Should be big enough to fitã          MeasureItem.itemHeight = 18     '-- your items.ã          Mem.Position = 0ã          Mem.WriteUDT(MeasureItem)       '-- Write structure back to memoryã          Mem.Position = 0ã          '--ã          '-- Copy this structure back to the original address, soã          '-- changes can take effectã          '--ã          Mem.MemCopyTo(lParam&, SIZEOF(MeasureItem))ã       END IFã    ELSEIF uMsg& = WM_DRAWITEM THENã       Mem.Position = 0ã       Mem.MemCopyFrom(lParam&, SIZEOF(DrawItem))ã       Mem.Position = 0ã       Mem.ReadUDT(DrawItem)ã       IF DrawItem.CtlType = ODT_MENU THENã          Bitmap.Handle = DrawItem.hDCã          IF (ODS_SELECTED AND DrawItem.itemState) <> 0 THENã             Bitmap.FillRect(DrawItem.left,DrawItem.top,DrawItem.right,DrawItem.bottom, &H009900)ã             Bitmap.Circle(DrawItem.left,DrawItem.top+1,16,DrawItem.top+16, clHiLight, clHiLight)ã             S = VARPTR$(DrawItem.itemData)ã             I = INSTR(S, "&")ã             IF I THENã                Bitmap.TextOut(DrawItem.left+25,DrawItem.top+3,LEFT$(S, I-1),clWhite,-1)ã                Font.AddStyles(fsUnderline)ã                Bitmap.Font = Fontã                Bitmap.TextOut(DrawItem.left+25+Bitmap.TextWidth(LEFT$(S, I-1)),DrawItem.top+3,MID$(S, I+1, 1),clWhite,-1)ã                Font.DelStyles(fsUnderline)ã                Bitmap.Font = Fontã                S = S - "&"ã                Bitmap.TextOut(DrawItem.left+25+Bitmap.TextWidth(LEFT$(S, I)),DrawItem.top+3,MID$(S, I+1, LEN(S)),clWhite,-1)ã             ELSEã                Bitmap.TextOut(DrawItem.left+25,DrawItem.top+3,S,clWhite,-1)ã             END IFã          ELSEã             Bitmap.FillRect(DrawItem.left,DrawItem.top,DrawItem.right,DrawItem.bottom, clMenu)ã             Bitmap.Circle(DrawItem.left,DrawItem.top+1,16,DrawItem.top+16, 0, 0)ã             S = VARPTR$(DrawItem.itemData)ã             I = INSTR(S, "&")ã             IF I THENã                Bitmap.TextOut(DrawItem.left+25,DrawItem.top+3,LEFT$(S, I-1),0,-1)ã                Font.AddStyles(fsUnderline)ã                Bitmap.Font = Fontã                Bitmap.TextOut(DrawItem.left+25+Bitmap.TextWidth(LEFT$(S, I-1)),DrawItem.top+3,MID$(S, I+1, 1),0,-1)ã                Font.DelStyles(fsUnderline)ã                Bitmap.Font = Fontã                S = S - "&"ã                Bitmap.TextOut(DrawItem.left+25+Bitmap.TextWidth(LEFT$(S, I)),DrawItem.top+3,MID$(S, I+1, LEN(S)),0,-1)ã             ELSEã                Bitmap.TextOut(DrawItem.left+25,DrawItem.top+3,S,0,-1)ã             END IFã          END IFã       END IFã    END IFãEND SUBãThe ABC Programmer             PURE WINDOWS USING API CALLS   voxel@edmc.net                 06-29-00 (00:00)       RAPIDQ                 213  6324     PUREWND.BAS ' Pure Windowsã' Uses only Window's API calls to create windowsããã$TYPECHECK ONã$INCLUDE "RAPIDQ.INC"ãã'-- Some Standard Cursor IDsãCONST IDC_ARROW = 32512ãCONST IDC_IBEAM = 32513ãCONST IDC_WAIT = 32514ãCONST IDC_CROSS = 32515ãCONST IDC_UPARROW = 32516ãCONST IDC_SIZE = 32540ãCONST IDC_ICON = 32541ãCONST IDC_SIZENWSE = 32542ãã'-- Standard Icon IDsãCONST IDI_APPLICATION = 32512ãCONST IDI_HAND = 32513ãCONST IDI_QUESTION = 32514ãCONST IDI_EXCLAMATION = 32515ãCONST IDI_ASTERISK = 32516ãCONST IDI_WINLOGO = 32517ãã'-- Class StylesãCONST CS_VREDRAW = 1ãCONST CS_HREDRAW = 2ãCONST CS_KEYCVTWINDOW = 4ãCONST CS_DBLCLKS = 8ãCONST CS_OWNDC = &H20ãCONST CS_CLASSDC = &H40ãCONST CS_PARENTDC = &H80ãCONST CS_NOKEYCVT = &H100ãCONST CS_NOCLOSE = &H200ãCONST CS_SAVEBITS = &H800ãCONST CS_BYTEALIGNCLIENT = &H1000ãCONST CS_BYTEALIGNWINDOW = &H2000ãCONST CS_GLOBALCLASS = &H4000ãCONST CS_IME = &H10000ããCONST CW_USEDEFAULT = &H80000000ãã'-- Window stylesãCONST WS_CAPTION = &HC00000ãCONST WS_CHILD = &H40000000ãCONST WS_VISIBLE = &H10000000ãCONST WS_BORDER = &H800000ãCONST WS_SYSMENU = &H80000ãCONST WS_THICKFRAME = &H40000ãCONST WS_SIZEBOX = WS_THICKFRAMEãCONST WS_CLIPCHILDREN = &H2000000ããCONST WS_MINIMIZEBOX = &H20000ãCONST WS_MAXIMIZEBOX = &H10000ãããCONST WS_EX_DLGMODALFRAME = 1ãCONST WS_EX_NOPARENTNOTIFY = 4ãCONST WS_EX_TOPMOST = 8ãCONST WS_EX_ACCEPTFILES = &H10ãCONST WS_EX_TRANSPARENT = &H20ãCONST WS_EX_MDICHILD = &H40ãCONST WS_EX_TOOLWINDOW = &H80ãCONST WS_EX_WINDOWEDGE = &H100ãCONST WS_EX_CLIENTEDGE = &H200ãCONST WS_EX_CONTEXTHELP = &H400ããCONST WS_EX_RIGHT = &H1000ãCONST WS_EX_LEFT = 0ãCONST WS_EX_RTLREADING = &H2000ãCONST WS_EX_LTRREADING = 0ãCONST WS_EX_LEFTSCROLLBAR = &H4000ãCONST WS_EX_RIGHTSCROLLBAR = 0ããCONST WS_EX_CONTROLPARENT = &H10000ãCONST WS_EX_STATICEDGE = &H20000ãCONST WS_EX_APPWINDOW = &H40000ãã'-- Button stylesãCONST BS_PUSHBUTTON = 0ãCONST BS_DEFPUSHBUTTON = 1ãCONST BS_CHECKBOX = 2ãCONST BS_AUTOCHECKBOX = 3ãCONST BS_RADIOBUTTON = 4ãCONST BS_3STATE = 5ãCONST BS_AUTO3STATE = 6ãCONST BS_GROUPBOX = 7ãCONST BS_USERBUTTON = 8ãCONST BS_AUTORADIOBUTTON = 9ãCONST BS_OWNERDRAW = 11ãCONST BS_LEFTTEXT = &H20ãCONST BS_TEXT = 0ãCONST BS_ICON = &H40ãCONST BS_BITMAP = &H80ãCONST BS_LEFT = &H100ãCONST BS_RIGHT = &H200ãCONST BS_CENTER = 768ãCONST BS_TOP = &H400ãCONST BS_BOTTOM = &H800ãCONST BS_VCENTER = 3072ãCONST BS_PUSHLIKE = &H1000ãCONST BS_MULTILINE = &H2000ãCONST BS_NOTIFY = &H4000ãCONST BS_FLAT = &H8000ãCONST BS_RIGHTBUTTON = BS_LEFTTEXTãããCONST WM_DESTORY = 2ãããããTYPE TWNDCLASSEXã    cbSize AS LONGã    style AS LONGã    lpfnWndProc AS LONGã    cbClsExtra AS LONGã    cbWndExtra AS LONGã    hInstance AS LONGã    hIcon AS LONGã    hCursor AS LONGã    hbrBackground AS LONGã    lpszMenuName AS LONGã    lpszClassName AS LONGã    hIconSm AS LONGãEND TYPEããTYPE TMSGã    hwnd AS LONGã    message AS LONGã    wParam AS LONGã    lParam AS LONGã    time AS DWORDã    x as LONGã    y as LONGãEND TYPEããDECLARE FUNCTION RegisterClassEx LIB "USER32" ALIAS "RegisterClassExA" _ã                 (WndClass AS TWNDCLASSEX) AS WORDãDECLARE FUNCTION GetMessage LIB "USER32" ALIAS "GetMessageA" _ã                 (lpMsg AS TMSG, hWnd AS LONG, wMsgFilterMin AS LONG, _ã                  wMsgFilterMax AS LONG) AS LONGãDECLARE FUNCTION LoadCursor LIB "USER32" ALIAS "LoadCursorA" _ã                 (hInst AS LONG, lpCursorName AS LONG) AS LONGãDECLARE FUNCTION LoadIcon LIB "USER32" ALIAS "LoadIconA" _ã                 (hInst AS LONG, lpIconName AS LONG) AS LONGãDECLARE FUNCTION CreateWindowEx LIB "USER32" ALIAS "CreateWindowExA" _ã                 (ExStyle&, ClassName$, WindowName$, Style&, X&, Y&, _ã                  Width&, Height&, WndParent&, hMenu&, hInstance&, Param&) AS LONGãDECLARE FUNCTION UpdateWindow LIB "USER32" ALIAS "UpdateWindow" _ã                 (hWnd AS LONG) AS LONGãDECLARE FUNCTION DefWindowProc LIB "USER32" ALIAS "DefWindowProcA" _ã                 (hWnd AS LONG, Msg AS LONG, wParam AS LONG, lParam AS LONG) AS LONGãDECLARE FUNCTION PostQuitMessage LIB "USER32" ALIAS "PostQuitMessage" _ã                 (nExitCode AS LONG) AS LONGãDECLARE FUNCTION TranslateMessage LIB "USER32" ALIAS "TranslateMessage" _ã                 (lpMsg AS TMSG) AS LONGãDECLARE FUNCTION DispatchMessage LIB "USER32" ALIAS "DispatchMessageA" _ã                 (lpMsg AS TMSG) AS LONGãããDIM WndClassEx AS TWNDCLASSEXãDIM Msg AS TMSGããDEFSTR ClassName$ = "RapidQ"ãDEFINT Handle, ChildHandle, Button1, Label1, Edit1ããFUNCTION WindowProc (hWnd AS LONG, uMsg AS LONG, wParam AS LONG, lParam AS LONG) AS LONGã    Result = DefWindowProc(hWnd, uMsg, wParam, lParam)ã    IF uMsg = WM_DESTORY THENã       PostQuitMessage(0)ã    END IFãEND FUNCTIONãããWITH WndClassExã    .cbSize = SIZEOF(WndClassEx)ã    .style = CS_CLASSDC or CS_PARENTDCã    .lpfnWndProc = CODEPTR(WindowProc)ã    .cbClsExtra = 0ã    .cbWndExtra = 0ã    .hInstance = Application.hInstanceã    .hbrBackground = clBtnFace + 1ã    .lpszMenuName = 0ã    .lpszClassName = VARPTR(ClassName$)ã    .hCursor = LoadCursor(0, IDC_CROSS)ã    .hIcon = LoadIcon(0, IDI_WINLOGO)ã    .hIconSm = LoadIcon(0, IDI_WINLOGO)ãEND WITHããRegisterClassEx(WndClassEx)ããHandle = CreateWindowEx(0, ClassName$, "Pure Rapid-Q", _ã                        WS_CLIPCHILDREN OR WS_VISIBLE OR WS_SIZEBOX OR WS_CAPTION OR WS_SYSMENU OR WS_MINIMIZEBOX OR WS_MAXIMIZEBOX, _ã                        CW_USEDEFAULT, CW_USEDEFAULT, 320, 240, _ã                        0, 0, Application.hInstance, 0)ããChildHandle = CreateWindowEx(WS_EX_MDICHILD, ClassName$, "Pure Rapid-Q", _ã                        WS_CHILD OR WS_VISIBLE OR WS_SIZEBOX OR WS_CAPTION OR WS_SYSMENU OR WS_MINIMIZEBOX OR WS_MAXIMIZEBOX, _ã                        CW_USEDEFAULT, CW_USEDEFAULT, 200, 200, _ã                        Handle, 0, Application.hInstance, 0)ãããButton1 = CreateWindowEx(WS_EX_WINDOWEDGE, "Button", "OK", WS_CHILD OR WS_VISIBLE OR WS_BORDER OR BS_PUSHLIKE OR BS_TEXT, _ã                         216, 8, 75, 25, Handle, 0, Application.hInstance, 0)ããUpdateWindow(Handle)ããWHILE (GetMessage(Msg, 0, 0, 0))    '-- Main message loopã    TranslateMessage(Msg)ã    DispatchMessage(Msg)ãWENDãStephan Verrips                ACCESSING LPT PORT             Stephan@verrips.com            05-31-00 (10:25)       RAPIDQ                 470  10018    LPTPORT.BAS '***********************************************ã'* LPTport for Windows 95/98 and Linux         *ã'*                                             *ã'* Written by Stephan Verrips,                 *ã'* The netherlands                             *ã'*                                             *ã'* This program is public domain !             *ã'*                                             *ã'* You can use this program for making         *ã'* a interface card on the LPT port.           *ã'* Pen 18 = massa                              *ã'*                                             *ã'* Example:                                    *ã'*                                             *ã'* Switch D0 - pen 2 on with this              *ã'* program, then Pen 2 (D0) and pen 18 (Massa) *ã'* are 5 volt DC                               *ã'*                                             *ã'*     Pen 2--------- +5v ---------pen 18      *ã'***********************************************ããDECLARE SUB pen1ãDECLARE SUB pen2ãDECLARE SUB pen3ãDECLARE SUB pen4ãDECLARE SUB pen5ãDECLARE SUB pen6ãDECLARE SUB pen7ãDECLARE SUB pen8ãDECLARE SUB pen9ãDECLARE SUB pen10ãDECLARE SUB pen11ãDECLARE SUB pen12ãDECLARE SUB pen13ãDECLARE SUB pen14ãDECLARE SUB pen15ãDECLARE SUB pen16ãDECLARE SUB pen17ãDECLARE SUB readyããDECLARE SUB statusããDECLARE SUB P378ãDECLARE SUB P3BCãDECLARE SUB P278ããDIM Timer1 as QTimerãDIM port AS INTEGERãã'***************ã'* Create Form *ã'***************ããCREATE Form AS QFORMã    Caption = "LPTport for Windows"ã    Width = 271ã    Height = 387ã    Centerã    CREATE Label1 AS QLABELã        Caption = "OUTPUTS"ã        Left = 21ã        Top = 10ã        Width = 52ã        Transparent = 1ã    END CREATEã    CREATE Label2 AS QLABELã        Caption = "LPT PORT"ã        Left = 142ã        Top = 10ã        Width = 52ã        Transparent = 1ã    END CREATEã    CREATE Label3 AS QLABELã        Caption = "INPUTS"ã        Left = 142ã        Top = 130ã        Width = 42ã        Transparent = 1ã    END CREATEã    CREATE RadioButton2 AS QRADIOBUTTONã        Caption = "LP&T2 - H3BC"ã        OnClick= P3BCã	  Left = 142ã        Top = 70ã        TabOrder = 1ã    END CREATEã    CREATE CheckBox1 AS QCHECKBOXã        Caption = "D&0 - pen 2"ã	   OnClick = pen2ã        Left = 21ã        Top = 49ã        TabOrder = 3ã    END CREATEã    CREATE CheckBox2 AS QCHECKBOXã        Caption = "D&1 - pen 3"ã	  OnClick = pen3ã        Left = 21ã        Top = 72ã        TabOrder = 4ã    END CREATEã    CREATE CheckBox3 AS QCHECKBOXã        Caption = "D&2 - pen 4"ã	  OnClick = pen4ã        Left = 21ã        Top = 95ã        TabOrder = 5ã    END CREATEã    CREATE CheckBox4 AS QCHECKBOXã        Caption = "D&3 - pen 5"ã	  OnClick = pen5ã        Left = 21ã        Top = 118ã        TabOrder = 6ã    END CREATEã    CREATE CheckBox5 AS QCHECKBOXã        Caption = "D&4 - pen 6"ã	  OnClick = pen6ã        Left = 21ã        Top = 143ã        TabOrder = 7ã    END CREATEã    CREATE CheckBox6 AS QCHECKBOXã        Caption = "D&5 - pen 7"ã	  OnClick = pen7ã        Left = 21ã        Top = 167ã        TabOrder = 8ã    END CREATEã    CREATE CheckBox7 AS QCHECKBOXã        Caption = "D&6 - pen 8"ã	  OnClick = pen8ã        Left = 21ã        Top = 191ã        TabOrder = 9ã    END CREATEã    CREATE CheckBox8 AS QCHECKBOXã        Caption = "D&7 - pen 9"ã	  OnClick = pen9ã        Left = 21ã        Top = 216ã        TabOrder = 10ã    END CREATEã    CREATE CheckBox9 AS QCHECKBOXã        Caption = "&Strobe - pen 1"ã	  OnClick = pen1ã        Left = 21ã        Top = 252ã        TabOrder = 11ã    END CREATEã    CREATE CheckBox10 AS QCHECKBOXã        Caption = "&Auto F - pen 14"ã	  OnClick = pen14ã        Left = 21ã        Top = 275ã        TabOrder = 12ã    END CREATEã    CREATE CheckBox11 AS QCHECKBOXã        Caption = "&Init - pen 16"ã	  OnClick = pen16ã        Left = 21ã        Top = 297ã        TabOrder = 13ã    END CREATEã    CREATE CheckBox12 AS QCHECKBOXã        Caption = "Sel I&n - pen 17"ã	  OnClick = pen17ã        Left = 21ã        Top = 322ã        TabOrder = 14ã    END CREATEã    CREATE CheckBox13 AS QCHECKBOXã        Caption = "C Error - pen 15"ã        Left = 142ã        Top = 168ã        TabOrder = 15ã    END CREATEã    CREATE CheckBox14 AS QCHECKBOXã        Caption = "C Sel - pen 13"ã        Left = 142ã        Top = 191ã        TabOrder = 16ã    END CREATEã    CREATE CheckBox15 AS QCHECKBOXã        Caption = "C Pe - pen 12"ã        Left = 142ã        Top = 214ã        TabOrder = 17ã    END CREATEã    CREATE CheckBox16 AS QCHECKBOXã        Caption = "C Ack - pen 10"ã        Left = 142ã        Top = 238ã        TabOrder = 18ã    END CREATEã    CREATE Button1 AS QBUTTONã        Caption = "&Ready"ã	  OnClick = readyã        Left = 142ã        Top = 316ã        TabOrder = 19ã    END CREATEã    CREATE RadioButton3 AS QRADIOBUTTONã        Caption = "LPT3 - &H278"ã        OnClick= P278ã        Left = 142ã        Top = 94ã        TabOrder = 2ã    END CREATEã    CREATE RadioButton1 AS QRADIOBUTTONã        Caption = "&LPT1 - H378"ã        OnClick= P378ã        Left = 142ã        Top = 46ã    END CREATEã    CREATE CheckBox17 AS QCHECKBOXã        Caption = "C Busy - pen 11"ã        Left = 142ã        Top = 264ã        TabOrder = 20ã    END CREATEãEND CREATEãã'******************ã'* Strobe - pen 1 *ã'******************ããSUB pen1ã    IF CheckBox9.Checked THENã       OUT port+2, (INP(port+2) AND 254)ã    ELSE  ã       OUT port+2, (INP(port+2) OR 1)ã    END IFãEND SUBãã'*******************ã'* Auto F - pen 14 *ã'*******************ããSUB pen14ã    IF CheckBox10.Checked THENã       OUT port+2, (INP(port+2) AND 253)ã    ELSE	ã       OUT port+2, (INP(port+2) OR 2)ã    END IFãEND SUBãã'*****************ã'* Init - pen 16 *ã'*****************ããSUB pen16ã    IF CheckBox11.Checked THENã       OUT port+2, (INP(port+2) OR 4)ã    ELSE	ã       OUT port+2, (INP(port+2) AND 251)ã    END IFãEND SUBãã'*******************ã'* Sel In - pen 17 *ã'*******************ããSUB pen17ã    IF CheckBox12.Checked THENã       OUT port+2, (INP(port+2) AND 247)ã    ELSE	ã       OUT port+2, (INP(port+2) OR 8)ã    END IFãEND SUBãã'**************ã'* D0 - pen 2 *ã'**************ããSUB pen2ã    IF CheckBox1.Checked THENã       OUT port, (INP(port) OR 1)ã    ELSE	ã       OUT port, (INP(port) AND 254)ã    END IFãEND SUBãã'**************ã'* D1 - pen 3 *ã'**************ããSUB pen3ã    IF CheckBox2.Checked THENã       OUT port, (INP(port) OR 2)ã    ELSE	ã       OUT port, (INP(port) AND 253)ã    END IFãEND SUBãã'**************ã'* D2 - pen 4 *ã'***************ããSUB pen4ã    IF CheckBox3.Checked THENã       OUT port, (INP(port) OR 4)ã    ELSE	ã       OUT port, (INP(port) AND 251)ã    END IFãEND SUBãã'**************ã'* D3 - pen 5 *ã'**************ããSUB pen5ã    IF CheckBox4.Checked THENã       OUT port, (INP(port) OR 8)ã    ELSE	ã       OUT port, (INP(port) AND 247)ã    END IFãEND SUBãã'**************ã'* D4 - pen 6 *ã'**************ããSUB pen6ã    IF CheckBox5.Checked THENã       OUT port, (INP(port) OR 16)ã    ELSE	ã       OUT port, (INP(port) AND 255-16)ã    END IFãEND SUBãã'**************ã'* D5 - pen 7 *ã'**************ããSUB pen7ã    IF CheckBox6.Checked THENã       OUT port, (INP(port) OR 32)ã    ELSE	ã       OUT port, (INP(port) AND 255-32)ã    END IFãEND SUBãã'**************ã'* D6 - pen 8 *ã'**************ããSUB pen8ã    IF CheckBox7.Checked THENã       OUT port, (INP(port) OR 64)ã    ELSE	ã       OUT port, (INP(port) AND 255-64)ã    END IFãEND SUBãã'**************ã'* D7 - pen 9 *ã'**************ããSUB pen9ã    IF CheckBox8.Checked THENã       OUT port, (INP(port) OR 128)ã    ELSE	ã       OUT port, (INP(port) AND 255-128)ã    END IFãEND SUBãã'********ã'* LPT1 *ã'********ããSUB P378ã port=&H378ã statusãEND SUBãã'**********ã'* LPT1/2 *ã'**********ããSUB P3BCã port=&H3BCã statusãEND SUBãã'********ã'* LPT3 *ã'********ããSUB P278ã port=&H278ã statusãEND SUBãã'******************ã'* End of program *ã'******************ããSUB readyã Form.CloseãEND SUBãã'**************************ã'* Refresh data on screen *ã'**************************ããSUB statusãã'***********ã'* Outputs *ã'***********ãã CheckBox1.Checked=((INP(port) AND 1)/1)ã CheckBox2.Checked=((INP(port) AND 2)/2)ã CheckBox3.Checked=((INP(port) AND 4)/4)ã CheckBox4.Checked=((INP(port) AND 8)/8)ã CheckBox5.Checked=((INP(port) AND 16)/16)ã CheckBox6.Checked=((INP(port) AND 32)/32)ã CheckBox7.Checked=((INP(port) AND 64)/64)ã CheckBox8.Checked=((INP(port) AND 128)/128)ãã CheckBox13.Checked=((INP(port+1) AND 8)/8)ã CheckBox14.Checked=((INP(port+1) AND 16)/16)ã CheckBox15.Checked=((INP(port+1) AND 32)/32)ã CheckBox16.Checked=((INP(port+1) AND 64)/64)ã CheckBox17.Checked=(1-((INP(port+1) AND 128)/128))ãã'*********ã'*Inputs *ã'*********ãã CheckBox9.Checked=(1-(INP(port+2) AND 1)/1)ã CheckBox10.Checked=(1-(INP(port+2) AND 2)/2)ã CheckBox11.Checked=((INP(port+2) AND 4)/4)ã CheckBox12.Checked=(1-(INP(port+2) AND 8)/8)ãEND SUBãã'***************************************ã'* Timer for refesh the data on screen *ã'***************************************ããSUB TimerOverã    Timer1.Interval = 400ã  ã  '**************************ã  '* refresh data on screen *ã  '**************************ãã   statusãEND SUBãã'*************************ã'* Default on LPT1 &H378 *ã'*************************ããport=&H378ãRadioButton1.Checked=1ãã'************************************ã'* Timer for refresh data on screen *ã'************************************ããTimer1.Interval = 400ãTimer1.Enabled = 1         ãTimer1.OnTimer = TimerOverãã'*****************ã'* Start program *ã'*****************ããForm.ShowModalãColin Breame                   SNAKE GAME FOR RAPID-Q         colin.breame@uk.worldplay.com  07-25-00 (15:29)       RAPIDQ                 240  4372     SNAKE.BAS   '  snake.basã' SnakeV1 was written by Colin Breame for funã' Controls:ã'	' = upã'	/ = downã'	z = leftã'	x = rightã'ã' The keyboard is not very responsive becauseã' the inkey$ method does not buffer the last character pressedã' i.e. you must have the key depressed when it checks (I think)ã'ã' Send comments/seguestions to colinbreame@hotmail.comãã$TYPECHECK ONããã' Def for the appãDIM borderChar AS STRINGãdim snakeChar as stringãDIM screenX as integerãdim screenY as integerãã' Border characterãborderChar = "#"ãsnakeChar = "+"ãscreenX = 78ãscreenY = 23ãã' SubrountinesãDECLARE SUB drawBorderãdeclare sub initSnakeãdeclare sub moveSnakeãdeclare sub updateFrameãdeclare sub checkForColãdeclare sub calcNewPositionãdeclare sub makeFoodãdeclare sub removeListTailãdeclare sub addListHeadãdeclare sub initListãdeclare sub updateFrameãdeclare sub handleInputãããã' Variablesã' Whether were still aliveã'	0 = aliveã'	1 = deadãdim snakeDead as integerã' The snake headãdim headX as integerãdim headY as integerã' How long our snake isãdim size as integerã' And what direction weve moving inã'	0 = northã'	1 = eastã'	2 = southã'	3 = westãdim dir as integerããã' List of snake segmentsãdim segX(256) as integerãdim segY(256) as integerãdim listLen as integerãlistLen = 256ããdim nextElement as integerãdim baseElement as integerãdim numOfElements as integerããã' Where the food isãdim foodVal as integerãããCLSãRANDOMIZE TIMERãã' Draw the borderãcall drawBorderã' initialise the snakeãcall initSnakeãã' Make some foodãcall makeFoodãã' Initialise the list of segmentsãcall initListãcall addListHeadãã' Setup our timerãdim interval as integerãinterval = 250ããdim timer1 as QTimerãtimer1.Interval = intervalãtimer1.Enabled = 1ãtimer1.OnTimer = updateFrameãã' Used for inputãdim lastInput as stringãdim newInput as stringãã' Now loopãdoã	lastInput = lastInput + inkey$ã	doeventsãloop until snakeDead = 1ãããsub updateFrameã	call moveSnakeã	if snakeDead = 0 then timer1.Interval = intervalãend subãããã' Moves the snakeãsub moveSnakeã	call handleInputã	call calcNewPositionã	call checkForColã	call updateFrameã	if numOfElements>size then call removeListTailãend subãã' Handles user inputãsub handleInputã	SELECT CASE right$(lastInput, 1)ã		CASE "/"ã			dir = 2ã		CASE "'"ã			dir = 0ã		CASE "x"ã			dir = 1ã		CASE "z"ã			dir = 3ã	END SELECTã	lastInput = ""ãend subããã' Updates this frameãsub updateFrameã	locate headY, headXã	print snakeCharã	ã	locate segY(baseElement), segX(baseElement)ã	print " "ãend subãã' Checks for a collition against walls or snakeãsub checkForColã	dim c as stringã	c = CHR$(PEEK((headY-1)*160+(headX-1)*2))ãã	if c = borderChar or c = snakeChar then snakeDead = 1ã	ã	if asc(c) > 48 and asc(c) <= 57 then ã		size = size + foodValã		interval = interval - (foodVal*2)ã		call makeFoodã	end ifãend subãã' Calculates the snakes new position (of head)ãsub calcNewPositionã	if dir = 0 then	headY = headY-1 _ã	else if dir = 1 then headX = headX+1 _ã	else if dir = 2 then headY = headY+1 _ã	else if dir = 3 then headX = headX-1ãã	' Add this new position to the list of snake segmentsã	call addListHeadãend subããã' Initialises our snakeãsub initSnakeã	headX = screenX/2ã	headY = screenY/2ã	size = 1ã	dir = rnd(4)ã	snakeDead = 0ãend subãã' Makes some foodãsub makeFoodã	foodVal = rnd(9)+1ã	locate rnd(screenY-2)+2, rnd(screenX-2)+2ã	print foodValãend subãã' Draws the borders around the edge of the screenãSUB drawBorderã	DIM i as Integerãã	for i=1 to screenXã		locate 1, iã		print borderCharã		locate screenY, iã		print borderCharã	nextãã	for i=1 to screenYã		locate i, 1ã		print borderCharã		locate i, screenXã		print borderCharã	nextãEND SUBããã' Rotary list methodsãã' Initialise the listãsub initListã	nextElement = 0ã	baseElement = 0ãend subãã' Add headãsub addListHeadã	segX(nextElement) = headXã	segY(nextElement) = headYãã	nextElement = nextElement + 1ã	if (nextElement>listLen) then nextElement = nextElement-listLenã	numOfElements = numOfElements + 1ãend subãã' Remove tailãsub removeListTailã	baseElement = baseElement + 1ã	if (baseElement>listLen) then baseElement = baseElement-listLenã	numOfElements = numOfElements - 1ãend subãGerome Guillemin               SONIDO 1.0 (MP3 PLAYER)        gedd123@free.fr                08-29-00 (01:50)       RAPIDQ                 144  5460     SONIDO.BAS  ' Sonido 1.0 : hidden MCI command to play MP3 Files with PC equipped with Windows 9.x, NT or Win2kã' equipped with MS-Media Player 2 or higherã' Author : Gerome GUILLEMIN (FRANCE)ã' Mailto : gedd123@free.frã' Web page : http://gedd123.free.fr (My own MP3 rippers/encoders, Rapid-Q source code...)ã' Feel free to use this snippet to play your favorite MP3 filesã' Started : 08-08-2000  - Modified 08-29-2000 at 10.30 PM (huh... what a good programming time :)ã' This code is dedicated to William's Great Rapid-Q compiler and for all basic code lovers !ã' This code is also dedicated to ABC packets if William decides to packet it :)ã' BUG fixed in this release : shorten paths & mp3 filename oops... :(ã' Improvements : Added a way to 'registrize' MP3 files with Sonido :) ã' THIS CODE HAS BEEN FULLY DOCUMENTED - TELL ME IF SOMETHING IS MISSING - THANKS A LOT -ãã' Security / Optimizationsã$Include "Rapidq.inc" ã$TypeCheck ON   ' Useful for me :) ã$Optimize ON    ' Yeah...ã$Option Level 3 ' For Funãã' Global Definitions / Prototypesã$Define FALSE  0ã$Define TRUE   1ãDECLARE SUB Button1Click (Sender AS QBUTTON)ãDECLARE SUB Button2Click (Sender AS QBUTTON)ãDECLARE SUB Button3Click (Sender AS QBUTTON)ãã' Main API DeclarationãDECLARE Function mciSendString Lib "winmm.dll" Alias "mciSendStringA" _ ã(ByVal lpstrCommand As String, ByVal lpstrReturnString As String, ByVal uReturnLength As Long, _ ãByVal hwndCallback As Long) As Longãã' GlobalsãDim ret as Long            ' Returned value for 'mciSendString'ãDim mp3file As String      ' Name of the MP3 to playãDim nCounter as Integer    ' Counter to manage the action Playing/Pausing/Continuing...ãDim szCmd as string        ' MCI Command -> OpenãDim szPlay as String       ' MCI Command -> Play SonidoãDim szRegCmd as String     ' String for MP3 File description for the Registryãã' My constants ãmp3file = command$(1) 'old code was this (hard coded) -> "D:\REGS\Rapid-Q\Projets\GG_Works\Sonido\01-Zarathoustra.mp3" '-> change this to a valid MP3 filename from your PCãszCmd = "Open " & chr$(34) & mp3file & chr$(34) & " Alias Sonido"ãszPlay = "Play sonido"ããConst HKEY_CLASSES_ROOT = &H80000000     ' Registry constant (William has forgotten to document this one !)ãã$EscapeChars ON 'Put this on the Top of the code to avoid conflicts !ããDim Registry as Qregistry    ããCREATE Form AS QFORMã    Caption = "Sonido : FREE MP3 Player"ã    Width = 320ã    Height = 115ã    Centerã    CREATE Button1 AS QBUTTONã        Caption = "Play !"ã        Left = 9ã        Top = 10ã        OnClick = Button1Clickã    END CREATEã    CREATE Button2 AS QBUTTONã        Caption = "Stop !"ã        Left = 89ã        Top = 10ã        TabOrder = 1ã        OnClick = Button2Clickã    END CREATEã    CREATE Button3 AS QBUTTONã            Caption = "Associate MP3@Sonido !"ã        Left = 170        ã        Top = 10ã        Width = 135ã        TabOrder = 1ã        OnClick = Button3Clickã    END CREATEã    ã    CREATE Label1 as Qlabelã        Align = 2ã        Alignment = 2 ã        Color = &hFFFFã        Caption = "By Gérôme GUILLEMIN 08-08-2000\nMailto: gedd123@free.fr\nWeb: http://gedd123.free.fr" '-> fatidic date : 11 years ago i've succeded my driving code license :) ã        Left = 29 '-> will be my age the 12th of August 2000 ;)ã        Top = 40  '-> cool height for my screen :)ã    END CREATEãEND CREATEãã'Initialization codeãif Command$(1) <> "" thenã    ret = mciSendString(szCmd, 0, 0, 0)          ' Open the MP3 fileã    ret = mciSendString(szPlay, 0, 0, 0)         ' Plays the MP3 file !ã        Button1.Caption = "Playing..." : nCounter = 1ãEnd if   ããForm.ShowModalããã'--------- Subroutines ---------ããSUB Button1Click (Sender AS QBUTTON)ãã'nCounter manages the action for the MP3 -> 0 == Plays or Continue // 1 == Pauses the MP3ãSelect Case nCounterã ã Case 0ã   ret = mciSendString(szCmd, 0, 0, 0) 'Open the MP3 fileã      if ret <> 0 AND Button1.Caption = "Play !" thenã         Showmessage ("Invalid Handle -> MP3 File is not present or may be an invalid MP3 file !")ã         Button1.Enabled = FALSEã      elseã         '? ret 'left for debuggingã      end ifã    Button1.Caption = "Playing..." : nCounter = 1ã    ret = mciSendString(szPlay, 0, 0, 0)         ' Plays the MP3 file !ã ã Case 1ã    ret = mciSendString("Stop sonido", 0, 0, 0)  ' Pause (if we want to wait a while for a cup of tea :)ã    Button1.Caption = "Paused !" : nCounter = 0ãEnd Selectã    ãEND SUBãããSUB Button2Click (Sender AS QBUTTON)ã    ret = mciSendString("Stop sonido", 0, 0, 0)  ' Pause (if we want to wait a while for a second cup of tea :)ã    ret = mciSendString("Close sonido", 0, 0, 0) ' Stop Playing MP3 file (the file is rewinded at this moment)ãEND SUBãããSUB Button3Click (Sender AS QBUTTON)      ' Associate MP3 files with Sonido !ãszRegCmd = Command$(0) + " \34%1\34"      ' Full Path for Sonido + commandãã Registry.RootKey = HKEY_CLASSES_ROOTã Registry.OpenKey("\\.mp3", 1)ã Registry.WriteString("", "Sonido File")ãã Registry.OpenKey("\\Sonido File", 1)ã Registry.WriteString("", "MP3 File")ã Registry.OpenKey("shell\\open\\command", 1)ã Registry.WriteString("", szRegCmd)ã ãShowMessage ("MP3 files successfully associated with Sonido :)\nJust click onto an MP3 file...\nEnjoy :-p")ãApplication.Terminate ' The 1st job is done... it's time to play mp3 now !ãEND SUBãChristopher S. Bradford        RAPID-Q TELNET CLIENT          csb@psouth.net                 08-27-00 (19:34)       RAPIDQ                 180  5263     TEL.BAS     '** Title: RapidQ Telnet Client / M$ Windows Consoleã'** Author: Christopher S. Bradfordã'**ã'** Release Notes:ã'**      Ver 1.00:  08/21/2000ã'**                 Supports full ANSI terminals, including color, specialã'**                 keys, etc... IMPORTANT:  the follow line must be in yourã'**                 CONFIG.SYS file:  device=c:\windows\command\ansi.sysã'**                 If you need to add the ansi.sys line to your config.sys,ã'**                 then you will need to reboot before running this program.ã'**ã'**                 There is minor bug when disconnecting from the remoteã'**                 telnet server... the client will not exit.  The press ofã'**                 any key after disconnect will exit.  I need to find a moreã'**                 reliable way of detecting dropped sockets.  Not a big deal.ã'**ã'**                 Mostly RFC854 compliant, supports protocol negotiationã'**ã'**                 Feel free to use, distribute, or otherwise destroy thisã'**                 example.ã'**ã'**                 Compile AS-IS  ...  "rc tel.bas"ãã$OPTIMIZE ONã$APPTYPE CONSOLEã$TYPECHECK ONããDECLARE SUB NegotiateOptionsããCONST False = 0ãCONST True  = NOT Falseãã'** NEGOTIATIONSãCONST IAC   = CHR$(255)ãCONST tDo   = CHR$(253)      '** values based on RFC854ãCONST tDont = CHR$(254)ãCONST tWill = CHR$(251)ãCONST tWont = CHR$(252)ãCONST SE    = CHR$(240)ãCONST SB    = CHR$(250)ãã'** TERMINAL OPTIONS TO NEGOTIATEãCONST TermType = CHR$(24)ãCONST TermTypeSB = SB + TermType + CHR$(1) + IAC + SEãCONST TermTypeInfo = IAC + SB +TermType +CHR$(0)+ "ANSI" +IAC +SEããDIM Socket AS QSocketãDIM SockNum AS INTEGERã    SockNum = 0ããDIM A$     'Keyboard InputãDIM B$     'Term Read Byte BufferããDEFSTR tDesc(251 TO 254) = {"WILL","WONT","DO","DONT"}ããDIM Keys(255) AS String                     'Key maps for special ANSIã                                            'terminal keys... indexed byã                                            'scancodesãKeys(59)=Chr$(27)+"[M"  'F1                 ãKeys(60)=Chr$(27)+"[N"  'F2                 'basically, we're grabbing theãKeys(61)=Chr$(27)+"[O"  'F3                 'scancodes and sending the ansiãKeys(62)=Chr$(27)+"[P"  'F4                 'equivalentãKeys(63)=Chr$(27)+"[Q"  'F5ãKeys(64)=Chr$(27)+"[R"  'F6                 'there are more specialkeys, butãKeys(65)=Chr$(27)+"[S"  'F7                 'this basic set should be good forãKeys(66)=Chr$(27)+"[T"  'F8                 'the first release anywayãKeys(67)=Chr$(27)+"[U"  'F9ãKeys(68)=Chr$(27)+"[V"  'F10ãKeys(71)=Chr$(27)+"[H"  'homeãkeys(72)=Chr$(27)+"[A"  'Up Arrowãkeys(73)=Chr$(27)+"[I"  'PgDnãkeys(75)=Chr$(27)+"[D"  'Down Arrowãkeys(77)=Chr$(27)+"[C"  'Right ArrowãKeys(79)=Chr$(27)+"[F"  'endãkeys(80)=Chr$(27)+"[B"  'Left ArrowãKeys(81)=chr$(27)+"[G"  'PgDnãããPRINTãPRINT "RapidQ Telnet Client -- Written By C.S.Bradford"ãPRINT "Version 1.00 - Feel Free to distribute"ãPRINTããIF Command$(1)="" or Command$(1)="/?" or Command$(1)="?" thenãã   PRINT "Command Line Usage: TEL <host or ip>ã   PRINTãã   ENDãEND IFããPRINT "Connecting to "+Command$(1)+"...";ãSockNum = Socket.Connect(Command$(1),23)ããIF SockNum < 1 THEN GOTO TelExitããPRINT "[OK]"ãPRINTããA$=""ããDO                   '** MAIN LOOPã  ã  A$=INKEY$ãã  IF A$<>"" THENã    IF LEN(A$)=2 AND LEFT$(A$,1)=CHR$(27) THENãã       'Special Key Detected ... Translate A$ to keymapãã        A$=Keys(ASC(RIGHT$(A$,1)))ãã    END IFã    Socket.Write(SockNum,A$,LEN(A$))ã  END IFãã  IF Socket.IsServerReady(SockNum) THENã     B$=Socket.Read(SockNum,1)ã     IF B$=IAC THENã       NegotiateOptionsã     ELSEã       PRINT B$;ã     END IFã  END IFãã  IF Socket.Transferred < 0 THEN Exit DO      'check for dropped connectionããLOOPããTelExit:ã  PRINT "No Connection... Exiting"ã  Socket.CloseãããSUB NegotiateOptionsãã   Print "RCVD ";ã   B$=""ã   B$=Socket.Read(SockNum,1)ãã   IF B$=tWill OR b$=tWont OR b$=tDo OR b$=tDont thenã      B$=B$+Socket.Read(SockNum,1)ã      SELECT CASE B$ã        CASE tDo+TermTypeã          PRINT "IAC DO TermType"ã          Socket.Write(SockNum,IAC + tWill +TermType,3)ã          PRINT "SENT IAC WILL TermType"ãã        '** add more cases here to handle other terminal optionsãã        CASE ELSEã          IF LEFT$(B$,1)=tDo THEN                    'Reply With tWontã             PRINT "IAC ["+str$(asc(left$(b$,1)))+"]["+str$(asc(right$(b$,1)))+"]"ã             Socket.Write(SockNum,IAC + tWont + Right$(b$,1),3)ã             PRINT "SENT IAC WONT "+str$(asc(Right$(b$,1)))ã          END IFãã      END SELECTã   ELSEã      SELECT CASE B$ã         CASE SB           'negotiate sub optionsã            WHILE RIGHT$(B$,1) <> SEã              B$=B$+Socket.Read(SockNum,1)ã            WENDã            IF B$=TermTypeSB THENã              PRINT "REQUEST FOR TermType"ã              Socket.Write(SockNum, TermTypeInfo, LEN(TermTypeInfo))ã              PRINT "SENT TermType INFORMATIONã            ELSEã              PRINT "Unknown SUBOption... Ignoring"ã            END IFãã         CASE ELSEã            PRINT "Unknown Option...Ignoring"ãã      END SELECTã   END IFãã   ãEND SUBãBruno Schaefer                 ADDITIONAL MATH FUNCTIONS      bup.schaefer@planet-interkom.de08-17-00 (17:56)       RAPIDQ                 219  9915     RQ_MATH.INC '>>>>>>   rq_math.inc   Version 1.0 (08-2000)<<<<<<<<<<<<<<<<<<<<ã'##################################################ã'##   Rapid-Q Mathematics                        ##ã'##   written by Bruno Schäfer                   ##ã'##   <bup.schaefer@planet-interkom.de>          ##ã'##################################################ã'   !!!!    All angles are in radiant !!!  (BUT NOT THE FUNCTION DEG2RAD)ã'   If an ERROR occurs there will be a Messageboxã'   and the returned value is ZERO !!!!!ã' Rapid-Q - http://www.basicguru.com/abc/rapidq/ã'                 http://www.egroups.com/group/rapidqã' This .inc.-file  contains additional commonly used mathematical functionsã' and utilities (in addition to the standard mathematical functionsã' supported in William Yu's Rapid-Q)ã' This is a work in progress, so don't expect too much.ã' Try the functions you need for your work, accept them or throw them away...ã' ...but many thanks for ideas and remarks:ã' send an e-mail to (bup.schaefer@planet-interkom.de) or the rapidq-egroup.ã' planned functions perhaps  in next versions:' different round methods,ã' complex functions, vectoroperations, derivation, integral-functions,ã' statistical functions( in own $includes ???)...,ãCONST rqPI = 3.141592654 '(This is PI)ãCONST rqE = 2.718281828  '(This is e)ã'>>> declaration of the functions <<<ã'.....ã'###############################################################################ã'   ACOSH() returns the hyperbolic areacosine of xã'###############################################################################ãFunction ACOSH(value AS DOUBLE) AS DOUBLEã  SELECT CASE valueã   CASE IS < 1ã    MessageBox("Invalid Argument !!!", "ACOSH - Error", 0) ã   CASE IS >= 1ã    ACOSH =  ( LOG (value + SQR( value ^ 2 - 1 )))ã  END SELECTãEnd Functionã'###############################################################################ã'   ACOT() returns the arccotangent of xã'###############################################################################ãFunction ACOT(value AS DOUBLE) AS DOUBLEã ACOT = ((rqPI / 2) - ATAN (value))ãEnd Functionã'###############################################################################ã'   ACOTH() returns the hyperbolic areacotangent of xã'###############################################################################ãFunction ACOTH(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS (value)ã  CASE IS > 1ã   ACOTH =  (LOG((value + 1) / (value - 1)) * 0.5)ã  CASE ELSE        ã   MessageBox("ERROR: Invalid Argument !!!", "ACOTH - Error", 0)     ã END SELECTãEnd Functionã'###############################################################################ã'   ACOSEC() returns the arccosecans of xã'###############################################################################ãFunction ACOSEC(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS (value)ã  CASE IS < 1ã   MessageBox("Invalid Argument !!!", "ACOSEC - Error", 0) ã  CASE ELSE          ã   ACOSEC =  (ASIN(1/value))ã  END SELECT ãEnd Functionã'###############################################################################ã'   ACOSECH() returns the hyperbolic arccosecans of xã'###############################################################################ãFunction ACOSECH(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS(value)ã  CASE = 0ã   MessageBox("Invalid Argument !!!", "ACOSECH - Error", 0) ã  CASE ELSE          ã   ACOSECH =  (ASINH(1 / value))ã END SELECT ãEnd Functionã'###############################################################################ã'   ASINH() returns the hyperbolic areasine of xã'###############################################################################ãFunction ASINH(value AS DOUBLE) AS DOUBLEã ASINH = LOG (value + (SQR(value * value + 1)))ãEnd Functionã'###############################################################################ã'   ASEC() returns the arccosecans of xã'###############################################################################ãFunction ASEC(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS (value)ã  CASE IS < 1ã    MessageBox("ERROR:Invalid Argument !!!", "ASEC - Error", 0)ã  CASE ELSE          ã   ASEC =  (rqPI / 2 - ASIN( 1 / value))ã END SELECT ãEnd Functionã'###############################################################################ã'   ASECH() returns the hyperbolic arccosecans of xã'###############################################################################ãFunction ASECH(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS (value)ã  CASE IS > 1ã   MessageBox("ERROR:Invalid Argument !!!", "ASECH - Error", 0) ã  CASE IS <= 0ã   MessageBox("ERROR:Invalid Argument !!!", "ASECH - Error", 0) ã  CASE ELSE          ã   ASECH = (ACOSH(1 / value))ã END SELECT ãEnd Functionã'###############################################################################ã'   ATANH() returns the hyperbolic areatangent of xã'###############################################################################ãFunction ATANH(value AS DOUBLE) AS DOUBLEã SELECT CASE ABS(value)ã  CASE IS < 1ã   ATANH = (LOG((1 + value) / (1 - value)) * 0.5)ã  CASE 0ã   COSH = 1ã  CASE ELSEã   MessageBox("ERROR:Invalid Argument !!!", "ATANH - Error", 0) ã END SELECTãEnd Function    ã'###############################################################################ã'   COSEC() returns the cosecans of xã'###############################################################################ãFunction COSEC(value AS DOUBLE) AS DOUBLEã COSEC = 1 / SIN(value)ãEnd Functionã'###############################################################################ã'   COSECH() returns the hyperbolic cosecans of xã'###############################################################################ãFunction COSECH(value AS DOUBLE) AS DOUBLEã COSECH = (2 / (EXP(value) - EXP(value * -1)))ãEnd Functionã'###############################################################################ã'   COSH() returns the hyperbolic cosine of xã'###############################################################################ãFunction COSH(value AS DOUBLE) AS DOUBLEã COSH = (0.5 * (EXP(value) + EXP(value * -1)))ã IF value = 0 THEN COSH = 1ãEnd Functionã'###############################################################################ã'   COT() returns the cotangent of xã'###############################################################################ãFunction COT(value AS DOUBLE) AS DOUBLEã COT = 1 / TAN(value)ãEnd Functionã'###############################################################################ã'   COTH() returns the hyperbolic cotangent of xã'###############################################################################ãFunction COTH(value AS DOUBLE) AS DOUBLEã SELECT CASE valueã  CASE 0ã   MessageBox("ERROR: Invalid Argument !!!", "COTH - Error", 0) ã  CASE ELSEã   COTH = COSH(value) / SINH(value)ã  END SELECT ãEnd Functionã'###############################################################################ã'   DEG2RAD() returns radians instead of degreesã'###############################################################################ãFunction DEG2RAD(value AS DOUBLE) AS DOUBLEã DEG2RAD = value * 0.017453ãEnd Functionã'###############################################################################ã'   FAC() returns the factorial of the integer xã'###############################################################################ãFunction FAC(value AS LONG) AS LONGã SELECT CASE valueã  CASE IS < 13  ã   N = value      ã   value = 1 ã    For I = 1 to Nã     value = value * Iã    NEXT I ã   FAC = valueã  CASE IS > 12ã   MessageBox("ERROR: Invalid Argument !!! Argument must <= 12!", "FAC - Error", 0)ã END SELECT  ãEnd Functionã'###############################################################################ã'   LOG10() returns the base 10 log of xã'###############################################################################ã Function LOG10(value AS DOUBLE) AS DOUBLEã  LOG10 = (LOG (value) * LOG(10 * rqE))ã End Functionã'###############################################################################ã'   RAD2DEG() returns degrees instead of radiansã'###############################################################################ãFunction RAD2DEG(value AS DOUBLE) AS DOUBLEã RAD2DEG = value / 0.017453ãEnd Functionã'###############################################################################ã'   SEC() returns the secans of xã'###############################################################################ãFunction SEC(value AS DOUBLE) AS DOUBLEã SEC = 1 / COS(value)ãEnd Functionã'###############################################################################ã'   SECH() returns the hyperbolic secans of xã'###############################################################################ãFunction SECH(value AS DOUBLE) AS DOUBLEã SECH = (2 / (EXP(value) + EXP(value * -1)))ã' SECH = 1/ COSH (value)ãEnd Functionã'###############################################################################ã'   SINH() returns the hyperbolic sine of xã'###############################################################################ãFunction SINH(value AS DOUBLE) AS DOUBLEã SINH = (0.5 * (EXP(value) - EXP(value * -1)))ã  IF value = 0 THEN SINH = 0ãEnd Function ã'###############################################################################ã'   TANH() returns the hyperbolic tangent of xã'###############################################################################ãFunction TANH(value AS DOUBLE) AS DOUBLEã  TANH = SINH(value) / COSH(value)ã   IF value = 0 THEN SINH = 0ãEnd Functionã'###############################################################################ã'>>>>> reserved words  <<<<<<ã'RQPI,RQE,ACOSH,ACOT, ACOSEC, ACOSECH, ASEC, ASECH, ATANH, COSEC, COSECH, COSH, COT, COTH, ã'FAC, LOG10, SEC, SECH, SINH, TANH, DEG2RAD, RAD2DEGãRudy Elyn                      SYSTEM CONFIGURATION PROGRAM   Rudy@vt4.net                   08-23-00 (20:20)       RAPIDQ                 198  5580     CONFIG.BAS  '*********************************************************************ã'* Here is a program i've made to configure the hardwareã'* on the computer becouse i've got some problem with my intenetã'* connectionmanager. I'll allways have to reset an error thatã'* occur during turning off the computer. And i become to hate theã'* configurationscreen in 'settings' at the START button, so i decidedã'* to make one program to access it all and put it on my desktop.ã'* ã'* Written by Rudy Elyn (Rudy@VT4.NET) as example code for RAPIDQã'*ã'* PS the buttontext is in Dutch but i think it would not be problem toã'* translate it. I too found some example code to make this program at aã'* VB site somewhere on the net. ã'*********************************************************************ãã$INCLUDE "rapidq.inc"ã'$OPTION ICON "config1.ico"    ããDECLARE SUB Tijd (Sender AS QBUTTON)ãDECLARE SUB InterNet (Sender AS QBUTTON)ãDECLARE SUB Modem (Sender AS QBUTTON)ãDECLARE SUB Applikatie (Sender AS QBUTTON)ãDECLARE SUB JoySt (Sender AS QBUTTON)ãDECLARE SUB Main1 (Sender AS QBUTTON)ãDECLARE SUB Main2 (Sender AS QBUTTON)ãDECLARE SUB Systeem (Sender AS QBUTTON)ãDECLARE SUB MMSysteem (Sender AS QBUTTON)ãDECLARE SUB NetCpl (Sender AS QBUTTON)ãDECLARE SUB Paswoord (Sender AS QBUTTON)ãDECLARE SUB Intl (Sender AS QBUTTON)ãDECLARE SUB MMSysteem2 (Sender AS QBUTTON)ããCREATE Form AS QFORMã    Caption = "Systeem configuratie"ã    Width = 252ã    Height = 185ã    Centerã    DelBorderIcons = 2    'stay this sizeã    CREATE Button1 AS QBUTTONã        Caption = "Tijd en datum"ã        Left = 5ã        Top = 10ã        OnClick = Tijdã    END CREATEã    CREATE Button2 AS QBUTTONã        Caption = "Internet"ã        Left = 85ã        Top = 10ã        TabOrder = 1ã        OnClick = InterNetã    END CREATEã    CREATE Button3 AS QBUTTONã        Caption = "Modem"ã        Left = 165ã        Top = 10ã        TabOrder = 2ã        OnClick = Modemã    END CREATEã    CREATE Button4 AS QBUTTONã        Caption = "Software"ã        Left = 5ã        Top = 40ã        TabOrder = 3ã        OnClick = Applikatieã    END CREATEã    CREATE Button5 AS QBUTTONã        Caption = "Joystick"ã        Left = 85ã        Top = 40ã        TabOrder = 4ã        OnClick = JoyStã    END CREATEã    CREATE Button6 AS QBUTTONã        Caption = "Toetsenbord"ã        Left = 165ã        Top = 40ã        TabOrder = 5ã        OnClick = Main1ã    END CREATEã    CREATE Button7 AS QBUTTONã        Caption = "Muis"ã        Left = 5ã        Top = 70ã        TabOrder = 6ã        OnClick = Main2ã    END CREATEã    CREATE Button8 AS QBUTTONã        Caption = "Systeem"ã        Left = 85ã        Top = 70ã        TabOrder = 7ã        OnClick = Systeemã    END CREATEã    CREATE Button9 AS QBUTTONã        Caption = "Multimedia"ã        Left = 165ã        Top = 70ã        TabOrder = 8ã        OnClick = MMSysteemã    END CREATEã    CREATE Button10 AS QBUTTONã        Caption = "Netwerk"ã        Left = 5ã        Top = 100ã        TabOrder = 9ã        OnClick = NetCplã    END CREATEã    CREATE Button11 AS QBUTTONã        Caption = "Paswoord"ã        Left = 85ã        Top = 100ã        TabOrder = 10ã        OnClick = Paswoordã    END CREATEã    CREATE Button12 AS QBUTTONã        Caption = "Land"ã        Left = 165ã        Top = 100ã        TabOrder = 11ã        OnClick = Intlã    END CREATEã    CREATE Button13 AS QBUTTONã        Caption = "Geluiden"ã        Left = 5ã        Top = 130ã        TabOrder = 12ã        OnClick = MMSysteem2ã    END CREATEã    CREATE Button14 AS QBUTTONã        Caption = "?????"ã        Left = 85ã        Top = 130ã        TabOrder = 13ã        'OnClick = ã    END CREATEã    CREATE Button15 AS QBUTTONã        Caption = "?????"ã        Left = 165ã        Top = 130ã        TabOrder = 14ã        'OnClick = ã    END CREATEãEND CREATEããForm.ShowModalãããSUB Tijd (Sender AS QBUTTON)ã  dblReturn = SHELL("rundll32.exe shell32.dll,Control_RunDLL timedate.cpl", 4)ãEND SUBããSUB InterNet (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL inetcpl.cpl,,0", 5)ãEND SUBããSUB Modem (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL modem.cpl", 5)ãEND SUBããSUB Applikatie (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL appwiz.cpl,,1", 5)ãEND SUBããSUB JoySt (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL joy.cpl", 5)ãEND SUBããSUB Main1 (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL main.cpl @1", 5)ãEND SUBããSUB Main2 (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL main.cpl @0", 5)ãEND SUBããSUB Systeem (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL sysdm.cpl,,0", 5)ãEND SUBããSUB MMSysteem (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL mmsys.cpl,,0", 5)ãEND SUBããSUB NetCpl (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL netcpl.cpl", 5)ãEND SUBããSUB Paswoord (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL password.cpl", 5)ãEND SUBããSUB Intl (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL intl.cpl,,0", 5)ãEND SUBããSUB MMSysteem2 (Sender AS QBUTTON)ã  dblReturn = Shell("rundll32.exe shell32.dll,Control_RunDLL mmsys.cpl @1", 5)ãEND SUBãThe ABC Programmer             DIRECTSOUND EXAMPLE            voxel@edmc.net                 08-28-00 (15:19)       RAPIDQ                 186  5145     DXSOUND.BAS '-- DirectSound example for Rapid-Q by William Yuãã$TYPECHECK ONã$INCLUDE "RAPIDQ.INC"ããDECLARE SUB exitItemClick (sender AS QMENUITEM)ãDECLARE SUB openItemClick (sender AS QMENUITEM)ãDECLARE SUB formShow (sender AS QFORM)ãDECLARE SUB playButtonClick (sender AS QBUTTON)ãDECLARE SUB stopButtonClick (sender AS QBUTTON)ãDECLARE SUB positionTrackBarChange (sender AS QTRACKBAR)ãDECLARE SUB freqTrackBarChange (sender AS QTRACKBAR)ãDECLARE SUB volumeTrackBarChange (sender AS QTRACKBAR)ãDECLARE SUB panTrackBarChange (sender AS QTRACKBAR)ãããCREATE form AS QFORMã    width = 360ã    height = 300ã    centerã    CREATE dxSound AS QDXSOUNDã    END CREATEã    CREATE mainMenu AS QMAINMENUã        CREATE fileMenu AS QMENUITEMã            caption = "&File"ã            CREATE openItem AS QMENUITEMã                caption = "&Open..."ã                onClick = openItemClickã            END CREATEã            CREATE breakItem1 AS QMENUITEMã                caption = "-"ã            END CREATEã            CREATE exitItem AS QMENUITEMã                caption = "E&xit"ã                onClick = exitItemClickã            END CREATEã        END CREATEã    END CREATEã    CREATE panTrackBar AS QTRACKBARã        left = 10ã        top = 10ã        width = 200ã        height = 30ã        tickStyle = tsManualã        min = -100ã        max = 100ã        onChange = panTrackBarChangeã        enabled = FALSEã    END CREATEã    CREATE panLabel AS QLABELã        left = 215ã        top = 20ã        caption = "Pan 0dB"ã    END CREATEã    CREATE volumeTrackBar AS QTRACKBARã        left = 10ã        top = 60ã        width = 200ã        height = 30ã        tickStyle = tsManualã        min = 0ã        max = 100ã        position = 100ã        onChange = volumeTrackBarChangeã        enabled = FALSEã    END CREATEã    CREATE volumeLabel AS QLABELã        left = 215ã        top = 70ã        caption = "Volume 100%"ã    END CREATEã    CREATE freqTrackBar AS QTRACKBARã        left = 10ã        top = 110ã        width = 200ã        height = 30ã        tickStyle = tsManualã        max = 44100ã        position = 22050ã        min = 0ã        onChange = freqTrackBarChangeã        enabled = FALSEã    END CREATEã    CREATE freqLabel AS QLABELã        left = 215ã        top = 120ã        caption = "Frequency 22050Hz"ã    END CREATEã    CREATE positionTrackBar AS QTRACKBARã        left = 10ã        top = 160ã        width = 200ã        height = 30ã        tickStyle = tsManualã        onChange = positionTrackBarChangeã        enabled = FALSEã    END CREATEã    CREATE positionLabel AS QLABELã        left = 215ã        top = 170ã        caption = "Position 0 / 0"ã    END CREATEã    CREATE playButton AS QBUTTONã        left = 30ã        top = 210ã        caption = "&Play"ã        enabled = FALSEã        onClick = playButtonClickã    END CREATEã    CREATE stopButton AS QBUTTONã        left = 110ã        top = 210ã        caption = "&Stop"ã        enabled = FALSEã        onClick = stopButtonClickã    END CREATEã    onShow = formShowã    showModalãEND CREATEãããSUB formShow (sender AS QFORM)ã    panTrackBar.setTick(0)ã    volumeTrackBar.setTick(50)ã    freqTrackBar.setTick(22050)ã    dxSound.looped = FALSEãEND SUBããSUB exitItemClick (sender AS QMENUITEM)ã    form.closeãEND SUBããSUB openItemClick (sender AS QMENUITEM)ã    DIM openDialog AS QOPENDIALOGãã    openDialog.filter = "*.wav|*.wav"ã    IF openDialog.execute THENã        dxSound.fileName = openDialog.fileNameã        panTrackBar.enabled = TRUEã        volumeTrackBar.enabled = TRUEã        freqTrackBar.enabled = TRUEã        positionTrackBar.enabled = TRUEã        playButton.enabled = TRUEã        stopButton.enabled = TRUEã        positionTrackBar.position = 0ã        positionTrackBar.max = dxSound.sizeã        freqTrackBar.position = dxSound.frequencyã        freqTrackBarChange(freqTrackBar)ã        positionTrackBarChange(positionTrackBar)ã    END IFãEND SUBããSUB playButtonClick (sender AS QBUTTON)ã    dxSound.playã    WHILE dxSound.playingã        doEventsã        positionTrackBar.position = dxSound.positionã        positionLabel.caption = "Position "+STR$(positionTrackBar.position)+" / "+STR$(dxSound.size)ã    WENDãEND SUBããSUB stopButtonClick (sender AS QBUTTON)ã    dxSound.stopã    dxSound.position = 0ã    positionTrackBar.position = 0ãEND SUBããSUB positionTrackBarChange (sender AS QTRACKBAR)ã    dxSound.position = sender.positionã    positionLabel.caption = "Position "+STR$(sender.position)+" / "+STR$(dxSound.size)ãEND SUBããSUB freqTrackBarChange (sender AS QTRACKBAR)ã    dxSound.frequency = sender.positionã    freqLabel.caption = "Frequency "+STR$(sender.position)+"Hz"ãEND SUBããSUB volumeTrackBarChange (sender AS QTRACKBAR)ã    dxSound.volume = sender.positionã    volumeLabel.caption = "Volume "+STR$(sender.position)+"%"ãEND SUBããSUB panTrackBarChange (sender AS QTRACKBAR)ã    dxSound.pan = sender.positionã    panLabel.caption = "Pan "+STR$(sender.position)+"dB"ãEND SUBãRobert J. Tiess                THE CALCULATIONS STATION       rjtmusic@hotmail.com           08-28-00 (19:19)       RAPIDQ                 1170 32649    CALC.BAS    ' The Calculations Stationã' (beta version .01)ã' by Robert J. Tiessã' Copyright © 2000ã'ã' This program is FREEWARE!ã'ã' Author e-mail: rjtmusic@hotmail.comã' Author website: www.mp3.com/rjtãã$typecheck ONã$include "RAPIDQ.INC"ãã'Include icon at compile time as a resource fileã'to be restributed in the same .exe file as this program.ã'$resource calculationstationicon AS "calculationstation-icon.ico"ãã'Declare all the Subroutines and Button Click Event HandlersãDECLARE SUB PerformOperationsãDECLARE SUB KeyEntry (Key AS STRING)ãDECLARE SUB Button1Click (Sender AS QBUTTON)ãDECLARE SUB Button2Click (Sender AS QBUTTON)ãDECLARE SUB Button3Click (Sender AS QBUTTON)ãDECLARE SUB Button4Click (Sender AS QBUTTON)ãDECLARE SUB Button5Click (Sender AS QBUTTON)ãDECLARE SUB Button6Click (Sender AS QBUTTON)ãDECLARE SUB Button7Click (Sender AS QBUTTON)ãDECLARE SUB Button8Click (Sender AS QBUTTON)ãDECLARE SUB Button9Click (Sender AS QBUTTON)ãDECLARE SUB Button10Click (Sender AS QBUTTON)ãDECLARE SUB Button11Click (Sender AS QBUTTON)ãDECLARE SUB Button12Click (Sender AS QBUTTON)ãDECLARE SUB Button13Click (Sender AS QBUTTON)ãDECLARE SUB Button14Click (Sender AS QBUTTON)ãDECLARE SUB Button15Click (Sender AS QBUTTON)ãDECLARE SUB Button16Click (Sender AS QBUTTON)ãDECLARE SUB Button17Click (Sender AS QBUTTON)ãDECLARE SUB Button18Click (Sender AS QBUTTON)ãDECLARE SUB Button19Click (Sender AS QBUTTON)ãDECLARE SUB Button20Click (Sender AS QBUTTON)ãDECLARE SUB Button21Click (Sender AS QBUTTON)ãDECLARE SUB Button22Click (Sender AS QBUTTON)ãDECLARE SUB Button23Click (Sender AS QBUTTON)ãDECLARE SUB Button24Click (Sender AS QBUTTON)ãDECLARE SUB Button25Click (Sender AS QBUTTON)ãDECLARE SUB Button26Click (Sender AS QBUTTON)ãDECLARE SUB Button27Click (Sender AS QBUTTON)ãDECLARE SUB Button28Click (Sender AS QBUTTON)ãDECLARE SUB Button29Click (Sender AS QBUTTON)ãDECLARE SUB Button30Click (Sender AS QBUTTON)ãDECLARE SUB Button31Click (Sender AS QBUTTON)ãDECLARE SUB Button32Click (Sender AS QBUTTON)ãDECLARE SUB Button33Click (Sender AS QBUTTON)ãDECLARE SUB Button34Click (Sender AS QBUTTON)ãDECLARE SUB Button35Click (Sender AS QBUTTON)ãDECLARE SUB Button36Click (Sender AS QBUTTON)ãDECLARE SUB Button37Click (Sender AS QBUTTON)ãDECLARE SUB Button38Click (Sender AS QBUTTON)ãDECLARE SUB Button39Click (Sender AS QBUTTON)ãDECLARE SUB Button40Click (Sender AS QBUTTON)ãDECLARE SUB Button41Click (Sender AS QBUTTON)ãDECLARE SUB Button42Click (Sender AS QBUTTON)ãDECLARE SUB Button43Click (Sender AS QBUTTON)ãDECLARE SUB EqualButtonClick (Sender AS QBUTTON)ãDECLARE SUB SetFont (Sender AS QEDIT)ãDECLARE SUB ScrollToBottomãDECLARE SUB RadiansButtonClick (Sender AS QRADIOBUTTON)ãDECLARE SUB DegreesButtonClick (Sender AS QRADIOBUTTON)ãDECLARE SUB AboutClick (Sender AS QIMAGE)ãã'Create the Calculations Station interfaceãCREATE Form AS QFORMã    Caption = "The Calculations Station"ã    Width = 610ã    Height = 435ã    Centerã    Color = &hffe080  ' Customize the form's colorã    Cursor = crHandPoint  ' Set form cursor to a handã    BorderStyle = bsToolWindowã    'IcoHandle = calculationstationicon  ' Set iconã    CREATE CalcStatIcon AS QImageã        Left = 16ã        Top = 20ã        Autosize = Trueã        ICOHandle = calculationstationicon ' Show iconã        onClick = AboutClickã    END CREATEã    CREATE Label2 AS QLABELã        Caption = "The Calculations Station"ã        Left = 120ã        Top = 6ã        AutoSize = Trueã        Transparent = 1ã    END CREATEã    CREATE PoweredByRapidQ AS QLABELã        Caption = "FREEWARE * POWERED BY RAPID-Q"ã        Left = 410ã        Top = 384ã        AutoSize = Trueã        Transparent = 1ã    END CREATEã    CREATE edit1 AS QEDIT ' main number displayã        Text = "0"ã        Left = 120ã        Top = 24ã        Width = 200ã        Color = &hffffc0ã        Height = 29ã        MaxLength = 20ã        AutoSize = Trueã        ReadOnly = True ' user must click on # buttonsã        OnChange = SetFont ' on change reset font to Arialã    END CREATEã    CREATE Button1 AS QBUTTONã        Caption = "CLEAR ALL"ã        Left = 16ã        Top = 104ã        OnClick = Button1Clickã        taborder = 1ã        Cursor = crHandPointã    END CREATEã    CREATE Button2 AS QBUTTONã        Caption = "&1"ã        Left = 120ã        Top = 160ã        Width = 51ã        Height = 41ã        OnClick = Button2Clickã    END CREATEã    CREATE Button3 AS QBUTTONã        Caption = "&2"ã        Left = 176ã        Top = 160ã        Width = 51ã        Height = 41ã        OnClick = Button3Clickã    END CREATEã    CREATE Button4 AS QBUTTONã        Caption = "&3"ã        Left = 232ã        Top = 160ã        Width = 51ã        Height = 41ã        OnClick = Button4Clickã    END CREATEã    CREATE Button5 AS QBUTTONã        Caption = "&4"ã        Left = 120ã        Top = 112ã        Width = 51ã        Height = 41ã        OnClick = Button5Clickã    END CREATEã    CREATE Button6 AS QBUTTONã        Caption = "&5"ã        Left = 176ã        Top = 112ã        Width = 51ã        Height = 41ã        OnClick = Button6Clickã    END CREATEã    CREATE Button7 AS QBUTTONã        Caption = "&6"ã        Left = 232ã        Top = 112ã        Width = 51ã        Height = 41ã        OnClick = Button7Clickã    END CREATEã    CREATE Button8 AS QBUTTONã        Caption = "&7"ã        Left = 120ã        Top = 64ã        Width = 51ã        Height = 41ã        OnClick = Button8Clickã    END CREATEã    CREATE Button9 AS QBUTTONã        Caption = "&8"ã        Left = 176ã        Top = 64ã        Width = 51ã        Height = 41ã        OnClick = Button9Clickã    END CREATEã    CREATE Button10 AS QBUTTONã        Caption = "&9"ã        Left = 232ã        Top = 64ã        Width = 51ã        Height = 41ã        OnClick = Button10Clickã    END CREATEã    CREATE Button11 AS QBUTTONã        Caption = "&0"ã        Left = 120ã        Top = 208ã        Width = 51ã        Height = 41ã        OnClick = Button11Clickã    END CREATEã    CREATE Button12 AS QBUTTONã        Caption = "+ ADD"ã        Left = 312ã        Top = 64ã        Height = 41ã        OnClick = Button12Clickã    END CREATEã    CREATE Button13 AS QBUTTONã        Caption = "- SUB"ã        Left = 312ã        Top = 112ã        Height = 41ã        OnClick = Button13Clickã    END CREATEã    CREATE Button14 AS QBUTTONã        Caption = "X MUL"ã        Left = 312ã        Top = 160ã        Height = 41ã        OnClick = Button14Clickã    END CREATEã    CREATE Button15 AS QBUTTONã        Caption = "/ DIV"ã        Left = 312ã        Top = 208ã        Height = 41ã        OnClick = Button15Clickã    END CREATEã    CREATE Button16 AS QBUTTONã        Caption = "M-STORE"ã        Left = 16ã        Top = 144ã        OnClick = Button16Clickã    END CREATEã    CREATE Button17 AS QBUTTONã        Caption = "M-READ"ã        Left = 16ã        Top = 184ã        OnClick = Button17Clickã    END CREATEã    CREATE Button18 AS QBUTTONã        Caption = "M-CLEAR"ã        Left = 16ã        Top = 224ã        OnClick = Button18Clickã    END CREATEã    CREATE Button19 AS QBUTTONã        Caption = "."ã        Left = 176ã        Top = 208ã        Width = 30ã        Height = 41ã        OnClick = Button19Clickã    END CREATEã    CREATE Button20 AS QBUTTONã        Caption = "+/-"ã        Left = 212ã        Top = 208ã        Width = 36ã        Height = 41ã        OnClick = Button20Clickã    END CREATEã    CREATE EqualButton AS QBUTTONã        Caption = "="ã        Left = 253ã        Top = 208ã        Width = 30ã        Height = 41ã        OnClick = EqualButtonClickã    END CREATEã    CREATE Button21 AS QBUTTONã        Caption = "SIN"ã        Left = 80ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button21Clickã    END CREATEã    CREATE Button22 AS QBUTTONã        Caption = "COS"ã        Left = 144ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button22Clickã    END CREATEã    CREATE Button23 AS QBUTTONã        Caption = "ASIN"ã        Left = 80ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button23Clickã    END CREATEã    CREATE Button24 AS QBUTTONã        Caption = "ACOS"ã        Left = 144ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button24Clickã    END CREATEã    CREATE Button25 AS QBUTTONã        Caption = "TAN"ã        Left = 208ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button25Clickã    END CREATEã    CREATE Button26 AS QBUTTONã        Caption = "ATAN"ã        Left = 208ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button26Clickã    END CREATEã    CREATE Button27 AS QBUTTONã        Caption = "BINARY"ã        Left = 272ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button27Clickã    END CREATEã    CREATE Button28 AS QBUTTONã        Caption = "EXP"ã        Left = 16ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button28Clickã    END CREATEã    CREATE Button29 AS QBUTTONã        Caption = "FIX"ã        Left = 272ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button29Clickã    END CREATEã    CREATE Button30 AS QBUTTONã        Caption = "MOD"ã        Left = 272ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button30Clickã    END CREATEã    CREATE Button31 AS QBUTTONã        Caption = "LOG"ã        Left = 16ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button31Clickã    END CREATEã    CREATE Button32 AS QBUTTONã        Caption = "RND#"ã        Left = 208ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button32Clickã    END CREATEã    CREATE Button33 AS QBUTTONã        Caption = "HEX"ã        Left = 80ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button33Clickã    END CREATEã    CREATE Button34 AS QBUTTONã        Caption = "ROUND"ã        Left = 144ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button34Clickã    END CREATEã    CREATE Button35 AS QBUTTONã        Caption = "SQRT"ã        Left = 16ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button35Clickã    END CREATEã    CREATE Button36 AS QBUTTONã        Caption = "1/X"ã        Left = 336ã        Top = 264ã        Width = 51ã        Height = 33ã        OnClick = Button36Clickã    END CREATEã    CREATE Button41 AS QBUTTONã        Caption = "X ^ Y"ã        Left = 336ã        Top = 304ã        Width = 51ã        Height = 33ã        OnClick = Button41Clickã    END CREATEã    CREATE Button42 AS QBUTTONã        Caption = "CLEAR"ã        Left = 16ã        Top = 64ã        OnClick = Button42Clickã    END CREATEã    CREATE Button43 AS QBUTTONã        Caption = "PI"ã        Left = 336ã        Top = 344ã        Width = 51ã        Height = 33ã        OnClick = Button43Clickã    END CREATEã    CREATE ModeLabel AS QLABELã        Caption = "MODE:"ã        Left = 18ã        Top = 384ã        Width = 100ã        Transparent = 1ã    END CREATEã    CREATE RadiansButton AS QRADIOBUTTONã        Caption = "Radians"ã        Checked = Trueã        Left = 70ã        Top = 384ã        Width = 73ã        ShowHint = 1ã        Hint = "Results in Radians"ã        OnClick = RadiansButtonClickã    END CREATEã    CREATE DegreesButton AS QRADIOBUTTONã        Caption = "Degrees"ã        Left = 140ã        Top = 384ã        Width = 73ã        ShowHint = 1ã        Hint = "Results in Degrees"ã        OnClick = DegreesButtonClickã    END CREATEã    CREATE Label1 AS QLABELã        Caption = "Calculations History Window"ã        Left = 410ã        Top = 8ã        Width = 136ã        Transparent = 1ã    END CREATEã    CREATE RichEdit1 AS QRICHEDITã        Left = 410ã        Top = 24ã        Width = 180ã        Height = 310ã        Color = &hffffc0ã        ScrollBars = ssVerticalã        HideScrollBars = False ' Show the scroll barã        Wordwrap = Trueã        ReadOnly = Trueã        PlainText = True ã    END CREATEã    CREATE Button37 AS QBUTTONã        Caption = "Copy"ã        Left = 410ã        Top = 344ã        Width = 40ã        Height = 33ã        OnClick = Button37Clickã    END CREATEã    CREATE Button38 AS QBUTTONã        Caption = "Save"ã        Left = 455ã        Top = 344ã        Width = 40ã        Height = 33ã        OnClick = Button38Clickã    END CREATEã    CREATE Button39 AS QBUTTONã        Caption = "Print"ã        Left = 500ã        Top = 344ã        Width = 40ã        Height = 33ã        OnClick = Button39Clickã    END CREATEã    CREATE Button40 AS QBUTTONã        Caption = "Clear"ã        Left = 545ã        Top = 344ã        Width = 40ã        Height = 33ã        OnClick = Button40Clickã    END CREATEãEND CREATEãã' Import the SetFocus function from USER32.DLLã' - used to set remote active focus on theã'   Calculations History window (a RichEdit area)ã'   so contents may be scrolled to the endã'   via RichEdit1.SelStart (set to end of contents)ãDECLARE FUNCTION SetFocus LIB "USER32.DLL" ALIAS "SetFocus" _ã                (hwnd AS LONG) AS LONGãã' Declare all variables to be used.  VARIANTS areã' used here to allow for greatest flexibilityã' in floating point/long/integer operationsãDIM value as VARIANTã    value = 0ãDIM total AS VARIANTã    total = 0ãDIM entry AS VARIANTã    entry = 0ãDIM entry2 AS VARIANTã    entry2 = 0ãDIM memory AS VARIANTã    memory = 0ãDIM totaltext AS STRINGã    totaltext = ""ãDIM entrytext AS VARIANTã    entrytext = ""ãDIM lastop as INTEGERã    lastop = 0ãDIM negative as INTEGERã    negative = 0ãDIM newentry as INTEGERã    newentry = 1ãDIM radiansordegrees AS VARIANTã    radiansordegrees = 1 'default is radiansãã' Set main Form and History Window fonts to ArialãDIM TextFont AS QFONTã    TextFont.Name = "Arial"ã    TextFont.AddStyles(fsBold)ã    TextFont.Size = 15ãDIM TextFont2 AS QFONTã    TextFont2.Name = "Arial"ã    TextFont2.AddStyles(fsBold)ã    TextFont2.Size = 8ãDIM ImageList AS QImageListãã' Set the Font where the numbers are displayedãSUB SetFont (Sender AS QEDIT)ã    edit1.Font = TextFontã    form.repaintãEND SUBããSUB Button1Click (Sender AS QBUTTON)ã'clear all operationsã    lastop = 0ã    total = 0ã    entry = 0ã    entry2 = 0ã    edit1.text = "0"ã    RichEdit1.AddString ("")ã    RichEdit1.AddString ("** CLEAR ALL **")ã    RichEdit1.AddString ("SUBTOTAL RESET TO: 0")ã    RichEdit1.AddString ("")ã    newentry = 1ãEND SUBãã' Handle virtual keypad operationsãSUB KeyEntry (Key AS STRING)ã    SetFocus(edit1.Handle)ã    if newentry = 1 then edit1.text = ""ã    if edit1.text = "0" or edit1.text = "-0" then edit1.text = ""ã    if len(edit1.text) < 9 thenã        entrytext = edit1.textã        entrytext = entrytext + Keyã        edit1.text = entrytextã    end ifã    newentry = 0ãEND SUBãã' Scroll to end of History WindowãSUB ScrollToBottom (SENDER AS QRICHEDIT)ã    SetFocus(RichEdit1.Handle)ã    RichEdit1.SelStart = LEN(RichEdit1.text)ãEND SUBãã' Handle number entryãSUB Button2Click (Sender AS QBUTTON)ã'1ã    KeyEntry("1")ãEND SUBããSUB Button3Click (Sender AS QBUTTON)ã'2ã    KeyEntry("2")ãEND SUBããSUB Button4Click (Sender AS QBUTTON)ã'3ã    KeyEntry("3")ãEND SUBããSUB Button5Click (Sender AS QBUTTON)ã'4ã    KeyEntry("4")ãEND SUBããSUB Button6Click (Sender AS QBUTTON)ã'5ã    KeyEntry("5")ãEND SUBããSUB Button7Click (Sender AS QBUTTON)ã'6ã    KeyEntry("6")ãEND SUBããSUB Button8Click (Sender AS QBUTTON)ã'7ã    KeyEntry("7")ãEND SUBããSUB Button9Click (Sender AS QBUTTON)ã'8ã    KeyEntry("8")ãEND SUBããSUB Button10Click (Sender AS QBUTTON)ã'9ã    KeyEntry("9")ãEND SUBããSUB Button11Click (Sender AS QBUTTON)ã'0ã    KeyEntry("0")ãEND SUBãã' Perform all mathematical operationsãSUB PerformOperationsã    entrytext = edit1.textã    ' Zero is used here and below to scope VARIANTã    ' to numerical rather than string operations:ã    entry2 = 0 + entrytextã    select case lastopã        case 1ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("ADDING " + str$(entry2))ã            RichEdit1.AddString ("TO " + str$(entry))ã            total = 0 + entry + entry2ã            entry = totalã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(total)ã        case 2ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("SUBTRACTING " + str$(entry2))ã            RichEdit1.AddString ("FROM " + str$(entry))ã            total = 0 + entry - entry2ã            entry = totalã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(total)ã        case 3ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("MULTIPLYING " + str$(entry))ã            RichEdit1.AddString ("WITH " + str$(entry2))ã            total = 0 + (entry * entry2)ã            entry = totalã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(total)ã        case 4ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("DIVIDING " + str$(entry))ã            RichEdit1.AddString ("BY " + str$(entry2))ã            total = 0 + (entry / entry2)ã            entry = totalã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(total)ã        case 5ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("SIN " + str$(entry))ã            entry = SIN(entry * radiansordegrees) ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 6ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("COS " + str$(entry))ã            entry = COS(entry * radiansordegrees)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 7ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("ASIN " + str$(entry))ã            entry = ASIN(entry * radiansordegrees)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 8ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("ACOS " + str$(entry))ã            entry = ACOS(entry) * radiansordegreesã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 9ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("TAN " + str$(entry))ã            entry = TAN(entry * radiansordegrees)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 10ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("ATAN " + str$(entry))ã            entry = ATAN(entry * radiansordegrees)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 11ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("BIN " + str$(entry))ã            entry = BIN$(ABS(entry)) ' stringã            RichEdit1.AddString ("RESULT:" + entry)ã            totaltext = entryã        case 12ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("EXP " + str$(entry))ã            entry = EXP(entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 13ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("FIX " + str$(entry))ã            entry = FIX(entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 14ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("MOD " + str$(entry) + "/" + str$(entry2))ã            total = 0 + (entry MOD entry2)ã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 15ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("LOG " + str$(entry))ã            entry = LOG(entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 16ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("RND " + str$(entry))ã            entry = RNDã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 17ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("ROUND " + str$(entry))ã            entry = ROUND(entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 18ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("SQR " + str$(entry))ã            entry = SQR(entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 19ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("1/x " + str$(entry))ã            entry = 0 + (1/entry)ã            total = entryã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(entry)ã        case 20ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("RAISING " + str$(entry))ã            RichEdit1.AddString ("TO THE POWER OF " + str$(entry2))ã            total = 0 + (entry ^ entry2)ã            entry = totalã            RichEdit1.AddString ("NEW SUBTOTAL:" + str$(total))ã            totaltext = str$(total)ã        case 21ã            RichEdit1.AddString ("")ã            RichEdit1.AddString ("SUBTOTAL: " + str$(total))ã            RichEdit1.AddString ("HEX " + str$(entry))ã            entry = HEX$(entry) ' stringã            RichEdit1.AddString ("RESULT:" + entry)ã            totaltext = entryã    end selectã    edit1.text = totaltextã    lastop = 0ã    newentry = 1ã    ScrollToBottomãEND SUBãã' Functions to follow handle all mathematicalã' operations as user clicks buttons.ã' Sometimes a user will perform several calculationsã' in a row before clicking EQUALS, so lastop is usedã' here so PerformOperations knows what operation wasã' last operation (e.g. addition, multiplication) wasã' being performed, if any.ããSUB Button12Click (Sender AS QBUTTON)ã'+ã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 1ãEND SUBããSUB Button13Click (Sender AS QBUTTON)ã'-ã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 2ãEND SUBããSUB Button14Click (Sender AS QBUTTON)ã'Xã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 3ãEND SUBããSUB Button15Click (Sender AS QBUTTON)ã' /ã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 4ãEND SUBããSUB EqualButtonClick (Sender AS QBUTTON)ã'=ã    PerformOperationsãEND SUBãã' Store a number in memoryãSUB Button16Click (Sender AS QBUTTON)ã'm-storeã    entrytext = edit1.textã    entry = val(entrytext)ã    memory = entryãEND SUBãã' Read number stored in memory; zero if none storedãSUB Button17Click (Sender AS QBUTTON)ã'm-readã    edit1.text = str$(memory)ã    entry = memoryãEND SUBãã' Clear memory (memory = zero)ãSUB Button18Click (Sender AS QBUTTON)ã'm-clearã    memory = 0ãEND SUBãã' Handle the decimal buttonãSUB Button19Click (Sender AS QBUTTON)ã' . decã    if newentry = 1 then edit1.text = ""ã    entrytext = edit1.textã    entrytext = entrytext - "."ã    if len(entrytext) > 0 thenã        entrytext = entrytext + "."ã        elseã        entrytext = "."ã    end ifã    edit1.text = entrytextã    newentry = 0ãEND SUBãã'Handle the positive/negative toggle buttonãSUB Button20Click (Sender AS QBUTTON)ã' +/-ã    entrytext = edit1.textã    entrytext = entrytext - "-"ã    if negative = 0 thenã        entrytext = "-" + entrytextã        negative = 1ã        elseã        negative = 0ã        edit1.text = entrytextã        entry = val(entrytext)ã    end ifã    edit1.text = entrytextãEND SUBãã' More native Rapid-Q mathematical functionsãSUB Button21Click (Sender AS QBUTTON)ã'sinã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 5ã    PerformOperationsãEND SUBããSUB Button22Click (Sender AS QBUTTON)ã'cosã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 6ã    PerformOperationsãEND SUBããSUB Button23Click (Sender AS QBUTTON)ã'asinã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 7ã    PerformOperationsãEND SUBããSUB Button24Click (Sender AS QBUTTON)ã'acosã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 8ã    PerformOperationsãEND SUBããSUB Button25Click (Sender AS QBUTTON)ã'tanã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 9ã    PerformOperationsãEND SUBããSUB Button26Click (Sender AS QBUTTON)ã'atanã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 10ã    PerformOperationsãEND SUBããSUB Button27Click (Sender AS QBUTTON)ã'convert to binaryã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 11ã    PerformOperationsãEND SUBããSUB Button28Click (Sender AS QBUTTON)ã'exp/eã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 12ã    PerformOperationsãEND SUBããSUB Button29Click (Sender AS QBUTTON)ã'fixã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 13ã    PerformOperationsãEND SUBããSUB Button30Click (Sender AS QBUTTON)ã'modã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 14ãEND SUBããSUB Button31Click (Sender AS QBUTTON)ã'logã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 15ã    PerformOperationsãEND SUBããSUB Button32Click (Sender AS QBUTTON)ã'Produce a random number - actually a decimalã'between 0 and 1 as no Upper Bound has been setã    randomizeã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 16ã    PerformOperationsãEND SUBããSUB Button34Click (Sender AS QBUTTON)ã'roundã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 17ã    PerformOperationsãEND SUBããSUB Button35Click (Sender AS QBUTTON)ã'sqrtã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 18ã    PerformOperationsãEND SUBããSUB Button36Click (Sender AS QBUTTON)ã'1/xã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 19ã    PerformOperationsãEND SUBããSUB Button43Click (Sender AS QBUTTON)ã'Produce the value of pi (using 3.1415927)ã    entry = 3.1415927ã    edit1.text = "3.1415927"ã    lastop = 0ãEND SUBããSUB Button41Click (Sender AS QBUTTON)ã'X ^ Y  (raise X to the power of Y)ã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 20ãEND SUBããSUB Button33Click (Sender AS QBUTTON)ã'convert to hexadecimalã    if lastop > 0 then PerformOperationsã    entrytext = edit1.textã    entry = val(entrytext)ã    edit1.text = ""ã    lastop = 21ã    PerformOperationsãEND SUBãã'Two radio buttons toggle the degrees/radiansã'that will affect functions like Sin and CosãSUB RadiansButtonClick (Sender AS QRADIOBUTTON)ã'results in radiansã    DegreesButton.Checked = Falseã    RadiansButton.Checked = Trueã    radiansordegrees = 1ãEND SUBããSUB DegreesButtonClick (Sender AS QRADIOBUTTON)ã'results in degreesã    DegreesButton.Checked = Trueã    RadiansButton.Checked = Falseã    radiansordegrees = (3.1415927 / 180)ãEND SUBãã'HISTORY WINDOW FUNCTIONSãSUB Button37Click (Sender AS QBUTTON)ã'copy history window text to clipboardã    RichEdit1.SelStart = 0ã    RichEdit1.SelLength = LEN(RichEdit1.text)ã    RichEdit1.CopyToClipboardã    RichEdit1.SelStart = 0ã    RichEdit1.SelLength = 0ãEND SUB    ããSUB Button38Click (Sender AS QBUTTON)ã'save history window text to a text (.txt) file ã      dim SaveDialog AS QSaveDialogã      SaveDialog.Filter = "Text Files|*.txt"ã      SaveDialog.FilterIndex = 0ã      if SaveDialog.Execute THENã        if FileExists(SaveDialog.FileName) THENã            if MessageBox("FILE ALREADY EXISTS!  Are you sure you want to overwrite it?", "Close", 1) = 1 THENã                RichEdit1.SaveToFile(SaveDialog.FileName)ã            end ifã        elseã            RichEdit1.SaveToFile(SaveDialog.FileName)ã        end ifã      end ifãEND SUBããSUB Button39Click (Sender AS QBUTTON)ã'print history window textã    if MessageBox("Print contents of Calculation History window.  Turn printer on and click OK to proceed or CANCEL.", "CANCEL", 1) = 1 THENã        LPRINT RichEdit1.textã        LFLUSHã    end ifãEND SUBããSUB Button40Click (Sender AS QBUTTON)ã'clear history text ã    RichEdit1.text = ""ãEND SUBããSUB Button42Click (Sender AS QBUTTON)ã'clear the current numbered entered.ã'does not clear total.ã    entry = 0ã    edit1.text = ""ãEND SUBããSUB AboutClick (Sender AS QIMAGE)ã'show an About This Program messageã'if user clicks the iconã    showmessage "The Calculations Station (beta version .01) was created by Robert J. Tiess © 2000." + chr$(13) + chr$(13) + "THIS PROGRAM IS FREEWARE AND IS POWERED BY RAPID-Q."ãEND SUBãã'Set the fonts and start the program!ãSetFont(edit1)ãForm.Font = TextFont2ãForm.ShowModalãWolfgang Kempin                RAPID-Q E-MAIL FUNCTIONS       wolfgang.kempin@epost.de       10-18-00 (21:05)       RAPIDQ                 568  25605    MAIL.BAS    ' **************************************ã' * RQ/mail - Rapid-Q e-mail functions * Version 1.99d [BETA]ã' **************************************ã' coded by Wolfgang 'DarkWulf' Kempin <wolfgang.kempin@gmx.de>ã'ã' <<< Feel free to use this code (or parts of it) in your programs :) >>>ã'ã' - RQ/mail was formerly known as 'Express Mailer'ã' - There is almost no POP3 support at the moment :(ã' - See demo code at the end of the programã'ã' =============================================================================ã'ã' - WARNING: Don't try to send e-mails to multiple recipients (multiple TOs/CCs/ã'    ! ! !   BCCs) -- I have to rewrite that part first; it's too buggy ;(ã'            (some mails will be sent and some not)ã'ã' <<< BETA VERSION - still a lot of bugs in it >>>ã' <<< I'm not responsible for what you do with >>>ã' <<< this code. This project is in a very     >>>ã' <<< early stage; you have been warned ;-)    >>>ã'ã' =============================================================================ã'ã' Versionsã' --------ã'ã' Date*    Version Change Description              [* = date format DD/MM/YY]ã' ??/??/99   1.00     +   First complete and working versionã' ??/??/99   1.01     +   Fixed '555 Syntax error' when sending mailsã' 03/10/00   1.05     +   Fix: Mails were sent with empty bodyã'                         (only the subject was there)ã' 04/10/00   1.99     +   Decided to rework on the project upon public demand ;)ã'                     +   Complete rewrite of the programã'                    <i>  RENAMED to RQ/mailã'                     +   Splitted the project up into the RQ/mail functionsã'                         and a sample mailer program (not yet done)ã'                     +   All further versions will be tested on Linux, too :)ã' 10/10/00   1.99b    +   Added a simple POP-before-SMTP functionã'                     +   Corrected multi-line SMTP reply bugã'                         (not the POP multi-line replys... but the onlyã'                         POP3 function yet is the POP3beforeSMTP, and thereã'                         will hardly be multi-line replys when just logging in)ã' 11/10/00   1.99c    +   Reduced code size a bitã' 21/10/00   1.99d    +   Fixed: tried to send e-mails with emtpy strings asã'                         destinationã'                     +   First working Linux versionã'                    <i>  First public release after a _very_ long timeã'ã' To do/plans for this project:ã' -----------------------------ã'ã' Priority Descriptionã'    1     create sample mailerã'    2     add basic POP3 support to get complete RQ/mail libraryã'    3     add support to exclude unused functionsã'    4     change RQmail_SendMail function to just send the e-mails to allã'          addresses at once (and not one e-mail to each address)ã'    5     documentationã'    9     MIME support?ã'    ?     a better interfaceã'    ?     write a complete mail program (sth. like OE, but much better ;-)ã'ã' =============================================================================ã' This library is far from being complete but I think you can already use itã' for some simple tasks. If you've got any questions, want to report bugs orã' have an idea how this library could be improved feel free to mail me atã' <wolfgang.kempin@gmx.de>.ã' =============================================================================ã' Known bugs: (in brackets: state of the function)ã'ã' RQmail_SendRaw:           * none at the moment, seems to be OKã' [WORKING]ã'ã' RQmail_SendMail:          * no format checking is done with the TO$/CC$/BCC$ã' [BUGGY, but working]        variables yetã'                           * multiple recipients don't really work yetã'ã' POP3beforeSMTP:           * no multi-line replys supported yet (but thereã' [UNTESTED]                  will hardly be such replies when you areã'                             just logging in [IMO])ã'                           * has not been tested very muchã'ã' =============================================================================ããDIM RQmail_Error AS STRING                       ' Global error variableãã' POP3ãDECLARE FUNCTION POP3beforeSMTP (server$, username$, passwd$) AS INTEGERãã' SMTPãDECLARE FUNCTION RQmail_SendMail (from$, to$, cc$, bcc$, priority AS INTEGER, subject$, text$, server$) AS STRINGãDECLARE FUNCTION RQmail_SendRaw (smtp_server$, email_from$, email_to$, content$) AS INTEGERãã' =============================================================================ã' === SMTP support - Send e-mails                                           ===ã' =============================================================================ãã' -----------------------------------------------------------------------------ã' | Function RQmail_SendMail(from$, to$, cc$, bcc$, prior, subject$, text$)   |ã' -----------------------------------------------------------------------------ã' | Send an e-mail to the specified addresses (including cc's and bcc's! :)   |ã' -----------------------------------------------------------------------------ã' | from$ :=       full name and e-mail address of the person sending the     |ã' |                e-mail (format: see below)                                 |ã' | to$ :=         dito for the recipients, but you can add more than one here|ã' | cc$ :=         dito for the 'carbon' copies                               |ã' | bcc$ :=        dito...                                                    |ã' | prior :=       priority { 0 = low; 1 = normal; 2 = high; }                |ã' | subject$ :=    subject of the e-mail                                      |ã' | text$ :=       the content of the e-mail                                  |ã' -----------------------------------------------------------------------------ã' | from$, to$ and cc$ have to be in the following format:                    |ã' | "Mr. Smith <mr.smith@somewhere.com>"                                      |ã' | for multiple reciepients you can add several addresses separated by       |ã' | semicolons (';'):                                                         |ã' | "Mark <see@above.com>;John <j@ohn.net>;bob@cheap.mail.org; . . ."         |ã' -----------------------------------------------------------------------------ã' | Returns 0 if there were no errors, 1 if some e-mails could not be sent and|ã' | 2 if NO e-mail could be sent.                                             |ã' =============================================================================ããFUNCTION RQmail_SendMail (from$, to$, cc$, bcc$, priority AS INTEGER, subject$, text$, server$) AS INTEGERã   DIM eml AS STRING 'contains the e-mailã   DIM cl AS STRING 'cl will be set to <CR>+<LF>ãã   DIM a AS INTEGER 'counterã   DIM em AS STRING 'one extracted e-mail addressã   DIM ret AS INTEGER 'return codeã   DIM errtmp AS STRING 'temporary error stackãã   DIM m_all AS INTEGER ' count of all mailsã   DIM m_err AS INTEGER ' number of mails which could not be sentãã   ' ---=== FIRST STEP: Create a valid e-mail with a correct header ===---ã   ã   cl = CHR$(13) + CHR$(10) '= <CR>+<LF>ãã   eml = "From: " + from$ +cl '###!!!### TO DO: add format checking hereã   eml = eml + "To: " + to$ +clã   eml = eml + "Cc: " + cc$ +clã                              '###!!!### TO DO: add date info hereã   eml = eml + "Subject: " + subject$ +clã   eml = eml + "X-Mailer: RQ/mail version 2.0" +clã   IF priority = 0 THENã      eml = eml + "X-Priority: 5" +clã      eml = eml + "X-MSMail-Priority: Low" +clã   ELSEIF priority = 1 THENã      eml = eml + "X-Priority: 3" +clã      eml = eml + "X-MSMail-Priority: Normal" +clã   ELSEIF priority = 2 THENã      eml = eml + "X-Priority: 1" +clã      eml = eml + "X-MSMail-Priority: High" +clã   ELSEã      eml = eml + "X-Priority: 3" +clã      eml = eml + "X-MSMail-Priority: Normal" +clã   END IFã   ã   eml = eml +clã   eml = eml + text$ã   ' ---=== SECOND STEP: Send the e-mail ===---ãã   IF INSTR(to$, ";") = 0 THEN to$ = to$ + ";"ã   IF INSTR(cc$, ";") = 0 THEN cc$ = cc$ + ";"ã   IF INSTR(bcc$, ";") = 0 THEN bcc$ = bcc$ + ";"ãã   'Now extract all e-mail addresses from to$, cc$ and bcc$ and sendã   'a copy to each one. If an error is encountered, the process willã   'continue; all errors will be logged to RQmail_Error.ãã   '###!!!### change this soon -- this takes much too long, why not useã   '          multiple "RCPT TO:<>" 's in one session?ãã   errtmp = ""ã   m_all = 0ã   m_err = 0ãã   '>> TO$ã   FOR A = 1 TO TALLY(to$, ";")+1ã      em = FIELD$(FIELD$(to$, ";", A), "<", 2) 'automatically strips of '<'ã      em = MID$(em, 1, LEN(em) - 1)            'now get rid of the '>'ãã      IF em = "" THEN em = FIELD$(to$, ";", A)  'no name given, just a plain e-mail addressãã      IF em <> "" THEN ret = RQmail_SendRaw(server$, MID$(FIELD$(from$, "<", 2), 1, LEN(FIELD$(from$, "<", 2)) - 1), em, eml) ELSE ret = 0ã      IF ret <> 0 THENã         errtmp = "<" + em + ">: '" + RQmail_Error + "'"ã         m_err = m_err + 1ã      ELSEã         m_all = m_all + 1ã      END IFã   NEXT Aãã   '>> CC$ã   IF CC$ <> ";" THENã      FOR A = 1 TO TALLY(cc$, ";")+1ã         em = FIELD$(FIELD$(cc$, ";", A), "<", 2) 'automatically strips of '<'ã         em = MID$(em, 1, LEN(em) - 1)            'now get rid of the '>'ãã         IF em = "" THEN em = FIELD$(cc$, ";", A)  'no name given, just a plain e-mail addressã   ã         IF em <> "" THEN ret = RQmail_SendRaw(server$, MID$(FIELD$(from$, "<", 2), 1, LEN(FIELD$(from$, "<", 2)) - 1), em, eml) ELSE ret = 0ã         IF ret <> 0 THENã            errtmp = "<" + em + ">: '" + RQmail_Error + "'"ã            m_err = m_err + 1ã         ELSEã            m_all = m_all + 1ã         END IFã      NEXT Aã   END IFãã   '>> BCC$ã   IF bcc$ <> ";" THENã      FOR A = 1 TO TALLY(bcc$, ";")+1ã         em = FIELD$(FIELD$(bcc$, ";", A), "<", 2) 'automatically strips of '<'ã         em = MID$(em, 1, LEN(em) - 1)             'now get rid of the '>'ãã         IF em = "" THEN em = FIELD$(bcc$, ";", A)  'no name given, just a plain e-mail addressã   ã         IF em <> "" THEN ret = RQmail_SendRaw(server$, MID$(FIELD$(from$, "<", 2), 1, LEN(FIELD$(from$, "<", 2)) - 1), em, eml) ELSE ret = 0ã         IF ret <> 0 THENã            errtmp = "<" + em + ">: '" + RQmail_Error + "'"ã            m_err = m_err + 1ã         ELSEã            m_all = m_all + 1ã         END IFã      NEXT Aã   END IFãã   RQmail_Error = errtmpãã   IF m_err = m_all THEN                         'no mail could be sentã      RQmail_SendMail = 2ã   ELSEIF (m_all > m_err) AND (m_err > 0)THEN    'some could be sentã      RQmail_SendMail = 1ã   ELSEIF m_err = 0 THEN                         'all could be sentã      RQmail_SendMail = 0ã   END IFãEND FUNCTIONãã' =============================================================================ãã' -----------------------------------------------------------------------------ã' | Function RQmail_Internal_SMTPreply (Socket AS QSocket, Handle AS INTEGER) |ã' | AS STRING                                                                 |ã' -----------------------------------------------------------------------------ã' | Returns a SMTP reply (supports multi-line replies)                        |ã' -----------------------------------------------------------------------------ããFUNCTION RQmail_Internal_SMTPreply (Socket AS QSocket, Handle AS INTEGER) AS STRINGã   DIM ErrLine AS STRING                         ' Last SMTP server messageã   DIM ErrLinePart AS STRING                     ' Last SMTP server messageã                                                 ' (current line of a multi-ã                                                 ' line reply)ãã   ErrLine = ""ã   DOã      ErrLinePart = Socket.ReadLine(Handle) 'Get the last server messageã      ErrLine = ErrLine + ErrLinePart + CHR$(13) + CHR$(10)ã   LOOP UNTIL MID$(ErrLinePart, 4, 1) <> "-"ã   ErrCode = VAL(MID$(ErrLine, 1, 3))                'Extract the 3 digit error code (will stay the same in multi-line replys)ãã   IF (Socket.Transferred < 0) AND (ErrLine = "") THENã      ErrLine = "5XX Connection was closed unexpectedly."ã      Socket.Close(Handle)ã   END IFãã   RQmail_Internal_SMTPreply = ErrLineãEND FUNCTIONãã' =============================================================================ãã' -----------------------------------------------------------------------------ã' | Function RQmail_SendRaw(smtp_server$, email_from$, email_to$, content$)   |ã' -----------------------------------------------------------------------------ã' | smtp_server$ := Host name of the mail server you want to send the e-mail  |ã' |                 to.                                                       |ã' |                 i.e.: mail.myserver.com                                   |ã' | email_from$ :=  The e-mail address of the account sending the e-mail.     |ã' |                 i.e.: hello@world.net                                     |ã' | email_to$ :=    The e-mail address of the person you want to write to.    |ã' |                 i.e.: wow@this.is.a.very.long.hostname.is.it.cx           |ã' | content$ :=     The e-mail content (including header)                     |ã' -----------------------------------------------------------------------------ã' | This function looks very complicated... but it isn't at all ;)            |ã' | If you take a closer look, you will see that it is just almost the same   |ã' | commands repeated several times; except the parser part of the function.  |ã' | When sending an e-mail you need to verify that your e-mail doesn't contain|ã' | a single line with just a dot ('.') in it -- this is already used to mark |ã' | the end of a mail. So we've got to check that. The parser should work on  |ã' | Windows and on Linux, too.                                                |ã' |                                                                           |ã' | 11/11/00: put most of the SMTP reply check code into a separate function. |ã' |           (-> program size reduced)                                       |ã' -----------------------------------------------------------------------------ã' | Returns 0 if everything went alright and 1 if there was an error.         |ã' -----------------------------------------------------------------------------ããFUNCTION RQmail_SendRaw (smtp_server$, email_from$, email_to$, content$) AS INTEGERã   DIM SMTP_Socket AS QSocket                    ' Define QSocketã   DIM SMTP_SocketHandle AS INTEGERãã   DIM ErrCode AS INTEGER                        ' Last SMTP error codeã   DIM ErrLine AS STRING                         ' Last SMTP server messageãã   DIM ParsedLine AS STRING                      ' used by the e-mail parserã   DIM a AS INTEGERã   DIM eol AS INTEGER                            ' end of line?ãã   ' Connect to serverã   SMTP_SocketHandle = SMTP_Socket.Connect(smtp_server$, 25)ãã   IF SMTP_SocketHandle < 0 THEN                          ' Connect error?ã      RQmail_Error = "5XX Could not connect to server"ã      RQmail_SendRaw = 1 'abortã      EXIT FUNCTIONã   END IFã   ã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Say hello ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, "HELO localhost")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Mail from ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, "MAIL FROM:<" + email_from$ + ">")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Mail to ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, "RCPT TO:<" + email_to$ + ">")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Now send the mail ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, "DATA")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Parse mail ===---ã   '[lines with a single dot ('.') will be changed to ('..') because a singleã   'dot marks the end of the e-mail]ãã   'CHR$(13) = <CR>, CHR$(10) = <LF>ã   ã   ParsedLine = ""ã   FOR A = 1 TO LEN(content$)ã      IF (MID$(content$, A, 1) = CHR$(13)) OR _ã         (MID$(content$, A, 1) = CHR$(10)) THENã         'line ends, check whether content$ usesã         '<CR>, <LF>, <CR>+<LF> or <LF>+<CR> to mark the end of a lineãã         eol = ASC(MID$(content$, A, 1))ã         A = A + 1ã         IF ASC(MID$(content$, A, 1)) = eol THENã            'one line of text plus one empty line ending with 2 <CR>s or <LF>sã   ã            IF ParsedLine = "." THENã               SMTP_Socket.WriteLine(SMTP_SocketHandle, "..")ã            ELSEã               SMTP_Socket.WriteLine(SMTP_SocketHandle, ParsedLine)ã            END IFã            SMTP_Socket.WriteLine(SMTP_SocketHandle, "")ã            ParsedLine = ""ã         ELSEã            IF (MID$(content$, A, 1) = CHR$(13)) OR _ã               (MID$(content$, A, 1) = CHR$(10)) THENã               'one line ending with <CR>+<LF> or <LF>+<CR>ãã               IF ParsedLine = "." THENã                  SMTP_Socket.WriteLine(SMTP_SocketHandle, "..")ã               ELSEã                  SMTP_Socket.WriteLine(SMTP_SocketHandle, ParsedLine)ã               END IFã               ParsedLine = ""ã            ELSEã               'one line ending with <CR> or <LF>ãã               IF ParsedLine = "." THENã                  SMTP_Socket.WriteLine(SMTP_SocketHandle, "..")ã               ELSEã                  SMTP_Socket.WriteLine(SMTP_SocketHandle, ParsedLine)ã               END IFã               ParsedLine = ""ã            END IFã         END IFã      ELSEã         ParsedLine = ParsedLine + MID$(content$, A, 1)ã      END IFã   NEXT Aãã   'write the restã   IF ParsedLine <> "" THENã      IF ParsedLine = "." THEN ã         SMTP_Socket.WriteLine(SMTP_SocketHandle, "..")ã      ELSEã         SMTP_Socket.WriteLine(SMTP_SocketHandle, ParsedLine)ã      END IFã   END IFãã   'End of mail ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, ".")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Bye bye ===---ã   SMTP_Socket.WriteLine(SMTP_SocketHandle, "QUIT")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = RQmail_Internal_SMTPreply(SMTP_Socket, SMTP_SocketHandle)ã   ErrCode = VAL(MID$(ErrLine, 1, 3))ã   IF (ErrCode >= 400) THEN 'Error?ã      RQmail_Error = ErrLineã      RQmail_SendRaw = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   SMTP_Socket.Close(SMTP_SocketHandle)ã   RQmail_SendRaw = 0 ' ---=== mail sent successfully ===---ãEND FUNCTIONãã' =============================================================================ã' === POP3 support - Recieve e-mails                                        ===ã' =============================================================================ãã' -----------------------------------------------------------------------------ã' | Function RQmail_POP3beforeSMTP(server$, username$, passwd$) AS INTEGER    |ã' -----------------------------------------------------------------------------ã' | Logs in on the specified POP3 server and quits the connection afterwards. |ã' | This function is only of use to someone who's e-mail server requires      |ã' | POP-before-SMTP.                                                          |ã' -----------------------------------------------------------------------------ã' | server$ :=   host name of the server (i.e. pop3.myserver.com)             |ã' | username$ := user name                                                    |ã' | passwd$ :=   password                                                     |ã' -----------------------------------------------------------------------------ã' | The function returns 0 if there were no errors and 1 if the operation     |ã' | could not be completed successfully (see also RQmail_Error$)              |ã' =============================================================================ããFUNCTION RQmail_POP3beforeSMTP (server$, username$, passwd$) AS INTEGERã   DIM POP3_Socket AS QSocket                    ' Define QSocketã   DIM POP3_SocketHandle AS INTEGERãã   DIM ErrCode AS STRING                         ' Last POP3 error codeã   DIM ErrLine AS STRING                         ' Last POP3 server messageãã   ' Connect to serverã   POP3_SocketHandle = POP3_Socket.Connect(server$, 110)ãã   IF POP3_SocketHandle < 0 THEN                          ' Connect error?ã      RQmail_Error = "-ERR Could not connect to server"ã      POP3beforeSMTP = 1 'abortã      EXIT FUNCTIONã   END IFãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = POP3_Socket.ReadLine(POP3_SocketHandle) 'Get the last server messageã   ErrCode = LEFT$(ErrLine, 1)                       'Extract the first letter (should be either '+' or '-')ã   IF (ErrCode = "-") OR (POP3_Socket.Transferred < 0) THEN 'Error?ã      IF (POP3_Socket.Transferred < 0) AND (ErrLine = "") THEN ErrLine = "-ERR Connection was closed unexpectedly."ã      POP3_Socket.Close(POP3_SocketHandle)ã      RQmail_Error = ErrLineã      POP3beforeSMTP = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Send username ===---ã   POP3_Socket.WriteLine(POP3_SocketHandle, "USER " + username$)ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = POP3_Socket.ReadLine(POP3_SocketHandle) 'Get the last server messageã   ErrCode = LEFT$(ErrLine, 1)                       'Extract the first letter (should be either '+' or '-')ã   IF (ErrCode = "-") OR (POP3_Socket.Transferred < 0) THEN 'Error?ã      IF (POP3_Socket.Transferred < 0) AND (ErrLine = "") THEN ErrLine = "-ERR Connection was closed unexpectedly."ã      POP3_Socket.Close(POP3_SocketHandle)ã      RQmail_Error = ErrLineã      POP3beforeSMTP = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Send password ===---ã   POP3_Socket.WriteLine(POP3_SocketHandle, "PASS " + passwd$)ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = POP3_Socket.ReadLine(POP3_SocketHandle) 'Get the last server messageã   ErrCode = LEFT$(ErrLine, 1)                       'Extract the first letter (should be either '+' or '-')ã   IF (ErrCode = "-") OR (POP3_Socket.Transferred < 0) THEN 'Error?ã      IF (POP3_Socket.Transferred < 0) AND (ErrLine = "") THEN ErrLine = "-ERR Connection was closed unexpectedly."ã      POP3_Socket.Close(POP3_SocketHandle)ã      RQmail_Error = ErrLineã      POP3beforeSMTP = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'Quit ===---ã   POP3_Socket.WriteLine(POP3_SocketHandle, "QUIT")ãã   ' ---=== Check for errors or broken connection ===---ã   ErrLine = POP3_Socket.ReadLine(POP3_SocketHandle) 'Get the last server messageã   ErrCode = LEFT$(ErrLine, 1)                       'Extract the first letter (should be either '+' or '-')ã   IF (ErrCode = "-") OR (POP3_Socket.Transferred < 0) THEN 'Error?ã      IF (POP3_Socket.Transferred < 0) AND (ErrLine = "") THEN ErrLine = "-ERR Connection was closed unexpectedly."ã      POP3_Socket.Close(POP3_SocketHandle)ã      RQmail_Error = ErrLineã      POP3beforeSMTP = 1 ' ---=== abort ===---ã      EXIT FUNCTIONã   END IFãã   'everything was OKã   POP3_Socket.Close(POP3_SocketHandle)ã   RQmail_Error = ""ã   POP3beforeSMTP = 0ãEND FUNCTIONãã' =============================================================================ãã'Demo codeãDIM ret AS INTEGERããret = RQmail_POP3beforeSMTP("pop.mail.com", "test@rqmail", "nopwd")ãShowMessage "Return code of POP3-before-SMTP: " + STR$(ret) + " -- Error: '" + RQmail_Error + "'"ããret = RQmail_SendMail("someone <darkwulf>", "you <user>", "", "", 2, "New version!", "<<<contents>>>", "smtp.mail.com")ãShowMessage "Return code of SendMail: " + STR$(ret) + " --- Error information: '" + RQmail_Error + "' ['' means: no error]"ãParanco                        GUI TELNET CLIENT              paranco@hotmail.com            12-11-00 (19:17)       RAPIDQ                 139  3084     TELE1.BAS   $INCLUDE "RAPIDQ.INC"ããDECLARE SUB Edit3KeyPress (Key AS WORD, Sender AS QEDIT)ãDECLARE SUB Button1Click (Sender AS QBUTTON)ãDECLARE SUB Button2Click (Sender AS QBUTTON)ãDECLARE SUB Button3Click (Sender AS QBUTTON)ãDECLARE SUB TimerExpiredããCONST DELAY = 500ãDIM dalserver as stringãDIM TCP1 AS QSocketãDIM SockNum AS INTEGERã    SockNum = 0ããCREATE Form AS QFORMã    Caption = "TELNET CLIENT"ã    Width = 583ã    Height = 384ã    Centerã    BorderStyle = bsDialogã    CREATE Label2 AS QLABELã        Caption = "Porta"ã        Left = 224ã        Top = 16ã        Transparent = 1ã    END CREATEã    CREATE Label1 AS QLABELã        Caption = "Host remoto"ã        Left = 16ã        Top = 16ã        Width = 64ã        Transparent = 1ã    END CREATEã    CREATE RichEdit1 AS QRICHEDITã        Left = 12ã        Top = 51ã        Width = 550ã        Height = 250ã        ScrollBars = ssBothã        TabOrder = 4ã        AddStrings ""ã    END CREATEã    CREATE Edit1 AS QEDITã        Text = ""ã        Left = 80ã        Top = 16ã        Width = 137ã    END CREATEã    CREATE Edit2 AS QEDITã        Text = ""ã        Left = 260ã        Top = 16ã        Width = 65ã        TabOrder = 1ã    END CREATEã    CREATE Button1 AS QBUTTONã        Caption = "Connetti"ã        Left = 360ã        Top = 16ã        TabOrder = 2ã        OnClick = Button1Clickã    END CREATEã    CREATE Button2 AS QBUTTONã        Caption = "Disconnetti"ã        Left = 456ã        Top = 16ã        TabOrder = 3ã        OnClick = Button2Clickã    END CREATEã    CREATE Edit3 AS QEDITã        Text = ""ã        Left = 16ã        Top = 320ã        Width = 305ã        TabOrder = 5ã        OnKeyPress = Edit3KeyPressã    END CREATEã    CREATE Button3 AS QBUTTONã        Caption = "Invia"ã        Left = 344ã        Top = 320ã        TabOrder = 6ã        OnClick = Button3Clickã    END CREATEã    CREATE ScrollBox1 AS QSCROLLBOXã        Left = 109ã        Top = -75ã        TabOrder = 7ã    END CREATEãEND CREATEãããDIM Timer1 AS QTimerã    Timer1.Interval = DELAYã    Timer1.OnTimer = TimerExpiredãRichEdit1.PlainText = TrueãRichEdit1.WordWrap = FalseãããSUB TimerExpiredã  Timer1.Enabled = Falseã  Timer1.Interval = DELAYã  IF SockNum <= 0 THENã    Timer1.Enabled = Trueã    EXIT SUBã  END IFã  IF TCP1.IsServerReady(SockNum) THENã    dalserver = TCP1.ReadLine(SockNum)ã    RichEdit1.Addstring dalserverã    IF TCP1.Transferred  < 0 THENã      SockNum = 0ã      ShowMessage "Server disconnesso!"ã    END IFã  END IFã  Timer1.Enabled = TrueãEND SUBããSUB Edit3KeyPress (Key AS WORD, Sender AS QEDIT)ãif key=13 thenãdim pippo as QbuttonãButton3Click (pippo)ãend ifãEND SUBããSUB Button3Click (Sender AS QBUTTON)ãRichEdit1.Addstring Edit3.textãa%=TCP1.Writeline(socknum,(Edit3.text+chr$(13)))ãEdit3.text=""ãEND SUBããSUB Button1Click (Sender AS QBUTTON)ãsocknum=TCP1.Connect(Edit1.text, val(edit2.text))ãEND SUBããSub Button2Click (Sender AS QBUTTON)ãTCP1.close(socknum)ãend subããForm.ShowModalã