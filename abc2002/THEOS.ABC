Fred Buffington                Dragging a window in Theos     oasys@sbcglobal.net            12-22-02 (  :  )       THEOS                  95   3634     dragdrop.bas'Fred Buffington Email:  oasys@sbcglobal.net γ'Theos BASICγγ'Example of dragging a window. γ'This is for the 4.2 version of the Operating system γ'and is Multi-User basic 2.0 runtime 2.1 γ γCode:γ REM -- sample code for dragging a window γ REM -- window is actually 2 windows and both are movved "simultaneously" γ REM -- set up mouse events and turn on mouse γ REM -- Tested on OS:4.2 42013; MUB 2.0 20252; MUB runtime 2.1 20355 γ REM -- - window manager 2.72F γ REM -- Okla. Accounting Systems and Software γ      ON MOUSE GOTO MOUSE.ALL.CLICK γ      ON MOUSE ON  γ MAIN.ROUTINE: γ      COLOR 15,1 \ PRINT CLS$ γ      GOSUB COMPANY.STATUS γ      STOP  γ COMPANY.STATUS: γ      ON MOUSE ON  γ REM -- open window and print some data to it γ      WINDOW OPEN 6,20,3,MAX(34+4,LEN(RTRIM$(CONAME$))+14+4),10; COLOR 0,3; FRAME RAISED, RIGHT, COLOR 0,3;  γ   SELECT γ! select goes with the window open statement and is not a γ! select case statement γ      PRIOR.COL6 = 20 \ PRIOR.ROW6 = 3 \ REM -- set default values γ      WINDOW OPEN 7,22,4,MAX(34,LEN(RTRIM$(CONAME$))+14),8; COLOR 15,3; FRAME SUNKEN, COLOR 0,3; SELECT; TITLE "Company Status", LEFT, COLOR 14,3 γ γ      PRIOR.COL7 = 22 \ PRIOR.ROW7 = 4 \ REM -- set default values here γ      PRINT AT$(1,1);"Company [b]code:[/b] ";COID$; γ      PRINT AT$(1,2);"Company Name: ";CONAME$; γ      PRINT AT$(1,3); "Processing: ";ARDT$[1:2];"/";ARDT$[ 3:4]; γ γ      PRINT AT$(1,4);"Current Invoices: "; γCHR$(9);STR$(INR%); γ γ γ      PRINT AT$(1,5);"Last record printed: ";CHR$(9);STR$(ILPRT%); γ γ      PRINT AT$(1,6);"Current Receipts: ";CHR$(9);STR$(PNR%); γ γ      PRINT AT$(1,7);"Last record printed: ";CHR$(9);STR$(PLPRT%);CRT$("koff"); γ γ      A$ = "ZZ" \ REM -- set a$ to dummy value γ      WHILE LEN(A$)>1 γ           A$ = "" \ WHILE A$="" \ GET A$ \ SLEEP .01 \ WEND  γ           WEND  γ      WINDOW CLOSE 7 \ WINDOW CLOSE 6 γ      RETURN  γ γ MOUSE.ALL.CLICK: γ REM -- mouse event - check for dragging γ      ON MOUSE OFF  γ      DD% = MOUSE.BUTTON γ      MWIN% = MOUSE.WINDOW γ      IF MWIN%<>7 THEN DRAGGED% = 0 γ      IF DD%<=4 AND MOUSE.WINDOW=7 THEN START.ROW = MOUSE.ROW \ START.COL = MOUSE.COL \ ON MOUSE ON \ A$ = "z" \ WHILE A$<>"" \ GET A$ \ WEND \ RESUME  γ γ      IF DD%>511 AND MWIN%=7 γ           DRAGGED% = 1 γ           NEW.COL% = MOUSE.COL γ           NEW.ROW = MOUSE.ROW γ           IF ABS(NEW.COL%-START.COL)>0 OR ABS(NEW.ROW-START.ROW)>0 γ γ                OFFSETX% = NEW.COL%-START.COL \ OFFSETY% = NEW.ROW-START.ROW γ γ                IF ABS(OFFSETX%)>0 OR ABS(OFFSETY%)>0 γ                     WINDOW MOVE 6,PRIOR.COL6+OFFSETX%,PRIOR.ROW6+OFFSETY% γ γ                     WINDOW MOVE 7,PRIOR.COL7+OFFSETX%,PRIOR.ROW7+OFFSETY% γ γ                     DRAGED% = 0 γ                     PRIOR.COL6 = PRIOR.COL6+OFFSETX% \ PRIOR.ROW6 = PRIOR.ROW6+OFFSETY% γ γ                     PRIOR.COL7 = PRIOR.COL7+OFFSETX% \ PRIOR.ROW7 = PRIOR.ROW7+OFFSETY% γ γ                     IFEND  γ                IFEND  γ           IFEND  γ      IF (DD%=8 OR DD%=16 OR DD%=32) AND DRAGGED% γ           WINDOW MOVE 6,PRIOR.COL6+OFFSETX%,PRIOR.ROW6+OFFSETY% \ REM NEW.COL%,NEW.ROW γ γ           WINDOW MOVE 7,PRIOR.COL7+OFFSETX%,PRIOR.ROW7+OFFSETY% \ REM NEW.COL%,NEW.ROW γ γ           DRAGGED% = 0 γ           PRIOR.COL6 = PRIOR.COL6+OFFSETX% \ PRIOR.ROW6 = PRIOR.ROW6+OFFSETY% γ γ           PRIOR.COL7 = PRIOR.COL7+OFFSETX% \ PRIOR.ROW7 = PRIOR.ROW7+OFFSETY% γ           DD% = 0 γ           IFEND  γ      ON MOUSE ON  γ      A$ = "z" \ WHILE A$<>"" \ GET A$ \ WEND  γ      RESUME  γ