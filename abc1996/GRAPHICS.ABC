Jonathan Leger                 PB MODEX ROUTINES              leger@pc2.pc.maricopa.edu      Unknown Date           PB                     328  9144     PBMODEX.BAS '*********************************„'*** PowerBasic Mode-X Routines **„'*****************************************************„'All routines (except SavePal, LoadPal, and ScrollPal)„'converted by Jonathan Leger from the VGA Trainer„'TurboPascal 6.0 code.„'*******************************************************„'If something doesn't work, or if you have any questions„'or comments about any of these routines (especially if„'you have written some additions to it!!!) _please_ let„'me know.  I read the comp.lang.basic.misc newsgroup„'often, or you can e-mail me at leger@pc2.pc.maricopa.edu„'********************************************************„„Declare Sub SetMCGA()       „				'move to 320x200x256c mode„Declare Sub SetText()       „				'go back to 80x25 text mode„Declare Sub ClsMCGA(colr%)  „				'clear the screen with color colr%„Declare Sub SetPixel(x%, y%, colr%)„				'same as PSET„Declare Sub GetPal(colr%, r%, g%, b%)„				'return the RGB color„				'values for color colr%„				'into variables r%, g%, & b%„Declare Sub SetPal(colr%, r%, g%, b%)„				'set the RGB values for colr%„Declare Sub Blackout()      „				'Set all palette entries to RGB 000„Declare Sub SavePal(pal())  „				'Save the palette into an array of„				'p(255, 3) dimensions„Declare Sub LoadPal(pal())  „				'Load the palette to be used from„				'pal()„Declare Sub FadeIn(pal())   „				'Fade from current palette into new„				'palette.  To fade from black into„				'a palette, use SavePal(), then„				'Blackout(), then FadeIn()„Declare Sub FadeOut(pal())  „				'Fade from current palette down to„				'black.„Declare Sub WaitForRetrace()    „				'Waits for verticle retrace to remove„				'flicker/fuzz from display.  To see„				'the effects of this, try taking out„				'WaitForRetrace() in the example program.„Declare Sub CircleMCGA (x%, y%, r%, colr%)„				'draw a circle at x%, y%„				'with radius r% and color colr%„Declare Sub LineMCGA (x1%, y1%, x2%, y2%, colr%)„				'draw a line from (x1,y1) to (x2,y2)„				'with color colr%„Declare Sub ScrollPal (p(), stp, startp, endp)„				'rotate the palette over STP entries„				'starting with entry startp and ending„				'with entry endp.  See main program„				'for an example of how to use this.„„$CPU 80386      'For extra speed.  You can change this if„			'you don't have a 386+„„DEFINT A-Z„„„DIM p(255, 3)       'Make some space for the palette„„SetMCGA„SavePal p()„„colr = 1„for r = 1 to 150„   CircleMCGA 160, 100, r, r„next r„FlipScreen„end„„do„  ScrollPal p(), 1, 1, 255„  WaitForRetrace„  LoadPal p()„loop until inkey$ <> ""„end„„DEFINT a-z„sub SetMCGA ()„'---------------------------------------------„'--- Go into MCGA (320x200x256) Video Mode ---„'---------------------------------------------„! mov   ax, &h13        ;13h Video Mode (320x200x256)„! int   &h10            ;Bang! We're there.„end sub„„DEFINT a-z„sub SetText ()„'-------------------------„'--- Go into text mode ---„'-------------------------„! mov   ax, &h03        ;03h Video Mode (text)„! int   &h10            ;Bang! We're there.„end sub„„DEFINT a-z„sub ClsMCGA (colr%)„'------------------------------------------„'--- Clear the screen using color COLR% ---„'------------------------------------------„   Clrs$ = STRING$(32000, colr%)„   def seg = ActivePage%    'MCGA page mem location„   POKE$ 0, Clrs$       'Fill half of screen (160*100 = 32000 bytes)„   POKE$ 32000, Clrs$       'Fill second half of screen„   def seg          'with the specified color.„end sub„„DEFINT a-z„sub SetPixel (x%, y%, colr%)„'------------------------------------------------„'--- Set a pixel on the screen (the fast way) ---„'--- (x% = x-co, y% = y-co, colr% = color [0- ---„'--- 255])                    ---„'------------------------------------------------„   def seg = ActivePage%    'MCGA page mem location„   POKE (x%+(y%*320)), colr%    'Set the pixel to colr%„   def seg„end sub„„DEFINT a-z„sub GetPal (colr%, r%, g%, b%)„'------------------------------------------------„'--- Reads the red/green/blue values for the  ---„'--- specified color (colr%) and returns them ---„'------------------------------------------------„OUT &h3c7, colr%„r% = INP(&h3c9)„g% = INP(&h3c9)„b% = INP(&h3c9)„end sub„„DEFINT a-z„sub SetPal(colr%, r%, g%, b%)„'---------------------------------------------------------„'--- Assign the RGB values for a pallete entry (colr%) ---„'---------------------------------------------------------„OUT &h3c8, colr%„OUT &h3c9, r%„OUT &h3c9, g%„OUT &h3c9, b%„end sub„„DEFINT a-z„sub Blackout()„'-----------------------------------------------------------------„'--- Blacks out the screen by setting all palette entries to 0 ---„'-----------------------------------------------------------------„for p = 0 to 255„   SetPal p, 0, 0, 0    'Set each entry to red=0, green=0, blue=0„next p„end sub„„DEFINT a-z„sub SavePal(p())„'----------------------------------------------„'--- Stores the palette entries to an array ---„'----------------------------------------------„for p = 0 to 255„   GetPal p, p(p,1), p(p,2), p(p,3)     'Save each entry„next p„end sub„„DEFINT a-z„sub LoadPal(p())„'-------------------------------------------------------„'--- Loads the palette with entires in the array P() ---„'-------------------------------------------------------„for p = 0 to 255„   SetPal p, p(p,1), p(p,2), p(p,3)     'Change each entry„next p„end sub„„DEFINT a-z„sub FadeIn(p())„'------------------------------„'--- Fade in to palette P() ---„'------------------------------„dim tmp(3)„„for p = 1 to 64     'A color value for R/G/B is 0 to 63, so we only„			'need to loop 64 times„„   WaitForRetrace   'Keep the program synched with the monitor„„   for e = 0 to 255 'Loop once for each palette entry„	   GetPal e, tmp(1), tmp(2), tmp(3)„„	   'If the current R/G/B values are lower than they should be,„	   'increase them!„	   if tmp(1) < p(e, 1) then incr tmp(1)„	   if tmp(2) < p(e, 2) then incr tmp(2)„	   if tmp(3) < p(e, 3) then incr tmp(3)„„	   'Set the palette to reflect the changes„	   SetPal e, tmp(1), tmp(2), tmp(3)„„   next e„next p„end sub„„DEFINT a-z„sub FadeOut ()„'-------------------------„'--- Fade out to black ---„'-------------------------„dim tmp(3)„„for p = 1 to 64     'A color value for R/G/B is 0 to 63, so we only„			'need to loop 64 times„„   WaitForRetrace   'Keep the program synched with the monitor„„   for e = 0 to 255 'Loop once for each palette entry„	   GetPal e, tmp(1), tmp(2), tmp(3)„„	   'If the current R/G/B values are greater than zero,„	   'decrease them!„	   if tmp(1) > 0 then decr tmp(1)„	   if tmp(2) > 0 then decr tmp(2)„	   if tmp(3) > 0 then decr tmp(3)„„	   'Set the palette to reflect the changes„	   SetPal e, tmp(1), tmp(2), tmp(3)„„   next e„next p„end sub„„DEFINT a-z„sub WaitForRetrace()„'----------------------------------------------------------------------„'--- Wait for verticle retrace before continuing, that way when the ---„'--- screen is changed, no fuzz or flicker occurs.          ---„'----------------------------------------------------------------------„!    mov dx,&h3da„l1:„!    in al,dx„!    and al,&h08„!    jnz l1„l2:„!    in al,dx„!    and al,&h08„!    jz  l2„end sub„„DEFINT a-z„sub CircleMCGA (x%, y%, r%, colr%)„'-------------------------------------------------------------„'--- Draw a circle at (x%, y%) with radius r%, color colr% ---„'-------------------------------------------------------------„do„   tx = cint(r%*cos(rad!))„   ty = cint(r%*sin(rad!))„   SetPixel x%+tx, y%+ty, colr%„   rad! = rad! + .006„loop until rad! > 6.4„end sub„„defint a-z„sub LineMCGA (x1%, y1%, x2%, y2%, colr%)„'----------------------------------------------------------------„'--- Draw a line from (x1%, y1%) to (x2%, y2%) in color colr% ---„'----------------------------------------------------------------„u% = x2% - x1%„v% = y2% - y1%„d1x = sgn(u%)„d1y = sgn(v%)„d2x = sgn(u%)„d2y = 0„m = abs(u%)„n = abs(v%)„„if not(m > n) then„   d2x = 0„   d2y = sgn(v%)„   m = abs(v%)„   n = abs(u%)„end if„„s = m / 2„„for i = 0 to m„   SetPixel a, b, colr%„   s = s + n„   if not(s < m) then„	  s = s - m„	  a = a + d1x„	  b = b + d1y„   else„	  a = a + d2x„	  b = b + d2y„   end if„next i„end sub„„defint a-z„sub ScrollPal (p(), stp, startp, endp)„'-------------------------------------------------------------------„'--- Scroll the palette up one color so that pal(1) = pal(255),  ---„'--- pal(2) = pal(1), pal(3) = pal(2) ... pal(255) = pal(254)    ---„'-------------------------------------------------------------------„incr endp„„for cnt = startp to startp+(stp-1)„   for rgb = 1 to 3„	  swap p(cnt, rgb), p((endp+cnt)-stp, rgb)„   next rgb„next cnt„„for p = startp+stp to endp„   'Switch all 3 values: red, green, and blue„   for rgb = 1 to 3„	  swap p(p, rgb), p(p-stp, rgb)„   next rgb„next p„„'LoadPal(p())   'Make the changes take effect„„end sub„Unknown Author(s)              BACKGROUND COLOR PRINTING      PC Magazine                    Unknown Date           QB, PDS                28   1515     COLPRNT.BAS 'I put this together from a short article in PC-Mag: by using the„'ColorPrint subroutine, I can display text against various coloured„'backgrounds in screen modes 9 and 12.  It does NOT work in screen mode„'1.  In the CALL below, the CSRLIN and POS(0) are the location at which„'you want to print, and the 14 and 5 are the foreground and background„'colours.  NOTE: I have this coded for PDS 7.1; in QB4.5, replace SSEG by„'VARSEG.„„CALL ColorPrint(" Status Bar ", CSRLIN, POS(0), 14, 5)„„SUB ColorPrint (TEXT$, ROW%, COL%, FC%, BC%) STATIC„REM Prints TEXT$ in EGA or VGA graphics mode with both Foreground and„' Background colours specified.  Doesn't work in graphics CGA modes.„' Achieves result by XORing text with a solid string of CHR$(219).„  DIM INReg AS REGTypeX, OUTReg AS REGTypeX„  C$ = STRING$(LEN(TEXT$), 219)       ' String of solid chars for backgrnd„  INReg.AX = &H1300             ' Video service 13h, subfunction 0„  INReg.BX = BC%                ' Background colour„  INReg.CX = LEN(TEXT$)         ' String length„  INReg.DX = 256 * (ROW% - 1) + (COL% - 1)      ' Text pos. in "origin 0"„  INReg.ES = SSEG(C$)           ' String's segment„  INReg.BP = SADD(C$)           ' String's address„  CALL InterruptX(&H10, INReg, OUTReg)     ' Output the background„  INReg.BX = (FC% XOR BC%) + &H80   ' BL=ForeColor; BH=&H80 uses XOR to draw„  INReg.ES = SSEG(TEXT$)„  INReg.BP = SADD(TEXT$)„  CALL InterruptX(&H10, INReg, OUTReg) ' Output the text, XORing w/backgrnd„END SUB„The ABC Programmer             STORE COLOR PALETTES           STORE,COLOR,PALETTES           11-16-95 (13:27)       QB, QBasic, PDS        114  3053     STOREPAL.BAS'=======================================================„' STORE COLOR PALETTES IN ARRAYS By William Yu (11/1995)„'   Demonstrates the use of Palletes in Screen 13„'=======================================================„„DECLARE SUB ChangePal (Colour(), Reverse, Start)„„DIM Blue(16), Red(16), Green(16)„DIM White(16)„DIM Yellow(16)„DIM Purple(16)„DIM Cyan(16)„DIM Orange(16)„DIM Pink(16)„„False = 0„True = NOT False„„SCREEN 13„N = 1„FOR X = 1 TO 48 STEP 3„  Blue(N) = 65536 * (X + 5) + 256„  Red(N) = 65536 + 256 + (X + 5)„  Green(N) = 65536 + 256 * (X + 5)„  White(N) = 65536 * (X + 12) + 256 * (X + 12) + (X + 12)„  Yellow(N) = 65536 + 256 * (X + 15) + (X + 15)„  Purple(N) = 65536 * (X + 15) + 256 + (X + 15)„  Cyan(N) = 65536 * (X + 15) + 256 * (X + 15)„  Orange(N) = 65536 + 256 * (X + 1) + (X + 17)„  IF X < 28 THEN„    Pink(N) = 65536 * (X + 10) + 256 * (X + .1) + (X + 10)„  ELSE„    Pink(N) = Pink(N - 8)„  END IF„  PALETTE N, Blue(N)„  PALETTE N + 16, Red(N)„  PALETTE N + 32, Green(N)„  PALETTE N + 48, White(N)„  PALETTE N + 64, Yellow(N)„  PALETTE N + 80, Purple(N)„  PALETTE N + 96, Cyan(N)„  PALETTE N + 112, Orange(N)„  PALETTE N + 128, Pink(N)„  LOCATE 1, N: COLOR N: PRINT "€"„  LOCATE 2, N: COLOR N + 16: PRINT "€"„  LOCATE 3, N: COLOR N + 32: PRINT "€"„  LOCATE 4, N: COLOR N + 48: PRINT "€"„  LOCATE 5, N: COLOR N + 64: PRINT "€"„  LOCATE 6, N: COLOR N + 80: PRINT "€"„  LOCATE 7, N: COLOR N + 96: PRINT "€"„  LOCATE 8, N: COLOR N + 112: PRINT "€"„  LOCATE 9, N: COLOR N + 128: PRINT "€"„  N = N + 1„NEXT X„„LOCATE 11, 1: PRINT "Watch while I switch the all the"„PRINT "palettes to green with CHANGEPAL"„„X = 1„FOR I = 1 TO 9„  ChangePal Green(), False, X„  X = X + 16„NEXT I„„COLOR 47: PRINT "Now let's go backwards!"„„X = 129„FOR I = 1 TO 9„  ChangePal Orange(), True, X„  X = X - 16„NEXT I„„COLOR 63: PRINT "Watch while I reverse the process."„„FOR N = 1 TO 16„  PALETTE N, Blue(N)„  PALETTE N + 16, Red(N)„  PALETTE N + 32, Green(N)„  PALETTE N + 48, White(N)„  PALETTE N + 64, Yellow(N)„  PALETTE N + 80, Purple(N)„  PALETTE N + 96, Cyan(N)„  PALETTE N + 112, Orange(N)„  PALETTE N + 128, Pink(N)„NEXT N„„LOCATE 17: COLOR 95: PRINT "Play around with the palettes, have fun!"„„END„„'„' Colour() can be any one of the defined array colour types„' Reverse  can either be TRUE or FALSE„'          if True, the palette changes from high intensity to low„'          if False, the palette changes from low to high intensity„' Start    can be any integer from which you wish to define the paletted„'          color to (Remember that an array has 16 paletted colors)„'          So if you start from 1 it'll stop at 16„'          The next starting point would be 17 and so on...„'„SUB ChangePal (Colour(), Reverse, Start)„„IF Reverse THEN„  FOR I = Start + 15 TO Start STEP -1„    PALETTE I, Colour(I - Start + 1)„  NEXT I„ELSE„  FOR I = Start TO Start + 15„    PALETTE I, Colour(I - Start + 1)„  NEXT I„END IF„„END SUB„„Coridon Henshaw                FAST PALETTE                   FidoNet QUIK_BAS Echo          12-22-92 (12:50)       QB, QBasic, PDS        31   892      FASTPAL.BAS ' > SUB VGAPal (Attr%, Red%, Green%, Blue%)„' >   PALETTE Attr%, (Red%) + (Green% * 256) + (Blue% * 65536)„' > END SUB„„'Ugh, that's SLOW.  PALETTE takes forever, not to mention all that„'integer math...  Use this:„„DECLARE SUB ReadPalette (Attr%, Red%, Green%, Blue%)„DECLARE SUB SetPalette (Attr%, Red%, Green%, Blue%)„„DEFINT A-Z„„SUB ReadPalette (Attr%, Red%, Green%, Blue%)„OUT &H3C7, Att%„Red% = INP(&H3C9)„Green% = INP(&H3C9)„Blue% = INP(&H3C9)„END SUB„„SUB SetPalette (Attr%, Red%, Green%, Blue%)„OUT &H3C7, Attr%„OUT &H3C8, Attr%„OUT &H3C9, Red%„OUT &H3C9, Green%„OUT &H3C9, Blue%„END SUB„„'ReadPalette is for reading the color values of a attribute, and„'SetPalette sets them.  All using direct access to the VGA controller,„'so they are very fast. If I wanted to, I could re-code them in ASM for„'more speed, but I don't quite need them THAT fast ;)„Michael Teator                 QSTAR                          mhscards@aol.com               11-06-94 (12:11)       QB, QBasic, PDS        438  18763    QSTAR.BAS   ' Press SHIFT-F5 to start„'„'„' Sorry that most of this code is cryptc or messy.  Most of it was written„' as 2:00 in the morning.  Most of this was actually written back in may of„' 94,  I'm just now getting around to releasing it.  There's not musch for„' internal comments in this thing, its not very elegant code anyway.  I don't„' really suggest for anyone to learn by looking at this.  If you want to see„' some very well written code to learn from, look for some of my other creations„' like:   QPlasma - 256 color plasma generator: Has very well written code,„'                   I commented the heck out of it.  Get this if you want to„'                   see some really nice pallete manipulation.„'         StarField - Simple 3-D starfield - Good for starters„'„' coming soon : QTris - 256 color tetris with raytraced (wow!) backgrounds.„'                       NEVER before has a QBasic game accomplished what„'                       QTris will„'               QDraw - 256 color drawing program, uses my new file format„'                       that I'll introduce with QTris.  Also can load GIF's„'                       and QPlasma style palette files.  Mouse support too!„'„' If any of you want to see my Path Generator that I used for the 3-D tunnel,„' write me at Skream@aol.com and I'll upload it.„„DEFINT A-Z„„DECLARE FUNCTION ComputerType ()„DECLARE SUB Fade (ty, tx, text$)„„DEF FNMove (xp%, yp%, xr%, yr%, n%, vstop%)„     ul = yr: ll = xr: bl = vstop - yr: rl = 319 - xr„     SELECT CASE n„     CASE 1„          IF yp > ul THEN IF xp > ll THEN FNMove = 1 ELSE FNMove = 2 ELSE IF xp > ll THEN FNMove = 4 ELSE FNMove = 3„     CASE 2„          IF yp > ul THEN IF xp < rl THEN FNMove = 2 ELSE FNMove = 1 ELSE IF xp < rl THEN FNMove = 3 ELSE FNMove = 4„     CASE 3„          IF yp < bl THEN IF xp < rl THEN FNMove = 3 ELSE FNMove = 4 ELSE IF xp < rl THEN FNMove = 2 ELSE FNMove = 1„     CASE 4„          IF yp < bl THEN IF xp > ll THEN FNMove = 4 ELSE FNMove = 3 ELSE IF xp > ll THEN FNMove = 1 ELSE FNMove = 2„     END SELECT„END DEF„„OPTION BASE 1„RANDOMIZE TIMER„DIM SHARED ScrollDelay„„ScrollDelay = ComputerType„„SCREEN 7, , 0„Fade 9, 17, "QStar!"„Fade 10, 12, "by Michael Teator"„Fade 12, 7, "Please wait... initializing."„„Stars = 100„NumBoxes = 4„Dist = 5„LineClr = 9„DelayClr = LineClr - 8„Grid3DClr = 5„Counter = 1„NumDelayVectors = 8„NumCircles = 20„„DIM ReflTxt#(124)„DIM BoxXradius(NumBoxes), BoxYradius(NumBoxes), BoxX(NumBoxes), BoxY(NumBoxes), BoxDir(NumBoxes), BoxClr(NumBoxes)„DIM StarX(Stars), StarY(Stars), StarSpeed(Stars), StarClr(Stars)„DIM LineX(2), LineY(2), LineDir(2), DelayVector(4 * NumDelayVectors)„DIM Colors(4)„DIM ForeCircles(3 * NumCircles), CircleR(NumCircles * 3 + 1)„„RESTORE TubeData„READ NumFrames„DIM CircleX(NumFrames), CircleY(NumFrames), CircleC(NumFrames)„FOR num = 1 TO NumFrames„     READ CircleX(num), CircleY(num)„NEXT„„FOR num = 1 TO NumFrames„     clr = INT(RND * 2) + 1„     IF clr = 1 THEN CircleC(num) = 9 ELSE CircleC(num) = 1„NEXT„„CircleR(1) = 40„„FOR num = 1 TO NumCircles * 3 STEP 3„     CircleR(num + 1) = num ^ (3 / 2) / 2 + CircleR(1)„NEXT„„RESTORE Colors„FOR num = 1 TO 4„READ Colors(num)„NEXT„„PickClr = 1„BoxCount = 1„DO„     BoxClr(BoxCount) = Colors(PickClr)„     IF PickClr < 4 THEN PickClr = PickClr + 1 ELSE PickClr = 1„     BoxCount = BoxCount + 1„LOOP UNTIL BoxCount > NumBoxes„„LineX(1) = 62„LineY(1) = 53„LineX(2) = 120„LineY(2) = 198„LineDir(1) = 1„LineDir(2) = 2„„FOR num = 1 TO Stars„     StarPlane = INT(RND * 4) + 1„     SELECT CASE StarPlane„          CASE 1„               StarSpeed(num) = 8„               StarClr(num) = 15„               StarX(num) = INT(RND * 319)„               StarY(num) = INT(RND * 199)„          CASE 2„               StarSpeed(num) = 5„               StarClr(num) = 7„               StarX(num) = INT(RND * 319)„               StarY(num) = INT(RND * 181)„          CASE 3„               StarSpeed(num) = 3„               StarClr(num) = 7„               StarX(num) = INT(RND * 319)„               StarY(num) = INT(RND * 163)„          CASE 4„               StarSpeed(num) = 1„               StarClr(num) = 8„               StarX(num) = INT(RND * 319)„               StarY(num) = INT(RND * 144)„     END SELECT„NEXT„„FOR num = 1 TO NumBoxes„     BoxXradius(num) = INT(RND * 20) + 1„     BoxYradius(num) = INT(RND * 20) + 1„     BoxX(num) = INT(RND * (319 - BoxXradius(num) * 2)) + BoxXradius(num)„     BoxY(num) = INT(RND * (158 + num * 4 - BoxYradius(num) * 2)) + BoxYradius(num)„     BoxDir(num) = INT(RND * 4) + 1„NEXT„„RESTORE Scroller„DO„     READ ScrollTxt$„     Scroller$ = Scroller$ + ScrollTxt$„LOOP UNTIL ScrollTxt$ = ""„Scroller$ = SPACE$(30) + Scroller$„TxtLength = LEN(Scroller$) + 1„„FOR Frames = 2 TO 6„     SCREEN , , Frames, 0„     SELECT CASE Frames„          CASE 2: RESTORE Grid3DFrame2„          CASE 3: RESTORE Grid3DFrame3„          CASE 4: RESTORE Grid3DFrame4„          CASE 5: RESTORE Grid3DFrame5„          CASE 6: RESTORE Grid3DFrame6„     END SELECT„     FOR Grid3DLine = 1 TO 8„          READ x1!, y1!, x2!, y2!„          LINE (x1!, y1!)-(x2!, y2!), Grid3DClr„     NEXT„     RESTORE Grid3DCommons„     FOR Grid3DLine = 1 TO 15„          READ x1, y1, x2, y2„          LINE (x1, y1)-(x2, y2), Grid3DClr„     NEXT„NEXT„„SCREEN , , 1, 0„RESTORE Grid3DFrame1„FOR Grid3DLine = 1 TO 6„     READ x1, y1, x2, y2„     LINE (x1, y1)-(x2, y2), Grid3DClr„     PCOPY 1, 0„NEXT„RESTORE Grid3DCommons„FOR Grid3DLine = 1 TO 15„     READ x1, y1, x2, y2„     LINE (x1, y1)-(x2, y2), Grid3DClr„     PCOPY 1, 0„NEXT„„SCREEN , , 0„LOCATE 12, 18: COLOR 10: PRINT "READY!"„SLEEP 1„„DO„     SCREEN , , 7, 0„     PCOPY 1, 7„     IF Counter < TxtLength THEN„          LOCATE 18, 5: COLOR 4: PRINT MID$(Scroller$, Counter, 30)„          TopLine = 136„          BotRefl = 151„          DO„               GET (32, TopLine)-(270, TopLine), ReflTxt#„               PUT (32, BotRefl), ReflTxt#, XOR„               TopLine = TopLine + 1„               BotRefl = BotRefl - 1„          LOOP UNTIL TopLine = 143„          IF counter2 = ScrollDelay THEN counter2 = 0:  Counter = Counter + 1 ELSE counter2 = counter2 + 1„     ELSE„          GOTO Part2„     END IF„     FOR NumStars = 1 TO Stars„          StarX(NumStars) = StarX(NumStars) - StarSpeed(NumStars)„          IF StarX(NumStars) < 0 THEN„               StarX(NumStars) = 319„               SELECT CASE StarSpeed(NumStars)„                    CASE 8„                         StarY(NumStars) = INT(RND * 199)„                    CASE 5„                         StarY(NumStars) = INT(RND * 181)„                    CASE 3„                         StarY(NumStars) = INT(RND * 163)„                    CASE 1„                         StarY(NumStars) = INT(RND * 144)„               END SELECT„          END IF„          PSET (StarX(NumStars), StarY(NumStars)), StarClr(NumStars)„     NEXT„     FOR num = 1 TO NumBoxes„          LINE (BoxX(num) - BoxXradius(num), BoxY(num) - BoxYradius(num))-(BoxX(num) + BoxXradius(num), BoxY(num) + BoxYradius(num)), BoxClr(num), B„          BoxDir(num) = FNMove(BoxX(num), BoxY(num), BoxXradius(num), BoxYradius(num), BoxDir(num), 158 + num * 4)„          SELECT CASE BoxDir(num)„               CASE 4: BoxY(num) = BoxY(num) + 1: BoxX(num) = BoxX(num) - 1„               CASE 1: BoxY(num) = BoxY(num) - 1: BoxX(num) = BoxX(num) - 1„               CASE 3: BoxY(num) = BoxY(num) + 1: BoxX(num) = BoxX(num) + 1„               CASE 2: BoxY(num) = BoxY(num) - 1: BoxX(num) = BoxX(num) + 1„          END SELECT„     NEXT„     FOR Delays = 1 TO NumDelayVectors * 4 STEP 4„          LINE (DelayVector(Delays), DelayVector(Delays + 1))-(DelayVector(Delays + 2), DelayVector(Delays + 3)), DelayClr„     NEXT„     FOR num = 1 TO 2„          LineDir(num) = FNMove(LineX(num), LineY(num), 0, 0, LineDir(num), 199)„          SELECT CASE LineDir(num)„               CASE 4: LineY(num) = LineY(num) + Dist: LineX(num) = LineX(num) - Dist„               CASE 1: LineY(num) = LineY(num) - Dist: LineX(num) = LineX(num) - Dist„               CASE 3: LineY(num) = LineY(num) + Dist: LineX(num) = LineX(num) + Dist„               CASE 2: LineY(num) = LineY(num) - Dist: LineX(num) = LineX(num) + Dist„          END SELECT„     NEXT„     LINE (LineX(1), LineY(1))-(LineX(2), LineY(2)), LineClr„     FOR Shift = NumDelayVectors * 4 TO 8 STEP -4„          DelayVector(Shift) = DelayVector(Shift - 4)„          DelayVector(Shift - 1) = DelayVector(Shift - 5)„          DelayVector(Shift - 2) = DelayVector(Shift - 6)„          DelayVector(Shift - 3) = DelayVector(Shift - 7)„     NEXT„     DelayVector(1) = LineX(1)„     DelayVector(2) = LineY(1)„     DelayVector(3) = LineX(2)„     DelayVector(4) = LineY(2)„     PCOPY 7, 0„     SCREEN , , 0, 0„LOOP„„Part2:„„FrameCounter = 1„FOR FrameNum = 1 TO NumFrames„          SCREEN , , 7, 0„          PCOPY FrameCounter, 7„          FrameCounter = FrameCounter + 1„          IF FrameCounter > 6 THEN FrameCounter = 1„          CIRCLE (CircleX(FrameNum), CircleY(FrameNum)), CircleR(1), CircleC(FrameNum)„          CountEm = NumCircles + 1„          FOR Tube = 1 TO NumCircles * 3 STEP 3„               CountEm = CountEm - 1„               IF ForeCircles(Tube) <> 0 THEN„                    AdjCircleX = CINT((ForeCircles(Tube) * CountEm * 2 + 160) / (CountEm * 2 + 1))„                    AdjCircleY = CINT((ForeCircles(Tube + 1) * CountEm * 2 + 99) / (CountEm * 2 + 1))„                    CIRCLE (AdjCircleX, AdjCircleY), CircleR(Tube + 1), ForeCircles(Tube + 2)„               END IF„          NEXT„          FOR Shift = NumCircles * 3 TO 6 STEP -3„               ForeCircles(Shift) = ForeCircles(Shift - 3)„               ForeCircles(Shift - 1) = ForeCircles(Shift - 4)„               ForeCircles(Shift - 2) = ForeCircles(Shift - 5)„          NEXT„          ForeCircles(1) = CircleX(FrameNum)„          ForeCircles(2) = CircleY(FrameNum)„          ForeCircles(3) = CircleC(FrameNum)„          PCOPY 7, 0„          SCREEN , , 0, 0„     NEXT„„SCREEN 0„WIDTH 80„LOCATE 1, 1„RESTORE Logo„FOR lines = 1 TO 20„     READ OneLine$„     Fade lines, 1, OneLine$„NEXT„LOCATE 22„DO: LOOP UNTIL INKEY$ <> ""„SYSTEM„„Scroller:„DATA "Hi!  Welcome to QStar!  Like the graphics?  "„DATA "Someone told me this was impossible with QBasic... "„DATA "guess my poor friend was wrong!  "„DATA "This is 320x200x16 graphics and runs at 30fps on a fast 486.  "„DATA "Write me and tell me what you think!  "„DATA "America Online: Skream.  "„DATA "Internet: skream@aol.com  "„DATA "Next demo: Flying into the starfield and some other tricks!  "„DATA "Code by Skream.  Later... :)        "„DATA ""„„Grid3DFrame1:„DATA   0,144,319,144,   0,146,319,146,   0,151,319,151,   0,160,319,160„DATA   0,175,319,175,   0,199,319,199,   0,199,319,199,   0,199,319,199„„Grid3DFrame2:„DATA   0,144,319,144,   0,145,319,145,   0,146,319,146,   0,152,319,152„DATA   0,162,319,162,   0,178,319,178,   0,199,319,199,   0,199,319,199„„Grid3DFrame3:„DATA   0,144,319,144,   0,145,319,145,   0,147,319,147,   0,153,319,153„DATA   0,164,319,164,   0,182,319,182,   0,199,319,199,   0,199,319,199„„Grid3DFrame4:„DATA   0,144,319,144,   0,146,319,146,   0,148,319,148,   0,154,319,154„DATA   0,166,319,166,   0,186,319,186,   0,199,319,199,   0,199,319,199„„Grid3DFrame5:„DATA   0,144,319,144,   0,146,319,146,   0,149,319,149,   0,156,319,156„DATA   0,169,319,169,   0,190,319,190,   0,199,319,199,   0,199,319,199„„Grid3DFrame6:„DATA   0,144,319,144,   0,145,319,145,   0,147,319,147,   0,150,319,150„DATA   0,158,319,158,   0,172,319,172,   0,194,319,194,   0,199,319,199„„Grid3DCommons:„DATA 280,144,319,153, 200,144,225,199, 220,144,275,199, 240,144,319,189„DATA 260,144,319,167, 300,144,319,147, 140,144,130,199, 120,144, 95,199„DATA 100,144, 45,199,  80,144,  0,189,  60,144,  0,167,  40,144,  0,153„DATA  20,144,  0,147, 160,144,160,199, 180,144,190,199„„Colors:„DATA 10,11,12,14„„Logo:„DATA "⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø„DATA "≥   ˙            ˙         ˙         ˙        ˙   .  ˙       ˙           .     ≥„DATA "≥˙      €€€€€€€ª €€ª  €€ª €€€€€€ª .€€€€€€€ª  €€€€€ª. €€€ª   €€€ª €€ª .     ˙   ≥„DATA "≥    ˙  €€…ÕÕÕÕº˙€€∫ €€…º €€…ÕÕ€€ª €€…ÕÕÕÕº €€…ÕÕ€€ª €€€€ª €€€€∫ €€∫           ≥„DATA "≥       €€€€€€€ª €€€€€…º  €€€€€€…º €€€€€ª  ˙€€€€€€€∫ €€…€€€€…€€∫ €€∫   ˙       ≥„DATA "≥ ˙     »ÕÕÕÕ€€∫ €€…Õ€€ª  €€…ÕÕ€€ª €€…ÕÕº.  €€…ÕÕ€€∫ €€∫»€€…º€€∫ »Õº        ˙  ≥„DATA "≥       €€€€€€€∫ €€∫  €€ª €€∫ ˙€€∫ €€€€€€€ª €€∫  €€∫ €€∫.»Õº €€∫ €€ª    ˙      ≥„DATA "≥    ˙  »ÕÕÕÕÕÕº »Õº  »Õº.»Õº  »Õº »ÕÕÕÕÕÕº »Õº. »Õº.»Õº   ˙ »Õº »Õº      ˙    ≥„DATA "≥          .  ˙      ˙         .         ˙      ˙        ˙    ˙                ≥„DATA "≥    ˙  ÷ƒƒƒƒƒø “ƒø .÷ƒƒø  ÷ƒø ƒ“ƒ ÷ƒƒø    “ƒƒø “ƒƒø ÷ƒ“ƒø ÷ƒƒø  ÷ƒø   ˙       ≥„DATA "≥˙      ∫ ˙   ≥ «ƒ¡ø «ƒƒ¥. ”ƒø  ∫  ∫    ˙  ∫  ≥ «ƒ ˙ ∫ ∫ ≥ ∫ ˙≥  ”ƒø      ˙    ≥„DATA "≥  ˙    ∫   ˙ ≥ –ƒƒŸ –  ¡ ”ƒƒŸ ƒ–ƒ ”ƒƒŸ    –ƒƒŸ –ƒƒŸ – – ¡ ”ƒƒŸ ”ƒƒŸ           ≥„DATA "≥       ∫     ≥     ˙       write to:       ˙        ˙         .        ˙      ≥„DATA "≥˙      ”ƒƒƒ≈ƒŸ         skream@aol.com           .               ˙          ˙  ≥„DATA "≥  ˙   ˙                     ˙   ˙      ˙                 ˙           ˙        ≥„DATA "≥                ˙       ˙                  See ya later...       ˙       ˙    ≥„DATA "≥      Look for more demos soon!      ˙          ˙                             ≥„DATA "≥           ˙      ˙      This has been a presentation of Skream! design  ˙  ˙ ≥„DATA "¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ„DATA "                             press a key . . .„„„TubeData:„' Data created by Path Generator Version 1.0„'    by Michael Teator in May 1994„' Comment: This one should look great!  -Skream„' Date: 05-24-1994 Time: 08:32:11„' Number of points„DATA  474„' ------ Path data ------„DATA 159,99,159,99,159,99,159,99,159,99,159,99,159,99,158,100,157,100,156,101,154,102,153,103,152,105,149,107,147,108,145,110,144,112,139,114,136,116,130,119„DATA 122,122,116,125,108,128,101,132,92,136,83,139,75,142,67,145,57,146,47,146,40,147,38,147,45,146,53,146,59,145,69,142,82,138,95,134,114,127,130,121„DATA 148,113,162,103,171,97,185,88,196,81,209,74,220,66,230,61,242,54,252,48,264,42,270,36,267,38,261,43,256,48,250,53,240,60,230,68,218,75,209,82„DATA 198,88,188,93,177,96,164,99,151,101,139,102,126,102,113,102,104,102,89,102,78,101,66,101,51,101,40,101,29,101,19,101,26,101,42,101,57,101,71,100„DATA 90,98,100,98,110,97,124,97,140,97,158,99,177,102,190,105,206,111,216,116,228,122,238,129,251,136,264,144,276,152,281,154,285,157,269,157,256,155,240,152„DATA 221,148,205,142,185,135,163,129,150,126,136,122,119,119,106,117,94,115,80,115,69,116,55,119,51,121,53,127,60,128,75,128,89,128,108,127,129,126,144,124„DATA 160,122,172,121,189,118,212,117,224,116,236,113,249,108,257,103,264,97,269,87,269,78,267,76,260,81,254,90,250,96,242,103,234,110,225,115,212,120,200,125„DATA 188,129,173,133,159,135,139,135,128,134,128,132,136,130,149,130,165,130,182,128,197,123,209,118,225,110,237,103,245,97,254,90,263,82,266,78,262,91,257,98„DATA 247,103,232,108,218,111,206,115,196,117,185,115,172,110,164,104,154,95,144,85,134,76,123,65,113,58,100,53,84,48,74,48,62,48,52,51,47,57,42,66„DATA 41,70,44,75,51,78,60,76,69,71,78,65,86,59,94,54,103,49,114,45,128,44,142,46,150,50,156,56,158,64,161,74,163,84,163,96,163,108,163,116„DATA 164,126,166,138,167,146,170,152,178,161,188,164,190,160,186,155,181,153,173,151,168,142,165,130,165,116,165,100,164,83,164,68,164,54,162,40,162,36,160,44„DATA 159,58,158,72,158,89,158,102,158,117,158,129,159,140,159,153,158,162,158,169,159,167,164,158,167,144,167,129,167,115,168,96,168,85,168,68,168,52,166,40„DATA 164,32,161,31,158,41,157,52,157,66,158,82,158,98,159,113,158,127,158,138,158,147,156,156,155,160,152,162,148,160,143,156,135,146,127,137,117,122,108,108„DATA 99,93,91,79,82,66,75,59,68,55,59,48,47,40,52,47,60,53,73,59,86,68,103,80,117,90,132,98,144,105,162,114,183,123,198,130,218,140,232,146„DATA 250,154,272,161,280,162,284,156,279,150,268,145,252,139,236,132,227,129,213,125,205,116,199,100,198,79,198,64,200,52,202,43,207,36,208,41,207,53,203,67„DATA 196,86,188,95,178,104,169,110,159,116,146,122,135,128,124,137,114,144,105,150,92,155,82,156,66,157,63,156,75,154,85,152,96,149,108,144,118,139,128,132„DATA 138,124,146,113,148,101,142,92,133,89,123,90,109,93,92,94,78,95,61,95,48,94,41,92,42,85,49,78,57,72,71,63,86,55,105,47,119,44,133,42„DATA 152,41,170,41,188,42,208,46,224,51,236,57,249,65,258,76,265,89,266,99,266,112,263,126,257,138,250,147,240,155,231,158,223,160,214,161,201,160,188,156„DATA 175,149,165,140,160,132,150,118,141,107,130,99,116,98,111,105,111,113,116,120,124,127,134,137,146,144,160,147,176,146,190,141,199,131,205,119,205,105,202,93„DATA 191,81,186,79,181,87,175,100,169,110,161,124,155,138,149,148,144,153,147,150,155,137,166,124,176,113,183,97,187,83,188,69,186,53,182,44,181,53,183,67„DATA 186,75,192,86,204,94,224,99,238,100,256,99,272,94,288,91,294,88,285,90,270,95,252,98,239,100,226,103,206,106,181,106,156,106,137,107,122,107,113,106„DATA 94,108,82,109,75,110,86,112,103,111,124,109,145,107,172,102,194,97,210,90,220,83,237,70,245,64,244,74,232,90,218,103,206,111,189,115,171,117,154,112„DATA 141,103,136,88,136,66,136,55,137,47,135,56,133,70,125,81,112,87,92,91,87,85,97,76,109,76,119,85,123,100,124,113,126,124,131,127,143,125,152,118„DATA 156,112,159,107,162,103,163,100,164,100,166,99,167,99,168,99,169,99,169,99,169,99,169,99,169,99,169,99„„FUNCTION ComputerType„„     CLS„     PRINT "Welcome to QStar!"„     PRINT„     PRINT "Please select the speed computer you are using:"„     PRINT "  (1) 286"„     PRINT "  (2) Slow 386"„     PRINT "  (3) Fast 386 or slow 486"„     PRINT "  (4) Fast 486"„     PRINT "  (5) Pentium"„     PRINT : PRINT„     PRINT "Please note that these settings only affect the scroller."„     DO„          selection$ = INKEY$„          SELECT CASE selection$„               CASE "1" TO "5"„                    ComputerType = VAL(selection$) - 1„                    EXIT FUNCTION„          END SELECT„     LOOP„„END FUNCTION„„SUB Fade (ty, tx, text$)„„    LOCATE ty, tx: COLOR 8: PRINT text$„    FOR n = 1 TO (ScrollDelay * 5000): NEXT„    LOCATE ty, tx: COLOR 7: PRINT text$„    FOR n = 1 TO (ScrollDelay * 5000): NEXT„    LOCATE ty, tx: COLOR 15: PRINT text$„    FOR n = 1 TO (ScrollDelay * 5000): NEXT„„END SUB„„Robert Fisher                  RPG CHARACTER                  mhscards@aol.com               04-21-94 (17:20)       QB, QBasic, PDS        259  14342    RPGCHAR.BAS 'This LESSON demonstrates animation on a small scale.     „'The smaller the image you wish to animate, the faster    „'the speed of animation. You will see a portrait of a     „'typical character you would find in an RPG game. The     „'character's face is void of eyes and a mouth. When a     „'charcter talks, the eyes and lips are animated to        „'simulate speech. Below the portrait, you will see        „'four sets of eyes & mouth. We then GET these very        „'small images and use the PUT command to place them on    „'the blank face. We use the RAN(dom) command to determine „'which facial features will be selected. There is a       „'timing loop to slow the animation down. You can adjust   „'this loop to decrease/increase the speed to suit your    „'particular PC processor speed. All the DATA statements   „'in this program merely represent individual pixels of    „'different colors. This particular RPG character is from  „'the 'MIGHT & MAGIC' game by New World Computing.         „'The four positions of the mouth are: Closed, 1/3 open,   „'2/3 open and 3/3 open. The three positions of the eyes   „'are Open, Closed, and Raised Eyebrows.                   „'                                                         „CLS :„RANDOMIZE TIMER„SCREEN 13: CLS : DEF SEG = &HA000„DIM M1%(300), M2%(300), M3%(300), M4%(300)„DIM E1%(300), E2%(300), E4%(300)„                                                            „VGACOLORS:                                                „C = -1: FOR N = 1 TO 768 STEP 3„C = C + 1: READ B, G, R„CL = (R * 256 ^ 2) + (G * 256) + B„PALETTE C, CL: NEXT N„                                                            „READPICDATA:                                            „FOR I = 1 TO 30: FOR J = 1 TO 30„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = 0: Y1 = Y1 + 1: NEXT I„Y1 = 39: X1 = 7: H1 = 7„                                                            „READEYES01:                                               „FOR I = 1 TO 6: FOR J = 1 TO 16„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 48: X1 = 11: H1 = 11: GET (7, 39)-(22, 44), E1%„PUT (67, 39), E1%, PSET„READMOUTH01:                                              „FOR I = 1 TO 8: FOR J = 1 TO 8„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 39: X1 = 37: H1 = 37: GET (11, 48)-(18, 55), M1%„READEYES02:                                               „FOR I = 1 TO 6: FOR J = 1 TO 16„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 48: X1 = 41: H1 = 41: GET (37, 39)-(52, 44), E2%„READMOUTH02:                                              „FOR I = 1 TO 8: FOR J = 1 TO 8„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 48: X1 = 71: H1 = 71: GET (41, 48)-(48, 55), M2%„                                                            „READMOUTH03:                                              „FOR I = 1 TO 8: FOR J = 1 TO 8„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 39: X1 = 97: H1 = 97: GET (71, 48)-(78, 55), M3%„                                                            „READEYES04:                                               „FOR I = 1 TO 6: FOR J = 1 TO 16„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„Y1 = 48: X1 = 101: H1 = 101: GET (97, 39)-(112, 44), E4%„READMOUTH04:                                              „FOR I = 1 TO 8: FOR J = 1 TO 8„READ N: PSET (X1, Y1), N: X1 = X1 + 1„NEXT J: X1 = H1: Y1 = Y1 + 1: NEXT I„GET (101, 48)-(108, 55), M4%„                                                            „TALKINGHEAD:                                              „LINE (1, 30)-(175, 60), 0, BF„DO:                                                 „T = INT(RND * 4) + 1: ON T GOTO F1, F2, F3, F4„F1: PUT (7, 9), E1%, PSET: PUT (11, 18), M1%, PSET: GOTO F5„F2: PUT (7, 9), E2%, PSET: PUT (11, 18), M2%, PSET: GOTO F5„F3: PUT (7, 9), E1%, PSET: PUT (11, 18), M3%, PSET: GOTO F5„F4: PUT (7, 9), E4%, PSET: PUT (11, 18), M4%, PSET„F5: FOR I = 1 TO 500: NEXT I„LOOP UNTIL INKEY$ <> ""„END„                                                            „PALETTEDATA:                                              „DATA 00,00,00,31,31,31,60,60,60,58,58,58,56,56,56,53,53,53„DATA 51,51,51,49,49,49,47,47,47,44,44,44,42,42,42,40,40,40„DATA 37,37,37,35,35,35,33,33,33,63,63,63,29,29,29,27,27,27„DATA 25,25,25,23,23,23,21,21,21,19,19,19,17,17,17,15,15,15„DATA 13,13,13,11,11,11,09,09,09,07,07,07,05,05,05,03,03,03„DATA 01,01,01,00,00,00,63,58,58,62,53,53,61,48,48,60,44,44„DATA 59,40,40,58,35,35,57,31,31,57,27,27,56,23,23,55,19,19„DATA 54,16,16,53,12,12,52,08,08,51,05,05,50,02,02,50,00,00„DATA 46,00,00,42,00,00,38,00,00,33,00,00,29,00,00,25,00,00„DATA 21,00,00,17,00,00,13,00,00,63,29,00,55,25,00,48,22,00„DATA 40,18,00,33,15,00,25,11,00,18,08,00,63,63,54,63,63,46„DATA 62,63,38,62,63,30,62,63,22,61,63,14,61,63,06,59,61,00„DATA 59,59,00,56,55,00,53,51,00,50,46,00,47,42,00,44,38,00„DATA 41,34,00,38,31,00,34,26,00,30,22,00,26,18,00,22,15,00„DATA 18,11,00,14,08,00,10,05,00,06,03,00,54,63,22,49,59,17„DATA 45,56,13,41,52,10,37,49,06,33,45,03,29,42,01,26,39,00„DATA 21,36,00,19,33,00,18,31,00,17,29,00,16,27,00,14,25,00„DATA 13,23,00,12,21,00,11,19,00,47,62,47,39,60,38,32,58,31„DATA 23,56,23,16,55,16,11,53,10,10,50,09,08,47,08,07,45,07„DATA 06,42,06,05,39,04,04,36,04,03,34,03,02,31,02,02,28,02„DATA 01,26,01,01,23,01,01,20,00,00,17,00,00,15,00,00,12,00„DATA 00,09,00,00,07,00,60,60,63,56,56,63,51,51,63,47,47,63„DATA 43,44,63,39,40,63,35,35,63,31,32,63,27,28,63,23,24,63„DATA 19,20,63,15,16,63,11,12,63,07,08,63,03,04,63,00,01,63„DATA 00,00,63,00,00,59,00,00,55,00,00,51,00,00,47,00,00,43„DATA 00,00,39,00,00,36,00,00,32,00,00,28,00,00,24,00,00,20„DATA 00,00,16,00,00,12,00,00,08,00,00,05,60,54,63,57,46,63„DATA 54,39,63,52,31,63,50,23,63,47,16,63,45,08,63,42,00,63„DATA 38,00,57,32,00,50,27,00,43,21,00,35,15,00,27,10,00,20„DATA 06,00,12,02,00,05,51,63,63,45,59,59,39,56,56,34,53,53„DATA 29,50,50,25,47,47,20,43,43,17,40,40,13,36,36,09,31,31„DATA 07,27,27,04,23,23,02,19,19,01,15,15,00,11,11,00,07,07„DATA 58,60,62,54,58,61,49,55,61,45,53,61,41,51,60,37,49,60„DATA 33,48,60,29,46,59,25,44,59,21,43,59,17,41,58,13,40,58„DATA 10,38,58,06,37,57,02,36,57,01,33,54,01,31,51,00,29,48„DATA 00,27,45,00,25,43,00,23,40,00,21,37,00,20,34,00,18,31„DATA 00,16,28,00,14,24,00,12,21,00,10,18,00,08,15,00,06,12„DATA 00,05,09,00,03,06,63,58,55,63,55,51,63,53,48,63,51,44„DATA 63,49,41,63,47,37,63,45,34,63,43,31,63,41,27,63,39,24„DATA 60,37,23,58,36,22,56,34,21,54,33,20,52,32,20,50,31,19„DATA 47,29,17,44,27,16,41,26,14,38,24,13,35,22,12,32,21,10„DATA 29,19,09,26,17,08,23,15,07,20,13,06,17,12,05,14,10,03„DATA 11,08,03,09,06,02,06,04,01,63,63,63                  „                                                            „PICTUREDATA:                                              „DATA 208,207,208,208,208,207,208,208,208,207,145,145,144  „DATA 144,144,144,144,144,145,145,208,207,208,208,208,207  „DATA 208,208,208,207,207,208,207,208,207,208,207,208,146  „DATA 146,144,144,139,139,139,139,139,144,144,144,146,146  „DATA 207,208,207,208,207,208,207,208,207,207,207,207,207  „DATA 207,207,146,145,145,144,139,139,139,139,139,139,139  „DATA 140,144,145,145,146,207,207,207,207,207,207,207,206  „DATA 207,206,207,206,207,146,145,144,144,139,138,138,138  „DATA 138,138,138,138,139,146,146,144,145,146,206,207,206  „DATA 207,206,207,206,206,206,206,206,146,145,144,146,139  „DATA 138,138,138,138,138,138,138,138,138,139,146,148,144  „DATA 145,146,206,206,206,206,206,205,206,206,206,146,145  „DATA 144,146,144,137,137,137,137,137,137,137,137,137,137  „DATA 137,144,146,148,144,145,146,206,206,205,206,206,206  „DATA 206,146,145,144,146,146,249,249,248,248,247,247,247  „DATA 247,247,247,248,248,249,249,146,148,144,145,146,205  „DATA 206,205,205,206,146,145,144,144,148,249,247,246,245  „DATA 244,244,244,244,244,244,244,244,245,246,247,249,148  „DATA 148,144,145,146,205,206,205,205,146,144,148,151,247  „DATA 235,235,235,235,235,235,235,235,235,235,235,235,235  „DATA 235,235,235,247,151,148,144,146,205,205,204,146,144  „DATA 148,151,247,245,235,235,235,235,235,235,235,235,235  „DATA 235,235,235,235,235,235,235,245,247,151,148,144,146  „DATA 205,204,144,148,151,240,242,245,235,235,235,235,235  „DATA 235,235,235,235,235,235,235,235,235,235,235,245,242  „DATA 240,151,148,144,204,144,148,151,156,238,242,242,235  „DATA 235,235,235,235,235,235,235,235,235,235,235,235,235  „DATA 235,235,242,242,238,156,151,144,144,144,148,151,156  „DATA 238,245,238,235,235,235,235,235,235,235,235,235,235  „DATA 235,235,235,235,235,235,238,245,238,156,151,148,144  „DATA 144,151,156,156,238,247,238,235,235,235,235,235,235  „DATA 235,235,235,235,235,235,235,235,235,235,238,247,238  „DATA 155,156,148,144,148,151,156,156,239,242,240,232,233  „DATA 234,234,234,235,238,235,232,238,238,235,234,234,233  „DATA 232,240,242,239,156,156,151,148,148,151,156,156,155  „DATA 238,241,236,232,232,234,235,240,233,235,230,234,240  „DATA 235,234,232,232,236,241,238,155,156,156,151,148,148  „DATA 151,151,156,156,155,241,240,236,233,235,235,235,238  „DATA 240,240,238,235,235,235,233,236,240,241,155,156,156  „DATA 156,151,148,148,151,151,156,156,156,244,240,238,238  „DATA 235,235,235,235,235,235,235,235,235,235,238,238,240  „DATA 244,156,156,156,151,151,148,148,148,151,151,156,156  „DATA 155,241,236,235,235,235,235,235,235,235,235,235,235  „DATA 235,235,236,241,155,156,156,151,151,151,148,148,148  „DATA 151,151,151,156,156,155,236,235,235,235,235,235,235  „DATA 235,235,235,235,235,235,236,156,156,156,151,151,151  „DATA 148,148,144,148,148,151,151,151,156,156,244,236,235  „DATA 235,235,235,235,235,235,235,235,235,236,244,156,156  „DATA 151,151,151,148,148,144,144,144,148,148,148,151,151  „DATA 156,246,243,236,235,235,235,235,235,235,235,235,236  „DATA 243,246,156,151,151,151,148,148,144,144,151,151,144  „DATA 144,148,148,148,151,246,243,240,235,235,235,235,235  „DATA 235,235,235,240,243,246,151,151,148,148,148,144,144  „DATA 151,151,151,151,151,144,144,148,148,148,244,241,235  „DATA 235,235,235,235,235,235,235,241,244,148,148,148,148  „DATA 144,144,151,151,151,148,148,151,151,151,151,144,144  „DATA 148,148,244,235,235,235,235,235,235,235,235,244,148  „DATA 148,148,144,144,151,151,151,151,148,148,148,148,148  „DATA 151,151,151,144,144,148,148,235,235,235,235,235,235  „DATA 235,235,148,148,144,144,151,151,151,151,148,148,148  „DATA 148,148,148,148,148,148,151,151,144,144,148,148,244  „DATA 241,239,239,241,244,148,148,144,144,151,151,151,148  „DATA 148,148,148,148,148,148,148,148,148,148,148,151,151  „DATA 144,144,148,148,244,239,239,244,148,148,144,144,151  „DATA 151,148,148,148,148,148,148,148,148,148,148,148,148  „DATA 148,148,148,151,151,144,144,148,148,240,240,148,148  „DATA 144,144,151,151,148,148,148,148,148,148,148,148,148  „DATA 148,148,148,148,148,148,148,148,151,151,144,144,148  „DATA 244,244,148,144,144,151,151,148,148,148,148,148,148  „DATA 148,148,148                                          „                                                            „EYES01:                                                   „DATA 246,243,241,239,239,237,237,237,237,237,237,239,239  „DATA 241,244,246,245,247,247,247,247,247,240,238,238,240  „DATA 247,247,247,247,247,245,242,240,239,242,242,244,247  „DATA 235,234,247,244,242,242,239,240,242,240,244,  3,148  „DATA   8,242,244,235,232,244,242,  8,148,  3,244,240,237  „DATA 237,237,237,240,240,240,235,232,240,240,240,237,237  „DATA 237,237,233,234,235,235,236,238,238,235,232,240,238  „DATA 238,236,235,234,233                                  „MOUTH01:                                                  „DATA 238,235,232,232,232,232,235,238,238,243,240,240,240  „DATA 240,243,238,238,235,232,232,232,232,235,238,235,236  „DATA 236,238,238,236,236,235,236,235,235,232,232,235,235  „DATA 236,243,238,235,235,235,235,238,243,241,241,243,243  „DATA 243,243,241,241,244,241,241,240,240,241,241,244      „EYES02:                                                   „DATA 246,243,241,239,239,237,237,237,237,237,237,239,239  „DATA 241,244,246,245,247,247,247,247,247,240,238,238,240  „DATA 247,247,247,247,247,245,242,240,239,240,242,244,247  „DATA 235,234,247,244,242,240,239,240,242,240,242,239,237  „DATA 240,242,244,235,232,244,242,240,237,239,242,240,237  „DATA 237,242,242,242,242,240,235,232,240,242,242,242,242  „DATA 237,237,233,234,235,235,236,238,238,235,232,240,238  „DATA 238,236,235,234,233                                  „MOUTH02:                                                  „DATA 238,235,232,232,232,232,235,238,238,243,  8,  3,  3  „DATA   8,243,238,238,235,232,232,232,232,235,238,235,236  „DATA 236,238,238,236,236,235,236,235,235,232,232,235,235  „DATA 236,243,238,235,235,235,235,238,243,241,241,243,243  „DATA 243,243,241,241,244,241,241,240,240,241,241,244      „MOUTH03:                                                  „DATA 238,235,232,232,232,232,235,238,238,243,  8,  3,  3  „DATA   8,243,238,238,240,245,245,245,245,240,238,235,235  „DATA 232,232,232,232,235,235,236,236,236,238,238,236,236  „DATA 236,240,235,235,232,232,235,235,240,243,240,235,235  „DATA 235,235,240,243,244,241,243,243,243,243,241,244      „EYES04:                                                   „DATA 246,243,241,239,239,237,237,237,237,237,237,239,239  „DATA 241,244,246,245,247,247,244,239,237,242,238,238,242  „DATA 237,239,244,247,247,245,242,240,242,247,247,247,247  „DATA 235,234,247,247,247,247,242,240,242,240,244,  3,148  „DATA   8,242,244,235,232,244,242,  8,148,  3,244,240,237  „DATA 237,237,237,240,240,240,235,232,240,240,240,237,237  „DATA 237,237,233,234,235,235,236,238,238,235,232,240,238  „DATA 238,236,235,234,233                                  „MOUTH04:                                                  „DATA 238,235,232,232,232,232,235,238,240,243,  8,  3,  3  „DATA   8,243,240,240,245,247,247,247,247,245,240,235,240  „DATA 245, 49, 49,245,240,235,236,235,232,232,232,232,235  „DATA 236,240,236,236,238,238,236,236,240,243,238,235,232  „DATA 232,235,238,243,244,240,235,235,235,235,240,244„„Steven Sensarn                 VGA PCX VIEWER                 alt.lang.basic                 12-14-95 (02:55)       QB, QBasic, PDS        73   1382     VGAPCX.BAS  SCREEN 13„CLS„TYPE TH„  MAN AS STRING * 1„  VER AS STRING * 1„  ENC AS STRING * 1„  BIT AS STRING * 1„  XLS AS INTEGER„  YLS AS INTEGER„  XMS AS INTEGER„  YMS AS INTEGER„  HRE AS INTEGER„  VRE AS INTEGER„  COL AS STRING * 48„  RES AS STRING * 1„  PLA AS STRING * 1„  BYT AS INTEGER„  PAL AS INTEGER„  FIL AS STRING * 58„END TYPE„„DIM H AS TH„DIM DAT AS STRING * 1„„FILE$ = "DEMO.PCX"          ' Change File Name„„OPEN FILE$ FOR BINARY AS #1„  GET #1, 1, H„  C = 1„  Y = 1: X = 1„  WHILE C <= 64000„    GET #1, , DAT„    IF ASC(DAT) > 192 AND ASC(DAT) <= 255 THEN„      LPS = ASC(DAT) - 192„      GET #1, , DAT„      VALUE = ASC(DAT)„        WHILE LPS > 0„          PSET (X, Y), VALUE„          IF X = 320 THEN X = 1: Y = Y + 1 ELSE X = X + 1„          C = C + 1„          LPS = LPS - 1„        WEND„    ELSE„      VALUE = ASC(DAT)„      PSET (X, Y), VALUE„      IF X = 320 THEN X = 1: Y = Y + 1 ELSE X = X + 1„      C = C + 1„    END IF„  WEND„  GET #1, LOF(1) - 768, DAT„  FOR LPS = 0 TO 255„    GET #1, , DAT„    A = INT(ASC(DAT) / 4)„    GET #1, , DAT„    B = INT(ASC(DAT) / 4)„    GET #1, , DAT„    C = INT(ASC(DAT) / 4)„    SLOT = LPS„    GOSUB CHANGECOLOR„  NEXT LPS„CLOSE„END„„CHANGECOLOR:„  R& = A„  G& = B„  B& = C„  G& = G& * 256„  B& = B& * 65536„  RGB& = R& + G& + B&„  PALETTE SLOT, RGB&„RETURN„„Scott Mitchell                 FADING PROGRAM                 FidoNet QUIK_BAS Echo          01-02-96 (16:41)       QB, QBasic, PDS        153  3249     FADING.BAS  'Here is a fading program.  First, let me say that I make no promises„'that this program is 100% safe.  I have tested it on my computer and it„'runs fine, but don't complain if your computer blows up or something.  I„'would like to explain how this works first.„„'First, to change the palette, we tinker with the ports &H3C7, &H3C8, and„'&H3C9.  You can see exactly how we change it in my GetPal and Pal„'procedures.  For Pal, you are setting the Palette:„„'       PAL(colornumbertochange,red_intensity,Green_intensity,Blue_intensity)„„'GetPal just returns the current values of intensity for the color„'specified.  SetUpPalArray stores all of the default values in an array„'(PalArray) so that when you're done fading out, you can restore what the„'previous default was.  RestorePalette simply restores you old palette„'that you saved with SetUpPalArray.„„'Scott Mitchell, 1996...„'Use at your own risk, but, heh, have fun„'„'Fading program...„„DECLARE SUB RestorePalette ()„DECLARE SUB fadeout ()„DECLARE SUB GetPal (col%, r%, g%, b%)„DECLARE SUB SetUpPalArray ()„DECLARE SUB Pal (col%, r%, g%, b%)„DEFINT A-Z„„'MaxColors=the max colors per screen  (255 in SCREEN 13 (0 - 255))„„CONST MaxColors = 255, false = 0, true = NOT false„„„TYPE PalType„       r AS INTEGER„       g AS INTEGER„       b AS INTEGER„END TYPE„„„DIM SHARED PalArray(MaxColors) AS PalType„DIM SHARED AlreadyHandled(MaxColors)„„SetUpPalArray„„SCREEN 13„„RANDOMIZE TIMER„DO„       PSET (320 * RND, 200 * RND), 256 * RND„LOOP UNTIL INKEY$ <> ""„„CALL fadeout„„SLEEP 1„„RestorePalette„„END„„'------------------------------------------------------------------„„SUB fadeout„„completed = 0„count = 0„„FOR x = 0 TO MaxColors„       AlreadyHandled(x) = 0„NEXT„„„DO„ done = true„„ IF AlreadyHandled(count) <> 0 THEN„       DO„               count = count + 1„               IF count > MaxColors THEN count = 0„       LOOP UNTIL AlreadyHandled(count) = 0„ END IF„„„ CALL GetPal(count, r, g, b)„ IF r > 0 THEN„       r = r - 1„       done = false„ END IF„ IF g > 0 THEN„       g = g - 1„       done = false„ END IF„ IF b > 0 THEN„       b = b - 1„       done = false„ END IF„„ CALL Pal(count, r, g, b)„„ IF done THEN„       completed = completed + 1„       AlreadyHandled(count) = 1„ END IF„„ count = count + 1:  IF count > MaxColors THEN count = 0„„„LOOP UNTIL completed >= 255„„END SUB„„'--------------------------------------------------------------------„„SUB GetPal (col, r, g, b)„„  OUT &H3C7, col„  r = INP(&H3C9)„  g = INP(&H3C9)„  b = INP(&H3C9)„„END SUB„„'--------------------------------------------------------------------„„SUB Pal (col, r, g, b)„„       OUT &H3C8, col„       OUT &H3C9, r„       OUT &H3C9, g„       OUT &H3C9, b„„END SUB„„'--------------------------------------------------------------------„„SUB RestorePalette„„FOR x = 0 TO MaxColors„       CALL Pal(x, PalArray(x).r, PalArray(x).g, PalArray(x).b)„NEXT„„END SUB„„'--------------------------------------------------------------------„„SUB SetUpPalArray„„FOR x = 0 TO MaxColors„     CALL GetPal(x, PalArray(x).r, PalArray(x).g, PalArray(x).b)„NEXT„„END SUB„Stephan van Loendersloot       SNOW FALLING                   FidoNet QUIK_BAS Echo          01-03-96 (03:01)       QB, QBasic, PDS        109  4605     SNOWFALL.BAS'Code for snow falling dwarreling down.„'Released to Public Domain by Stephan van Loendersloot„„DIM ColArray%(3)                ' Allocate memory„„ColArray%(1) = 15               ' Colors that can be used by the„ColArray%(2) = 8                ' snow (dots) to some sort of 3D„ColArray%(3) = 7                ' effect <g> like they're moving front/back„„ScreenNo% = 12                  ' Screen mode„„SELECT CASE ScreenNo%           ' Determine the Width and Height of the screen„                                ' According to the resolution.„  CASE 1„    XReso% = 320„    YReso% = 200„  CASE 2„    XReso% = 640„    YReso% = 200„  CASE 7„    XReso% = 320„    YReso% = 200„  CASE 8„    XReso% = 640„    YReso% = 200„  CASE 9„    XReso% = 640„    YReso% = 350„  CASE 10„    XReso% = 640„    YReso% = 350„  CASE 11„    XReso% = 640„    YReso% = 480„  CASE 12„    XReso% = 640„    YReso% = 480„  CASE 13„    XReso% = 320„    YReso% = 200„  CASE ELSE„    PRINT "Unsupported graphics mode: "; ScreenNo%„    END„END SELECT„„Dots% = 100                     ' Number of dot on the screen at all time„„DIM XPos%(Dots%)                ' Allocate memory for the X-axis locations„DIM YPos%(Dots%)                ' Allocate memory for the Y-axis locations„„RANDOMIZE TIMER                 ' The magic trick for random numbers.„„FOR Init% = 1 TO Dots%          ' Initialize the starting X-axis and Y-axis„                                ' locations of the dots.„  YPos%(Init%) = INT(RND * YReso%) + 1  ' Random number between 1-YReso%„  XPos%(Init%) = INT(RND * XReso%) + 1  ' Random number between 1-XReso%„NEXT Init%„„SCREEN ScreenNo%                ' Set screen mode„„DO„ FOR TakeDot% = 1 TO Dots%      ' Draw as many pixels as Dots%„„  PSET (XPos%(TakeDot%), YPos%(TakeDot%)), 0            ' Erase previously„                                                        ' set dot. Of course„                                                        ' In the beginning„                                                        ' there's no dot.„„  YPos%(TakeDot%) = YPos%(TakeDot%) + INT(RND * 5)      ' Determine by a„                                                        ' random number„                                                        ' between 0-5 how„                                                        ' fast a dot should„                                                        ' dwarrel.„    XRandom% = INT(RND * 6) + 1                         ' Determine by a„                                                        ' random number„                                                        ' between 1-6 how„                                                        ' if a dot should go„                                                        ' left or right and„                                                        ' how far„„„    IF XRandom% > 3 THEN XRandom% = 3 - XRandom%        ' If a dot dwarrels„                                                        ' over 3 to the right„                                                        ' make it go to the„                                                        ' left 3-random no.„„    XPos%(TakeDot%) = XPos%(TakeDot%) + XRandom%        ' New position of the„                                                        ' dot.„„    IF YPos%(TakeDot%) > YReso% - 1 THEN                ' Now check to see if„                                                        ' the dot has fallen„                                                        ' off the screen ;-)„      YPos%(TakeDot%) = 1                               ' If so, then put it„                                                        ' on top again,„      XPos%(TakeDot%) = INT(RND * XReso%) + 1           ' with a new random„                                                        ' position on the x-axis.„    END IF„„    FOR delay% = 1 TO 2000: NEXT delay%                 ' A *very* simple„                                                        ' delay routine.„„    Col% = ColArray%(INT(RND * 3) + 1)                  ' Determine the„                                                        ' color of the dot„      PSET (XPos%(TakeDot%), YPos%(TakeDot%)), Col%     ' And write the dot„                                                        ' on the screen„    NEXT TakeDot%                                       ' take the next dot„„LOOP WHILE INKEY$ = ""                                  ' And loop until a key„                                                        ' is pressed.„Hauke Daempfling               RESIZEABLE FONTS               hcd@berlin.snafu.de            01/96 (00:00)          QB, QBasic, PDS        201  10193    FPRINT.BAS  DEFINT A-Z„DECLARE SUB InitFprint ()„DECLARE SUB Fprint (text$, x%, y%, size%)„'$DYNAMIC„DIM SHARED StdFont$(94)„SCREEN 12„CLS„InitFprint„„'   Font Print„' Hauke Daempfling„'Jan 1996„„'This program displays resizable fonts in any screen mode (exept 0 and a few„' others). The font doesn't look to bad, but it took about 4 days to write up„' so please give me some credit if you use this program in any of yours :).„„'    Syntax:„'  Fprint text$, x, y, size„'text$ = any text (ASCII characters that are <32 or >126 will be cut from it)„'x     = bottom left corner X location„'y     = bottom left corner Y location„'size  = any size from 1 to ??, if you use 0 the standard (4) will be used.„„'Example:„Fprint "Aa Bb Cc Xx Yy Zz 0123456789", 8, 16, 0„Fprint "Aa Bb Cc Xx Yy Zz", 8, 64, 16„Fprint "0123456789", 64, 132, 16„„Fprint "Font Print - by Hauke Daempfling", 8, 256, 8„Fprint "R", 8, 320, 2„Fprint "E", 16, 320, 4„Fprint "S", 26, 320, 6„Fprint "I", 38, 320, 8„Fprint "Z", 55, 320, 10„Fprint "E", 78, 320, 12„Fprint "A", 100, 320, 14„Fprint "B", 128, 320, 16„Fprint "L", 160, 320, 18„Fprint "E", 190, 320, 20„„REM $STATIC„SUB Fprint (text$, x, y, size)„IF LEN(text$) = 0 THEN EXIT SUB„IF size = 0 THEN size = 4„scale$ = STR$(size)„„FOR a = 1 TO LEN(text$)„  locate$ = STR$(x) + "," + STR$(y)              'where we'll draw„  x$ = MID$(text$, a, 1)                         'the character being drawn„  IF ASC(x$) < 32 OR ASC(x$) > 126 THEN          'if the character is not in„    GOTO Skip                                    ' the StdFont$ array„  ELSE„    draw$ = StdFont$(ASC(x$) - 32)               'the drawing commands from„    w = 0                                        ' StdFont$„    FOR q = 1 TO 50                              'separate+expand the drawing„      XX$ = ""                                   ' commands from StdFont$„      DO„        w = w + 1„        XX$ = XX$ + MID$(draw$, w, 1)„      LOOP UNTIL MID$(draw$, w, 1) = " " OR w >= LEN(draw$)„      IF XX$ = "" THEN EXIT FOR„      IF LEFT$(XX$, 1) = "X" THEN„        temp$ = temp$ + "B " + RIGHT$(XX$, LEN(XX$) - 1)„      ELSE„        temp$ = temp$ + XX$„      END IF     'N=line, no move  B=move, no line„    NEXT q„    draw$ = temp$„    temp$ = ""„  END IF„  DRAW "S1 B M" + locate$ + " S" + scale$ + " " + draw$ 'draw the char„  x = x + (size * 2) + 1                                'next X position„Skip:„  draw$ = ""„NEXT a„END SUB„„SUB InitFprint 'sets up the character variables„'Set up the drawing commands for the characters.„„'Please note:„'These are not the normal DRAW commands, they are translated by the FOR-NEXT„' loop in the Fprint sub. Here you only have the direction (H,U,E,L,R,G,„' D,F) commands and the next line is always started where the last one ended.„' If you add "X" to the command the line will not be drawn but the location„' moved. When you are drawing you start at the bottom left corner of the„' character. The commands must be seperated by spaces and no spaces should„' be used in a single command.„„'            | *** Short reference to drawing commands used below ***„'   H U E     | * [Direction command][Length]„'<- L   R ->  |      Line, move„'   G D F     | * X[Direction command][Length]„'            |      No line, move„„'The drawing commands assume a character box size of 8x8.„„StdFont$(1) = "XR3 U1 R1 D1 L1 XU3 U5 R1 D5 L1"                     '!„StdFont$(2) = "XR3 XU8 D1 XR1 U1"                                   '"„StdFont$(3) = "XR2 U8 XR4 D8 XR2 XU2 L8 XU4 R8"                     '#„StdFont$(4) = "XR1 XU2 F2 R2 E2 U1 L6 U1 E2 R2 F2 XU3 XL3 D8"       '$„StdFont$(5) = "XR1 E6 XL4 D1 XD3 XR3 D1"                            '%„StdFont$(6) = "" 'no idea of how to draw this :)                    '&„StdFont$(7) = "XR4 XU8 D1 G1"                                       ''„StdFont$(8) = "XR6 H2 U4 E2"                                        '(„StdFont$(9) = "XR1 E2 U4 H2"                                        ')„StdFont$(10) = "XR3 XU4 R2 L1 U1 D2 XR1 H2 XR2 G2"                  '*„StdFont$(11) = "XR3 XU4 R2 L1 U1 D2"                                '+„StdFont$(12) = "XR4 XU2 D1 G1"                                      ',„StdFont$(13) = "XR2 XU4 R4"                                         '-„StdFont$(14) = "XR1 U1 R1 D1 L1"                                    '.„StdFont$(15) = "XR1 E6"                                             '/„„StdFont$(16) = "XR2 R2 E2 U4 H2 L2 G2 D4 F2"                        '0„StdFont$(17) = "XR3 U8 G1"                                          '1„StdFont$(18) = "XR6 L5 U1 E5 U1 H1 L3 G1"                           '2„StdFont$(19) = "XR1 XU1 F1 R3 E1 U2 H1 E1 U2 H1 L3 G1"              '3„StdFont$(20) = "XR1 XU4 E4 D8 U4 L4 R5"                             '4„StdFont$(21) = "XR6 XU8 L5 D3 R4 F1 D3 G1 L3 H1"                    '5„StdFont$(22) = "XR5 XU7 H1 L1 G2 D5 F1 R2 E1 U3 H1 L3"              '6„StdFont$(23) = "XR1 XU8 R5 D2 G3 D3"                                '7„StdFont$(24) = "XR2 R2 E1 U2 H1 L2 G1 D2 F1 XU4 H1 U2 E1 R2 F1 D2 G1"'8„StdFont$(25) = "XR2 R1 E2 U5 H1 L2 G1 D2 F1 R3"                     '9„„StdFont$(26) = "XR2 XU2 U1 R1 D1 L1 XU3 U1 R1 D1 L1"                ':„StdFont$(27) = "XR2 XU1 U2 R1 D1 G1 XU4 U1 R1 D1 L1"                ';„StdFont$(28) = "XR5 H4 E4"                                          '<„StdFont$(29) = "XR2 XU2 U1 R3 D1 L3 XU3 U1 R3 D1 L3"                '=„StdFont$(30) = "XR2 E4 H4"                                          '>„StdFont$(31) = "XR3 U1 XU1 U2 E2 U1 H1 L2 G1"                       '?„StdFont$(32) = "XR6 L4 H1 U5 E1 R3 F1 D3 L2 U1"                     '@„„StdFont$(33) = "XR1 U5 E3 F3 D5 U3 L6"                              'A„StdFont$(34) = "XR1 U8 R4 F1 D2 G1 L4 R4 F1 D2 G1 L4"               'B„StdFont$(35) = "XR7 XU2 G2 L2 H2 U4 E2 R2 F2"                       'C„StdFont$(36) = "XR1 U8 R3 F2 D4 G2 L3"                              'D„StdFont$(37) = "XR1 U8 R6 XD4 XL2 L4 D4 R6"                         'E„StdFont$(38) = "XR1 U8 R6 XD4 XL2 L4"                               'F„StdFont$(39) = "XR5 XU4 R2 D2 G2 L3 H2 U4 E2 R4"                    'G„StdFont$(40) = "XR1 U8 D4 R6 D4 U8"                                 'H„StdFont$(41) = "XR2 R6 L3 U8 L3 R6"                                 'I„StdFont$(42) = "XR7 XU8 D6 G2 L2 H2"                                'J„StdFont$(43) = "XR2 U8 D4 E4 G4 F4"                                 'K„StdFont$(44) = "XR7 L6 U8"                                          'L„StdFont$(45) = "XR1 U8 F3 E3 D8"                                    'M„StdFont$(46) = "XR1 U8 F6 XD2 U8"                                   'N„StdFont$(47) = "XR2 R3 E2 U4 H2 L3 G2 D4 F2"                        'O„StdFont$(48) = "XR1 U8 R4 F2 G2 L4"                                 'P„StdFont$(49) = "XR3 R3 E2 U4 H2 L3 G2 D4 F2 XR5 H2"                 'Q„StdFont$(50) = "XR1 U8 R4 F2 G2 L4 F4"                              'R„StdFont$(51) = "XR1 XU2 F2 R2 E2 U2 L6 U2 E2 R2 F2"                 'S„StdFont$(52) = "XR4 U8 R3 L6"                                       'T„StdFont$(53) = "XR1 XU8 D6 F2 R2 E2 U6"                             'U„StdFont$(54) = "XR1 XU8 D5 F3 E3 U5"                                'V„StdFont$(55) = "XR1 XU8 D6 F2 E1 F1 E2 U6"                          'W„StdFont$(56) = "XU8 F8 XU8 G8"                                      'X„StdFont$(57) = "XR4 U5 H3 XR6 G3"                                   'Y„StdFont$(58) = "XR1 XU8 R6 D1 G6 D1 R6"                             'Z„„StdFont$(59) = "XR7 L1 U8 R1"                                       '[„StdFont$(60) = "XR7 H6"                                             '\„StdFont$(61) = "XR1 R1 U8 L1"                                       ']„StdFont$(62) = "XR3 XU7 E1 F1"                                      '^„StdFont$(63) = "XR1 R6"                                             '_„StdFont$(64) = "XR4 XU8 F1"                                         '`„„StdFont$(65) = "XR1 XU1 U1 E1 R1 F1 XD1 G1 L1 H1 XR3 XD1 U3"        'a„StdFont$(66) = "XR1 U7 D5 E1 R1 F1 D1 G1 L1 H1"                     'b„StdFont$(67) = "XR4 XU1 G1 L1 H1 U1 E1 R1 F1"                       'c„StdFont$(68) = "XR4 U7 D5 H1 L1 G1 D1 F1 R1 E1"                     'd„StdFont$(69) = "XR4 XU1 G1 L1 H1 U1 E1 R1 F1 L3"                    'e„StdFont$(70) = "XR2 U3 L1 R2 XL1 U2 E1 R1 F"                        'f„StdFont$(71) = "XR4 XU1 G1 L1 H1 U1 E1 R1 F1 U1 D4 G1 L1 H1"        'g„StdFont$(72) = "XR1 U7 D5 E1 R1 F1 D2"                              'h„StdFont$(73) = "XR2 U3 XU1 U1"                                      'i„StdFont$(74) = "XR2 XU5 D1 XD1 D4 G1 L1 H1"                         'j„StdFont$(75) = "XR1 U7 D5 E2 G2 F2"                                 'k„StdFont$(76) = "XR2 U7"                                             'l„StdFont$(77) = "XR1 U3 D1 E1 F1 E1 F1 D2"                           'm„StdFont$(78) = "XR1 U3 D1 E1 R1 F1 D2"                              'n„StdFont$(79) = "XR2 R1 E1 U1 H1 L1 G1 D1 F1"                        'o„StdFont$(80) = "XR1 U3 D1 E1 R1 F1 D1 G1 L1 H1 D3"                  'p„StdFont$(81) = "XR3 XU1 G1 L1 H1 U1 E1 R1 F1 U1 D5"                 'q„StdFont$(82) = "XR1 U3 D1 E1 R1 F"                                  'r„StdFont$(83) = "XR1 XU1 F1 R1 E1 U1 L3 U1 E1 R1 F1"                 's„StdFont$(84) = "XR3 U7 D3 L1 R2"                                    't„StdFont$(85) = "XR1 XU3 D2 F1 R1 E1 U2 D3"                          'u„StdFont$(86) = "XR1 XU3 D2 F1 E1 U2"                                'v„StdFont$(87) = "XR1 XU3 D2 F1 E1 F1 E1 U2"                          'w„StdFont$(88) = "XR1 XU3 F3 XU3 G3"                                  'x„StdFont$(89) = "XR1 XU3 D2 F1 R2 U3 D4 G1 L1"                       'y„StdFont$(90) = "XR1 XU3 R3 G3 R3"                                   'z„„StdFont$(91) = "XR7 L1 H1 U3 L1 R1 U3 E1 R1"                        '{„StdFont$(92) = "XR4 U8"                                             '|„StdFont$(93) = "XR1 R1 E1 U3 R1 L1 U3 H1 L1"                        '}„StdFont$(94) = "XR2 XU7 E1 F1 E1"                                   '~„„END SUB„„David A. Wicker                MATRIX SCREEN PAINT DEMO       david@fastlane.net             01-28-96 (11:23)       QB, QBasic, PDS        59   1262     MPAINT.BAS  DEFINT A-Z„' * Matrix Paint (C) 1996+ David A. Wicker„„CLS„LOCATE 12, 1„PRINT "MATRIX SCREEN PAINT DEMO"„PRINT "Use arrow keys (with NUM-LOCK lit), and [CR] to paint region"„PRINT "[ESC] to exit demo."„PRINT„INPUT "", A$„„SCREEN 1„DEF FNR (A) = INT(RND * A)„RANDOMIZE TIMER„„FOR I = 1 TO 50„  LINE (FNR(320), FNR(200))-(FNR(320), FNR(200))„NEXT„„Again:„  DO„	C = POINT(H, V)„	PSET (H, V), 1„	DO„	  K$ = INKEY$„	LOOP UNTIL K$ > ""„	IF K$ = CHR$(27) THEN„	  SCREEN 0„	  WIDTH 80„	  LOCATE 12, 1„	  PRINT "Matrix Screen Painter (C) 1996+ David A. Wicker"„	  END„	END IF„	PSET (H, V), C„	IF K$ = "8" THEN V = V - 5„	IF K$ = "2" THEN V = V + 5„	IF K$ = "4" THEN H = H - 5„	IF K$ = "6" THEN H = H + 5„  LOOP UNTIL K$ = CHR$(13)„  PSET (H, V), 1„„  DO„	OK = 1„	FOR I = 0 TO 199„	  FOR J = 0 TO 319„		IF POINT(J, I) = 1 THEN„		  IF POINT(J + 1, I) = 0 THEN PSET (J + 1, I), 1: OK = 0„		  IF POINT(J, I + 1) = 0 THEN PSET (J, I + 1), 1: OK = 0„		END IF„		IF POINT(319 - J, 199 - I) = 1 THEN„		  IF POINT(318 - J, 199 - I) = 0 THEN PSET (318 - J, 199 - I), 1: OK = 0„		  IF POINT(319 - J, 198 - I) = 0 THEN PSET (319 - J, 198 - I), 1: OK = 0„		END IF„	  NEXT„	NEXT„  LOOP UNTIL OK = 1„  SOUND 800, .1„„GOTO Again„Jason Plackey                  MODE-X SCROLL                  Prodigy                        Unknown Date           QB, QBasic, PDS        80   2413     XSCROLL.BAS '  Regarding the example code...  Change the delay% value to„'accommodate your CPU's speed.  The TIMER function is„'relatively inaccurate when dealing with fractions of a„'second, and I had insufficient space to include my own timer„'routine.„'       „'  If you have any questions, feel free to ask.„'Happy coding!     Jason Plackey„„DECLARE SUB ModeX ()„DECLARE SUB OutPort (PortAddr&, vh%, vl%)„DECLARE SUB Standard ()„DECLARE SUB SetVOffset (Offset&)„                                                           „SCREEN 13: DEF SEG = &HA000: CALL ModeX„                                                           „FOR count% = 0 TO 63„  redval& = count%„  greenval& = 256 * count%„  blueval& = 65536 * count%„  rgbval& = blueval& + greenval& + redval&„  PALETTE count%, redval&„  PALETTE count% + 64, greenval&„  PALETTE count% + 128, blueval&„  PALETTE count% + 192, rgbval&„NEXT count%„                                                           „FOR Offset& = 0 TO 15999„  rgbbase% = Offset& MOD 64„  POKE Offset&, rgbbase%„  POKE Offset& + 16000, rgbbase% + 64„  POKE Offset& + 32000, rgbbase% + 128„  POKE Offset& + 48000, rgbbase% + 192„NEXT Offset&„                                            „Offset& = 0: OffsetInc% = 80: Frame% = 0„                                                    „DO„  Offset& = Offset& + OffsetInc%„  CALL SetVOffset(Offset&): WAIT &H3DA, 8„  Frame% = Frame% + 1„    IF Frame% = 99 THEN OffsetInc% = 81„    IF Frame% = 199 THEN OffsetInc% = 79„    IF Frame% = 299 THEN OffsetInc% = 80„    IF Frame% = 499 THEN OffsetInc% = -80„    IF Frame% = 599 THEN OffsetInc% = -79„    IF Frame% = 699 THEN OffsetInc% = -81„    IF Frame% = 799 THEN OffsetInc% = -80„    IF Frame% = 899 THEN„      CLS : PALETTE„      CALL SetVOffset(0): CALL Standard„      END„    END IF„  FOR delay% = 1 TO 1000: NEXT delay%„LOOP„„SUB ModeX„  CALL OutPort(&H3C4, 6, 4): CLS„  CALL OutPort(&H3D4, 227, 23)„  CALL OutPort(&H3D4, 0, 20)„  CALL OutPort(&H3C4, 15, 2)„END SUB„„SUB OutPort (PortAddr&, vh%, vl%)„  OUT PortAddr&, vl%: OUT PortAddr& + 1, vh%„END SUB„„SUB SetVOffset (Offset&)„  V& = Offset&„  CALL OutPort(&H3D4, V& \ 256, 12)„  CALL OutPort(&H3D4, V& AND 255, 13)„END SUB„„SUB Standard„  CALL OutPort(&H3C4, 14, 4)„  CALL OutPort(&H3D4, 163, &H17)„  CALL OutPort(&H3D4, 64, &H14)„  CALL OutPort(&H3C4, 15, &H2)„END SUB„„Earl Montgomery                HORIZONTAL SCREEN SCROLL       FidoNet QUIK_BAS Echo          02-01-96 (01:22)       QB, QBasic, PDS        51   1512     HZSCROLL.BAS REM I have not figured out how to keep that horizontal line from„ REM appearing at the bottom of the screen. If any of you graphics„ REM gurus know, please tell me!„ REM By Earl Montgomery„ RANDOMIZE TIMER„ KEY(10) ON„ ON KEY(10) GOSUB endofprogram„ ST% = 4„ PRINT "Once the figure is drawn press any key to RESTART scroll."„ PRINT "                                          ^^^^^^^";„ PRINT : PRINT "Exit this program by pressing the <F10 Key!!>"„ PRINT "PRESS ANY KEY TO BEGIN"„ SLEEP (100)„ PI = 3.141593: DEF FNX (A) = (SIN(A) + 1) * 300„ DEF FNY (A) = (COS(A) + 1) * 150: A = 0: B = 0„ SCREEN 9: COLOR 8, 0„ PALETTE 8, 0„tryagain:„ AA = RND * 20: BB = RND * 20: T = RND * 8„ IF AA = BB% THEN GOTO tryagain:„ IF AA < 8 OR BB < 8 THEN GOTO tryagain„ IF T < 6 THEN T = 6„ FOR X = 0 TO PI * 2 STEP PI / AA / T„ A = A + PI / AA: B = B + PI / BB: LINE (FNX(A), FNY(A))-(FNX(B), FNY(B))„ NEXT„ PAINT (2, 2), 8, 8„ PAINT (638, 2), 8, 8„ PAINT (2, 238), 8, 8„ PAINT (2, 638), 8, 8„ FOR H% = 0 TO 610 STEP 16„ FOR V% = 0 TO 320 STEP ST%„ LOCATE 24, 2: PRINT "This is a test of the emergency broadcast system. ";„choosecolor:„ f% = RND * 15„ IF f% = 8 THEN GOTO choosecolor„ PAINT (H%, V%), f%, 8„ NEXT: NEXT„scroll:„ FOR X% = 1 TO 63„ OUT &H3D4, 13: OUT &H3D5, X%„ SOUND 32000, 2„pickagain:„ fg% = RND * 15„ IF fg% = 8 THEN GOTO pickagain„ PALETTE fg%, X%„ NEXT„ SLEEP (100)„ GOTO scroll„endofprogram:„ OUT &H3D4, 13: OUT &H3D5, 0: CLS : COLOR 15, 0: PALETTE: END„„Michael Teator                 BOUNCING BOXES                 mhscards@aol.com               04/94 (00:00)          QB, QBasic, PDS        140  5669     BOUNCER.BAS ' Bouncer by Michael Teator    April 1994„'„' Sorry for the lack of documentation, this was written quikly as a demo to„' a friend.  The program could probably be faster with some creative thinking.„' The move function could be used for almost anything, like a screen saver, or„' maybe a paddleball game.  If you want to use it, go ahead, just as long as„' you mention my name somewhere.  I have many QBasic creations, but now I'm„' planning on learning C so I won't have time to create anything new.  I'll„' just finish the programs I have now and release them on America Online as„' public domain.  I will, however, discuss QBasic with anyone that would like„' to.  Send me E-Mail at:     AOL -         Skeptre„'                             Internet -    skeptre@f11.n3626.z1.fidonet.org„'                             (alternate) - skeptre@aol.com„' Note: the speed checking routine can be deleted below.  I added that just„' because I was playing with the moving bar thing and thought it would be„' neat to add.  I'm not sure how well it determines the number of boxes to„' use, as I've only run it on my 486DX 33, on which it ends up with 16 boxes„' at an enjoyable speed.  Still, even 25 or 30 boxes are interesting.  The„' maximum number of boxes is 32,767, but that is limited by the available„' DOS memory.  I've tried up to 5000, but its slow and you can't tell the„' boxes apart.  100 is the maximum number that doesn't fill the screen up too„' much.„„DECLARE FUNCTION Move (xp%, yp%, xra%, yra%, n%)„„DEFINT A-Z„„OPTION BASE 1„„CONST upleft = 1, upright = 2, downright = 3, downleft = 4„„RANDOMIZE TIMER„SCREEN 13„„' Speed checking routine„PRINT "Please wait while I determine the"              ' \„PRINT "number of boxes to use . . ."                   '  \„PRINT                                                  '   |„time1! = TIMER                                         '   |„a = 220                                                '   |„FOR t = 1 TO 10                                        '   |„     c = INT(RND * 15) + 1                             '   |„     COLOR c                                           '   |„     FOR n = 1 TO 40                                   '  /„          FOR i = 4 TO 25                              ' |„               LOCATE i, n: PRINT STRING$(1, a);       ' \„          NEXT                                         '   \„     NEXT                                              '    > Delete this if you don't want it to check your speed.„     FOR n = 40 TO 1 STEP -1                           '   /„          FOR i = 4 TO 25                              ' /„               LOCATE i, n: PRINT STRING$(1, " ");     ' |„          NEXT                                         '  \„     NEXT                                              '   |„NEXT                                                   '   |„time2! = TIMER                                         '   |„total! = time2! - time1!                               '   |„score! = 110 / total!                                  '   |„ans = INT(score!)                                      '  /„GOTO gotans                                            ' /„„top:„PRINT SPACE$(37);„LOCATE , 1: PRINT "Current number of boxes:"; ans„CLEAR„PRINT "                                     "„PRINT "Less boxes = faster display.         "„PRINT "                                     "„PRINT "How many boxes would you like (press "„PRINT SPACE$(37);„LOCATE , 1: INPUT ; "ENTER to end)? ", ans„IF ans = 0 THEN SYSTEM„„gotans:„CLS„max = ans„„DIM xr(max), yr(max), x(max), y(max), dir(max)„„FOR num = 1 TO max„     xr(num) = INT(RND * 20)„     yr(num) = INT(RND * 20)„     x(num) = INT(RND * (320 - xr(num) * 2)) + xr(num)„     y(num) = INT(RND * (200 - yr(num) * 2)) + yr(num)„     dir(num) = INT(RND * 4) + 1„NEXT„„LClr = 16: HiClr = 55„Counter = LClr„„DO„     BoxClr = Counter„     Counter = Counter + 1„     IF Counter > HiClr THEN Counter = LClr„     FOR num = 1 TO max„          LINE (x(num) - xr(num), y(num) - yr(num))-(x(num) + xr(num), y(num) + yr(num)), BoxClr, B'F„          dir(num) = Move(x(num), y(num), xr(num), yr(num), dir(num))„          SELECT CASE dir(num)„               CASE downleft: y(num) = y(num) + 1: x(num) = x(num) - 1„               CASE upleft: y(num) = y(num) - 1: x(num) = x(num) - 1„               CASE downright: y(num) = y(num) + 1: x(num) = x(num) + 1„               CASE upright: y(num) = y(num) - 1: x(num) = x(num) + 1„          END SELECT„     NEXT„LOOP UNTIL INKEY$ <> ""„GOTO top„„DEFSNG A-Z„FUNCTION Move (xp%, yp%, xra%, yra%, n%)„    „     DEFINT A-Z„     ul = yra: ll = xra: bl = 199 - yra: rl = 319 - xra„     SELECT CASE n„     CASE upleft„          IF yp > ul THEN„               IF xp > ll THEN Move = upleft ELSE Move = upright„          ELSE„               IF xp > ll THEN Move = downleft ELSE Move = downright„          END IF„     CASE upright„          IF yp > ul THEN„               IF xp < rl THEN Move = upright ELSE Move = upleft„          ELSE„               IF xp < rl THEN Move = downright ELSE Move = downleft„          END IF„     CASE downright„          IF yp < bl THEN„               IF xp < rl THEN Move = downright ELSE Move = downleft„          ELSE„               IF xp < rl THEN Move = upright ELSE Move = upleft„          END IF„     CASE downleft„          IF yp < bl THEN„               IF xp > ll THEN Move = downleft ELSE Move = downright„          ELSE„               IF xp > ll THEN Move = upleft ELSE Move = upright„          END IF„     END SELECT„„END FUNCTION„„Rolf Genster                   SIMPLE ANIMATION IN PB         Rolf@ice.prima.ruhr.de         07-11-95 (22:01)       PB                     119  2944     ANIMATE.BAS 'Program Name     : ANIMATE.BAS„'Description      : Simple animation in PowerBASIC„„DEFINT A-Z„DIM Array1( 2000 )„DIM Array2( 2000 )„DIM a$( 40 )„„RESTORE Ship„FOR i = 1 TO 20„  READ a$( i )„NEXT i„„apage = 1„vpage = 0„dsp   = 0„hs    = 3 'Horz Size„vs    = 2 'Vert Size„ho    = 4 'Horz Offset„vo    = 4 'Vert Offset„SCREEN 9,, apage, vpage„GOSUB ShipUpMk„hs = 3: vs = 2: ho = 4: vo = 4„GOSUB ShipDnMk„„d  = 1„x1 = 280„Idle:„  k$ = UCASE$( INKEY$ ): IF k$ = CHR$( 27 ) THEN SYSTEM„  GOSUB movchar„  SWAP apage, vpage„  SCREEN,, apage, vpage„  FOR Dly = 1 TO 500: NEXT Dly„  IF vos > 275 THEN d = 0„  IF vos < 3 THEN d = 1„  GOTO Idle„END„„ShipUpMk:„  FOR j = 1 TO 20„    FOR i = 1 TO LEN( a$( j ))„      t$ = MID$( a$( j ), i, 1 )„      ' K  0 black„      ' B  1 Blue„      ' G  2 Green„      ' C  3 Cyan„      ' R  4 Red„      ' M  5 Magenta„      ' N  6 Brown„      ' W  7 White„      ' A  8 Gray„      ' b  9 Light Blue„      ' g 10 Light Green„      ' c 11 Light Cyan„      ' r 12 Light Red„      ' m 13 Light Magenta„      ' y 14 Yellow„      ' w 15 Bright White„      fg = INSTR( "BGCRMBWAbgcrmyw", t$ )„„      LINE( 0 + ho, 0 + vo ) - ( hs + ho, vs + vo ), fg, bf„      ho = ho + 2„    NEXT i„    ho = 4: n = n + 1: vo = vo + 2„  NEXT j„„  x1 = 0: y1 = 0: x2 = 74: y2 = 50„  GET( x1, y1 ) - ( x2, y2 ), Array1„RETURN„„ShipDnMk:„  RESTORE Ship„  FOR j = 20 TO 1 STEP - 1„    FOR i = 1 TO LEN( a$( j ))„      t$ = MID$( a$( j ), i, 1 )„      fg = INSTR( "BGCRMBWAbgcrmyw", t$ )„      LINE( 0 + ho, 0 + vo ) - ( hs + ho, vs + vo ), fg, bf„      ho = ho + 2„    NEXT i„    ho = 4: n = n + 1: vo = vo + 2„  NEXT j„„  x1 = 0: y1 = 0: x2 = 74: y2 = 50„  GET( x1, y1 ) - ( x2, y2 ), Array2„RETURN„„MovChar:„  CLS„  IF d = 1 THEN„    vos = vos + 3„    PUT( x1, y1 + vos ), Array2„  ELSE„    vos = vos - 3„    PUT( x1, y1 + vos ), Array1„  END IF„  Dsp = 1„RETURN„„Ship:„DATA "                bb                "„DATA "               BBBB               "„DATA "               BBBB               "„DATA "                BB                "„DATA "              AABBAA              "„DATA "             AGGCCGGA             "„DATA "            AGGGCCGGGA            "„DATA "           AGGGGGGGGGGA           "„DATA "           AGGGGGGGGGGA           "„DATA "  y       AGGGGGGGGGGGGA       y  "„DATA " ACA     AADGGGGGGGGGGRAA     ACA "„DATA " ACA   AAGGGRGGGmmGGGRGGGAA   ACA "„DATA " ACGAAAGGGGGRGGmmmmGGRGGGGGAAAGCA "„DATA " ACGGGGGGGGGGRGmmmmGRGGGGGGGGGGCA "„DATA " GGGGGGGGGGGGRGmGGmGRGGGGGGGGGGGG "„DATA " AACGGGGGGGRGGGGGGGGGGRGGGGGGGCA  "„DATA "    ACCGGGRRRRRRRRRRRRRRGGGCCA    "„DATA "      AGGRRRRRAAAAARRRRRRGGA      "„DATA "       ARRRRAAA    AAARRRRA       "„DATA "        RRyR          RyRR        "„MJS                            STARWARS SCREEN SCROLL         Rolf@ice.prima.ruhr.de         01-18-96 (08:17)       PB                     130  3037     STARWARS.BAS$huge„„deflng a-z„„screen 9,,0,0                          ' To have some more pages„„dim huge Position(0400,0:1) as integer ' Array with Positios f. virt. Screen„dim CharTable(0:255,0:13) as byte      ' ASCII-Table„dim ScrollScreen(0:400,0:79) as byte   ' Screen with Scroll-Infos„„CharHeight=14„„y=0„IncY=2„for z=0 to 400„ call r3d22d(320,y,z,x2,y2)          ' to get some "good" 3D's„ Position(z,0)=x2                    ' outermost right border„ Position(z,1)=y2                    ' 2D-Y-Position calculated from 3D-Pos.„ incr y,IncY„next„„' Simple CharTableRead„def seg=&HA000„for a=0 to 255„ locate 1,1„ print chr$(a);„ CharPtr=0„ for y=0 to CharHeight-1„  CharTable(a,y)=peek(CharPtr)        ' read ASCII-Table„  incr CharPtr,80„ next„next„„data 7„data -1,"⁄ƒƒƒƒƒƒƒƒƒƒƒø"„data -1,"≥ This is a ≥"„data -1,"≥  TEST !!  ≥"„data -1,"≥  written  ≥"„data -1,"≥  by  MJS  ≥"„data -1,"≥  in 1996  ≥"„data -1,"¿ƒƒƒƒƒƒƒƒƒƒƒŸ"„„read WorkLines„dim ScrollText$(WorkLines),ScrollCenter(WorkLines)„for a=1 to WorkLines„ read ScrollCenter(a),ScrollText$(a)          ' read Text to scroll„next„„VisualPage=0:LastPage=1„ScrollScreenMax=CharHeight*4„ScrollLine=1„ScrollLineSub=0„ColorDiv=(ScrollScreenMax/14)„„r=0„for a=1 to 15              ' set colors (black -> white)„ out &H3c8,a„ for b=1 to 3„  out &H3c9,r„ next„ incr r,4„next„for a=1 to 15„ palette a,a„next„„while len(inkey$)=0„ screen 9,,LastPage,VisualPage„ line (0,0)-(639,349),0,bf                ' quicker than CLS :)„ for y=ScrollScreenMax-1 to 1 step -1„  y2=y-1„  for x=0 to 79„   ScrollScreen(y,x)=ScrollScreen(y2,x)   ' scroll 'up'„  next„ next„ h$=ScrollText$(ScrollLine)„ select case ScrollCenter(ScrollLine)     ' centering line„ case -1„  StartPos=40-(len(h$)\2)„ case else„  StartPos=ScrollCenter(ScrollLine)„ end select„ for c=1 to len(h$)                       ' read Lines of characters„  ScrollChar=asc(mid$(h$,c,1))„  ScrollScreen(0,StartPos)=CharTable(ScrollChar,ScrollLineSub)„  incr StartPos„ next„ incr ScrollLineSub„ if ScrollLineSub=CharHeight then„  ScrollLineSub=0„  incr ScrollLine„  if ScrollLine>WorkLines then ScrollLine=1„ end if„ for y=0 to ScrollScreenMax-1         ' show 'viewable' scroll-Text„  RealY=349-Position(y,1)             „  OldY=349-Position(y+1,1)„  MaxX=Position(y,0)„  WorkX=-320„  for x=0 to 79„   ScrollByte=ScrollScreen(y,x)„   if (ScrollByte>0) then„    OldX=(((MaxX*WorkX)\320)*4)+320„    for b=7 to 0 step -1„     incr WorkX„     RealX=(((MaxX*WorkX)\320)*4)+320„     if bit(ScrollByte,b) then line (OldX,OldY)-(RealX,RealY),15-(y\ColorDiv),bf„     OldX=RealX„    next„   else„    incr WorkX,8„   end if„  next„ next„ LastPage=VisualPage„ VisualPage=((VisualPage+1) and 1)    ' switch Pages„wend„„end„„SUB r3d22d(x1, y1, z, x2, y2)   ' calculate 3D -> 2D„' Depth=128„' x2=(x1*depth)/(z+depth)„  z2 = z + 128„  x2 = x1„  SHIFT LEFT x2, 7„  x2 = x2 \ z2„  y2 = y1„  SHIFT LEFT y2, 7„  y2 = y2 \ z2„END SUB„Carl Gorringe                  FLI/FLC ANIMATION PLAYER       FidoNet QUIK_BAS Echo          02-01-96 (08:34)       QB, QBasic, PDS        365  11569    FLIPLAY.BAS '----------------------------------------------------„'  FLIPLAY.BAS - FLI/FLC Animation Flic Player v2.0„'----------------------------------------------------„'       (c) Carl Gorringe 2/1/96„'„' This program will play an animation flic„'       FLI or FLC file in SCREEN 13.„'„'   This will only work with 320 x 200 flics.„' Although I have speeded up the program some„' by using POKEs instead of PSET to display„' on the screen, there is still much to be done„' to speed things up. For example, disk access„' could be greatly speeded up by buffering large„' portions of the file to memory before decoding„' it.„'„'    Released to the Public Domain.„'  You may use this any way you see fit,„'  just remember to give credit where„'  credit is due. This program is provided„'  "AS IS", therefore I am not responsible„'  for any consequences of using it.„'„' I can be contacted be sending a message to:„' CARL GORRINGE at FIDOnet's QUICK_BAS echo or„' Internet e-mail: <carl.gorringe@rhosoft.com>„'„'------------------------------------------------„„CONST FALSE = 0„CONST TRUE = NOT FALSE„„TYPE FLIheaderType„	Size AS LONG               'Size (in bytes) of entire Flic file„	ID AS INTEGER              'Always &hAF11 for FLI files„	Frames AS INTEGER          'Number of Frames (not including ring frame)„	Xres AS INTEGER            'Always 320 for FLI files„	Yres AS INTEGER            'Always 200 for FLI files„	ColorBits AS INTEGER       'Always 8 for FLI files (bits per pixel)„	Flags AS INTEGER           'Always 0 for FLI files„	Speed AS INTEGER           'Pauses 1/70 second between frames (FLI only)„	Reserved AS STRING * 110„END TYPE„„TYPE FLIframeChunkType„	Size AS LONG               'Size of frame chunk, including header„	ID AS INTEGER              'Always &hF1FA for FLI files„	Chunks AS INTEGER          'Number of subordinate chunks in frame chunk„	Reserved AS STRING * 8„END TYPE„„TYPE FLIdataChunkType„	Size AS LONG               'Size of data chunk, including header„	ID AS INTEGER              'Data Type ID (see below)„END TYPE„„'-- Data Type ID has following values: --„'        4  - COLOR256 : Change Palette using values 0-255 for RGB„'        7  - SS2      : (FLC) Word Aligned Delta Compression (Pixel Data)„'        11 - COLOR64  : Change Palette using values 0-63 for RGB„'        12 - LC       : Byte Aligned Delta Compression (Pixel Data)„'        13 - BLACK    : Black Screen„'        15 - BRUN     : Byte Run Length Compression (Pixel Data)„'        16 - COPY     : Bitmap of entire image (Pixel Data)„„DECLARE SUB FLIplay (FileName$, ErrCode%)„„'---------------------------------------------------------------------------„„'--- Credits ---„	SCREEN 0: WIDTH 80, 25„	CLS„	PRINT "FLIPLAY.BAS v2.0 - Programmed by Carl Gorringe <carl.gorringe@rhosoft.com>"„	PRINT„	PRINT„„'--- Input File Name ---„	PRINT "Enter FLI or FLC File Name with extension (Enter=Quit):"„	INPUT "> ", FileName$„„	IF LTRIM$(RTRIM$(FileName$)) = "" THEN END„	IF INSTR(FileName$, ".") = 0 THEN FileName$ = FileName$ + ".FLI"„„'--- Setup Screen ---„	SCREEN 13„	CLS„	LOCATE 25, 1: PRINT "Loading "; FileName$;„	LOCATE 1, 1„„'--- Simple File Exist Checking ---„	FileNum% = FREEFILE„	OPEN FileName$ FOR INPUT AS FileNum%„	CLOSE FileNum%„„'--- Play Animation Flic ---„	CALL FLIplay(FileName$, ErrCode%)„„	IF ErrCode% > 0 THEN„		LOCATE 3, 1„		PRINT "Error Occured! : ErrCode ="; ErrCode%„	END IF„„'--- Pause to Exit ---„	I$ = INPUT$(1)„	SCREEN 0: WIDTH 80, 25: CLS„	END„„SUB FLIplay (FileName$, ErrCode%)„„' (c) Carl Gorringe  2/1/96  << v2.0 >>„'-----------------------------------------„'  Plays a FLI or FLC Animation Flic File.„'  Make sure graphics mode is set to„'  SCREEN 13 before entering. Also,„'  this doesn't check if FileName$ exists!„'  ErrCode% is Error Code returned: 0=OK„'-----------------------------------------„'<< Done - Tested OK >>„„DIM Header AS FLIheaderType„DIM FrameChunk AS FLIframeChunkType„DIM DataChunk AS FLIdataChunkType„DIM Byte AS STRING * 1„„ErrCode% = 0„„FileNum% = FREEFILE„OPEN FileName$ FOR BINARY AS FileNum%„„'--- Get the File's Header ---„	GET #FileNum%, , Header„„	IF Header.ID <> &HAF11 AND Header.ID <> &HAF12 THEN„		ErrCode% = 1            '<-- Not a FLI or FLC file (error)„		CLOSE FileNum%„		EXIT SUB„	END IF„	IF Header.Xres <> 320 OR Header.Yres <> 200 THEN„		ErrCode% = 2            '<-- Not a 320x200x256 Color Flic (error)„		LOCATE 21, 1: PRINT "Xres:"; Header.Xres;„		LOCATE 22, 1: PRINT "Yres:"; Header.Yres;„		LOCATE 23, 1: PRINT "ColorBits:"; Header.ColorBits;„		LOCATE 1, 1„		CLOSE FileNum%„		EXIT SUB„	END IF„„'--- Loop Thru Each Frame ---„	DEF SEG = &HA000„	FOR Frame% = 1 TO Header.Frames„„		'*** FRAMES: Displays Frame Number in Upper-Left Corner ***„		LOCATE 1, 1: PRINT Frame%;„	  „		FramePos& = LOC(FileNum%)        '<-- Needed? --„		GET #FileNum%, , FrameChunk„„		IF FrameChunk.ID = &HF1FA THEN„		  „			FOR Chunk% = 1 TO FrameChunk.Chunks„				„				DataPos& = LOC(FileNum%)        '<-- Needed? -- << v1.1 >>„				GET #FileNum%, , DataChunk„„				SELECT CASE DataChunk.ID„				 CASE 4, 11        '--*-- COLOR256/COLOR64: Change Palette --*--„				  „					Index% = 0„					GET #FileNum%, , PacketNum%„					FOR A% = 1 TO PacketNum%„						GET #FileNum%, , Byte: SkipByte% = ASC(Byte)„						GET #FileNum%, , Byte: ChangeByte% = ASC(Byte)„						Index% = Index% + SkipByte%„						IF ChangeByte% = 0 THEN ChangeByte% = 256„						FOR B% = 1 TO ChangeByte%„							GET #FileNum%, , Byte: RedByte% = ASC(Byte)„							GET #FileNum%, , Byte: GreenByte% = ASC(Byte)„							GET #FileNum%, , Byte: BlueByte% = ASC(Byte)„							IF DataChunk.ID = 4 THEN„								'-- Change Palette (0-255) --„								OUT &H3C8, Index%„								OUT &H3C9, RedByte% \ 4„								OUT &H3C9, GreenByte% \ 4„								OUT &H3C9, BlueByte% \ 4„							ELSE„								'-- Change Palette (0-63) --„								OUT &H3C8, Index%„								OUT &H3C9, RedByte%„								OUT &H3C9, GreenByte%„								OUT &H3C9, BlueByte%„							END IF„							Index% = Index% + 1„						NEXT B%„					NEXT A%„				„				 CASE 12           '--*-- LC: Byte Aligned Delta Compression --*--„„					GET #FileNum%, , StartLine%„					GET #FileNum%, , Byte: NumLines% = ASC(Byte)„					LinePos& = StartLine% * 320&„					GET #FileNum%, , Byte: StartByte% = ASC(Byte)„					FOR Y% = 1 TO NumLines%„						GET #FileNum%, , Byte: PacketByte% = ASC(Byte)„						X% = StartByte%„						FOR A% = 1 TO PacketByte%„							GET #FileNum%, , Byte: SkipByte% = ASC(Byte)„							GET #FileNum%, , Byte: SizeByte% = ASC(Byte)„							X% = X% + SkipByte%„							IF SizeByte% > 127 THEN„								SizeByte% = -(SizeByte% OR &HFF00)„								GET #FileNum%, , Byte: PixelByte% = ASC(Byte)„								FOR B% = 1 TO SizeByte%„									'DEF SEG = &HA000„									POKE LinePos& + X%, PixelByte%„									'DEF SEG„									X% = X% + 1„								NEXT B%„							ELSE„								FOR B% = 1 TO SizeByte%„									GET #FileNum%, , Byte: PixelByte% = ASC(Byte)„									POKE LinePos& + X%, PixelByte%„									X% = X% + 1„								NEXT B%„							END IF„						NEXT A%„						LinePos& = LinePos& + 320„					NEXT Y%„					GET #FileNum%, , Byte      '<-- Needed? --„				„				 CASE 7  '--*-- SS2: Word Aligned Delta Compression (FLC Only)--*--„„					LinePos& = 0„					GET #FileNum%, , NumLines%„					FOR Y% = 1 TO NumLines%„						''LastPixel% = -1    '<-- For ODD Width Flics (not used)„						DO„							GET #FileNum%, , Word%„							WordType% = (Word% AND &HC000)„							SELECT CASE WordType%„								CASE 0: PacketCount% = Word%„								CASE &H8000: LastPixel% = (Word% AND &HFF)„								CASE &HC000: LinePos& = LinePos& + (Word% * -320&)„							END SELECT„						LOOP UNTIL WordType% = 0„						X% = 0„						FOR A% = 1 TO PacketCount%„							GET #FileNum%, , Byte: SkipByte% = ASC(Byte)„							GET #FileNum%, , Byte: SizeByte% = ASC(Byte)„							X% = X% + SkipByte%„							IF SizeByte% > 127 THEN„								SizeByte% = -(SizeByte% OR &HFF00)„								'GET #FileNum%, , PixelWord%„								'PixelByte1% = PixelWord% AND &HFF„								'PixelByte2% = PixelWord% \ 255  'Don't Work for Neg #„								GET #FileNum%, , Byte: PixelByte1% = ASC(Byte)„								GET #FileNum%, , Byte: PixelByte2% = ASC(Byte)„								FOR B% = 1 TO SizeByte%„									POKE LinePos& + X%, PixelByte1%„									POKE LinePos& + X% + 1, PixelByte2%„									X% = X% + 2„								NEXT B%„							ELSE„								FOR B% = 1 TO SizeByte%„									'GET #FileNum%, , PixelWord%„									GET #FileNum%, , Byte: PixelByte1% = ASC(Byte)„									GET #FileNum%, , Byte: PixelByte2% = ASC(Byte)„									'POKE LinePos& + X%, (PixelWord% AND &HFF)„									'POKE LinePos& + X% + 1, (PixelWord% \ 255)„									POKE LinePos& + X%, PixelByte1%„									POKE LinePos& + X% + 1, PixelByte2%„									X% = X% + 2„								NEXT B%„							END IF„						NEXT A%„						''-- Following is for ODD Width Flics (not used) --„						''IF LastPixel% > -1 THEN„						''   POKE LinePos& + Header.Xres - 1, LastPixel%„						''END IF„						LinePos& = LinePos& + 320„					NEXT Y%„				„				 CASE 13           '--*-- BLACK: Black-Out Screen --*--„					CLS„				„				 CASE 15           '--*-- BRUN: Byte Run Length Compression --*--„				  „					LinePos& = 0„					FOR Y% = 1 TO 200„						GET #FileNum%, , Byte„						X% = 0„						DO„							GET #FileNum%, , Byte: SizeByte% = ASC(Byte)„							IF SizeByte% > 127 THEN„								SizeByte% = -(SizeByte% OR &HFF00)„								FOR B% = 1 TO SizeByte%„									GET #FileNum%, , Byte: PixelByte% = ASC(Byte)„									POKE LinePos& + X%, PixelByte%„									X% = X% + 1„								NEXT B%„							'ELSEIF SizeByte% = 0 THEN       '*** Test ***„							ELSE„								GET #FileNum%, , Byte: PixelByte% = ASC(Byte)„								FOR B% = 1 TO SizeByte%„									POKE LinePos& + X%, PixelByte%„									X% = X% + 1„								NEXT B%„							END IF„						LOOP UNTIL X% >= 320„						LinePos& = LinePos& + 320„					NEXT Y%„					GET #FileNum%, , Byte         '<-- Needed? --„„				 CASE 16           '--*-- COPY: Bitmap of Entire Image --*--„„					FOR P& = 0 TO 64000„						GET #FileNum%, , Byte: PixelByte% = ASC(Byte)„						POKE P&, PixelByte%„					NEXT P&„				„				 CASE ELSE         '--*-- Unknown Data Chunk, so Skip Over --*--„„					'*** Test ***„					'LOCATE 24, 1: PRINT "Chunk:"; Chunk%; "  Unknown Data:"; DataChunk.ID;„					'I$ = INPUT$(1)„					'LOCATE 24, 1: PRINT "                                 ";„„					'SEEK FileNum%, LOC(FileNum%) - LEN(DataChunk) + DataChunk.Size„					SEEK FileNum%, DataPos& + DataChunk.Size + 1    '<< v1.1 >>„„				END SELECT„		  „			NEXT Chunk%„„		ELSE  '--- Unknown Frame Chunk, so Skip Over ---„„			'*** Test ***„			'LOCATE 1, 5: PRINT "Unknown Frame:"; FrameChunk.ID;„			'I$ = INPUT$(1)„			'LOCATE 1, 5: PRINT "                      ";„„			'SEEK FileNum%, LOC(FileNum%) - LEN(FrameChunk) + FrameChunk.Size„„		END IF„	  „		SEEK FileNum%, FramePos& + FrameChunk.Size + 1     '<-- Needed? --„	  „		'*** PAUSE: Uncomment Following Lines for a Pause Between Frames! ***„		'LOCATE 1, 35: PRINT "Pause";„		'I$ = INPUT$(1)„		'LOCATE 1, 35: PRINT "     ";„„		''NOTE: The REAL Pause should be Header.Speed * 1/70 of a second,„		''      but because the frame updates are so slow, I didn't include„		''      the pause here. (FLI files ONLY!)„„	NEXT Frame%„	DEF SEG„„CLOSE FileNum%„„LOCATE 1, 35: PRINT " Done";     '*** Test ***„„END SUB„„Jon Kreuzer                    3D WIREFRAME MODELS            FidoNet QUIK_BAS Echo          02-06-96 (00:00)       QB, QBasic, PDS        129  8494     3DMODELS.BASDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"3DDS.ZIP",4^6:Z&=6102:?STRING$(50,177);„U"%up()%9%%%#-%%JmkEx4)e,)8%%%U\%%%-%%%%Xi%ixSgRfx.*8<x\_-+ws:Exp„U"\f))aXn([EEeI/]dP9E141/hJhX?,4.D+i%5Th]d2Rseq^pf\zFDH/k+k>y6Mqb„U"06bc7\nVR-*xRvipXgF/3%F0iqzYZV>XE-/3'9w;K->fGuLIco3.fDBDFaIZF<V„U"lcvJy=[4?w.1Y?q7ogZ0QV0KXSDNw15J1&he+E[j_+Z.UnZMEY/uh_#W15SUmVh„U"IlJk0sVj+]C'.0byiv3bbQM\[264:$5Iu[w(1,#$]22(h.[sRh:dBYq9&8a7&7?„U"*COr23qlcVHa2Y+_zH?G];<>M'ZSpf)v09f/ggwF2$24I%8,WUF%bys+iNya#?;„U"wW,sIN-e7DF9idKl7U5bt5;G[9'#3q(aeQyy4QxA#y/BA$m)gx)nbiFHrk;sWQd„U"1>zEm9vos6pECWF'xMC[];v-nw8I=Lq9S;%-n1=X3H)[.r)W9J]2%oBYNqvPu:?„U"1gZPAq/J;]Dd=9yX'.FYLu*RxRE(hfU/Pq6]dHI(51)/C5n]2lAr#S1Pcip$=ag„U"aXln2Yhc4B_(G[2u=TSMMP?L[&)VhF$;;sz3(Z%d>.W=/LMUJnOdRBbmb0;RWhX„U"A#TRxCkM40gA_cKJ;WxRdUJr,[enBhGv%F3P8'm32aRxl1HvhY^w)UAd*27;:u$„U".mgf_8+UUS$RA?k&X.9vwxahwiCGw7QbSh&O/09<ohNMu$0.GLun'_MX:0Amr9V„U"[Gm+n[2$PiZRSXB;IZqMU^90pIGR8u1gVo>0qvHGsKeXRyg.UU2n'=jkIz<n4B'„U"cb?T=NoZ\=7/c8+7G/M*^IG.T$XOSpLF=#MNB+&:banJWS<VPk,I6GhujWJwCmU„U"s^6$r=':Z[q5YM&Z5x4W\:m'pkqN3Sx%5(5,-_F8j'N[<_\e>K7g2GVvFk[f0l/„U"EYb6B3%[C?l/B7>BIj9sQ1:G;8gXjE>ln-id'60]dpQjXWp$I);9-P3NV[Su8\0„U"js_47UJ\3B0#a5TrqrfBhd-Y+tP8j[5$U.-T=GDrqU?,5X>\Gcg]P4TFGt#ThX\„U"/.R/57mf?6vVln+=Bb(XwJL?$g&5BSW(k9.Xd<*Ju=Z(<'*IxaV$2Yan=I.gmXo„U"29;=jk39dIckPv7L(,<a:A-yyLpupvCHg?-7an.1e3g+L'ClvC[r7gODbz(5Y<C„U"H'CN-9,vNeBTeilE/snn=oq($3(X^*$-Uf3R:d:Q;tVauZqU-\+cV^]AkS8IwB(„U"FFXnl&q&?whU.I0TvpI8Hn)zzGjXcNO5.D'ci(<ws:TSQb%#y8C)ckDVG[2yHY3„U"snPZkbHZ0Nm<OM'1X#<EZO.CLGgD\doQ.U;xYCXyz:-XAa2Y^,Rl(qiZwM[2a<k„U"%Ev:URS%vO&-*,uqO4g/^kL-<duw<li4?LKx^Q_9i'63uL42Utoi&1ff;KAK:$V„U"V?fGCI\FvKPG5j\OhIV:=aC%64M^*V$D,s7gs0SWIg+a1^$[M,p\a\*UZIJCkhl„U"GZQV[m2K*KTmt#jELu3M;>Fsah7U'T$iR3v_Kk-Z7hyO5.sNgX+z06fVOa(nEY/„U"C5k*L%RH'$9\>sp\Hbq=%]zn8KI:iU'pxH*_EC/$7Fm=q9YV0'\FkdN_zX>)&^w„U"y)_OJ2s[$Mp&q5GiBsI)EMVEF?PG[='4&Q-]R\&iW7LtvwXRLYlK\.CT?X6S:Z[„U"wXAM_9Df\1+#7c0KQXj&KDnQb>Juih[T]b[BQ=9EEJF2<MF.zk>N?#CDB>lL,)4„U"*KMl'<sd#kXDX4jTRQYwXDKKGp<PDI=&uGKbC)p[n82ngTBEz=vL-$wc-o5'I2G„U"=Kv.tk<.BtSxd&STOs'BZXIbocyE33)mc/'Q^Y0xxEG/.DFXX=n4?P4F8drWNbY„U"*X3SkivI5Irq[9lDlgM/AW8nzP\EYkS*?694U1,>kqQ=]_3Qck;noSX')Wny,qx„U"yPFuxzg-98#Hol.mVO)]ck8[eW#)=7:n(Vm?+']A*P*AGo$Zg^On7;M]W(t4YL;„U"V+??mbTovBI,ZLJBtjRY^,[66m^9-?_XapFDs\fFUqinc6dvxu/pj3X48n=Q(i2„U"GH/ohur#Vsb#^yO;_Hn,auxZJFms3m(hVL*DSVX(NMru'(Rl-NQdHU[::-Zml2L„U"$+a,a'T+r<94\WRRqI)GDhj)/-Si+YGGf4CP_a1\rQ0,tjXJAvpN]oFw.4nBb1a„U"t\sYNu:d;0,*mrP%<IEXo7gtLAlIb_&*ANZ=L(I-G,;8I>1KC8XN>13urea-BEA„U"m?e'XDma&8e4KbBGVTi<i]J*Zk2;S=q]Vv+ZPg>rxdf;9?X#<fM1<mX#GL<\0m#„U">A10,a>AJ:Wn/$,j/FZVFtATIUA(3IhWX_1-s^zg'FFqb+SQ&n1H(%?QL3zGLf>„U"9-8V3clXo[WL+R>6u(weg_WJ6?-VVB4tUvdwB>-SIf<cW6AK8;2s_b;QLMO\KO4„U"f6a7JN'/Cf932$P6[e77m^-n,i(K_tB^AF:o=F'Jj/u==md<K/\)*pZ79;h%qs1„U"<+Z79:2'%4Kquocm(1n-<cH89PXC[Qb)x0x;;W$uF8\P6/sJW-NdQl\J5JHNq02„U"=vLm*6O6)B9yAeeQnJqj0.egPWjMG)hTo-A]km^krqs#^l;m)yjp4_<Nu[g2,$n„U"<>vU.OH&O,,)I7_x>US[fk4weoFKYp>%R-QL7;16lvUusU2?^o+F5?b3GHgl]5G„U"ef[Aq4,5FhPoU=i=;_XYB/4+7FO.h2]gYEF%ArtxA^QOYQLuow40C[UvbPT\A=$„U"TVJQAp]^#WwtDK$qFQR,rZj$V?(oHxO3F1-D]ZI.8lQ?GgKit[JgBCtHFCkJ-eY„U")O*l5CcU&v:5<0A*DKT]ETdj8^]^gg_DY3K8H:BJh>^,LD)#kN=WQa=X)Hi6,C9„U"5fd)AK'(>+S8[YF)tL*y;RANVDsKf+7+#PD1mcNAopW>egZjR*<)\0s$bg,]:0l„U"F7s/V:XgCJ0j?v,mZss19naf7GUt:TDLUH>%GAYuSV27c3bhNESVsz50&[QN2':„U"c-Fwo$Adrj:10^[C]5&D5%,dd.;ZBg;$,y.fW+k.'Kjl.22Dhc:Uk&a?lAYG%X&„U"N?ZLB2c5$\s?4.76uY]$Gnlr>qDY7Qt+uRiJ?2W+NmU8Y:m3(V=Hb8G<fDpU_W?„U"'9J?0]R5,Lc2AVPJS^rztj8nx0*lJ1MdB>ba/A]2L,n49ivQ_Q6>-^kC\bOXRh#„U"Ml8mhD+<3Rh\>fIo$gllIWK3J7t#2)4*IXPuvFuWa,8dmA\AOWys.uJ)eFQ#w:S„U"$QA0irlaQ92p'^DWnIa='vjy-=p7hY*LLoBA90gW.A5pN(&fJ4z*&,2nkPDJ5cT„U"x?\UVPg7\hGC(T]jFjCqzf[_TaqSBj^PE(I[KRQey&.f]aaCQ:.7+9)T\Y*sGpE„U"d-4O?cn7MeuZGf]<W#_dt+(J7])=[]N?5N^UrqYp,U?&'YAQIZAfB$-fl-MZUbt„U"eU[]qlQhNdtQ\eS0N3vGFoHdk<cBI'Fx^[37NBOzs$23r*oL):^_Bd^anGO_/DV„U"(P\nx>dXu>..f&0,$^E9(I-Oi/N*Rgh[7d<PhQAr+5ZlQ+8hRuk,3akQTI2G-0S„U"=BU$rH%?(=2Qx<i\4+2scC+U[j.Qj>\of5lGe*_'>^u;OiTryYWK0XK9WH2ctS%„U"5k)?%./.22*uESq&Oy/.pbA+g^tU=QdSsSpT59L:Y^4Xw44*8nsBx:_R.:_8<eK„U"ha51x%*2>naZRuqV]q_w+[rQuG8DT%B3.guhm<G'FhJ.c;&zq0;p1)#eI7N,)37„U"CmH^nrPxNrVzRDx_NBnu>^k6;uvcX,1UT'bNj,]llmpBUBItdH6&l4,)l]3h5pQ„U"r(hYw4O_]9U1&DOaxCf:&6),ivi>)j-aM4.^H33#iiLYHX,]by/QZC*lL2cnx[s„U"tRgY2H,'WrkHUYf]=3l8ILxsQ;t8)Fd+j6\q(,UYF76d,XCN3,AEmscK34/g9wv„U"1Hg&t?h1P;CZN3+-E,De%PH;F4myB?GZ1o?#*FbH?3OEUN&C#c4dk(o-pihf)]Z„U"\L;0J6kL)a>2(5j3qyg#NEZ7V[lAT<cY0;,++DlTMuM>H/GK]6Meai_$n$4<jN(„U"W8.k9(I4Mxq<RBx?jo.#I]V].9YY/'t#Ho?&m#_C/;G<hZ8<0',7]b$J>7(CgbI„U"ZC>q$j#S3w#&78%Dnk[^'X-WU)ks.pZ\XD1]B%SfCjVc$PVnjJ#$]4$_&&IZ[%W„U"mpbjN'2Bju,0L2:d^RasX?(*E+#1LE0#1P2lH,ks_lJ,&ZVtreuLnbGEV5/Opbb„U"13-E\2s'#Jp1&M&4eYtn8ObcL';2<LZe3fJ.Ux2N1pZLtMWtw?9Q=cr1VmyPyQ*„U"KW%[OAuxU8vwshgxIe7qoXBqel$E$CTH?iplH2Y?54bjk>DpC4JJ4moIP[8<n7Q„U"k>trh00\zNptAmw=1ao=m'/H%c44XqZO8*m0E,wYNnC-ptSLYtp-^7W^5fQh[,t„U"nA<b3ct9rprq6rFhmb.6x\.L^0o4,:l)g>Sgn_oR%h%:-,PU:5xNiU-\sq5)7f\„U",/y*hq;M'2UC^AfKZAa:ISDcs=S'>E34XT_HK\f>]81C=1t'Uppv'44^V[BoiS(„U"R*%;<O'48Ixay_Z2?-M(.B6QzC.Zm8>(6g;3KU0vCVFV#>ndqR5n,Wx&]6)[g%0„U"J*#$^-[8jSp&l<rgIT^:R4AdiACbo7+v3SHGlg;_)Q6^Jf4X8[ri_^V[DN#(J<k„U"e6ktr3[RP&u?=><=RrEkt>hCU(L-M1p2hG$rT27#pOZL[5%vgsZohar'fzNWf7=„U"KvuS42U_zBt<A82J,Wr;HLs\FjgW:.e/up+nfB:c4=kK+rlIlUjIo<,idhO=4GM„U"on6n,w;z27+hgHmfH4hPi;Bha=:bAE>+)C,P=S9+OD_gPH/Yf)+bByTmtJPPsPU„U"+:8l,H)Sz4)oYo\FFna2=eA8yMkRXPI*cy:uoSgbuY8Tk'aA]qIAs,zu4T83HCQ„U",c-+A\hRNCt)Ck0J<chSkI$tUNW,b<7F^9tv$R/qS/L6d)jCRI9vRcnw9D)/^P;„U":^9fYR4]GXaJE2HF8>>7ZW-D_)S-+S/:>XK%.E.'3X>(>;1[&KooE#%N2,m]XkL„U"ld;F7>i1#Cqz'j?xpSK0q3EHhmx1,<oD?Q>VDYx[KeYm;oNQoD*+mq&Q>hz&=^e„U"oOn#JAsVk:h1&.k7BvL8BWXQW?0m-1H$)jI>/q8uFvmw,Kn:#dyTd=Ms.)+GI'1„U"u<p[.A;p0Mq>X6ubJ)bNIq5sDO5'vYTFahI4iu?/x\68sb,$i9?L8ISe:,DXd,e„U"g&>M-w,TCS84.N:QIY7pJcWYz]7q.IeM'k+WYQ)[=6f8oFV.JK7:>amfrCgaKeJ„U"_A'eJO-6,SZ#qEu?m%fEVe0runwI4#Ly6/^FJ-/rQXS9gfKOKek%Z10]W1vWf$M„U"n:2BrKe^'Zkw.K)-?hPkvL3N'6#UVCmoSDslF4<o)1T2Gh^*%#^A9S+?/6]f>Za„U"WS[?37/p*>&58NmT4a_eMZISJUj0Nt#ld7W;8'U#z#F%1(y&_jB8vLEBJ_HW&Fn„U"Il<';(I\9=J$6pnTod2VRh->7>ioIfY$6FnWqJfa6YFBWNsxox6M?GBGspp0>'6„U"1R]rL]ZBkU8bA4HZe8+.0[iH;11Ha1V3T\';Di1iAUl_i&kA%RLgKLQIV^ZmQAg„U"E(G*nKnm*]o:Tov.Wa=^]ZVfZ_$z:st&1H$C(L_YB,^XC*Y[aM=kC$KK5>yJUso„U"gfV#FDX94.e$h>>aw81%0]mpn2B#VNB6DCv=\(7spPBwH<dm))<H6eb>x*miTy,„U"UnRLT%L1:qYsBfu1\wr5d5$_RXhHR)#gR8QS*RE_;\XHO*-k+g%&B3>o^_3A)s[„U"oE^5(;_R:2/T92'=D<P#+-NR'\<19)*D=?J;s0UYCoC;1:k4TBq<o+?bqVBX^$U„U"F]pP,GLV2BN8B:]ktSu$7<2<hAg$bktS$u7<2hGAg$kotS$7Z<2hAfg$ktsS$7<„U"tHT^5_lBsr8k;t128CeOom<e_JOTzx7bzD0GSLbH8Sv1dDTFg7Y9+5_KCml=7lV„U"cnD8x#Iei[gvhPmt\:K'$>;l^[TsB;-gA+W;#ba6q?98aLx&dj&l4toP*XDmjL9„U"jUIu5fx\/lVbz=Ks&]**sNup%()9%%%%-%)'iYE/xGO<%s%%%&n%%%%/%%%%xvz„U"f%wjSxmmu,Y]^WYK0J*1hCH-S,IY[cX3;Qyf+MOjw*&Zu384'*38_UKVc_^WO=V„U"Z^WoJV]^#W*65IE.B_2Sx]>LTfT](NWU&1ngRI)O=(%%up()%9%%%#-%QWm[E<m„U"8EI/%%%%H&%%%.%%%%xm%nuXS%xmuXsYY^K=ZM,U%XUX[,#NZU-KJZY'MX[Y=[,„U"M&Xo:Rw\9eWA)K3R-6va)1JC1C[.fO[q6mE\25\EC1=2mEq$E\e?qjO=F9nqFqh„U"[\DEKnQ[[#r2RO9[enEN^55USuE^u)5u;;a5^ENL;eeUseN_?#k;+5F5NE*Feg(„U"y+UMV'aOLV_9^WO&/ArC1,H2qF/S6WU.+6/.(X-SX1BB-S8B5Pmi#QfDOg#af0D„U"7s3%%up(%)9%%[%-%/\rWE9J'5W$%%%%G%&%%.%%%%x%mnuW%SxmumXY\^u+IJ.„U"]IVY[H^Kj5%f=-?CIXus10&t0.x+5==?ba?F>b=P>3JQu%K/0IW(Z%'7<n.SIg^„U"g8n3%]c\O=_?<5+?_4K5+KU_U5+8uE;1CI03aaUN&tBB9ig8OIEfR7;5+/e_UE.„U"81C1,Pc22qDog.C)aeBGOc2\/D1P_(1P+'\\UYL%V)?,%%up(%)9%%%%-%U\vWE„U"MGd1:.[%%%3%%%%-%%%%x%mnuS[xmu,-]^WYHKJ*1.HH-SA,Y[cGX;'zUf%%ZDs„U")<paAEYII&goW7>5d%]rk_?<5+?_4K5+KU_U5+\u_et0FeS^8WUN&>y,IV.*6/.„U"2B_S*(TfJm]*6mE#)i=R%-%up%()9%%%%-%(bE]E>Z];T&e%%%&%&%%%.%%%%xm„U"nu%YSxmgu,]:%6iF-shhEI#._++nd'/wSi;i.foD/;#0o%u^[4oLp3wrsE/pqX<„U"Ws6vjPoIribIUT0BnUYlhgM_t[nNF.[A^*)cd.w<Sij>LYz^42?ugSrqbHKdB_C„U"fJ8L>8P+BQS)p1qK^XrHROL;t0Y&NW12)fdOVEgG4)j8LX/XQm1eQ6LM=KcX_4;„U"Vy,,6s&u%p&'9%%9%%%%-%%\JkEx34e,)%8%%U%\%%-%%%%%%%%%&%%E%%%%%%%„U"%%Xii%xSgf%xup&%'9%9%%%%-1%'iYCExGO%<s%%(%n%%%%/%%%%%%%%%&%E%%%„U"%O%8%%x%vzfw%jSxm%uup&%'9%9%%%%-.%QW[XE<mE+I/%%%%H&%%%.%%%%%%%%„U"%&%E#%%%o%8%%x%mnuX%Sxmu%up&'%9%9%%%%-%*/rWEE9'5W&$%%%%G&%%%.%%„U"%%%%%%%&%E%.%%L9%%%xm%nuWS%xmuu%p&'9%%9%%%%-%U\vWEMGd1:.[%%%3%%„U"%%-%%%%%%%%%&%%E%%%%Z:%%%xmn%uSxm%uup&%'9%9%%%%-.%bE]pEZ];(Te%%„U"(%%&%%%.%%%%%%%%%&%E[%%%3%:%%x%mnuY%Sxmu%up*+%%%%%%+%+%%n&%%&F;„U"%%%%%„END SUB„CLOSE:IF S=108AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Andrew Jones                   VARIOUS STAR-LIKE EFFECTS      FidoNet QUIK_BAS Echo          02-05-96 (22:04)       QB, QBasic, PDS        76   4997     STARS.BAS   DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"STARS.ZIP",4^6:Z&=3473:?STRING$(50,177);„U"%up()%9%%%%-%1UIdEz55$k>(%%%a.%%%1%%%%xy%fwkn%jqSg.fxdz;:>T[j9v„U"=9?xZ-M2oGEwUN8+4fa+3/E57p39<w*SNX3Zy62C3LrJ#mhAFnoM6=o[?I+I,m>„U"Jg24>aGN%J$oY[f,a<0bkXOU5X-/P'uF*Ph$#$]J/N&_s'WtD?dp0\&S0WyMAXk„U"N&4N;:kqq=k-ML[LWH$D6m+Z$^I*fVi4G(Im%U1KvG[*dX7kFCKTe#YbNA3pe%G„U"vqH9.PaT(j-F6Xi;lK2(AaEgX_3f_*9A,*(gL9Rvm5L2IZc<_;u-U3<Cx?%rxkY„U")hc^.2u/sKGf[0gG_DTBOM7/)Y;=>[#FeOTerqIq;6(K#^pm^:;&+Fnj6u?)^BM„U"jsMo%+KoF>r'*-3J2J/Odas0&T9J6*2QE=_)U2Nf+N(r:*.=s*8m&hsP+Me4cTB„U"OYS'k(;^s7Eofg6?B,]%=b+tsc[YJ5n-*(/N=SVlgGnS$&wdj9v5WzH4NDTjyj?„U"2VW[G.-Y2S%0$vuaMz;pXDd9yojdwSk:#23F6W.z#muUc7&ejF,o:H+RY(<NPKv„U"^#looq_+Z))k4^(zRNMm4ZyW/st=Wb]X?1YPqIP+=rDFwf;x%wBWxa&GKZd%d_u„U"s33iSIRw1e'54S>C[O4=^(wQYqv2dxr<l7eH&2B<T(3SR+FOSS2wP'HgNpJc?Qs„U"TXAd2)5snBEY+Q]XP*ik9aPh_[aW?Fwk8sU<]7LO6^eWi>H-IxAx]&l#;dHjMF:„U"\]u=;6u7bngOKL(bwpL<7jps3SvB^6R>b)jL3KKHxq9k&CbWJ,vv3toJN8hYh+L„U";acr,<kEDX$7qt[oXG$s1b'QH7[c%Te;Cj)D5Xqu.mz0*Hflkhxs5r(O63niJ\y„U"?G0^FyJTN$HbRjJS(drO:fOT:..lksG,<6r6/:NCHaiSrdA_Vg;E0.tNAz/1OfG„U"mr/GCCCL$tT2MmXA(Wo,6K4/PrazkFe%.M>VdF4*s&p$F*M><0T(O.^JzQrF5J4„U"*/;\KRl\==4[EeMLCs5wbxiv][vutB4,]DD$OcDxA=uI#:<87Y/,r<OK,KGl]U/„U"2lP>u>\,0XJrk?Gn4$LN'DgV$RI,\:w24U.\gBXM,;=WZ%b7X<W'6#X#5r-8fnP„U"%,NV,4PDi^*jn0*x%&up(%)9%%[%-%l#hkElAhqq9%)%%L%5%%.%%%%x#yfw)%S„U"gfxNf&,>BT[9LU<ox?m<9,6NAPlo.hwsCrU''.3Ra0$Wf%eTM$7*ZCIIIdu=vn4„U"7IJrHk#O<R*<U?-UI$$m>Jg2IF:Na'*=F9gLsr'Q/3Ef9E[W7/5B5^*K%]*?2ae„U"BInfp?NWeCOlfmbFQ2B;z[;dC.Ip>K981Fr(iB2m=bRL%,<d;[n\C1sI*+hC]*[„U"F.,*#I6:Y2V3$oB,+6A\eIeh275OAhv'i%\0rJ%A(3Fu17c9zX6Z0c7$UH^(cAI„U"w95gNj;&#/%Pa);#GQ\DfUmw;&&k/&)t=bSJ7AK[cZ?%c%o;2D,.u*r-H77l-,Y„U"^M'Q]RrOugt'$m$k4_D'oq$,V090k1qOZDoy8Ha9J1dJo4zS%jyzRAdMs4uG,;$„U";g&bV)6FSVJ)SXClo.j=>YRi9QR>Y13[KtxA1mrH/hNeI/-Q4V)^\9Q^j<_F.:[„U"?fH:8Cx'Os:Dsh2*/njhAK(z]1ZD0qvf4\PAWhyZSXX6d9>i2_T;AM#n5ra<RwA„U"+u&&r:7MnYJ(YUAU)ly8=ODy.LwU1LQf9dMx%KU_'(cHPz;_19e2VCSim<+2ajS„U"/re=Y<atgTn8E(W,QLdF))_<:hhP>*\tX$HY)7ymBo1fp+kWLJq)$4yA+&M+Y1n„U"'T#d<zc>nlAROYCa32X].&^%(y%h6P(JcVuGNO<V.fOSp)TgJzJ^?ZPhR%cHfP_„U"P=lb<OrIS/N]LA0<_\U.Cw.r+WPVohM<4H9QO\*7r0)/^HnZhFS'T&:E94,)#U#„U"EK+030VLG'iy:Z_=>Tv&lJRH5[pS-+fZscmLtF.g-^,\PLJ6Ns>u\x;_i?Y9S&O„U"O<Q9[pyV+N>,uJ%Y7c?c2RCbd,8_a(1I:y(s8$LAM4_?QkSgw(a$2)V1Fc9Bc$]„U"<+Z9BsZVFU(ft'i4+-Tw;]ejG's&#I/XRXvH&Eu)O9V4U.j0'6iufYeccU:q&d2„U"r*JGk/[O70,#Vp?RHwuSals:C(+Nre#JfDZ9SK'CoXJiEcPu=/$46i_I;CjZSI:„U"JPzs.%PGJnI'I4HJutZ_%j9Gk&Tcl]b,].Z%,/yIOP;$Osa=R[a#6OC;i*IjN^4„U"d5Svb^Wbxeqb_L=B5A_JSU;ILT?atV>MT.?#WN=::rNH+jo9249ZWj%FfE^Hw(E„U"i5xN3R\05G[:AKu_I<BSrHNtu$/SxHKMwhf2CRWrFNg.UkFM=+NUS3DP56.80SN„U"cfXkCXsrdsw6>3u_uo2eQoG6,PT<hO;iB7N8OL=+^Fp4O7o$5-2#2RR7bdIb0Hp„U"FM<nL?XU9:dPGY2Q_'l%eHvG^UN-gF.7I,0mxC.:ToL5<S.yql6IFpT(;TrwKVm„U"cx>rx<nTs'*DoqFU1&TcDyn_>Y$3uvcK9s*RdhHFDp]*ccuF(dQ^XN(/zTh\cNP„U"+;pdI6Rj%G*N5FH_mZCN#]rw5*&%d%up%()9%%%%-%'JhkE&6Iq&&m&%%%Q)%%%„U"/%%%%gtzs%hjSgRfxfb98s\e45?6A)QQ'<CM_58A%'vu65[yh1L,PM&OG2't1[>„U"jLN:*-&B<HF%JYY97EFja:ys[*2wwG.Ms4El^d:9js)0KGZGw?.nE[wu.3-ZU09„U"Pk,eCoB^?Ck7w;joMb.'Yp]J=eO>0+c3EOlmi5_:cD;,&\33<mQ'3[<9oZW2o>$„U"%b8X8cT3E6P-77U\x3&uCDNAOa,qsR/E=tBbm)M].Q_2G/2WD8cB[IkC8&me8E'„U"B_N'3NHea+<0ZTF-EkT-vJ,HQ3g(dfY?p8m*f9Ipqd'/hdPob*PB(.^oNok'7K%„U"87^S':#u#B)&AV$]m;^bfq(O8oorWENKhE%RG1^*/WYIf/mnAD>izA2cVi[rbC#„U"BKB\Ayjt5S\&lU$IO\&b&/Nv6d+V?RxN(hvBI_)jYa6&>cDd0w$Yu[&M?_3(bQ)„U"4gECUoC-N%ig3JsOk8>FV?HT1jHyWH*3AQZ]x]K\8k_0k>D[J*#1>tu3Q,67vGt„U"]0[\Yim.roO%a^<R&O-^&8Oz\<GBi(%up()%9%%%7-%NhdkEM96MrC&%%%)(%%%„U".%%%%xu.wf(S#gfxD#vvtRIU5M>QKx?>[(\11;/qJJN1dW#])UCErW?Y/8V:LW>„U"DxWPVtRFgscm74Z(pVLRB)5yN0tOYefuL9fw-.2'Qz,.Q+GTS.tv<iE7fHw]0$.„U">&pMN>$5&,7RSJeGV,PU%,q?;^mTs*AirucPMYISOU<quUO<M_c$E'=>R>)GYJa„U"YW60Ba)V*Aq^p(N(sxr?1i?JcqbG\h&de]Z6aX<>VJA3]^T>94*#cG'pf#T?PGW„U"(l0ug1ngsuDrQ0(Gq=MX^gtwT7r7$xRWRCmJ(qXxK[;%Y]nP=Xu1QGiQ3u\zKk(„U"tN4vj<=2QV>qrB&jX3?UUX7\JHj:H?N0;mFT7F>;Ms53*3>5'FsHT6%W=X\47Vn„U"oZ4R'nb)bfPdL-=ccrb]0KUo0g?V_ctg$h+Y,f8>+\GuQFw]tFh4lK.u+Q(ZfoF„U".p9<^m4>?h[P?-b<lPY8RonZW=feRr]#Zn;c,wl0u%p()9%%%%-%%\ikLE,Ve,2„U"1%%+%V%%%%+%%%%wjf%irj0'BmRs%zmQ'q1T-M;ATuY2Ta[ykT[a=LGTQqlumq=„U"*U1*tqT[=+gyTauHCM9T6kEa1^b-SP?5%uo.j*TUJFlTquM;KE,qM9B5T=kA5S/„U"soX*#5cLGox-irHx>DIIe<KG>XH3bx/$YallO6O]d9UP3_P(*/?ZDOkGWYrklA(„U"OP)u7S:[CUr-'aqKT[KfE7TCHuKGTg%6T[eQyo,F7lwOR/wLOO_laPkejAj&A&%„U"u%p&'9%%9%%%%-%1#UdEzV5$k>%(%%a%.%%1%%%%%%%%%&%%E%%%%%%%%%xyf%w„U"knj%qSgf%xup&%'9%9%%%%-+%lhk1Elhq(q9)%%%L5%%%.%%%%%%%%%&%E#%%%h„U"%(%%x#yfw)%Sgfx%up&'%9%9%%%%-%'JhkE&6Iq&&m&%%%Q)%%%/%%%%%%%%%%%„U"E%%%%O-%%%gt%zshj%Sgfx%up&'%9%9%%%%-%'NhkEtM9Mr&C&%%%)(%%%.%%%%„U"%%%%%&%E%7%%i.%%%xu.wf(S%gfxu%p&'9%%9%%%%-%\#ikE,hVe21[%%%V%%%%„U"+%%%%%%%%%&%%E%%(%Z0%%%wjf%irju%p*+%%%%%*%%*%9#&%%6%1%%%%%„END SUB„CLOSE:IF S=230AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Unknown Author(s)              3D SPACE SHUTTLE               comp.lang.basic.misc           Unknown Date           QB, QBasic, PDS        116  4382     SHUTTLE.BAS '> Years ago, there was a 3-d space-shuttle .BAS file on the local (dfw texas)„'> bbs's that would draw a wire-frame shuttle in whatever angles you typed in„'> at a  prompt. Anyone know where I could get it nowdays?„„10 KEY OFF„20 X=0:Y=0:Z=0:X3=0:Y3=0:Z3=0:AM=0:BM=0:CM=0:DM=0:EM=0:FM=0:GM=0:HM=0:IM=0:D=0:P=0:B=0:H=0:U=0:V=0:U1=0:V1=0„30 DIM V(300,3),E(300)„40 CLS„50 READ NV„60 FOR P=1 TO NV„70 READ V(P,1),V(P,2),V(P,3)„80 V(P,1) = .12 * V(P,1)„90 V(P,2) = .12 * V(P,2)„100 V(P,3) = .12 * V(P,3)„110 NEXT P„120 READ NE„130 FOR E=1 TO NE„140 READ E(E)„150 NEXT E„160 SCREEN 2„170 D=120„180 LOCATE 1,1„190 INPUT"INPUT  ANY 3 ANGLES (X,Y,Z)"; P0,P1,P2„210 CLS„220 P=6.28 * P0 / 255 - 3.1416„230 B=6.28 * P2 / 255„240 H=6.28 * P1 / 255„250 GOSUB 390„260 XV = -D * CP * SH: REM ---SEE SUB.---„270 YV = -D * CP * CH„280 ZV = -D * SP„290 REM ---PROJECT NE POINTS---„300 FOR E=1 TO NE„310 X = V( ABS ( E ( E ) ), 1 )„320 Y = V( ABS ( E ( E ) ), 2 )„330 Z = V( ABS ( E ( E ) ), 3 )„340 GOSUB 520„350 IF E(E)>0 THEN LINE (U1*2+75,V1+20)-(U*2+75,V+20)„360 U1 = U: V1 = V„370 NEXT E„380 GOTO 190„390 CH = COS (H): SH = SIN (H)„400 CP = COS (P): SP = SIN (P)„410 CB = COS (B): SB = SIN (B)„420 AM = CB * CH - SH * SP * SB„430 BM = -CB * SH - SP * CH * SB„440 CM = CP * SB„450 DM = SH * CP„460 EM = CP * CH„470 FM = SP„480 GM = -CH * SB - SH * SP * CB„490 HM = SH * SB - SP * CH * CB„500 IM = CP * CB„510 RETURN„520 X = X - XV„530 Y = Y - YV„540 Z = Z - ZV„550 X3 = AM * X + BM * Y + CM * Z„560 Y3 = DM * X + EM * Y + FM * Z„570 Z3 = GM * X + HM * Y + IM * Z„580 U = 135 + 13.5 * D * X3 / Y3„590 V = 80 - 11.5 * D * Z3 / Y3„600 RETURN„610 DATA 124„620 DATA 0,-2.2,46,1.5,-2.6,46,2.2,-4.6,46,1.7,-6.5,46,0,-6.7,46„630 DATA -1.7,-6.5,46,-2.2,-4.6,46,-1.5,-2.6,46„640 DATA 0,-.8,43,2.8,-1.5,43,4,-4.5,43,3,-7.2,43,0,-8,43,-3,-7.2,43„650 DATA -4,-4.5,43,-2.8,-1.5,43„660 DATA 0,1.7,38,4.6,0,38,5.8,-4.4,38,4,-8.2,38,0,-9,38,-4,-8.2,38„670 DATA -5.8,-4.4,38,-4.6,0,38„680 DATA 0,4,32.5,4.5,1,32.5,5.8,-4.6,32.5,4,-9,32.5,0,-9.5,32.5,-4,-9,32.5„690 DATA -5.8,-4.6,32.5,-4.5,1,32.5„700 DATA 0,8,26.3,3.5,7,26.3,7.8,2,26.3,8,-7,26.3,0,-9.8,26.3,-8,-7,26.3„710 DATA -7.8,2,26.3,-3.5,7,26.3„720 DATA 0,8,21.5,3.8,7.5,21.5,8,3,21.5,8,-8,21.5,0,-9.8,21.5,-8,-8,21.5„730 DATA -8,3,21.5,-3.8,7.5,21.5„740 DATA 0,8,14,4.7,7,14,8,4,14,8,-8.7,14,0,-10,14,-8,-8.7,14,-8,4,14„750 DATA -4.7,7,14„760 DATA 0,8,4,4.7,7,4,8,4,4,8,-8.7,4,0,-10,4,-8,-8.7,4,-8,4,4„770 DATA -4.7,7,4„780 DATA 0,8,-12,4.7,7,-12,8,4,-12,8,-8.7,-12,0,-10,-12,-8,-8.7,-12,-8,4,-12„790 DATA -4.7,7,-12„800 DATA 0,8,-27.3,4.7,7,-27.3,8,4,-27.3,8,-8.7,-27.3,0,-10,-27.3,-8,-8.7,-27.3„810 DATA -8,4,-27.3,-4.7,7,-27.3„820 DATA 0,8,-35.6,4.7,7,-35.6,8,4,-35.6,8,-8.7,-35.6,0,-10,-35.6,-8,-8.7,-35.6„830 DATA -8,4,-35.6,-4.7,7,-35.6„840 DATA 0,9,-43,2,8.5,-43,8.8,1.5,-43,9,-10,-43,0,-10.8,-43,-9,-10,-43„850 DATA -8.8,1.5,-43,-2,8.5,-43„860 DATA 0,9.5,-48,2,9.3,-48,9.2,1.5,-48,10,-10,-48,0,-10.2,-48,-10,-10,-48„870 DATA -9.2,1.5,-48,-2,9.3,-48„875 DATA 8.7,-8.7,21,15,-8.7,-16,35,-10,-36,35,-10,-40„876 DATA -8.7,-8.7,21,-15,-8.7,-16,-35,-10,-36,-35,-10,-40„877 DATA 0,13,-37,0,33,-60,0,33,-69,0,14,-60„878 DATA 6,11,-43,6,11,-48,11,5,-43,11,5,-48,-6,11,-43,-6,11,-48,-11,5,-43„879 DATA -11,5,-48„880 DATA 259„890 DATA -1,2,3,4,5,6,7,8,1,-9,10,11,12,13,14,15,16,9,-17,18,19,20,21,22,23,24,17„900 DATA -25,26,27,28,29,30,31,32,25,-33,34,35,36,37,38,39,40,33„910 DATA -41,42,43,44,45,46,47,48,41,-49,50,51,52,53,54,55,56,49„920 DATA -57,58,59,60,61,62,63,64,57,-65,66,67,68,69,70,71,72,65„930 DATA -73,74,75,76,77,78,79,80,73,-81,82,83,84,85,86,87,88,81„940 DATA -89,90,91,92,93,94,95,96,89,-97,98,99,100,101,102,103,104,97„950 DATA -1,9,17,25,33,41,49,57,65,73,81,89,97„960 DATA -2,10,18,26,34,42,50,58,66,74,82,90,98„970 DATA -3,11,19,27,35,43,51,59,67,75,83,91,99„980 DATA -4,12,20,28,36,44,52,60,68,76,84,92,100„990 DATA -5,13,21,29,37,45,53,61,69,77,85,93,101„1000 DATA -6,14,22,30,38,46,54,62,70,78,86,94,102„1010 DATA -7,15,23,31,39,47,55,63,71,79,87,95,103„1020 DATA -8,16,24,32,40,48,56,64,72,80,88,96,104„1030 DATA -44,105,106,107,108,92„1040 DATA -46,109,110,111,112,94„1050 DATA -81,113,114,115,116,89„1060 DATA -82,117,118,-83,119,120„1070 DATA -87,121,122,-88,123,124„1080 DATA -117,119,-121,123,-118,120,-122,124„Rich Geldreich                 GIF DECOMPRESSOR               QBTIPS_H.DOC                   09-13-92 (01:08)       QB, PDS                279  18404    DECGIF.BAS  DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"DECGIF.ZIP",4^6:Z&=13541:?STRING$(50,177);„U"%up()%9%%%#-%Ju#&>$.=V(-&7%%J'%%%/%%%%wj%firj.Sy'yDdar>BSe5U<he„U"uD_-#G;dZM.+Aa80S]3jn9u-Z3>U0-*Gblvm>Z8heaai6znb0^B8-lE$XV-:eT2„U"R:sjt6mWi^HK,WTOU7<Y44H?BKC$8Z%<JV&RD)]6k^Qv_'XMG#<JpbGGV>L^Ioe„U"wH=7jTgjXU8U.'XD(oY_tebYHI9_Qt%k4i%=iIqKuO3hsaog9jgEMXavl-q4qVY„U"f$AeB^'F5yBGVU#;'=Uljd1:Yw7c?6%_Q]DWkM]d#%vXJ4G>FSwHDKB[ck<Vrxa„U"f&SQNnDHSHW7xL7HpV4JF,w(JHxBviEP_ReJ;mdoo]f=rEXt.T=y]YlpZjGDqV_„U"-mhAJ/\2ykO?[.XWo*5XUS=P1R[3$TXs9jR:Yf/2>p$]%Nae,A8(Vy5l-Mi'67J„U"x[WI4d#z50=l[q4*bC[5pK&^cN=vP)m)2cFC.8FY'xvvX=jct5pvA,dJ]([URYJ„U"4A##I*,0&[^<s2^?Hfp2s(hiEc68.&Z&M.=s7Z2%aJEOIv2aAF/*Sl[i^PYFj&C„U"LmNJDp2^d$^270%IDdC<y[Q?WK]4%up()%9%%%#-%lwd&>[*,St^(.%%e,%%%0%„U"%%%zx%jiln%kSgfFx&y,,>[]9YL(=N1]R_-+HaKehgehg^OSe,aoL3I43e*%%4i„U"JVgok8rQpd^cg)udok0FVfYkd\bl\d*xruN/CFjvX59TU>cDpjIWB)K6\Cxe)[>„U"sQK<(UYQJh/*Q*X$[qYOktSsJ8m2s0RWp>102AN2x+UM.p>e)RGQU$:ZMK)+vi?„U"k2(SCt6Asb1%BAU.h&*[B)=l5VsW'(T:'a):=D)E[fbD+QeAlq-DXfI31)k<:We„U"Ev2K]NZKfMZCUF*BX0JgWt;W5rRY_s[I)ghE7;Tx#sdHWJJy?nmdkVz:o))&.qS„U"P1a[+eN+znat^gE5;Hi]&gc3UuhmmP$gd3&.v%rlrXm2p[ca?%STpSwcO=xM3=c„U"*]+$en8MBiSjgU=1j^[gtr2Z?3FrtUUBH6<i:Mj5rXG#W434TIIi9P)srtv&8/G„U"DwXJcq..Wa%\KPSE3->)I,*=gbcPGA$o%s4%3AjB#Q&+<UL^'I5d/9RtA#VHW#4„U"F=]4>:=DRWyAP4805-nJ;$'m,OuM.J6:Y4o1G^Rhbocnit$b?7L>V$s3Y+xZ$.T„U"=T$[7,6rs0N()S9OIyTZ+W;u[WN-YXc%)_rpe768=zzWE=2G3'fB_cwiiApBNx-„U"nNOG1XiRlvi*DY0p^-+wO\5BXTk.uUJF0MPX$$1x6O8ll)PzHv<&;G]X.oT?Jdg„U"ku_C7ud:<p[BB26teev292s$Wvvp(MU3VmrY>:U/rhFZr8uTA%bqES03hW.)D_7„U"<aA=9v>++KXntDY.Q&U/KL,^MMkBf+sQ;D]+R//o>>T[aH/^Md:81M<a;,HT5M:„U"HJ1$m23H/*xK^h0i_K39l'KZU_;60f4o;uxOM9PXQcD8YW+B)J.RfojLGOmJ31P„U"a1>$%mjVP4]dl77:&SQw],L$Ra=]#<n]<T565:L?fCZro%.GM3e3fq4eMDZ)g40„U"k.GqEqFr'Nax#D_?O_lIqpX&KIUTiiLz:y;5::7g'xtJXH8P*l$A[gA_J4O8^xA„U"n8Qs.'*CMDl9La?kVgw0$raxL17H(1Rd^0($=*$.up%()9%%%%-%(lw&>nmNk5%„U";%%%%?%%%%0%%%%zxji%lnkS%rfp0L2ED#WpCLBnA1_^2A#D+*+\FA%%up(%)9%„U"%#%-%s,Ej=6=ku)Z%(%%=%/%%0%%%%w%jxhf%qjSfRxr&e9Jt\]=5?XPinNg0T6„U"('9\J7'k&?9;5^LP5RhVd%tcYQheP*#];nvRxv'Ssh2[rxCGLwduhlr^jjt64RJ„U"Tx$?r]e-;OS1zA&rAj;a0?.T;k=.P(j\PFp$0Nt'm;^=A2z&G;,c<BoJ5UKj;ln„U"Hx.-W'.?#ZTGVNO^KLWlUv=V[2j*<ZL#E-cmp#oE/S2A'q&/11H*)ydHgW>6YrF„U"9q]k#iiSyS)GM18\7%Itet)8(e8Mudo0m5H[;_XK/r7.Lchnl8]lp1/XA^CXYlB„U"HUjs8H&9/NM%al^]UC,tVp^e\JKF7dN&;Y*dF[HF*HujL+6rH2xpb8(To;H'k#[„U"<c[A;[,gjrTj,ZgPL<KYx2H'1;Z1,]e3B8'laTeGVs;(.;>4\I.R\F)e%6Qp&M]„U"Ah*POtXw0_;3XY#$'\HC'rNPhjxpRXbs%tY,V.<jeLajwfUx]M/c]p:Ka</7Slu„U"jEPf?Sv.Vt*D.t<K<8fjPIc;3i-cT=^xB22=%Oax[1&z#h6uo6S7cPUxM(l<bFn„U"*rLL_Li9'7E_,l(i?i,F]T07&y'rM+N'N0^sR2dRW&_+07&6UG/LHgu#>6KMUt%„U"(XU/n7l8R)9KN8?1[&:(;/gf:f]bzgc/xwm%T\(E1*fhp)[So3Oq0lY7tJ**Pfu„U"%SB7Mqcz=imA]4i1em8[4l2HO6*T%2,cV<+*[J\gUvx[ZzB'di&UearHaw$kA[6„U"BQzn3A:$PIQuI(Q*-%m2-Y-Rc.HR^$$3?ngN6qj4iU&C$A[]&AAOA'j.?1%igMU„U"u#ihCL9G,Zir=Ab(MLW=LcR8z[J?(K0J,+%4MPq=g&WXM/DD&+e#eFmoP)Mm_M1„U"BQM:6E0>H$dnRYV.;(f,flN1V[3Gii[B,B:6Pd:Ry2^X']lQ\]rUa$QpgZT#w$l„U"o.eu'7gLe8j'VADQmc)s[]LBIMPJ**+lSHp<^X*mR2<;%[Jyq*ya-/RfG]ab[Ul„U",#A\a8yPm#t#\iLUr-%tk;'-<*>R,1IZk1J\Hk9p7x?A[l\YZNbx[IhH5s+0c\u„U"%p()9%%%%-%%>G+4>t1\'v%(%+%-.%%%0%%%%xmt&&wlg%SfxrT&zX>AjU5MY^=„U"x?3H,e&Y8,-H3B^tv2u5xgdZrisF%q-w:+6QIufwsRC5Q031xz(oq;K$hNtK6nm„U"l<x0:>lJ*mq]#QSrTY3,-CW6XJAZe5ti4ce*Q>tZ6b=P<UBs'GjA40MPcswskOn„U".E&REP#hIgG\g]PQ9TbLy6OU2x%g0+AF*1.;m;xQ2(9Te-sIZp>6]LKVZb^wvpd„U"rL,eV(r,FIawr*,1)Na]*p^tVJ2H7a?r%+sA37RtrFsO,#<=,Db_-p9,Ji&&+d^„U"68jEDaQtV04$1\V76r4NZfX+GB?MpHGB6^c_Ex=mGuT,^i2QcrWCAK&63W6aXy6„U"0RfO[)2dt-+1Bw8)xU#2()341JMiOEPh2igS()^Oi2=q#VHts1^NAiKO^B3u4+<„U"7ii#F.d7hMKh=M<C,;3aR[-HV0]j<?Sv$SlM\jLcqH53^AaQo#U*;O,.1in<Bw*„U"zqr(5D2JhbStgNuP'XjdCWH:Ry[HYZ3gwrcLaqGj8DAEgIkA/ybI.FvLQ3HN2sF„U"K<eKHcV6Pdv/8%ffJ;Z&_Phm]FalcD=dG?8H0?6Fpg=Plj'5Wk]*leDxhg4=ZmC„U"eUorvM>)T%MstSU;&<mZ/b.\'2W(YeRV5&(]8TuMD0&lma\gx^B3f6whM'hMQG_„U"ZXr/xLNta4i<c;\MIZOUCShG0&wrSS^.M)Aa)69YK#rF'+#(y?zAJVDv$KIp3TN„U"lO+cY$/e0%8LoyD$4VY7Uo/EUgSbA<fOhK><p;WP*NS=ggwMPlO>mlgr.y9)'u;„U"7t,NY+Y\#O=qt]N0p:g&9Qcj*sqWi_SD$z*qP\,NUpXve8=rx^>gQ:o9=STmt_8„U"uJgufk(GRvO?zH0BDk]:?O%MP]tf+dLWr3,%hk/FMY8gj'M31mcY<=])mn&MkAi„U"Zmc6)OCX&XOz(#6Lp?(eXaS/qJLrrurQDVCbp%N>Z,k'yBKwy[]GaF4S&t6k.U_„U"N%%up()%9%%%R-%Ktd&>Q3-kp4+%%%QB%%%.%.%%&u(n'WS[fxrfk(V>T.]1N4P„U"_xPJi2<,'n?cs*KoJ(fm+RO'27Y,40>C;p2x\bRu<+T-GNvnAY;L/kpY,h^RU(&„U"<DYqmYNu$A]tFWocME]F/%G)2Aoo)lMhXHiqdF:?C,2q_b2hll3bF8q_>ijD8>+„U"t',+XCmqoNxxl0$&efR.asXd,\br#*a1EIRp\9P]d+A9;fI);gMZ0GWuJ4d';A:„U"*=rUA5'DPJ?xooF<YSoest8Nm7vkxhl7g*DWJ0oiVUS48ae<i'6(_WCfQFPw4c1„U"knW2i/*kwk0Gc\q.uQ]6O_1LO5d?J]Vlu2[gY>?8T^jHM5ViGTkG8/CQqE7C$&5„U"x<K<o_Y2KtypM\)T%zclu^b=^x;</(#B%n5Z'gRP\fE/;DL\iX]^d(uac4iXpSU„U"Z6nV5bWaf]:>fb4xpJ>[oH/ZK*fBKheA8m'4PD0Bq8krhJibPUV6GU\N42.&WTw„U"lq;Z^]hZMTYT[UQx$8=5VQ3)rzjIQn#;ATRxx>/JUlr*3lDcsvGGnrAHMKX\l=]„U"+89hw6aF4?F%3W9c'XzEl.pZf>S\Tq'&CqcMKS*Ou8Z+-l45]^M.NsmTs(r6T:F„U"ej9qoSzFO-8khws,iMV;^q[C-iH)Hx%G+eqeueCYvT0DC'8uD+5_kgGV^u3R=h*„U":l5l4smxd-qRA<29kWH<[N+KMmPPWMa0/1=us^Pt[IqUG2>]Y]'.F>r;5NHnRmX„U"h;+#-/[.I[T&*:<lOMHQccN%bufRxWLe+=J=XWQ\eloerZqBFr%?g\jfi0BK\Kr„U"'ESB#xkEW9pYV8NOU()&9pYo]*oKF4Ke=1bts,1si79=IM^f#9xFG%Q*nVhQR/u„U"a6uicXk;pXGks4TCEDbT5q/sSI;Yup7p:h>FU3mOh:HA3j9;r=44u6$WjH1*kFN„U"G5\VaJ&]U)uX(]^WpZpMeR1Hw,MAcXsxMp]2pe1?v9%Zr;_,\Ic9:#GT5h;[/-=„U"D?vw6tbqe]CvrJ(,j7p9>=;V.QcZM<1J]VhP;LdR5VYGN;P+X0,gK+pa73:p5da„U"<_b$FH#:gH**7vnVQ<Odz8'aE;hFhaN(Gxw'e'fERk)$*_);opd:V2WmRjtXyR+„U"D/C44b&\/xB1Zh/%E5ibJtoB)>7Yk[UWN%Vjurjog*&rvP:0&]AE:O^%g/#eejE„U"a5tJ6t.JF5daPx\[VkZ5'of8hK*QkeG$o[iFu<*[rK'#%#>uOoJ<RR0uMAljhGW„U"(led4.2JA8rU1;;HNJtk'xXA>U4p+3dZ'JiXLX9Slb3NM7WTcJG&6VGGaG^s]$]„U"8w<c(2TW_;K%E/st#\bfKt]W:7c.;?1%'q'>2o0q_;O0gCihweD:u,\X&U/hV9[„U"MK1w/sC[DU<IB&m&HmFZK)G,fUDRv.C\B%w\uQH$H5/m7SItRy)W^nN8h>(POfA„U"ydaY3c.B+MJ-4C[ZSY8+:lq>Om^Nnp8_XDVcYP^;2c'IAmhu*e*C<;OZj.ctIi0„U"jbbV>a'2[HZ2b%>rA1<Zl+9echp>Lc+nbr.goH+gq#t;mV:-'7/94-AJ(O3#^Ry„U"jUn8p=RVWMBbg:LB%^yR4p:>'sBjz#i.^b(2^X[&0aOM60?3gz4F*n.NpU,zZ7r„U"sndT0/J<#k-F_F1u/yuhH-pU(\c9:b$.C-ZKm_$uv[/Ii&D$$iZB]CLXSk4ur4]„U"Pq8WK4$=R&KVF*5(*T:>ektS&&o:bP4q.fB8sX^Pmn<hCnN*m2NOJimpaJ;ud&T„U"hw*gC=],M8Uk8Ln[eI;+%Z.22.HmRrkvI1^<m5T*XCsI?GR-V-+DR2Uc/_CW/*Y„U"K?'<I$J'y4kk0y=mTtInu9t4KHwhO<8%t0ODv>vsDZC\k')\Dn1pluFeXOnh]nT„U"Y^U\Ln,bG44iH_VWl3-?E?c7U]^WPg[FG\ohz0,YkNuj#f/s4Z2P(qm?y:Acr'U„U"^6n*NN:Mm_'Jc'SG.TQXt_8=0HoLn#N^pH'x'up%()9%%%%-%;sEj=K)?w/%F'%„U"%'%+%%%1%%%&'X[U&'Y]U%SfxrE&crZBTU5UTh+xV/0TTJF)Bskt3p+R8<8o5#-„U"rNT*KRQNT*f/Qn3L4xi7al?:W%a,TNjkz26-\bmHdWxBX6+^Zp)MiL<xGVD,lO(„U";&HBZN%sQ^qn-O(qzGu5'UfhcZ8<$kY5)_QLN=&G3*W+8QGYk&g>K(gg[?Y?X-R„U"VU'QOn^/z:Vo,Q_:yp>V(d4J]t6Kehkoc0BA6+jL)/HBq=%7o;)V#,6S/ehOq,j„U"43#4HTCX&W)%]gf^y*pARGj$VfV4#Fh-,^)rH7+*([86.+#2OD/&50OC;/*evGv„U"iWfA'dn-1*\+,4aB&zye$BQ>ua1GcT&s]<CLj*;h^%,#)j:CMGvHe$^iNqGQuA-„U"CVcPGqgr2hfnEZ-iik>/]^.u>Q<,Ub]5Kr=?eZ+6;8TiH6Gcf\8kq9r=0TIKm9y„U"SG_kaE:(O5%ZxqJSxj49ow/WO(_:qY]aA_6V*<]x>hBT-8wCcq5^EmT*+?G6PEd„U"lfdzX20t8s1t<2IqUMOhOgu3vJ,:oI&HHdc?3QL7DM3(nNDuM_Y7H\Ns[e;b>2n„U"Xkxd;fYxJ4dO>[4\<-$nJ75MMP-C&MRzXzhba,ncRw4E.>Dixr:UbceK)A8r0NB„U"_#\YIw?*?,UqGI;aGpT;ae8$N0I<(gMlIr^TQX)Za.l$*XZ$W-qT6Y&8i0tG.Q0„U",pHWB]vJJ69*Q&nup(%)9%%%%-%'As&>gf.ZDo%%%%0%&%%0%%%%w%jxhf%qjSt„U"dgo:YG4Y3Ag2EEm5#NB1Wo\c_26//-[NRoC)&?QSasFrC%nRwu%-pRO?GEHxaUK„U"XQoRFEY$iAnRIl.3L71BEe1vn8q%11>Ec_;NLeG='\(h+HgV'kv,V+vF/Y6ii12„U"/15aL.e?#11#3&(6Ve7[11Q%>[uL]j=Q+U,Ruh(<36*UQ)v6Ytm9#9c9A3.s+a'„U"a#3;+V(j[8<'qVUWgUSE8)0b00rh]\cZ'$cBk6c]\obS$c;Z6c3t2dG\l1qcrG,„U"Pbr;>,xKYC*%AY6sMLssq,n]#7[f5BX>WYN-w)'mGcs8mbo9=,<5S,o4p%%up()„U"%9%%%#-%'sR&>39-QNH&%%%d&%%%0%%%%xm(t&wl%gStgdor^H4p;/=N#nFJKNv„U"%RgSlAIMpjSl;Z<G9&x;_Z/W9SfdfJ;LD2[s2CTSf\oayJ:DRNeD&aa9f'm,i</„U"RMWfrxO/^noSX$Kra.mG._=[0_XAN8f;\gVM4:Y^&OwP\yZsIqDD03Dr9A&dyZL„U"4c/#J[8B\OINin&\WhxxL8>;fzAfB//BDtT]/lMSOgo9,:(n(o^nv6AeI(jrb&.„U"h79j&tA$##%]S[KA+;%w_L<HOA>UWiOS7/](omZ)?4:ZJ;9.;qrl([e%*kCZ,Q$„U"=km)a^g%>+:9mb=c,lT0rpCLg$3qP/d$DctjLR;+$p-N#[[D>)J.8REfDY7l4>0„U"Gd&?&wh&3(ihP3'PLt1tVWIhUo>,J8?d%up()%9%%%#-%'s7&>O:3U.j'%%%*)%„U"%%.%.%%&u(n'WS[tgo>)b>m8S#=#nZ4XfESmWf,a)_ei]^:+6;y?-dg/jNk-UMw„U"h%U9onA6Tj(HZklALg[w-Y7S4-&[6v0?:ROd#M\lT1oC=65=R4)S95%64xdT+Z6„U"dqLsCgpv?jUlacX4#EJVa&<Uz223_yFI6[J%Ep?p/p=1rLLBX<SHFfm?\Gt]W7'„U"hm=22PCq$FdDysgt-s/x:tePpXu,t'tOGef3=D.&6aS3pkrEl%1V*K\omu2=E+S„U"^iI$Uj3^8f2,'R(%s9#9s)?YF/xmZ2.mIK,KU+b&9&:UHn;j>D'eZn14qR=uKr6„U"]9vc)/0qN[ife:1z4ePb.*ue<^o[3RX[wPJ4%i#qgA)<sO?eNUe&rR+sPh=1Dlp„U"(4*-.Ah<0xNR5xBi&cN8f'b?5O[=WEK/9cxxPu%Xnb<&Js_efGI;9$w-2L4t.2O„U"\B'<RcA.g;Q0[Y6.:4r[6_N8;w$Ya,:-J,k'_t)WSwQ_\Tw=tbIL>;'Q=\1;V5(„U"Ei'4ho=9r7\JJ4eFN\oKh99:.q)rc*:GF7hZ6.LfcFH]Mq:nP/itqjMXOK$p=:+„U"VFcf_p8<12KzZB)V<lY..IXaDs36d?QLIIA(qcjt>^8mZ37S\Hh_kH]<m\rhr>Y„U"bj=K^]frL':^W7M-^9PjmRWGiH74Wi[wYjm]ksw]pSU$EH7[4#_gI9RU%G.Nsqn„U"s_Q_R.?4Gxz5ULND2Su<ze=S4DaM2f+emZ>ROz0v.qXCLs$;/mQ(W<]Bbgt<4iu„U"T)GE*l\Ye.N<^52BpL%AmyTprYIkYaFB%h-iSU6g[<0/S^h.NlWOWAW4^SU]$,W„U"%KX6;dVEE]H+EaD7EXAXW]\Eks>:8O'v0up%()9%%%%-%('s&>[<q:3%Q&%%%U&„U"%%%1%%%&'X[U&'Y]U%Stgo(z^$mB<u=T?Hf6n7Pytya$RE')eqGs3K7ZG:oL=7I„U":OWTDY^gy0'_UO)tQ)6[,:l>D]8,V'Kf5\#,\fVJqmQJmf8::*^?]DbVxdtq<?D„U"vJRvH/[M?6$&u9Z1FeSv%hAQgH/6[&[CWYEs.WoMR90JmjAq:ZWuQtNg5&a.VAs„U"wPm]MAeOT/<#iX#U+cA_J[i8[L-8jL?&Z>o]o<B=jn36/M;%1U]GYs<qqQh;AMs„U"iYcPx/EQdap%#vV0b+5y,UQJ^O_HQ'5^'b*]#GR+UY&Y*,l<RVrhVhS9x7a2tq6„U"J:PF7Dtj3hZHK3D^-^b/n.UsD?jg_W(&rJA<)m(u,sFiDc2l],6H;g7W&d:D=E$„U"P5_u7u_\u/fJ19<%8Td%up()%9%%%%-%?Fd+>J;=y#n;%%%fo%%%0%%%%ij%hln„U"k%XSgfFxVa:AB?nahn#Sxgh]EG5OV7%VpV.eL[_S3-VBg0]Q;#l_to0JhvujdqV„U"3oPq.4O,I#I^6%Y8<l<='Vzk(ry%u%E%ckx7LBlXd&N<0?O$c61aX+cb3#iITj,„U"jFe>0oY2ul>s,60nq0Gq(Y-Q82mu#'2.R;3W<G:p2juKVg.&S^J3*R/(_V0CTs.„U"#vZOtp<9c?#^aQQ/k&ch[4^w'Kj,,;;Uj8a'-:7<JBT%)M2G_Gb/UNS*716Nv.i„U"pR[)hW#F:U(^Y#TG8'Iu)NHrdtUi,9acVKQA_-rl6XGXcoY;?XUYbc_T+ukGLgh„U"B?8J;s8SIav:Qg4Tq#Uk+LQgS+9iI]J),GIfEC(Gs)2$4.h.U;C[.r;<jyi?#_P„U"TF=gXP^<rO?Q4*QQYp_SSN;;;Lb3(/<fI.NT1dX4r/5+p+Ku<AEqaNelx(^'nT[„U"1m[6>It0;jQJI\%sUBhK/.i^5h1$IiAg)>VL]Px/-iIe;1L\i_K&KK1TBbH/Jgn„U"d-_S#c^,8?8]42+d,cPx.FGR_sbhI:JFZpn?MbvV]QWX<8MZnsN(ZhukIs)V?8Q„U"i&Ibo=xg$R.TDJMWov&]Vf4GLd.n]XStP?[:XD&r'Ew,(,.;Cs1$j\>7.]CHU?n„U"?#<iC[?n<f5^L&YI-X3j\EuK'.4v]zEK[uz>rY2q*NxD?#H+VBMYAq9P7mvmeWf„U"3ut&J*\Q6eH5N'HaU2phM0Yq$82G1<v#=gLx=q>AJViuldF^)<J8jbmV)XMGg9i„U"Z0<t/Tbf0%fP=>n-<QFO:,d];9Ac>cWPwiHjB[:Y)6B2W/kKkl9My[?ShCmUkvV„U"zWs+/N[qQi]LpWZ%>Cfc>L,+llbpj4m0U$JF>;lR_+-u3prWY8xIC]Qva/B]Qk3„U"DRB;tuqU-T6Lr;*?bPCTV.j],oN9d)o.zRXu+8/#+ctRGSt2gT]>q#jyF-8Myw.„U"d/Kg_fa;#5?P^1?5k05+'I?8eAFDKziTjjc[8G1;5gwq-dK;zNS=_8u)E<^gi(X„U"_XzS:ZTl[w,pLk0?f.+sVxT=QB=#_CV'F]nj&3/fI#G+E+ajVhJP6&q$.C(]DA/„U"&MA-FmdOdnezf>q]rx4'bJ0HK?8naf7Af?K7F<aSXSHH']?5nn48tE?9ta&ZWJ<„U".)YQ$C(PFMT]tFY.oT5\lEsxuL:SN3inG%,n\B+z[ziouFILg^*x+GCtQ?6(.5$„U"dPfSWkE5Lu(.df?-56Bu(NWp?S44]f[KM]OnS%;DCk6<st*+LHoo_1$EP=,u$f/„U"SRCOR:#\$,-PvrM^Sw09l&R3/T2?9\8iKlQSCzbKB%Em-yV-bw<t$kWwL.J?_7S„U"h/o\pp#g:Q?/'a]x>0a^Ut)^b10'0p<S2=;eG&uw+I9U4PH2lm,k5Fb'%K>P_Js„U"u4r&Vs9xfgH:<BRVNmAm]Os&)MDs%n(&Sk97l'5v_O:DfJDI+:^4Y-T+*9Bh7>&„U"2(i1.Odj5;lVYD1pA98>>O&g5]B%;.iUZAItI--J61^xP/g>bKf54?Ms4Y*S#;,„U"<<>_[&1pg_GUYv;gvQW\64AK5K2[8$ceS]US0DH%Ur.>ZKW'jP8IJeD%L8]-Ib7„U"$7p;kQ9\UZ'2dcQK_$Q>,sU28&H?/[[S4XUZ\nCo*:(^+E$*293XAVP3A41-\4/„U"AHrFU3ff1,b_r0hF\.#m1m[%OwS^b%AInT#^[_QZQS2+Y0K,W:fp>K&B3%W/7De„U"/%2fXjb_70TbvIt\UCZ)1fO1aN:,=yXN]Dtn/^],11u#7)X6RD*DoK+kY:D;A=Z„U"]4.v96/C68gq&]qegd]7m^.nIrg#;&l6Kd-gyV?SwiSD\Y8Ni>kWeSRG?DbC#I8„U";_02\w][F/A;UPfi(+3mYlfVCb<*sI0gJS9'scg<7rDHu,]XQq1Xm.>-mu-'GZ?„U"F5)df[j+PbY43_#70u$]W^G[M,W#/CD]h(t+U%fJY&cjF_5Z-aA('7WAeq]()d5„U"u%>F''w+>hAUI1kdL0sw;>%Ki?,_Lgrt(S6>:)E<kLH\C4I]RwUCL[I_0]B+mNM„U"_xuiTUsVq,fj1jR[oP4<.+lF$<FuYl1*tQJ(F>CW)[axN_Sau\pHMOA&)Z7,.ie„U"BS4MuQ_Ru_NWFo3jCL.hX>&fY+DEbQ7YnS+(Terkve,AVI*\=be;tsTT?GuAT\W„U"%l)qC#PYn=s>LQ.4zi,TCDZgkCBv:dQ5/]1gu#C9s5>>d/bZl]A\HS&jl-.(6k>„U"\f]:lK_k(9q+8h'])[vQ9oMg-/2tVy.+WR<fdCJQx<4Wm]phW%/)/b:GpbGHcO+„U"X]1]BJks5-)7Jr*vCN<4KD>(\'_'2ZE+.iA'gme.0+XVQIF1?2A[a7hLp59il(E„U")lc(f:.^8[3tA\,Uvi*7cC&M4VQX'ihFWvLIa6RtOp/bXjsR#%GEG<;1z/2gAMO„U"8k#c)N5o9CE\slw9.Fr6uqk%:oosKZ,Ye*2r-f3=nHPk0Mm501wH)5Q\v28z\vD„U"jY2*^-=gDd(0kW#8IjL^OMcF)bSlW?Rkm#3_W>QKERTQh>_(viIZKjClun2%,yU„U"I#x2t\7We[FnZ8gX*CM$)Y2FdK4VZX,8fv?89%FqC7+DUgk0sFdWJn*<BfK.*EB„U"+yUQ+-hre(Ikra]#]J:FVB/8Z(,IA-=0&&)^6bmWl;uA1]?+V-.9*576M*d%'5I„U"U#]sRLCw3O<Ak96o-4Z5^dOS_7yUch%pYm2kFdqf7)?I_JS8IKbZIWR,wafr%?I„U"e+Q6ghl3A=L2,aIDM7eX&#R%JC]YQMO/%&vf=6B^$yVb+_$=t3qmm4'DrboP$86„U"5c8*UyhhbZKq0[^lcE>^XW]p92T3jZ#^n?dYEzX6SWypmkco'[Vud;PNWXEVP/D„U"/E=oNg1>vV0Ga\[)HCNMjX:&v:'a2+g<AZ75iI5FQSDHboR/S(>1c^?7.dOh9[Z„U"f.VFOf:=-1;:3(FPp<b(#Y/4m.XrkjRzaMTNS%Lxxk-$nVb<JS=DJ7^W^Aj9k9Q„U"oT%P4UcRDBS3]Z\JGNgd3sX/7.iQ(v^m,7r?]k3$F=4W>t/4sX)HiFCZU<JvNsP„U"^pid2kU7dRw0NBySadXVll9bb?NBC%'[:j74$3Q6Iv,%\mL2CQ,DZ,9D9I=gOpj„U"AOgmVuGimpfi^,U><YdpS)TiquJSt62/Vc*hq\w;kHYfEp6Nz4%t?1V*a_es6PC„U"Now62m;aqVq$fU5CD1Z1I5KkDjA-k-Lc42>6Gj??$/*i4qJQQTS0xt]:j?M/;*N„U"y&sn$XshpZSO0MpM?*UAmO;7HObi7EK$ThI:,as/2odNi]5&oF<3Lf4Uma#M(;;„U"..Z)zP$4M8GTZUkUDnH'^C5_RlkY#GFWUZ4pQZnhO./yo[5B7fppIT>nLy+LJ9D„U"'n2QB#B*Xw1sVfBEatA4-Bhev9;5upF.*?2wAb;(FD'^39Ri1Z?L1W4)F(%Iet;„U"i=ChLd-_^_(/SEeq1b=:MuYYk[LCVI30BA.Gm-m_ajK$ib$TN=i.29qzV1F-:7s„U"?Sd^s+7a)DqaoMyD\om1P4il^SO+^>v4Q=kFqbX*.&0:i+;$[-))wx70:oI4W:+„U"(0W;1[q]?#C5Rf[5AEI<Uj4gvUt#P0hyFp_QL'b/p0Gd0b$dfOZ/rUgY2LsHAg-„U"bj1bh?g6*B52e7\*V]T<M,4<VPA(%+DZMru<^aJTW+yuM>\cW8sy*/t7hyTSiNE„U"PcUfhc-B$4v<(>q$t=8fuFO*LiL;Y9$JsiVRvofyJ'AtnNn$%a=#[-xCkY8?v1D„U"8[l#AM\T4+rKru5DYhmK=SX2VVpnT-2lH0',g3(H*pl/ALI*8-N-yo_rL>q00Et„U"Z=z:<Bg_krvYd[\nq:eF0iIUFg\Htx_%<msL7ejhwcJ#n<lgR(FPq#[6cQ4M/U]„U"W8+\Cnmd]Hp3KX3M7wW9S4V]554'nUPNmLc'1dR/X_1]9a.\3bL)pijg'm_/T)f„END SUB„SUB V2„U"UIjlTa,Mo$=RXRRuGsinc\^zHEF(Ue6j/_LjB$1BSrmq8SRhvcP_v32bqkc)25>„U":+J6[1tm1OK$BJYh-/uWMR$H)f=5YNq>l$,[B^)]%GZsm$H(Qd89iUkI&t>&[$C„U"+[3GJL8IYICPdz,Mx+c_.^S(Jomo(W)Y$Gdh9AxGM:HbO/O)NWJVtgKp3He^T05„U"$8(5j9IM<V^aaZ7QYksdwLmIucN9u#kTqf=s0?pY]-M^%yMzDt:=u\hh&d0'JjA„U"S8BIw.l?1of4?Y[<xD(2f=\(S^#<N#\#+5&',ZF5RR/O7%n-V,.M=Lrh5;sF43P„U"^;#Q4dDU#h74YJ4WaL=z^FC14ofstYE9P^Usslvgp+6Xrr:c=GM_MIv.puES0e)„U"\2HI1)s:JavD7A,cyJ-UB7^Mg_uDyq8&Yt_jlB?j%U_Pu8;%<6\pVQ0V8.Hg7M*„U"32*W9/E\GAW%W4dO<f_%Ax40%EzvKLyV2:)L)LSWOib<39i=A8XAnC%$+rk(v9C„U"x9,y:,e8r2p9>J8N,exvP_qa#?=w44$MJQF83Qy2qDEr?sU)]28mf:\>CJvLPS9„U"[3;N.ry%0VhJ&?Y+';AhIyw&Fbb5+t&pH'&2=AqNxpfsj7n6^MJV2US%i:Oyf_D„U"L^hC1R.a?B0UyWbF0iEp1wdv)8cqHjRlAjn&m0D3V0Bw.QC,.omAG^;FMK9B:0C„U"o_qe[&pWS+71a0;JPCuOSvopOr=Z6ec.).06i0:G.u0If6uNHV%'8%B[n'N+BN<„U"E^s1/#?Aa75h=&1;4uaPG9q[9agC4.QnPJMCKT4cbCN;[H&LD?Nmc+JBTmln=gb„U"48f2LQk-[m%;P^9GJ&Zj(__s>EF7G:Z]cc0'a#e_#Gm[]k21;%Md2=qt&jQb*1K„U"KBY\4CJb9DMA[0mGe*otk,j^\(,iB2bpi]CH,R+O:zVG+YU4;#R0&n<z/;+O1Gh„U"a*jgZk/9h(^%3vW=v1%eq6_Dq]M4)Q7i+9]DFyMEqTv^ah2k..:y_<80n?a_;d&„U"Co:v6D3TMw[iJaVHwpHd'hQ\ee8'RVq&:)$DPn)f]TK:R6smCFq]2$^N/F(*o[e„U"VnH-mSFFI:w-60bs6TL5kt#HZFQm-o(+pQam&wp-eA+:eI%m_]QzPTK]/BrY?$'„U")CByj8Fv#yc[KzBC5qn7SU)l#p7T*:AHA;BfdeyLKiuyTt[GQrl8TQ's,?fInZ7„U"EAFKn+'M8_<OmMJ6LwB_v;SE_K>^UIJvBN6QLmCv(e5Px]cg2+]C)Lj5V(CriJk„U"IR?GW'B8OH()X==l'IH?:YeO-QN41/.4f[lf7<L5.1]\<a0%VL%r,Q'Sz:sa8*#„U"*EEB8$&D\M1^V+u*grhinig4l%3P:A3cWO-nb]mBY=/E_ert$4]Y%a-hLo##j>W„U"kCG?tf1bn3wzukuAu&1X7V0UpJ'CZgQjtZ;iaC#VncZF=-j59:[r%y44%]FJYDt„U"cb%B,>s1-C+g1<Q?\3VBo_oLu]ovz5YOy7#3qR.F_&C%2X,L=lZ5[\t_:g.YBOR„U";YJAka+c7,U/ct05n*K:H4onT5>RSkL+%OrD01ZNj-=&zXaO<AfSzcd\H:>M/sX„U".Qmnw'+q$vWf_BP38Sd:rn0)w,.-ca4)W7pp*2+H<vP.Q8dJ4:SMW&IrRUF\p$8„U"G+e%Gw$1p.nLC=g,em)O)R;WrZkIE=QsTp5H5Ael/;h4k0r'?-z,s4KL60]2&:N„U"t&yG0-it_j:B8(4nuK]j[Jo*R:L%e_Vu99W:x'xQb*=3]$=?VKmq#k;\-xS[Hy8„U"-#ouLQ\B(_RNr+'THv8FAF88L1=r2AVVItv=VPvOG%j6dIanQYLU[*W]5Wd+l?Q„U"/&Dis:<$UfsEl<3?/zmMNtN$&C\5Jx8j$h,PtQtvic'f>7+*f'i:KDK_Ff5j'l;„U"5ud(6:Tr.KhF2ue1vM((RPS058:O#g[Sb8OOy]tCO]/L7,zJ(0+(xua.q8H-NhS„U"2[#Ww?Zg.YJDUO]I3BFbWYGdK?,>NEbOJ]CWV?xCf]gA=3)%=._TFkr+R'c]S,8„U"ZS/odZpQbnLVJ;9i0Vc;9],IJ+>7tG?.eD-,\OpdTt1#?H5g6ANEXGi5tp#R9W9„U"_JxJpI'&FM0Y&fsQqg]fPj1P\sEFrviE^)Cl8_NbT_y7jS#$,q(Dd2vYVx26mS+„U"BTGWr$<lL_>a13bt<sfQJ1&BPrWxM:#Y13V'TvGZ3j&L+G%I?0-(V\L]W;Ueds\„U"X5-51i.?dclY2.NIo?y?pmzRjUnYiit*sgMh%f0%Y]jARTvB/e$jAp_F*kg\]38„U"E,O]rT]i'7SqLrg]zsw9d&GCpw,uGil>Gat'\%qnywPq(MaC-yG6NmY&^n/]cV[„U"ehPq4.Pyjl4%*llw7JvXbw.qLoNAP*b2tl(F=wqLR/%QGo<8WNqrEvnA.dq#hmL„U"<OstzIDHDOr5DtZ8MW=dY[0Wr=B+EX*YmVCs<#.Xl<nrJu6N39xI(h.;+SgnJVi„U"P#59HKlXHTo,7u.V.uPCv62U%OnB-N$)4B_6t^3tRD<T]aSJh#cTALJ7a=A.SgF„U"'n;AYq1F(+hX&D*]-_2\Pcd*6]>/L1cpNM8hu\3vE/ke&$Q6[N<VFV7b5Za3un[„U"$Jp3(paSsw>:KLo&tH[fpNB:JdrQ^EvqVCxcP0%^d4Wrx-]?Q>(&B+kmxtUC0;J„U"dqIRC-;OSnn(duUg]<\.bRc9]PXqu(9'Jj59MUG8j(eIIv-[HJox*BL%Zxn2J#^„U"S:C:wpC>s=7IX4q_G#5mUK0bDIElFNfn*KNXOVIMh]Ah+3LM^lCe&rNZ$^doA1=„U"^tp3GLHjUQ_X9?b(5D$bZ*uCiirw%)Zr]e->l%ui,Jxl9^UR:d4t_3uu^H)nz*b„U".z/IW>^vZQco2AoT4.sBHrrX8$q.z#&A/_#fcdtkY^,SnXSwu/Zf$0dkM7&r;HA„U";V:WI7Mji+N(6olq[Wl,4P]Xu?s,#4ONf;yRwe9xbN<<vCbtN)SlbC*lN2IYvT^„U"#Y^ir61IbABJBO2\TofP>mH?6vsdz*Ppapj0<C<p^$3hOjpx1\L'e:g'UU_;R'u„U"+(j,#Yo$)GZkO5e.A/f)Ab$J,l:_Po08.MBhVjv8RdMB<CDRdr.4(YP8<VA:]Xh„U":ND/2<>PuA\w0sudKFO'sIwnF3<WR*3</Ii4RFa)mP-Za762;w>Yx*x[Svhe^x%„U"424Vb8E+a80wgCwfqd&uQ8u?XK7hqZF/7oaZSFGM:BycCA8;x?a(q*8cChm*_2j„U"CBdx\Lf21[nIfO/,hdI,DpqeZ5Y6jZgc:ndW.cPaev%tQ9Tp=Q35BNp/$u+VC*n„U"g-KN+5E%*##s>K41#G8:0&\=:c7f_VxTvNSM]S(OL'v6-eRnP\t1OJTLfpnZ9Mh„U"1c#2P3HZuy,*HDS^&7SoL;zj_z;f^VSHp[5<a.c1/umF=l6QF4AY:fn\6=M,I>r„U"2;RF3$j>n-J+oKgsX_CzrE(+e3H8BND6(iZqZVSntI3'x<up%&'9%%9%%%#-%Ju„U"#&>$.=V(-&7%%J'%%%/%%%%%%%%%&%%E%%%%%%%%%wjfi%rjSy&'yup%&'9%%9%„U"%%#-%lwd&>[*,St^(.%%e,%%%0%%%%%%%%%&%%E%%%'U&%%%zxji%lnkS%gfxu%„U"p&'9%%9%%%%-%lAw&>m=Nk5;%%%%?%%%%0%%%%%%%%%&%%E%%%%c*%%%zxj%iln„U"k%Srfp%up&'%9%9%%%%-%;sEj=m6ku)%Z(%%%=/%%%0%%%%%%%%%&%E%.%%L*%%„U"%wj%xhfq%jSfx%rup&%'9%9%%%%-%%>G+4>t1\'v%(%+%-.%%%0%%%%%%%%%&%E„U"[%%%T%-%%x.mt&w%lgSf%xrup%&'9%%9%%%R-%Ktd&>Q3-kp4+%%%QB%%%.%%%%„U"%%%%%&%%E%%%%)1%%A&un'%WSfx%rup&%'9%9%%%%-g%sEjF=)?w&/F'%+%%+%%„U"%1%%%%%%%%%&%E%%%%_#7%%'#X[U'%Y]US%fxru%p&'9%%9%%%%-%'As&>gf.ZD„U"o%%%%0%&%%0%%%%%%%%%&%%E%%(%T9%%%wjx%hfqj%Stgo%up&'%9%9%%%%-%('„U"s&>r39QN%H&%%%d&%%%0%%%%%%%%%&%E%.%%s:%%%xm(t&wl%gStg%oup&%'9%9„U"%%%%-.%'s&a>O:U).j'%%%*)%%%.%%%%%%%%%%%E[%%%i#;%%&.un'W%Stgo%up„U"&'%9%9%%%%-%('s&>[<q:3%Q&%%%U&%%%1%%%%%%%%%&%E%7%%+>.%%'X.[U'Y%„U"]USt%goup%&'9%%9%%%%-%?Fd+>J;=y#n;%%%fo%%%0%%%%%%%%%&%%E%%%%-#%„U"%%ijhl%nkXS%gfxu%p*+%%%%%1#%1%x%'%%K%W%%%%%„END SUB„V2„CLOSE:IF S=90AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Douglas Lusher                 PAN DEMO                       FidoNet QUIK_BAS Echo          02-09-96 (22:41)       QB, QBasic, PDS        115  3372     PANDEMO.BAS '>I rechecked the horizontal scroll program I posted the other day and„'>it works fine here. But two people have told me they didn't get„'>anything. So since it is fairly small I'll repost it after this„'>message. Maybe the code got scrambled along the way.„„' I saw your code for scrolling and noticed that you were„' having problems with unwanted lines on the bottom of the„' display. Well, here's some similar code that you and the„' others interested can play with that is apparently using„' the same principles. Note that this code allows scrolling„' up and down as well as right and left. This is based on an„' idea I got quite a while ago from someone else in this echo„' - please understand that I have no good explanation as to„' *why* it works or exactly what is going on.„„ DECLARE SUB ColorShow (MaxX%, MaxY%, C%)„ DECLARE SUB PanVGA ()„ DEFINT A-Z„„ Mode% = 13„„ SELECT CASE Mode%„   CASE 1„     Horz% = 320: Vert% = 200: Cullers% = 4„   CASE 2„     Horz% = 640: Vert% = 200: Cullers% = 2„   CASE 7„     Horz% = 320: Vert% = 200: Cullers% = 16„   CASE 8„     Horz% = 640: Vert% = 200: Cullers% = 16„   CASE 9„     Horz% = 640: Vert% = 350: Cullers% = 16„   CASE 11„     Horz% = 640: Vert% = 480: Cullers% = 2„   CASE 12„     Horz% = 640: Vert% = 480: Cullers% = 16„   CASE 13„     Horz% = 320: Vert% = 200: Cullers% = 256„   CASE ELSE„     BEEP: PRINT "Bad screen mode:"; Mode%: END„ END SELECT„„ PRINT "Press a key to begin puting some graphics on the screen."„ PRINT "When you feel like it, press any key to stop creating"„ PRINT "graphics.  You may then use the arrow keys to scroll"„ PRINT "the screen right and left and up and down. Press ESC"„ PRINT "to end the program."„ DO UNTIL LEN(INKEY$): LOOP„„ SCREEN Mode%„ CALL ColorShow(Horz%, Vert%, Cullers%)„„ CALL PanVGA„„ SCREEN 0: WIDTH 80„ END„„ SUB ColorShow (MaxX%, MaxY%, C%)„„ 'time the system cpu„ Start! = TIMER„ FOR A = 1 TO 5000: Nul! = SQR(3): NEXT„ Modifier! = (TIMER - Start!) / 2.5„ RANDOMIZE TIMER„ DO„  X% = RND * MaxX%: Y% = RND * MaxY%„  SELECT CASE RND„    CASE IS > .95„      FOR A = 1 TO 250 / Modifier!„        LINE (X%, Y%)-(RND * MaxX%, RND * MaxY%), RND * C%„        IF LEN(INKEY$) THEN EXIT SUB„      NEXT„    CASE IS > .5„      LINE (X%, Y%)-(RND * MaxX%, RND * MaxY%), RND * C%, BF„    CASE ELSE„      DO: Culler% = RND * C%: LOOP UNTIL Culler% <> POINT(X%, Y%)„      CIRCLE (X%, Y%), RND * (MaxY% \ 4), Culler%„      PAINT STEP(0, 0), Culler%„  END SELECT„  IF LEN(INKEY$) THEN EXIT SUB„ LOOP„„ END SUB„„ SUB PanVGA„„ X% = 0: Y% = 0„ DO„  DO WHILE LEN(INKEY$): LOOP„  DO: KP$ = INKEY$: LOOP UNTIL LEN(KP$)„  KP% = ASC(KP$): IF KP% = 0 THEN KP% = -ASC(MID$(KP$, 2, 1))„  SELECT CASE KP%„    CASE 27„      EXIT DO„    CASE 52, -75  'Four, LArrow„      IF X% > 0 THEN X% = X% - 1„    CASE 54, -77   'Six, RArrow„      IF X% < 255 THEN X% = X% + 1„    CASE 56, -72  'Eight, UpArrow„      IF Y% > 0 THEN„        Y% = Y% - 1„        X% = X% + 16: IF X% >= 240 THEN X% = X% - 240„      END IF„    CASE 50, -80  'Two, DnArrow„      IF Y% < 64 THEN„        Y% = Y% + 1„        X% = X% - 16: IF X% <= 15 THEN X% = X% + 240„      END IF„  END SELECT„  'here's where the scrolling takes place:„  OUT &H3D4, 12: OUT &H3D5, Y%„  OUT &H3D4, 13: OUT &H3D5, X%„ LOOP„„ END SUB„Churl Beck                     YET ANOTHER STAR FIELD         FidoNet QUIK_BAS Echo          02-04-96 (02:00)       QB, QBasic, PDS        161  5555     YASF.BAS    'YASF.BAS: "Yet Another Star Field"„'Written on 02-04-96 by Churl Beck„'Based on assembly source originally by Draeden (with thanks to Mark„' Butler for posting it)„„'Notes:„' 1.) Use the "+" and "-" keys to accelerate and decelerate.„' 2.) Certain speeds tend to cause an overflow error while in the QB„'  environment.  So either compile or don't test your luck w/the keys.„' 3.) There are no built-in delays at this time.  Make sure to adjust„'  the code to suit your computer's speed.„' 4.) For those of you with masochistic personalities, I left in the„'  code for PALETTE USING.  Just REM the OUTs and unREM the rest.„„„DEFINT A-Z„„DECLARE SUB MakeStar ()„DECLARE SUB DisplayStars ()„„CONST ScreenWidth = 320                   'Screen width„CONST ScreenHeight = 200                  'Screen height„CONST MinZpos = 2, MaxZpos = 4096         'Screen depth„„CONST NumColors = 5                       '# of Base colors„CONST NumRnds = 400                       '# of random numbers defined„CONST MaxStars = 190                      'Maximum # of stars„CONST MaxWarp = 90                        'Maximum speed of stars„„TYPE Star„  X     AS INTEGER„  Y     AS INTEGER„  Z     AS INTEGER„  OldX  AS INTEGER                        'Where to erase last dot„  OldY  AS INTEGER„  Colr  AS INTEGER                        'BASE color.„END TYPE„DIM SHARED Star(1 TO MaxStars) AS Star    'Where all the data is held„DIM SHARED WarpSpeed, NumActive, CIndex   'Make these public„„WarpSpeed = 20                            'Speed of stars„'CIndex = 0                                'Index into ColorChart„'NumActive = 0                             '# of active stars„„„'------------------------------------------------------------------------„„  SCREEN 13                               'Set video mode 320x200x256„  'DIM Pal&(0 TO 255)                     'For PALETTE USING only„  DIM Table(0 TO 17)„  Table(0) = 2:   Table(3) = 2:   Table(6) = 3„  Table(1) = 3:   Table(4) = 2:   Table(7) = 3„  Table(2) = 4:   Table(5) = 4:   Table(8) = 4„„  Table(9) = 3:   Table(12) = 3:  Table(15) = 2„  Table(10) = 2:  Table(13) = 3:  Table(16) = 4„  Table(11) = 4:  Table(14) = 3:  Table(17) = 3„„„  OUT &H3C8, 1                            'Begin at color #1„  FOR M = 0 TO 15 STEP 3„    FOR i = 15 TO 0 STEP -1„      OUT &H3C9, (Table(M) * i + 7)       'Red„      OUT &H3C9, (Table(M + 1) * i + 7)   'Green„      OUT &H3C9, (Table(M + 2) * i + 7)   'Blue„„      'Colr = Colr + 1                     'Next color„      'Pal&(Colr) = 65536 * (Table(M + 2) * i + 3)             'Blue„      'Pal&(Colr) = Pal&(Colr) + 256 * (Table(M + 1) * i + 3)  'Green„      'Pal&(Colr) = Pal&(Colr) + (Table(M) * i + 3)            'Red„    NEXT„  NEXT„  'FOR Colr = Colr TO 255                  „  '  Pal&(Colr) = -1                       '-1 = don't change this color„  'NEXT„  'PALETTE USING Pal&„„DO„  DO„    CALL MakeStar                         '2 calls = twice the stars„    CALL MakeStar„„    CALL DisplayStars„    Ky$ = INKEY$„  LOOP UNTIL LEN(Ky$)„„  SELECT CASE ASC(Ky$)„    CASE 43                               'ASC("+")„      IF WarpSpeed < MaxWarp THEN WarpSpeed = WarpSpeed + 1„    CASE 45                               'ASC("-")„      IF WarpSpeed > 0 THEN WarpSpeed = WarpSpeed - 1„    CASE ELSE„      EXIT DO„  END SELECT„LOOP„SCREEN 0, 0, 0„„SUB DisplayStars STATIC                   'Draws all of the stars„„  FOR Num = 1 TO MaxStars„    IF Star(Num).Z <> 0 THEN              'Is this star alive?„      'Erase the star from its previous coordinates„      PSET (Star(Num).OldX, Star(Num).OldY), 0„„      IF Star(Num).Z < MinZpos THEN„        Star(Num).Z = 0                   'Kill this star„        NumActive = NumActive - 1„      ELSE„        'Multiply by 256 and center it on the screen„        Y = (Star(Num).Y * 256&) \ Star(Num).Z + (ScreenHeight \ 2)„„        IF Y >= ScreenHeight THEN„          Star(Num).Z = 1                 'Star will get erased the„          GOTO Continue                   ' next time through„        END IF„        Star(Num).OldY = Y                'Save coordinate„„        'Multiply by 256 and center it on the screen„        X = (Star(Num).X * 256&) \ Star(Num).Z + (ScreenWidth \ 2)„        IF X >= ScreenWidth THEN„          Star(Num).Z = 1                 'Star will get erased the„          GOTO Continue                   ' next time through„        END IF„        Star(Num).OldX = X                'Save coordinate„„        'Calculate the color„        Colr = Star(Num).Colr + (Star(Num).Z \ 256)„        PSET (X, Y), Colr„        'Move the stars inward at WarpSpeed„        Star(Num).Z = Star(Num).Z - WarpSpeed„„      END IF„    END IF„Continue:„  NEXT„„END SUB„„SUB MakeStar STATIC   'Finds an available slot for a star & puts it there„„  IF NumActive < MaxStars THEN            'Search for 1st available slot„„    FOR Num = 1 TO MaxStars„      IF Star(Num).Z = 0 THEN             'Is this slot empty?„„        'Random starting coordinates„        Star(Num).Y = ((RND * NumRnds) - (NumRnds \ 2)) * 8„        Star(Num).X = ((RND * NumRnds) - (NumRnds \ 2)) * 8„„        Star(Num).Z = MaxZpos             'Reset Zpos to the max„        NumActive = NumActive + 1         'Increase the counter„„        'Increase the color counter„        CIndex = (CIndex MOD NumColors) + 1„        Star(Num).Colr = 16 * CIndex      'Select a color„„      END IF„    NEXT„  END IF„„END SUB„Timothy Culberson              VGA PAINT                      culberson@itchy.mis.nb.ca      04/95 (00:00)          QB, PDS                392  8724     QBPAINT.BAS 'I know this code is extremely messy and makes absoloutely no sense to anyone,„'But it was originally programmed for only myself. „„„'-----------------------------------Documentation starts here--------------„'VGA Paint„'By„'Timothy culberson„'For QBasic programmers„'April, 1995„'Complete documentation„„'Welcome Quick Basic programmer to the painting program made in Quick Basic.„„'This Program will allow you to paint neat logos and graphics you can use with„'your BASIC programs using the Bsave and Bload commands in Basic.  Actually, it„'won't allow you to do much of anything, but anyways...here it is.„„'How does it work?„„'The drawing screen:„'This is where you'll be painting in.  It is an area 150 pixels by 120 pixels.„„'The NEW button:„'This will clear the whole drawing screen„„'The QUIT button:„'This quits the program„„'The COLOR button:„'This changes the color.  The color is shown along the palette bar at the„'bottom of the screen and the box outline at the bottom of the screen.„'The left mouse button advances the color and the right mouse button decreases„'the color along the palette bar.„„'The SAVE button:„'This button will save your waork with the extension .RAD„„'The LOAD button:„'This button will load a previously saved work with the extension .RAD„„'The SQUARE button:„'This button will change the size of the drawing square.  The left mouse„'button will increase the size and the right mouse button will decrease the„'size.  The size is shown at the bottom of the square.„„„'How to Bload your work in your Qbasic programs....the source code:„„'Loading you program from memory is very easy.„'1] Create a drawing in VgaPaint„'2] Place the source code into your QB program wherever you want it.„'3] Watch the cool thing!„„'Source Code: how is it done?„„'SCREEN 13„'^^^^^^^^^^^^^^^„'This sets the graphic screen to 320/200 vga 256 colors.„„'DIM cub(1 TO 9000)„'DEF SEG = VARSEG(cub(1))„'BLOAD "c:\qb\" + "R5" + ".RAD", VARPTR(cub(1))„'             ^^^^^^       ^^^--->filename„'          Path of file„'DEF SEG„'^^^^^^^^^^^^„'This will load it up.„'PUT (80, 25), cub, PSET„'^^^^^^^^^^^^^^^^^^^^^^^^^^^^^„'This line will put the graphic at desired X,Y coordinates.„„„'And that's it.„„'E -mail:„'culberson@mis.nb.ca„'------------------------------Code starts here-------------------------------„STARTUP:„DECLARE SUB ENDPROGRAM ()„DECLARE SUB SAVE ()„DECLARE SUB LOAD ()„DECLARE SUB NEWSCREEN ()„DECLARE SUB ARROW ()„DECLARE SUB DRAWSCREEN ()„REM $INCLUDE: 'QB.BI'„DIM SHARED REGX  AS RegTypeX„DIM SHARED COL„DIM SHARED RAD„DIM SHARED RADI, SPD„CLS„SCREEN 13„CALL DRAWSCREEN„„„YO:„„REGX.ax = 15„CALL INTERRUPTX(&H33, REGX, REGX)„REGX.cx = 16„REGX.dx = 16„CALL INTERRUPTX(&H33, REGX, REGX)„REGX.ax = 1„CALL INTERRUPTX(&H33, REGX, REGX)„REGX.ax = 3„CALL INTERRUPTX(&H33, REGX, REGX)„A$ = INKEY$„IF A$ = CHR$(27) THEN END„IF REGX.cx / 2 > 150 THEN GOTO ODA„IF REGX.dx > 120 THEN GOTO ODA„„SQ:„IF REGX.cx / 2 < 150 AND REGX.dx < 120 AND REGX.cx / 2 > 0 AND REGX.dx > 0 AND REGX.bx = 1 THEN„LINE (REGX.cx / 2, REGX.dx)-(REGX.cx / 2 - SS, REGX.dx - SS), COL, BF„END IF„„CALL INTERRUPTX(&H33, REGX, REGX)„GOTO YO„„ODA:„'LINE (160, 0)-(220, 30), 32, B„IF REGX.cx / 2 > 160 AND REGX.dx > 0 AND REGX.cx / 2 < 220 AND REGX.dx < 30 AND REGX.bx = 1 THEN„COL = COL + 1„COLOR 15: PSET (COL, 194): CALL ARROW: COLOR 0: PSET (COL - 1, 194): CALL ARROW„IF COL > 255 THEN COL = 255„FOR DELAY = 1 TO 600: NEXT DELAY„COLOR COL„END IF„„'LINE (160, 0)-(220, 30), 32, B„IF REGX.cx / 2 > 160 AND REGX.dx > 0 AND REGX.cx / 2 < 220 AND REGX.dx < 30 AND REGX.bx = 2 THEN„COL = COL - 1„COLOR 15: PSET (COL, 194): CALL ARROW: COLOR 0: PSET (COL + 1, 194): CALL ARROW„FOR DELAY = 1 TO 600: NEXT DELAY„IF COL < 0 THEN COL = 0„COLOR COL„END IF„„„„'NEW TOOL„'LINE (250, 0)-(285, 20), 32, B„IF REGX.cx / 2 > 160 AND REGX.dx > 25 AND REGX.cx / 2 < 220 AND REGX.dx < 45 AND REGX.bx = 1 THEN„LINE (0, 0)-(150, 120), 0, BF„LINE (0, 0)-(150, 120), 15, B„END IF„„'SAVE TOOL„'LINE (225, 25)-(285, 45), 32, B„IF REGX.cx / 2 > 225 AND REGX.dx > 25 AND REGX.cx / 2 < 285 AND REGX.dx < 45 AND REGX.bx = 1 THEN CALL SAVE„„'LOAD TOOL„'LINE (160, 50)-(220, 70), 32, B„IF REGX.cx / 2 > 160 AND REGX.dx > 50 AND REGX.cx / 2 < 220 AND REGX.dx < 70 AND REGX.bx = 1 THEN GOTO WHATINTHEHECK„„'SQUARE SIZE TOOL„'LINE (225, 50)-(285, 70), 32, B„IF REGX.cx / 2 > 225 AND REGX.dx > 50 AND REGX.cx / 2 < 285 AND REGX.dx < 70 AND REGX.bx = 1 THEN„SS = SS + 1„IF SS > 10 THEN SS = 10„FOR DELAY = 1 TO 700: NEXT DELAY„END IF„„IF REGX.cx / 2 > 225 AND REGX.dx > 50 AND REGX.cx / 2 < 285 AND REGX.dx < 70 AND REGX.bx = 2 THEN„SS = SS - 1„IF SS < 1 THEN SS = 1„FOR DELAY = 1 TO 700: NEXT DELAY„'LOCATE 10, 23: PRINT SS„END IF„„'QUIT...„'LINE (225, 0)-(285, 20), 32, B„IF REGX.cx / 2 > 225 AND REGX.dx > 0 AND REGX.cx / 2 < 285 AND REGX.dx < 20 AND REGX.bx = 1 THEN CALL ENDPROGRAM„„'color and SQUARE STATUS...„LINE (250, 170)-(290, 190), COL, B„LOCATE 23, 33: COLOR 32: PRINT SS„„HMM:„CALL INTERRUPTX(&H33, REGX, REGX)„GOTO YO„„„WHATINTHEHECK:„ON ERROR GOTO fIxerIT„DIM cub(1 TO 9000)„DEF SEG = VARSEG(cub(1))„LOCATE 17, 1„INPUT "FILENAME(8 CHARACTERS MAX):", LOADER$„IF LOADER$ = "" THEN GOTO PARTYBASHCRASH„BLOAD LOADER$ + ".RAD", VARPTR(cub(1))„CONST badfilename = 53„PUT (0, 0), cub, PSET„DEF SEG„PARTYBASHCRASH:„LOCATE 17, 1: PRINT "                                      "„LINE (0, 0)-(150, 120), 15, B„fIxerIT:„IF ERR = badfilename THEN„LOCATE 17, 1: PRINT "                                                      "„END IF„GOTO HMM„„SUB ARROW„DRAW "D2U3R1L2RU"„END SUB„„SUB CIRCLES„'***************DRAWING AREA****************AND DRAWING TOOL„IF REGX.cx / 2 < 147 AND REGX.dx < 117 AND REGX.cx / 2 > 2 AND REGX.dx > 2 AND REGX.bx = 1 THEN„CALL INTERRUPTX(&H33, REGX, REGX)„CIRCLE (REGX.cx / 2 - RAD, REGX.dx - RAD), RADI„END IF„END SUB„„SUB DRAWSCREEN„LINE (0, 0)-(150, 120), 15, B„'***************************PALLETTE„LOCATE 17, 1„FOR X = 0 TO 255„COLOR X„PSET (X, 170)„DRAW "D20"„NEXT X„„'***************************DRAW BUTTONS**************************************„'COLOR BUTTON„LINE (160, 0)-(220, 20), 32, B„COLOR 15„LOCATE 2, 22: PRINT "COLOR"„„'NEW BUTTON„LINE (160, 25)-(220, 45), 32, B„LOCATE 5, 23: PRINT "NEW"„„„'save button draw„LINE (225, 25)-(285, 45), 32, B„LOCATE 5, 31: PRINT "SAVE"„„'LOAD IT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!„LINE (160, 50)-(220, 70), 32, B„LOCATE 8, 23: PRINT "LOAD"„'SQUARE SIZE BUTTON DRAW„LINE (225, 50)-(285, 70), 32, B„LOCATE 8, 30: PRINT "SQUARE"„„'QUIT BUTTON DRAW„LINE (225, 0)-(285, 20), 32, B„LOCATE 2, 31: PRINT "QUIT"„„„„END SUB„„SUB ENDPROGRAM„SCREEN 12: SCREEN 13„FOR X = 1 TO 55„PALETTE X, X„COLOR X„PSET (X, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 50, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 100, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 150, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 200, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 250, 33)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 300, 33)„DRAW "D10"„NEXT X„„„FOR X = 1 TO 55„PALETTE X, X„COLOR X„PSET (X, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 50, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 100, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 150, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 200, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 250, 93)„DRAW "D10"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X„COLOR X„PSET (X + 300, 93)„DRAW "D10"„NEXT X„„FOR X = 1 TO 55„PALETTE X, X * 65536„COLOR X„LOCATE 10, 16: PRINT "Apoky!"„NEXT X„„FOR X = 55 TO 1 STEP -1„PALETTE X, X * 256„COLOR X„LOCATE 10, 16: PRINT "Apoky!"„NEXT X„„SLEEP 10„„END„END SUB„„SUB NEWSCREEN„LINE (0, 0)-(150, 120), 0, BF„LINE (0, 0)-(150, 120), 15, B„END SUB„„SUB SAVE„DIM Cube(1 TO 9999)„LOCATE 17, 1„INPUT "FILENAME(8 CHARACTERS MAX):", SAVIT$„IF SAVIT$ = "" THEN GOTO YEEEE:„GET (0, 0)-(150, 120), Cube„DEF SEG = VARSEG(Cube(1))„BSAVE SAVIT$ + ".RAD", VARPTR(Cube(1)), 25000„DEF SEG„YEEEE:„LOCATE 17, 1: PRINT "                                         "„LINE (0, 0)-(150, 120), 15, B„END SUB„„Dave Navarro, Jr.              PB PLASMA                      comp.lang.basic.misc           02-23-96 (20:23)       PB                     208  5563     PBPLASMA.BAS'PBPLASMA converted from Pascal by unknown CompuServe author„'„'Minor enhancements by Dave Navarro, Jr:„'  Integers are faster than bytes.„'  Integer divide (\) is faster than floating point divide (/).„'  I experimented with changing Rough! to fixed point BCD and„'  got some really strange results when playing with FIXDIGITS.„„$optimize speed„$float procedure     'use fast math„$lib all off         'you don't need any„„defint a-z„„Max.x=319„Max.y=199        'screen size„Max.color=255    'number of colors to use„Rough!=2         'how "rough" you want the plasma to be.„„TYPE RGBType„  R AS BYTE„  G AS BYTE„  B AS BYTE„END TYPE„„DIM PAL(512) as RGBType„„SHARED Max.x, Max.y, Rough!, Max.color, pal()„„EXIT FAR AT Finish„„IF ISFALSE IsVGA% THEN Print "No VGA found":END„„randomize timer„„Mode13Set„„MakePalette             'build a smooth palette„„Set13pixel 0, 0, (rnd*Max.color)+1          'set the corners„Set13pixel 0, Max.Y, (rnd*Max.color)+1„Set13pixel Max.x, 0, (rnd*Max.color)+1„Set13pixel Max.x, Max.Y, (rnd*Max.color)+1„„'use Set13Pixel to plant "seed" pixels here, if wanted„„t#=timer„Splitbox 0, 0, Max.x, Max.y„t#=timer-t#„„ropal                    'rotate the palette„„finish:„ textmode„ cls„ print t#„end„„„„SUB Splitbox (x1, y1, x2, y2)            'this is the main subroutine„                                         '„  if (x2-x1<2) and (y2-y1<2) then exit sub„  if instat then exit far         'any key quits program„  x=(x1+x2)\2„  y=(y1+y2)\2„  Newcolor x1, y1, x, y1, x2, y1„  Newcolor x2, y1, x2, y, x2, y2„  Newcolor x1, y2, x, y2, x2, y2„  Newcolor x1, y1, x1, y, x1, y2„  if get13pixel(x,y) = 0 then„    colour = „(get13pixel(x1,y1)+get13pixel(x2,y1)+get13pixel(x2,y2)+get13pixel(x1,y2))\4„      if colour < 1 then colour = 1„      if colour > Max.color then colour = Max.color„      Set13pixel x, y, colour„  end if„  Splitbox x1, y1, x, y„  Splitbox x, y1, x2, y„  Splitbox x, y, x2, y2„  Splitbox x1, y, x, y2„END SUB„„SUB Newcolor (xa, ya, x, y, xb, yb)       'puts a new color based on „average„                                          'of surrounding pixels plus a„                                          'random value„  if get13pixel(x,y) <> 0 then exit sub„  avg = Abs(xa-xb)+Abs(ya-yb)„  colour = (get13pixel(xa,ya)+get13pixel(xb,yb))\2 + ((rnd-0.5) * avg * „rough!)„  if colour < 1 then colour = 1„  if colour > Max.color then colour = Max.color„  Set13Pixel x, y, colour„END SUB„„SUB Makepalette      'this builds a 255 smooth color palette„                     'note it does nothing with color 0„                     'I didn't want the boarder to change.„                     'this loads an array with 511 RGB values.„„  for c% = 1 to 63     'from red to yellow, start with one„    cn%=63-c%„    PAL(c%).R = 63„    PAL(c%).G = c%„    PAL(c%).B = 0„  next c%„  for c% = 0 to 63„    cn%=63-c%„    ci%=c%+64„    PAL(ci%).R = cn%    'yellow to blue„    PAL(ci%).G = cn%„    PAL(ci%).B = c%„  next c?„  for c = 0 to 63„    cn%=63-c%„    ci%=c%+128„    PAL(ci%).R = 0„    PAL(ci%).G = c„    PAL(ci%).B = 63      'blue to cyan(blue and green)„  next c„  for c = 0 to 63„    cn%=63-c%„    ci%=c%+192„    PAL(ci%).R = c       'cyan to red„    PAL(ci%).G = cn?„    PAL(ci%).B = cn?„  next c?„„  for c = 1 to Max.color           'copy array to second half„    col? = PAL(c).R„    PAL(c+Max.color).R = col?„    col? = PAL(c).G„    PAL(c+Max.color).G = col?„    col? = PAL(c).B„    PAL(c+Max.color).B = col?„  next c„  for x = 1 to Max.color             'actual VGA palette setting code„    out &h3c8,x                'attribute   from red to yellow„    out &h3c9, PAL(x).R        'red?„    out &h3c9, PAL(x).G        'green?„    out &h3c9, PAL(x).B        'blue?„  next x„END SUB„„SUB RoPal         'this "rotates" the palette for animation„                  'rather than moving the RGB data, I build two„                  'copies, and loop through both.„do„for i = 0 to Max.color„  for x = 1 to Max.color„    if instat then exit far         'any key quits program„    out &h3c8,x                  'attribute„    out &h3c9, PAL(x+i).R        'red?„    out &h3c9, PAL(x+i).G        'green?„    out &h3c9, PAL(x+i).B        'blue?„  next x?„next i„loop                           'loop until quit„END SUB„„FUNCTION IsVGA%                'test for VGA„  ' Function: returns VGA status„  IsVGA% = bit(pbvScrnCard,5)„END FUNCTION„„SUB Mode13Set    'set 320x200 256 color mode„ ! mov ax,&h13„ ! int &h10„END SUB„„SUB TextMode     'sets text mode, resets palette„ ! mov ax,3„ ! int &h10„END SUB„„„SUB Set13Pixel (BYVAL X%, BYVAL Y%, BYVAL Colr%)„               'fast pixel plot„  ! mov ax,&hA000„  ! mov es,ax        ;es = VGA graphics memory„  ! mov cx,X%„  ! mov dx,Y%„  ! mov al,Byte Ptr Colr%„  ! xchg dl,dh       ;dx= y*256„  ! mov di,dx„  ! shr di,1„  ! shr di,1         ;di=y*64„  ! add di,dx        ;di=y*320„  ! add di,cx        ;di=y*320+x, i.e. pixel address„  ! mov es:[di],al   ;put pixel in VGA memory„END SUB„„FUNCTION Get13Pixel% (BYVAL X%, BYVAL Y%)„  ! mov ax,&hA000„  ! mov es,ax        ;es = VGA graphics memory„  ! mov cx,X%„  ! mov dx,Y%„  ! xchg dl,dh       ;dx= y*256„  ! mov di,dx„  ! shr di,1„  ! shr di,1         ;di=y*64„  ! add di,dx        ;di=y*320„  ! add di,cx        ;di=y*320+x, i.e. pixel address„  ! mov al,es:[di]   ;get pixel from VGA memory„  ! xor ah, ah„  ! mov FUNCTION,al„END FUNCTION„Douglas H. Lusher              VERTICAL RETRACE ANIMATION     FidoNet QUIK_BAS Echo          02-12-96 (00:00)       QB, QBasic, PDS        119  3858     ANIMATE.BAS  'Demo of 16 color animation in SCREEN 13„ 'by Douglas H. Lusher, 02-12-1996„„ 'Here is one method of producing animation in SCREEN 13.„ 'Use color values of 0 - 15 for the object which you wish„ 'to animate. In this demo, these values correspond to the„ 'standard 16 text-mode VGA colors. You can, in fact, sub-„ 'stitute any colors you wish by placing them in the elements„ 'of the Culler&() array and eliminating the loop where„ 'the standard colors are read from the palette. Your sixteen„ 'background colors will be: 0, 16, 32, 48, 64, ...240. These„ 'values will produce the same colors as the value divided„ 'by 16. Thus you have the same 16 colors available for the„ 'background as you do for your sprite.„„ DECLARE FUNCTION ImageSize% (X1%, Y1%, X2%, Y2%)„ DECLARE SUB GPrint (X%, Y%, Culler%, Text$)„„ DEFINT A-Z„ SCREEN 13„ DIM Culler&(15)„„ 'get the palette values for the standard 16 colors„ FOR C% = 0 TO 15„  OUT &H3C7, C%„  R% = INP(&H3C9)„  G% = INP(&H3C9)„  B% = INP(&H3C9)„  Culler&(C%) = 65536 * B% + 256 * G% + R%„ NEXT„„ 'specify the palette values needed for animation„ FOR C% = 16 TO 255 STEP 16„  PALETTE C%, Culler&(C% \ 16)„  FOR X% = 1 TO 15„    PALETTE C% + X%, Culler&(X%)„  NEXT„ NEXT„„ 'create the object to animate„ Bytes% = ImageSize%(0, 0, 15, 15)„ REDIM Object%(Bytes% \ 2)„ FOR X% = 0 TO 15„  LINE (3, X%)-(12, X%), X, BF„ NEXT„ GET (0, 0)-(15, 15), Object%„„ 'create a background.„ 'the numbers displayed are the color numbers to use for the„ '   background colors.„ CLS„ FOR X% = 0 TO 15„  LINE (X% * 20, 0)-((X% + 1) * 20 - 1, 199), X% * 16, BF„ NEXT„ FOR X% = 0 TO 15„  CALL GPrint(X% * 20, (X% MOD 2) * 8 + 1, 0, LTRIM$(STR$(X% * 16)))„ NEXT„„ X% = 100: Y% = 100„ PUT (X%, Y%), Object%„MainLoop:„  DO: IK$ = INKEY$: LOOP UNTIL LEN(IK$)„  IK% = ASC(IK$): IF IK% = 0 THEN IK% = -ASC(MID$(IK$, 2, 1))„  OldX% = X%: OldY% = Y%„  SELECT CASE IK%„    CASE 27                              'ESC was pressed„      SCREEN 0: WIDTH 80: END„    CASE -71, 55                         'Home or 7„      IF X% > 0 AND Y% > 0 THEN X% = X% - 1: Y% = Y% - 1„    CASE -72, 56                         'Up arrow or 8„      IF Y% > 0 THEN Y% = Y% - 1„    CASE -73, 57                         'Page up or 9„      IF X% < 304 AND Y% > 0 THEN X% = X% + 1: Y% = Y% - 1„    CASE -75, 52                         'Left arrow or 4„      IF X% > 0 THEN X% = X% - 1„    CASE -77, 54                         'Right arrow or 6„      IF X% < 304 THEN X% = X% + 1„    CASE -79, 49                         'End or 1„      IF X% > 0 AND Y% < 184 THEN X% = X% - 1: Y% = Y% + 1„    CASE -80, 50                         'Down arrow or 2„      IF Y < 184 THEN Y% = Y% + 1„    CASE -81, 51                         'Page down or 3„      IF X% < 304 AND Y% < 184 THEN X% = X% + 1: Y% = Y% + 1„    CASE ELSE„      BEEP: GOTO MainLoop„  END SELECT„  WAIT &H3DA, 8„  PUT (OldX, OldY), Object%„  PUT (X, Y), Object%„ GOTO MainLoop„„ SUB GPrint (X%, Y%, Culler%, Text$)„ 'this routine allows printing text at any pixel location„ '      in the graphics modes without disturbing the background„ 'by Douglas H. Lusher„ DEF SEG = &HFFA6        ' ROM segment for character shape table„ XX% = X%„ FOR Char% = 1 TO LEN(Text$)„  Addr% = 8 * ASC(MID$(Text$, Char%, 1)) + 14„  FOR Ln% = 0 TO 7„    LineFormat% = CVI(CHR$(0) + CHR$(PEEK(Addr% + Ln%)))„    YY% = Y% + Ln%„    LINE (XX%, YY%)-(XX% + 7, YY%), Culler%, , LineFormat%„  NEXT„  XX% = XX% + 8„ NEXT„ DEF SEG„ END SUB„„ FUNCTION ImageSize% (X1%, Y1%, X2%, Y2%)„ ' Width of the image„ X% = ABS(X2% - X1%) + 1„ ' Height of the image„ Y% = ABS(Y2% - Y1%) + 1„ ' Size of the image in bytes.„ ImageSize% = (((X% * 8) + 7) \ 8) * Y% + 4„ ' The above formula has been simplified for SCREEN 13„ END FUNCTION„„Peter Cooper                   SVGA IN BASIC                  comp.lang.basic.misc           02-25-96 (14:06)       QB, PDS, VBDOS         80   2831     SVGA.BAS    '<Someone's address>  (or similar) was asking for code that would go into„'800x600x256 col mode. People suggested tricking the card or going and getting„'libraries (maybe shareware - which you have to pay for remember)„'Well if you have no money then you need this code I just wrote. It goes into„'800x600x256 col mode on most cards. It works in QuickBasic 4.5, VBDOS and„'PDS7.0+.1 . You should load it  by going:   QB /L   or VBDOS /L  or QBX /L„'to enable interrupts. Then run this code:„„'$INCLUDE: 'qbx.bi'             'change to QB.BI for QB4.5„„DIM SHARED inregs AS RegType„DIM SHARED outregs AS RegType„„SCREEN 0„CLS„COLOR 15„PRINT "SVGA in Basic by Peter Cooper"„COLOR 12„PRINT "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"„PRINT "I will not be held responsible for any malfunctions in this source. It has"„PRINT "been tested on a Trident and a Vesa card. If it doesnt work then wait about"„PRINT "10 seconds and then press SPACE. It should return to normal."„PRINT„PRINT "If all of your text goes monochrome then please turn off the machine and"„PRINT "restart."„COLOR 7„PRINT„PRINT "1 - Trident card   - 800x600x256cls"„PRINT "2 - VESA(or unsure)- 800x600x16cls"„PRINT "3 - Tseng          - 800x600x256cls"„PRINT "4 - ATI            - 800x600x256cls"„a$ = INPUT$(1)„IF a$ < "1" OR a$ > "4" THEN SYSTEM„a% = VAL(a$)„IF a% = 1 THEN m% = &H5E„IF a% = 2 THEN m% = &H6A„IF a% = 3 THEN m% = &H30„IF a% = 4 THEN m% = &H63„„„inregs.ax = m%                                       ' Set for screen mode„CALL Interrupt(&H10, inregs, outregs)                ' Change mode„FOR y% = 1 TO 480 STEP 9                             ' go down in intervals„	FOR x% = 1 TO 640                            ' Go all-way cross screen„		inregs.ax = &HC0D                    ' set up function+color„		inregs.bx = 1                        ' select page 1„		inregs.cx = x%                       ' select x coord„		inregs.dx = y%                       ' select y coord„		CALL Interrupt(&H10, inregs, outregs)' set pixel„	NEXT x%„NEXT y%„„inregs.ax = &H200                                    ' This sets cursor pos„inregs.bx = &H100„inregs.dx = &H505„CALL Interrupt(&H10, inregs, outregs)                ' call interrupt„„inregs.ax = &HA48                                    ' this writes chars„inregs.bx = &H10E„inregs.cx = 20„CALL Interrupt(&H10, inregs, outregs)                ' call interrupt„„a$ = INPUT$(1)„„inregs.ax = &H3                                      ' change back to text mode„CALL Interrupt(&H10, inregs, outregs)                ' call interrupt„„CLS„„SUB mousecommand (ax%, bx%, cx%, dx%)„inregs.ax = ax%„inregs.bx = bx%„inregs.cx = cx%„inregs.dx = dx%„CALL Interrupt(&H33, inregs, outregs)„ax% = outregs.ax„bx% = outregs.bx„cx% = outregs.cx„dx% = outregs.dx„END SUB„Earl L. Montgomery             320X400 SCREEN MODE            FidoNet QUIK_BAS Echo          02-23-96 (17:48)       QB, QBasic, PDS        93   3408     320X400.BAS 'The following post is a program I wrote called 320X400.BAS. It demonstrates„'how to set up SCREEN 13 320X400X256 mode. It is bare bones. No save or load„'routines, other than the routine that saves the screen prior to displaying the„'HELP menu.If you want to expand on this program please do so! Press H once the„'program is started for the HELP menu.„„setmode:„ 'Sets SCREEN 13 to the 320X400X256 mode„ SCREEN 13: DEF SEG = &HA000„ KEY(10) ON„ ON KEY(10) GOSUB endofprogram„ OUT &H3D4, 9: OUT &H3D5, &H40: OUT &H3D4, 20: OUT &H3D5, 0: OUT &H3D4, 23„ OUT &H3D5, &HE3: OUT &H3C4, 4: OUT &H3C5, &H6„ OUT &H3C4, 2: OUT &H3C5, 15: CLS : 'rem this clears (CLS) all 4 planes„ IF flag$ = "restart" THEN GOTO loadtemp„ OUT &H3C4, 2: OUT &H3C5, 1„begin:„ position% = 15318: c = 15: plane% = 1: OUT &H3C4, 2: OUT &H3C5, 1„restart:„ flag$ = ""„ POKE position%, c„waitkey1:„ i$ = INKEY$: IF i$ = "" THEN GOTO waitkey1„ i$ = UCASE$(i$)„ keycode% = CVI(i$ + CHR$(0))„ IF keycode% = 19712 THEN GOTO moveright„ IF keycode% = 19200 THEN GOTO moveleft„ IF keycode% = 18432 THEN GOTO moveup„ IF keycode% = 20480 THEN GOTO movedown„ IF i$ = "C" THEN GOTO changecolor„ IF i$ = "H" THEN GOTO helpscreen„ IF i$ = "X" THEN GOTO clearscreen„ GOTO waitkey1„moveright:„ IF plane% = 1 THEN OUT &H3C4, 2: OUT &H3C5, 2: plane% = 2: GOTO pokescrn„ IF plane% = 2 THEN OUT &H3C4, 2: OUT &H3C5, 4: plane% = 4: GOTO pokescrn„ IF plane% = 4 THEN OUT &H3C4, 2: OUT &H3C5, 8: plane% = 8: GOTO pokescrn„ IF plane% = 8 THEN OUT &H3C4, 2: OUT &H3C5, 1: plane% = 1: position% = position% + 1„pokescrn: IF position% > 31999 THEN position% = 31999„ POKE position%, c„ GOTO waitkey1„moveleft:„ IF plane% = 1 THEN OUT &H3C4, 2: OUT &H3C5, 8: plane% = 8: position% = position% - 1: GOTO doit„ IF plane% = 2 THEN OUT &H3C4, 2: OUT &H3C5, 1: plane% = 1: GOTO doit„ IF plane% = 4 THEN OUT &H3C4, 2: OUT &H3C5, 2: plane% = 2: GOTO doit„ IF plane% = 8 THEN OUT &H3C4, 2: OUT &H3C5, 4: plane% = 4:„doit:„ IF position% < 0 THEN position% = 0„ POKE position%, c„ GOTO waitkey1„moveup:„ position% = position% - 80„ IF position% < 0 THEN position% = position% + 80„ POKE position%, c„ GOTO waitkey1„movedown:„ position% = position% + 80„ IF position% > 32000 THEN position% = position% - 80„ POKE position%, c„ GOTO waitkey1„changecolor:„ c = c + 1„ IF c > 255 THEN c = 0„ POKE position%, c„ GOTO waitkey1„ GOTO waitkey1„helpscreen:„ 'Saving screen before switching to SCREEN 9 and the HELP MENU„ DEF SEG = &HA000„ OUT &H3CE, 4: OUT &H3CF, 0: BSAVE "temp1.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 1: BSAVE "temp2.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 2: BSAVE "temp3.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 3: BSAVE "temp4.bin", 0, 32000„ SCREEN 9: CLS„ PRINT "Key             Function"„ PRINT "Use arrow keys to move cursor"„ PRINT "C               Changes current color"„ PRINT "F10             Exit Program "„ PRINT "H               Help (This Screen)"„waitkey2:„ i$ = INKEY$: IF i$ = "" THEN GOTO waitkey2„ CLS : flag$ = "restart": GOTO setmode„loadtemp:„ OUT &H3C4, 2: OUT &H3C5, 1: BLOAD "temp1.bin"„ OUT &H3C4, 2: OUT &H3C5, 2: BLOAD "temp2.bin"„ OUT &H3C4, 2: OUT &H3C5, 4: BLOAD "temp3.bin"„ OUT &H3C4, 2: OUT &H3C5, 8: BLOAD "temp4.bin"„ GOTO restart„clearscreen:„ OUT &H3C4, 2: OUT &H3C5, 15: CLS : GOTO begin„endofprogram:„ SCREEN 0: CLS : DEF SEG : END„„Thomas Gohel                   SCROLLING OVER VGA-BIOS        alt.lang.basic                 03-03-96 (00:00)       PB                     84   2264     VGASCROL.BAS'**************************************************************************„'„'   Scrolling Windows over VGA-BIOS in PowerBASIC 3.0/3.2„'„'   entwickelt von / developed by   :  Thomas Gohel„'„'                           Fido    :  Thomas Gohel@2:2410/301.12„'                           InterNet:  author@pbsound.snafu.de„'                           Homepage:  http://www.snafu.de/~pbsound/„'„'**************************************************************************„„DIM Demo$(25)„Vordergrund% = 15„Hintergrund% = 1„„'*** Erkl‰rung ***„SHARED Zol%, Sol%, Zur%, Sur%, Anzahl%, ScrollFarbe%„„'Zol%    = Zeile oben links„'Sol%    = Spalte oben links„'Zur%    = Zeile unten rechts„'Sur%    = Spalte unten rechts„'Anzahl% = Anzahl der zu scrollenden Zeilen„„„'*** String f¸llen ***„Demo$(1) = "---------    Scrolling windows (over VGA-BIOS)   (c) 1994 Thomas Gohel    ----------"„FOR i% = 2 TO 25„    Demo$(i%) = STRING$(80,65+i%)„NEXT i%„„'*** String auf Bildschirm ausgeben ***„COLOR VorderGrund%, Hintergrund%„FOR i% = 1 TO 25„    LOCATE i%,1: PRINT Demo$(i%);„NEXT i%„„'*** jetzt wird gescrollt ****„„FOR i% = 1 TO 11„    DELAY 0.5„    ScrollFarbe% = Vordergrund% + (Hintergrund% * 16)„    ScrollingHoch     8, 10, 18, 35, 1, ScrollFarbe%„    ScrollingHerUnter 8, 47, 18, 72, 1, ScrollFarbe%„    LOCATE 18, 10: PRINT "  --- Scrolling Hoch ---  "„    LOCATE  8, 47: PRINT " -- Scrolling Herunter -- "„NEXT i%„„END„„FUNCTION ScrollingHoch(BYVAL Zol%, BYVAL Sol%, BYVAL Zur%, BYVAL Sur%, BYVAL Anzahl%, BYVAL ScrollFarbe%)„„        ! mov ah, &h06„        ! mov al, Anzahl%„        ! mov bh, ScrollFarbe%„        ! mov ch, Zol%„        ! dec ch„        ! mov cl, Sol%„        ! dec cl„        ! mov dh, Zur%„        ! dec dh„        ! mov dl, Sur%„        ! dec dl„        ! int &h10„„END FUNCTION„„FUNCTION ScrollingHerunter(BYVAL Zol%, BYVAL Sol%, BYVAL Zur%, BYVAL Sur%, BYVAL Anzahl%, ByVal ScrollFarbe%)„„        ! mov ah, &h07„        ! mov al, Anzahl%„        ! mov bh, ScrollFarbe%„        ! mov ch, Zol%„        ! dec ch„        ! mov cl, Sol%„        ! dec cl„        ! mov dh, Zur%„        ! dec dh„        ! mov dl, Sur%„        ! dec dl„        ! int &h10„„END FUNCTION„Chad Beck                      PAC-MAN SCREEN SAVER           Kevin Smith                    03-02-96 (00:00)       QB, QBasic, PDS        215  5578     PACSAVE.BAS ' > Here's...my PacMan Screen Saver....„„'     I love it!„„' > Anyone have any suggestions as to how I could make it any better?„„'     Yep.  This could still be much improved, but it's a start (>15K„'smaller than the original).  Hopefully you'll find it easier to read and„'modify too.  Enjoy!„„' ******************************************************************„' **  KEVIN SMITH  ********  PACMAN.BAS  *********  JAN 14, 1996  **„' ******************************************************************„' **  PURPOSE:  TO CREATE A PAC-MAN SCREEN SAVER THAT WILL GO IN  **„' **            ALL FOUR DIRECTIONS INSTEAD OF ONLY ONE USING     **„' **            DATA FILES INSTEAD OF REDRAWING ALL THE GRAPHICS  **„' **            EACH TIME THE PROGRAM IS RUN.                     **„' ******************************************************************„'                       Optimized by CHuRL 3-2-96„„DEFINT A-Z                                'Use integers only„„CONST ArraySize = 242, NumGraphics = 21„CONST Delay = 700                         'Set the delay once„CONST True = -1, False = NOT True„DIM Graphic(0 TO ArraySize * NumGraphics)„„SCREEN 7„CLS„RANDOMIZE TIMER„„'GOSUB MakeData                            '!!!„„DEF SEG = VARSEG(Graphic(0))„ON ERROR GOTO MakeData„  BLOAD "Pacman.DAT", VARPTR(Graphic(0))„ON ERROR GOTO 0                           'I promise it won't crash„                                          ' from here on...„Direction = 1„X = 160„Y = 100„DO„  IF Turns > NumTurns THEN„    Turns = 0„    Direction = INT(RND * 4)„    NumTurns = INT(RND * 7) + 2„  END IF„  SELECT CASE Direction„    CASE 0: GOSUB Right„    CASE 1: GOSUB Left„    CASE 2: GOSUB Down: Y = 199 - Y - 19„    CASE ELSE: GOSUB Up„  END SELECT„  Turns = Turns + 1„LOOP UNTIL INKEY$ = CHR$(27)              'Continue until ESC pressed„SCREEN 0„WIDTH 80„END„„Right:„  FOR Frame = 0 TO 6„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF X < 295 THEN X = X + 1„  NEXT„  FOR Frame = 6 TO 0 STEP -1„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF X < 295 THEN X = X + 1„  NEXT„  IF X = 295 THEN NumTurns = 0„  RETURN„„Left:„  FOR Frame = 7 TO 13„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF X > 0 THEN X = X - 1„  NEXT„  FOR Frame = 13 TO 7 STEP -1„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF X > 0 THEN X = X - 1„  NEXT„  IF X = 0 THEN NumTurns = 0„  RETURN„„Down:„  Y = 199 - Y - 19                        '19 = graphic height„  WINDOW (0, 0)-(319, 199)                'Inverse coordinates„Up:„  FOR Frame = 14 TO 20„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF Y > 0 THEN Y = Y - 1„  NEXT„  FOR Frame = 20 TO 14 STEP -1„    PUT (X, Y), Graphic(Frame * ArraySize), PSET„    FOR Stall = 0 TO Delay: NEXT„    IF Y > 0 THEN Y = Y - 1„  NEXT„  IF Y = 0 THEN NumTurns = 0„  WINDOW SCREEN (0, 0)-(319, 199)         'Return to normal„  RETURN„„MakeData:„  'Right Pac-People„  'SCREEN 7, , 1, 0                        '!!!„  FOR X = 1 TO 10„    CIRCLE (20, 20), X, 14„    CIRCLE (21, 20), X, 14„  NEXT X„  LINE (20, 14)-STEP(2, 1), 0, BF         'Sketch the eye„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 20), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 19), 0„  LINE (20, 20)-(31, 21), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 18), 0„  LINE (20, 20)-(31, 22), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 17), 0„  LINE (20, 20)-(31, 23), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 16), 0„  LINE (20, 20)-(31, 24), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(31, 15), 0„  LINE (20, 20)-(31, 25), 0„  GOSUB SaveGraphic„„  'Left Pac-People„  FOR X = 0 TO 10„    CIRCLE (20, 20), X, 14„    CIRCLE (21, 20), X, 14„  NEXT X„  LINE (20, 14)-STEP(2, 1), 0, BF         'Sketch the eye„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 20), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 19), 0„  LINE (20, 20)-(10, 21), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 18), 0„  LINE (20, 20)-(10, 22), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 17), 0„  LINE (20, 20)-(10, 23), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 16), 0„  LINE (20, 20)-(10, 24), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(10, 15), 0„  LINE (20, 20)-(10, 25), 0„  GOSUB SaveGraphic„„  'Up Pac-People„  FOR X = 1 TO 10„    CIRCLE (20, 20), X, 14„    CIRCLE (21, 20), X, 14„  NEXT X„  LINE (14, 19)-STEP(1, 2), 0, BF         'Sketch the eye„  GOSUB SaveGraphic„„  LINE (20, 20)-(20, 10), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(19, 10), 0„  LINE (20, 20)-(21, 10), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(18, 10), 0„  LINE (20, 20)-(22, 10), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(17, 10), 0„  LINE (20, 20)-(23, 10), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(16, 10), 0„  LINE (20, 20)-(24, 10), 0„  GOSUB SaveGraphic„„  LINE (20, 20)-(15, 10), 0„  LINE (20, 20)-(25, 10), 0„  GOSUB SaveGraphic„„  'SCREEN 7, , 0                           '!!!„  'RETURN                                  '!!!„„  SCREEN 0„  WIDTH 80„  PRINT "CREATING DATA FILE... PLEASE WAIT"„  DEF SEG = VARSEG(Graphic(0))„    BSAVE "Pacman.DAT", VARPTR(Graphic(0)), ArraySize * NumGraphics * 2„  PRINT "DATA FILE CREATED.  YOU MAY NOW RUN THIS PROGRAM AGAIN."„  END„„SaveGraphic:„  GET (9, 11)-(32, 29), Graphic(Offset)„  Offset = Offset + ArraySize„  RETURN„Tyler Barnes                   VESA SVGA SCREEN ROUTINES      FidoNet QUIK_BAS Echo          03-10-96 (00:43)       QB, PDS                341  12443    VESA.BAS    '                QuickBasic High Resolution Screen Routines„'„'                        By D. Tyler Barnes„'„'             Works(Hopefully) with any VESA compatible BIOS„'„'Intro„'~~~~~„'„'        Ok,first of all,I'm not as heavily in to QuickBasic programming as„'I used to be,so I was a bit lazy writing this. I left a LOT of room for„'improvement. Second of all,when I WAS in to QuickBasic programming, graphics„'was not a specialty. I was more in to communications. The point I'm trying„'to make,is that there may be code in this thing that is extraneous,and„'there may be ways to do what this code is doing a lot faster... Infact,I„'KNOW there are ways to make it faster... I'm using the BIOS Write Pixel„'command in all the graphics commands. It would be much faster done with direct„'writes to video memory.. I'll leave the improvements up to you.„'Just do me a favour and send me your changes so that next time I post this,„'others will recieve these changes. I'll put your name on your code,so don't„'worry about me stealing your credit...„'Oh,another weird thing I've done,is I've used InterruptX almost everywhere,„'even in places where INTERRUPT would've worked. As far as I know they are„'identical anyhow,'cept INTERRUPTX can use more registers... but perhaps„'I'm wrong. Perhaps INTERRUPT is faster or something. Go ahead and change it.„'„'How to use„'~~~~~~~~~~„'„'* Before doing anything,make sure you've loaded QuickBasic with the„'  /L switch.„'* Next detect whether or not the machine has VESA compatibility„'* Set the screen mode„'* Write the program here„'* Use the CleanUp command„'* End„'„'Commands:„'„'Border-This command is used when in text mode,and some graphic modes.„'         It has one integer parameter. Depending what screen mode you're in,„'         and what number you use,this will change the screen colour,the„'         border,both,or neither. Just mess around with it ...„'         Example Usage:Border 9„'         On my machine,the above will produce a light blue border when in„'         ScreenMode 3(Basic's SCREEN 0)„'Box-This command will not work in any text modes.(Obviously)„'      It has 5 parameters. 4 to define the box,and the last to define the„'      colour of the box.„'      Example Usage:Box 10,11,50,51,3„'      The above command would make a box with the left hand corner  on point„'      10,11(X,Y) and the bottom right hand corner on 50,51.„'      The last parameter is the colour and will have a different result„'      depending on your screen mode.„'CleanUp-This command is used to clean up after the ScreenMode command. It„'          should be run before you exit your program. Also,if you have„'          allready run ScreenMode once,and you want to change to a new„'          screen mode,you'll have to run this before doing so. Also,if you„'          want to stop using these routines,and use BASIC's routines instead,„'          and ScreenMode has allready been used in your program,you'll have„'          to run this before using BASIC's SCREEN command.„'          Example Usage:CleanUp„'CurVidMode-This function will return the current video mode. The number„'             returned will not always correspond with the number used in the„'             ScreenMode command,and will not always correspond with BASIC's„'             SCREEN mode. If you want to see what the number returned means,„'             look up AH=00,INT 10h in Ralf Brown's interrupt list.„'             Example Usage:A%=CurVidMode%„'LowHigh-Crappy way of seperating two seperate bytes from a word. If you„'          don't know what I'm talking about,don't worry about it. The only„'          reason I have this in here at all,is because there are other„'          routines in this source that depend on it.„'Pixel-This is like BASIC's PSET command. It plots one pixel on to the„'        display. There are three parameters. Two for the X,Y coordinates of„'        the dot,and one for the colour.„'        Example Usage:Pixel 5,10,2„'        The above command would plot a pixel at 5,10(X,Y) with a colour„'        value of 2.„'        This command will not work in text modes.„'        Pixel Positions start at 0,0.„'ScreenMode-This is used to switch between the screen modes. Please look„'             up the CLEANUP command after reading this explanation.„'             This command has one parameter;the screen mode.„'             Example Usage:ScreenMode 3„'             The above command would switch the computer into 80x25x16 text„'             mode.(80 columns,25 rows,16 colours)„'             So that you don't have to remember all the numbers,I built in„'             a bunch of constants to use for the more common modes. Of course,„'             there are always modes I left out that may work,so experiment.„'             If you find a mode that you want to use,try it on more than„'             one machine to make sure that the mode you've selected is„'             fairly compatible. Oh,and be careful. I've heard that with„'             older equipment,you can actually fry your monitor by going into„'             certain unsupported modes.„'VesaSupported-This function is used to detect whether or not the machine„'                that the program is running on has VESA compatibility.„'                Example Usage:IF VesaSupported THEN„'                          Ie2:IF NOT VesaSupported THEN„„DECLARE SUB Box (TopX%, TopY%, BottomX%, BottomY%, Colour%)„DECLARE SUB Pixel (X%, Y%, Colour%)„DECLARE SUB Border (Colour%)„DECLARE FUNCTION Curvidmode% ()„DECLARE FUNCTION Readpixel% (Column%, Row%)„DECLARE SUB Cleanup ()„DECLARE SUB Tlocate (Y%, X%)„DECLARE SUB Tcolour (ForeGround%, BackGround%)„DECLARE SUB ScreenMode (MODE%)„DECLARE FUNCTION Vesasupported% ()„DECLARE SUB LowHigh (Register%, low%, High%)„„TYPE SVGA„    Sig AS STRING * 4„    Version AS INTEGER„    OEMPtr AS LONG„    Capibilities AS STRING * 4„    ListPtr AS LONG„    VidMem AS INTEGER„    Reserved AS STRING * 262„END TYPE„„'$INCLUDE: 'QB.BI'„DIM SHARED Inregx AS RegTypeX, Outregx AS RegTypeX„CONST GM640x400x256 = &H100, GM640x480x256 = &H101, GM800x600x16 = &H102„CONST GM800x600x256 = &H103, GM1024x768x16 = &H104, GM1024x768x256 = &H105„CONST TM80X25 = 3„CLS„IF NOT Vesasupported THEN„    PRINT "Fatal Error: VESA was not detected."„END IF„'Y=0 to 767„'X=0 to 1023„ScreenMode GM1024x768x256„Colour = -.5„FOR X% = 0 TO 1023„    Colour = Colour + .5„    IF INT(Colour) > 255 THEN Colour = -.5„    FOR Y% = 0 TO 767„	   Pixel X%, Y%, INT(Colour)„    NEXT Y%„    IF LEN(INKEY$) > 0 THEN GOTO Here„NEXT X%„„Here:„Box 50, 50, 390, 590, 2„WHILE INKEY$ = "": WEND„    Cleanup„DEFINT A-Z„„DEFSNG A-Z„SUB Border (Colour%)„    DIM inreg AS RegType, outreg AS RegType„    'In Text mode(3) you can only set the border colour.„    'With some video modes this will also modify the background colour„    'With other video modes,this may not work at all.„    IF Colour% > 255 THEN Colour% = 255„    IF Colour% < 0 THEN Colour% = 0„    inreg.AX = &HB00„    inreg.BX = Colour%„    CALL INTERRUPT(&H10, inreg, outreg)„END SUB„„DEFINT A-Z„SUB Box (TopX, TopY, BottomX, BottomY, Colour%)„    FOR I% = TopX TO BottomX STEP 1„	   Pixel I%, TopY, Colour%„	   Pixel I%, BottomY, Colour%„    NEXT I%„    FOR I% = TopY TO BottomY STEP 1„	   Pixel BottomX, I%, Colour%„	   Pixel TopX, I%, Colour%„    NEXT I%„END SUB„„SUB Cleanup„    SHARED StartingMode„    Inregx.AX = StartingMode„    CALL interruptx(&H10, Inregx, Outregx)„END SUB„„DEFSNG A-Z„FUNCTION Curvidmode%„    DEF SEG = &H40„    Curvidmode% = PEEK(&H49)„    DEF SEG„END FUNCTION„„DEFINT A-Z„SUB GPrint (Text$)„    SHARED Col%„    Inregx.AX = &H300„    CALL interruptx(&H10, Inregx, Inregx)„    Inregx.AX = &H1301„    Inregx.BX = Col%„    Inregx.CX = LEN(Text$)„    Inregx.ES = VARSEG(Text$)„    Inregx.BP = SADD(Text$)„    CALL interruptx(&H10, Inregx, Outregx)„END SUB„„DEFSNG A-Z„SUB LowHigh (Register%, low%, High%)„    Full$ = HEX$(Register%)„    IF LEN(Full$) < 4 THEN„	   WHILE LEN(Full$) < 4: Full$ = "0" + Full$: WEND„	   END IF„	   low% = VAL("&H" + RIGHT$(Full$, 2))„	   High% = VAL("&H" + LEFT$(Full$, 2))„END SUB„„SUB Makecircle (X%, Y%, Rad, Colour%)„    FOR I = 0 TO 6.4 STEP .005„	   Pixel INT(Rad * COS(I)) + X%, INT(Rad * SIN(I)) + Y%, Colour%„    NEXT I„END SUB„„DEFINT A-Z„SUB MakeLine (A, B, C, D, Colour%)„    U = C - A: v = D - B: Param = U: GOSUB Sign: D1X = Sign„    Param = v: GOSUB Sign: D1Y = Sign: Param = U: GOSUB Sign: D2X = Sign„    D2Y = 0: m = ABS(U): N = ABS(v)„    IF m <= N THEN„	   D2X = 0: Param = v: GOSUB Sign: D2Y = Sign: m = ABS(v): N = ABS(U)„    END IF„    S% = m / 2„    FOR I% = 0 TO m„	   Pixel A, B, Colour%: S% = S% + N„	   IF S% >= m THEN„		  S% = S% - m: A = A + D1X: B = B + D1Y„	   ELSE„		  A = A + D2X: B = B + D2Y„	   END IF„    NEXT I%„    EXIT SUB„Sign:„    SELECT CASE Param„	   CASE IS > 0: Sign = 1„	   CASE IS < 0: Sign = -1„	   CASE 0: Sign = 0„    END SELECT„    RETURN„END SUB„„DEFSNG A-Z„SUB Pixel (X%, Y%, Colour%)„    DIM inreg AS RegType, outreg AS RegType„    C$ = HEX$(Colour%)„    LC% = LEN(C$)„    IF LC% < 2 THEN C$ = "0" + C$„    IF LC% > 2 THEN C$ = LEFT$(C$, 2)„    inreg.AX = VAL("&HC" + C$)„    inreg.BX = &H0„    inreg.DX = Y%„    inreg.CX = X%„    CALL INTERRUPT(&H10, inreg, outreg)„END SUB„„DEFINT A-Z„FUNCTION Readpixel (Column, Row)„    Inregx.AX = &HD00„    Inregx.BX = 0„    Inregx.CX = Column„    Inregx.DX = Row„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, RP, Junk„    Readpixel = RP„END FUNCTION„„SUB ScreenMode (MODE%)„    SHARED StartingMode„    Inregx.AX = &HF00„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, StartingMode, Columns„    Inregx.AX = &H4F03„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, Support, Status„    IF Status <> 0 OR Support <> &H4F THEN ERROR (5)„    StartingVesaMode = Outregx.BX„    Inregx.AX = &H4F02„    Inregx.BX = MODE%„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, Support, Status„    IF Support <> &H4F OR Status <> 0 THEN ERROR (5)„    Inregx.AX = &HF00„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, EndResult, Columns„    Inregx.AX = &H4F02„    Inregx.BX = StartingVesaMode„    CALL interruptx(&H10, Inregx, Outregx)„    IF Support <> &H4F OR Status <> 0 THEN ERROR (5)„    Inregx.AX = EndResult„    CALL interruptx(&H10, Inregx, Outregx)„    Tcolour 7, 0: Tlocate 1, 1„END SUB„„SUB Tcolour (ForeGround, BackGround)„    SHARED Col%„    T$ = HEX$(ForeGround): T2$ = HEX$(BackGround)„    IF LEN(T$) > 1 OR LEN(T2$) > 1 THEN ERROR (5)„    Col% = VAL("&H" + T2$ + T$)„END SUB„„SUB Tlocate (Y, X)„    Y = Y - 1: X = X - 1„    Y$ = HEX$(Y): X$ = HEX$(X)„    IF LEN(Y$) > 2 OR LEN(X$) > 2 THEN ERROR (5)„    IF LEN(Y$) < 2 THEN Y$ = "0" + Y$„    IF LEN(X$) < 2 THEN X$ = "0" + X$„    Inregx.AX = &H200„    CurLoc% = VAL("&H" + Y$ + X$)„    Inregx.DX = CurLoc%„    CALL interruptx(&H10, Inregx, Outregx)„    X = X + 1: Y = Y + 1„END SUB„„FUNCTION Vesasupported„    DIM VInfoBuff AS SVGA„    Inregx.AX = &H4F00„    Inregx.ES = VARSEG(VInfoBuff)„    Inregx.di = VARPTR(VInfoBuff)„    CALL interruptx(&H10, Inregx, Outregx)„    LowHigh Outregx.AX, Support, Status„    IF UCASE$(VInfoBuff.Sig) <> "VESA" OR Support <> &H4F OR Status <> 0 THEN„	   Vesasupported = 0„    ELSE„	   Vesasupported = -1„    END IF„END FUNCTION„„'Oh, that's it. And after all that commenting, I still neglected to say a few„'things. First of all, if you try to switch to a screen mode that isn't„'supported by your computer, most of the time it will give you an Illegal„'Function Call... Of course there are a few modes that won't be detected as„'invaid, they'll just freeze the machine or something not so nice.„'Also, In the VesaDetection function I'm using a TYPE instead of just a large„'set-length string... a large set length string would eliminate the TYPE stuff„'at the top of the file, but I put it the way i did incase someone wanted to„'use the info to add stuff. After all this time I've wasted talking abut this„'thing, I sure hope it works... <G> .. I still haven't tested it on any machine„'but my own.L8r,„'D. Tyler Barnes„Manny Najera                   QBASIC FADING ROUTINE          www.flashgames.com             03-09-96 (23:20)       QB, QBasic, PDS        108  2531     QBFADE.BAS  'QBasic FADEing - The real thing.„'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~„'From Manny Najera of Flash Games„'--------------------------------„'   http://www.flashgames.com„'--------------------------------„„'How To Use This Stuff„'---------------------„'To fade out, just use PALETTE.FADEOUT.„'PALETTE.FADEIN will work after you fadeout.„'If you mess around with the pData array in„'between, it won't work correctly.  All the„'other subs you don't have to worry about.„'The FLICKERING?  Its not as bad as before.„'Live with it.  It happens to the best of us.„'Use this code NOW!  I'm tired of looking at„'those fake fades.„„DEFINT A-Z„„'Just add this into your program.„'---------------------------------„TYPE PaletteType„Red AS INTEGER„Green AS INTEGER„Blue AS INTEGER„END TYPE„DECLARE SUB Palette.Set (nColor%, pInfo AS PaletteType)„DECLARE SUB Palette.Get (nColor%, pInfo AS PaletteType)„DECLARE SUB Palette.Fadeout ()„DECLARE SUB Palette.FadeIn ()„DIM SHARED Pal AS PaletteType„DIM SHARED pData(0 TO 255, 1 TO 3)„'---------------------------------„„SCREEN 13„FOR I = 0 TO 200„LINE (0, I)-(319, I), I„NEXT I„SLEEP„Palette.Fadeout„SLEEP„Palette.FadeIn„„SUB Palette.FadeIn„DIM tT(1 TO 3)„FOR I = 1 TO 64„WAIT &H3DA, 8„  FOR O = 0 TO 255„    Palette.Get O, Pal„    tT(1) = Pal.Red„    tT(2) = Pal.Green„    tT(3) = Pal.Blue„    IF tT(1) < pData(O, 1) THEN tT(1) = tT(1) + 1„    IF tT(2) < pData(O, 2) THEN tT(2) = tT(2) + 1„    IF tT(3) < pData(O, 3) THEN tT(3) = tT(3) + 1„    Pal.Red = tT(1)„    Pal.Green = tT(2)„    Pal.Blue = tT(3)„    Palette.Set O, Pal„  NEXT O„NEXT I„„END SUB„„SUB Palette.Fadeout„DIM tT(1 TO 3)„FOR I = 0 TO 255„  Palette.Get I, Pal„  pData(I, 1) = Pal.Red„  pData(I, 2) = Pal.Green„  pData(I, 3) = Pal.Blue„NEXT I„FOR I = 1 TO 64„WAIT &H3DA, 8„  FOR O = 0 TO 255„    Palette.Get O, Pal„    tT(1) = Pal.Red„    tT(2) = Pal.Green„    tT(3) = Pal.Blue„    IF tT(1) > 0 THEN tT(1) = tT(1) - 1„    IF tT(2) > 0 THEN tT(2) = tT(2) - 1„    IF tT(3) > 0 THEN tT(3) = tT(3) - 1„    Pal.Red = tT(1)„    Pal.Green = tT(2)„    Pal.Blue = tT(3)„    Palette.Set O, Pal„  NEXT O„NEXT I„END SUB„„SUB Palette.Get (nColor%, pInfo AS PaletteType)„OUT &H3C6, &HFF„OUT &H3C7, nColor%„pInfo.Red = INP(&H3C9)„pInfo.Green = INP(&H3C9)„pInfo.Blue = INP(&H3C9)„END SUB„„SUB Palette.Set (nColor%, pInfo AS PaletteType)„OUT &H3C6, &HFF„OUT &H3C8, nColor%„OUT &H3C9, pInfo.Red„OUT &H3C9, pInfo.Green„OUT &H3C9, pInfo.Blue„END SUB„„David Carlton                  3D-VR MAZE WARS                pvhsa07@ll.kcts.org            03-09-96 (23:31)       QB, QBasic, PDS        429  12815    MAZEWARS.BASREM   Alpha version of VR Maze Wars (working title) by David Carlton„REM   Hard Core Software  Copyright 1995„„REM   This is the alpha version of my game! Basically it's a super slow„REM   qbasic version of my program only allowing you to wander around a„REM   small room. This actually looks barely anything like the actual game„REM   will. This has clear walls and no hit detection for the objects in„REM   the center of the room. Also, because this has no object sorting,„REM   close walls will dissapear. Of course the worst thing about the alpha„REM   is how terribly slow it runs in non-compiled qbasic. Most of the time„REM   you will have to wait about 5 seconds for each frame to be drawn.„„REM   Below is a list of features that will be in the finished version or„REM   later upgrades:„„REM   -Written in C++:over ten times faster„REM   -Runs in Windows„REM   -SVGA or VGA graphics„REM   -Digital sound effects and midi music„REM   -Full 6DOF enviroment (jumping,strafing,look up-down  the works!)„REM   -Texture mapped surfaces„REM   -Gourad/ray traced shading and light effects„REM   -Multiple cameras„REM   -Weapons like homing missle launchers and artillery cannons„REM   -Helpful powerups like 180 degree vision and jet packs„REM   -Lots of enemies„REM   -Liquid surfaces (dive underwater)„REM   -Modem play„REM   -Large and a-maze-ing levels„REM   -More cool stuff like level editors and cheats„„REM   This alpha version is a long ways away from the finished version„REM   described above, but I'm working on it. Not all of these features may„REM   get included in the first version, but I'll try to squeeze in all that„REM   I can. I plan to release it as shareware, and include more levels,„REM   weapons, enemies, and sound effects if it is registered.„„REM   I tried to spend as little time as possible working on this alpha„REM   because of the problems and limitations of qbasic. Thus, you can't do„REM   too much in this program. Use the arrow keys to move around, and q to„REM   quit. I also added b for bird's eye view and n for normal view. I might„REM   use something like that as a map in later versions. Ready? Press F5„REM   to start. If you have any suggestions write me on the internet at„REM   "pvhsa07@ll.kcts.org".„„„REM   P.S.  If you want to see this program run in high resolution, change„REM   the lines that say  SCREEN 8, , drawnpage, shownpage  to  SCREEN 12 and„REM   maxy and screeny to 479 in the line just below the first SCREEN„REM   statement. This will disable multiple pages but allow 640x480 graphics.„„„„ON ERROR GOTO 1„1 RESUME NEXT„„REM initialization„„DIM template(3, 6, 4, 3), objectloc(37, 3), objectrot(37, 3), objecttype(37)„DIM playerloc(3), playerrot(3), playervel(3), surfacenumber(3), vertexnumber(3, 6)„„shownpage = 1: drawnpage = 0„COLOR 7„SCREEN 8, , drawnpage, shownpage„perspective = 600„walkspeed = 5„maxx = 639: minx = 1: maxy = 199: miny = 1„screenx = 639: screeny = 199„„REM reading data routine„„REM This should read out of a data file in later versions„„FOR i = 1 TO 3„READ playerloc(i)„NEXT i„FOR j = 1 TO 3„READ playerrot(j)„NEXT j„FOR k = 1 TO 3„READ playervel(k)„NEXT k„„READ templatenumber„FOR i = 1 TO templatenumber„READ surfacenumber(i)„FOR j = 1 TO surfacenumber(i)„READ vertexnumber(i, j)„FOR k = 1 TO vertexnumber(i, j)„FOR l = 1 TO 3„READ template(i, j, k, l)„NEXT l„NEXT k„NEXT j„NEXT i„„READ objectnumber„FOR i = 1 TO objectnumber„READ objecttype(i)„FOR j = 1 TO 3„READ objectloc(i, j)„NEXT j„FOR k = 1 TO 3„READ objectrot(i, k)„NEXT k„NEXT i„„REM  keyboard scan routine„„REM This is the central routine in this version of the game, but it shouldn't„REM be in later versions.„„GOSUB 100„„DO„„in$ = INKEY$„IF RIGHT$(in$, 1) = CHR$(72) THEN vectorvel = walkspeed: GOSUB 50„IF RIGHT$(in$, 1) = CHR$(80) THEN vectorvel = walkspeed * (-1): GOSUB 50„IF RIGHT$(in$, 1) = CHR$(77) THEN playerrot(1) = playerrot(1) - .26799„IF RIGHT$(in$, 1) = CHR$(75) THEN playerrot(1) = playerrot(1) + .26799„IF playerrot(1) > 6.28 THEN playerrot(1) = playerrot(1) - 6.28„IF playerrot(1) < 0 THEN playerrot(1) = playerrot(1) + 6.28„IF in$ = "q" THEN gameover = 1: END„IF in$ = "b" THEN playerloc(2) = 100: playerrot(3) = 1.54„IF in$ = "n" THEN playerloc(2) = 0: playerrot(3) = 3.14„IF RIGHT$(in$, 1) <> CHR$(72) AND RIGHT$(in$, 1) <> CHR$(80) THEN GOSUB 55„„REM   IF in$ <> "" OR playervel(1) <> 0 OR playervel(3) <> 0 THEN CLS 1: GOSUB 100„„IF in$ <> "" THEN CLS 1: GOSUB 100„„in$ = ""„„LOOP WHILE gameover = 0„„END„„REM  vector movement converted to cartesian„„50„„REM x velocity„playervel(1) = playervel(1) + SIN(playerrot(1)) * vectorvel„REM z velocity„playervel(3) = playervel(3) - COS(playerrot(1)) * vectorvel„„playervel(1) = INT(playervel(1)): playervel(3) = INT(playervel(3))„„IF playervel(1) > 4 THEN playervel(1) = 4„IF playervel(1) < -4 THEN playervel(1) = -4„IF playervel(3) > 4 THEN playervel(1) = 4„IF playervel(3) < -4 THEN playervel(3) = -4„„playerloc(1) = playerloc(1) + playervel(1)„playerloc(3) = playerloc(3) + playervel(3)„„REM customized hit detection -- cheap„„IF playerloc(1) < 0 THEN playerloc(1) = 0„IF (playerloc(3) <= 30 OR playerloc(3) >= 40) AND playerloc(1) > 60 THEN playerloc(1) = 60„IF playerloc(1) > 80 THEN playerloc(1) = 80„„IF playerloc(3) < 0 THEN playerloc(3) = 0„IF playerloc(3) > 70 THEN playerloc(3) = 70„IF playerloc(1) >= 60 AND playerloc(3) < 30 THEN playerloc(3) = 30„IF playerloc(1) >= 60 AND playerloc(3) > 40 THEN playerloc(3) = 40„„RETURN„„REM  friction„„55 REM  I disabled gliding because it isn't very effective when the program„REM     runs this slow.„„IF playervel(1) > 0 THEN playervel(1) = playervel(1) - 4„IF playervel(1) < 0 THEN playervel(1) = playervel(1) + 4„IF playervel(3) > 0 THEN playervel(3) = playervel(3) - 4„IF playervel(3) < 0 THEN playervel(3) = playervel(3) + 4„„RETURN„„REM  main graphics routine (large)„„100„„„FOR i = 1 TO objectnumber„FOR j = 1 TO surfacenumber(objecttype(i))„„GOSUB 2000„„x = template(objecttype(i), j, 1, 1): y = template(objecttype(i), j, 1, 2): z = template(objecttype(i), j, 1, 3)„GOSUB 3000„x1 = x: y1 = y: z1 = z„„x = template(objecttype(i), j, 2, 1): y = template(objecttype(i), j, 2, 2): z = template(objecttype(i), j, 2, 3)„GOSUB 3000„x2 = x: y2 = y: z2 = z„„x = template(objecttype(i), j, 3, 1): y = template(objecttype(i), j, 3, 2): z = template(objecttype(i), j, 3, 3)„GOSUB 3000„x3 = x: y3 = y: z3 = z„„GOSUB 7000„IF sp < 0 THEN GOTO 105„„x = template(objecttype(i), j, 1, 1): y = template(objecttype(i), j, 1, 2): z = template(objecttype(i), j, 1, 3)„GOSUB 3000„GOSUB 4000„sxa = sx: sya = sy„„x = template(objecttype(i), j, 2, 1): y = template(objecttype(i), j, 2, 2): z = template(objecttype(i), j, 2, 3)„GOSUB 3000„GOSUB 4000„sxb = sx: syb = sy„„GOSUB 5000„IF drawit = 1 THEN LINE (sxa, sya)-(sxb, syb)„„x = template(objecttype(i), j, 2, 1): y = template(objecttype(i), j, 2, 2): z = template(objecttype(i), j, 2, 3)„GOSUB 3000„GOSUB 4000„sxa = sx: sya = sy„„x = template(objecttype(i), j, 3, 1): y = template(objecttype(i), j, 3, 2): z = template(objecttype(i), j, 3, 3)„GOSUB 3000„GOSUB 4000„sxb = sx: syb = sy„„GOSUB 5000„IF drawit = 1 THEN LINE (sxa, sya)-(sxb, syb)„„FOR k = 3 TO vertexnumber(objecttype(i), j)„IF k = vertexnumber(objecttype(i), j) THEN„„   x = template(objecttype(i), j, 1, 1): y = template(objecttype(i), j, 1, 2): z = template(objecttype(i), j, 1, 3)„   GOSUB 3000„   GOSUB 4000„   sxa = sx: sya = sy„  „   x = template(objecttype(i), j, k, 1): y = template(objecttype(i), j, k, 2): z = template(objecttype(i), j, k, 3)„   GOSUB 3000„   GOSUB 4000„   sxb = sx: syb = sy„  „   GOSUB 5000„   IF drawit = 1 THEN„     LINE (sxa, sya)-(sxb, syb)„   END IF„„ELSE„  „   x = template(objecttype(i), j, k + 1, 1): y = template(objecttype(i), j, k + 1, 2): z = template(objecttype(i), j, k + 1, 3)„   GOSUB 3000„   GOSUB 4000„   sxa = sx: sya = sy„  „   x = template(objecttype(i), j, k, 1): y = template(objecttype(i), j, k, 2): z = template(objecttype(i), j, k, 3)„   GOSUB 3000„   GOSUB 4000„   sxb = sx: syb = sy„  „   GOSUB 5000„   IF drawit = 1 THEN„     LINE (sxa, sya)-(sxb, syb)„   END IF„END IF„NEXT k„105 NEXT j„NEXT i„„REM switch pages„„drawnpage = 1 - drawnpage„shownpage = 1 - shownpage„SCREEN 8, , drawnpage, shownpage„„RETURN„„2000„„REM sin and cos factors„„REM player„sr1 = SIN(playerrot(1)): sr2 = SIN(playerrot(2)): sr3 = SIN(playerrot(3))„cr1 = COS(playerrot(1)): cr2 = COS(playerrot(2)): cr3 = COS(playerrot(3))„„REM object -- adding "o" at the end is cheap„„sro1 = SIN(objectrot(i, 1)): sro2 = SIN(objectrot(i, 2)): sro3 = SIN(objectrot(i, 3))„cro1 = COS(objectrot(i, 1)): cro2 = COS(objectrot(i, 2)): cro3 = COS(objectrot(i, 3))„„RETURN„„3000 REM 3-d formulas„„REM object„„x = (-1) * x: xa = cro1 * x - sro1 * z„za = sro1 * x + cro1 * z: x = cro2 * xa + sro2 * y„ya = cro2 * y - sro2 * xa: z = cro3 * za - sro3 * ya„y = sro3 * za + cro3 * ya„„x = x + objectloc(i, 1): y = y + objectloc(i, 2): z = z + objectloc(i, 3)„„REM player„„x = x - playerloc(1): y = y - playerloc(2): z = z - playerloc(3)„„x = (-1) * x: xa = cr1 * x - sr1 * z„za = sr1 * x + cr1 * z: x = cr2 * xa + sr2 * y„ya = cr2 * y - sr2 * xa: z = cr3 * za - sr3 * ya„y = sr3 * za + cr3 * ya„„sx = perspective * x / z: sy = perspective * y / z„„REM cheap-o 3-d line clipping (That's why things look strange sometimes)„„drawit = 1„IF z <= 10 THEN drawit = 0„„„RETURN„„4000„„REM 2-d cartesian to 2-d physical„„sx = sx + 399: sy = sy + 299: rx = screenx / 799: ry = screeny / 599„sx = sx * rx: sy = sy * ry„„RETURN„„„5000„„REM 2-d line clipping„„„IF sxa > sxb THEN tempswap = sxa: sxa = sxb: sxb = tempswap: tempswap = sya: sya = syb: syb = tempswap„IF sxa < minx AND sxb < minx THEN drawit = 0: RETURN„IF sxa > maxx AND sxb > maxx THEN drawit = 0: RETURN„IF sya < miny AND syb < miny THEN drawit = 0: RETURN„IF sya > maxy AND syb > maxy THEN drawit = 0: RETURN„IF sxa < minx THEN c = (syb - sya) / (sxb - sxa) * (sxb - minx) ELSE GOTO 5010„                    sxa = minx: sya = syb - c„                    IF sya < miny AND syb < miny THEN drawit = 0: RETURN„                    IF sya > maxy AND syb > maxy THEN drawit = 0: RETURN„„5010  IF sxb > maxx THEN c = (syb - sya) / (sxb - sxa) * (maxx - sxa) ELSE GOTO 5020„                    sxb = maxx: syb = sya + c„                    IF sya < miny AND syb < miny THEN drawit = 0: RETURN„                    IF sya > maxy AND syb > maxy THEN drawit = 0: RETURN„„5020 IF sya > syb THEN tempswap = sxa: sxa = sxb: sxb = tempswap: tempswap = sya: sya = syb: syb = tempswap„IF sya < miny THEN c = (sxb - sxa) / (syb - sya) * (syb - miny): sxa = sxb - c: sya = miny„IF syb > maxy THEN c = (sxb - sxa) / (syb - sya) * (maxy - sya): sxb = sxa + c: syb = maxy„„RETURN„„7000„„REM plane-equation method of hidden surface removal„„sp1 = x1 * (y2 * z3 - y3 * z2): sp1 = (-1) * sp1: sp2 = x2 * (y3 * z1 - y1 * z3)„sp3 = x3 * (y1 * z2 - y2 * z1): sp = sp1 - sp2 - sp3„„RETURN„„„REM player data„„DATA 5,0,0,  2.796129,0,3.14,  0,0,0„„REM templates„„DATA 3„„REM template:cube„„DATA 6, 4, 5,5,5, 5,5,-5, -5,5,-5, -5,5,5,  4, 5,-5,5, 5,5,5, -5,5,5, -5,-5,5„DATA 4, 5,-5,-5, 5,5,-5, 5,5,5, 5,-5,5,  4, -5,-5,-5, -5,5,-5, 5,5,-5, 5,-5,-5„DATA    4, -5,-5,5, -5,5,5, -5,5,-5, -5,-5,-5„DATA    4, -5,-5,5, -5,-5,-5, 5,-5,-5, 5,-5,5„„REM template:pyramid„„DATA 5, 3, 5,-5,5, 0,10,0, -5,-5,5,  3, 5,-5,-5, 0,10,0, 5,-5,5„DATA    3, -5,-5,5, 0,10,0, -5,-5,-5,  3, -5,-5,-5, 0,10,0, 5,-5,-5„DATA    4, -5,-5,5, -5,-5,-5, 5,-5,-5, 5,-5,5„„REM template:wall„„DATA 2, 4, 5,-5,0, 5,5,0, -5,5,0, -5,-5,0,  4, -5,-5,0, -5,5,0, 5,5,0, 5,-5,0„„„REM objects„„DATA 36„„REM walls„„DATA 3, 5,0,0, 0,0,0,  3, 15,0,0, 0,0,0,  3, 25,0,0, 0,0,0„DATA 3, 35,0,0, 0,0,0,  3, 45,0,0, 0,0,0,  3, 55,0,0, 0,0,0,  3, 5,0,70, 0,0,0„DATA 3, 15,0,70, 0,0,0,  3, 25,0,70, 0,0,0,  3, 35,0,70, 0,0,0„„DATA 3, 45,0,70, 0,0,0,  3, 55,0,70, 0,0,0,  3, 0,0,5, 1.57,0,0„DATA 3, 0,0,15, 1.57,0,0,  3, 0,0,25, 1.57,0,0,  3, 0,0,35, 1.57,0,0„DATA 3, 0,0,45, 1.57,0,0,  3, 0,0,55, 1.57,0,0,  3, 0,0,65, 1.57,0,0„DATA 3, 60,0,5, 1.57,0,0„„DATA 3, 60,0,15, 1.57,0,0,  3, 60,0,25, 1.57,0,0,  3, 60,0,45, 1.57,0,0„DATA 3, 60,0,55, 1.57,0,0,  3, 60,0,65, 1.57,0,0,  3, 65,0,30, 0,0,0„DATA 3, 75,0,30, 0,0,0,  3, 65,0,40, 0,0,0,  3, 75,0,40, 0,0,0„DATA 3, 80,0,35, 1.57,0,0„„REM other objects„„DATA 1, 15,0,15, 0,0,0,  1, 45,0,15, 0,0,0„DATA 2, 25,0,35, 0,0,0,    1, 15,0,55, 0,0,0„DATA 1, 45,0,55, 0,0,0,  1, 25,15,35, 0,0,0„„„„„„„„Tyler Barnes                   STARFIELD WITH BACKGROUND MUSICFidoNet QUIK_BAS Echo          02-22-96 (20:58)       QB, QBasic, PDS        62   2239     MUSISTAR.BAS'Ok, here's a star field I wrote (The kind that has layered stars moving„'sideways) and it has background music. I can't say it couldn'y be programmed„'better, but it should give you an idea on how to do background music. By the„'way, when you run it, it'll ask for a bunch of settings. I suggest 75 star, 3„'layers, layer speeds at 1, 1.5, and 2, Music on. You may have to adjust these„'setting according to taste, and the speed of your computer.„'Oh, also, make all the stars move left. It looks stupid if they move in„'different directions.„„'By D. Tyler Barnes '95„'Tested on a 486dx2 80mhz„ON PLAY(1) GOSUB MuchMusic„CLS„INPUT "Number of stars:", StarNum%„INPUT "Number of layers:", LNum%„DIM StarX(StarNum%), StarY(StarNum%), Layer(LNum%)„FOR L = 1 TO LNum%„PRINT "Layer"; L; " speed:";„INPUT Layer(L)„PRINT "Layer"; L; " direction [L/R]";„DO: K$ = UCASE$(INKEY$): LOOP UNTIL K$ = "L" OR K$ = "R"„IF K$ = "L" THEN Layer(L) = -Layer(L)„PRINT„NEXT L„PLAY ON„PRINT "Music? [Y/N]";„WHILE A$ <> "Y" AND A$ <> "N": A$ = UCASE$(INKEY$): WEND„IF A$ = "Y" THEN MBuff$ =„"T150L2O3CGP16L16FEDL2>C<GP16L16FEDL2>C<GP16L16FEFL2D"„PLAY "MB X" + VARPTR$(MBuff$)„SCREEN 13„FOR I% = 1 TO StarNum%„StarX(I%) = (RND * 319) + 1„StarY(I%) = (RND * 199) + 1„NEXT I%„DO„CL = 1„FOR I% = 1 TO StarNum%„PSET (StarX(I%), StarY(I%)), 0„IF I% > (StarNum% / LNum%) * CL THEN CL = CL + 1„StarX(I%) = StarX(I%) + Layer(CL)„IF StarX(I%) < 1 THEN StarX(I%) = 319: StarY(I%) = RND * 199„IF StarX(I%) > 319 THEN StarX(I%) = 1: StarY(I%) = RND * 199„C% = (CL * 4) + 19„PSET (StarX(I%), StarY(I%)), C%„NEXT I%„LOOP UNTIL LEN(INKEY$)„END„MuchMusic:„Count% = Count% + 1„SELECT CASE Count%„CASE 0: MBuff$ = "T150L2O3CGP16L16FEDL2>C<GP16L16FEDL2>C<GP16L16FEFL2D"„CASE 1: MBuff$ = "P16L16<GGGL2>CGP32L16FEDL2>C<GP16L16FEDL2>C<GP16L16A+"„CASE 2: MBuff$ = "AA+L1GL2G.L8<G.L16GL4A.L8A>FEDCL16CDEDP16L8"„CASE 3: MBuff$ = "<AL4BL8G.L16G"„CASE 4: MBuff$ = "L4A.L8A>FEDCGP8L4D.P8L8<G.L16GL4A.L8A>FEDCL16"„CASE 5: MBuff$ = "CDEDP16L8<A"„CASE 6: MBuff$ = "L4BP16L8>G.L16GL8>C.L16<A+L8G+.L16GL8F.L16D+L8D.L16CL1G"„CASE 7: MBuff$ = "L2G.P16L16GGGL8>CP8L16<CCCL2C.": Count% = -1„END SELECT„PLAY "MB X" + VARPTR$(MBuff$)„RETURN„Eric Carr                      SCALE SPRITE                   FidoNet QUIK_BAS Echo          03-18-96 (13:23)       QB, QBasic, PDS        45   1712     SCALSPRT.BAS'Ok..Here is a routine (I just made it so...) that scales a sprite on the„'screen. It can scale to ANY size, and it only uses Integers, not floating„'point math, so it runs really smooth on my 486sx when it's compiled..Feel free„'to use or modify this for your own programs, but just give me a little credit„'for it if it's used in a game or somthing..„'The sprite in here is a 64x64 block of colors..You would have to load in your„'own sprite from the Harddrive and make sure SP is DIMed the correct amount.„'The sprite data is stored in horizontal runs (X) from up to down..„'For example, a 4x4 sprite would be 16 #'s long -„'sprite>  0/\0„'         //\\     _„'         //\\     _   0/\0//\\//\\0||0       Except it would be in numbers,„'         0||0                                not characters.„„'One last thing, this only scales sprite bigger than the original.  I haven't„'perfected scaling a sprite smaller yet.. Thats why it starts scaling at the„'orignal size, not smaller.„„ DEFINT A-Z: SCREEN 13: DEF SEG = &HA000: DIM SP(4096)„„'Load your sprite into SP. The size is 64x64 but you can change it.„„ FOR T = 1 TO 4096„ C = C + 1: IF C > 64 THEN C = 1„ SP(T) = C„ NEXT T„ 'End of sample sprite making„„ SX = 64: SY = 64 ' Size of original sprite„„ FOR SF = 64 TO 192 '(192 IS 64*3 - scaling to 3x)„ LX = SF: LY = SF   ' LX and LY are the new Sprite sizes„ GOSUB SCAL.SPRT„ NEXT: SLEEP: END„„SCAL.SPRT:„ CT = 1: ERY = 0„ FOR Y = 1 TO LY: ER = 0„ FOR x = 1 TO LX: POKE 320 * Y + x, SP(CT)„ ER = ER + SX: IF ER > LX THEN ER = ER - LX: CT = CT + 1„ NEXT x„ ERY = ERY + SY„ IF ERY > LY THEN ERY = ERY - LY: CT = CT + 1 ELSE CT = CT - (SX - 1)„ NEXT Y: RETURN„„Peder Brynolf                  3D MATRIX ROTATIONS            pbrynolf@dataphone.se          03-22-96 (07:45)       QB, QBasic, PDS        164  3152     3DROT.BAS   'This one shows how to do some 3d matris rotations.„„CLS„„PRINT "Typ 125 okompilerad fîr 1vbl"„PRINT "Typ 220 kompilerad fîr 1vbl"„PRINT : PRINT "PÜ en 66a assÜ!"„PRINT„„INPUT "Antal punkter:"; NOP%„„SCREEN 13„RANDOMIZE TIMER„„„REM NOP% = 150„„ON KEY(10) GOSUB QUIT„KEY(10) ON„„DIM OX%(NOP%), OY%(NOP%), PFX(NOP%), PTX(NOP%), PFY(NOP%), PTY(NOP%), PFZ(NOP%), PTZ(NOP%), XP(NOP%), YP(NOP%), ZP(NOP%), SX%(NOP%), SY%(NOP%), SZ%(NOP%), KX(3), KY(3), KZ(3), CX%(3), CY%(3), CZ%(3)„„RADC = 1.745328E-02„„FOR I% = 0 TO 63„   PALETTE I%, I% + I% * 256 + I% * 65536„NEXT I%„„FOR I% = 0 TO 3„   READ KX(I%), KY(I%), KZ(I%)„NEXT I%„„FOR I% = 0 TO NOP%„  „   S% = RND * 6„   IF S% = 0 THEN XP(I%) = RND: YP(I%) = RND: ZP(I%) = 0„   IF S% = 1 THEN XP(I%) = RND: YP(I%) = RND: ZP(I%) = 1„   IF S% = 2 THEN XP(I%) = RND: YP(I%) = 0: ZP(I%) = RND„   IF S% = 3 THEN XP(I%) = RND: YP(I%) = 1: ZP(I%) = RND„   IF S% = 4 THEN XP(I%) = 0: YP(I%) = RND: ZP(I%) = RND„   IF S% = 5 THEN XP(I%) = 1: YP(I%) = RND: ZP(I%) = RND„ „NEXT I%„„„DO„„FOR I% = 0 TO 3„   CX%(I%) = KX(I%) + XP„   CY%(I%) = KY(I%) + YP„   CZ%(I%) = KZ(I%) + ZP„NEXT I%„REM *** ROTATE X/Y ***„„SV = SIN(RADC * ANXY)„CV = COS(RADC * ANXY)„„FOR I% = 0 TO 3„   TX% = SV * CX%(I%) + CV * CY%(I%)„   TY% = -SV * CY%(I%) + CV * CX%(I%)„   CX%(I%) = TX%„   CY%(I%) = TY%„NEXT I%„„REM *** ROTATE X/Z ***„„SV = SIN(RADC * ANXZ)„CV = COS(RADC * ANXZ)„„FOR I% = 0 TO 3„   TX% = SV * CX%(I%) + CV * CZ%(I%)„   TZ% = -SV * CZ%(I%) + CV * CX%(I%)„   CX%(I%) = TX%„   CZ%(I%) = TZ%„NEXT I%„„„REM *** ROTATE Y/Z ***„„SV = SIN(RADC * ANYZ)„CV = COS(RADC * ANYZ)„„FOR I% = 0 TO 3„   TY% = SV * CY%(I%) + CV * CZ%(I%)„   TZ% = -SV * CZ%(I%) + CV * CY%(I%)„   CY%(I%) = TY%„   CZ%(I%) = TZ%„NEXT I%„„FOR I% = 1 TO 3„   CX%(I%) = CX%(I%) - CX%(0)„   CY%(I%) = CY%(I%) - CY%(0)„   CZ%(I%) = CZ%(I%) - CZ%(0)„NEXT I%„„CX0% = CX%(0)„CY0% = CY%(0)„CZ0% = CZ%(0)„CX1% = CX%(1)„CY1% = CY%(1)„CZ1% = CZ%(1)„CX2% = CX%(2)„CY2% = CY%(2)„CZ2% = CZ%(2)„CX3% = CX%(3)„CY3% = CY%(3)„CZ3% = CZ%(3)„„„FOR I% = 0 TO NOP%„  „   XP = XP(I%)„   YP = YP(I%)„   ZP = ZP(I%)„  „   SX%(I%) = CX0% + CX1% * XP + CX2% * YP + CX3% * ZP„   SY%(I%) = CY0% + CY1% * XP + CY2% * YP + CY3% * ZP„   SZ%(I%) = CZ0% + CZ1% * XP + CZ2% * YP + CZ3% * ZP„„   IF SY%(I%) > 80 THEN SY%(I%) = 80„„NEXT I%„„FOR I% = 0 TO NOP%„   SK = 300 / (300 + SZ%(I%))„   SX%(I%) = SX%(I%) * SK„   SY%(I%) = SY%(I%) * SK„NEXT I%„„FOR I% = 0 TO NOP%„  „   X% = SX%(I%) + 160„   Y% = SY%(I%) + 100„   PSET (OX%(I%), OY%(I%)), 0„   OX%(I%) = X%„   OY%(I%) = Y%„   PSET (X%, Y%), 32 - SZ%(I%) / 8„„NEXT I%„„REM WK:     IF INKEY$ = "" THEN GOTO WK„„ANXY = ANXY - .25„ANXZ = ANXZ - .5„ANYZ = ANYZ - 1„„XP = SIN(RADC * BANAN * 1.7315) * 40„YP = SIN(RADC * BANAN * 2.3125) * 40„ZP = SIN(RADC * BANAN * 3.2357) * 200„BANAN = BANAN + .5„„REM *** Wait vbl ***„„WVBL: A% = INP(&H3DA)„      A% = A% MOD 16„      A% = A% / 16„      IF A% <> 1 THEN GOTO WVBL„LOOP„„DATA    50,50,50, -50,50,50 ,50,-50,50, 50,50,-50„„QUIT:„SYSTEM„„Peder Brynolf                  2D ROTATING TEXTURE MAPS       pbrynolf@dataphone.se          03-22-96 (07:45)       QB, QBasic, PDS        151  2439     2DMAPS.BAS  'Here's a little program showing how to 2d-rotate texture maps.„„DECLARE SUB TEXTLINE (X1, X2, Y, TX1, TY1, TX2, TY2)„RANDOMIZE TIMER„ZANM = 3.14159 / 180„„SCREEN 13„NOP = 4„„PRINT "01234567"„PRINT "HEJSAN!"„PRINT " FUNKAR"„PRINT "DETTA Sè"„PRINT "BLIR JAG"„PRINT "  GLAD!"„PRINT " ALTER"„PRINT "  EGO"„DIM X(NOP), Y(NOP)„DIM TX(NOP), TY(NOP)„„DO„RESTORE POLYCOORDS„FOR I = 0 TO NOP - 1„   READ X(I), Y(I)„   X(I) = SIN(ZANM * ((I * 90) + an)) * 50 + 160„   Y(I) = COS(ZANM * ((I * 90) + an)) * 50 + 100„NEXT I„an = an + 1„„OX = X(3)„OY = Y(3)„FOR I = 0 TO 3„   X = X(I)„   Y = Y(I)„   LINE (X, Y)-(OX, OY)„   OX = X„   OY = Y„NEXT I„„RESTORE TEXTCOORDS„FOR I = 0 TO NOP - 1„   READ TX(I), TY(I)„NEXT I„„DIM XP(199), TXP(199), TYP(199)„„FOR Y = 0 TO 199„   XP(Y) = -1„NEXT Y„„OX = X(NOP - 1)„OY = Y(NOP - 1)„OTX = TX(NOP - 1)„OTY = TY(NOP - 1)„„FOR I = 0 TO NOP - 1„   X = X(I)„   Y = Y(I)„   TX = TX(I)„   TY = TY(I)„  „   XF = X„   YF = Y„   XT = OX„   YT = OY„  „   TXF = TX„   TYF = TY„   TXT = OTX„   TYT = OTY„„   IF YF = YT THEN GOTO SKIPIT2„„   IF YF > YT THEN SWAP YF, YT: SWAP XF, XT: SWAP TYF, TYT: SWAP TXF, TXT„„   XSK = (XT - XF) / (YT - YF)„   XC = XF„  „   TXSK = (TXT - TXF) / (YT - YF)„   TXC = TXF„   TYSK = (TYT - TYF) / (YT - YF)„   TYC = TYF„  „   FOR YC = YF TO YT - 1„     „      IF XP(YC) = -1 THEN„         XP(YC) = XC„         TXP(YC) = TXC„         TYP(YC) = TYC„      ELSE„         OXC = XC„         OTXC = TXC„         OTYC = TYC„         „REM         LINE (XP(YC), YC)-(XC, YC), 4„         TEXTLINE XP(YC), XC, YC, TXP(YC), TYP(YC), TXC, TYC„         XP(YC) = -1„         XC = OXC„         TXC = OTXC„         TYC = OTYC„     „      END IF„„      XC = XC + XSK„     „      TXC = TXC + TXSK„      TYC = TYC + TYSK„„   NEXT YC„ „SKIPIT2:„„   OTX = TX„   OTY = TY„   OX = X„   OY = Y„NEXT I„LOOP UNTIL INKEY$ = " "„SYSTEM„POLYCOORDS:„DATA 113,154„DATA 288,181„DATA 245,124„DATA 96,19„„TEXTCOORDS:„DATA 0,0„DATA 64,0„DATA 64,64„DATA 0,64„„SUB TEXTLINE (X1, X2, Y, TX1, TY1, TX2, TY2)„„IF X1 = X2 GOTO SKIPIT„„IF X1 > X2 THEN SWAP X1, X2: SWAP TX1, TX2: SWAP TY1, TY2„„XSK = (TX2 - TX1) / (X2 - X1)„XC = TX1„YSK = (TY2 - TY1) / (X2 - X1)„YC = TY1„„FOR X = X1 TO X2„   C = POINT(XC, YC)„   PSET (X, Y), C„   XC = XC + XSK„   YC = YC + YSK„NEXT X„„SKIPIT:„END SUB„Aaron Scott Zabudsky           COLOR BARS THAT COLOR CYCLE    zabudsk@ecf.toronto.edu        09-05-94 (21:40)       QB, QBasic, PDS        25   418      COLRBARS.BASDIM c(255, 3)„SCREEN 13„c = 1„FOR y = 0 TO 20„FOR z = 1 TO 256„PSET (z, y), c„c = (c + 1) MOD 256„IF c = 0 THEN c = 1„NEXT z„NEXT y„FOR z = 1 TO 255„OUT &H3C7, z„c(z, 1) = INP(&H3C9)„c(z, 2) = INP(&H3C9)„c(z, 3) = INP(&H3C9)„NEXT z„FOR o = 1 TO 255„FOR z = 1 TO 255„OUT &H3C8, z„OUT &H3C9, c((z + o) MOD 256, 1)„OUT &H3C9, c((z + o) MOD 256, 2)„OUT &H3C9, c((z + o) MOD 256, 3)„NEXT z„NEXT o„„Aaron Scott Zabudsky           COMPUTERIZED SPIROGRAPH        zabudsk@ecf.toronto.edu        05-19-93 (12:36)       QB, QBasic, PDS        14   350      SPIRO.BAS   SCREEN 12„CLS„ox = 300: oy = 300: r = 30„FOR n = 2 TO 50 STEP .5„„pi = 3.141592653589793#„FOR x = 0 * 100 TO 2 * 100 STEP n„REM LINE (ox, oy)-(ox + 100 * COS(x), oy + 100 * SIN(x))„LINE (ox + 100 * COS(x * pi / 100), oy + 100 * SIN(x * pi / 100))-(ox + 100 * COS(x * pi / 100 + n), oy + 100 * SIN(x * pi / 100 + n))„„NEXT x„CLS„NEXT n„„Earl L. Montgomery             REVERSING SCREEN IMAGE         FidoNet QUIK_BAS Echo          02-18-96 (12:41)       QB, QBasic, PDS        29   742      REVERSE.BAS  'Noticed you were asking about turning the screen upside down. Here„ 'is a routine that does a mirror image. I had written a program that„ 'will reverse the screen horizontally and vertically. Will have to„ 'look for the source code.„„DEFINT A-Z„SCREEN 9„DIM bottom(1500)„COLOR 14„LOCATE 12, 30: PRINT "Earl L. Montgomery"„CIRCLE (100, 100), 10„LINE (100, 108)-(100, 114)„LINE (84, 114)-(115, 114)„LINE (84, 114)-(84, 134)„LINE (115, 114)-(115, 134)„LINE (100, 114)-(100, 144)„LINE (100, 144)-(90, 174)„LINE (100, 144)-(110, 174)„COLOR 4„LINE (0, 0)-(639, 50), , BF„v1 = -0: v2 = 350„FOR x = 0 TO 349„v1 = v1 + 1„v2 = v2 - 1„GET (0, v1)-(639, v1), bottom„PUT (0, v2), bottom, PSET„SOUND 32000, .5„NEXT„SLEEP 100„Earl L. Montgomery             BACK SWITCHING                 FidoNet QUIK_BAS Echo          03-21-96 (21:23)       QB, PDS                58   1394     BANKSWIT.BAS 'This program demonstrates how to use bank switching so that you„ 'can poke the entire 720X540X256 screen rather than use the slow„ 'ROM Bios interrupt SETPIXEL. This code will work with Video„ '7 graphic chips. If you do not have a video7 graphic chip but„ 'would like to run this demo. Please give me the name of your„ 'graphic card/chip and I should be able to furnish you with the„ 'correct code so it will run on your system.„„ '$INCLUDE: 'qb.bi'„ DIM inreg AS RegType„ DIM outreg AS RegType„ DEFLNG A-Z„ inreg.ax = &H6F05„ 'inreg.bx = &H66: flag = 66:   '640x400x256„ 'inreg.bx = &H67: flag = 67:   '640x480x256„ inreg.bx = &H68: flag = 68:    '720x540x256„ 'inreg.bx = &H69:flag = 69:    '800x600x256„ CALL interrupt(&H10, inreg, outreg)„ DEF SEG = &HA000„ FOR x = 0 TO 65535„ POKE x, 4„ NEXT„bank1:„ OUT &H3C4, &HE8„ OUT &H3C5, &H10„ FOR x = 0 TO 65535„ POKE x, 184„ NEXT„bank2:„ OUT &H3C4, &HE8„ OUT &H3C5, &H20„ FOR x = 0 TO 65535„ POKE x, 4„ NEXT„bank3:„ OUT &H3C4, &HE8„ OUT &H3C5, &H30„ FOR x = 0 TO 65535„ POKE x, 3„ NEXT„bank4:„ OUT &H3C4, &HE8„ OUT &H3C5, &H40„ FOR x = 0 TO 65535„ POKE x, 143„ NEXT„ IF flag = 66 OR flag = 67 THEN GOTO bank5notneeded„bank5:„ OUT &H3C4, &HE8„ OUT &H3C5, &H50„ FOR x = 0 TO 65535„ POKE x, 3„ NEXT„bank5notneeded:„SLEEP (100)„inreg.ax = &H3„CALL interrupt(&H10, inreg, outreg)„CLS : END„Jeff Lawson                    TGA VIEWER (320X200)           x2ftp.oulu.fi                  02-10-94 (11:50)       QB, QBasic, PDS        30   639      TGAVIEW.BAS DEFINT A-Z„„CONST FontHeight = 23„CONST ScreenWidth = 320 / 4„„SCREEN 13„„'display the bitmap„OPEN "BIGHEART.TGA" FOR BINARY AS #1„SEEK #1, 19„FOR Attr = 0 TO 255„    Value$ = SPACE$(3)„    GET #1, , Value$„    Red& = ASC(MID$(Value$, 3))„    Green& = ASC(MID$(Value$, 2))„    Blue& = ASC(MID$(Value$, 1))„    OUT &H3C8, Attr„    OUT &H3C9, Red&„    OUT &H3C9, Green&„    OUT &H3C9, Blue&„    'PALETTE Attr, 65535 * Blue& + 256 * Green& + Red&„NEXT Attr„SEEK #1, 19 + 768: A$ = " "„FOR Row = 0 TO 199„    FOR Col = 0 TO 319„        GET #1, , A$„        PSET (Col, Row), ASC(A$)„    NEXT Col„NEXT Row„CLOSE #1„Dave Shea                      ANIMATION OF RUNNING MAN       FidoNet QUIK_BAS Echo          03-24-96 (00:00)       QB, QBasic, PDS        37   2364     RUNMAN.BAS  DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"MAN.ZIP",4^6:Z&=1493:?STRING$(50,177);„U"%up()%9%%%#-%/YnLE:;0M\j'.%%v8%%%,%%%%rf%sSgf4xfev):re5c#X*8'<u„U"mVV&*O,9PIKC2g3B6V[YRa]mVbsFy'4<ODK>NE,zK5g#pA##bA7W2hhn$1$N6[-„U"G>Gs7JiPxETiJ:(-0bPSSm:2</dVpW1++h*hQ<'*9;z19Y3[Y2Fcj4^hw6g>eJ%„U"eSb7TiCK(YVtZNg^UKIrDV0*lG1*7H(JV6QFA%[Z;P5QM8=Dg$kmaUeJsNxou:^„U"vo>tH.HAE&LkMTfXoobL?c-$h3Tklnb8Y[qs=LX\VvKmC]77i$V_Y,?1''NXO]+„U"<iVP3[B\AMOD3tsF2SX8NHo8b&uKr2JiZ85lKEovjKfj->>I5n;Bb_+mBYb9/s(„U"RCHN-l+A/AV]#dkArq)CT+f&j%94HUpg#W(oWh<PAfA9<xL%15TE-H[y_#$<CV#„U"=IEfgGTK&cOPsEcDr>o9o$;v._\lmDn(h4jp>%S>%r&cP.gQy0J$Cg[Z+B3/p?a„U"3.Bv\u5V'w+0%h6y6\Pp$kyZ;fk_<7S&%CJg#ovD]8vL[<oGhni:TfljTrYpy9.„U"gqu4<;<pjJRq:pnwTk^&Nt1(Gb]:B1ZqRC#29FK_6Q*i\gH3Y7?BPqoii5gnXwH„U":aRFWms)eZ4;agMjDaype?2Gt>V3Y'YJn-Lt4\N<G4mvSV?M(/m1Y4E1zDL/-c9„U"[PIguDyp:(FaXgDJJ87/%<+/HWzFAPxRZno7JGL#z4K57go#Qo#'S'>5Q4#MEH-„U"mG[v(Q0W3\+=DoVXtsDf>zP'&meIiF6&j,Wm.IWE/8iJ)\]LnnZk%PiaGE/>7]x„U"L=?v*g]5rFWtFJjXK*jro?PaqcWIqJwWPwhrowacxZNs0rTwRtnM:c3(;=*8&%u„U"p()%9%%%I-%^SmxER905]?'[%%,s%%%,%%%%rf%sSfsXrfT,,ASU9d+u<=99SkO„U"RRN%w>:b+_NLhins+B\d%Eq(Y9$a_#Y(k#DrisLX]blobe&'-SF[mBrO#sZRn>=„U"nLuXvsTQh<LmLdIKNitLXo>Hwa>fsP>N6jSRdJLYE*QF_2mfX7N37tDf<Y%bhyp„U"MkSdjl,.6DuH&93pHTMtK-((Z/X#iGk#8;gTn?60HNibl;Vr-FRDvmq^iPXM:*>„U"i5,N.cUCp3+'.tckAx)v+UwXg8dFo2+uFVJZeQfc[b9DIccPo\8uH*8c*jgqwZI„U"sj$eYCk>Zr4sEhvzAhp*v0U<()l[F/?J]1;%L7XjNWEi:ta[$JkkvgS:E4NqCF^„U"W?3p4dv>ruFtt#]'vBs6OY**WZ[w[7?5TVXgit\s+BP1^t^X8fp0%,HgF[rarp.„U"GZ-h8wsHtFkx9CSJ5dl0zG+tvgypDrXo1aLN\hnHNRbk;Tb>>u?.ni=Cb84HHc_„U"XVMa9(Ao/qq8.v:K:_ofSQ[_;ulEP?tT/B-.vZBSLi<Htj1SR/acZ3cN_$obFrc„U"(f$T[?A?xL<MNjpMgbwrjc#<UE=i$+S,(tK<si<*S%MO0vh8rMZtib:vfvyNsYJ„U"7w=isFyx%Z'%%j%YDuXqahPKvN?,PLs*&en+&/nvclpoQ&MYH3s7:/UtN+Hi:8w„U"l:TzL-Ys/8FP#tTt:CLZ[boq%s=9=3hv&RvlffD1l+=u:UinjNb58Lmup)smnvd„U"vb:tNattN(^v),L%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%d„U"%%nq%(up&%'9%9%%%%-I%/YLsE:;M(\j'%(%v8%%%,%%%%%%%%%&%E%%%%%%%%%„U"r%fsSg%fxup%&'9%%9%%%I-%^SmxER905]?'[%%,s%%%,%%%%%%%%%%%%E%%%'9„U"'%%%rfsS%fsru%p*+%%%%%'#%'%9%%%%z%*%%%%%„END SUB„CLOSE:IF S=134AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Unknown Author(s)              COLORFUL WORMHOLE              sansbach@gpu.srv.ualberta.ca   12-14-95 (00:00)       QB, PDS                136  8958     TUNNEL.BAS  '>>> Page 1 of TUNNEL.ZIP begins here. TYPE:BINAA TLEN:6362„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.1„SUB V1:OPEN "O",1,"TUNNEL.ZIP",4^6:Z&=6362:?STRING$(50,177);„U"%up()%9%%%R-%DR\5E1Q>XQS'%%%y/%%%/%%%%yz%ssjq%SgfxNf%<>\jU5w5]=„U"N]*n4X2HR).8LG<d[%rwY'(:uByZtvx2&F[5mrLCtWU4W\HVmJ:F-?aq:?+G9a,„U"viyyX2)-Jn$*-0.F]z#^RD#qPmGEHiRO+7*s-Rpn,BkPU1iu_uN7pn1kFtaf]/D„U"rF&-+8qowC6_J=0R0)-i/fOVUS[zZmqR.b[J%%NcoaWkBSI4E_JKEoZZ&W-#hj+„U"qks;-h.2Nb<?xB.0SaII-pj4bpicWtYqX8<K/?5<$rO9lW?.;V1BNaTH6-jit:%„U"k^j>pAzI;*Y$ifE4:#I>a.1(7bX'(qg3+;'%t;&(0J$y<?k#=q;qm;*#)#02KS^„U";.-U'-H9#$Qid&QO(3fIDlEO'[#h;3(C-'$R%9Am%vmOGMwX>jVODB$q#'4gW)1„U"r(+.J;80a^Q?'4:wR9z]:77e6%9Ev4D48y;l0H^MU>D-/rt-[]%SZ\s&3?/>MXd„U"Sb?_a0#Is^]8lFB71M8(9Pk3Z3k\NEhaW_1,gf+l:B2=W89RmYFX4\W]mgV*\Ah„U"RkLRA37wU3rW]k6/gQPKMr1/[hEa-?*[2()<[sa(:*.PvGsUq)T)#mPz<QgAVe4„U":S&H2hKH[N.Ki=&;[t#J42_aRangUa2(GNC2ExVF?*pM:\+1*(t&LcOFPt7/Gie„U".eqLd&Tp1G,NO^)B/.\(\('F1y3Iy8?wVW1T%r,e357%?W%M3xVL]V44djAXlk]„U"v-V\nGXkprozI,cC*Y?jfxx-9M4adbe6u=&Kod5%U8ibNv5g,J6nH8WxL]Jq8N7„U"nb,(K'>f/h,u'x)4b<</XS:4HTJ*+,LuGF$U\KY\hpAf<Qg=uxAnodAV3q;k+uU„U"HN]Vs+1BQ4flUixXP-3#EFI7H<$]sX,5xYllVK4iQ.QSZO5l[KCsdhqymYNp2-3„U"r1y8+]g+p2c3kbX't0up%()9%%%%-%3NW]DN;fB%%W6%%&+?%%%-%%%%uqty%Sv„U"qgNfgJCdyjm#>zh,r&1#X=$J4_AZZ=J7HmKQA^[UGH#sUIlFY]fU'-F.5<ARbl5„U"QE[)W\QF\%fCWsQ(%Sw-dkuU)mheA<LpJE9*uI*O'EyO0\r)n%1oh;kBp&Nk\gh„U"jEemb66xUUtYNdjzS.zvyb=VoHY.-?_DW-jB/$3nVCCpL.l^I6AA[5Wo_.oVw)0„U"/[UF<A&;7eNi]0)A'*K%+)OV6O$Og<Ol9P:9Moa#i(#/OV/AKY12K[95,Ua2U4u„U"^(_3E1(YOj097/*9Y)O%#t&#P^RO4Qa*e+W#)3&68P09UdU+[L8M]a,8g+E%EKP„U"G/F6))'.&]PZ99x9k8/0Y(SE&4P^\Ph9G0Y=?#7]0+1%UPVS/AYG0a4W(0g+u&B„U"p(XP(lPqE^4'%u^7w+c7%\i#3Y8o29Q+5-951e*9W'W+&]%D%Sn%$Pjp9&9-092„U"e=5?q=&/7U*9YFOK.E;W($[PN91ICh<0I5>)D1O\$\QCf0,qreV'i]u0\k[MaFx„U"Yp/%)-&_^EB/3F218?DQl,'[0yfwI+Uh&'IoEoauI(9^[o0a(&]'<%&syu(8?=]„U"%*Im/.o+e&A>&,PM1rQEL(]*o[1]3uux$xg9,uvooF\'4NW^i6GzRVxuQIu)S)A„U".=RA7puGK]W;0R]C%2xRLfn]D]HhCrlf/MZ*o(O]ntSKkG7.B[Gg)Z^>H>M9<t;„U"izrvFnrV8Z%>I.r.WsBp;/3qPgm.V[\:qbTiKxFroNlbO[]$J#+yxb;A$LtI1EQ„U"V#-CK'K8THbmY,:PG+]pV;\j%LEH0Ro$gMEBJ&%t_5G9&+&X&mb*a*7S=oo&1[L„U"C?ghV60YIYB6Kr;?+Z\>[L:$i.GQjm)XY1]QNk9)gi1\QR)H=Iqh.8mjiH+)HK=„U"d8afY(YQX.BGG]j8/P:^+)$7a>^Yr).<5;H<1_YGAQ<7+^q?.:/t)f6W5WYADQf„U"5+^j?Z:%Z)TJnG^:.F)(EG4J:D)R\55Y$Y.6eaIQj)_j/4:%r)\8ou):dF.We?=„U"#:H7r5XY$a-Wqi:;Q07r5\Y$a.WsiKh-MXEYl)Fj55ZYUsQxdcYV)hOHqDQ0XEG„U"dB:,-M,bYd7TUring-MVY;-Qv)Kp6Kg9Y%:lg.MnY&2)hq8^8uFB:D6K,QYt-0w„U"\Qtg6KiY%X)47VKeYB^)nLq9H)x$$:n7u4>:f-Nwa/\9YE:HC)^6KbdY5:*P/b]„U"&O,i%>Q'D%1i-^+)1O$%^-w3Z]MD(k1%Wz3-JIFAF_=h>=g>T\Pz#QFL9zN%4,M„U"S9ol-$2/y3y*YQSExi_=s>OGN#2c<Y0Trr>Ef-$oJyL);ydVZeVu3OO_wf9ZN\#„U"9wC8(3e+_BPP,ut8tmFheBxc,HnmwVnBORP#Axs^mNeGSsrKIV4bm[>1j<+NK6\„U"?0>JT[osnsUnja;bdw-g;ZdBdd$aBC*Umn.-4&DprlAkMi#2m2F*<eP[HTol8p*„U"It2ifeBcW#4tqZvgqc4cP<Np&6mO\LCF^/?x?pauT<umGFsU2eYO^jcZ(,s..VR„U"J0i-z$I#-RW5%B:UZE5\qAA5OJwIzcer_qso^.6U#PL)o\vSV.h:%9PuEM'a]MS„U"c.mpsfsM(9&=)9fYhp4%pAoH*(('dTVI$dF1%$dB=MW:3v-*VK=^:'Ik$mM?&ZH„U"P<06)T'FK<DMbST'vq)%=:qg[nTg:7xJ6A^/MyKpPoY*)a-.*;^cm?Ovila]WM9„U"e4Sb\fB:\pImrM10&s\;*S.Rb\4h:lJ$6buI]P(3wJx,)=EhPKjtJ9/&^,[[m+e„U"fxb>bJ)B,QMXJ&qxH_Ubq8WBa(6L(]qXH7_$%52Q]'c3cajDU_Woju-H7pGiT9j„U"n)F:Kk:8ma,[\pxesBYt,eGB/2c9D+L:E]9:BjdsD>,$Yaab^gU1jhEJG^eED=s„U"K9C&f_pQ4\wlE0/yf<[HfhAsLh4MKjq\;Y-lk+jt8PVh_Sdhooj[-rO^FF32RiM„U"(Q4M;oDG9cWY[,]'/Ke;y2;0mn=XU'h\nH[A#6(<VYo#)QqKF;ZNjV:3x_BfCzh„U"lEQ0t.k+%-jAi[O;,/SEwrPA&PsLUL.[QilJ]*vN+K:vwoHweV,]pc^SI7(JAL7„U"NBg3cVizFyxhZ=ls%[qt39k$wIx48AvOrPbqeJf84C9H9GI(0(J(Tr<NQt^[JsG„U"1gj>-b1S6[LY01#Y82shGM*DUtydh:.av/dYv.U7Zf\5u4=W:[HjiI)a^.iasYk„U"WqgM-Zr=C;V40jgwDE?QuoT=Qp=Xw9Zm*&J_K$jJ_[/P]//>/_p]X'>h;OwoDU3„U"1L*zi2BSTfP^XX]P>4=%&x%X\.6eAkkU=O,HX,UE5S&'&C.;ONsk*9G,DF^*QnR„U"Rjv31m+KB\+g\g78^lWcbn%/.TX2^/E9b8'Z>/-q8e*VAX;aG=O9-BOge7p8K#l„U"rvxB(NC2ud1IEt*u8XY9jDCgJoROK()GN2PfV3%]/4?gupIWE'mdGd/:QQ><7$2„U"<0qOHavc>f/Z#XR+]RHI'7L$WgS+H/r[UFgTT'N,1k*G].LbFf>xVpZ&3I_AZD2„U"=cp7be[-/wCO5Y9MD*QfSwW8o6FgjtE>095YpfYF%(NI(lUP9T%<fF28<+:cEv(„U"r72?:8/AUmX[(4170Z9g;.H.,qE8qekRIw17mw_IuCn/QL+>c$C]/c$6<UbSSXc„U"OHij*vK9DE#:;NY%]XbhJ/-g)(#duG,_dU^Gb<mz9BVt$\uEk:v4oh-JfbhZx6=„U"IdbsS<giO-[vq4iN;k>XfK9,3JFy'0BiRt&o-nc.5#ToW\HlA\_583YZV<kBp:C„U"Pp6YIjQb7d_Dp^WGFQe&0CR>z+4lD,ht?D$OF]\N[#BU-_g/9V#[jXqK]['IBRV„U"u+Y1LG]YfGqIVJ0*Ic7t9e_('/4S>9;)*W9:i;<i7bbkNKd]8p.:B:dGw_1C;$4„U"CLNCN5+))QJsm'YE:hwd-e?FEckX+rdkliHUSQM,jH)2+zLNSQsUZ==FbL28RB$„U"^l,UM?eA:ujtYDik73\v#)1+BmU_M^4#NF7U*48=KTLU=r,ElJsNlp/cf(05$-l„U"<z^a&[C)KR0Z7n^BYVHhGy^S)sokl^-r\;_jNSbl$Q3F_d1fmk$sJP<#3cnA=/+„U"0Xb,biSBPLJ-%J^>$/U[LC[TfGnb7fNQ=UMut-b%evj4^8t(Z^XnM'=<5DGJVeP„U"_]9j&DzT/wjCht-X%FyTEdN:Hm0N//Cua&D^([^;Ck:]-&e>9:ajmh%GfYpT#0b„U".;VoZ=.&9i7cEJk_dT,XO?[VH#.Xe).Kqe;?Q2lCy7aC9b_6LOgljeY2m9D\B<d„U"xEJmb:iSBIdoSVVLD;2,5g'kFJNwAFyu>(v_._b'2D=tD-T3-buXN50QgCspIn%„U"]#aA#+b'Wu-dgTP_3gdC2)3N7(*FoF3^ETdy)Mox,dKZ>vRr^-dRk?N;XQc^^j/„U"&Pm6bl>D;Ea(K0Z-N6RyeujrYmD/N7m(vSSUu(jEr1&mag_LbX>iK$9[x'S<uOe„U"eY*^S1\Ex'j/SGOeB\GD29(>6^n,,:>7,DBHlB__y?jr.-G&(RJ^aEjz96u'H?r„U"KqI%,FF4HA\h.Pl/:Zj*fLFP3#pFBaVgv,Qv&+A^tHgi4Tm<dHmYZEP(re-S%kQ„U"4h47b-[8SP4WwvDY\IhWDim#cZfCGJ,Q8NbFsOs%h4]4>5W/9i:?cwfu<dbiopy„U"=sMmrF'A]/V$ms'hpU5r_N#?v7#wr3W';9,p#Bj:m,/Jg_q\BxVIMDQ;RB6'9XQ„U"0tcvs5X^s[d?/]JeM/>ODkoZVs_7\MX8S#p]YmMtZ+7OBXLdr^u-#)tO._K/ca'„U"uQ]YOXQWwR:bC89*v+;<Nba&h2.d&3yKXwnTRs'3kCT,ZPY'e(NUbLHB-bht[3Z„U"1)d1kHQGWleJP8NsJ/iJa.rI:9ohyU(ciwK-ElMP4:f\Du;Yd%fx>Y\dpx28(7C„U"M8gd8E2NxA/4RsXdkQh/xla$Nl4<k?Q8;IGx%\2Bf-BiGb+282QLWm5DEZ>(i.O„U"YR6'uCIY#Wr;1PhG[cev/04O1ZMe'H<;XS,9*za6UqdaHnr;CwuRQYVb?WQXFQl„U"Bb3F$-b8-TOV8JTgAu,;C?u,TtH%w)/_2Y5)V]0DE97jCCwg&N1(Y7u%eRyd.8w„U"FvNva\_Uh2E]mhF:A.xj1AWL*=8+/N]V>U^xsk[^x86b[xxH-Vh1SZgl^_Y0d2]„U"[LA.S*Eg6cfCi=]ucSwjXL)J+%0N3kMVg<-k8:^8u#>/tuT=Pbgg5pH+oTZW4(w„U"DS#TL=:VYb6n#JL\j6x6>28;K<N>x;K).XXKZau'W#rTul45ZvaAw<JX*RjIHfL„U"$t$^2Capmm4,uALw\ZKPq8U5XSvmL$(HU]m9PHMf_nepTcO+_KdY\8fY8gTs+uW„U"G7.9]K<_xTNN>a5Z=LuEfBeNP.f$tkc_hzb88[8Sn8?Dp(m>U2%mtXB\_qqHW)M„U"Zf^l8bLaFb\%<VFK?Vuk5e>d#ARXq\^*h'KvD=r%wFAHBPngR.6l<EYQ<-C(XRb„U"fpX&_eFV&hfn3fY%D84TrL^.+XVEdi:CZeP2cb.G33p-i&k5HBc#W1SI5m%NI-(„U"O$$\lv[6bSLYd[Jx_WM?J7pWE/DM\#ek\a:ILv(Q.<YGmBN]x-^3a\WGM2'TWKC„U"6\]Ea<6\2Z7KihN=cIF-aYrbO7&62^xOCMQIy^g=r'r_+21L3EW)H*sg6F3sz0F„U"(xSAZMz:yiq9wO3q$r7+B/&^+/zOj#&oULT%\d0^:AdRzrD&3UpP8+Wf.Q1dtwm„U"M2EUdsi$%Y9v_/&zT?YGERJUyDtc4Kz,#1w6jQerEze2f%b#'mT,l^%#Nl1Jy3%„U"k\O1ip&7DmP-P22ldzEQJYxz2z)-x'.7rtoDeR2<oq;g&cbTQB2JywN.zE(Ch4B„U"i&m.kp#AZs6G4.Xk)wRnR8#QEPr'C3;jJn\NKZiRv,mGIXu63JNdq$rbtyC337J„U"P<hVwC&spX/ffstMTbCq9?yV$L:2X^-\iMUu)6S2(]ZYAl&H>(rO*L^WH=_s]Pd„U"fU5_?7KLFyOR&<'iCYzcbzdEI4ZED](D]vJQq4hQe?^kgL+iU7b%P[JI92Uz&Er„U"2rtRZkS:mq'6D1$;]gj4dL<f#NyLh_=e1eb9<Fr1#&c2aaLSZ;_6#::f9-Bk?;f„U"_JzKmXAo-5Cib6n=z.56/'iS)0rPaPpeH$I?M8yk#O&'M7CQH%KR1,[ERX,OMD=„U"6W*z(CsTxJ/W/PR5=VT%*j0,Y,HkRW&8%j;3Td2tV%;jk)E,5v;2')*laLUeD+B„U"NZSNSQ\Xh8se3Y?3<T7Y2d>>EPa/g4ctQ4U;2R?CCDoc,L2w_zyZG9S+/$r:s*3„U"l__;e3o+:c^PTN1S9#b17Y[NR3&z+;msZNIQ*%)%g4R^ms#R_ZaU<\VJU3Vv(CE„U"w8fet9]_+%:J\uD,4E-=>qS*dk;-)h1ls;LKr2EJe:)4v:^9KF3yFXL;sPpuTHe„U"HMkEk/Xt28T>mo+&Ip*$6#%m9Gf(AO%6CoiEC5EAKj;lO.CnnMef&_5P+=KcYg'„U"I0T0SIFR\V3LTjn-e_,6]&N'up%()9%%%%-%3MW]Dl:)T:&w&%%%4+%%%-%%%%u„U"qty%Sqng9fyHp]TuAxH7_l2<EgIh/TG\<eF5se%U)6#,jO/JD<,QRdFWp)tP.K-„U"d9a(6&ScMzCIW<zow*WmMu-S-lUQ4ws.V?QSE>T4'tKNwtslY*omhkk4crMcuX5„U"pv?kkv.YO#2+_;YE%6(_Z8h>[+Q#9%s'2jY55hRIx)_af:<QA_%%f,*(Gn30?4W„U"uiuK1GC=3sf1n:o%*huY[BYzqSTBX6SLrb&:-+wqXs7%Ul.b;CIxkbit-WXDOVF„U"ymJ&0%sO3;S*<dB%n/^kMg7O&$1;aZNbI9'x?Pl3S#&5SmkgPq1i%>DU=)ZL3sl„U"HDspEAOwTIF9eRPsTCj(p/+%5cK$)\^e%O;b&yp.dXP1umsVM8IUc#hYH%uwY]R„U"iMJRe2%*veS>T8Gqg*_L.>Y9<OY?^6bsRVL=#RwqOo8ei#g$45KaOviF]'nYW\7„U"VB)W,BMV,9klEDbv9:T>qF$vZOO]3-Bq.V'^gr9Lq:VVreeei%60_Ece4<O'9ce„U"I(M5,Lx0+kk,SV\Etv8Qf6Rn+7w+.:-<s4%up()%9%%%R-%JW/]DZM/Mmk&.%%]„U"/%%%-%%%%uq%tySf7xrfz1r>Qej56jq4D1fYe/8qWC97oQbn&L\I&;);Uz%JUQo„U"PfDGFV&%0)bgCZ]+RHgX>0We*k0Hiv/3R9'W)RA6[ud>MhRV_j\8SJ9#/65521$„U"kmn,#sy?gaet9kA8rt'XmQX)an#FJbTAIa2\>OwjpFXAce26*#Jn/\xK#Z$/pMt„U"QUW#FfTc9J?$>?6L6cY4lPh7J'g$DkCY*M*7wPmio.%s?ew[rg?ukQ-'\hto3\r„U"Laq<9t7Z9Uj>>a&2o<YCXq=)Rn?6qSgKJV7vGi;Xn-D0.R&HfY?/%W]:4PC,rnY„U"rPZCGg-MP7:#1EgA-iDOf$bf#=s7+/ZFz5,<p0bgU.t<y,ZS?lL<Qb;FR_9fjeY„U"kw,p8WUR7.]?orj%e;fvP(T9[kRh5:U;qcQoOptzo'UIaJ:06g_BdK]73uUH.,4„U"l'tzbWIHL<Ghds-_xEBpC>BBhX)PszCp,,*MIB,d1dySZDScy'c/rl\3sQ8Rj#%„U"dLk)GH,+4-4#pkDoZqUpoZs.R'R'q&up%&'9%%9%%%R-%DR\5E1Q>XQS'%%%y/%„U"%%/%%%%%%%%%&%%E%%%%%%%%%yzss%jqSg%fxup%&'9%%9%%%R-%NWS]D;f)B%W„U"6.%%+?%%%-%%%%%%%%%%%%E%%%%'(%%%uqty%Svqg%up&'%9%9%%%%-%3MW]Dl:„U")T:&w&%%%4+%%%-%%%%%%%%%%%E%.%%)9%%%uq%tySq%ngup%&'9%%9%%%R-%JW„U"/]DZM/Mmk&.%%]/%%%-%%%%%%%%%&%%E%%%%M;%%%uqty%Sfxr%up*+%%%%%%)%„U")%'S%%%'c<%%%%%„END SUB„CLOSE:IF S=37AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„'>>> Page 1 of TUNNEL.ZIP ends here. Last page. TCHK:37„Einar Tveit                    GRAPHICS DRAWING PROGRAM       comp.lang.basic.misc           04-12-96 (23:28)       QB, QBasic, PDS        694  13266    DRAW.BAS    DECLARE SUB Refresh (file$, colors%)„REM The intro was made with this program!!!„REM Hi, this program was made by Espen Tveit (me) to make it easy„REM programming graphic in qbasic, when you have printed your filename„REM push enter and start drawing. If you have any comments send them to me:„REM„REM eintveit@telepost.no„REM „REM I`m on the newsgroups:„REM comp.os.ms-dos.programmer„REM comp.lang.basic.misc„REM„REM Notice: This program automatic sets .bas behind the filname„REM (This program will make an .qtf file, if you wants to open the file later„REM just print the filename and this program will open the .qtf file)„REM ‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹„REM I`m just programming„REM ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ„DEFINT A-Z„Screenmode = 8„VIEW PRINT 1 TO 25„Startcolor = 10„SCREEN Screenmode„ON KEY(1) GOSUB help„KEY(1) ON„SCREEN Screenmode„LINE (2, 2)-(2, 630), 7„LINE (3, 2)-(3, 630), 8„LINE (1, 1)-(638, 198), 7, B„LINE (1, 99)-(637, 99)„LINE (0, 0)-(639, 199), 7, B„LINE (2, 197)-(636, 197)„LINE (636, 2)-(636, 2)„LINE (1, 102)-(638, 102), 8„LINE (1, 100)-(638, 101), 7, B„LINE (252, 3)-(252, 21), 8„LINE (352, 2)-(352, 21), 8„LINE (249, 22)-(352, 22), 8„LINE (249, 3)-(249, 21)„LINE (250, 1)-(251, 20), 7, BF„LINE (250, 20)-(350, 21), 7, BF„LINE (350, 1)-(351, 21), 7, BF„LINE (2, 2)-(638, 2), 8„LINE (252, 19)-(348, 19), 15„LINE (349, 3)-(349, 19), 15„COLOR 7„LOCATE 2, 34: PRINT "Qdraw 5.0"„LOCATE 5, 31: PRINT "Espen Tveit 1996"„LOCATE 15, 10: PRINT "Do not print somthing behind the filname such as .bas"„LOCATE 17, 10: INPUT "File: ", fi$„file$ = fi$ + ".qtf"„fil$ = fi$ + ".bas"„OPEN fil$ FOR APPEND AS #1„OPEN file$ FOR APPEND AS #2„CLS„colors% = Startcolor„A = 5„B = 5„PRINT #1, "SCREEN "; Screenmode„beveg:„FOR o% = 1 TO 15 STEP 1„P = P + 1„COLOR o%„LOCATE 23, P: PRINT "€"„COLOR 15„LOCATE 23, 17: PRINT "Using color:                                         "„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„NEXT o%„COLOR 15„LOCATE 22, colors%: PRINT ""„DO„IF wh = 1 THEN„GOSUB fil„END IF„PSET (A, B), colors%„SELECT CASE INKEY$„CASE "*"„CLOSE #1„CLOSE #2„CLOSE #3„Refresh file$, colors%„CLOSE #1„CLOSE #2„CLOSE #3„OPEN fil$ FOR APPEND AS #1„OPEN file$ FOR APPEND AS #2„CASE "1"„GOSUB sirkel„CASE CHR$(0) + CHR$(83)„N = 1„K = 1„wh = 1„PRINT #2, "P"„PRINT #2, A„PRINT #2, B„PRINT #2, "0"„PRINT #2,„PRINT #2,„PRINT #1, "PSET ("; A; ","; B; "), 0"„„CASE "+"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% + 1„IF colors% = 16 THEN colors% = 15„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE "-"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% - 1„IF colors% = 0 THEN colors% = 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE CHR$(32)„N = 1„K = 1„wh = 1„„PRINT #2, "P"„PRINT #2, A„PRINT #2, B„PRINT #2, colors%„PRINT #2,„PRINT #2,„PRINT #1, "PSET ("; A; ","; B; "), "; colors%„CASE "3"„BEG = 0„BEG1 = 0„BEG = BEG + A„BEG1 = BEG1 + B„GOSUB firkant1„CASE "4"„BEG = 0„BEG1 = 0„BEG = BEG + A„BEG1 = BEG1 + B„GOSUB strek„CASE "2"„BEG = 0„BEG1 = 0„BEG = BEG + A„BEG1 = BEG1 + B„GOSUB firkant„CASE CHR$(0) + "P"„IF K = 0 THEN„PSET (A, B), 0„END IF„B = B + 1„PSET (A, B), colors%„IF ET = 1 THEN„GOSUB lagre„ELSE„K = 0„END IF„CASE "5"„COLOR colors%„OL = A / 8„OL1 = B / 8„IF OL = 0 THEN OL = 1„IF OL1 = 0 THEN OL1 = 1„LOCATE OL1, OL: INPUT "", f$„IF PEN$ = "I" OR PEN$ = "i" THEN„N = 1„K = 1„wh = 1„PRINT #2, "Tekst"„PRINT #2, OL1„PRINT #2, OL„PRINT #2, f$„PRINT #2, colors%„PRINT #2,„ELSE„PRINT #1, "COLOR "; colors%„PRINT #1, "LOCATE"; OL1; ","; OL; ":"; "PRINT "; CHR$(34); f$; CHR$(34)„PRINT #1, "COLOR 15"„N = 1„K = 1„wh = 1„PRINT #2, "Tekst"„PRINT #2, OL1„PRINT #2, OL„PRINT #2, f$„PRINT #2, colors%„PRINT #2,„END IF„„CASE CHR$(0) + "K"„IF K = 0 THEN„PSET (A, B), 0„END IF„A = A - 1„PSET (A, B), colors%„IF ET = 1 THEN„GOSUB lagre„ELSE„K = 0„END IF„CASE CHR$(27)„PRINT #1, "DO"„PRINT #1, "LOOP"„CLS„END„CASE CHR$(0) + "M"„IF K = 0 THEN„PSET (A, B), 0„END IF„A = A + 1„PSET (A, B), colors%„IF ET = 1 THEN„GOSUB lagre„ELSE„K = 0„END IF„END SELECT„LOOP„„help:„CLS„COLOR 15„VIEW PRINT 1 TO 25„LINE (131, 28)-(131, 28), 7„LINE (131, 28)-(506, 97), 7, B„LINE (506, 98)-(131, 98), 8„LINE (130, 98)-(130, 27), 15„LINE (130, 27)-(506, 27), 15„LINE (507, 27)-(507, 98), 8„LINE (505, 96)-(132, 96), 15„LINE (132, 96)-(132, 29), 8„LINE (505, 29)-(505, 96), 15„LOCATE 1, 23: PRINT "œ  Help for Qdraw 4.0  œ"„LOCATE 5, 18: PRINT "Push <F1> to get help"„LOCATE 6, 18: PRINT "Push <*> to refresh"„LOCATE 7, 18: PRINT "Push <SPACE> to draw a point on the screen"„LOCATE 8, 18: PRINT "Push <1> to draw an circle"„LOCATE 9, 18: PRINT "Push <2> to draw an square"„LOCATE 10, 18: PRINT "Push <3> to make an filled square"„LOCATE 11, 18: PRINT "Push <4> to make a line"„LOCATE 12, 18: PRINT "Push <5> to set in text"„LOCATE 17, 20: PRINT "Espen Tveit 1996"„LOCATE 23, 18: PRINT "Press a key to continue..."„DO„LOOP WHILE INKEY$ = ""„CLS„P = 0„PSET (A, B), colors%„FOR o% = 1 TO 15 STEP 1„P = P + 1„COLOR o%„LOCATE 23, P: PRINT "€"„COLOR 15„LOCATE 23, 17: PRINT "Bruker farge:                                         "„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„NEXT o%„COLOR 15„LOCATE 22, colors%: PRINT ""„IF wh = 0 THEN RETURN„IF OK1 = 0 THEN„OK1 = 1„CLOSE #1„CLOSE #2„OPEN file$ FOR INPUT AS #3„END IF„DO UNTIL EOF(3)„LINE INPUT #3, valg$„IF valg$ = "T" THEN„LINE INPUT #3, rec$„OL1 = VAL(rec$)„LINE INPUT #3, rec$„OL = VAL(rec$)„LINE INPUT #3, rec$„LINE INPUT #3, farge$„KL = VAL(farge$)„COLOR KL„LOCATE OL1, OL: PRINT rec$„COLOR 15„END IF„IF valg$ = "P" THEN„ LINE INPUT #3, rec$„ G = VAL(rec$)„„ LINE INPUT #3, rec$„ H = VAL(rec$)„„ LINE INPUT #3, rec$„ LINE INPUT #3, o$„ Q = VAL(rec$)„ PSET (G, H), Q„END IF„IF valg$ = "BF" THEN„LINE INPUT #3, rec$„G = VAL(rec$)„LINE INPUT #3, rec$„H = VAL(rec$)„LINE INPUT #3, rec$„I = VAL(rec$)„LINE INPUT #3, rec$„J = VAL(rec$)„LINE INPUT #3, rec$„CF = VAL(rec$)„LINE (G, H)-(I, J), CF, BF„END IF„IF valg$ = "B" THEN„LINE INPUT #3, rec$„G = VAL(rec$)„LINE INPUT #3, rec$„H = VAL(rec$)„LINE INPUT #3, rec$„I = VAL(rec$)„LINE INPUT #3, rec$„J = VAL(rec$)„LINE INPUT #3, rec$„CF = VAL(rec$)„LINE (G, H)-(I, J), CF, B„END IF„„IF valg$ = "Strek" THEN„LINE INPUT #3, rec$„G = VAL(rec$)„LINE INPUT #3, rec$„H = VAL(rec$)„LINE INPUT #3, rec$„I = VAL(rec$)„LINE INPUT #3, rec$„J = VAL(rec$)„LINE INPUT #3, rec$„CF = VAL(rec$)„LINE (G, H)-(I, J), CF„END IF„IF valg$ = "S" THEN„LINE INPUT #3, rec$„G = VAL(rec$)„LINE INPUT #3, rec$„H = VAL(rec$)„LINE INPUT #3, rec$„RADIUS = VAL(rec$)„LINE INPUT #3, rec$„CF = VAL(rec$)„CIRCLE (G, H), RADIUS, CF„END IF„LOOP„CLOSE #1„CLOSE #2„OPEN fil$ FOR APPEND AS #1„CLOSE #2„OPEN file$ FOR APPEND AS #2„RETURN„„„lagre:„N = 1„K = 1„wh = 1„„PRINT #2, "P"„PRINT #2, A„PRINT #2, B„PRINT #2, colors%„PRINT #2,„PRINT #2,„PRINT #1, "PSET ("; A; ","; B; "), "; colors%„RETURN„„firkant:„LINE (BEG, BEG1)-(A, B), colors%, B„DO„SELECT CASE INKEY$„CASE CHR$(0) + "H"„LINE (BEG, BEG1)-(A, B), 0, B„B = B - 1„LINE (BEG, BEG1)-(A, B), colors%, B„CASE CHR$(0) + "P"„LINE (BEG, BEG1)-(A, B), 0, B„B = B + 1„LINE (BEG, BEG1)-(A, B), colors%, B„CASE "+"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% + 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE "-"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% - 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE CHR$(0) + "K"„LINE (BEG, BEG1)-(A, B), 0, B„A = A - 1„LINE (BEG, BEG1)-(A, B), colors%, B„CASE CHR$(0) + "M"„LINE (BEG, BEG1)-(A, B), 0, B„A = A + 1„LINE (BEG, BEG1)-(A, B), colors%, B„CASE CHR$(13)„N = 1„K = 1„wh = 1„PRINT #1, "LINE ("; BEG; ","; BEG1; ")-("; A; ","; B; ") ,"; colors%; ", B"„PRINT #2, "B"„PRINT #2, BEG„PRINT #2, BEG1„PRINT #2, A„PRINT #2, B„PRINT #2, colors%„N = 1„K = 1„wh = 1„RETURN„END SELECT„LOOP„„firkant1:„LINE (BEG, BEG1)-(A, B), colors%, BF„DO„SELECT CASE INKEY$„CASE CHR$(0) + "H"„LINE (BEG, BEG1)-(A, B), 0, BF„B = B - 1„LINE (BEG, BEG1)-(A, B), colors%, BF„CASE CHR$(0) + "P"„LINE (BEG, BEG1)-(A, B), 0, BF„B = B + 1„LINE (BEG, BEG1)-(A, B), colors%, BF„CASE "+"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% + 1„IF farge = 16 THEN farge = 15„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE "-"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% - 1„IF farge = 0 THEN farge = 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE CHR$(0) + "K"„LINE (BEG, BEG1)-(A, B), 0, BF„A = A - 1„LINE (BEG, BEG1)-(A, B), colors%, BF„CASE CHR$(0) + "M"„LINE (BEG, BEG1)-(A, B), 0, BF„A = A + 1„LINE (BEG, BEG1)-(A, B), colors%, BF„CASE CHR$(13)„N = 1„K = 1„wh = 1„PRINT #1, "LINE ("; BEG; ","; BEG1; ")-("; A; ","; B; ") ,"; colors%; ", BF"„PRINT #2, "BF"„PRINT #2, BEG„PRINT #2, BEG1„PRINT #2, A„PRINT #2, B„PRINT #2, colors%„N = 1„K = 1„wh = 1„RETURN„END SELECT„LOOP„„strek:„LINE (BEG, BEG1)-(A, B), colors%„DO„SELECT CASE INKEY$„CASE CHR$(0) + "H"„LINE (BEG, BEG1)-(A, B), 0„B = B - 1„LINE (BEG, BEG1)-(A, B), colors%„CASE CHR$(0) + "P"„LINE (BEG, BEG1)-(A, B), 0„B = B + 1„LINE (BEG, BEG1)-(A, B), colors%„CASE "+"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% + 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE "-"„COLOR 0„LOCATE 22, colors%: PRINT ""„colors% = colors% - 1„COLOR colors%„COLOR 15„LOCATE 22, colors%: PRINT ""„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„CASE CHR$(0) + "K"„LINE (BEG, BEG1)-(A, B), 0„A = A - 1„LINE (BEG, BEG1)-(A, B), colors%„CASE CHR$(0) + "M"„LINE (BEG, BEG1)-(A, B), 0„A = A + 1„LINE (BEG, BEG1)-(A, B), colors%„CASE CHR$(13)„N = 1„K = 1„wh = 1„PRINT #1, "LINE ("; BEG; ","; BEG1; ")-("; A; ","; B; ") ,"; colors%„PRINT #2, "Strek"„PRINT #2, BEG„PRINT #2, BEG1„PRINT #2, A„PRINT #2, B„PRINT #2, colors%„N = 1„K = 1„wh = 1„RETURN„END SELECT„LOOP„„„sirkel:„DO„SELECT CASE INKEY$„CASE "+"„COLOR 0„LOCATE 22, plass%: PRINT ""„colors% = colors% + 1„COLOR colors%„COLOR 15„plass% = colors% + 1„LOCATE 22, plass%: PRINT ""„COLOR colors%„LOCATE 23, 18 + 20: PRINT "€"„CASE "-"„COLOR 0„LOCATE 22, plass%: PRINT ""„colors% = colors% - 1„COLOR colors%„COLOR 15„plass% = colors% - 1„IF colors% = 0 THEN„plass% = 2„colors% = 1„END IF„LOCATE 22, plass%: PRINT ""„COLOR colors%„LOCATE 23, 18 + 20: PRINT "€"„CASE CHR$(0) + "H"„CIRCLE (A, B), RADIUS, 0„RADIUS = RADIUS + 1„CIRCLE (A, B), RADIUS, colors%„„CASE CHR$(0) + "P"„CIRCLE (A, B), RADIUS, 0„RADIUS = RADIUS - 1„IF RADIUS = 0 THEN RADIUS = 1„CIRCLE (A, B), RADIUS, colors%„CASE CHR$(13)„PRINT #1, "CIRCLE ("; A; ","; B; "),"; RADIUS; ","; colors%„wh = 1„PRINT #2, "S"„PRINT #2, A„PRINT #2, B„PRINT #2, RADIUS„PRINT #2, colors%„RETURN„END SELECT„LOOP„„fil:„RETURN„„SUB Refresh (file$, colors%)„OPEN file$ FOR INPUT AS #1„P = 0„FOR o% = 1 TO 15 STEP 1„P = P + 1„COLOR o%„LOCATE 23, P: PRINT "€"„COLOR 15„LOCATE 23, 17: PRINT "Bruker farge:                                         "„COLOR colors%„LOCATE 23, 17 + 15: PRINT "€"„NEXT o%„COLOR 15„LOCATE 22, colors%: PRINT ""„„  DO„  IF EOF(1) THEN„  GOTO slutt„END IF„  LINE INPUT #1, valg$„  IF valg$ = "T" THEN„  LINE INPUT #1, rec$„  OL1 = VAL(rec$)„  LINE INPUT #1, rec$„  OL = VAL(rec$)„  LINE INPUT #1, rec$„  LINE INPUT #1, farge$„  KL = VAL(farge$)„  COLOR KL„  LOCATE OL1, OL: PRINT rec$„  COLOR 15„  END IF„  IF valg$ = "P" THEN„  LINE INPUT #1, rec$„  G = VAL(rec$)„  LINE INPUT #1, rec$„  H = VAL(rec$)„  LINE INPUT #1, rec$„  LINE INPUT #1, o$„  Q = VAL(rec$)„  PSET (G, H), Q„  END IF„„  IF valg$ = "BF" THEN„  LINE INPUT #1, rec$„  G = VAL(rec$)„  LINE INPUT #1, rec$„  H = VAL(rec$)„  LINE INPUT #1, rec$„  I = VAL(rec$)„  LINE INPUT #1, rec$„  J = VAL(rec$)„  LINE INPUT #1, rec$„  CF = VAL(rec$)„  LINE (G, H)-(I, J), CF, BF„  END IF„  IF valg$ = "B" THEN„  LINE INPUT #1, rec$„  G = VAL(rec$)„  LINE INPUT #1, rec$„  H = VAL(rec$)„  LINE INPUT #1, rec$„  I = VAL(rec$)„  LINE INPUT #1, rec$„  J = VAL(rec$)„  LINE INPUT #1, rec$„  CF = VAL(rec$)„  LINE (G, H)-(I, J), CF, B„  END IF„„  IF valg$ = "Strek" THEN„  LINE INPUT #1, rec$„  G = VAL(rec$)„  LINE INPUT #1, rec$„  H = VAL(rec$)„  LINE INPUT #1, rec$„  I = VAL(rec$)„  LINE INPUT #1, rec$„  J = VAL(rec$)„  LINE INPUT #1, rec$„  CF = VAL(rec$)„  LINE (G, H)-(I, J), CF„  END IF„  IF valg$ = "S" THEN„  LINE INPUT #1, rec$„  G = VAL(rec$)„  LINE INPUT #1, rec$„  H = VAL(rec$)„  LINE INPUT #1, rec$„  RADIUS = VAL(rec$)„  LINE INPUT #1, rec$„  CF = VAL(rec$)„  CIRCLE (G, H), RADIUS, CF„  END IF„ LOOP„ RETURN„„slutt:„END SUB„„Andrew Jones                   BOUNCING WORM                  FidoNet QUIK_BAS Echo          04-14-96 (14:40)       QB, QBasic, PDS        63   1537     WORM.BAS    'Here's a trippy VGA screensaver of a WORM moving on a VGA background.  He„'moves and is animated...  One problem is he starts leaving black spots„'after awhile, you'll see it„„DECLARE SUB animate (qq%)„DEFINT A-Z„SCREEN 13„RANDOMIZE TIMER„d = 8„v = 1„q = 1„x = 160„y = 100„xd = INT(RND * 4) + 2„yd = INT(RND * 4) + 2„IF INT(RND * 10) > 5 THEN xd = -xd ELSE xd = ABS(xd)„IF INT(RND * 10) > 5 THEN yd = -yd ELSE yd = ABS(yd)„FOR t = 0 TO 100„LINE (0, t)-(319, t), 200 - t„LINE (0, 200 - t)-(319, 200 - t), t„ „LINE (t, t)-(319 - t, t), t„LINE (t, 200 - t)-(319 - t, 200 - t), 200 - t„NEXT„DO„IF INT(RND * 30) + 1 = 15 AND xd < 0 THEN xd = xd - 1„IF xd = -1 THEN xd = 2„IF xd = -6 THEN xd = -5„IF INT(RND * 30) + 1 = 15 AND xd > 0 THEN xd = xd + 1„IF xd = 1 THEN xd = -2„IF xd = 6 THEN xd = -5„IF INT(RND * 30) + 1 = 15 AND yd > 0 THEN yd = yd + 1„IF yd = 1 THEN yd = -2„IF yd = -6 THEN yd = -5„IF INT(RND * 30) + 1 = 15 AND yd < 0 THEN yd = yd - 1„IF yd = -1 THEN yd = 2„IF yd = 6 THEN yd = 5„FOR t = 1 TO 8„CIRCLE (x, y), 15 - t, q + t„CIRCLE (x + 1, y), 15 - t, q + t„NEXT„x = x + xd„y = y + yd„IF x < 3 AND xd < 0 THEN xd = ABS(xd)„IF x > 316 AND xd > 0 THEN xd = -xd„IF y < 3 AND yd < 0 THEN yd = ABS(yd)„IF y > 196 AND yd > 0 THEN yd = -yd„q = q + 1„IF q = 255 THEN q = 1„v = v + d„IF v = 400 THEN d = -8„IF v = 0 THEN d = 8„animate v„LOOP„ „SUB animate (qq)„OUT &H3C8, 1„FOR t = 1 TO 255„OUT &H3C9, (t + qq)„OUT &H3C9, (t + qq) \ 2„OUT &H3C9, (t + qq) \ 4„NEXT„END SUB„Andrew Jones                   BOX ENLARGES AS BALL BOUNCES   FidoNet QUIK_BAS Echo          04-14-96 (14:42)       QB, QBasic, PDS        62   1347     BOXBALL.BAS 'Sorry about that profanity in BOB.BAS, just saw it as I was cruising„'through my programs..eek.. here's an EGA demonstration:)„„DEFINT A-Z„CONST numstars = 30„apage = 0„vpage = 1„x = 0„y = 0„bx = 6„by = 7„d = 1„b = 1„q = 4„DIM sx(numstars)„DIM sy(numstars)„DIM sc(numstars)„SCREEN 7„FOR t = 0 TO numstars„sx(t) = INT(RND * 320)„sy(t) = INT(RND * 320)„sc(t) = INT(RND * 3) + 1„IF sc(t) = 1 THEN sc(t) = 8„IF sc(t) = 2 THEN sc(t) = 7„IF sc(t) = 3 THEN sc(t) = 15„NEXT„DO„SCREEN 7, , apage, vpage„DRAW "TA" + STR$(b) + "S" + STR$(q)„DRAW "c15bm160,100u20r20c8d20l20c15c8u20c15e10r20e-10d20e10u20"„FOR t = 0 TO numstars„IF sx(t) = 0 AND sy(t) = 0 THEN„sx(t) = INT(RND * 20) + 300„sy(t) = INT(RND * 200)„sc(t) = INT(RND * 3) + 1„IF sc(t) = 1 THEN sc(t) = 8„IF sc(t) = 2 THEN sc(t) = 7„IF sc(t) = 3 THEN sc(t) = 15„END IF„PSET (sx(t), sy(t)), sc(t)„sx(t) = sx(t) - sc(t)„IF sx(t) < 0 THEN sx(t) = 0: sy(t) = 0„NEXT„x = x + bx„y = y + by„IF x > 320 THEN bx = -bx: x = 320„IF y > 200 THEN by = -by: y = 200„IF x < 0 THEN bx = ABS(bx)„IF y < 0 THEN by = ABS(by)„CIRCLE (x, y), 2, 4„CIRCLE (x, y), 1, 12„CIRCLE (x + 1, y), 2, 4„CIRCLE (x + 1, y), 1, 12„SWAP apage, vpage„SCREEN 7, , apage, vpage„CLS 1„b = b + 10„q = q + d„IF q >= 22 THEN d = -1„IF q = 4 THEN d = 1„IF b >= 360 THEN b = 1„LOOP„Andrew Jones                   SNOWY RAIN                     FidoNet QUIK_BAS Echo          04-14-96 (14:43)       QB, QBasic, PDS        26   529      SNOWRAIN.BAS'Snowy Rain.  I think it's rad, tell me what you think:)„„DEFINT A-Z„ON KEY(1) GOSUB fofo„KEY(1) ON„CONST snow = 10„DIM sx(snow)„DIM sy(snow)„SCREEN 13„FOR t = 0 TO snow„sx(t) = INT(RND * 320)„sy(t) = INT(RND * 20)„NEXT„DO„FOR t = 0 TO snow„IF sy(t) = 199 THEN sy(t) = 0: sx(t) = INT(RND * 320): sy(t) = INT(RND * 20)„v = INT(RND * 15) + 1„PSET (sx(t), sy(t)), v + 15„IF v < 6 THEN sx(t) = sx(t) + 1„IF v > 10 THEN sx(t) = sx(t) - 1„sy(t) = sy(t) + 1„IF sy(t) > 199 THEN sy(t) = 199„NEXT„LOOP„fofo:„END„Unknown Author(s)              MOUSE PAINT PROGRAM            pages.prodigy.com/gamersp      04-01-96 (11:01)       QB, PDS                1238 32348    DRAW!.BAS   'Click the right mouse button to open the menu„„'DRAW! v3.6    'Fixed I/O error, and a better„               'printing routine.  Now to print„               'just press 'P' while in the draw„               'space and DRAW! will remove the„               'mouse cursor from the screen and„               'print it.„„'NOTE: QB 4.5 user PLEASE LOAD THE QB.QLB library! To do so„'start QB 4.5 like so at the command prompt:„'C:\QB45>QB /L QB„'„„'If you have any trouble loading a .PAL(palette file),„'.PL1-4(EGA BSAVE files), or a .PIC(VGA BSAVE file) please send„'me E-MAIL. And just so you know:„'BSAVE files are based on code supplied by Dave Gentry from„'VGA LESSON #39. PALette files are simple text format that„'support 1 line per color and have 4 segments to a line. Here is„'the basic format for a PAL file:„'Segment 1:     Segment 2:   Segment 3:   Segment 4:„'The COLOR #    Red value    Green value  Blue value„'(These can be read using INPUT #1, CO%,R%,G%,B%)„'Once those values are read into memory use David Gilhams EGA/VGA„'palette routines:„'OUT &H3C8, CO% 'Selects color to change„'OUT &H3C9, R% 'Selects red value„'OUT &H3C9, G% 'Selects green value„'OUT &H3C9, B% 'Selects blue value„„'Credits to:„'„'~Dave~ Gentry, for his BLOAD/BSAVE routines!„'David Gillham, for his EGA palette routines.„'„DECLARE SUB PRINTIT ()„DECLARE SUB PALIO (F$)„DECLARE SUB SCREENIO (F$, flag!)„DECLARE SUB SAVEPRINTER (PRNTRTYPE%)„DECLARE SUB PRINTSETUP ()„DECLARE SUB INTRO ()„DECLARE SUB PAINTIT ()„DECLARE SUB COPYIT ()„DECLARE SUB TEXTFONT ()„DECLARE SUB PALETTECHANGE ()„DECLARE SUB WARN (RETURN.CODE%)„DECLARE SUB CHANGESCREENMODE ()„DECLARE SUB ZOBJ (SEL%)„DECLARE SUB PLOT (XX%, YY%, X%, Y%)„DECLARE SUB PLOTX (PX%, PY%)„DECLARE SUB SAVEIT (OP%)„DECLARE SUB ZOOM ()„DECLARE SUB AIRBRUSH ()„DECLARE SUB FONT (TEXT$, X%, Y%, stepX%, stepY%, CO!, Ang%)„DECLARE SUB BUTTON (X1%, Y1%, X2%, Y2%, d%)„DECLARE SUB DOODLE ()„DECLARE SUB DRAWOBJ (OBJ%)„DECLARE SUB POPOPS (SEL%)„DECLARE SUB NEWDIR ()„DECLARE SUB SETCOM ()„DECLARE SUB SETUP ()„DECLARE SUB NEWODIR ()„DECLARE SUB TEXTBOX (BY!, BX!, EY!, EX!, ASCII!, C!, BC!, SHADOW, BS)„DECLARE SUB BOX (BX, BY, EX, EY, B)„DECLARE SUB Pause ()„DECLARE SUB MOUSESTATUS (LB%, RB%, XMOUSE%, YMOUSE%)„DECLARE SUB MouseRange (X1%, Y1%, X2%, Y2%)„DECLARE SUB MousePut (X%, Y%)„DECLARE SUB MOUSEHIDE ()„DECLARE SUB MouseDriver (ax%, BX%, cx%, dx%)„DECLARE SUB MOUSESHOW ()„DECLARE FUNCTION MouseInit% ()„DIM SHARED Mouse$„DIM SHARED THICK%, CO%, SCREENMODE%, PLX%(100), FONTSIZE%„CONST UP = 1„CONST DOWN = 0„CONST ZOOMHELP = 1                'Set to zero to disable ZOOM instructions„FONTSIZE% = 1                     'Set to default FONT size„SCREENMODE% = 7                   'Set to default screen mode„„Mouse$ = SPACE$(57)„FOR i% = 1 TO 57„  READ a$„  H$ = CHR$(VAL("&H" + a$))„  MID$(Mouse$, i%, 1) = H$„NEXT i%„DATA 55,89,E5,8B,5E,0C,8B,07,50,8B,5E,0A,8B,07,50,8B„DATA 5E,08,8B,0F,8B,5E,06,8B,17,5B,58,1E,07,CD,33,53„DATA 8B,5E,0C,89,07,58,8B,5E,0A,89,07,8B,5E,08,89,0F„DATA 8B,5E,06,89,17,5D,CA,08,00„CLS : THICK% = 10: CO% = 1„ms% = MouseInit%„IF NOT ms% THEN„  PRINT "Mouse not found"„  END„END IF„OPEN "DRAW!PAL.TMP" FOR OUTPUT AS #1: CLOSE #1„'ON ERROR GOTO ERRORTRAP„CHANGEIT:„SCREEN SCREENMODE%: PAINT (1, 1), 15: MOUSESHOW„FUNC% = 1„in:„K$ = INKEY$„MOUSESTATUS LB%, RB%, X%, Y%„IF FUNC% > 0 AND FUNC% < 6 THEN DRAWOBJ FUNC%„IF FUNC% = 8 THEN DOODLE„IF FUNC% = 6 THEN AIRBRUSH„IF FUNC% = 7 THEN PAINTIT„IF FUNC% = 9 THEN ZOOM: POPOPS FUNC%„IF FUNC% = 10 THEN TEXTFONT„IF RB% = -1 THEN POPOPS FUNC%„IF FUNC% = 99 THEN GOTO CHANGEIT„IF K$ <> CHR$(27) THEN GOTO in„DATA G,a,m,e,r,s,'„DATA P,a,r,a,d,i,s,e„DATA S,o,f,t,w,a,r,e„printcode:„DATA 205, 5, 203  : ' int 5  retf  'Machine-language code„                                   'for printing screen.„'ERRORTRAP:„'PRINT "ERROR!! #";ERR„'RESUME NEXT„„SUB AIRBRUSH„RANDOMIZE TIMER„MOUSESTATUS LB%, RB%, X%, Y%„IF LB% = -1 THEN„MOUSEHIDE„XX% = INT(RND(1) * THICK%) + 1„YY% = INT(RND(1) * THICK%) + 1„PSET (X% - XX% - 1, Y% - YY% - 1), CO%„MOUSESHOW„END IF„MOUSESHOW„END SUB„„SUB BUTTON (X1%, Y1%, X2%, Y2%, d%)„IF d% = 1 THEN B1% = 15: B2% = 8„IF d% = 0 THEN B1% = 8: B2% = 15„LINE (X1%, Y1%)-(X2%, Y2%), 7, BF„LINE (X1%, Y1%)-(X2%, Y1%), B1%„LINE (X1%, Y1%)-(X1%, Y2%), B1%„LINE (X2%, Y1%)-(X2%, Y2%), B2%„LINE (X1%, Y2%)-(X2%, Y2%), B2%„END SUB„„SUB CHANGESCREENMODE„REDIM COVERUP5%(7000)„REDIM MODES$(5)„MODES$(1) = "320 X 200 X 16": MODES$(2) = "640 X 200 X 16"„MODES$(3) = "640 X 350 X 16": MODES$(4) = "640 X 480 X 16"„MODES$(5) = "320 X 200 X 256"„GET (14, 14)-(161, 101), COVERUP5%„BUTTON 14, 14, 161, 101, UP„BUTTON 15, 15, 160, 100, UP„BUTTON 17, 17, 30, 30, DOWN: LINE (18, 18)-(29, 29), 0: LINE (18, 29)-(29, 18), 0„BUTTON 32, 17, 158, 30, UP: LINE (33, 18)-(157, 29), 9, BF„FONT "Screen modes", 34, 20, 6, 0, 15, 0„FOR i% = 35 TO 90 STEP 12„a = a + 1„d% = 1„IF a = 1 AND SCREENMODE% = 7 THEN d% = 0„IF a = 2 AND SCREENMODE% = 8 THEN d% = 0„IF a = 3 AND SCREENMODE% = 9 THEN d% = 0„IF a = 4 AND SCREENMODE% = 12 THEN d% = 0„IF a = 5 AND SCREENMODE% = 13 THEN d% = 0„BUTTON 17, i%, 150, i% + 9, d%„FONT MODES$(a), 19, i% + 2, 6, 0, 0, 0„NEXT„MOUSESHOW„„WAIT4PRESS2:„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„IF X% > 17 AND Y% > 17 AND X% < 30 AND Y% < 30 THEN GOTO ABORTIT4„a = 0„FOR i% = 35 TO 90 STEP 12„a = a + 1„IF X% > 17 AND Y% > i% AND X% < 150 AND Y% < i% + 9 THEN„WARN RETURN.CODE%„IF RETURN.CODE% = 1 THEN GOTO ABORTIT4„IF a = 1 THEN SCREENMODE% = 7: GOTO ABORTIT4„IF a = 2 THEN SCREENMODE% = 8: GOTO ABORTIT4„IF a = 3 THEN SCREENMODE% = 9: GOTO ABORTIT4„IF a = 4 THEN SCREENMODE% = 12: GOTO ABORTIT4„IF a = 5 THEN SCREENMODE% = 13: GOTO ABORTIT4„END IF„NEXT„GOTO WAIT4PRESS2„„ABORTIT4:„PUT (14, 14), COVERUP5%, PSET„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„„END SUB„„SUB DELAY„„END SUB„„SUB DOODLE„MOUSESHOW„MOUSESTATUS LB%, RB%, X%, Y%„IF LB% = -1 THEN MOUSEHIDE„IF LB% = -1 THEN LINE (X% - 1, Y% - 1)-(X% - 1 - THICK% - 1, Y% - 1 - THICK% - 1), CO%, BF„IF LB% = -1 THEN MOUSESHOW„END SUB„„SUB DRAWOBJ (OBJ%)„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„IF INKEY$ = "p" OR INKEY$ = "P" THEN PRINTIT„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„PLOTX X%, Y%„XX% = X%: YY% = Y%„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„IF INKEY$ = "p" OR INKEY$ = "P" THEN PRINTIT„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN GOTO ABORTIT„WEND„MOUSEHIDE„PUT (XX% - 4, YY% - 4), PLX%, PSET„IF OBJ% = 1 OR OBJ% = 3 OR OBJ% = 5 THEN„FOR i = 0 TO THICK% - 1„IF OBJ% = 1 THEN LINE (XX%, YY% - i)-(X%, Y% - i), CO%„IF OBJ% = 3 THEN LINE (XX%, YY%)-(X%, Y%), CO%, BF„IF OBJ% = 5 AND X% > XX% THEN COLOR CO%: CIRCLE (XX%, YY%), X% - XX%: PAINT (XX%, YY%), CO%„IF OBJ% = 5 AND XX% > X% THEN COLOR CO%: CIRCLE (XX%, YY%), XX% - X%: PAINT (XX%, YY%), CO%„NEXT„END IF„IF OBJ% = 2 THEN„IF XX% < X% AND YY% < Y% OR XX% > X% AND YY% > Y% THEN„FOR i = 1 TO THICK%„LINE (XX% + i, YY% + i)-(X% - i, Y% - i), CO%, B„NEXT„END IF„IF XX% > X% AND YY% < Y% OR XX% < X% AND YY% > Y% THEN„FOR i = 1 TO THICK%„LINE (XX% - i, YY% + i)-(X% + i, Y% - i), CO%, B„NEXT„END IF„END IF„IF OBJ% = 4 THEN„FOR i = 1 TO THICK%„IF OBJ% = 4 AND X% > XX% THEN COLOR CO%: CIRCLE (XX%, YY%), X% - XX% + i: CIRCLE (XX% + 1, YY%), X% - XX% + i„IF OBJ% = 4 AND XX% > X% THEN COLOR CO%: CIRCLE (XX%, YY%), XX% - X% + i: CIRCLE (XX% + 1, YY%), XX% - X% + i„NEXT„END IF„„MOUSESHOW„EXIT SUB„ABORTIT:„PUT (XX% - 4, YY% - 4), PLX%, PSET„END SUB„„SUB FONT (TEXT$, X%, Y%, stepX%, stepY%, CO, Ang%)„TEXT$ = UCASE$(TEXT$): T = LEN(TEXT$)„IF Ang% < 4 THEN DRAW "A" + STR$(Ang%)„DRAW "S4;BM" + STR$(X%) + "," + STR$(Y%) + "C" + STR$(CO)„                                                          „FOR C = 1 TO T„SELECT CASE MID$(TEXT$, C, 1)„CASE "A": DRAW "d4u4r4d4u2l4u2"„CASE "B": DRAW "d4r4l4u2r4l4u2r4d4u4l4"„CASE "C": DRAW "r4l4d4r4bu4l4"„CASE "D": DRAW "r4l3d4l1r4u4l4"„CASE "E": DRAW "d4r4l4u2r3l3u2r4l4"„CASE "F": DRAW "d4u2r3l3u2r4l4"„CASE "G": DRAW "r4l4d4r4u2l1r1bu2l4"„CASE "H": DRAW "d4u2r4u2d4u4bl4"„CASE "I": DRAW "r4l2d4l2r4bu4l4"„CASE "J": DRAW "br4d3bd1bl1l3bu4"„CASE "K": DRAW "d4u2r2u1r2u1r1l1d1l2d1l2r2d1r2d1r1bu4bl4"„CASE "L": DRAW "d4r4l4u4"„CASE "M": DRAW "d4u4f2e2d4bu4bl4"„CASE "N": DRAW "d4u4f4u4bl4"„CASE "O": DRAW "d4r4u4l4"„CASE "P": DRAW "d4u4r4d2l4u2"„CASE "Q": DRAW "d4r4u4l4d4r4h1f2h1u4l4"„CASE "R": DRAW "d4u4r4d2l4r2f2h2l2u2"„CASE "S": DRAW "r4l4d2r4d2l4bu4"„CASE "T": DRAW "r4l2d4u4l2"„CASE "U": DRAW "d4r4u4bl4"„CASE "V": DRAW "d2f2e2u2bl4"„CASE "W": DRAW "d4e2f2u4bl4"„CASE "X": DRAW "f4h2g2e4bl4"„CASE "Y": DRAW "f3d1u1e3bl4"„CASE "Z": DRAW "r4g4r4bu4l4"„CASE "1": DRAW "br2d4u4bl2"„CASE "2": DRAW "r3d1g3r3bu4bl4"„CASE "3": DRAW "r4d2l3r3d2l4bu4"„CASE "4": DRAW "d2r4d2u4bl4"„CASE "5": DRAW "r4l4d2r4d2l4bu4"„CASE "6": DRAW "r4l4d4r4u2l4u2"„CASE "7": DRAW "r4d4u4l4"„CASE "8": DRAW "r4d4l4u4d2r4u2l4"„CASE "9": DRAW "r4d4u2l4u2"„CASE "0": DRAW "r4d4l4u4r4g4u4"„END SELECT„DRAW "BR" + STR$(stepX%)„IF stepY% > 0 THEN„DRAW "BD" + STR$(stepY%)„ELSE„DRAW "BU" + STR$(ABS(stepY%))„END IF„NEXT C„DRAW "A0"„END SUB„„SUB INTRO„SCREEN 13„FOR i = 1 TO 15: PALETTE i, 0: NEXT„DEF SEG = &HA000„'BLOAD "LOGO320.PIC", 0„'PALIO "LOGO320"„SOUND 2000, .5: SOUND 3000, 1„WHILE INKEY$ = "": WEND„END SUB„„SUB MouseDriver (ax%, BX%, cx%, dx%)„  DEF SEG = VARSEG(Mouse$)„  Mouse% = SADD(Mouse$)„  CALL ABSOLUTE(ax%, BX%, cx%, dx%, Mouse%)„END SUB„„SUB MOUSEHIDE„ ax% = 2„ MouseDriver ax%, 0, 0, 0„END SUB„„FUNCTION MouseInit%„  ax% = 0„  MouseDriver ax%, 0, 0, 0„  MouseInit% = ax%„END FUNCTION„„SUB MousePut (X%, Y%)„  ax% = 4„  cx% = X%„  dx% = Y%„  MouseDriver ax%, 0, cx%, dx%„END SUB„„SUB MouseRange (X1%, Y1%, X2%, Y2%)„  ax% = 7„  cx% = X1%„  dx% = X2%„  MouseDriver ax%, 0, cx%, dx%„  ax% = 8„  cx% = Y1%„  dx% = Y2%„  MouseDriver ax%, 0, cx%, dx%„END SUB„„SUB MOUSESHOW„  ax% = 1„  MouseDriver ax%, 0, 0, 0„END SUB„„SUB MOUSESTATUS (LB%, RB%, XMOUSE%, YMOUSE%)„  ax% = 3„  MouseDriver ax%, BX%, cx%, dx%„  LB% = ((BX% AND 1) <> 0)„  RB% = ((BX% AND 2) <> 0)„  XMOUSE% = cx%„  YMOUSE% = dx%„  IF SCREENMODE% = 7 OR SCREENMODE% = 13 THEN XMOUSE% = XMOUSE% / 2„END SUB„„SUB PAINTIT„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„MOUSEHIDE„PAINT (X%, Y%), CO%„MOUSESHOW„END SUB„„SUB PALETTECHANGE„REDIM COVERUP6%(8000)„GET (30, 30)-(170, 135), COVERUP6%„BUTTON 30, 30, 170, 135, UP„BUTTON 32, 32, 46, 46, DOWN: LINE (33, 33)-(45, 45), 0: LINE (33, 45)-(45, 33), 0„BUTTON 48, 32, 168, 46, UP„BUTTON 120, 87, 160, 98, UP„BUTTON 33, 122, 63, 132, UP„BUTTON 70, 122, 100, 132, UP„FONT "SAVE  LOAD", 35, 124, 6, 0, 0, 0„FONT "OK", 130, 91, 6, 0, 0, 0„LINE (49, 33)-(167, 45), 9, BF„FONT "PALETTE", 51, 35, 6, 0, 15, 0„FONT "RED", 32, 60, 6, 0, 12, 0„FONT "GREEN", 32, 75, 6, 0, 10, 0„FONT "BLUE", 32, 90, 6, 0, 9, 0„FOR i% = 55 TO 85 STEP 15„BUTTON 70, i%, 80, i% + 13, UP„BUTTON 83, i%, 103, i% + 13, UP„BUTTON 105, i%, 115, i% + 13, UP„NEXT„FONT "PALETTE WILL CHANGE THE", 32, 100, 6, 0, 0, 0„FONT "VALUE OF THE", 32, 106, 6, 0, 0, 0„COL = CO%„FONT "CURRENT", 109, 106, 6, 0, COL, 0„FONT "COLOR", 32, 112, 6, 0, 0, 0„„MOUSESHOW„„WAIT4PRESS4:„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„LINE (120, 60)-(160, 85), CO%, BF„FONT STR$(R%), 82, 60, 6, 0, 0, 0„FONT STR$(G%), 82, 75, 6, 0, 0, 0„FONT STR$(B%), 82, 90, 6, 0, 0, 0„WEND„MOUSEHIDE„IF X% > 33 AND Y% > 122 AND X% < 63 AND Y% < 132 THEN„OPEN "DRAW!PAL.TMP" FOR APPEND AS #1„IF CHANGED% <> 0 THEN WRITE #1, CO%, R%, G%, B%„CLOSE #1„SAVEIT 3„END IF„IF X% > 70 AND Y% > 122 AND X% < 100 AND Y% < 132 THEN SAVEIT 4„IF X% > 120 AND Y% > 87 AND X% < 160 AND Y% < 98 THEN„PUT (30, 30), COVERUP6%, PSET„OPEN "DRAW!PAL.TMP" FOR APPEND AS #1„IF R% <> 0 AND G% <> 0 AND B% <> 0 THEN WRITE #1, CO%, R%, G%, B%„CLOSE #1„EXIT SUB„END IF„IF X% > 32 AND Y% > 32 AND X% < 46 AND Y% < 46 THEN PUT (30, 30), COVERUP6%, PSET: EXIT SUB„IF X% > 70 AND Y% > 55 AND X% < 80 AND Y% < 70 THEN„LINE (84, 56)-(102, 67), 7, BF„R% = R% - 1„IF R% = -1 THEN R% = 63„GOSUB CPAL„END IF„IF X% > 105 AND Y% > 55 AND X% < 115 AND Y% < 70 THEN„LINE (84, 56)-(102, 67), 7, BF„R% = R% + 1„IF R% = 64 THEN R% = 0„GOSUB CPAL„END IF„IF X% > 70 AND Y% > 70 AND X% < 80 AND Y% < 85 THEN„LINE (84, 71)-(102, 82), 7, BF„G% = G% - 1„IF G% = -1 THEN G% = 63„GOSUB CPAL„END IF„IF X% > 105 AND Y% > 70 AND X% < 115 AND Y% < 85 THEN„LINE (84, 71)-(102, 82), 7, BF„G% = G% + 1„IF G% = 64 THEN G% = 0„GOSUB CPAL„END IF„IF X% > 70 AND Y% > 85 AND X% < 80 AND Y% < 100 THEN„LINE (84, 86)-(102, 97), 7, BF„B% = B% - 1„IF B% = -1 THEN B% = 63„GOSUB CPAL„END IF„IF X% > 105 AND Y% > 85 AND X% < 115 AND Y% < 100 THEN„LINE (84, 86)-(102, 97), 7, BF„B% = B% + 1„IF B% = 64 THEN B% = 0„GOSUB CPAL„END IF„„GOTO WAIT4PRESS4„CPAL:„CHANGED% = 1„'Special thanks to David Gilham(SP?) for these EGA extended palette routines!„OUT &H3C8, CO% 'Selects color to change  \„OUT &H3C9, R% 'Selects red value         \„OUT &H3C9, G% 'Selects green value       /„OUT &H3C9, B% 'Selects blue value       /„RETURN„END SUB„„SUB PALIO (F$)„F$ = F$ + ".pal"„PALETTE„OPEN F$ FOR APPEND AS #1: CLOSE #1„OPEN F$ FOR INPUT AS #1„WHILE NOT (EOF(1))„INPUT #1, C%, R%, G%, B%„GOSUB CCPAL„WEND„CLOSE #1„EXIT SUB„„CCPAL:„OUT &H3C8, C% 'Selects color to change  \„OUT &H3C9, R% 'Selects red value         \„OUT &H3C9, G% 'Selects green value       /„OUT &H3C9, B% 'Selects blue value       /„RETURN„„„END SUB„„'This sub used for demo, not needed for mouse calls„SUB Pause„  PRINT "Press any key to continue..."„  G$ = INPUT$(1)„  PRINT„END SUB„„SUB PLOT (XX%, YY%, X%, Y%)„MOUSEHIDE„PAINT (XX%, YY%), CO%, 0„PSET (188 + X%, 6 + Y%), CO%„MOUSESHOW„END SUB„„SUB PLOTX (PX%, PY%)„MOUSEHIDE„N = 4„GET (PX% - N, PY% - N)-(PX% + N, PY% + N), PLX%„LINE (PX% - N, PY% - N)-(PX% + N, PY% + N), 0„LINE (PX% + N, PY% - N)-(PX% - N, PY% + N), 0„MOUSESHOW„END SUB„„SUB POPOPS (FUNC%)„THEWHOLETHING:„IF SCREENMODE% = 13 THEN REDIM COVERUP1%(31000)„IF SCREENMODE% <> 13 THEN REDIM COVERUP1%(13000)„MOUSEHIDE„GET (1, 1)-(319, 150), COVERUP1%„BUTTON 1, 1, 319, 150, UP„BUTTON 2, 2, 318, 149, UP„BUTTON 5, 5, 18, 18, DOWN: LINE (6, 6)-(17, 17), 0: LINE (6, 17)-(17, 6), 0„BUTTON 21, 5, 316, 18, UP: LINE (22, 6)-(315, 17), 9, BF„BUTTON 130, 132, 175, 142, UP„BUTTON 190, 132, 210, 142, UP„BUTTON 178, 132, 188, 142, UP„BUTTON 212, 132, 222, 142, UP„BUTTON 225, 132, 300, 142, UP„FONT "Tools", 24, 9, 7, 0, 15, 0„REDRAW:„FONT "PALETTE", 132, 135, 6, 0, 0, 0„FONT "Screen mode", 227, 135, 6, 0, 0, 0„a% = 0„MOUSEHIDE„FOR i% = 5 TO 250 STEP 40„a% = a% + 1„BUTTON i%, 20, i% + 38, 50, UP„IF a% = FUNC% THEN BUTTON i%, 20, i% + 38, 50, DOWN„NEXT„FOR i% = 5 TO 175 STEP 40„a% = a% + 1„BUTTON i%, 53, i% + 38, 83, UP„IF a% = FUNC% THEN BUTTON i%, 53, i% + 38, 83, DOWN„NEXT„IF SCREENMODE% <> 13 THEN„FOR i = 5 TO 235 STEP 15„C = C + 1„LINE (i, 85)-(i + 14, 100), C - 1, BF„CS% = 0„IF C - 1 = CO% THEN CS% = 14„LINE (i, 85)-(i + 14, 100), CS%, B„NEXT„C = 0„END IF„IF SCREENMODE% = 13 THEN„FOR a = 0 TO 4„FOR i = 5 TO 295 STEP 5„C = C + 1„IF C > 255 THEN GOTO NXT„LINE (i, 85 + 11 * a)-(i + 5, 96 + 11 * a), C - 1, BF„CS% = 0„IF C - 1 = CO% THEN CS% = 14„LINE (i, 85 + 11 * a)-(i + 5, 96 + 11 * a), CS%, B„NXT:„NEXT„NEXT„END IF„LINE (7, 21)-(42, 49), 9„LINE (48, 22)-(80, 48), 4, B„LINE (88, 22)-(120, 48), 14, BF„COLOR 10: CIRCLE (144, 35), 16„COLOR 11: CIRCLE (184, 35), 16: PAINT (184, 35), 11„LINE (215, 30)-(225, 48), 0, B: LINE (221, 33)-(225, 45), 0, B: PAINT (222, 34), 4, 0„LINE (215, 30)-(217, 28), 0: LINE (217, 28)-(223, 28), 0: LINE (223, 28)-(225, 30), 0„LINE (220, 27)-(221, 26), 15, BF„FONT "PAINT", 248, 27, 6, 0, 12, 0„FONT "DOODLE", 7, 60, 6, 0, 10, 0„FONT "ZOOM", 53, 60, 6, 0, 9, 0„FONT "ABC", 90, 60, 6, 0, 1, 0„FONT "SAVE", 130, 60, 6, 0, 0, 0„FONT "LOAD", 170, 60, 6, 0, 0, 0„BUTTON 210, 60, 250, 70, UP„BUTTON 255, 60, 290, 70, UP„BUTTON 210, 72, 290, 82, UP„FONT "EXIT", 215, 62, 6, 0, 0, 0„FONT "UNDO", 260, 62, 6, 0, 0, 0„FONT "PRINTER SETUP", 212, 74, 6, 0, 0, 0„„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„„WAIT4PRESS:„FONT STR$(THICK%), 188, 136, 6, 0, 0, 0„MOUSESHOW„MOUSESTATUS LB%, RB%, X%, Y%„IF LB% = -1 THEN„MOUSEHIDE„IF X% > 210 AND Y% > 72 AND X% < 290 AND Y% < 82 THEN PRINTSETUP„IF X% > 210 AND Y% > 60 AND X% < 250 AND Y% < 70 THEN SYSTEM„IF X% > 130 AND Y% > 132 AND X% < 175 AND Y% < 142 THEN PALETTECHANGE„IF X% > 225 AND Y% > 132 AND X% < 300 AND Y% < 142 THEN„OSC% = SCREENMODE%„CHANGESCREENMODE„IF OSC% <> SCREENMODE% THEN FUNC% = 99: EXIT SUB„END IF„IF X% > 178 AND Y% > 132 AND X% < 188 AND Y% < 142 AND LB% = -1 THEN„THICK% = THICK% - 1„IF THICK% = 0 THEN THICK% = 1„BUTTON 190, 132, 210, 142, UP„GOSUB DELAY„GOTO WAIT4PRESS„END IF„IF X% > 212 AND Y% > 132 AND X% < 222 AND Y% < 142 AND LB% = -1 THEN„THICK% = THICK% + 1„IF THICK% = 25 THEN THICK% = 24„BUTTON 190, 132, 210, 142, UP„GOSUB DELAY„GOTO WAIT4PRESS„END IF„„IF SCREENMODE% <> 13 THEN„FOR i = 5 TO 235 STEP 15„C = C + 1„IF SCREENMODE% <> 13 AND X% > i AND Y% > 85 AND X% < i + 14 AND Y% < 100 THEN CO% = C - 1„NEXT„C = 0„END IF„C = 0„IF SCREENMODE% = 13 THEN„FOR a = 0 TO 4„FOR i = 5 TO 295 STEP 5„C = C + 1„IF X% > i AND Y% > 85 + 11 * a AND X% < i + 5 AND Y% < 96 + 11 * a THEN CO% = C - 1„NEXT„NEXT„C = 0„END IF„„a% = 0„IF X% > 5 AND Y% > 5 AND X% < 18 AND Y% < 18 THEN GOTO ABORTIT2„FOR i% = 5 TO 250 STEP 40„a% = a% + 1„IF X% > i% AND Y% > 20 AND X% < i% + 38 AND Y% < 50 THEN LF% = FUNC%: FUNC% = a%„IF a% = FUNC% THEN BUTTON i%, 20, i% + 38, 50, DOWN„NEXT„FOR i% = 5 TO 170 STEP 40„a% = a% + 1„IF X% > i% AND Y% > 53 AND X% < i% + 38 AND Y% < 83 THEN LF% = FUNC%: FUNC% = a%„IF a% = FUNC% THEN BUTTON i%, 53, i% + 38, 83, DOWN„NEXT„IF FUNC% = 11 THEN PUT (1, 1), COVERUP1%, PSET: SAVEIT 1: FUNC% = LF%: GOTO THEWHOLETHING„IF FUNC% = 12 THEN PUT (1, 1), COVERUP1%, PSET: SAVEIT 2: FUNC% = LF%: GOTO THEWHOLETHING„IF X% > 255 AND Y% > 60 AND X% < 290 AND Y% < 70 THEN PUT (1, 1), COVERUP1%, PSET: SAVEIT 6: FUNC% = LF%: MOUSESHOW: GOTO THEWHOLETHING„„MOUSESHOW„GOTO REDRAW„END IF„GOTO WAIT4PRESS„ABORTIT2:„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„MOUSEHIDE„PUT (1, 1), COVERUP1%, PSET„SAVEIT 5„MOUSESHOW„ERASE COVERUP1%„EXIT SUB„DELAY:„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„RETURN„END SUB„„SUB PRINTIT„RESTORE printcode„MOUSEHIDE„    REDIM a%(2)„    DEF SEG = VARSEG(a%(0))„    FOR i% = 0 TO 2„       READ d%„       POKE VARPTR(a%(0)) + i%, d%„    NEXT i%„    CALL ABSOLUTE(VARPTR(a%(0)))„    DEF SEG„MOUSESHOW„END SUB„„SUB PRINTSETUP„OPEN "DRAWPRNT.STP" FOR APPEND AS #1: CLOSE #1„OPEN "DRAWPRNT.STP" FOR INPUT AS #1„WHILE NOT (EOF(1))„INPUT #1, PRN%„WEND„CLOSE #1„IF PRN% = 0 THEN PRN% = 1„REDIM PR$(18), DRV$(18)„PR$(1) = "IBM B/W Printer": DRV$(1) = "COLOR1"„PR$(2) = "IBM RGB Printer": DRV$(2) = "COLOR4"„PR$(3) = "IBM CMY Printer": DRV$(3) = "COLOR8"„PR$(4) = "HP PCL Default": DRV$(4) = "HPDEFAULT"„PR$(5) = "HP Deskjet": DRV$(5) = "DESKJET"„PR$(6) = "IBM PROprinter": DRV$(6) = "GRAPHICS"„PR$(7) = "IBM Quietwriter": DRV$(7) = "GRAPHICS"„PR$(8) = "IBM Graphics WIDE": DRV$(8) = "GRAPHICSWIDE"„PR$(9) = "HP Laserjet": DRV$(9) = "LASERJET"„PR$(10) = "HP Laserjet II": DRV$(10) = "LASERJETII"„PR$(11) = "HP Paintjet": DRV$(11) = "PAINTJET"„PR$(12) = "HP Quitjet": DRV$(12) = "QUIETJET"„PR$(13) = "HP Quitjet plus": DRV$(13) = "QUIETJETPLUS"„PR$(14) = "HP Ruggedwriter": DRV$(14) = "RUGGEDWRITER"„PR$(15) = "HP Ruggedwriterwide": DRV$(15) = "RUGGEDWRITERWIDE"„PR$(16) = "IBM Thermal printer": DRV$(16) = "THERMAL"„PR$(17) = "HP Thinkjet": DRV$(17) = "THINKJET"„REDIM COVERUP8%(10000)„GET (18, 18)-(200, 90), COVERUP8%„BUTTON 18, 18, 200, 90, UP„FONT "TO PRINT MOVE MOUSE OFF SCREEN", 20, 75, 6, 0, 0, 0„FONT "AND PRESS SHIFT PRNT SCRN", 20, 82, 6, 0, 0, 0„BUTTON 20, 20, 34, 34, DOWN: LINE (21, 21)-(33, 33), 0: LINE (21, 33)-(33, 21), 0„BUTTON 36, 20, 198, 34, UP: LINE (37, 21)-(197, 33), 9, BF„FONT "PRINTER SETUP", 38, 22, 6, 0, 15, 0„BUTTON 30, 40, 40, 55, UP„BUTTON 45, 40, 160, 55, UP„BUTTON 165, 40, 175, 55, UP„BUTTON 70, 58, 110, 68, UP„FONT "OK", 85, 60, 6, 0, 0, 0„WAIT4PRESS6:„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„FONT PR$(PRN%), 47, 42, 6, 0, 0, 0„WEND„IF X% > 70 AND Y% > 58 AND X% < 110 AND Y% < 68 THEN„PUT (18, 18), COVERUP8%, PSET„OPEN "DRAWPRNT.STP" FOR OUTPUT AS #1„WRITE #1, PRN%„SHELL "GRAPHICS " + DRV$(PRN%) + " /R"„CLOSE #1„„EXIT SUB„END IF„IF X% > 20 AND Y% > 20 AND X% < 34 AND Y% < 34 THEN PUT (18, 18), COVERUP8%, PSET: EXIT SUB„IF X% > 30 AND Y% > 40 AND X% < 40 AND Y% < 55 THEN„PRN% = PRN% - 1„IF PRN% = 0 THEN PRN% = 1„BUTTON 45, 40, 160, 55, UP„END IF„IF X% > 165 AND Y% > 40 AND X% < 175 AND Y% < 55 THEN„PRN% = PRN% + 1„IF PRN% = 18 THEN PRN% = 17„BUTTON 45, 40, 160, 55, UP„END IF„„„GOTO WAIT4PRESS6„END SUB„„SUB SAVEIT (OP%)„IF OP% = 5 THEN F2$ = "DRAWUNDO": OP% = 1: GOTO UNDOSAVE„IF OP% = 6 THEN F2$ = "DRAWUNDO": OP% = 2: GOTO UNDOSAVE„REDIM COVERUP2%(10000)„MOUSEHIDE„GET (1, 1)-(202, 55), COVERUP2%„BUTTON 1, 1, 202, 55, UP„IF SCREENMODE% = 7 OR SCREENMODE% = 9 OR SCREENMODE% = 8 THEN COLOR 15, 7„LOCATE 2, 2: PRINT "Filename(NO EXTENSION!):"„COLOR 9„REIN:„LOCATE 3, 2: PRINT "              "„LOCATE 3, 2: INPUT "", FILENAME$„F2$ = FILENAME$„IF LEN(FILENAME$) > 8 THEN GOTO REIN„PUT (1, 1), COVERUP2%, PSET„UNDOSAVE:„MOUSESHOW„IF SCREENMODE% = 7 OR SCREENMODE% = 9 OR SCREENMODE% = 8 THEN COLOR 15, 0„IF OP% = 3 THEN„OPEN "DRAW!PAL.TMP" FOR INPUT AS #2„OPEN F2$ + ".PAL" FOR APPEND AS #3„WHILE NOT (EOF(2))„INPUT #2, RC%, RR%, RG%, RB%„WRITE #3, RC%, RR%, RG%, RB%„WEND„CLOSE #2: CLOSE #3„MOUSESHOW„END IF„IF OP% = 4 THEN„CLOSE„OPEN F2$ + ".PAL" FOR INPUT AS #1„WHILE NOT (EOF(1))„INPUT #1, CO%, R%, G%, B%„'Special thanks to David Gilham(SP?) for these EGA extended palette routines!„OUT &H3C8, CO% 'Selects color to change  \„OUT &H3C9, R% 'Selects red value         \„OUT &H3C9, G% 'Selects green value       /„OUT &H3C9, B% 'Selects blue value       /„WEND„CLOSE„MOUSESHOW„END IF„IF OP% = 1 AND SCREENMODE% = 13 THEN„DEF SEG = &HA000„BSAVE F2$ + ".PIC", 0, 64000„END IF„IF OP% = 1 AND SCREENMODE% > 6 AND SCREENMODE% < 13 THEN SCREENIO F2$, 1: EXIT SUB„IF OP% = 2 AND SCREENMODE% = 13 THEN„DEF SEG = &HA000„BLOAD F2$ + ".PIC", 0„END IF„IF OP% = 2 AND SCREENMODE% > 6 AND SCREENMODE% < 13 THEN SCREENIO F2$, 0: EXIT SUB„END SUB„„SUB SAVEPRINTER (PRNTRTYPE%)„END SUB„„SUB SCREENIO (F$, flag)„  DEF SEG = &H40„  VidMode = PEEK(&H49)„  PageAddr& = PEEK(&H4E) + PEEK(&H4F) * 256&„  PageSize& = PEEK(&H4C) + PEEK(&H4D) * 256&„  IF VidMode = 19 THEN PageSize& = 64000„  DEF SEG„  SELECT CASE VidMode„    CASE 3, 4, 6   'SCREEN 0,1,2           „      DEF SEG = &HB800: GOSUB ScreenIO1: DEF SEG„    CASE 13 TO 19  'SCREEN 7 to 13         „      DEF SEG = &HA000„      IF VidMode = 19 THEN„        GOSUB ScreenIO1„      ELSE„        FOR p = 0 TO 3„          IF flag THEN„            OUT &H3CE, 4: OUT &H3CF, p„BSAVE F$ + ".PL" + LTRIM$(STR$(p)), PageAddr&, PageSize&„          ELSE„            OUT &H3C4, 2: OUT &H3C5, 2 ^ p„          BLOAD F$ + ".PL" + LTRIM$(STR$(p)), PageAddr&„          END IF„          IF p = 1 AND VidMode = 15 THEN EXIT FOR„        NEXT„      END IF„      DEF SEG„  END SELECT„  EXIT SUB„ScreenIO1:                                 „  IF flag THEN BSAVE F$ + ".SCR", PageAddr&, PageSize&'Goes on above line'-> ELSE BLOAD f$ + ".SCR", PageAddr&„  RETURN„„END SUB„„SUB TEXTFONT„REDIM COVERUP7%(10000)„GET (1, 1)-(318, 60), COVERUP7%„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„MOUSEHIDE„BUTTON 1, 1, 318, 60, UP„BUTTON 3, 3, 17, 17, DOWN: LINE (4, 4)-(16, 16), 0: LINE (4, 16)-(16, 4), 0„BUTTON 19, 3, 316, 17, UP: LINE (20, 4)-(315, 16), 9, BF„BUTTON 135, 45, 145, 55, UP„BUTTON 148, 45, 163, 55, UP„BUTTON 166, 45, 176, 55, UP„BUTTON 180, 45, 220, 55, UP„FONT STR$(FONTSIZE%), 145, 48, 6, 0, 0, 0„FONT "OK", 195, 48, 6, 0, 0, 0„FONT "Enter text", 22, 6, 6, 0, 15, 0„IF SCREENMODE% < 10 THEN COLOR CO%, 0„IF SCREENMODE% > 10 THEN COLOR CO%„LOCATE 4, 2: PRINT STRING$(38, " ")„LOCATE 5, 2: PRINT STRING$(38, " ")„MOUSESHOW„LOCATE 4, 2: LINE INPUT "", DUMMY$„LOCATE 5, 2: LINE INPUT "", DUMMY$„FONT "PRESS 'OK' WHEN READY", 5, 50, 6, 0, 12, 0„MOUSEHIDE„REDIM LINE1%(304, 8)„REDIM LINE2%(304, 8)„„FOR XX% = 8 TO 311„a% = a% + 1„FOR YY% = 24 TO 31„B% = B% + 1„LINE1%(a%, B%) = POINT(XX%, YY%)„NEXT„B% = 0„NEXT„a% = 0: B% = 0„FOR XX% = 8 TO 311„a% = a% + 1„FOR YY% = 32 TO 39„B% = B% + 1„LINE2%(a%, B%) = POINT(XX%, YY%)„NEXT„B% = 0„NEXT„„OX% = X%: OY% = Y%„„„WAIT4PRESS5:„MOUSESHOW„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„FONT STR$(FONTSIZE%), 145, 48, 6, 0, 0, 0„WEND„MOUSEHIDE„IF X% > 3 AND Y% > 3 AND X% < 17 AND Y% < 17 THEN PUT (1, 1), COVERUP7%, PSET: EXIT SUB„IF X% > 180 AND Y% > 45 AND X% < 220 AND Y% < 55 THEN GOTO PRINTFONT„IF X% > 135 AND Y% > 45 AND X% < 145 AND Y% < 55 THEN„FONTSIZE% = FONTSIZE% - 2„IF FONTSIZE% < 0 THEN FONTSIZE% = 1„BUTTON 148, 45, 163, 55, UP„GOTO WAIT4PRESS5„END IF„„IF X% > 166 AND Y% > 45 AND X% < 176 AND Y% < 55 THEN„FONTSIZE% = FONTSIZE% + 2„IF FONTSIZE% > 23 THEN FONTSIZE% = 23„BUTTON 148, 45, 163, 55, UP„GOTO WAIT4PRESS5„END IF„„GOTO WAIT4PRESS5„„„PRINTFONT:„S% = FONTSIZE% - 1„a% = 0: B% = 0„MOUSEHIDE„PUT (1, 1), COVERUP7%, PSET„FOR X = 8 TO 311„a% = a% + 1„FOR Y = 24 TO 31„B% = B% + 1„IF LINE1%(a%, B%) = 0 THEN GOTO NXT2„i = S%„IF i > 1 THEN LINE (OX% + a% * i, OY% + B% * i)-(OX% + a% * i + S%, OY% + B% * i + S%), LINE1%(a%, B%), BF„IF i < 3 THEN PSET (OX% + a%, OY% + B%), LINE1%(a%, B%)„IF i > 1 THEN LX% = a% * i„IF i < 3 THEN LX% = a%„NXT2:„NEXT„B% = 0„NEXT„a% = 0: B% = 0„OX% = OX% + LX%„FOR X = 8 TO 311„a% = a% + 1„FOR Y = 24 TO 31„B% = B% + 1„IF LINE2%(a%, B%) = 0 THEN GOTO NXT3„i = S%„LX% = LX% + 1„IF i > 1 THEN LINE (OX% + a% * i, OY% + B% * i)-(OX% + a% * i + S%, OY% + B% * i + S%), LINE2%(a%, B%), BF„IF i < 3 THEN PSET (OX% + a%, OY% + B%), LINE2%(a%, B%)„NXT3:„NEXT„B% = 0„NEXT„„MOUSESHOW„„END SUB„„SUB WARN (RETURN.CODE%)„REDIM WARNING%(6000)„GET (20, 20)-(140, 80), WARNING%„MOUSEHIDE„BUTTON 20, 20, 140, 80, UP„BUTTON 22, 22, 35, 35, DOWN: LINE (23, 23)-(34, 34), 0: LINE (23, 34)-(34, 23), 0„BUTTON 37, 22, 138, 35, UP: LINE (38, 23)-(137, 34), 9, BF„FONT "WARNING", 39, 25, 6, 0, 15, 0„FONT "Changing screen", 25, 38, 6, 0, 0, 0„FONT "modes means lose", 25, 45, 6, 0, 0, 0„FONT "PICTURE", 25, 51, 6, 0, 0, 0„BUTTON 27, 67, 70, 77, UP„BUTTON 73, 67, 113, 77, UP„FONT "PROCEED", 29, 70, 6, 0, 0, 0„FONT "CANCEL", 75, 70, 6, 0, 0, 0„MOUSESHOW„WAIT4PRESS3:„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„IF X% > 27 AND Y% > 67 AND X% < 70 AND Y% < 77 THEN RETURN.CODE% = 0: EXIT SUB„IF X% > 73 AND Y% > 67 AND X% < 113 AND Y% < 77 THEN RETURN.CODE% = 1: EXIT SUB„IF X% > 22 AND Y% > 22 AND Y% < 35 AND Y% < 35 THEN RETURN.CODE% = 0: EXIT SUB„GOTO WAIT4PRESS3„END SUB„„SUB ZOBJ (SEL%)„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF LB% = -1 AND X% > 4 AND Y% > 4 AND X% < 18 AND Y% < 18 THEN EXIT SUB„IF RB% = -1 THEN EXIT SUB„WEND„„FOR XX% = 5 TO 180 STEP 5„a% = a% + 1„FOR YY% = 20 TO 145 STEP 5„B% = B% + 1„IF X% > XX% AND Y% > YY% AND X% < XX% + 5 AND Y% < YY% + 5 THEN PLOT X%, Y%, a%, B%: GOTO FOUNDIT„NEXT„B% = 0„NEXT„FOUNDIT:„OX% = a%: OY% = B%„a% = 0: B% = 0: X% = 0: Y% = 0: XX% = 0: YY% = 0„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„„FOR XX% = 5 TO 180 STEP 5„a% = a% + 1„FOR YY% = 20 TO 145 STEP 5„B% = B% + 1„IF X% > XX% AND Y% > YY% AND X% < XX% + 5 AND Y% < YY% + 5 THEN PLOT X%, Y%, a%, B%: GOTO FOUNDIT2„NEXT„B% = 0„NEXT„FOUNDIT2:„„IF SEL% = 1 THEN LINE (188 + OX%, 6 + OY%)-(188 + a%, 6 + B%), CO%„IF SEL% = 2 THEN LINE (188 + OX%, 6 + OY%)-(188 + a%, 6 + B%), CO%, B„IF SEL% = 3 THEN LINE (188 + OX%, 6 + OY%)-(188 + a%, 6 + B%), CO%, BF„„X% = 188: Y% = 6„MOUSEHIDE„REDIM ZOOMM(35, 25)„FOR CAPX = 1 TO 35„FOR CAPY = 1 TO 25„ZOOMM(CAPX, CAPY) = POINT(X% + CAPX, Y% + CAPY)„NEXT„NEXT„„FOR X = 5 TO 175 STEP 5„XX = XX + 1„FOR Y = 20 TO 140 STEP 5„YY = YY + 1„PAINT (X + 1, Y + 1), ZOOMM(XX, YY), 0„PSET (188 + XX, 6 + YY), ZOOMM(XX, YY)„NEXT„YY = 0„NEXT„MOUSESHOW„„END SUB„„SUB ZOOM„IF ZOOMHELP = 1 THEN„REDIM HELP%(15000)„MOUSEHIDE„GET (1, 1)-(200, 100), HELP%„BUTTON 1, 1, 200, 100, UP„BUTTON 2, 2, 199, 99, UP„BUTTON 4, 4, 18, 18, DOWN: LINE (5, 5)-(17, 17), 0: LINE (5, 17)-(17, 5), 0„BUTTON 20, 4, 197, 18, UP: LINE (21, 5)-(196, 17), 9, BF„FONT "ZOOM Instructions", 22, 9, 6, 0, 15, 0„FONT "To disable these instructions", 6, 20, 6, 0, 4, 0„FONT "set the CONSTant ZOOMHELP to 0", 6, 26, 6, 0, 4, 0„FONT "Using ZOOM is easy. To ZOOM into", 6, 35, 6, 0, 10, 0„FONT "a specific region use the mouse", 6, 41, 6, 0, 10, 0„FONT "to select the upper-right corner", 6, 47, 6, 0, 10, 0„FONT "of that area. DRAW! will capture", 6, 53, 6, 0, 10, 0„FONT "34x25 pixels from that point", 6, 59, 6, 0, 10, 0„DO WHILE INKEY$ = ""„MOUSESHOW„MOUSESTATUS LB%, RB%, X%, Y%„IF LB% = -1 AND X% > 4 AND Y% > 4 AND X% < 18 AND Y% < 18 THEN EXIT DO„LOOP„MOUSEHIDE„PUT (1, 1), HELP%, PSET„ERASE HELP%„MOUSESHOW„END IF„„LB% = -1„WHILE LB% = -1„MOUSESTATUS LB%, RB%, X%, Y%„WEND„LB% = 0„WHILE LB% = 0„MOUSESTATUS LB%, RB%, X%, Y%„IF RB% = -1 THEN EXIT SUB„WEND„XXX% = X%: YYY% = Y%„MOUSEHIDE„REDIM COVERUP3%(14000)„REDIM COVERUP4%(5000)„GET (187, 5)-(225, 33), COVERUP4%„GET (2, 2)-(183, 151), COVERUP3%„REDIM ZOOMM(35, 25)„FOR CAPX = 1 TO 35„FOR CAPY = 1 TO 25„ZOOMM(CAPX, CAPY) = POINT(X% + CAPX, Y% + CAPY)„NEXT„NEXT„BUTTON 2, 2, 183, 151, UP„BUTTON 187, 5, 225, 33, UP„BUTTON 4, 4, 18, 18, DOWN: LINE (5, 5)-(17, 17), 0: LINE (5, 17)-(17, 5), 0„BUTTON 20, 4, 181, 18, UP: LINE (21, 5)-(180, 17), 9, BF„FONT "ZOOM EDITOR", 23, 8, 6, 0, 15, 0„FOR X = 5 TO 180 STEP 5„LINE (X, 20)-(X, 145), 0„NEXT„FOR Y = 20 TO 145 STEP 5„LINE (5, Y)-(180, Y), 0„NEXT„FOR X = 5 TO 175 STEP 5„XX = XX + 1„FOR Y = 20 TO 140 STEP 5„YY = YY + 1„PAINT (X + 1, Y + 1), ZOOMM(XX, YY), 0„PSET (188 + XX, 6 + YY), ZOOMM(XX, YY)„NEXT„YY = 0„NEXT„MOUSESHOW„IN02:„MOUSESTATUS LB%, RB%, X%, Y%„a% = 0: B% = 0„IF LB% = -1 AND X% > 4 AND Y% > 4 AND X% < 18 AND Y% < 18 THEN GOTO ABORTIT3„IF RB% = -1 THEN„POPOPS ZFUNC%„MOUSESHOW„END IF„IF ZFUNC% > 0 AND ZFUNC% < 6 THEN ZOBJ ZFUNC%„IF LB% = -1 AND ZFUNC% = 0 THEN„FOR XX% = 5 TO 175 STEP 5„a% = a% + 1„FOR YY% = 20 TO 140 STEP 5„B% = B% + 1„IF X% > XX% AND Y% > YY% AND X% < XX% + 5 AND Y% < YY% + 5 THEN PLOT X%, Y%, a%, B%„NEXT„B% = 0„NEXT„END IF„GOTO IN02„ABORTIT3:„MOUSEHIDE„REDIM EDITED%(5000)„GET (189, 7)-(223, 31), EDITED%„PUT (187, 5), COVERUP4%, PSET„PUT (2, 2), COVERUP3%, PSET„PUT (XXX% + 1, YYY% + 1), EDITED%, PSET„ERASE EDITED%„ERASE COVERUP4%„ERASE COVERUP3%„MOUSESHOW„END SUB„James Tonn                     TILE GRAPHICS                  www.geocities.com/SiliconVally/08/94 (00:00)          QB, QBasic, PDS        306  13876    TILEEX.BAS  'This is a small program using tile graphics. This source code is the property„'of James Tonn. You may modify this source code and use it in your own„'programs. You may use it in a written publication provided that it is not„'altered, and that you give credit to the author (James Tonn).„'I hope this code will help you in your programming.„'   -Jimmy Tonn 8/94„'   sltonn@phoenix.princeton.edu„'   sltonn@eden.rutgers.edu„'   jtonn@nerc1.nerc.com„'   75022.401@compuserve.com„„DEFINT A-Z  'declare all variables starting with a through z as integers„SCREEN 13   'set screen mode 13, 320x200x256„CLS         'clear screen„„RESTORE world   'restore data pointer so all data reading starts after label„                ' "world"„„CONST ACROSS = 11 'this is the number of across tiles that will appear on„                  'the screen at a time, the total number of across tiles„                  'is stored in the variable tacross„CONST DOWN = 11   'number of down tiles on screen... total down tiles are„                  'stored in tdown„„DIM blankimg(116) 'create an array for the blank tile„                  'this tile will be totally black, all zero's„DIM grassimg(116) 'create an array for the grass tile's image, 116 bytes„DIM treeimg(116)  'create an array for the tree tile's image, 116 bytes„DIM playerimg(116)'create as array for the player tile's image, 116 bytes„„READ tacross, tdown  'get these values from the big data block "world"„                     'at the end of this program„„TYPE tiletype          'create a type called tiletype„    x AS INTEGER       'the tile's x pixel coord„    y AS INTEGER       'the tile's y pixel coord„    style AS INTEGER   'the tile's style„END TYPE„„DIM tile(tacross, tdown) AS tiletype 'declare array "tile" as tiletype„„TYPE playertype  'create a type called playertype„    x AS INTEGER 'x tile where the player is„    y AS INTEGER 'y tile where the player is„    px AS INTEGER 'the players "permanant" x tile, the tile that he appears„                  'in out of the tiles on the screen„    py AS INTEGER 'the players "permanant" y tile„END TYPE„„DIM player AS playertype 'declare the variable player as a playertype„„READ player.x, player.y  'read player x and y coords from data block "world"„player.px = 6„player.py = 6„„DEF FNSetlocs    'function to set pixel locs of tiles that appear on screen„   FOR a = 1 TO ACROSS„      FOR d = 1 TO DOWN„         tile(a, d).x = 15 * a  'set pixel x location of tile„         tile(a, d).y = 15 * d  'set pixel y location of tile„      NEXT d                    '(all tiles are 15x15 pixels)„   NEXT a„END DEF„„DEF FNSetAtts   'function to read the styles of all tiles from data block„   FOR d = 1 TO tdown„      FOR a = 1 TO tacross„         READ tile(a, d).style 'read the tile's style„      NEXT a„   NEXT d„END DEF„„„'this next routine draws the tile on the screen„'the tx and ty variables are the tile numbers out of all the tiles„'the cx and cy variables are locations of the tile spaces where the tiles„'will be displayed on the screen„DEF FNDrawTile (tx, ty, cx, cy)„    SELECT CASE tile(tx, ty).style  'check the tile's style„          CASE 0  'if it's 0, draw an array of zero's (a black tile)„              PUT (tile(cx, cy).x, tile(cx, cy).y), blankimg, PSET„          CASE 1  'if it's 1, draw the grass tile„              PUT (tile(cx, cy).x, tile(cx, cy).y), grassimg, PSET„          CASE 2  'if it's 2, draw the tree tile„              PUT (tile(cx, cy).x, tile(cx, cy).y), treeimg, PSET„    END SELECT„END DEF„„'this draws all the visible tiles on the screen„'it will draw from 5 tiles to the left of the player to 5 tiles to his right„'and from 5 tiles up to 5 tiles down„DEF FNDrawScreen„   FOR rela = -5 TO 5„      FOR reld = -5 TO 5„           dummy = FNDrawTile(player.x + rela, player.y + reld, player.px + rela, player.py + reld)„      NEXT reld„   NEXT rela„END DEF„„'this function draws the player on the screen in his "permanant" location„DEF FNDrawPlayer„   PUT (tile(player.px, player.py).x, tile(player.px, player.py).y), playerimg, PSET„END DEF„„DEF FNDisplayImg 'this function will read an images colors from a data block„                 'and display the image on the screen. Before calling this„                 'function, reset the data pointer to the beginning of the„                 'data block for the image.„   FOR dp = 1 TO 15„      FOR ap = 1 TO 15„         READ att                     'read the value at the point in the data block„         PSET (ap + 10, dp + 10), att 'put the pixel on the screen with the„                                      'color that was read from the data„                                      'block„      NEXT ap„   NEXT dp„END DEF„„'* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *„' * * * * * * * * * * * * End of Function Defs* * * * * * * * * * * * * *„„dummy = FNSetlocs   'set the locations for the on-screen tiles„dummy = FNSetAtts   'set the styles for all the tiles„„GET (11, 11)-(25, 25), blankimg 'get an array that is all zero's, which will„                                'the black tile that we put around the edges„                                'of the map. No data reading is needed since„                                'the screen is already totally black. All„                                'we need to do is grab a block.„„RESTORE grassdata   'restore the data pointer to the beginning of the data„                    'block that stores the grass tile's image. If you're„                    'reseting the data pointer to load the images, do it„                    'after calling FNSetLocs and FNSetAtts, because they„                    'need the data pointer in a certain place„dummy = FNDisplayImg  'call routine to read and display the image„GET (11, 11)-(25, 25), grassimg 'get the image into array "grassimg"„PUT (11, 11), grassimg, XOR     'put image over existing one to clear it„„RESTORE treedata 'restore data pointer to beginning of the tree tile's image„dummy = FNDisplayImg 'read and display the image„GET (11, 11)-(25, 25), treeimg  'get the image into array "treeimg"„PUT (11, 11), treeimg, XOR  'put image on top of the old one to clear it„„RESTORE playerdata 'restore pointer to beginning of player tile's image„dummy = FNDisplayImg 'read and display the image„GET (11, 11)-(25, 25), playerimg  'get the image into array "playerimg"„PUT (11, 11), playerimg, XOR  'put image on top of the old one to clear it„„dummy = FNDrawScreen  'draw the screen once„dummy = FNDrawPlayer  'draw the player once„„„DO„  kbd$ = INKEY$            'get a "transparent" input„  IF kbd$ <> "" THEN       'if there actually was a user input, then...„    kbd$ = RIGHT$(kbd$, 1) 'get the first byte of the input (this is needed„                           'if you want to look for input from the cursor„                           'keys)„    SELECT CASE kbd$„          CASE CHR$(27)    'user pressed escape key„              END          'end the program„          CASE CHR$(72) 'user pressed up arrow„              IF tile(player.x, player.y - 1).style <> 2 THEN„              '^^^ check if the tile the player is about to move into is„              'already occupied by a tree.„              'if you check for a tree, you really don't need to check if„              'the player is going to go past the line of trees at the„              'edge with the other method, because if you check for a tree,„              'it will stop you before you go past the line anyway I just„              'added them both in case the reader wanted to use a certain„              'method for some reason.„               „                IF player.y - 1 > 5 THEN     'make sure he doesn't go past„                                             'the line of trees. You will„                                             'probably have to change this„                                             'number around if you change the„                                             'player's view screen size„                  player.y = player.y - 1    'decrease player y tile by one„                END IF„                dummy = FNDrawScreen       'draw the screen„                dummy = FNDrawPlayer       'put the player on the screen„              END IF„          CASE CHR$(80) 'user pressed down arrow„              IF tile(player.x, player.y + 1).style <> 2 THEN„              '^^^ check if the tile the player is about to move into is„              'already occupied by a tree.„                IF player.y + 1 < (tdown - 5) THEN 'keep player on screen„                  player.y = player.y + 1    'increase player y tile by one„                END IF„                dummy = FNDrawScreen       'draw the screen„                dummy = FNDrawPlayer       'put the player on the screen„              END IF„          CASE CHR$(75) 'user pressed left arrow„              IF tile(player.x - 1, player.y).style <> 2 THEN„              '^^^ check if the tile the player is about to move into is„              'already occupied by a tree.„„                IF player.x - 1 > 5 THEN   'keep player on screen„                  player.x = player.x - 1    'decrease player x tile by one„                END IF„                dummy = FNDrawScreen       'draw the screen„                dummy = FNDrawPlayer       'put the player on the screen„              END IF„          CASE CHR$(77) 'user pressed right arrow„              IF tile(player.x + 1, player.y).style <> 2 THEN„              '^^^ check if the tile the player is about to move into is„              'already occupied by a tree.„„                IF player.x < (tacross - 6) THEN  'keep player on screen„                  player.x = player.x + 1    'increase player x tile by one„                END IF„                dummy = FNDrawScreen       'draw the screen„                dummy = FNDrawPlayer       'put the player on the screen„              END IF„    END SELECT„  END IF„LOOP        'restart the main loop„„„world:„„DATA 30,30„DATA 15,15„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,2,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,2,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,2,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,2,1,2,0,0,0,0,0„DATA 0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0„DATA 0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„„grassdata:„DATA 0,0,0,0,2,0,0,0,148,0,0,2,0,0,0„DATA 0,2,0,0,0,0,0,0,0,0,0,0,0,0,141„DATA 0,0,0,0,142,0,0,2,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,2,0,0„DATA 0,2,0,2,0,145,0,0,0,142,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,2,0,0,0,0,0,2„DATA 0,0,0,142,0,0,0,0,0,0,0,2,0,0,0„DATA 0,2,0,0,0,142,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,0,0,0,2,0,0,147,0,0„DATA 0,142,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,2,0,0,142,0,0,2,0,0,0,2,0„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 2,0,0,0,0,145,0,2,0,0,0,0,2,0,0„DATA 0,0,0,2,0,0,0,0,0,0,0,0,0,0,142„DATA 145,0,0,0,147,0,0,0,2,0,0,2,0,0,0„„treedata:„DATA 0,0,0,2,2,2,2,2,2,2,2,0,0,0,0„DATA 0,0,2,2,2,2,2,2,2,2,2,2,0,0,0„DATA 0,6,2,2,2,2,2,2,2,2,2,6,0,0,0„DATA 0,2,6,2,2,2,2,2,2,2,6,2,0,0,0„DATA 0,2,2,6,2,2,2,2,2,6,2,2,0,0,0„DATA 0,0,2,2,6,2,2,2,6,2,2,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,0,6,6,6,0,0,0,0,0,0,0„DATA 0,0,0,0,6,6,6,6,6,0,0,0,0,0,0„DATA 0,0,0,6,6,6,6,6,6,6,0,0,0,0,0„„playerdata:„DATA 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,7,7,7,0,0,0,1,0,0„DATA 0,0,0,0,0,0,7,7,7,0,0,0,1,0,0„DATA 0,0,0,0,0,0,7,7,7,0,0,0,1,0,0„DATA 0,0,0,0,0,0,0,7,0,0,0,0,1,0,0„DATA 0,0,0,0,0,0,0,7,0,0,0,0,1,0,0„DATA 0,2,0,2,0,0,0,7,0,0,0,1,1,1,0„DATA 0,2,2,7,7,7,7,7,7,7,7,7,7,0,0„DATA 0,2,2,2,0,0,0,7,0,0,0,0,1,0,0„DATA 0,0,2,0,0,0,0,7,0,0,0,0,1,0,0„DATA 0,0,0,0,0,0,0,7,0,0,0,0,0,0,0„DATA 0,0,0,0,0,0,7,0,7,0,0,0,0,0,0„DATA 0,0,0,0,0,7,0,0,0,7,0,0,0,0,0„DATA 0,0,0,0,7,0,0,0,0,0,7,0,0,0,0„DATA 0,0,0,7,0,0,0,0,0,0,0,7,0,0,0„„Michael J. Kelly               SMALL FONT (8X8 SANS SERIF)    QBTIPS_?.DOC                   07-06-92 (08:03)       QB, PDS                52   3395     SMLFONT.BAS DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"SMLFONT.ZIP",4^6:Z&=2268:?STRING$(50,177);„U"%up()%9%%%R-%KEAaEsZ%dmc)%%%%-%%%0%%%%xr%qkts%ySks[yrzF,9]k5%SA„U"uSZ;o*08U=;c[e8h%MRgPL;V+oI&?uS2QjB8WQK/>H%*deSDHUQWL1CA7K5\2gq„U"0gLqf+=n5gGW%7XO.O*BsNzD5DvDzSX71jpd=WX]W]\%tVN\Y:q[*NY]b17[)<r„U":P[_G3.YiyQ+:JUa''EduP(8L*SfY%=ZX88,.2l.D]v;g)V4,PthA9H3ZMs[HMF„U"DMDtMwL736L&cUceh=i(F,ePEPC?i1WZ<1(7Do92wN1XyLNI6vd;[Pr>H0mq6%q„U"<ckAfJ;5Ht2W.]BUwHEPpm&*KXQV/<()Ix4fn#10jB54#CjK'<l&OsB7=H-V^6f„U"FVT-[hoKA,t:(tTNSO\ZayAy:^tVzyKY0iMK8cN^uOT%up)OtCHPNs&2io+AKfR„U"ZZw=6t+>m_.7+InHv:ZCc&j]5?$t.DLmx;9tQl2SdzTJ6Ya((<DJ7>T4Q0qNtZv„U"1OPengi#\>/%q[%6lhX=0Z&>rI+D6LMT$##Xc5Za4-Y64B-e0BLtA=&%cXN0kQ+„U"Fbk2QAc&TQDWS3&kL^a%x9\Ub78NcRW&<)k6^[l?sg7G:76iTp^8:a3Zl(l#5W1„U"/^H=/??pj.-s5N/N\X:\*^qI[,a&=QP#iHEpe%u,_w6-8<;onym)r_5tR8i9]lv„U"^1c>j]IP]PL;Y$x3IhU1-$t[<pF,m\lSl>H[?=)-&I,/]oFRE(p;kinJJc#jxC4„U"eKf6Zv.xj:n9SK5:a'lQ&8jR1kSw$eqVMYTt=2%\$%.BSZdIVNqJi:66LIs/x\W„U".Q)aAb-;^iEnn[-:#O9s/p(]_Y$mw,0aO,j6=)T_2lq4S.ICV$<]J>*]29&dQ4L„U"tE.j,[Q/kW+Orj7u$oOUDDU\ceU9V-.RYNlLd.JTP)gm5h1<gG==pF.hk;2bnol„U"NECbFRPzko4><OAS96#vLy0MKc'ob1l/$]eXgqHNcixAGpyxM<9>a>z+IxI&jfi„U"w8Ih0SO]O.DtUroKgp*PFL2W?K]Npy4H+I7Bla'0P&kKQmOKZ-GLlolV(*KWG'o„U",c^\c%jjmufh\nr<n\.rw4v=b^s'3<m5ub'Y*4#_YQLw=p?u.W)iafG[#DN#V;b„U"xj)3sx+iqo2#xxqKn#=m-bm1LBS^XJNVuf+:8xls8_\I+stcOH=nnfq5<GK/[aI„U"8KrP0+f1;'YV8rj^a]o,dD-gc[IM-]h9<'D2.iaDY^:LvQ8\TI6x=$I&;fGYBkL„U"iYPTmI>+_dW'QER2VVV0EEFeRWZN2$HleZfkZgt%7v7Uzf?apx.yHDib=6k6S3^„U"\yr>?hSGyYG2WYhE&<s,maJnVlJ6w(/WEnC]j'6;'Am5F51P$2ft[3luLLI2Kc-„U"$rlxcG&>x&7<uM#zoJO=c<xu%p()9%%%%-I%rFaXE*[s-G?(%%%I.%%%/%%%%xr„U"q%ksyS[gfx&e%rB[7]56x<>NaG'R.y^s)k.EA04+3*;[V98EwBvQ/^oYQ8?a6l;„U"8..\[..WXqfOAs%Ucp6m3.p]^X%i.[1QQ,39*uoqvkY(*7?gTA02Te_J(8RooRz„U")SS.fJn:q/#yW&Au<S&,#MpJcVQT)0X*d0*dO+zK_^H%L(Qpa*&N00Ce;MZZn*D„U"7,a]W?iu$>f>]Ppq/7X?;TIS\?0#P^nQ171mWrAAB,Z-Vkm\%)/oFQ0^Jb;0%aA„U"zw4u:0B#HXX+?g'X50?)108[^d].W2O<Wj(VL;D6l=#CC$Y66^/'?o\;oK/o2KY„U"W2^0mo/%94S:DpD4(5UWn4bN\Uf9dKeo6L:';9>3b*]nQBEPRjeDAh:mfCdT8,o„U"lUX:$wc1aib0BA4N>;Q,+OWcwE/')mqW2mO<YL9H>A11gucL_7,wf[)Mrfb=4/X„U">=2=K#84Ku4pW8fSABMY+1aQKuc0SK;%C[4kto5iJek]fu((oD$=En.9cc2Cn(y„U"&'O[(i<2xvh'sNCNkC$PTFNPr:rdK$VZ*7yZ8+q;tC0+17m&BzEi,y)8bGq[%Nt„U"29a1+PcX'eNPh1R-[-O;=kv'>nDW&6kOOf.HWpT(q(xU?Qi$26;iw+pVr>7I/Q7„U">bE,XsGSB2R-Jd-UKh\5m3:cZaDu*5(Q;]UvZHfOARjAaW^I]wRWpxaOr.+<U5(„U"VJ]SUL<Em0((a9>55JV+N><He2hE&(Lh(ksoI.em$mw*h_l4N$2X]lv9pMW2vVp„U"=CT<njkYC7E9PdkWt^K,4nL_;aF_G=FwIFYQ+OS')B*tkpz[4)r&t\nOR#zyF>H„U"BBWvsDx)/gPvbddNBu,L'6?-3NwUthOz-T>GA\IOeA(gDptm-[5O.bH-re8%EZl„U"1^:/pXx?a&uA/vX:pbzX7l^=#]A1iSKXhEcD8$'PD7\Va%GF?.6NTCig9JUgRwE„U",<%5-xFK7g346Y70'5&Ytupk_/;&Bq:$#wn)f[=r[l0l09R=Jr#+;5MchszX;2Y„U"wXkPJiweefvS#)dvoopgB1UCVD,Jdbqw5U,Bfah(&mo=cK%Wb]PTOGqTFx4D,LR„U"1^]Q^&lCHdo>CUaNCkPP>3sd2d$V<tIR4URt2#(ws\#(GK:z<y/IHA;riW,[Ml2„U"RNG3I+\\F+ff*INRvbn's$jXB%:p=c27/[E0n2%;F\-sv=TqXNv?sVR6:TIyXWD„U"Qu'c&.a'W#XTC5c_g5u%2up&%'9%9%%%%-O%KEa.EsZd%mc)%%%%-%%%0%%%%%%„U"%%%%%E%%%%%%%%%x%rqkt%sySk%syup%&'9%%9%%%#-%rFnaE*[>sG?(%%%I.%%„U"%/%%%%%%%%%&%%E%%%&6)%%%xrqk%sySg%fxup%*+%%%%%'%.'%#%%%%z-%%%%%„END SUB„CLOSE:IF S=59AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Earl L. Montgomery             VESA MANDELBROT                FidoNet QUIK_BAS Echo          04-17-96 (22:32)       QB, PDS                135  4270     VESABROT.BAS' Here is a VESA high resolution Mandelbrot program. It allows„' you to choose the mode. You can let the computer pick the values or„' you can enter them yourself. For testing I recommend you select <N>„' when prompted and enter the following yourself:„„' acorner -.114„' bcorner -.917„' side .017„„' On my 486/50 it takes about 12 minutes to complete. I think it looks„' like multiple tornado funnels with multiple lightning strikes.„„' BTW this is if you choose #1. 640x400x256„„' When the screen is filled you will hear a beep and you can exit or„' run it again by pressing the space bar twice. Or if you have the TSR„' GRABBER that can be found on most BBSs you can save the screen„' to an executable file by pressing CNTRL= then <ENTER>. When you„' exit to dos you can view the saved screen by simply typing„' SCREEN00 at the DOS prompt. The loading takes less than a sec!„„' To run this program you must have a VESA compatiable graphic„' card/chip <SVGA>. Or if your SVGA card/chip is not VESA„' compatiable you can run it provided you have a VESA TSR loaded.„„' P.S. If you let the computer pick the values or even if you enter the„' values and nothing appealing is being put on the screen you can„' press the space bar and you will be prompted to EXIT or RUN„' again.„„' Let me know if you have problems. Enjoy!„„ '$INCLUDE: 'qb.bi'„ DIM inreg AS RegType„ DIM outreg AS RegType„ DEFDBL A-Z„ RANDOMIZE TIMER„ KEY(10) ON„ ON KEY(10) GOSUB endofprogram„ CLS : LOCATE 12, 30: COLOR 14: PRINT "WELCOME TO VESABROT"„ LOCATE 14, 23: PRINT "Brought to you by Earl Montgomery"„ SLEEP (2)„makeselection:„ CLS„ LOCATE 1, 1„ PRINT "1. 640x400x256"„ PRINT "2. 640x480x256"„ PRINT "3. 800x600x256"„ PRINT "4. 1024x768X16"„ PRINT "5. 1024x768x256"„ PRINT : INPUT "Select mode"; m%„ IF m% < 1 OR m% > 5 THEN BEEP: GOTO makeselection„ CLS„ INPUT "Let the computer select values <Y/N>"; q$„ q$ = UCASE$(q$)„ IF q$ = "Y" THEN CLS : GOTO randomselect„ INPUT "Acorner "; a„ acorner = a„ INPUT "Bcorner "; b„ bcorner = b„ INPUT "Side "; s„ side = s„ GOTO start„randomselect:„ acorner = (RND * 5 - 2)„ IF acorner > 2 THEN GOTO randomselect„ IF acorner < -2 THEN GOTO randomselect„bcornerselect:„ bcorner = (RND * 5 - 2)„ IF bcorner > 2 THEN GOTO bcornerselect„ IF bcorner < -2 THEN GOTO bcornerselect„sideselect:„ side = (RND * 5 - 2)„ IF side > 2 THEN GOTO sideselect„ IF side < -2 THEN GOTO sideselect„start:„ maxdwell = 150„ inreg.ax = &H4F02„ IF m% = 1 THEN inreg.bx = &H100„ IF m% = 2 THEN inreg.bx = &H101„ IF m% = 3 THEN inreg.bx = &H103„ IF m% = 4 THEN inreg.bx = &H104„ IF m% = 5 THEN inreg.bx = &H105„ CALL interrupt(&H10, inreg, outreg)„ IF m% = 4 THEN numcolors = 16:  ELSE numcolors = 256„ IF m% = 1 THEN numrows = 399„ IF m% = 2 THEN numrows = 479„ IF m% = 3 THEN numrows = 599„ IF m% = 4 OR m% = 5 THEN numrows = 767„ IF m% = 1 OR m% = 2 THEN numcols = 639„ IF m% = 3 THEN numcols = 799„ IF m% = 4 OR m% = 5 THEN numcols = 1023„ yoffset = 1: xoffset = 1„ highdwell = 0„ gap = side / numrows„ ac = acorner„ FOR x = xoffset TO numcols - 1 + xoffset„ ac = ac + gap: bc = bcorner„ FOR y = yoffset TO numrows - 1 + xoffset„ bc = bc + gap„ az = 0: bz = 0: count% = 0: size = 0„ WHILE (size < 4) AND (count% < maxdwell)„ temp = az * az - bz * bz + ac„ bz = 2 * az * bz + bc„ az = temp: size = az * az + bz * bz„ count% = count% + 1„ WEND„ IF (count% < maxdwell) AND (count% > highdwell) THEN highdwell = count%„ IF count% <> maxdwell THEN GOSUB setpixelcolor„ i$ = INKEY$„ IF i$ = CHR$(32) THEN GOTO restart„ NEXT: NEXT„ BEEP„wait1:„ i$ = INKEY$„ IF i$ = CHR$(32) THEN GOTO endofprogram:  ELSE GOTO wait1„setpixelcolor:„ c = count% MOD (numcolors - 1) + 1„ cc = &HC00 + c: z = numrows - y + 1„ inreg.ax = cc: inreg.bx = 0: inreg.cx = x: inreg.dx = z„ CALL interrupt(&H10, inreg, outreg)„ RETURN„endofprogram:„ SLEEP (500)„ inreg.ax = &H3: CALL interrupt(&H10, inreg, outreg)„ CLS : LOCATE 1, 1„ INPUT "[R]un again or [E]xit to DOS"; q$„ q$ = UCASE$(q$)„ IF q$ = "R" THEN RUN„ CLS : LOCATE 14, 23: PRINT "Make sure you rename any saved files!"„ SLEEP (2): SCREEN 0: CLS : END„restart:„ inreg.ax = &H3„ CALL interrupt(&H10, inreg, outreg)„ RUN„Joshua Dickerson               SPRITE(BITMAP) EDITOR          FidoNet QUIK_BAS Echo          04-23-96 (21:25)       QB, QBasic, PDS        124  2973     BITMAP.BAS  '    Here is a simple bitmap editor i wrote to aid in the design of my games..„'You start out in zoom mode where you can edit individual pixils of your„'bitmap, and as soon as you press esc, it automaticly writes a qBasic file with„'data statements and a loader for them..use the numeric keypad to move around„'and the , and . to select the colors (Actually < > without the shift heh„'heh).. hit space to set the point to the current color.. An "X" will denote„'where you are, but you will not see the changes to that pixil until you move„'the cursor away from the spot you were working on.„„DECLARE SUB UpdateScrollBar ()„DECLARE SUB Display ()„„DIM SHARED x, y, xMax, yMax, SelectedColor„„CLS„INPUT "Bitmap X size ->", xMax„INPUT "Bitmap Y size ->", yMax„„DIM SHARED Bmp(xMax, yMax) AS STRING * 1„SCREEN 13„„LOCATE 23, 1„PRINT "v"„UpdateScrollBar„Display„DO WHILE a$ <> CHR$(27)„   SELECT CASE a$„      CASE ","„         SelectedColor = SelectedColor - 1„         IF SelectedColor < 0 THEN SelectedColor = 255„         UpdateScrollBar„      CASE "."„         SelectedColor = SelectedColor + 1„         IF SelectedColor > 255 THEN SelectedColor = 0„         UpdateScrollBar„      CASE " "„         Bmp(x, y) = CHR$(SelectedColor)„         Display„      CASE "4"„         IF x > 0 THEN x = x - 1„         Display„      CASE "6"„         IF x < xMax THEN x = x + 1„         Display„      CASE "8"„         IF y > 0 THEN y = y - 1„         Display„      CASE "2"„         IF y < yMax THEN y = y + 1„         Display„   END SELECT„„   LOCATE 7, 7„   COLOR SelectedColor„   PRINT "X";„ „   a$ = INPUT$(1)„LOOP„„CLS„FOR i = 0 TO xMax„   FOR j = 0 TO yMax„      PSET (i, j), ASC(Bmp(i, j))„   NEXT„NEXT„„Size% = 4 + INT(((xMax + 1) / 2) * (yMax + 1))„DIM BitMap%(Size%)„„GET (0, 0)-(xMax, yMax), BitMap%„„OPEN "Test.bas" FOR OUTPUT AS #1„PRINT #1, "SCREEN 13"„PRINT #1, "DIM BitMap%("; Size%; ")"„PRINT #1, "FOR I = 0 to"; Size%„PRINT #1, "   READ BitMap%(I)"„PRINT #1, "NEXT"„PRINT #1, ""„PRINT #1, "PUT (0,0), BitMap%"„PRINT #1, "END"„PRINT #1, ""„PRINT #1, "DATA ";„„FOR i = 0 TO Size% - 1„   x = x + 1„  „   PRINT #1, "&H" + HEX$(BitMap%(i));„   IF x > 8 THEN„      x = 0„      PRINT #1, ""„      PRINT #1, "DATA ";„   ELSE„      PRINT #1, ", ";„   END IF„   „NEXT„PRINT #1, "&H" + HEX$(BitMap%(Size%))„„CLOSE„„SUB Display„   CONST WindowSize = 6„„   FOR i = -WindowSize TO WindowSize„      LOCATE WindowSize + 1 + i, 1„      FOR j = -WindowSize TO WindowSize„         IF j + x >= 0 AND i + y >= 0 AND j + x <= xMax AND i + y <= yMax THEN„            COLOR ASC(Bmp(j + x, i + y))„            PRINT CHR$(219);„         ELSE„            COLOR 15„            PRINT CHR$(178);„         END IF„      NEXT„   NEXT„END SUB„„SUB UpdateScrollBar„   LOCATE 24, 1„   FOR i = 0 TO 39„      COLOR (i + SelectedColor) MOD 255„      PRINT CHR$(219);„   NEXT„END SUB„Chad Beck                      IMAGE MAKER TAKE II            Earl L. Montgomery             10-09-95 (02:31)       QB, PDS                123  8060     IMAGE2.BAS  '     If you picked up Earl Montgomery's recent "Image Maker" program,„'then pick this up too.  Functionally, the only change is that pressing„'F10 during a LOAD or SAVE prompt will not exit.  Instead, entering a„'blank line at these prompts will return you to the drawing screen where„'you may exit.  However, the improvements in speed and code size are„'relatively dramatic.„„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"IMAGEMKR.ZIP",4^6:Z&=5485:?STRING$(50,177);„U"%up()%9%'%R-%gk7nDFX-^U_(%%%=,%%%1%%%%nr%fljr%pwSi.thTz;,>TkC5K„U"4_-x)kCEu1UD0SGXua9)B3s;c(CdgdO7_k]Pkk9ke2pbiZ8HHgv%%q6m.I&;xll„U"VRhZX>w$)WWkveZXu7IZvcnz3hcl4__ju<42r'wVR0q=crgW7#]Q$R6S>'Hpy'0„U")+2MeXiA.V7\/E4*=gq\ANI%CsYs-:LL<)1+r9i9MOZnxy1eEt,3SQ:q&XQ4rC)„U":a;(59W*O;YKsg.TP3O%MJlBJ+ORA8]#vl%iB$7'[aHjTYu\;w\EkfAkQ;2#*j&„U"^C;emb?ss0,RCan7.YMVKG:#m>ri>GnRPcj[.hG7&rPye2ihW$-Kl+TN/OVZpzm„U"X;*tb4LODL;(HUC[[pg50;;tCd'O/v*Y'I=dA&\dQl4KGf001=6?J(No\d9+h(F„U"Q#Us<WeSfVtU&z/$4X.qjZ>8MxImjf^[<O=$'-U2CrvQ4y&;oeT-_]TxNt(5NjV„U"2j9VwsqqxM6N6U-ySa;;NQ0bdUSOExJ<2-9d\QmsuF-/G65$,6?dKEGJc;A,'ch„U"GcF(iu%4V6N_iMUu\rUP1#jsx).,q^iBu)ZZw\5R7HLgM3UD'LDK8lpLm4WHo48„U"K3do^R=))x)\N)V#N*Son'NSJ:1j;D.qT9%&v]siS(mB):oEj+]#Gc)G:S?0m.b„U"r\I-J\x/y73_1gDFv#;'fBOLt[UJu]cI3(ACv=C>CBNq6/ZdbU)k5TQ?SD4jf;=„U"VW[\RlU2F>=QRN#a.wr5iR7k>*[1d7;_nH>PKrUgd.e#3;#RuGh/BCIg_43h9Eg„U"L]^==$><VbP^;J?,37OJxUw0+\clbzQ'V;Ks+$%jxmiJO9SN?PL;+aj/Fr2BlK?„U"(u#k7>pMU?MB>ZPrc&6FCuPO#\nnM3_NXQaR$6rN<S[<o=&PQC31gmC7H(eW[1l„U"YsXK#Gfo_isPia>uu^*A+u\['UxRc6txWg\qk3sUIFl4#OWf0x4n#tsF9<^U'Gk„U"L%g#+COh#B7as9xKVZu[c=k5Ld[mS$8xt&if3BHCW'2&].+]vWEwdJo4i&XwaZD„U"y5a:V*0:g;\l7'%up()%9%'%7-%#8%nD.7(Xj_-7%%5;%%%1%%%%nr%fljr%pwS„U"gIfxl'q:B[147vky0^dCvWM/XPINpMORnK0GhgS)?<)ge2-0g<(^++her%<kQq.„U"NN+h\4/+N,biiuAcL&]L4n&um&:IemfvjWXzDzND)D7Bpk4L8z2.dC<.;M?fc+d„U"Bu+x>6\#X<l>I#it2owe2,,]LZ,ZQUY=#*O_+,_6;x4ReQaN4>N]?BrrI,r::+a„U"&,e:\'7c<GpIL3R[<,V&#jrgJexQ^:&7Ah+rf7#c2#Rt_A3^[:29c*g=c5^Gc2A„U"s9g3X>Pb]*?lcy1kx<k:$wM6(]hrj6Y]0+47Jd_duj$dKbWDga]Oq)^W#\Z?CvQ„U"--SIsq&sGz$dL$ghBg\t=9iX_d3-N5&263(8S_1rK<ufZS;[/ZkZi3nfM*?nngb„U"f4M4r1G67Knq)iZiN>ZDAlQa(bCc<?.3Dk$OC?mpbi[cdpHp=:PXiuwccke1Um;„U"+HDFFX/E?o%P/]XZ?2>3L<rp<YPmAaRH\if0SWgRsf=-c+q6&iJ8VW559>6/--&„U"lCbXSIknR);$K=4Rg:.I\6P*S/rZJ1PhG(9y\I[qu'Tt:#LTjOPT')J/V2Sq_u=„U"vSTjJ#n9W=wdFt+uC=b*)7lU9n\T)H3Z#9M?vCdr&Uga3a]pVgtiDaJABURRs9g„U"RR:E>RM]i%.:h9*fdx^w]Y1;=S_XjK,M7mWhm(??1;XM/s0=Ou6W>;S7*wO4k5t„U"=VMJ)kWw'S^ki'JXoi4zH#G2Y$$GROb#Y4MF[;FvB4Gn0cC5q[%GDq;l^>:GcjW„U"2j6HZMdkf8>k^NI[^TxxR&T%Sd7TyK\[<Za(^-yz:X-ME*$Gvz*DGvhO^#ZykI?„U"ZcYu9dqloF\7u$#;OlV&.V_FG3v.EN1l7rB0E#+tz7C_339K[GihHrUmV(ypL=b„U"e-A<,V$U9Up.B&[w/^??ITq&nK0p*O,L?nTq&gRW<LmtPR$XQ,*5X?K:U/bHJw^„U"$4cV2-.3]0MLXz]ff9[[uH8;E#>F)9Ar2$h>sJT6UnEVN#CNROvpAi8;6Z>Z7,N„U"r\1'AN(rDvv1)c89E:LW'H:bF8p+##G.P$a7OUXj13]kHa^(US6ZBp#z#RtU(i=„U"=X+Ul/#=lwjFx_CX*S8wQV*_sqUFZKc><#Ue/*#[^KJ1E:j<1Scm7QWo77%Z:%E„U"W_,P>cn_gUD<TlcWI,z,/Y:zWqfBux?9Gy*-b_<u5<WOLj/ZZ*b+I6z^Q>o[Udn„U"X'[#T4:c=Rn#Q?*GUT=%qe>/u=S92qH8'H-$3>p=vK^7WoR8MbJ(WZZIwFit&r0„U"pKW0&-G%f<]4Z+IX3a0.\i+;X:Y4'F6nU3<JiM)pQ&__stni3hgA6zywg($4'54„U"RLmXR[P?g%QaJYQR646<VG[I+P'\$PbMU+igx#0Qt<eX9iWK\MQ&8G3#8G<)6<6„U"%9c7CT1<;U/aYV+8wWu48)Wu0P)ih6)0j/DBRL6Sn\q0OrTIDhuY(,[JJ32nX<X„U"O\P02DR%2T2kY,[b8u)mAEbe=XMe/>aZ]_;9g=p_]A8=fL1oaUh$J?(ipHijHjm„U"LyBV8EC3UWjfXHtR>Dh3W6p^WS,#dgjNt+(=xlI,1c*6AqA-y[Rb#XR'RJBfvE#„U"w6U4$<]0*h&0;FdCe+tL8hPuA)quf5>4s?(k(f*i8E.O8t,S#sH4c:j'-WIja&E„U"%JQNN*T2P9BEx6[k)B+3QMDk/>0q_]Qu\uXuwUu2J?D=#Umc$Ta_OIi(J*[.#g2„U"g3GiO\p$MbT?tg=5fd1#P^3'nKi>C9VqdeZHIE+mZ.Oe0P9l].VW4OOOw/myN.0„U"72OxG**M?2w+)R,bj2tLyXZbm%yts/]dSzpU6K#,Ollgx1tUP<A(X9L08r,MJ.]„U"%n$V9K^:QhqV29l?lVv]p>OuCJcSjCKtDIZj9XH*OjDLHb/$Kr?1o?:T-m?irXV„U"gWX0iCF2tZ;6%QW>6P)8p=,>,)G&c_l[dQkYfmVRF,4LMjt(%9Sk/0^0paHX69p„U"jakpP'eP8:TCT^VMkv*$M]o^hfC+8A^myR^IAEJnaKCN&hZGZngqBK\I(wdvoe?„U"Pbn0u\M[n2MNNnsKl>QbpILFG7g],/.kVLzJm0N9G\8#T=Bkc,bzi:piAR_^Sb,„U")oYfgCRt-wi=Q+9VvHBh^kl>tbiUnRH4h*'I=.#gU+V7ccDt__r0_xe\oY3E+QZ„U"hN2k<g>w/)THBCIpzcnsp.WG;Br;^ITO75Ot;qYCrTRQj2*aSjSdn5Sy.spW.i;„U"z+_pvj,$SY*Xvj[m)f,wcPC]?,u.L5$1\)I>oU%J+E]62s+G9Y&25c0iAOZ*g;(„U"UJ'(kd'k/8>u/dUzOb_4gK971&OOE<C&5I;Udc&0k&x2TOwl(&8/U7FEcv(e)'q„U"1-WI9O5,O8Rge-r&O5F2\i56f[MGiA/RKSiS:CZS(i7gqbC>M\8Sqai(P?lf#Fg„U"OCmFOsjQ3s0n4=q65Ewv/Q0hk\dMAZJ%=MRKrgFky]e?*%i9m/iQ*'+hcV8&jWR„U"r4c:VwO4ZUaFn]gR8k=).Y0-Zu]X?sX(T0Sd_u-cvJGR$J<=unm*_f7(CDzlbpy„U"EV+zQdQMNcGAxxOKRNB7K#0+.M0\jA]r)JpLVysAva4,tpMitkHKK_lM\.7RB>v„U"hItrp6XRVcKMEDe=*xo)]Q2hjg6rfLb$Lq%+iko1XDwu/%Ml8N-sd%up()%9%'%„U"#-%io7nDP,+L7&&.%%6*%%%/%%%%uf%ltif%SgnsENbV=B;U9U2n:yQDeohtso&„U"AA%/Xh]7/la23)IYC_r2l,)#[AFmH(iPr**t6q/'CIowwm$op<THstjjjhl7L8\„U"o*JRha4\uMrqT3r[Z04G/sRv;83BO_fb>QQ1F8wi3b(R5;FmLXGf+<R3aBHj]BH„U"6+KJC%DesY/SZZsmM[P%t=ITQ%Btg\R:%kC,bvCX1sWTYkN=u6VJ?[L%nxzvYgD„U"0d\pq*GE._U<0le^d,<JYKLBCSdDV)ia8:C*b'Gjf'z$4.V2cXl,XS>u$dCXg:6„U"HPsGMCf.u4YNeu5>+gnr;gY0hcO+*sS))4$2Y:M4rwbv7%%up(%)9%'%%-%W&)n„U"Dp1IE_,[)%%$%S%%0%%%%q%jyyj%wxSgRnsfi:t;TyjA#N(N/aO+^\(LNbo%Vfk„U"sV_VMEizU.S#Wo)wR(<.38B-rKS=:2,_inC>LKbQa:yI/;ppmSoCrBAz),V=Ea:„U"U0MC%obt2UJ[GK93_Zt3CPB5]<GOm'J<FPp^n'Tb$kLlzeX<8$f0Xcj(BiDd\pk„U"O<Z8?]xHLi7:d(mZ_*;V>0E7cB.IF:I&W3M[L%=wMCfo4?.34T9p(U5xrHI6Ix#„U">=U]hY5mWXk*tn;^ys*v]-MoVQj=sW'c+W&nTL$r$,a(Ii<'s$/dj(_ZJjoU^1=„U">^1xQNmYSNJ[F)c]:$*X?4/k0l0N8F0F[C:c2Ne64anGqk&P,E';Pq?qsNb]&SD„U"yR/J?D_RST5_s3,JvxBIX;jwl*($QR<K_64T$lGN3Ir&sSEa%0>K9A&7I3iDXdr„U"v:4,lWNKx8\H.Qi\mkHJ1El.4_hzv&+QXN'Z4rNw4#[7baHa]BRRI;SzQ'?)su(„U"jv+cls6btz+65Ir7vqr=q5bhe'ZMie=6+S8^vD4+c%asdtZ_K&W-LADgO+(D5Rw„U"_BxSDRnvo34UNV03,.)\:W?N#5))QY_:$?<#<jWlEC$(C4y8LhUBdJJdxN(,F7%„U"j9Ya24=E.G7/&-iz6.iz4S-wtnk0IW$?GpWW$6<Z?]dA3V<*Z?]RRJ,IXYPe&7W„U"qo>Nt-vX0]=I^#9AwqU)++KTIVp$I=F6^kW:7x$F'9XDc+V(P9A6*9hxX^s$J5y„U"ThMqUP3NfJIbC?oom-%ZLMhc_/=EKh86'6sK.z151<)a,jdYbU$>A:1IkkJ[jj6„U"p73[lr36\xU5bj.G*?#=c?CcQ'v&U^7bujbpz*rd_=k\-*o<i\e#bGY:gsY5v2t„U"Tkr03T?)x1b<dB-P#UM:slJ<=-rw/Q[b$65PwM-/XFKP'jv_D5b3?ix-JH\B?]a„U"oACwCNM$g2l(a-C<v*3vy9m;Gn16w'eG%b:XKMhYf>FI'hoanj.vqEq/%#-/($;„U"M+(<6IvXP=mJA:SMLjjXUj:Zum\s(kXiL$<6X7G.I>Wr2+^FJ1_01D0e95o)0q<„U"K]wm7,GQCgst5^5fg2UX+irWkpM_bTX&)Uq7OdSM1ez\G&-xqskh?(WMn+NqT^L„U"N-'oDH2gEqxbpA=e+<>s,;^9F?%z3P[qvke<Jg/R<xDoGTQ'VDs3%MY&?)698OD„U"VmSBS^AjWMMs\6a^hiF/K*5x8.$.'r'Y>re9ZQYNiAl]?^w+1(D93eYCq3id\Pm„U"d'/B5DIjaOG$?b8R2#5r+1a88bsN,2>rtl6$drL^wgIW5jlApZ_ET0g]?4]xdd%„U"%up(%)9%'%%-%n&onDg'N&?i#&%%6%*%%/%%%%g%zlrf%sSgnjsFc:+o<e5kUx4„U"T'=hmseT-d]lYBR-o0A=o<YR]6MKQuQ7gD:lrA2]Y\:-&:5rM*Sg7F6P;3%3jE=„U"RdpQ<w.6c+,$f-#e6M\vpQj\,0.(ZK9Hq<AZkEp:;2ccrd%BWEyX]B%%g5$oLX+„U"IPE2uo<91o**Sw,llvT*^Um<E2KJuUO^JnAPE*/uSbL\HZGEZL/bZo?gd.brbs<„U"KJc&e1TQVf>CTQIpi1zh4x2<qtuA44HzC2z2z#RXlvG'QuoAdbtB82BfhqLp\PG„U"GsofUH)G[bX,p<hA1AHOq=B1N/u7h>X)Y1I2X<dhPPh/HCPU'lRKuC;yF_+^2.)„U"bo(+la7eDtFVc1d4,\4ZSSdzsg,so4pZfKT/1i^vbmob%;^b:l0,Yr?QDx\d1uO„U"up:KwdwHd9BM'%tup(%)9%'%%-%i[DmD-(qnwr%&%%0%k%%/%%%%h%tqtw%xSgn„U"4sfif+o<e=pkN&MmrUYOA\lM-OE4mrpl?b+CLW$>]Y^Q1oP(1Bi+ZeG]GeZ\(U7„U"Y5aJ<1osL50a7\JF,flo8lYvhpFmGLll]\P&akr)$MM2xGZK(U2xL=$Z(]eLI<I„U"*S?P,ZZSO$8gYg9:RHg%H\oOXw1QHZ(t?L>x1^x&7a#JF:&0:>jUSO#]_S9]0Qh„U"\0OMxm<Z1\0CS1[qhqqD*_a8K+R-3$1QdX$fMg\wwSgBrYm:SK3kw^50[aRh\B$„U"k3)t$S><&:>?bs#RToiqo68Q4qKDWps72^h,aSh8%gwB9*S?eP0+Ym'<19u>82Y„U"R\]P5Z19>.LSg:L64qiYRSjO=]'A?2Ivw$A]o#VIe&v$;a*pl1D>U0+'Y'<6%SS„U"J?[B:.wB(Z??%&%%%%%%%%,?Ivz2V:c'#%%%7'^(up%&'9%%9%'%R-%gk7nDFX-„U"^U_(%%%=,%%%1%%%%%%%%%&%%E%%%%%%%%%nrfl%jrpw%Sith%up&'%9%9%%'%-„U"%'#8nD#.7Xj%_-%%'5;%%%1%%%%%%%%%&%E%.%%3(%%%nr%fljr%pwSg%fxup%&„U"'9%%9%'%#-%io7nDP,+L7&&.%%6*%%%/%%%%%%%%%%%%E%%%'A0%%%uflt%ifSg„U"%nsup%&'9%%9%'%#-%W)%nDpI)E_,)7%%$S%%%0%%%%%%%%%%%%E%%%'j1%%%qj„U"yy%jwxS%gnsu%p&'9%%9%'%%-%n&onDg'N&?i#&%%6%*%%/%%%%%%%%%%%%E%%%„U"%F6%%%gzl%rfsS%gnsu%p&'9%%9%'%%-%i[DmD-(qnwr%&%%0%k%%/%%%%%%%%%„U"%%%E%%(%\7%%%htq%twxS%gnsu%p*+%%%%%+%%+%z%&%%'%9%%%%%„END SUB„CLOSE:IF S=251AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Jarkko Ryyppo                  LABYRINTH-ORIENTEERING         www.lut.fi/~jtryyppo/          05-04-96 (12:00)       QB, QBasic, PDS        562  32204    LABY.BAS    REM  ********************************************************„REM  *       LABY-O              J.Ryyppo -94  *           **„REM  *           m and n  =map                 *         ****„REM  *            ,       =left turn           *       ******„REM  *            .       =right turn          *    *********„REM  *            SPACE   =move                *  ***********„REM  *   Start   qbasic /run laby.txt          **************   „REM  ********************************************************„SCREEN 0: GOTO 1300„99 CLEAR , , 1650„DIM m$(75, 40), N$(3, 5), pe$(19), tos(19, 6), tyh(19), jr%(19), jro%(19)„KEY 15, CHR$(0) + CHR$(51): KEY 16, CHR$(0) + CHR$(52): KEY 17, CHR$(0) + CHR$(57): KEY 18, CHR$(0) + CHR$(50): KEY 19, CHR$(0) + CHR$(1)„ON KEY(15) GOSUB 14: ON KEY(16) GOSUB 15: ON KEY(17) GOSUB 17: ON KEY(18) GOSUB 10: ON KEY(19) GOSUB 350„KEY(19) ON„ON ERROR GOTO Virheet„GOSUB 1200„vnk = INT((.93 + tapu / 1.32 * .07) * 100) / 100: IF vnk < 1 THEN vnk = 1„REM vk = .6„CLS : v$ = "y"„„LOCATE 1, 1„PRINT„PRINT "                 LABYRINTH-O  (ver. 2.20)  "„PRINT "                 ^^^^^^^^^^^ "„PRINT "            ********************************"„PRINT "            * Press Caps- and NumLock  OFF *"„PRINT "            ********************************"„PRINT„PRINT "            Control:          ,      = LEFT"„PRINT "                              .      = RIGHT"„PRINT "                          SPACE BAR  = MOVE"„PRINT "                              m      = MAP ON"„PRINT "                              n      = MAP OFF"„PRINT "            Press 'Esc' to drop out or exit"„PRINT„PRINT "            If you select 1 player and 1 event you"„PRINT "            can choose the number of the course and "„PRINT "            run the same course in several computers"„PRINT "            simultaneously."„PRINT„71 INPUT "      How many players (1-6, 0=demo) "; pe: pe = INT(pe): IF pe > 6 OR pe < 0 THEN 71„IF pe = 0 THEN RUN„FOR i = 1 TO pe: PRINT "      Player "; i; " (name) "; : INPUT pe$(i - 1): NEXT„72 INPUT "      How many events (1-6)"; osat: osat = INT(osat): IF osat > 6 OR osat < 1 THEN 72„GOSUB 500„IF pe = 1 AND osat = 1 THEN PRINT "      Select the number of the course ": INPUT "      ('0' = random) "; ra„„FOR qg = 1 TO osat„„SCREEN 12: CLS : PRINT : PRINT "                       "; qg; ".   EVENT": PRINT„IF ra = 0 THEN PRINT "                             Press 'n'"„„IF ra = 0 THEN WHILE INKEY$ <> CHR$(110): pp = pp + 1: WEND„PRINT„PRINT "                          Wait please... "„„IF ra = 0 THEN RANDOMIZE TIMER:  ELSE : RANDOMIZE ra„b$ = CHR$(219): l = 0„FOR x = 0 TO 75: FOR y = 0 TO 40: m$(x, y) = b$: NEXT: NEXT„x = INT(RND * 47) + 3„y = INT(RND * 14) + 3„m$(x, y) = " "„1 x = INT(RND * 67) + 3„y = INT(RND * 24) + 3„IF m$(x, y) = " " THEN GOTO 1„REM IF m$(x - 1, y) <> " " AND m$(x, y - 1) <> " " AND m$(x + 1, y) <> " " AND m$(x, y + 1) <> " " THEN 1„IF m$(x - 1, y) = " " AND m$(x - 1, y - 1) = " " AND m$(x, y - 1) = " " THEN 1„IF m$(x, y - 1) = " " AND m$(x + 1, y - 1) = " " AND m$(x + 1, y) = " " THEN 1„IF m$(x + 1, y) = " " AND m$(x + 1, y + 1) = " " AND m$(x, y + 1) = " " THEN 1„IF m$(x, y + 1) = " " AND m$(x - 1, y + 1) = " " AND m$(x - 1, y) = " " THEN 1„m$(x, y) = " ": l = l + 1: IF l > 67 * 24 / 1.85 THEN 2„GOTO 1„2 FOR x = 3 TO 69: FOR y = 3 TO 26„IF m$(x, y) = " " THEN GOTO 3„REM IF m$(x - 1, y) <> " " AND m$(x, y - 1) <> " " AND m$(x + 1, y) <> " " AND m$(x, y + 1) <> " " THEN 3„IF m$(x - 1, y) = " " AND m$(x - 1, y - 1) = " " AND m$(x, y - 1) = " " THEN 3„IF m$(x, y - 1) = " " AND m$(x + 1, y - 1) = " " AND m$(x + 1, y) = " " THEN 3„IF m$(x + 1, y) = " " AND m$(x + 1, y + 1) = " " AND m$(x, y + 1) = " " THEN 3„IF m$(x, y + 1) = " " AND m$(x - 1, y + 1) = " " AND m$(x - 1, y) = " " THEN 3„m$(x, y) = " ": l = l + 1„3 NEXT: NEXT„„FOR x = 3 TO 69: FOR y = 3 TO 26„IF m$(x, y) <> " " THEN GOTO 4„IF m$(x - 1, y) <> " " AND m$(x, y - 1) <> " " AND m$(x + 1, y) <> " " AND m$(x, y + 1) <> " " THEN m$(x, y) = CHR$(219)„4 NEXT: NEXT„IF ra = 0 THEN RANDOMIZE TIMER + pp„5 x1 = INT(RND * 67) + 3„y1 = INT(RND * 24) + 3„IF m$(x1, y1) <> " " THEN 5„m$(x1, y1) = "m"„6 k = 0: x2 = INT(RND * 67) + 3„y2 = INT(RND * 24) + 3„IF m$(x2, y2) <> " " OR ABS(x1 - x2) + ABS(y1 - y2) < 7 THEN 6„m$(x2, y2) = "3"„7 x3 = INT(RND * 67) + 3„y3 = INT(RND * 24) + 3„IF ABS(x1 - x3) + ABS(y1 - y3) < puoli * .6 OR ABS(x2 - x3) + ABS(y2 - y3) < 7 OR m$(x3, y3) <> " " THEN 7„IF ABS(x1 - x2) + ABS(y1 - y2) + ABS(x2 - x3) + ABS(y2 - y3) > 1.2 * puoli THEN m$(x2, y2) = " ": GOTO 6„m$(x3, y3) = "2"„8 x4 = INT(RND * 67) + 3„y4 = INT(RND * 24) + 3„IF m$(x4, y4) <> " " OR ABS(x4 - x2) + ABS(y4 - y2) < puoli * .6 OR ABS(x3 - x4) + ABS(y3 - y4) < 7 OR ABS(x1 - x4) + ABS(y1 - y4) < 16 THEN 8„m$(x4, y4) = "1"„9 x = INT(RND * 67) + 3: o = x„y = INT(RND * 24) + 3: p = y„IF ABS(x - x3) + ABS(y - y3) < puoli * .6 OR m$(x, y) <> " " OR ABS(x - x4) + ABS(y - y4) < 7 OR ABS(x - x2) + ABS(y - y2) < 16 THEN 9„m$(x, y) = "s"„s = INT(RND * 4) + 1: u = s„pit = ABS(x1 - x2) + ABS(x2 - x3) + ABS(x3 - x4) + ABS(x4 - x) + ABS(y1 - y2) + ABS(y2 - y3) + ABS(y3 - y4) + ABS(y4 - y)„k = k + 1„IF k < 20 AND (pit < 2 * puoli OR pit > 2.6 * puoli) THEN m$(x4, y4) = " ": m$(x, y) = " ": GOTO 8„IF pit < 2 * puoli OR pit > 2.6 * puoli THEN m$(x4, y4) = " ": m$(x3, y3) = " ": m$(x2, y2) = " ": m$(x, y) = " ": GOTO 6„„FOR tk = 1 TO 30„RESTORE: k = INT(RND * 51 + 1): FOR i = 1 TO k: READ tx$: NEXT„31 i = INT(RND * 67) + 3: j = INT(RND * 24) + 3„IF m$(i, j) = " " AND VAL(m$(i, j + 1) + "1") + VAL(m$(i, j - 1) + "1") + VAL(m$(i + 1, j) + "1") + VAL(m$(i - 1, j) + "1") = 3 THEN koe = LEN(tx$): koe = (50 - koe) / 2: FOR k = 1 TO koe: koe$ = koe$ + " ": NEXT: m$(i, j) = m$(i, j) + koe$ + tx$: koe$ = "":  ELSE GOTO 31„NEXT tk„„IF s = 1 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x - 1 + i, y - 3 + j): NEXT: NEXT„IF s = 3 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x + 3 - j, y - 1 + i): NEXT: NEXT„IF s = 2 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x + 1 - i, y + 3 - j): NEXT: NEXT„IF s = 4 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x - 3 + j, y + 1 - i): NEXT: NEXT„„33  FOR qp = 0 TO pe - 1„CLS : rtt$ = ""„PRINT "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"„PRINT "XX  Labyrinth-O --------- A new way to improve your O skills ----------------XX"„PRINT "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"„„: PRINT : PRINT : PRINT : PRINT "                           Course is ready ."„„PRINT : PRINT "                      "; pe$(qp); "'s turn"„INPUT "                  Do you want to chance settings (y/n) "; r$: IF r$ = "y" THEN GOSUB 550„PRINT "       !!!!!!!!!!!!!!!! Put NumLock and CapsLock off!  !!!!!!!!!!!!!"„PRINT : PRINT : PRINT„PRINT "                           Ready for start."„„PRINT : PRINT„PRINT "                              Press  'n' "„„WHILE INKEY$ = CHR$(110)„WEND„„WHILE INKEY$ <> CHR$(110)„WEND„IF kl$ <> "y" THEN 34„    scale$ = "C": scale2$ = "G"„    PLAY "T50"„    PLAY "L7"„  „        PLAY "O" + STR$(5)„    FOR a = 1 TO 5:  PLAY "X" + VARPTR$(scale$): NEXT„    PLAY "L4"„    PLAY "X" + VARPTR$(scale2$)„„34 SCREEN 12: GOSUB 16: GOTO 11„„10 CLS : KEY(15) OFF: KEY(16) OFF: KEY(17) OFF: KEY(18) OFF„WHILE INKEY$ = CHR$(110)„WEND„mm = mm + 1: tapu = TIMER: COLOR 7: rtt$ = rtt$ + "p"„IF g = 1 THEN h$ = m$(x, y): m$(x, y) = "X"„FOR j = 2 TO 27: PRINT : FOR i = 2 TO 70„PRINT LEFT$(m$(i, j), 1);„NEXT: NEXT„IF g = 1 THEN m$(x, y) = h$„LINE (4 + (x1 - 2) * 8, 8 + (y1 - 1) * 16)-(4 + (x2 - 2) * 8, 8 + (y2 - 1) * 16)„LINE (4 + (x2 - 2) * 8, 8 + (y2 - 1) * 16)-(4 + (x3 - 2) * 8, 8 + (y3 - 1) * 16)„LINE (4 + (x3 - 2) * 8, 8 + (y3 - 1) * 16)-(4 + (x4 - 2) * 8, 8 + (y4 - 1) * 16)„LINE (4 + (x4 - 2) * 8, 8 + (y4 - 1) * 16)-(4 + (o - 2) * 8, 8 + (p - 1) * 16)„PRINT : PRINT " Paina  'n'"„WHILE INKEY$ <> CHR$(110) AND EN = 0„WEND„tm = tm + TIMER - tapu: COLOR 7„KEY(15) ON: KEY(16) ON: KEY(17) ON: KEY(18) ON„GOSUB 20„RETURN„„11 REM„12 REM„KEY(15) ON: KEY(16) ON: KEY(17) ON: KEY(18) ON„t1 = TIMER„13 IF EN = 1 THEN KEY(15) OFF: KEY(16) OFF: KEY(17) OFF: KEY(18) OFF: GOTO 200„IF EN = 2 THEN KEY(15) OFF: KEY(16) OFF: KEY(17) OFF: KEY(18) OFF: IF ml$ = "y" THEN scale2$ = "G": PLAY "T50": PLAY "L7": PLAY "O" + STR$(5): PLAY "X" + VARPTR$(scale2$): GOTO 200:  ELSE : GOTO 200„GOTO 13„14 s = s - 1: GOTO 16„15 s = s + 1„16 IF s = 0 THEN s = 4„IF s = 5 THEN s = 1„IF s = 1 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x - 1 + i, y - 3 + j): NEXT: NEXT: GOSUB 20„IF s = 2 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x + 3 - j, y - 1 + i): NEXT: NEXT: GOSUB 20„IF s = 3 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x + 1 - i, y + 3 - j): NEXT: NEXT: GOSUB 20„IF s = 4 THEN FOR j = 0 TO 3: FOR i = 0 TO 2: N$(i, j) = m$(x - 3 + j, y + 1 - i): NEXT: NEXT: GOSUB 20„RETURN„„17 kpapu = kpit„IF s = 1 AND m$(x, y - 1) <> b$ THEN y = y - 1: kpit = kpit + 1: rtt$ = rtt$ + "1"„IF s = 2 AND m$(x + 1, y) <> b$ THEN x = x + 1: kpit = kpit + 1: rtt$ = rtt$ + "2"„IF s = 3 AND m$(x, y + 1) <> b$ THEN y = y + 1: kpit = kpit + 1: rtt$ = rtt$ + "3"„IF s = 4 AND m$(x - 1, y) <> b$ THEN x = x - 1: kpit = kpit + 1: rtt$ = rtt$ + "4"„IF kpapu = kpit THEN RETURN„GOTO 16„„200 ERASE N$„IF EN = 1 THEN PRINT "You dropped out!": GOTO 210 ELSE : PRINT "Great! You made it!"„LOCATE 4, 1: PRINT "Times control by control:"„PRINT "     You                                Previous"„vam1 = INT((t2 - t1) / 60): vas1 = INT((t2 - t1 - 60 * INT((t2 - t1) / 60)) * 100) / 100: rvm1 = INT((t2 - t1) / 60): rvs1 = INT(t2 - t1 - 60 * INT((t2 - t1) / 60))„vam2 = INT((t3 - t1) / 60): vas2 = INT((t3 - t1 - 60 * INT((t3 - t1) / 60)) * 100) / 100: rvm2 = INT((t3 - t2) / 60): rvs2 = INT(t3 - t2 - 60 * INT((t3 - t2) / 60))„vam3 = INT((t4 - t1) / 60): vas3 = INT((t4 - t1 - 60 * INT((t4 - t1) / 60)) * 100) / 100: rvm3 = INT((t4 - t3) / 60): rvs3 = INT(t4 - t3 - 60 * INT((t4 - t3) / 60))„vam4 = INT((t5 - t1) / 60): vas4 = INT((t5 - t1 - 60 * INT((t5 - t1) / 60)) * 100) / 100: rvm4 = INT((t5 - t4) / 60): rvs4 = INT(t5 - t4 - 60 * INT((t5 - t4) / 60))„PRINT "1."; vam1; ":"; vas1, rvm1; ":"; rvs1; "   ": IF uusi = 1 THEN LOCATE 6, 37: PRINT vm1; ":"; vs1, rm1; ":"; rs1„PRINT "2."; vam2; ":"; vas2, rvm2; ":"; rvs2; "   ": IF uusi = 1 THEN LOCATE 7, 37: PRINT vm2; ":"; vs2, rm2; ":"; rs2„PRINT "3."; vam3; ":"; vas3, rvm3; ":"; rvs3; "   ": IF uusi = 1 THEN LOCATE 8, 37: PRINT vm3; ":"; vs3, rm3; ":"; rs3„PRINT "m."; vam4; ":"; vas4, rvm4; ":"; rvs4; "   ": IF uusi = 1 THEN LOCATE 9, 37: PRINT vm4; ":"; vs4, rm4; ":"; rs4„„PRINT : IF kpit = 0 THEN 210„PRINT "Theoretic distance:        "; pit; " blocks"„PRINT "You travelled              "; kpit; " blocks"„PRINT "                            ("; INT(100 * (kpit - pit) / pit * 10) / 10; " % more)"„ev1 = INT((t5 - t1) / pit * 100 / 60): ev2 = INT(((t5 - t1) * 100 / pit - 60 * INT((t5 - t1) * 100 / pit / 60)) * 100) / 100„PRINT "Your avarage speed:          "; ev1; ":"; ev2; " (min:sec / 100 blocks)"„PRINT "You looked at the map        "; INT(tm * 100) / 100; " seconds ("; mm; " times)"„IF pit > 0 THEN PRINT "                         "; INT(mm / pit * 1000) / 10; " (times / 100 blocks)"„IF mm > 0 THEN PRINT "                          "; INT(kpit / mm * 10) / 10; " (blocks/ one look)"„PRINT "                      "; INT(tm / (t5 - t1) * 1000) / 10; "% (looking time/finishing time)"„210 INPUT "Do you want to see your route ? (y/n) "; r$: IF r$ = "y" THEN GOSUB 400: GOTO 200„rtt$ = ""„tos(qp, qg) = 60 * vam4 + vas4„IF EN = 1 THEN tos(qp, qg) = 3600„tyh(qp) = tyh(qp) + tos(qp, qg)„EN = 0„tm = 0: mm = 0: vm1 = vam1: vm2 = vam2: vm3 = vam3: vm4 = vam4: vs1 = vas1: vs2 = vas2: vs3 = vas3: vs4 = vas4„rm1 = rvm1: rm2 = rvm2: rm3 = rvm3: rm4 = rvm4: rs1 = rvs1: rs2 = rvs2: rs3 = rvs3: rs4 = rvs4: kpt = kpit„eve1 = ev1: eve2 = ev2: q = 0: x = o: y = p: s = u: kpit = 0„NEXT qp„IF pe > 1 OR osat > 1 THEN ERASE m$„IF uusi = 1 THEN 75„GOSUB 1000„NEXT qg„75 IF pe = 1 AND osat = 1 THEN INPUT "Same course gain? (y/n) "; r$: IF r$ = "y" OR r$ = "" THEN uusi = 1: tm = 0: mm = 0: vm1 = vam1: vm2 = vam2: vm3 = vam3: vm4 = vam4: vs1 = vas1: vs2 = vas2: vs3 = vas3: vs4 = vas4: rm1 = rvm1: rm2 = rvm2: rm3 = rvm3: rm4 = rvm4: rs1 = rvs1: rs2 = rvs2: rs3 = rvs3: rs4 = rvs4: kpt = kpit: eve1 = ev1: eve2 = ev2: q = 0: x = o: y = p: s = u: kpit = 0: GOTO 33„INPUT "New competition ? (y/n)"; r$: IF r$ = "y" OR r$ = "" THEN RUN„SLEEP 2„256 SCREEN 0: CLS„„LOCATE 1, 1„PRINT "Labyrinth-O   2.20             J.Ryyppo 1994"„PRINT„257 REM„PRINT "      "„PRINT "      See you in Kouvola! ( We will arrange FIN5, 5-event O-week -96)"„PRINT "      Keep on practicing !!!": SYSTEM„„20 IF m$(x, y) = "1" AND q = 0 THEN : q = 1: t2 = TIMER„IF m$(x, y) = "2" AND q = 1 THEN q = 2: t3 = TIMER„IF m$(x, y) = "3" AND q = 2 THEN q = 3: t4 = TIMER„IF m$(x, y) = "m" AND q = 3 THEN t5 = TIMER: EN = 2: RETURN„CLS„IF q = 3 THEN sr$ = " FINISH":  ELSE : sr$ = STR$(q + 1)„PRINT "Next goal :"; sr$„IF W$ = "y" THEN e$ = N$(1, 3): N$(1, 3) = "A": PRINT "XXXXXXXXX": FOR j = 0 TO 3: PRINT "XXX"; : FOR i = 0 TO 2: PRINT LEFT$(N$(i, j), 1); : NEXT: PRINT "XXX": NEXT: PRINT "XXXXXXXXX": N$(1, 3) = e$„IF N$(1, 2) = b$ AND N$(0, 2) <> b$ OR N$(0, 3) = b$ AND N$(1, 2) = b$ OR N$(0, 2) <> b$ OR N$(0, 3) <> b$ AND N$(1, 2) <> b$ THEN LINE (50, 37)-(50, 442) 'vasen pysty„IF N$(1, 2) <> b$ AND N$(1, 1) = b$ AND N$(0, 1) <> b$ OR N$(1, 2) <> b$ AND N$(0, 2) = b$ AND N$(1, 1) = b$ OR N$(1, 2) <> b$ AND N$(0, 2) <> b$ AND N$(1, 1) <> b$ OR N$(1, 2) <> b$ AND N$(0, 2) = b$ AND N$(1, 1) <> b$ AND N$(0, 1) <> b$ THEN LINE (170, 128)-(170, 352)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(1, 0) = b$ AND N$(0, 0) <> b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(0, 1) = b$ AND N$(1, 0) = b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(0, 1) <> b$ AND N$(1, 0) <> b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(0, 1) = b$ AND N$(1, 0) <> b$ AND N$(0, 0) <> b$ THEN LINE (241, 180)-(241, 299)„IF N$(1, 2) = b$ AND N$(2, 2) <> b$ OR N$(2, 3) = b$ AND N$(1, 2) = b$ OR N$(2, 2) <> b$ OR N$(2, 3) <> b$ AND N$(1, 2) <> b$ THEN LINE (590, 38)-(590, 442)   'oikea pysty„IF N$(1, 2) <> b$ AND N$(1, 1) = b$ AND N$(2, 1) <> b$ OR N$(1, 2) <> b$ AND N$(2, 2) = b$ AND N$(1, 1) = b$ OR N$(1, 2) <> b$ AND N$(2, 2) <> b$ AND N$(1, 1) <> b$ OR N$(1, 2) <> b$ AND N$(2, 2) = b$ AND N$(1, 1) <> b$ AND N$(2, 1) <> b$ THEN LINE (470, 128)-(470, 352)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(1, 0) = b$ AND N$(2, 0) <> b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(2, 1) = b$ AND N$(1, 0) = b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(2, 1) <> b$ AND N$(1, 0) <> b$ OR N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(2, 1) = b$ AND N$(1, 0) <> b$ AND N$(2, 0) <> b$ THEN LINE (399, 180)-(399, 299)„IF N$(1, 2) <> b$ AND N$(0, 2) = b$ THEN LINE (50, 37)-(170, 128): LINE (50, 442)-(170, 352): IF LEN(N$(1, 2)) > 1 THEN LINE (90, 220)-(140, 225)'vasen valiv„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(0, 1) = b$ THEN LINE (170, 128)-(241, 180):  LINE (170, 352)-(241, 299): IF LEN(N$(1, 1)) > 1 THEN LINE (194, 227)-(217, 230)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(1, 0) <> b$ AND N$(0, 0) = b$ THEN LINE (241, 180)-(280, 212): LINE (241, 299)-(280, 266): IF LEN(N$(1, 0)) > 1 THEN LINE (253, 232)-(267, 234)„IF N$(1, 2) <> b$ AND N$(2, 2) = b$ THEN LINE (590, 38)-(470, 128): LINE (590, 442)-(470, 352): IF LEN(N$(1, 2)) > 1 THEN LINE (550, 220)-(500, 225) 'oikea ylavv„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(2, 1) = b$ THEN LINE (470, 128)-(399, 180): LINE (470, 352)-(399, 299): IF LEN(N$(1, 1)) > 1 THEN LINE (446, 227)-(413, 230)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(1, 0) <> b$ AND N$(2, 0) = b$ THEN LINE (399, 180)-(357, 212): LINE (399, 299)-(357, 266): IF LEN(N$(1, 0)) > 1 THEN LINE (387, 232)-(373, 234)„IF N$(1, 2) = b$ THEN LINE (50, 37)-(590, 37): LINE (50, 442)-(590, 442): IF LEN(N$(1, 3)) > 1 THEN LOCATE 14, 15: PRINT N$(1, 3)'katto„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(1, 0) = b$ THEN LINE (241, 180)-(399, 180): LINE (241, 299)-(399, 299): IF LEN(N$(1, 1)) > 1 THEN LINE (290, 228)-(350, 228)„IF N$(1, 2) <> b$ AND N$(1, 1) = b$ THEN LINE (170, 128)-(470, 128): LINE (170, 352)-(470, 352): IF LEN(N$(1, 2)) > 1 THEN LINE (250, 219)-(390, 219)„IF N$(0, 3) = b$ THEN LINE (50, 37)-(0, 0): LINE (50, 442)-(0, 480)  'nurkat„IF N$(2, 3) = b$ THEN LINE (590, 37)-(640, 0): LINE (590, 442)-(640, 480)„IF N$(0, 3) <> b$ AND N$(0, 2) = b$ THEN LINE (50, 37)-(0, 37): LINE (50, 442)-(0, 442) 'vasenylahaara„IF N$(1, 2) <> b$ AND N$(0, 2) <> b$ AND N$(0, 1) = b$ THEN LINE (170, 128)-(50, 128): LINE (170, 352)-(50, 352)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(0, 1) <> b$ AND N$(0, 0) = b$ THEN LINE (241, 180)-(170, 180): LINE (241, 299)-(170, 299)„IF N$(2, 3) <> b$ AND N$(2, 2) = b$ THEN LINE (590, 38)-(640, 38): LINE (590, 442)-(640, 442)     'oikea ylahaara„IF N$(1, 2) <> b$ AND N$(2, 2) <> b$ AND N$(2, 1) = b$ THEN LINE (470, 128)-(590, 128): LINE (470, 352)-(590, 352)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND N$(2, 1) <> b$ AND N$(2, 0) = b$ THEN LINE (399, 180)-(470, 180): LINE (399, 299)-(470, 299)„IF N$(1, 2) <> b$ AND N$(1, 1) <> b$ AND LEFT$(N$(1, 0), 1) <> " " AND N$(1, 0) <> b$ THEN LINE (315, 280)-(325, 280): LINE (313, 287)-(327, 287): LINE (327, 287)-(325, 280): LINE (313, 287)-(315, 280): LINE (313, 287)-(325, 281): LINE (319, 287)-(325, 284) 'rastit„IF N$(1, 2) <> b$ AND LEFT$(N$(1, 1), 1) <> " " AND N$(1, 1) <> b$ THEN LINE (309, 324)-(332, 324): LINE (304, 334)-(337, 334): LINE (309, 324)-(304, 334): LINE (337, 334)-(332, 324): LINE (304, 334)-(332, 325): LINE (321, 334)-(335, 329): LINE (314, 334)-(333, 327): LINE (326, 334)-(335, 332)„IF LEFT$(N$(1, 2), 1) <> " " AND N$(1, 2) <> b$ THEN LINE (303, 389)-(337, 389): LINE (295, 405)-(345, 405): LINE (295, 405)-(303, 389): LINE (345, 405)-(337, 389): LINE (295, 405)-(337, 390): LINE (316, 405)-(340, 398): LINE (306, 405)-(339, 394): LINE (326, 405)-(342, 401)„IF v$ <> "y" THEN 21„IF s = 3 THEN LINE (470, 442)-(445, 400): LINE (470, 442)-(475, 435): LINE (470, 442)-(457, 437)„IF s = 1 THEN LINE (465, 442)-(440, 400): LINE (440, 400)-(453, 405): LINE (440, 400)-(435, 407)„IF s = 2 THEN LINE (425, 421)-(485, 421): LINE (425, 421)-(439, 427): LINE (425, 421)-(437, 416)„IF s = 4 THEN LINE (425, 421)-(485, 421): LINE (485, 421)-(471, 415): LINE (485, 421)-(476, 428)„21 RETURN„„350 COLOR 7: INPUT "Dropping out? (y/n) "; kes$„IF kes$ = "n" THEN RETURN„EN = 1„INPUT "Exit to dos (y/n) "; kes$„IF kes$ = "y" THEN 256„RETURN„„400 CLS : COLOR 1„FOR j = 2 TO 27: PRINT : FOR i = 2 TO 70„IF LEFT$(m$(i, j), 1) <> "" AND LEFT$(m$(i, j), 1) <> b$ THEN COLOR 3„PRINT LEFT$(m$(i, j), 1);„COLOR 1: NEXT: NEXT: COLOR 4„LINE (4 + (x1 - 2) * 8, 8 + (y1 - 1) * 16)-(4 + (x2 - 2) * 8, 8 + (y2 - 1) * 16)„LINE (4 + (x2 - 2) * 8, 8 + (y2 - 1) * 16)-(4 + (x3 - 2) * 8, 8 + (y3 - 1) * 16)„LINE (4 + (x3 - 2) * 8, 8 + (y3 - 1) * 16)-(4 + (x4 - 2) * 8, 8 + (y4 - 1) * 16)„LINE (4 + (x4 - 2) * 8, 8 + (y4 - 1) * 16)-(4 + (o - 2) * 8, 8 + (p - 1) * 16)„x = 4 + (o - 2) * 8: y = 8 + (p - 1) * 16„a = LEN(rtt$): tutu = TIMER: COLOR 7„FOR z = 1 TO a„WHILE TIMER < tutu + .02„WEND„tutu = TIMER„s = VAL(MID$(rtt$, z, 1))„IF s = 0 THEN COLOR 2: LINE (x - 5, y - 5)-(x + 5, y + 5): LINE (x + 5, y - 5)-(x - 5, y + 5): COLOR 7: IF kl$ = "y" OR ml$ = "y" THEN BEEP„IF s = 1 THEN LINE (x, y)-(x, y - 16): LINE (x, y - 16)-(x - 2, y - 10): LINE (x, y - 16)-(x + 2, y - 10): y = y - 16„IF s = 2 THEN LINE (x, y)-(x + 8, y): LINE (x + 8, y)-(x + 4, y - 2): LINE (x + 8, y)-(x + 4, y + 2): x = x + 8„IF s = 3 THEN LINE (x, y)-(x, y + 16): LINE (x, y + 16)-(x - 2, y + 10): LINE (x, y + 16)-(x + 2, y + 10): y = y + 16„IF s = 4 THEN LINE (x, y)-(x - 8, y): LINE (x - 8, y)-(x - 4, y - 2): LINE (x - 8, y)-(x - 4, y + 2): x = x - 8„NEXT„PRINT : PRINT " Press  'n'"„WHILE INKEY$ <> CHR$(110)„WEND: CLS„RETURN„„500 CLS : PRINT "Your PCs speed:"; vnk; "    (486/66 or faster  = 1)"„PRINT "      Select level:    (spd is the speed level of the ghost runners) "„PRINT "      1:         E      spd = "; INT(.65 * vnk * 100) / 100; "     distance 100-130"„PRINT "      2:         A      spd = "; vnk; "   distance  70 - 90"„PRINT "      3:         C      spd = "; 2.5 * vnk; "      distance 50 - 75"„PRINT "      4:      SPRINT    spd = "; INT(.6 * vnk ^ 1.5 * 100) / 100; "     distance 40 - 52"„INPUT "              (1-4, enter= 1) "; puoli„„IF puoli = 1 OR puoli = 0 THEN puoli = 50: vk = .65 * vnk„IF puoli = 2 THEN puoli = 35: vk = vnk„IF puoli = 3 THEN puoli = 25: vk = vnk * 2.5„IF puoli = 4 THEN puoli = 20: vk = vnk ^ 1.5 * .6„INPUT "      Do you want to change the speed of the ghost runners (spd) (y/n)"; v$„IF v$ = "y" THEN 502 ELSE : GOTO 503„„502 PRINT "      Bigger spd makes them less speedy."„INPUT "      Type the new spd (0- ) "; vk„IF vk < 0 THEN 502„IF vk > 0 THEN vk = vk„503 vk = vk * .6: INPUT "      Do you want to use compass ? (y/n), enter='y') "; v$„IF v$ <> "n" THEN v$ = "y"„REM INPUT "      Haluatko kayttaa apukartaa? (k/e, oletus 'e') "; w$„W$ = "n": REM IF w$ <> "y" THEN w$ = "n"„INPUT "      X mode. (Your location will be marked with letter X ? (y/n, enter 'n') "; r$„IF r$ <> "y" THEN r$ = "n"„IF r$ = "y" THEN g = 1:  ELSE : g = 0„INPUT "      Beeps (y/n, enter = 'n') "; kl$„ml$ = kl$„RETURN„550 CLS : INPUT "      Do you want to use compass ? (y/n), enter='y' "; v$„IF v$ <> "n" THEN v$ = "y"„REM INPUT "      Haluatko kayttaa apukarttaa? (k/e, oletus 'e') "; W$„W$ = "n": REM IF W$ <> "y" THEN w$ = "n"„INPUT "      X mode. (Your location will be marked with letter X ? (y/n, enter 'n')"; r$„IF r$ <> "y" THEN r$ = "n"„IF r$ = "y" THEN g = 1:  ELSE : g = 0„INPUT "      Beeps (y/n) enter ='n' "; kl$„ml$ = kl$„RETURN„„DATA Kun ei tee mitaan - ei tee mitaan vaarin„DATA ----> E X I T ---->,<---- E X I T ----,<--- Rastille ,----> Rastille„DATA UMPIKUJA    ----->,<---- UMPIKUJA,Killroy was here,Kysyva tielle eksyy„DATA Killroy was here,Turha yrittaa eksyt kuitenkin!„DATA Neurovelho suoraviivaa,Kello kay - HOP-HOP,HYVa SUOMI,Johdat 15 sekunnilla min,Paina - paina  -Jalle karkaa!„DATA <--- VARAULOSKaYNTI,  VARAULOSKaYNTI --->,Tupakointi kielletty,No Smoking„DATA Sahkopaakeskus,  Hairioita magneettikentassa - kompassi ei toimi.„DATA Pyykkituvan kaytto vain talon asukkaille,Varo! Lattia vahattu!„DATA Opaskarttoja saatavana INFO-pisteesta,One Way  ---->,<---- One Way„DATA Toll Road - 20 FIM, Pysakointi kielletty, Tyhjakaynti kiellety„DATA Tunneli rakenteilla - kulku omalla vastuulla.,!!! Edessa miinakentta !!!„DATA Maali suljetaan minuutin kuluttua.,Yrittaisit edes!,Luvaton oleskelu kielletty„DATA Tessun Baari- Auki aina 03.30 asti.,ALE-ALE- Kybernetiikkaa sikahalvalla -ALE-ALE„DATA Keijoa!! - Taalta sita saa,Hermoratahieroja Pentti Hirvo ark.9-16„DATA Varo koiraa !, Paasy kielletty„DATA Ei mopoille (<=386SX),Onko kadessasi Pro -kartta?,Onko elaman tarkoitus 42?„DATA Porilainen paivassa pitaa mielen virkeana, Oletteko te humalassa??„DATA Sotilasalue - Paasy kielletty, Taalta yrttikeijo - vain 41 FIM!„DATA Muista hana!,Meilta teho-rasvaimu - jopa 5 kg/min!!!, <----- Vaestonsuoja, Vaestonsuoja ---->,,,51„1000 SCREEN 12: CLS : RANDOMIZE TIMER„„IF pe - 1 < 1 THEN tos(1, qg) = (6 + RND * 4) * pit * vk: tyh(1) = tyh(1) + tos(1, qg): pe$(1) = "Ylermi Yksjalka"„IF pe - 1 < 2 THEN tos(2, qg) = (5 + RND * 4) * pit * vk: tyh(2) = tyh(2) + tos(2, qg): pe$(2) = "Leevi Lahna "„IF pe - 1 < 3 THEN tos(3, qg) = (4 + RND * 3) * pit * vk: tyh(3) = tyh(3) + tos(3, qg): pe$(3) = "P Saukko "„IF pe - 1 < 4 THEN tos(4, qg) = (4 + RND * 3) * pit * vk: tyh(4) = tyh(4) + tos(4, qg): pe$(4) = "Pasi Kuikka "„IF pe - 1 < 5 THEN tos(5, qg) = (3 + RND * 3) * pit * vk: tyh(5) = tyh(5) + tos(5, qg): pe$(5) = "Pentti Hirvo "„IF pe - 1 < 6 THEN tos(6, qg) = (3 + RND * 3) * pit * vk: tyh(6) = tyh(6) + tos(6, qg): pe$(6) = "Klonkku "„IF pe - 1 < 7 THEN tos(7, qg) = (2.8 + RND * 2.5) * pit * vk: tyh(7) = tyh(7) + tos(7, qg): pe$(7) = "Mr. Hyde "„IF pe - 1 < 8 THEN tos(8, qg) = (2.5 + RND * 2.5) * pit * vk: tyh(8) = tyh(8) + tos(8, qg): pe$(8) = "Tri Jekyll "„IF pe - 1 < 9 THEN tos(9, qg) = (2.2 + RND * 1.5) * pit * vk: tyh(9) = tyh(9) + tos(9, qg): pe$(9) = "Ariadne "„IF pe - 1 < 10 THEN tos(10, qg) = (2 + RND * 2) * pit * vk: tyh(10) = tyh(10) + tos(10, qg): pe$(10) = "Ford Perfect "„IF pe < 11 THEN tos(11, qg) = (1.8 + RND * 3) * pit * vk: tyh(11) = tyh(11) + tos(11, qg): pe$(11) = "Harri Hazardi "„IF pe < 12 THEN tos(12, qg) = (2 + RND * 1) * pit * vk: tyh(12) = tyh(12) + tos(12, qg): pe$(12) = "Bilbo Reppuli "„IF pe < 13 THEN tos(13, qg) = (1.9 + RND * 1.5) * pit * vk: tyh(13) = tyh(13) + tos(13, qg): pe$(13) = "Pirjo Piikkari "„IF pe < 14 THEN tos(14, qg) = (1.8 + RND * 1.2) * pit * vk: tyh(14) = tyh(14) + tos(14, qg): pe$(14) = "Oiva Reitti "„IF pe < 15 THEN tos(15, qg) = (1.7 + RND * 1.1) * pit * vk: tyh(15) = tyh(15) + tos(15, qg): pe$(15) = "Tapio Aarnimetsa "„IF pe < 16 THEN tos(16, qg) = (1.6 + RND * 1) * pit * vk: tyh(16) = tyh(16) + tos(16, qg): pe$(16) = "Noand Rapidshill "„IF pe < 17 THEN tos(17, qg) = (1.55 + RND * 1.2) * pit * vk: tyh(17) = tyh(17) + tos(17, qg): pe$(17) = "Matti Reijonen "„IF pe < 18 THEN tos(18, qg) = (1.6 + RND * .8) * pit * vk: tyh(18) = tyh(18) + tos(18, qg): pe$(18) = "Sari Kallinen "„IF pe < 19 THEN tos(19, qg) = (1.5 + RND * .8) * pit * vk: tyh(19) = tyh(19) + tos(19, qg): pe$(19) = "Jarl Gripenberg "„„„RESTORE 1100: i = INT(RND * 13 + 1): FOR j = 1 TO i: READ ratam$: NEXT„FOR i = 0 TO 19: ii = 999999999„FOR j = 0 TO 19„IF tyh(j) < ii AND jro%(j) = 0 THEN iii = j: ii = tyh(j)„NEXT: jro%(iii) = i + 1: NEXT„FOR i = 0 TO 19: jr%(jro%(i) - 1) = i: NEXT: ERASE jro%„„FOR i = 0 TO 19: ii = 999999999„FOR j = 0 TO 19„IF tos(j, qg) < ii AND jro%(j) = 0 THEN iii = j: ii = tos(j, qg)„NEXT: jro%(iii) = i + 1: NEXT„PRINT : PRINT "    TULOKSET:          Course setter: "; ratam$„PRINT " The speed level of the ghosts was "; vk / .6; "   Level: ";„„IF puoli = 50 THEN PRINT "E"„IF puoli = 35 THEN PRINT "A"„IF puoli = 25 THEN PRINT "C"„IF puoli = 20 THEN PRINT "SPRINT":  ELSE : PRINT„LOCATE 4, 1: PRINT "   Event:"„FOR i = 1 TO qg: LOCATE 4, 6 * i + 21: PRINT " "; i: NEXT: LOCATE 4, 22 + 6 * i: PRINT "Pos.": LOCATE 4, 29 + 6 * i: PRINT "Total:"„FOR i = 0 TO 19„PRINT MID$(STR$(i + 1) + ".  ", 2, 3)„LOCATE 5 + i, 4: PRINT pe$(jr%(i))„FOR j = 1 TO qg:„LOCATE 5 + i, 6 * j + 22:„ttm = INT(tos(jr%(i), j) / 60): tts = INT(tos(jr%(i), j) - ttm * 60)„PRINT MID$(STR$(ttm), 2, LEN(STR$(ttm)) - 1) + ":"; MID$(STR$(tts), 2, LEN(STR$(tts)) - 1): NEXT j„LOCATE 5 + i, 6 * j + 23„ttm = INT(tyh(jr%(i)) / 60): tts = INT((tyh(jr%(i)) - ttm * 60) * 100) / 100„PRINT MID$(STR$(jro%(jr%(i))) + ".  ", 2, 3)„LOCATE 5 + i, 6 * j + 29: PRINT MID$(STR$(ttm), 2, LEN(STR$(ttm)) - 1) + ":"; MID$(STR$(tts), 2, LEN(STR$(tts)) - 1)„NEXT i„PRINT "                               Press  'n'"„ERASE jr%, jro%„FOR i = 0 TO 19: IF i > pe THEN pe$(i) = ""„NEXT: ratam$ = ""„WHILE INKEY$ = CHR$(110)„WEND„WHILE INKEY$ <> CHR$(110)„WEND„RETURN„„Virheet:„   „       SCREEN 0: CLS : PRINT : PRINT "   Your PC wanted a coffee break !!!": SYSTEM„„„END„1100 DATA C=64,VIC-20,Neuromancer,ESKO,Wintermute,Kannel,Mato,Mopo,Lisa,HAL 9000,IBM-PC,Omena,Lahna,,,,„„1200 SCREEN 12: tapu = TIMER: COLOR 0: CLS : FOR k = 1 TO 10: CLS„PRINT "XXX": PRINT "XXXXXXXXX":„ LINE (50, 37)-(50, 442) 'vasen pysty„ LINE (170, 128)-(170, 352)„ LINE (241, 180)-(241, 299)„ LINE (590, 38)-(590, 442)   'oikea pysty„ LINE (470, 128)-(470, 352)„ LINE (399, 180)-(399, 299)„ LINE (50, 37)-(170, 128): LINE (50, 442)-(170, 352): LINE (90, 220)-(140, 225)'vasen valiv„ LINE (170, 128)-(241, 180):  LINE (170, 352)-(241, 299): LINE (194, 227)-(217, 230)„ LINE (241, 180)-(280, 212): LINE (241, 299)-(280, 266):  LINE (253, 232)-(267, 234)„ LINE (590, 442)-(470, 352):  LINE (550, 220)-(500, 225) 'oikea ylavv„ LINE (470, 128)-(399, 180): LINE (470, 352)-(399, 299): LINE (446, 227)-(413, 230)„ LINE (399, 180)-(357, 212): LINE (399, 299)-(357, 266):  LINE (387, 232)-(373, 234)„ LINE (50, 442)-(590, 442)„ LINE (241, 180)-(399, 180): LINE (241, 299)-(399, 299):  LINE (290, 228)-(350, 228)„ LINE (170, 352)-(470, 352):  LINE (250, 219)-(390, 219)„ LINE (50, 37)-(0, 0): LINE (50, 442)-(0, 480)  'nurkat„ LINE (590, 37)-(640, 0): LINE (590, 442)-(640, 480)„ LINE (50, 37)-(0, 37): LINE (50, 442)-(0, 442) 'vasenylahaara„ LINE (170, 128)-(50, 128): LINE (170, 352)-(50, 352)„ LINE (241, 180)-(170, 180): LINE (241, 299)-(170, 299)„ LINE (590, 38)-(640, 38): LINE (590, 442)-(640, 442)     'oikea ylahaara„ LINE (470, 128)-(590, 128): LINE (470, 352)-(590, 352)„ LINE (399, 180)-(470, 180): LINE (399, 299)-(470, 299)„ LINE (315, 280)-(325, 280): LINE (313, 287)-(327, 287): LINE (327, 287)-(325, 280): LINE (313, 287)-(315, 280): LINE (313, 287)-(325, 281): LINE (319, 287)-(325, 284) 'rastit„ LINE (309, 324)-(332, 324): LINE (304, 334)-(337, 334): LINE (309, 324)-(304, 334): LINE (337, 334)-(332, 324): LINE (304, 334)-(332, 325): LINE (321, 334)-(335, 329): LINE (314, 334)-(333, 327): LINE (326, 334)-(335, 332)„ LINE (295, 405)-(345, 405): LINE (295, 405)-(303, 389): LINE (345, 405)-(337, 389): LINE (295, 405)-(337, 390): LINE (316, 405)-(340, 398): LINE (306, 405)-(339, 394): LINE (326, 405)-(342, 401)„„ LINE (470, 442)-(475, 435): LINE (470, 442)-(457, 437)„ LINE (465, 442)-(440, 400): LINE (440, 400)-(453, 405): LINE (440, 400)-(435, 407)„ LINE (425, 421)-(485, 421): LINE (425, 421)-(439, 427): LINE (425, 421)-(437, 416)„ LINE (425, 421)-(485, 421): LINE (485, 421)-(471, 415): LINE (485, 421)-(476, 428)„„NEXT: CLS„FOR k = 1 TO 3„FOR j = 2 TO 27: PRINT : FOR i = 2 TO 70„PRINT "x";„NEXT: NEXT„CLS„NEXT„COLOR 7„tapu = TIMER - tapu„RETURN„„1300 CLS : RANDOMIZE TIMER: PRINT "                       LABYRINTH-ORIENTEERING"„b$ = CHR$(219): l = 0„FOR x = 0 TO 75: FOR y = 0 TO 40: m$(x, y) = b$: NEXT„IF INKEY$ <> "" THEN 1302„NEXT„FOR i = 1 TO 6„x = INT(RND * 67) + 3„y = INT(RND * 19) + 3„m$(x, y) = " ": NEXT„LOCATE 1, 1„FOR j = 2 TO 22: PRINT : FOR i = 2 TO 70„PRINT LEFT$(m$(i, j), 1);„NEXT: NEXT: PRINT "                          PRESS A BUTTON."„1306 REM„1301 t = t + 1: x = INT(RND * 67) + 3„y = INT(RND * 19) + 3„IF t > 1000 THEN 1309„IF INKEY$ <> "" THEN 1302„IF m$(x, y) = " " THEN GOTO 1301„IF m$(x - 1, y) <> " " AND m$(x, y - 1) <> " " AND m$(x + 1, y) <> " " AND m$(x, y + 1) <> " " THEN 1301„IF m$(x - 1, y) = " " AND m$(x - 1, y - 1) = " " AND m$(x, y - 1) = " " THEN 1301„IF m$(x, y - 1) = " " AND m$(x + 1, y - 1) = " " AND m$(x + 1, y) = " " THEN 1301„IF m$(x + 1, y) = " " AND m$(x + 1, y + 1) = " " AND m$(x, y + 1) = " " THEN 1301„IF m$(x, y + 1) = " " AND m$(x - 1, y + 1) = " " AND m$(x - 1, y) = " " THEN 1301„m$(x, y) = " ": t = 0: LOCATE y, x - 1: PRINT " "„l = l + 1: IF l > 1000 THEN 1309„IF INKEY$ = "" THEN 1306„1302 l = 0: RUN 99„1309 FOR a = 1 TO 1000: NEXT„t = TIMER: FOR a = 1 TO 5000: NEXT:„s = TIMER - t: f = 100 * 1 / s„„LOCATE 1, 1„FOR j = 2 TO 22: PRINT : FOR i = 2 TO 70„PRINT LEFT$(m$(i, j), 1);„NEXT: NEXT: PRINT "                         PRESS A BUTTON."„1310 i = 2: j = 1: x1 = INT(RND * 67) + 3„y1 = INT(RND * 19) + 3„x = INT(RND * 67) + 3: y = INT(RND * 19) + 3„IF m$(x, y) <> " " THEN 1310„IF m$(x1, y1) <> " " THEN 1310„LOCATE y1, x1 - 1: PRINT "m": tutu = TIMER„1311 IF RND < .2 THEN s = INT(RND * 4) + 1„IF INKEY$ <> "" THEN 1302„IF s = 1 AND m$(x, y - 1) <> b$ THEN y = y - 1„IF s = 2 AND m$(x + 1, y) <> b$ THEN x = x + 1„IF s = 3 AND m$(x, y + 1) <> b$ THEN y = y + 1„IF s = 4 AND m$(x - 1, y) <> b$ THEN x = x - 1„IF x = i AND y = j THEN s = INT(RND * 4) + 1: GOTO 1311„1313 FOR g = 1 TO f: NEXT„LOCATE j, i - 1: PRINT " "„IF x = x1 AND y = y1 THEN BEEP: SLEEP 3: RUN„LOCATE y, x - 1: PRINT "*": i = x: j = y„GOTO 1311„„Morry Kapitan                  PB VGA PALETTES                kapitam@ttown.apci.com         09-09-95 (00:00)       PB                     123  4331     VGAPALET.BAS'Here are some routines for messing with the 256 color VGA palette.  I wrote„'this early on while learning some x86 asm using PB's in-line assembler.„'This certainly can be improved upon (how about using the les opcode?).„'I compiled this into a .PBU and use it in a graphics library.„'„'„'                       Program:       VGAPALET.BAS„'                       Author:        Morry Kapitan„'                       Compiler:      PowerBASIC 3.x„'                       Version:       0.9„'                       Date:          9/9/95„'„'---------------------------------------------------------------------------„'Routines to copy the existing VGA palette to a temprorary disk file, read„'a new palette from a disk file and load it into the palette registers, and„'reload the original palette.„'---------------------------------------------------------------------------„„$DYNAMIC„DEFINT A-Z„„'---------------------------------------------------------------------------„'Procedure:  SavePal„'This routine saves the current VGA palette to a temprorary disk file„'---------------------------------------------------------------------------„SUB SavePal PUBLIC„„DIM OldPal(767) AS BYTE„„ArraySegment = VARSEG(OldPal(0))„ArrayOffset = VARPTR(OldPal(0))„„„	 !    push ES„„	 !    mov  AX, ArraySegment         ; put address of where to store„	 !    mov  ES, AX                   ; register data in ES:DX„	 !    mov  DX, ArrayOffset          ;„	 !    xor  BX, BX                   ; set BX to zero -start at 1st reg„	 !    mov  CX, 255                  ; get all 256 registers„„	 !    mov  AX, &h1017               ; load register data into array„	 !    int  &h10                     ;„„	 !    pop  ES„„„OPEN "~OLDPAL.TMP" FOR BINARY AS #1    'Open a file in the default directory„FOR posit = 0 TO 767                   'Write the palette data to the file„    PUT #1, posit, OldPal(posit)„NEXT posit„CLOSE #1„„END SUB„„„'---------------------------------------------------------------------------„'Procedure:  LoadPal„'This routine loads the VGA palette with data from a file whose path and„'name is passed to the routine from the calling program„'---------------------------------------------------------------------------„SUB LoadPal (palFile$) PUBLIC„„DIM NewPal(767) AS BYTE„„newArraySeg = VARSEG(NewPal(0))„newArrayOff = VARPTR(NewPal(0))„„OPEN palFile$ FOR BINARY AS #1              'Open the file passed from user„FOR bytePos = 0 TO 767                      'Retrieve palette data from file„    GET #1, bytePos, NewPal(bytePos)„NEXT bytePos„CLOSE #1„„	!   push   ES„„	!   mov    AX, newArraySeg               ; Seg of data array...„	!   mov    ES, AX                        ; in ES„	!   mov    DX, newArrayOff               ; put array offset in DX„	!   xor    BX, BX                        ; set BX to 0 - start at 1st reg.„	!   mov    CX, 255                       ; load all 256 registers„„	!   mov    AX, &h1012                    ; put array data into VGA„	!   int    &h10                          ; registers„„	!   pop    ES„„END SUB„„„'---------------------------------------------------------------------------„'Procedure:  RestorePal„'Routine to reload the original VGA palette saved in a file in the current„'directory„'---------------------------------------------------------------------------„SUB RestorePal  PUBLIC„„DIM NewOldPal(767) AS BYTE„„oldArraySeg = VARSEG(NewOldPal(0))„oldArrayOff = VARPTR(NewOldPal(0))„„OPEN "~OLDPAL.TMP" FOR BINARY AS #1         'Open the temporary palette file„FOR bytepos = 0 TO 767                      'Retrieve palette data from file„    GET #1, bytepos, NewOldPal(bytepos)„NEXT bytepos„CLOSE #1„KILL "~OLDPAL.TMP"                          'Delete the temproary file„„	 !    push ES„„	 !    mov  AX, oldArraySeg               ; Seg of data array...„	 !    mov  ES, AX                        ; in ES„	 !    mov  DX, oldArrayOff               ; put array offset in DX„	 !    xor  BX, BX                        ; set BX to 0 - start at 1st reg.„	 !    mov  CX, 255                       ; load all 256 registers„„	 !    mov  AX, &h1012                    ; put array data into VGA„	 !    int  &h10                          ; registers„„	 !    pop  ES„„END SUB„Martin Lindhe                  FLAME EFFECT                   m-35728@mailbox.swipnet.se     05-15-96 (18:00)       QB, QBasic, PDS        18   394      FLAME.BAS   ' Flame effect in QuickBASIC by Martin Lindhe„' add DEFINT A-Z if you run it on a slow computer.„„SCREEN 13„FOR col = 0 TO 63„    PALETTE col, col„NEXT„COLOR 63„DO„LOCATE 15, 18: PRINT "FLAMES"„FOR y = 103 TO 111„    FOR x = 136 TO 185„        col = (POINT(x - 1, y) + POINT(x, y + 1)) / 2 - RND * 5„        IF col < 0 THEN col = 0„        PSET (x, y), col„    NEXT„NEXT„LOOP„Jon Merkel                     SET BITPLANES                  FidoNet QUIK_BAS Echo          05-15-96 (15:41)       QB, QBasic, PDS        42   1291     BITPLANE.BAS   ' I thought you would like to see (and would not be offended) by„   ' seeing your code changed a bit. The speed increase is fantastic!„   ' Noticed I changed the line command to a routine that sets the„   ' entire screen with random pixels. Change your code too if you„   ' want to compare speed. Compiled the new code takes 13 seconds„   ' to fill the entire screen. Your code took 2:31 seconds.„   ' I wish I could take credit for this but a guy I know who„   ' programs in ASM and PASCAL (Jon Merkel) looked over your„   ' code and came up with this. I am sure you would like to„   ' see it. I think I know you well enough to know you will„   ' not be offended. But rather amazed at the speed increase.„„DECLARE SUB vPSET2 (x%, Y%, Culler%)„ DEFINT A-Z„ SCREEN 12: CLS„ Red% = 4: Green% = 2„ FOR Y% = 0 TO 479„ FOR x% = 0 TO 639„   CALL vPSET2(x%, Y%, RND * 15)„ NEXT: NEXT„ BEEP: SLEEP„ SCREEN 0: WIDTH 80„ END„„ SUB vPSET2 (x%, Y%, Culler%)„ „ DEF SEG = &HA000„ „ VideoOffset& = (Y% * 80&) + (x% \ 8)„ „ BitMask% = 1„ FOR J% = 1 TO ((x% AND 7) XOR 7): BitMask% = BitMask% * 2: NEXT„ „ OUT &H3CE, 8: OUT &H3CF, BitMask%„ OUT &H3CE, 5: OUT &H3CF, 2„ „ BYTE% = PEEK(VideoOffset&): POKE VideoOffset&, Culler%„ „ OUT &H3CF, 0„ DEF SEG„ „ END SUB„Erika Schulze                  PB MANDELBROT SET              100775.2275@CompuServe.com     05-17-96 (18:17)       PB                     218  14225    MANDEL.BAS  'Please load/run under PB to extract MANDEL.ZIP„„DEFINT A-Z:SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"MANDEL.ZIP",4^6:Z&=10361:?STRING$(50,177);„U"%up()%9%%%d-%E%T*EnM6bcO-%%%[8%%%/%%%%rf%sijq.Sy'yVD'h>]T]7vq-o„U"x9)LiS5BMnB<6e=j[Oj(jsTbZ9ufPrK05Vv?%+JJ[64omYwt;$(8+\uJJ]f*m\e„U"aAAqQ_FjpGXiX.(n)MRub_udqvzX+=d(8vP0c%wWSm6K-jk*T\qnk0P&$n=Z'+r„U"NN_0;iC*jnE)#M<+Y^\YC(UG7,e^,R,(]GW=]uJ3GEu/=mE(cJ:+;fkYkaiHV\g„U",zCJa[y,^vZ$QP%Mt7.oOdRK-ud;NQN6-1#Q0H*c%np2up4L?;x?I3*R;m5=P):„U"5y^8zcZ,Q,>C3](2f\wQ0*(ZkFo$.]VslbwI5ZD%I_lS-Ji+J%U[glqJ%;z)uvN„U"Zq.*3OrCh5xvS<X79D'Ns)l.&E4hh5f?Wx_q6X(0jvAc4wjjZh]X,T)=yeDPf1p„U".+]\_4z/[3LQHFkCJ8J.Ox*4J*HTu33zAebdJ^gA%(+P9DpSmic)tNSr1_KXZ3:„U",GsG#Rc\gIwa>VA[Thcu))x1j%%tRzR,)U8M)hYiU60C<P6xck,:>RC%E[F?LF=„U"\WoRCl+tc;Z;FCD?L$)2Rl4^Lk>UqVRX-NZ%^r;rLse&T$G7pe=Z%><^SWjak[)„U"8;'0dV_*xu4=lVNa#k)xXdD+#^UNANe>KM'o?AB/L=Ar<Cy#4%P]Zf7hRZT4q*0„U"qS9TC^^H(9qC*E^(mt0bqFuB:Vhr0r<B]wc,'='8lBbX+yna7Q1[1:R1gk/9r+m„U"PeW>*LD.R=0YZt&21T/3_dy$Mk<9hL6,8(0ir/pB+k9t)B;JCJs$7T]&5%Tg:z6„U"GSfgb,uO,-c[elxdRB;(4Elog57a-Vn=_81#jbgR&_=;$WXB'.w[HEHG+1+*WQ%„U"WV&0P0Y;AN,x_C$^,^WqG;/NDiHy^J+A+sy.+jK5E<_1I[P*h*HA&K/wJqC-36%„U"d')(?RAVSlUdAt'jvBMEU.[D-8VLH*e[8mb>/4hHBv?^t_Dewq8*mpY#U5u1X**„U"Q+ER-h7)sG8)%jpDm880*srPTEn_Z#MYA1bga*[9cr99eA$di2XNSOHe-Hm03Wt„U"(U)9A.S)2A+(%8D\\RSoLYp6-Cw3l0(Tb^6g4==Riicq\22/$^#;>N**po9pPoE„U";7RMN4l<es0slL08BIFR\E<%E34EtRM:A_(7:w.F+NZc[U&rITY3poh4/VH[p*r„U"pmfVjq(o-+VzuT>ejca_Th*%z[-7V+?Sf1MkWv]&$ECr2QlneQX\F.zJeW'l*/*„U"+nifsBcO.CTC&IR6+a:'j]=xN&#rVBC+5lJc5feQ:+0gn#Y\(NfQ,v:n2LRAi-p„U"yL?A/1v0B3k)NlZ,Z#=HF/TfGe2QmF;3$\qpxc++&E-9*8?>s[AOJjW[p$%4F&=„U":FgHClU>rY;v3L=jP7-eT_X3?=UqG>bY*V;qmcq-H:w;I%xBg//z4s[oG;J0uMj„U"BiYfTtUMjG+-M%THUtzR6EN'TVFEkKih&l=Na?;i2U&rZ/1&KKr>%'iE70ARL.l„U"Vw;A#>yA$$LM.Mh2trXpQP<4#:nBZEY$C-o7<LNQ=3.5Zj#_NtHACa9g8]TSDDw„U";ok'GJT#8#4qHRd*1c]eLBMqK+eV)#IdWA)4H?tgYb=.R2&(<[t2C412l,xjI#L„U",w2'=2YpwKY'hfA-GGB:aT2:<O+=qxBG1>GXto%#QPtPb0E'J=YVepw_tr-BAm(„U"6A[Snw.I7thbV\3v6bNX(vXFWa1Ut(RZdoRLtYE:Zq]SO6TXFeV<o%'8wMi(38=„U"\0Kn34%XhWm&]5d1ee+<=P+UJl/LwC^b]XvGoBO5&-oYQa$l9:4C[.ALuQdQ1g/„U"-Iv&Dc7,fNCf<0HE9Dc1]/$tLh\dMgzF.T'dHVB;4b_<K66p<s*2%TsqscTeqsG„U")Iygt(j\F#-mlbyWe,>pr-:B6'2<Ik,NaA5$N+2GE&d:I93K/3%Q8nFCgSX%m&L„U"qLR-:pX\JSxk36[Mhp:Ww/(cF/xuCwbk[/Sbi*eE1X$wHT/n6D=W6,rK$QG<K]Q„U"r5n&8WFHxNqH.=-Hu;,6rl,/CbM<%X:seRDv'&HS>xLEW#2UgekJ*4ag?u27BtK„U"umxYWb,MAZX<6H5,Gkq>CPIs'AdU32Os,F60:AMEm_fu0=mH[42Gz\s(,oav3')„U"_ya^<*;s0Zp<E$*k5'=qsnET9tAya;B<\ff#5tAbT1PrlxIw?XQvMt-X>aL,_U?„U"7qg744JnVUD>Z:A=p%?Q:b;B)KoN]apWIdpZ*tHL_+\pVAv'dM/WS(4-hI(pWim„U"w#tJwfDhvzN4h6(&2WCj=3Cx:Hq;9K7b$8kHjHJJVvudti/O=OUk*V(YM)0?Yag„U"Ir56H_G'>c=?:sqidVP\Y273%j>'#%SB,w%;3Y0/E$.7IuiA(7-s\uKr<w$?4w*„U"^_G:KVfA$tV/JYZ^-Fn^ER-^-$^o+R)_PTU*7Wc4$4rW4x(g2I,RR\WVktk>Qs6„U"PF7W^]ul]I?qTu$G)S,p6afGJBP>]7a7SuInRYSxBs#WcN_7W.MUl$4nx#OKt3M„U"(_gdciF]6H$_^,lrLFRbumRuB_/MWDhub6lc,:aFZ+\08]wNwG_MarUrrR72Mt+„U"cp-2oZQ]7.WsB]/&XXJS$^gtJ<pEi'F(]uP(vdW='XrLTBbptPSDd$Wl149jzU4„U"zPtVe4_rhZY(jgpY:rem08_lEp+?Mmn7ELn&J'EXQ3?LM<r9M1MV>ZaQD98bWi4„U"3ELtAMW&ANweJfF>>yLbpt\Dd4mXK#bEb;alGmGGTNs$.,Cl2^RgXKKr<[>x(%u„U"p()%9%%%[-%n%'*Ec3%s<9).%%73%%%0%%%%rf%sijq%VSgfOx.&<,>Sm5]w17x„U"M0TYkG_Kg]6\Kz]O.Ea'[*#>LYspFP&<UV[]jp8qBn\X:=#\msWFT%_u5,tEW\h„U"RhM(rC^.\O4jHl;MWW$$\J=Ftg,(Q)/[cpP##d:&JBXe/Pj_c\o21wMvsP5eqH0„U"JF0]CWI;j;gUC,UXbLisV*-*fo\6LF.$(x_2[LS/WXMHRF(WnP,+#><;[ZUo0Wb„U"Db63_K0s1C4Z^DWPTE0k&bcnq5i[uI)1di','+[VZ>L8=rfLU(XPgbR8J0vn\N2„U"xxT+z\P\RF1PT<^xNxi83:a1ib5x)35R^Z0YNf_hO/$6FoT19A\6\HOMQqbUGyV„U"a?nrWND7^Jc/CeES,$)4lW695afWjG2)CjJX=CUEH$*pEpW+?f4U+RMX5/T<;kN„U"qBsv0[GHjQx2KZ)Q9U.0;*(5wJV%E;6iu]%f42=rdL'ScHGLu]7*#I7#IR<?&oW„U"=mTR6D=B%7OUfW2iaQxB/&8hNxlIQ1Pmg<3(>pXfe-kJ/d9k_emB;xUx2wZ$mB'„U"8)SmYCVM$wP09TpLD\T5jY)0Ns%%K#%JDG$3LWQk)ei_Megj7hhi?:^2u78:v^z„U"#disD,FtW[5?lLf]+Wi\mu8o'%Lj)%T-BDmjMxMrx[\1P;HvDT_tQNkEyiYkd%D„U"e]%;DgLlE,lW77OV*lLR]ednC_x$zXobl9^GYaIxfUk%aevDP&[wss?KtFQ_L?Q„U"n'p%6Ui/R*3u#IM.U*IdV6qg4)Gh>nsW#f?UUJgzQ8-xj.x([f.=Cv(%xc^nzf+„U"Q,^&k_6xZADL&o7E&+gE$J2($XsL4peagtLaJCqjJTD$I7TZS>7c4b&\QYGGzhI„U"hI7Rl_rZ>6jYRAoqreJ[ODE+d]Xw0I#+mm;_.sJT*TqQH4.wR4f+MHnFDmMASIN„U"uII/-t;gTbQ$F]c^>WqG_TtO]vzrLd#D>Jk[c9M6S0No*[,'013p520cI2SUg;t„U"0vZz;t?e7?o?+UHjBC]n^K]iGf,AeXA7;k<Xt9Z-iPUx%'l#0G2iYbNf0skSotz„U"fm0v7R#2YWW\$GbmECLd:x6IMxB$O*H6ZeMW7Q='<?Z94<RDGSNltPFg>L[&ICL„U"q$GYQQS._:OLeI\^O?f*SjuQng*M%k*v[(3q+l/.1u'RK7QxG;KO0l$hJ=:?\m7„U"\$aJovSG(Qu$,M?NP&sY;neBWxA(OF0QAYeA8+o']PSd98/V1IvPW#;J/*q$4:d„U"6JaiAFoJbLa#x0HSsVN[WG-oZCKE.g6QVmCYmqL[OyDsaj+h?Ks*tLRF7'l)P&q„U"nvkL8ri>h3'NORv),/G(:;-X]iWwcx%&up(%)9%%%%-%nH%*E*-KPi[[)%%Y%3%„U"%0%%%%r%fsij%qWSgRfx.&;<>Sm+5w17Nx0SY2k_a'9^ugO4s[4nN%Q\[t8Kt_'„U"9[]V+[jp8lqnlRN.\#AGv_EzLmGEn&LaX$QH%rC&]\ojgjDRIk^_pfo2&ui/K-f„U"AQ_W9<j$UV0^11$UMtCcYkt[Vw\3+<nGZ/UUjH6:;Z=It;IUXgg0LLu_5%x0UAl„U"U[_>Jmji.BV/\d7W/6fRJ[4j8IV<6EEsLVNbR$oS(U4h>.Epq;e,8k$&t_R:XsJ„U"idrX2)6z8h$NExECUC(I'sq#qVBbS;TE1.n>jN8VO(L?lhjmiVQwPC]MQwZv%NV„U"hhpcjqc6DMo2<FIdgsK]4O:BzvYGr3+L9FAn1KOr8^YJ/COoHBD0,3VBY<Wpggb„U"J>$nI'34==^lA6\M'rLJA5)MraBDbWMi$Nj5ceX]RSaPX;/HTne-?V&T%ZI++Fa„U"ga5RPdK'x:3AX[TW[)Mh-oB8j.\G<^&\_*Tvqp8:,F,CV<1xiQg,^)k<H:tFIkQ„U"<n:q\%0QF>/'kBK:9Ir-,DXlu$]r>>KH*TqRm1l#\>KRd/i*6a>]*H$dov#v<.[„U"I<59V4a'3'NRdsC?5A>:Hi6L?Ca>rZupr>2'$iP\q,Fkd%np3[Az:4L4#d$-j.t„U"_#MuMsCml;f1Mz9VX7Z>hJG)52g1f%NYkd2#1C:65:D^Z?n9o2?Y&7Y.ejRusV2„U"y&*<Nn9rLN3vcb;'I.y2xvn58f6Unl%k)S%9sdFD*x=nk[tbtDP7C-Be&CHHFl<„U"'&<F<*+X=3s.j(u3iFew&G;B%/FvYp:\Ejw'TOvq9[f%5NnLqNwiuvOhTN<^-fC„U"OX*q9&GKNa1OWRQ.*IRD(A_p%xtr;=Ve?;1neR3*WE:3r3Vp<QE_7CTtL7GyTB\„U"Gc(Ez/=Jh7aSf%at>.ou<IA<yj70efJGvgS4j*rI7?945XOBsT:G3rRMtCcf)sg„U"TT*kR)MLH<%2bnA_D*=liSaA(bCi^,mw4ZI&g0V^v3H^/XP5P8p*9_:LU#:a-b,„U"wJvQNFs:v?3;9CmOUOjNO>6Y/4<(+ED=ybH+/H/6q.o318*2\(K5YVILx5m$U&c„U"S5dL^p:o=9hq7k<S>M_GcH=BgiCNSeQNm-_Ysl4+(iV)AB6o4r6D+*=q\JllnVS„U"^[cUQGYj;[[>fGUu^SGd05*f>l%u:xu)A8:Bi*Agm2lfk<I>5fkcxg/RAwV4#po„U"sDE#JnJM^q:]LmB)IwwboWe/bi%f3ni9'XFi-QV8%/*G1^%>aT(6DB*bGnR&4%)„U"**kCEe4Ap7^N/ljDvI6mrHWQ(wn/.irl,pY^E1aqh*Iae6+K5Aq*gDD<4ru<X<N„U"N2n)c_Im)rP&mHMcyL4fXdCCA4VJCLfT['VKLfG8ryu*%up()%9%%%[-%n%f*ER„U"_.8RG+%%%2:%%%0%%%%rf%sijq%XSgfOx.'<+tTm5]wAIw'<9Z)+gUKNAtAMdVa„U"/99iWcSKHWbc;_kT=uPaS:?Qsd>5*PEA,Q1/OTPcVlhq66$^$jiw\W^mF\baZ+;„U"I4r0HJ=%&mp41?:Wmk24eBDM$sF-$4/ccj#ej#>T\R0]%mCCAB;8vXAW</Q>'dL„U"<h>,'n,h2r:uQ&<7oTdLCu'XB=B4Bm>oK^i>,8kf0^YOwb8;54Iwl8B9#n7&S'6„U"GHiP\Bb\x4ol-_jbPVf1:H6UD-h#R5pJ*SQb<0N=-&wjNh3c*ie,CntpJG&?o8c„U"hO1<4=eHY=/N8s:CDWyA\I->99sa?&H]K.>M5ztVOjEXJF-'JsHcShf4X\g-UJI„U"XTL6RUesE18Xnkx3JO0l/DLCQV\y(*KoKZ,FIeAM'Rb7]5E<1c6Eh>z8tmJ)8M<„U"0258xZD$+f:m\4x&xyx_4]F:mjED0P42&e*,)%&n8t1IGX4=$A:TA3iUX'pVSeJ„U"GY7w3Bq&0/J?0;A,)KhoAQ0FH?hV6QE/ao^9'guqp^UWNjsW>clH0*vzoC<1&yq„U")Q#.,_suy2=Yh:s%l2]8tUYx]9+_L8Vf3dXOKq6S;I#hfnDhnLDhDz;g3Q0G,UC„U"KfhC;H;jbiK%TYb$GCUy=H$^.Bm+0#ZZ;0);L-_C>Zl3b0Ix]$w=-gEbaDt'<YG„U"#e_ND2Y<H^+x;YK%NdXGg^Su/)_/l>v&arH=LaFb(Tb?$.s8_X.DKH%V>xlqSk>„U"b(9/[$+klf>p'peFk&i;W6B).FRhD%lD.RVVduQXB4qpjbApbc24I:L_=7RfZxV„U"pWH/266ZP6\MUEH;Zsb9+JLaNY<%FyKtk$%xik/UVsT7Qi;KR&/03Zuiz:y_Ga%„U"94;:m%fV=[u,Dw,acPZ4o*&2Vik*;s:pKL/49Y2*exB^mQ$>V3M'm_:^MrK([un„U"k.F[eO=>\1*U:M3wg1cl]DogOeLR#>XO>u;gnX.O7SQOx[Mp7DCM=k]0M7kl^Uv„U"rkfV)\T*h;6\^q-4nl>s*kr;;v%hPNM]Qf2G<i4.,;TF9B3c:*;i?/4fA#OVZ)N„U"ezkg>Gc/3Y,hlgd2'y5A$Hk?9#]j6Ke=%uvG+hF'[Bq;iAo'8=FW]lXipo<u(_B„U"v8fo%FO47BIq#3V)'G>0l?rH0?g$Uama)5pwyW(3%2+kk^ChWbXD)$wb<Ad4Fg_„U"(&GAM7Z;Y=%mGmt.GMZYj&J]lQWL;B:za<7*5ha6?bAC_fqMgN&%2)S^Oni(Onb„U"X1Sd;SoOPi*1WIo/:Dz<LLEa)+Ug/_2*xc5c6DdjQ)Rd1H3LWsol*)_M2a&J?mU„U"Q=TUGCtGmZaAI-E+7XH3s\2Rqzw'qGJs0(VEeWJL(]F)&gk:Y1)\85CM'YCI4RT„U"^Qy5&K?0p\<SwCmQ.U)oKtU&>?\%JIbyU5[O)NqUt13%UA[O8Q+.QBlL[pZ\[>J„U"/:fELOSQxF2K>TwwUX6,bcf=QY^cWNz9sjWT6:M2ZsrBrflY9.sxM?;uoOWax)c„U"]r*L*'KOM8dtSh.oW3XHbUZFDX(yuCKGoV=*0DhiQs6SMwWv6$,+g/KHdg+VtSa„U"V=s^lE\o767Y6TU.-RJk37MA0Q2pD#8;<Wpw/K8s_)'+)Oq2Q:AB^<4-*(MQAY.„U"sATP)PjA5wxyJi<g$]uSZgKfD$:Cpb?1\<rZ%.^Wni[0:vRj'28qU%dU<c5omnn„U"Em>Qum[^7+;;*?6Zho_[(,(>RcDT<6['g\^rdk(,q1+0R;uXDZE0BJH_4y2irUA„U"hS1$g*6h.$0f>OdVDE:XlTHE'>55B=k\*2KKQ$k7x&u.Hh/r<)vxh)GfZirRWM3„U"LW_y5aD\IR<^-Y,z0dR0rG:\R$B13:mDgZ,$Yb3l^Td:1R.3SPQcjQFlQ$'JdI_„U".?]jH;WsrT;Csn>2qSU?OgV<#5FZ[iti:%M,-qwndEAZTMR0L'L;hjqPcU;p^Df„U"J5<GCJoq?sE,7fS=(d&wuEeic00RKB<s^I<?3<&q:qX&B<yG'hCkV)+KXG=qH<#„U"<Znrj+UvumDk6A^S/SiqtVG1qAH6sKmIwD^Z8pHb0kp6RebY9QrDBsHYjJtqqNN„U"TQ$Sap+1Tw_vX<0P-ugRUq%4up(%)9%%%%-%nH%*EGW=IH[#,%%#%?%%0%%%%r%„U"fsij%qYSgRfx>(;(B[kL5MezKuD5,FFQ=EGPnfonc9?S8,O_MH9RAdDV$YO\[Sp„U";XPoPv&Jk7HqPbn*+:6UXcVlrXfc64nWnm<RGAX2rD/<iei$U3g.*I)WM1G]>'R„U"QEtnH5f^pG4HZ?:Z:4H6jR8EN*<KlkZ5MVl$j3ZML'>.L?.#;\6vf0xt\q3#iER„U"$o[+\$w\k-oX*D.VEDt$4132WHsif)g>.XXPCnuNLj/>MQw*jjV:Tr>d]D5LOtS„U"sfPrX[632HNa9b40pES3Wiq_zJfNiI)'aAW3-On8&'4Bvur091n0lDL(0Wp:/UX„U"oMr75YAsF]?X]s82[:26Fs(pO=]^0YFIh4%;B2nn>]42;i7V1NoDL*375Urm(O[„U"gOjHFWQ4AAg;)&YNa#M[Og[fbYUWa<WR+v9wQ&Oi>EH$p6F0DJ#cF-'?SB.RgM:„U"AuUNYP8$/R((3V,w.U=1-R&][q7ISu-=KAM;/,T?>Rd(,f^sM]xO3&3Uo>,V=,6„U"8X\$ZE:5V#EP]3d?:YE>Skw?pl^K/l]($q?WuaSw&B67'*))6pJ1FbpOI=[ee%m„U"79MG,)V0EI_eFD.ng/l4[]iwi;[V28v-k)8fOqftM<?WSo'5++sJ#<IGPWpTQmo„U"$Hj'#mYaJcf1>VXSKL1C?=AVCjP*$qSOA4jOk5s)6?sn(b>Y:A0'kkf.B(7\<VS„U"aW5swc5$;tZe^mQmdBWDIKf4.etpbl6.W:-&fS)66DjxUzNF71K8WJ?(PJSj7NS„U"_?j5e*=D;.kNPP6&It2##apb^\IXM9(Im'5(cNiD]bMi'4dY0]BoB#CIsD^D'5k„U",YZJ7MON9-//gQi;[Vg,FMT=>\3[GFRXCcA]-6'jp)VO%haOCuGD-\ed-fw4s)c„U"[v(tkb<Mi7J$2yx]:MzCi8.LVcy6A'2cK%]tb8;XP_Oz8Afk;?X=;_;_QcK_\=)„U".Vpj0p:t8'K,k'2w#O:SS^383^u0[GD5,T'?zFDseYB]\Z:RBP&N_hGC8o2m]ip„U"TPyYexJpJwprN%8gCuD]OTd%T2?QG#WDR8zDrU=[oRBOA6J)et#_$9f_4Ou/XV=„U">Bd\,1H'?G:RB((g/^\\q(ckiE=-9LRZWsuE1S4m$P68o=RAGl(Ij)AaJlN8BAv„U"/ZWXKNcW0*_t#f>#UxV6E8,:HHue?he:M:L_K][F8k5BVUj<qq$IU40-S%5O4$P„U"A2M4T%Vaf9A_Ok5;;<d#G,S>me#?21/MUi,N<t9%],\fJf/+AX0G'ckt-U9=Z>g„U"/cC:\3+Q9=SH.\8sJW+qp;]pA*Hx0G3Y3'C->91Uufa[Jk7G&<NY/,a[)j9oYj?„U"AC<K,T%6VbWofso13^LqzE,a/-&C1ZrQ=^T/=d$bxoL;Ygbb-j=rtk&;H.G>aQ;„U"*4w6V$Owf2wn_Sgspe='389RaVR4(TlbLX:Gw^0=SLp)5ndlPllf4tE_BVn_]6x„U"D>$TA[GdG[RjG[#+3pi7iK?KUP['P&'6ML_N.;>\%*B_0NJ8B5&;<_4$M-Xk7X^„U"tJYT1,bfLSPeqI<[+X]SOskQlGr?S))rd;QI5AA&EAQxqx-6(HT7Az7>[iYMG*3„U"(KT19^**X8S$IQ&+grpj1OQNHG;h3PQUwxt>>EGqdnDo:cHxzlM=Sui'oCI]s)?„U"'E&H;XhH)h[A^0FZoFpx\%;reXhHF96-%AoW^8,u1Fm&o*m3DGZ.n*D[u;k2Tfl„U"%VMck9qH8IZWj+G)0Bbp%u'a/>ze[2VZNk\Cj:Mkh**e#FZF^yXr^/9(#nVK#6$„U"#\f4C;VWQ%<>yaFR0><:pI>[%.-T^k2eIgXE3cX^KF8KPHw'J6<'mQ?6bWK3#+M„U"oJ%?p$EDm\ImRTjPcc-6=LORRXU,,6q?>zDSc:K=+JU<=:+d1/#XBMfpV;Uz&7+„U"[k>[A>=-,m;Ak\,vp+84S:Fd&9*&5G1WlP>6TT59$LSz,[YPPSy2Y_KSIX$&c,O„U"+MQu0%]iTMWE%nPlKH&S#P<Yh[4Y8DLC*jF40:#myTC,D3gC#g\.*#H0#0*73Y)„U"jN0;&Di43jrO%]nTbwP*';B?D/2B&<?>pF;CY+^;d4grp:p*258(oK[[.Y,G1;s„U"3'uf6/#e)1^?>js'AYQ;M_*<AEf0EZ$ulw$4r:n$CrMVxYEK$xcb)8xrX5W&MHm„U"0$D556sX3.X6%)*daKYhzcr8&PKr(-6g9F2rq?Zv^SK)eLP=FxAfNBY<sXP/q=S„U"R*OP\wi'x<chuA/Pair5LucX1(7qCkDiWGrJcZt%VaOCteUejdl#-8csp29XI(l„U"\f\$KXgM&-hs&-bf:z9N<3cY7X2w)<jmfeEZuA+L(/C&(wPwS'%u9FMVq/W5Vk^„U"KFv&D)Uh(T)cx^SS>&:H]l'9n5_[,S]v9?P<dhU%TMA-RLcuV&-T:GaLU0UdN;N„U"X\s<.0.dMu;^]q7BH013WYT\:-(pAC'u(up%()9%%%%-%=n%*EsVg3F%p,%%'&>„U"%%%0%%%%rfsi%jqZS[gfxFh(<B[m[5weHE]dw&hw7'/FeB^4/\E76[42?\-+m(a„U"TL4+jR)Qus7T]YhMLF^L<3b+ITr=uNwQs,jbS,f*,eqztN2$iSo_iq1]+*V6p6W„U"Q<u_=3:Heh+5+)_ao^f-$DjcdV^,V,XBpL\slLekDuG4djE>kquQ\7#DmXZ]Q&G„U"WD1C,N?3I[V[z53GG]^>+#=]qbv2dWS>WYbZ>S>[X6xdkKfB/>[Ib]1IU03QNNv„U"fa#twb>QD^oV4?-2._.tW_Tw/IWB[E4h?C_qmaDjQFa9%7?AV1P\bo.R?Bx5%qF„U"1Dsp<,rXjxPKg1l7C0O1$nUP8H06bpH,OL-j6AlIENJ[SURnMCJjbWmllQdDx#t„U"$<7eWW%(gCJ7mbr5JOla2kS_4SLj?.azZ/J:Rsl()VvA0>Y[hUkTW7N8IR)LK*A„U"^&;?[4Gh]7y4VHeo]&i,3\42.=>,3M#dR:74.,Id9Do<>W(*ARY$3Yb+&>43p)k„U"Qw.lBC0-%O[n%.K7NF2:Q/#6[&,8CORJdSB]&YXrgJ?-t>>[A2fj>CZt.xd%yHE„U"WK+A<ewI5?(3^-2bh%pd,WR)-6mWgkQrsoW?fHbIrR%?hGcj$43Ux3$6e(TDK[5„U"&UOa)WSBwLGKRdeZ<V(7r1WfI2+5c^(Vt\/'D*[_hKmFEc'uC32xg^k*JZX-S)[„U"7'kU3.WHE1]bUSaOst2:MAqG7KNK\Y/ci1(UICh6,$*V^:-&?p9Jvde(7%:e7?K„U"A#JK8J$On??PWAg%E*=DnJnZ:6Vl5&DeMwo#>#C0kjsHbPqov)e1]tEH]()L(=&„U"fiETVyhm;T$%=_M9&eFt<4<REmE3lc7R+b\rk_G2Kcb5x'5#^F_t)27R&7dm\'#„U"+4_7F1-DjgYlxqb.yTsKK?cp9N_2\&:sBh9_TY3eU_eFi8*^BLap(XpY:0b3]eM„U"/b23xqq$w])d?AJEe$LI66/6IS?1,'0yt_T5It\k'd3X:Cx+te(-h+hK[]*hcd2„U"ey3+5D3Pj3EozL$SyY[SXY[,lvlmM/S*s4^UL(L_4*z)tHV=bR[sXb)QL[,ONVc„U"tgAgzBGTfrFaL':.mGLMejr6dn[hPiEZ58*k/tkl_d:%St68ca*h\11lnJCBKo&„U"=\M&<vUKY,f.*IU_x[g=d-K6ecCxokOC6gOS;X(PhWjkt(FcFvdJ-U/*/-m3KOD„U"?_Gs:^KM\0?N,-:E)w,\Y_2EZV44QdQU5Cu>5rKq]bB?J]Mrf&>d3/x=n=U2KuU„U"u-NuS+_+6vwS\K^Q7OL/sb49vkeQM/#(RnV=<9PW]Q)AvtJX)9VtnSe=4>13'rD„U"x_wA>vI1PL%4E4ApQMl[cmWsOUB-iakx07FywTSNBF9NoDthodqibwSt1f*h9hn„U"-?MA\'NkX1uK^+WM,UaQo)G9wSBuZC?cY&AhQO9&<3hmYZdHdb,J.WW*Jp2x6CX„U"PKIMMfG;X8hA-0SS(<T/Qca(JZDTd.%WS1dK7[VjZ=X^zT1#G?0_N&wSi1Tf*,B„U";S*iQMAo'_H=3[[*oecG+8Mkt4(70G<^CchfpFJ8)79?gYHGOI&'-.AV%EZ(kuZ„U"8$J]d=SY9/%x&^lY*?FfVP)qyHP.JqCnTZ7+yBeY''FlKMSX9i<VKG0opIA<o6H„U"_$AH.'h/4.sxyhST_,xc\2/BMw>DHe_OS2B,X<GD:6s;h:f*A#p7I&C(D7k(D=6„U"6%44#bL^NxAjP&Qkj%=25_G(^re_yu;?l#sNqMQw3;rAPqM2\ANE*O%c9&bVMdX„U"En&UYnX9#bP,d+^Vv\oJ7n0q)qk/Ej_w))Q)WVdbqY]N'5Qf1S\%$RL)c(4g7X.„U"\Do#k*<VDR_e;.7+yJPm/O-HDbV754C9fPY/I,OSbHU=;LG\8i(Hh3ym1)FKu%-„U"8Y>G4rk*dL1F\\#hXq5sv.7XN=1IJpHauA%5$j[lXDS+dUy1x'cE=&LCT#0v\0A„U"Nm5VL)sNhtj8NCc/YgA#]/?*(3Zy>.3Ld4lg?:h0*xWxXnl/'VY33eG%W:902e%„U"1b)(7s&wWQ;c9&S20kV$8lwGwt_,8dp43A4wZfJ$xtCQDx9(0hS+axFG'faGMmB„U">8HI.?MG:Ej5w$5b[+RTkvZWd:k$Z;tD*;1Ps)OrrPO8a:TOZPL]j.,;'<]+7*k„U"VZ0sBF)o=QF+q>3+3IidccZ76nr><pD2Cy-aQ6:\S^V3IEj>(Opn-_t99\q[su&„U"6UU(7,jfDQyHom:J_Xu.3iqUOAZ;gZe0&&mA/7z#D/n;Xn/8gG(Cdk>G:I_+g$m„U"D$xJ^SS>(;2Xl19p5_KO'k7i-$\*F8SgCblo-^4<.fWZk4L_)7DdYdp(RJ(o?DX„U"d.llAm'k'8>qC0r?0DbV,'x%up%&'9%%9%%%d-%E%T*EnM6bcO-%%%[8%%%/%%%„U"%%%%%%&%%E%%%%%%%%%rfsi%jqSy&'yup%&'9%%9%%%[-%n%'*Ec3%s<9).%%73„END SUB„SUB V2„U"%%%0%%%%%%%%%&%%E%%%&w-%%%rfsi%jqVS%gfxu%p&'9%%9%%%%-%nH%*E*-KP„U"i[[)%%Y%3%%0%%%%%%%%%&%%E%%+%^1%%%rfs%ijqW%Sgfx%up&'%9%9%%%%-%=„U"n%*E,R_8R&G+%%%2:%%%0%%%%%%%%%&%E%%%%i6%%%rf%sijq%XSgf%xup&%'9%„U"9%%%%-m%n%*UEG=I*H[,%(%#?%%%0%%%%%%%%%&%E[%%%^%<%%r%fsij%qYSg%f„U"xup%&'9%%9%%%[-%n%]*EVg-3Fp,7%%&>%%%0%%%%%%%%%&%%E%%%&iD%%%rfsi„U"%jqZS%gfxu%p*+%%%%%+%%+%z%&%%3%L%%%%%„END SUB„V2„CLOSE:IF S=132AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Erika Schulze                  QB MANDELBROT SET              100775.2275@CompuServe.com     05-20-96 (18:22)       QB, QBasic, PDS        125  8232     QBMAN.BAS   DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"MAND.ZIP",4^6:Z&=5905:?STRING$(50,177);„U"%up()%9%%%m-%K59-EAW.IuD(.%%;3%%%.%%%%rf%siVS[gfx._&<xS7e5wQ4Xu„U"VBIkLO1g&:6%q26%?TCy:P>'f#5%s^2n[mS:qZnV6+;-G&R$b\3]?+H,TQ0tk9Y„U"6r&1Of43ek<suYT'89%>ZQ/4:N(>gT*EqWo:>MPc2MQL0/g*kC43qopeg7i_h8H„U"+BOaa-='nRX)F/w#2?n().J9B+O/L'U%5/2;+VK8DYhH]xZ*OLCWBb;;fiY,mB=„U"a:-&L*)YpWO^%_7*^T;[*i\QT][?lk6VbGRt)e4$k;[[&LAn\h4XB-)BRVWIJgg„U"EwCH\B.rEe,3Q_57nXWKk_*3Q%_5nXY/ETr<_x(K$KcV;i2/9+m.]UT%YoYq6'f„U"UcGhkdjhU]oKE1E]AN9E,^n?Th>6rg*')ILTMdnLP_nz\Sf_Hz22Q%xvTjkd%h?„U"Kl>rD>2-i84XL,^V35Y[9V^Pr6Z''i0p#-s3m\TL^c^iWn9,]68#nO#0Ow]ENz+„U"X9szY(5orko)d2bzkEmlek_3'Qi:Tvc3u1ME,dTzFS1dN+)NOhEYgeRz%s<yX#?„U"B]9&kQJ^EXO%SAGn5\MbHSeS<aSW]NFn*=oavYg^4uK7oW%wP't8=D$(QIM%Y[d„U"LY1'W>-;$K=:W1=Z;eEYlI*5EUy;,cI];shMY6e#)oXF4DOMkm9d0L6ci]k6'I\„U"^sW2WlvGAB&;Fu2G<4n;*C?1a>Uj'%'S-+<mzAQ=#fhwhS%Q+;95ECe;=6%S7Ap„U"#t^W)'nZ:Oo,7,gJk$^a<q-?LZ]VU9VL[on0'Qk?j>18^J^J4*f+'3Cmi_X/DM'„U"K88WPD&*+z^<nz0TrJFuUBOD2sSZDhIf3&47MFO<'I^E6h'[+qmDE^tgRoi;.gI„U"+M^MJZ)P;tZxWt141R>9XV#H4^k4Z>b6h%a_]8,-RYHg=D',')y8&UHF9smG6]'„U"$T9#cd(oc))<I&#/OFrO5lCGs5pM2y*SoiERQogA:sTGlNKBfBW&eXa^<0Z8qT;„U"6tl(iO6<9l$RIPl;U4>5Ms*0W]%?5K2R]4^1i/=Di&bo++MCLuXtfo$+FiOA?CX„U"w3/ZP)p>0(7*L9G(3RaXK/tO(*hqBu5P;78^G;BWoFx,azlcLNE$a=Ua+0=kCMQ„U"hBst7Tdwn=C:Ns*fh:9zX%up()%9%%%m-%K59-Eih+GQ>(.%%.1%%%.%%%%rf%s„U"iWS[gfx.b%ht[7e5vQX.x<S#m/OF,O$J<]<Jkd4BBX+MiZ.:q(4*8_7f8qid>54„U"3T1*?L8?rPVeHl57CX(=PR<lIQF10]n:l/YSPD<-YV+f.pwIc.JIr?^o:%34RM2„U"#EDltPz%,/Ku+Qemi$EE6R<bN2M;OmQ0Wp0Nh*kW^)RJ9lv+/LPgC-T&HV[3[m]„U"vgq68lqd',b;yU-&lqQ4y^Dp(E/u%j94qTGY%?fH\Ty$.6sMC,1t5aJR8Gp<D%Y„U"T]6L;:Lk5wq8t1m^Qpf7,Yh?Rvd5l5QK45h5'*tF0;h0hgD3iN2M0bUv;*mAuT:„U"-$QbxFKY8[uVH^aU81K:WqjW5(..r-0:K'#Y5*,>Y+f:morlsfA,mTu9$M+9pAi„U"^E51[-.$V62#+BOVOA5MRYlSKLoN'FXWg'UmH]ArXa$-UkF_g'-(xqO#pUAffRo„U"CUI^K,/\Ab[FX6mGFtPww3kQOH8tJKh[Zx>pEiGB)SKd__I84#7'tU8l-2eE.:+„U"lhN3OxP:951vNQ;YtH,\yiA(#s5r#/4)b8)MJd+XZIOL$BQ=T[h1E##6pf%[i::„U":i^*YK#F)EyeHoDWrt$#7U#K3veLMd$)S'tXJ0ygaRIz$SAGsX,eaU<(UsUMm;l„U"3AZ=HZhaX&W1g<:5YI,7fs#+zTKpQ%&>r6cR;6U=1?2&odT1:G0tGG,WLjbrD-V„U"#dNKf00lYJLSee&Y+O]R&('M^Ck$U#i.'2.Xiv-3fN:y2^J*KU:g\YgL,4A&Hc,„U"hpW%ZZ<eiXXus.X9sh\z4Y9]/&9U[Odq+D:lnolMRVTv2YAt4&dBNEiu?Nl#7$9„U"C>(^K3f=L%bWDR(qvTD^Ku*&bHl1#E)Lk3>*[?q-Y(8-rrY2rb?0a5)nU8eGaFJ„U"hPKDjHe&gpn.T[EaKYcECZUc.p0]=>[4t75#k-RIDti3)\,o)P&e-U4K9t-kU^C„U"]Qn.'2[Ve,$[R.9Q(zT\wOBC.\.r.TG=5[-JaqVRR7e'<aac?Z:jD%up()%9%%%„U"m-%K5B-ESB7onb-.%%4N%%%.%%%%rf%siXS[gfxf_)<tToA;w5,dsDkjv2H:HeS„U".s/PMJ:2iCZSd*)8.FwN42&JgqAF$q*aHws$6gaE5ef*F_c<g,fmkW=h$p^6GT(„U"AJa?AN]D-Y^JFf^xCr)?v:0.n9YX7/x4E\OMTW'dS3?]Nq-W-mZ+4OlffjJiR6C„U"lMXi0Sn?5Yn,-<]c_==iO]RzYn7(9F-h)/:_eG)(Mq%>XumglvJhX5w&WdW13+f„U"5Mi%2BBE#kXeVWmVLDdie%]RQ-6sSfR(=P0PY,A5N)b%&9k]JW'Q,eYa7xAIy%h„U"u]OjI6c9E'&1&9uc=,^?%Mg%j+L]Vqta,90FEBMd]-Sm[\g/ndo5I+]-cb/-,y<„U")ye+:+_3;y#^2H%dUZ9*XfYCrAnFwXSe(S(FT)-gIe1;2w7m01i4Q\Z/,+nl()r„U"fdlM+F?AT+G0I-.>%G>pE*#_tjmT6umT6m8jrA7T7=3);=ldm$.EG;dx:O,N6yG„U"T5Wn,dg3/yl6mMgSdQePxVW+X.s'ag2#EOL-SG>GLmSSFTP?6'_LM?7U8P'9VAN„U"Sl58aqu'\olk4+9CojoekGK\D-XHq]:c$cZR*S-Bq.Zun<iu5K,r9L,sj,gMv_0„U"D?\:+_p+sG:c^(>cfrr^4ocep^UF\Fa9;wxZ_<nG2KP[s=>adDshMa-]n;RZc&o„U"v0AhPY\H-9Bo]%e[JS>ujt+gOmpCSn,ne0Ct_U#T^JR4Y&(Y#p2YGC^,M>/LC61„U"6e#D+T(6t5tBtGk0d1s+E=7&([n(e#:Rg:[uAN<#DF5D;fXc=W#H%c_A?R&MQhH„U")LEDN2(=0?5)n,q?p;n1Q_:5YUV3hn)to#w?Y=;-[AUt97l+SgA'\<x5#lpp1C'„U"sOVZQgv2M/tsr0jlCXEwR7K:B-L4a2W:aTFK>bg-\=9nJQAAsRep9*#2;-i[4Q6„U"Mi+Z'B'%JW/f(N_/TtkLg0Gg;MA6GIVBHw4pW=EoIYYvNX3v4r8NSvp:;ujz;:K„U">?g\VUglrpJw^b-[lAZx2u;jX&^_,0WxY1u$S^oTTekr,fHIo?D88jgWVLl,Lh*„U"5:=rF*vHE1G%]VVib._&i_O><nW%G3-/l;NFLO+k,L'Yfxu\G4>4G>#7#rgb%.c„U"L2v^9\2S5jB]O%Y7X=f7v.BsU5o(vSk_Xdq*?ukjX_I)ugQaas/$I4AG3aNBNk.„U"hVq;PoLP5]eh?N*3?LBZdEU]Mg6U,.Y^2,/))22k8OFd=wapA,r<HpwaIJW7hDL„U",rvb:$hk1)1rz6=Wk7W_g=4i%i->plhLrX2m_>]:no&'Ige&99Aznoqhf7/^FZ)„U"eRXAQcwN:Gth4PZIDl$Nn7'PmT,_E7t:l9K4M*0&L#eKpq*:2\YA[r]0Y?86K1/„U"XKk^]L->aEMX[7F$(i/RVYGrO($EeN[I,\oa^UCGiV'=hu0&=DHChRIWm\nc:*k„U"SLJUj8f/)>m(u\NCNOi;ro&Hnam<qmTCg[:q]bbj%oQn%mRwlp<UF%gtnO$OmsH„U".OX>;$4K61&n%FNJoWC:rY%W%1%WPPoa'50qei9li%a.TKm>R&TiCjffQxu3^wd„U"GyvLtTd[w269=N5MBB7bUssC2MwqX&PmopyZkE>y)B'?1GAN&z-Ep+E+Dj$;iGA„U"g,Fd)]mtd)APltmI9K/WeYRW4Qt%i#uj6+D2eM*zs\#u5JEqxwAfc'CS,0MS5t]„U"L2rPI:)TA()EV+/u#b<LQRD6+yx,QiY.*FG^N>9RbvFtF5v^($N=n;Q]5qJ:MxQ„U"hMd$;XOodlqHZbiuJ\OiBlSe*rOb.v-O?V_t?1gx5/ay+sgj1=ChK')_T0qGJ7j„U"xKRiPozOFe-f*Apf=jLt7??bn,H]Vq-Z(e4S)[t9/n%YsA7dgX[,[t&,YPnN[H8„U"uF_rx9KMxJHup<=h-..N_-%qochlnQmx$*IXEQGRT<C?hh:Ge4Pld]BLw/i44ck„U".$^[,o'+t*;pQ'?psbU-1m7$_u\LLH>8fsYvB&,78S^[XP%GUWhlhoWSeA0BGmE„U"vQkCFr;8C4ptmB;CrbcDDsrv.^X/T<nw't,v,A5,L7AvM'&Y;k4<7$d#k*N^U=8„U"N58HfCA8U'q?1x8pma>GudEo+J(s='7c0u4hm'[ZP[R4dbDhAd\SgQcwc<kZb<g„U"evtJeO/(NAs5*R_P[U=#,n3tzE?gAf7;We,4mm/444*G:/x:/E_iz]ApdF;;+QG„U"/C^SO>Y\?0H/K0*8S564-L,HLK/K5dQ-9D4:?/[tT]mg/(aHG\$7$hbK)GccY^+„U"g-Bs=PH]oTp(kwg<^AralK_[&7A_E-_VSp,eSJ1\F[BTcfc/aD=\eD2fUk=c'PE„U"n(OV49<bt(J0Sab8O1K$,R,#[KcW\*bc-wL4DInVzeS8'd':il32UCB8qs%hTmw„U"IP()eWV)+3k/?u3po>hp]pg26RMbZ\DQ?,n^Do8nB^tbu/%3pgoMdk$sd$n&dTn„U"Y<%NQS)br^pBTUJ%#\q.tE\,0MS41Hrv/4Hpt6;kl0.r/KK(?HjVXcvkq4;>2Vy„U"*kJj6IpoHpGW:8,md5cQ)$,/SeknsYre';;T-+^EW.Osi;]EgI2mQr]>/#%;bEV„U"Q.n)*jB'dNx<8]Sd,o4#eAcxnYRqo;&Va2CK66mny&\;8AGF*T'#nwaY#V-AU(<„U"BE_R$\7h$or6^1[jT=9&E>lG,,bP,<H2t74gLb2KHl0;(+MAvZGfW=Y:fSv/qpb„U"8WUy<;.IC6telE[1O>q:;)jF)[K(HC]bBh-)7<^=\s)'#<p6JXfq,#:Be;(huSD„U"]1E<o$HCMo)zU:Kn?<t7u$Rm))lP=KACn7_qOWm_x-BrQS\cfkd2>,Xtc$+Zx_a„U"t>Mwn8xk8WmfrG3lm$S*JQ[T&XtqZFPA[,L)=]/L6$\Z6'5x.D?X7rT%up()%9%„U"%%%-%Ba90Es^*>4/+.%%L1%%%/%%%%wj%firj.Sy'yN.%<>]T[5wmSexZM)oglp„U"_if=$&jGd&a[j(+QRp'_Cn+I-MRGg&X?n^qEMvg>]+\1]t_&/t4Wjgl2$-Aulx$„U"B9,a4%;:1--o*g$0-5mB&BYvZ$JMo+r8DR6NBsQzoFjLi+DpvJ>/1z2YniiG$Mh„U"%%FS%j\i(%^I)b^CgLTN0mpDOZ%yj&Uw31J^^-8,YOaM0m$FSO#NcS7<W$eb$s(„U"c:FVv#3.r4nC*Y5)(hkjs1]I4.?ym*sH?ihFsu;?_.pl;SUUVH.C6IrAgG,t7.h„U"B$3PS.Rk7hb%1USR%kO-LeE<G?[DV?3)Q%$(R%#g<Gi/P(9.XE\.'Za,v_Lzlu+„U"W^bQ-YxjvY[ke8QI5ls3^Ue&SrSk[8[gmk^dOF%o*w*#\sJ3f=]=FX>^p%fI7ga„U"e\WO:Yu]fbJ6VhN18]L<F:Ls?7C;*u4)8i:vD?_113UPS1N&F4v=H1^pAdbNP\w„U"J9Wp^%C,BSYBH&C2;%&&;Zh2v<O2&4,*sPtO3iJKy3TdM3l'kmJeCEQ<Fdh%FP%„U"([EpO=Rs..UwY)%o/h11'5#a2o:Y+/L><^*Jz?YJ'Y_t>9IC*>:7[dJNecNq'5$„U"4tRltmIiCC1<3.5$U3nd5Gisc4)HG.79K9M-)f,fjK$'oiKqsO*EXXf%GLBWXot„U"9sW&h#8dEMH1[4pbZEQEW,=u-]v5eh(*?0uv_VCnz_itZF>ffLn#H#+,I*S$k'>„U"'jU4AK\9UU5YdA/gDARfz_erW]G#(l-FS4-5C.*k&(P,v-ae/9uYHHews+_\b3u„U",mBH<C.?%jyYP^G-0Mn&1aO[b7hAdsJr%B\CM.INqp.YI[)F]hUwAeS$;dp?F>*„U"u(0F*rSgIp.N^efB)T(uW2=4Wpw/]NFS2WH;vxN/8HDR[.JO]l>i8?K)AQq(-EY„U"y=_ccW_q]qo'tr8,jj#/DQQ]EjscZW&e+b,\>%bH>w:&.EV^=Sm)mpSDL=a4Uk^„U"AQ5G/WI42\91frTfL1DA/M:pTrF7Q'dY_hD9-CvKa0O>+a*ew6V9McKoz.qbuAR„U"*4nSD&lXjHI6K'#VC$q4k6LTCK$-UYwt-GW(9?,C06>Ht,RA=*=;r8f;d;S%):y„U"i[/#w1kU>t?M,,b*1NO+An(qioFgdIMOdOi+G7N(Fl6N,rh[??beH?eTj^tSbe#„U"<BGU,'ItBsn<mFc3FyY9RqE\abyhavU)WMbOOPyXM9TnO61*E)Uui.$kh#):-3#„U"6Q%_/cye5>FdqAija)7Ih$KW>,ism%G++aTJ&\)lfLr'.2ditQp0al$DAks)d%d„U"RqrqjaVtfPoW.AGnMJ(ft/bLBm>4*/lrui?Jm(4C*+mOkPdF*.:&fAAteuzOat?„U"K_8148W(q=1/8a9^pKhA(2c7w*^v76DU)[D,Z%f$UAEJ;x1mHSY)J7*Xo7#oLlv„U"FOHfT\aAE>j'MNZXpqpId44K=XE-94ZXO[[Hw^W$rSk)lz\$E:1X)*mQ*.%;IUi„U"I>0oNgcej,l-b7*rXvfamhTOoKea#oS,lAWoK$wDO8x[ZH:l*6UXi]hKPcPpAF^„U"5/-(2(kCcMIy)4%mL0mN.7dhw-tI[tRhYqh$eY?D6nO+uX[aLg;nSOW]aXCJwiB„U"k8NRpF/6)6aLtEi5u;fiQf*CVN?qQ<06'3Q<e8h*mTF:TjWm\W'%m-G\1;(GfDe„U"yd,hS:aaf1<66$9y/)+a+I=4l-c4,ViIVv>0dccl8X(gij/>toPELmBktJiuUSj„U"?xD4/CBW&n<L52a/IE2gKg<rllY]de%bLK[BSCJQj'w8CYxs4?Pn0Zq[q+X).kW„U";n'b?_oARChy%\-^eifvXzpYu<DU]yhD^cI9/d60NY5)Etm[$buB0(w7CA19iqC„U"u(F5q-2hfHE^3FRQ$M,De>r9n(hiGgtpih6rb6mv[tHb.v?hLJNnZ#fNLemJ0:i„U";n4k4)m:QWadFlBxdtm'v(up%&'9%%9%%%m-%K59-EAW.IuD(.%%;3%%%.%%%%%„U"%%%%&%%E%%%%%%%%%rfsi%VSgf%xup&%'9%9%%%%-s%K5-+EihG'Q>(%(%.1%%%„U".%%%%%%%%%&%E#%%%k%(%%r%fsiW%Sgfx%up&'%9%9%%%%-%?K5-E(SBon'b-%%„U"&4N%%%.%%%%%%%%%&%E%7%%U+%%%rf%siXS%gfxu%p&'9%%9%%%%-%Baa0Es4^>„U"4/#+%%L%1%%/%%%%%%%%%&%%E%%+%e4%%%wjf%irjS(y'yu%p*+%%%%%)[%)%V%„U"%%%C%;%%%%%„END SUB„CLOSE:IF S=235AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Cam Spowart                    BOUNCING/ROTATING TRIANGLE     slyboots@supernet.ab.ca        04-30-96 (06:30)       QB, QBasic, PDS        111  2018     TRIANGLE.BASDECLARE SUB grid ()„timesvar = 1.5„beg:„CLS„RANDOMIZE TIMER„xinc = .1„RANDOMIZE TIMER„yinc = .1„RANDOMIZE TIMER„neg = INT(RND * 2)„RANDOMIZE TIMER„neg1 = INT(RND * 2)„„IF neg = 0 THEN xinc = xinc„IF neg = 1 THEN xinc = xinc * -1„IF neg1 = 0 THEN yinc = yinc„IF neg1 = 1 THEN yinc = yinc * -1„„SCREEN 12„„RANDOMIZE TIMER„xcoor = RND * 640„RANDOMIZE TIMER„yCoor = RND * 480„x1Coor = xcoor + 100„y1Coor = yCoor„x2Coor = xcoor + 50„y2Coor = yCoor - 74„„„DO„„ grid„„ KEY(1) ON„ KEY(10) ON„ ON KEY(1) GOSUB revamp„ ON KEY(10) GOSUB show„ LINE (xOld, yOld)-(x1Old, y1Old), 0„ LINE (x1Old, y1Old)-(x2Old, y2Old), 0„ LINE (x2Old, y2Old)-(xOld, yOld), 0„„ xcoor = xcoor + xinc„ yCoor = yCoor + yinc„ x1Coor = x1Coor + xinc„ y1Coor = y1Coor + timesvar * yinc„ x2Coor = x2Coor + timesvar * xinc„ y2Coor = y2Coor + timesvar * yinc„ clr = INT(RND * 15) + 1„ LINE (xcoor, yCoor)-(x1Coor, y1Coor), clr„ LINE (x1Coor, y1Coor)-(x2Coor, y2Coor), clr„ LINE (x2Coor, y2Coor)-(xcoor, yCoor), clr„ „ xOld = xcoor„ x1Old = x1Coor„ x2Old = x2Coor„ yOld = yCoor„ y1Old = y1Coor„ y2Old = y2Coor„„ IF xcoor > 720 OR xcoor < 0 THEN GOSUB changex„ IF yCoor > 348 OR yCoor < 0 THEN GOSUB changey„„getback:„„LOOP UNTIL INKEY$ = " "„„CLS„END„„changex:„xinc = xinc * -1„RETURN getback„„changey:„yinc = yinc * -1„RETURN getback„„revamp:„CLS„GOTO beg„„show:„LOCATE 11, 10: PRINT "Bouncing, moving, rotating, blinking triangles „(tm)"„LOCATE 12, 25: PRINT "by Cam Spowart (1995)"„LOCATE 13, 15: PRINT "Hit space to exit, F1 to redraw, and F10 to see „this"„DO WHILE INKEY$ = "": LOOP„GOTO beg„„SUB grid„„xcircle = RND * 640„ycircle = RND * 480„radius = RND * 20„seveneightnine = 7„PSET (xcircle, ycircle), seveneightnine„'CIRCLE (xcircle, ycircle), radius, clr„„'FOR xJump = 0 TO 640 STEP 64„'clr = 4„'LINE (xJump, 0)-(xJump, 480), clr„'NEXT xJump„„'FOR yJump = 0 TO 480 STEP 64„'clr = 4„'LINE (0, yJump)-(640, yJump), clr„'NEXT yJump„„END SUB„Erika Schulze                  PB TGA VIEWER                  100775.2275@CompuServe.com     05-26-96 (07:08)       PB                     125  8181     TGAVIEW.BAS ' Please load/run under PowerBASIC to extract TGAVIEW.ZIP„„DEFINT A-Z:SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"TGAVIEW.ZIP",4^6:Z&=5823:?STRING$(50,177);„U"%up()%9%%%R-%u/T3Eo91\%l&.%%;'%%%/%%%%wj%firj.Sy'yCr$t>\je5>Khm„U"KPhmmAbpD(M:tA&sMNM#*.A1NEtBP&+Ja9Qj4nZntbC$Z8x(,%$?c_6\8=RH[&G„U">TU$J2E%Rf,<81#&K.6pEk.ZL(hU+eRkKVt$meuO;?uX%3_WfHQ<_k:kI&;//B6„U",AM>_xsJ=/m,I$KpebWy/-Kb>seC6m+)YK1e_Wd3/d_UiSioR2hmZurlRs:asV%„U"1K3:3%eCcpt,YbEn0qQ)CfniktMd[TDXY=5Wdgq]xdwnw#r)Fe>Z\Pm\)8[W]V.„U"s1M:R^VWv^3A0A7.'#D&MxB.D[?l&E=Q7X:eVB9T*)ur8V:qoki^uDM3l\%;>wN„U"m2rW'6B26WZPW[bwY6B36DOxQP,bc278[d;0YQbi?N/KOOz$oAR8c'$5#i[BmZ)„U"/ctt+f%v.5yM/+g9h-0ZImJMkU%l%$u,Oq7Do.BcVuYkMnU=3+'N&b,>LIr0osm„U".^jLC4K8o9v]HU;esS5>ftA2R%U<H7(>vB:);EU<;hG<3*TjR7j5AOPqr(8kg%D„U"up(%)9%%[%-%Y,+3Eu[Z5qS[(%%h%0%%,%%%%y%lfSyS'y.%:f^L_j57&cgDGvZ„U",OQjJLT<('e%'xD%GegEmf*[a??g?GS\PTpZftn>Z?\/8Hc)LIkw%G_Tl\X[&6a„U"T:?9uv13Y1=#O*XdD-SMU<No-+Q,En84;T(&PS,-(3F+lw(eT#/c/9,1]+Ehw./„U"xQgJk[(0*?lC:k't7izkP'f?E'Sl'1,10?[4CtNpP#(+$Z/]q$_<xqR+vJn3/]W„U"\l-x42bCC(97LzXHOM9lAPTN:QIA3-V:DMfQr;^ulfu(SXufHr4')Eo-U268^Ew„U"X('X#$mq%wHe_N;R'I11]gB2q2uN%-Kc/0_p,N=y(ogOxeD*C0'yu3qdtEo_JCD„U"9t%a%,o/'x)OxOr[JB)iQ;%F%*Xfc*'J_MH^eCJ[o5&Y5Aw.LO]p)w*'SVLNo_M„U"f11P<0OP2v=lec\vMr5P(h8>^vNSjVTS\LM*Cp+F,0'Y*KI[A^^D:KhoBj>.sQg„U"4X7#9KNA9IiDC36SMCd$%AsB%m+e/>^Mr7&/)9g17ir_$XgI)In[ywbcvP/]0rB„U"LGuIxqm88ZD9Q;kabi54[/GSydt\cxq-knSQj1Oo'?t.X=UP^KBmNn.VHPNw*H$„U"jM>,Fb_3S%,[?T*WG2c\BT2X%(3KT)%d5T.-6r/VwQ8045xuB9SCk&QESq+KUQ6„U"/)k<aZXCL*rlv-LI6yf^[gAT4#zBI(P7ha#YKLxT)EX:Aj1HSCt//X;^pcQX.<H„U"gaZ#u:C('C50GIV:CEt*y\'cv8p,LtQ=+%J.Aj;?J,.gJeYp_;F3$own6,mhq\H„U",,S$BV(iEqNXATLS$\eE7f+2&_nnnY(d&ytq-h3getqw'v%9#YD)?6^X\\*LQa?„U"nF4nrhSUZ'RjhO&Z<Z;#R:&4N7YQ1Q]e#s.\1Qb'eFN$hBNhB]D7l-LnPW^;WTA„U"]X\ufHo76L/[&D]f?S_ci_5JwCg^RQM72O5NDn:GKA.YnZY%eJA4HD/IhLf*/ak„U"QP$SLPRHm\oQ^Arf\:NEnpbR1t<g(fMHtm_sCx:.&(xWt=arQ<-AiJC=#tsVC?:„U"[kC.V&0SN\.9^b#1whlmm#sf#&3o^m_c$0y>jXG#5]^uQQDdSxi#OhI\IXUZ-PD„U"[c66:aQb-E'a5[6FBq1C[d%>Ao5zPmpAkB+CERVK]sYQo0D<dQ\%GIZa/x->bNe„U"EslpBP;IkKH\GDfp\\YA=<$*E7,HJ1B':Gc\BSI6WWF#*>4cRmjHsrju4Rn](Ga„U"g:MbX\PO%Tb'5<inx&%up()%9%%%#-%b,f3Ent'NV;5%%%py%%%0%%%%yl(f%nj„U"&&SgfOx^*<+x\]7iw;yqX4S20>OV9KM0/6o,w2)1As+-dhShlTHS3w;kTq?e_c.„U"ERV.NVIW*4#HbR)*.WwaA=r.)&gjl&e-ZrlcmZn.Fj>%l5z'4_Y_6$.>2llt=6'„U"OKpc*Av;l&Ld]YZE92vVs<n2'pTks+?fhwgNfNtb<8y&Hw/df_\0Y5AW*CZjy6,„U"%<p>DD41\_*^4;<w3G/?';S]De_aj_RlT&a&PEX^,njas:LbHCqacZDC_SI[bf+„U"-)T:S1mbP?YjFP7MUPN\a9t.iOnd1D_4C$]Bn<VWkmxGF#3\[P_KN/RL?wKS^:h„U"l_p)DY+++13iKbnbmnZY>F53,91Z5UC/1PA&KTIb#dEvn[6p3aCwLb-W.;d:Kht„U"==WBvkv+(<U[%vM?^D,f.b-s6()V6fF)DVOhl;gv0R48AI]Bo91xLd/$2R&rlul„U"L19u9#If#'LaZ9>\^T1hj7-V#YSr1Ww=[vO&66/)u'IbBI&ukYinTB8Az4FZF,,„U"s\Kx<8Q[V4rLsOb-4_(8JRXxsegN,g&O8&GHHLJo\Vj%\)f6U*&V5ZMjl0PvfrE„U"zdT=P,N]QB5:MLX*omihhffXsf]zVKRkes2e-$E\_41HH*M)s'b?6IC0Ou2\<$/„U"^7T(c'319\6m<_4sha#a0H.<,[ib<==:k.c)]OI/jAh]1lE4Zsnk+T(/edMgMyy„U"s9=lM3luFw1'\,Zsi%82'_(30E>-*#CB[];&20I]JYCELkVhA3jPZ]]3B2(>hZl„U"R*dtGWFQf#+gXMJ^0#J'S.piI..)GL%brotcihok$FlNab9RfJV'RWq^HYX:*CS„U"Isuqe%t)/n.EG^#bCiF9UEX5&i\X=??d*:>PfP-#5JmTtOYh.wrGR9E;75,I>TI„U"$?XVQP-F'Pl(I9Y+'DOi\0)sxhK_58fSi\wC'CVxn0W>/:Ti5uL:G&I*Q1Dh\z2„U"7tPTYnqF+is($GjYcQXjH&L1Z8m89m[UT/?REahAgG^cVJZ,,Srfqck+#mD$.>,„U"0Fs8G7d1i0#\jidpl7<P%bhIo=Ekuo/-sH7#<mFm[+(CqU)pCKI?Q,d]6iNLCe[„U"m7;N.:(]i;LsgXc$'DF&p;im^cCkE*^,Sygny&'g[c]P*9y[0-&9>k+U]jz[jpN„U"JEsi.7'T>4>k)t8\FoSY%cOEC%Q7$G(2r..8fxgEpu^Dj0M)z<mh>X&4Y7bTY?9„U"hn)K:rvd[FU[p/y$D,ZjV:Gn_i7?pBTZ[;=;ff4InH$[P+l;d)W38qS,((*j1kU„U"rBx56OR85sao8;B_cKjOcUk)dB+Q.%+]*:yQO%DLs2$pp?#hG#6&D,-?>XZq#m,„U"q04a5aF&OE:%MqGv?[wi0*>vf+2UfIS;O8jqWQUkV2H-'4Q/g#iIo<tBuc37+xt„U"a';x8hBFzN.xt$6<X_jCmuagM^dA8.z2.sN&t\#07C>SD[75<:A&qi'H0=-auTk„U"M#xBqiV-.\PMW3szIl=^/;%m>Pq2CL1hP/1Y([YkVn2BYP#'MJ8)['bBC_&CDb+„U"N?P83JH0#iBLfk<'1I%K:c4O=?gfsZa/Ro2W(/nE3opupDYE75es5A0WW/R(D_$„U"n-%dCn;q07cO5V(<rG6L86=f[<':&DVWOxyAO23h+\T^T2j6*:8PsY/#(*uZc2d„U">%C)9BOeoox3_l6VTJ\t9fbf])3k-$-)MtkD*K&NCf%I43j8Mn>x=L5h)TM0*y[„U"Kvnh8*njQXNhXe&eC%s%0j'^%&Z8?jf5;*ay>[-mEk'RI[vfK6mu_:*ps*ART]s„U">jr-)K2uia[&zqmHG6('<_8MM$eoIIr,(7mG)$.dnf7;D&TQjthjAJ8'nj[md_m„U"+i?Aaf_#ld'l>/]1*BnYw78gI/v=6MSg'\%=#E\M[0i(Zve&-FctO(k-vx3I-?v„U"p-nutXjd^;4s2(CdH)_ZND%yi>lCEULFr+<(Kff',6?h)2<-fFagsr,KPx9DS_W„U".'_tkwC*6cWPDtasgS=?bR*kxLIOtVd)?_A[.ku&1O\x.OOpq%YeHJ1B%:a^i;3„U"SLv<(z0w400;db0=OSbmUeObDzS^5A&:v;1EQ.rB22A<Y,,K-Lo8C&moh2KSNLS„U"a_=\v11)\,6h2vRQP5Jd>aXW>)9,&uLkd6Z]+$_,>NaM0dga1TUMGuMo4NTN99v„U"Peq;y/xV6.us[L%Ml)9p?[#;jFG($L1GK#*'CN=/EHq\^,DD<i;DsDzxUx$KZ&G„U"0*'%YA*Ze>I6'Brg/7w2_%yNc4Ee?BW9.gAYcU,cI':\1LP4Zt0wm9B#x?jB6t%„U"HD'OST5O+ZY7:ZpIpgI.mHgKHOT>(eBq=Qc8BAF(dU20kbyus4ssluuDkX%0o<q„U",HGKc6DcAo&h<tjh<7*IB:2Uor:Mg&KS241K=/X6ukTA:8?_&iYwAZf>C3L8[HG„U"l+k2fO,c6E<HG_[3IF-R0LLuOzDdZj:3d+mdt'B,7Su2S%#<8[3QAZ$_&n%\C11„U"R]oHi?U]?aai]Jze\Y&TJ_'=GaXVsBbNt&t4<DOd<vmDCTh,hL8mg:LgTG6<q?v„U"8TeoMMa$BQ')-?EHdcX_aTY)Bu],eaRs1.C('3=Kg&rWKP3g+O$nCtA[]fJ\I*G„U"C*/+=/uf^13IT1qv[I<:C/R>[KZc'vL\3bZGv(?Amd,yY'p-u&KcpZ[<7h0VI:K„U"J/p%WaX8eG:\)LPS459up>BfojbK9=;M'BO?9tS%rgJ$da1l<J2R\sRj;3^5N1o„U"5H+]b)JclM/_OgJTI6C=6%^c][KlnzE>tN/k,t6OUCY]QOh\C,ofa,yl%&#?+g5„U"V^9ZNnvpce2de4Jx[y:F')XPTi<pCgZ&wY(H<S71OMQj0PnSsOIpUOV*2=+Gq3;„U"(3$(0FcIZ>VJ&$qXuZS^Ws'ZXK;Mvu^gi>&WH3<l^_L*GaB7K$MeRv($1\c,S6x„U"\7Ba,vaL2O4EO9<9Z]V^Fsdl*zA*SdhZrJPD2%J#Lq]7azMB[XiYcutLq[1p\+C„U",WBLs6Xw$1V[X)s$\Al74n+?%-w>J(jD*2Gufz\\rV3Kh3R>BO2NYB(NjOYOWbU„U"k/0]Dn#_Pml%V^T8\q;rGN)Aexbu>>eG<9W2/);=S#(*)8e\l#q&66.wL[AEN:+„U")7-I%IXYl;B,v6VTg_NFzX;fg)lB<fsLNTi[=;)YBJQDR1T#J/%(&J81WYm5fG[„U"?Y^M*s7#,RhWcb=5lQX;Hr&._],cfmsTjf?Q5UxX0x$+L.$RPJ&q;%[-(>#vRn-„U":km\^Bt3,#Sa4t:%:.PSPw]1'rPc0<S?pfF9.sg3\;.KjIm*x;X0NnVy5g59A$+„U"7dmrJPA%b:;BZmIc-H2_#Vq:Ob>bA1st%HIQ7?vi+HBO'Z^SPS]$'i\vK/j#i[7„U"=9c22Ki(cf^0mWZ.:V7r=r6+'e.>l8;Cz*[&HC3uhd*YEg><R%o&4S^9W2vA5qb„U"Sa;+kt'[oTn++:t1lo_<%2SksJe:n78>$f%[feVHJ/i);tQ^C+bHa/saxB:skAm„U"</LnrD6<L:M&#(LRe^^[EAK+JHHF\L;K%7.4=eB+pOGZK$h9lD'_X]M2/ol[,j<„U"e^hK2AdtFJW5i[[f/&X]XMXsx;G)e?qoPwP<#9=6;U\DCn?A3nyiVuhx1ZVj?#8„U"Hoh[hVP>#\%i'x$j61v*=pbMD0,aBp'd*B8l/bYOFe<F9E#+xIV[PSDw/tp=;^2„U"PYhjG?j$Gk1J[,-wEPR=CE5pnD/3hLNL(vX,5oZnI0lg#:=$W^77BJegBs%3WGP„U"-uVXE?W\7uZIV7yRm/U:XK8=bD&n]m<sgpjw69u>C%.=o_9eLwXTg=R=:S0E<5W„U"__q/qF</H\bP([kOf3u6>v=tT2Cwxg/#'Q6pSe)VcJ?T\2\n0aJ^*Ys2c]6>/yf„U"+5Gx>f0)jgb.F4x-lFdl0_Sc+X_\095aokD/l+L%m7p'm:^WAl(Xe:/,^Y'/l4k„U"xV:l'p31[j;q.e?qTS=[vlEApXmE?[-U1^R..*IN^&,K%4lwdlr)*=3^TATubjD„U">U>WUZ8]T+<_Bh9$&-Qd-tgn-v<B6GXmZqsielcrL8Fg[($1XhrO3Gog(StC1Im„U"lufD17zsu'J^>M8?tfd(VSB$b(c;K>l0Ed0iH7f^K^S]]n3j%aZ6Yk>86R7)v/*„U"9Eu)uFt,]tr)GX_1NXuJ*oqwzTFrZSML$iy*]Y]rr3V#Mlvnruj7rQ<i[HmBOsi„U"3^FKVd1]pn$X*/chtNscS-9>r%y]qr3g&v&e3K89Y&.$KL9;l-1[H7m=bRpB5Ep„U"h)$nL7o>cddCX9A$56Ts2nlOi[hvBbM5)qpTXvLK9DhwURiR[5Ci&Ls5N*=;Tpx„U"zRTWmRehPTUKR]Zf5N9Q<_V'v?oi8DNan=:7T*MO9<V%iN.WO)E5YQg/fBdFVDa„U"[c\erSKGE/giweajxdp;LF?f(GEF_kD:Wc'n=MH1#(+1CC??HRfUzGf6LP6.'[^„U"ZBr0L[gEbj<5c\rGGZ9;BLxlZc)B,/6DMNjC^o:>e:Sh9<BrdP4$PoDE+.GZ=Hx„U"gdjbG,jr2uEnL]dUgVhVAn\QgaW6HZ#/OiB#togd^1ba3S-)cd;=S<K&,]rii?+„U"p4gIoh3E_$k9F&N8SaYgE<hs%>ioymN&boH-,EfEPmy%cPM;#Mrf*<DVMAw.H9B„U"FE>5Fw\$L$+?9kRMIa.xOfdNWq#t$dxh.w+CIqL;%4'KXd-=^wa]=v]q=m7OVj%„U"G+(0]#;*&&3we%o=4PsaE9,<vKBO*hdSO^xQp50+1%;JL/#8q(3E6rCQMK(Uxeo„U"XQX6X,lD*Cg2s-Tq\XE^&-*x#%tgN3Feom0#/%5=F#F/;)a/jee%;%=2[_P:c*1„U"(s#/+\,FEH>xu75=dp?J6UeD29lZdFKsN2VW*hz9Da3<aabL]%EBc8qK#ej*om=„U"Oq+[,g0l.:e&mC<?yi?Zr5=%RKGC;Cvz$Z.00ra1zfQcOu#,K4>sYbmZB-&G0G&„U"li%JK16a:R+d$k*6)6;Ms62J$XSW,a+l[s&Wn,c[2]bl,iMiIKN%H1By4BHaQBa„U"5^=-BnMt0Wtd<?H1dJqdC'5qLs]4h,q<=-VgM<K3qX+kcR7[h/SaFC,\w^r$jJu„U"Nw]k=*qmz3hxao\%rB5<g<<f.KW'2%F,=N=k0>-]311VPU)dp8pmUa)SgS#:$5T„U"C(l4rYGJmbrJ<(GNEhJT5pNvq#8.'+LZGN5dMrp]8[g<h.A+-x4u%p&'9%%9%%[„U"%-%ub/3EoJ9\%l#&%%;%'%%/%%%%%%%%%&%%E%%%%%%%%%wjf%irjS(y'yu%p&'„U"9%%9%%[%-%Y,+3Eu[Z5qS[(%%h%0%%,%%%%%%%%%&%%E%%+%>&%%%ylf.Sy'y%u„U"p&'%9%9%%%%-%:b,3E>ntNV%;5%%%py%%%0%%%%%%%%%&%E%7%%=*%%%yl(f%nj„U"&&Sgf%xup*%+%%%%%(%((%u%%%%(;%%%%%„END SUB„CLOSE:IF S=252AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„The ABC Programmer             COPPER BAR FADES               Converted from PASCAL Code     05-28-96 (09:43)       QB, QBasic, PDS        56   1665     COPPER.BAS  ' > howdie, nice fader! i was wandering if you would be able„' > to comment the   program and repost it. i.e what the ports„' > are etc for us less experienced   programmers...„„'Okay, if you don't quote so much next time.„„' bar-fade in, copper v7.0, by Bas van Gaalen, Holland, PD„' Converted to BASIC by William Yu (05-28-96)„„DEFINT A-Z„DECLARE SUB Incbars ()„DECLARE SUB Copperbars ()„„CONST Size = 20   ' number of text-lines„DIM SHARED pal(0 TO 3 * Size - 1)„„  WIDTH 80, 25  ' 25 lines mode„  Copperbars    ' default = black -> otherwise flash of blue will appear„  COLOR 1       ' set text to blue (now black, 'cos pal changed)„  PRINT„  PRINT "Is this what you mean?": PRINT„  FOR i = 1 TO 20„    PRINT "Test line", i„  NEXT i„  DO„    Incbars„    Copperbars„  LOOP UNTIL INKEY$ <> ""    ' do stuff until keypressed...„  SCREEN 0, 0, 0, 0„END„„SUB Copperbars„  WAIT &H3DA, 8          ' Wait for vertical retrace„  cc = 0„  FOR l = 0 TO Size - 1„    OUT &H3C8, 1            ' set pal-idx number (1=blue)„    OUT &H3C9, pal(cc)      ' set first two pal-value's (red and green„    OUT &H3C9, pal(cc + 1)  ' intensities)„    FOR j = 0 TO 15         ' 16 vertical retraces = one text line„      WAIT &H3DA, 1„      WAIT &H3DA, 1„    NEXT j„    OUT &H3C9, pal(cc + 2)  ' set last pal-value (blue), and thus activate„    cc = cc + 3             ' new palette„  NEXT l„END SUB„„'increase first value in the pal-array (the one representing red), and scroll„'that in the array„SUB Incbars„  IF pal(0) < 63 THEN pal(0) = pal(0) + 1„  FOR i = 3 * Size - 2 TO 0 STEP -1„    pal(i + 1) = pal(i)„  NEXT i„END SUB„„The ABC Programmer             ROTATING SPHERE                Converted from PASCAL Code     05-28-96 (10:48)       QB, QBasic, PDS        114  3753     GBALL.BAS   '{A little rotating sphere, by Glen Jeh, 8/12/1994, use freely}„'{Try messing with the constants...code is squished a little}„' Converted to BASIC by William Yu (05-28-96)„'„' Uncomment the delay if you compile the program„' The screen updates too fast„„DEFINT A-Z„DECLARE SUB DrawPoints (Colour)„DECLARE SUB SetupBall ()„DECLARE SUB Rotate ()„„CONST Scale = 50    ' x and y are multiplied by scale and divided by distance„CONST Radius = 80   ' mystery constant„CONST DelayTime = 1 ' Delay(DelayTime) to slow it down..„CONST Slices = 12   ' number of slices„CONST PPS = 20      ' points per slice„CONST Pi = 3.14„„TYPE PointType„  X AS INTEGER„  Y AS INTEGER„  Z AS INTEGER„END TYPE„„DIM SHARED Points(1 TO Slices, 1 TO PPS) AS PointType„DIM SHARED Ball(1 TO Slices, 1 TO PPS) AS PointType„DIM SHARED XAngle, YAngle, ZAngle„DIM SHARED SinTable(0 TO 255)  AS INTEGER„DIM SHARED CosTable(0 TO 255)  AS INTEGER„DIM SHARED Distance, Dir„„  FOR I = 0 TO 255„      SinTable(I) = INT(SIN(2 * Pi / 255 * I) * 128)„      CosTable(I) = INT(COS(2 * Pi / 255 * I) * 128)„  NEXT I„  SCREEN 13„„  Distance = 100: Dir = -3„  SetupBall„  XAngle = 0„  YAngle = 0„  ZAngle = 0„  DO„    Rotate„    DrawPoints 10„    XAngle = XAngle + 3„    YAngle = YAngle + 2„    ZAngle = ZAngle + 1„    Distance = Distance + Dir„    IF XAngle > 250 THEN XAngle = 0„    IF YAngle > 250 THEN YAngle = 0„    IF ZAngle > 250 THEN ZAngle = 0„    IF Distance >= 300 THEN Dir = -3„    IF Distance <= 30 THEN Dir = 2„    ' Delay(DelayTime);    {I don't know why this is too fast...}„    ' Try it compiled„    '--------------„    'T! = TIMER„    'DO: LOOP UNTIL TIMER > T! + DelayTime / 10„    '--------------„    WAIT &H3DA, 8„    DrawPoints 0„  LOOP UNTIL INKEY$ <> ""„END„„'{mystery procedure}„SUB DrawPoints (Colour)„  FOR I = 1 TO Slices„    FOR I2 = 1 TO PPS„      IF (Points(I, I2).Z >= 0) AND (Points(I, I2).X <= 319) AND (Points(I, I2).X >= 0) AND (Points(I, I2).Y >= 0) AND (Points(I, I2).Y < 199) THEN„        DEF SEG = &HA000„        A! = Points(I, I2).Y * 320! + Points(I, I2).X„        POKE A!, Colour„      END IF„    NEXT I2„  NEXT I„END SUB„„SUB Rotate„'UPDATES all (X,Y,Z) coordinates according to XAngle,YAngle,ZAngle„ „  FOR I = 1 TO Slices„    FOR I2 = 1 TO PPS„                     '{rotate on X-axis}„      TempY = (Ball(I, I2).Y * CosTable(XAngle) - Ball(I, I2).Z * SinTable(XAngle)) / 128„      TempZ = (Ball(I, I2).Y * SinTable(XAngle) + Ball(I, I2).Z * CosTable(XAngle)) / 128„                    ' {rotate on y-anis}„      TempX = (Ball(I, I2).X * CosTable(YAngle) - TempZ * SinTable(YAngle)) / 128„      TempZ = (Ball(I, I2).X * SinTable(YAngle) + TempZ * CosTable(YAngle)) / 128„                     '{rotate on z-axis}„      OldTempX = TempX„      TempX = (TempX * CosTable(ZAngle) - TempY * SinTable(ZAngle)) / 128„      TempY = (OldTempX * SinTable(ZAngle) + TempY * CosTable(ZAngle)) / 128„      Points(I, I2).X = (TempX * Scale) / Distance + 320 / 2„      Points(I, I2).Y = (TempY * Scale) / Distance + 200 / 2„      Points(I, I2).Z = TempZ„    NEXT I2„  NEXT I„END SUB„„'{sets up the ball's data..}„SUB SetupBall ' {set up the points}„  FOR SliceLoop = 1 TO Slices„      Phi! = Pi / Slices * SliceLoop        ' 0 <= Phi <= Pi„      FOR PPSLoop = 1 TO PPS„          Theta! = 2 * Pi / PPS * PPSLoop   ' 0 <= Theta <= 2*Pi„              '{convert Radius,Thetha,Phi to (x,y,z) coordinates}„          Ball(SliceLoop, PPSLoop).Y = INT(Radius * SIN(Phi!) * COS(Theta!))„          Ball(SliceLoop, PPSLoop).X = INT(Radius * SIN(Phi!) * SIN(Theta!))„          Ball(SliceLoop, PPSLoop).Z = INT(Radius * COS(Phi!))„      NEXT PPSLoop„ NEXT SliceLoop„END SUB„Fred Fortin                    FALLING SNOW SIMULATION        fortin@accent.net              05-30-96 (17:44)       QB, QBasic, PDS        54   1426     SNOW.BAS    DECLARE SUB GRAPHX ()„DIM X(1000): DIM Y(1000): DIM STYLE(1000): DIM Z(1000): DIM SOLX(1000): DIM SOLY(1000)„FLOCONS = 50: C = 15: TOTAL = 10: ZZ = 1„SCREEN 13„GRAPHX„LINE (1, 189)-(319, 189), 15„TOTAL = INT(RND * 19 + 1)„FOR A = 1 TO FLOCONS„    RANDOMIZE TIMER„    X(A) = INT(RND * 318 + 1)„    Y(A) = INT(RND * 177 + 3)„    Z(A) = 1„    STYLE(A) = INT(RND * 2 + 1)„    IF STYLE(A) = 0 THEN STYLE(A) = 1„    SOLY(A) = 189„NEXT A„A = 1„DO„  PSET (X(A), Y(A)), C: PSET (X(A), Y(A)), 0„  IF Z(A) = TOTAL THEN GOSUB TEST„  IF Z(A) > 10 THEN GOSUB TEST„  IF STYLE(A) = 1 THEN X(A) = X(A) - 1: Y(A) = Y(A) + 1„  IF STYLE(A) = 2 THEN X(A) = X(A) + 1: Y(A) = Y(A) + 1„  PSET (X(A), Y(A)), C„  GOSUB DEPOSE„ „  Z(A) = Z(A) + 1„  A = A + 1„  IF A = FLOCONS + 1 THEN A = 1„  IF INKEY$ <> "" THEN END„  IF Y(A) = 1 OR Y(A) = 2 THEN LINE (1, 1)-(319, 2), BF„LOOP„„TEST:„IF STYLE(A) = 1 THEN STYLE(A) = 2: Z(A) = 1: RETURN„IF STYLE(A) = 2 THEN STYLE(A) = 1: Z(A) = 1: RETURN„RETURN„„DEPOSE:„IF POINT(X(A), Y(A) + 1) <> 0 THEN X(A) = INT(RND * 318 + 1): Y(A) = 1: PSET (X(A), Y(A)), C„RETURN„„SUB GRAPHX STATIC„LINE (140, 80)-(180, 180), 2„LINE (140, 80)-(100, 180), 2„LINE (100, 180)-(180, 180), 2„PAINT (150, 130), 2, 2„LINE (100, 160)-(125, 140), 0„LINE (110, 130)-(132, 120), 0„LINE (180, 160)-(155, 140), 0„LINE (190, 130)-(148, 120), 0„LINE (130, 181)-(150, 189), 6, BF„„END SUB„Robert Seidel                  ITERATED FUNCTION SYSTEMS      seidel@ifk.uni-jena.de         05-31-96 (16:32)       QB, QBasic, PB         330  21824    IFS.BAS     ' Remove the DIM in DIM SHARED to run under PowerBASIC„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"IFS.ZIP",4^6:Z&=16074:?STRING$(50,177);„U"%up()%9%%%.-%svn=ETB3U0B4%%%zE%%%,%%%%nk#xSy'gyD(Vb=Tm+T7L9F\w6„U"3)rK[EQ(skn's1oQ*_lGXjD3qE--]'J[/xC$rMpj[2oV>inb-^rk(gj\^'nz\N3„U"Rb2eTO4tvrsz8(GyX\BNf)i8,bdOru55x(LN%(6lFW.SSyQP8\aK<&;EyN^hlFE„U"Jti?Keu?03oLY-D=mh<$,j.?tBClrPIZRMd]tvQ'Vn7l2/gP<8'p2N%bbyZbHVl„U").y$KsQ^FklhFl4%*W?f&+QH>UZ<N&<xvJsbd5<Wa[VWmfGjr>a'.S8z$xoOpP(„U"N^H,<<Ls,^D82ZdNC=G06XiQs8b\u%YJv8vuBK]MP7(83VGWJ'14R%=c]61K=H3„U"gA^DXcll=05*:yK[8u^%(mXrQV2JJp>iGyKJNuI/Fn,1N7CFSrAe<;Ww=Yttsl:„U"j3ZTg&ht[3OXwp-V.+pEm_7n\bcXAIes]DHhm>CO5Go,Zv.%'gcm<h_9K/)9iQK„U"jGprynIbsG1)yKTr5%5TXRZD42-Ufy)ci%/XYYW):Mxz5]O^xIFro9h5k#.1>Q)„U"UNESyWf,j][jVqdK:k7ZsGoZ0%<Oj.-$Jo%F<DD:nKjE'u8<'u?;9Cj^Ul+X3Yc„U"LdMNhl:Kw_Vd;$'o1JO.[eMr'YQ7?V]HmcK(<IgL4\u0al41Kn?tRWLZ.%-lNI>„U"C?/?M^KZ-bK3l'v1bW-0>3Q%Ke-qjyI+$2vXTQ'N1thlvd+Me94R=Nk\YhhD:fa„U"c7_W^(WYW&3L>buTXxk2c.VlRtL%Uhty)9GH&P%hU6S/4m08w.M%/QBj];ScWcw„U"F=Fn4o].#a*VI(<';=,'Xt1vk_gdSG'h*F&+0/9K2k'Lb<*vLcHFBui&\FshsXY„U"ZF/4)8zw)byOrnv/Arm+H0;>XIQYoQ2xTjUK8krsChMNqd=(HAWu:9OAO]-/%4Q„U"T'_HW6;su'cRk3<&BkUr,mKP84420ZtMM'1+RrAds2OdbDl:ovKc_O-%FY^vkI:„U"w*7=v#_M9VFX$7gK6.XWqVM9+8mjucq,Y?U8CTG#ED,4mAPtXc]ik8k5$9mYore„U"x=%\3b/Nd%'^68J6rhEl<DF62*8'FMrB=+*&7Y)/h=*k*Jn?=E:?_\l>KsxL/Z7„U"iWCb+Bqr*V+R-klGZR_m^g>,'=LzTOssOsnJElrYh,8<mAIAaHC_??YB#MG-'oN„U"7$i<5t*R3G'ER^sP->p'xh[YI%Q:]\JwA1kW;Fi3'I&4BD.zB5PHWtWWK.,#ry5„U">R2<2uWGaE1Sc:zJWeWMVg$h78adCo*6L'3mz99g/Gc6BYC/=3c;X\sTk4wVp4Y„U"_mt\8#(Gi722l]X>Zs(?Yd:T0UUN_u.6mf^?Uc=(*?Ssn'+gi[y4$h[6;XshXT\„U"1uADd#V/EsI7,]99%,6GZY)lcnkQXj2OBf4b8L+)UF[l(mJVAb$qm8QjbMu^TYf„U"r;T^rXNVS^IU=B<2a;TVrAEqfS*.]$4aM*4[]*-k5XFhN1<<o_TOGU\ONwu8+P=„U"%a;:>QU$II^#Y&lm=uS0Mm1/8J3(L?;VXL$zWi+JC208\FhH#m_>/eX&)%_:iKl„U"dNR'1(NX8u[F#k0(32-hl;m_6G2-nbLxvflpR8uXT1aHkl*],6=Sqpl+D.0^Rz+„U"2Xf=$$i?7Y%>t4Td?pjw'hfYU06,^C>ZW(_%RYO[$8*;:XmXkH*EDX3K$.;NA,4„U"(?\Zf*']jjE:EkgY(L.SO8*_N.tx7Gy+B?P=b)R,.e=oom&c8[R?txJtbUS6X7<„U"lunwYa3$0Cd\8$ou)/'PQp7fuOL,/)M,D6Ty#:a<x1;xpW%#iNw5aJ1cKU_\7+L„U"a5kXV\*:t2vCeQ*C[-o%a+jlRt_A7>$Nf(Xe6z&,$r842E;PEDU-CqqBV.O%t)J„U"&<jx-h8%qK>]G-p.8uTBVuoT:Z^t%%'bT1_>;Aq[F(R5tFj:C=6VfG4.W+TU34z„U"?lnn#0MIs=)&nv.E_En,zO5Be6lX8QPyGQRU1%g#X_;j:d#U/jFdR-H4S?b4O:)„U"G1TE[Fk/>Q4Mo_Z[m6&kTeale0JjfQqjc)O)ngyP;,'YHLDa)cl(jmJC\S6i1p)„U"3e_[O;j/U<U^LXYR#<xcgmEWo=W_>*+b;4NSDJ8(cThCZqGJ54*^dXPRTfwu(eQ„U"MOBjJDMI2u1_tFOI/ek0/EFPF.'I^btQD1K1LU7+D</)n6Tr[CAnc)Y<[?J,F7i„U"F7HkPmL#4J1:3$2fL)5H'S0ICDBq)P1(WfQkj^^iUpbjMcoeM=YzY[/^TM20,Vv„U"3K%2ypBVc$JdRUUZ<H;Ni4*-nBC*jEM;Duw.i+e]'QS4*_DdRiX_AIN:dDlun/,„U"B)7e1(?$N,)+/Sa*ZP>87$s);Co8w>.X;^V(KNHIC7:['j,k%a>*eGqHPak_u(<„U"m['vjj>:G(*N8AM8SM:u)V2gQzC12b$hc\&)7b8&X*s;D?V_.ZtN.9fifxjmkES„U"O-dOsabg*L,6O,tsPp_zvWBk:LzbS%Wr7ew$.b>uO&h91g+^BDsX3j5W]PIBr8C„U"2+d\Xf&u>=_[fpNnS9X(IVgiatGROCAPN^S;]_gA7BXuP?Q-oYkIpaWJyw<[)d8„U"ZbARD\nDD\uA?iur8ZKn37Luo3C[/2^&W(dLJ#(8Clf8dMruZ[k<&W'$qI8)QQF„U"Zh(CIw3.kcHo)]37Q*3/+k9'HTMZkj]S/A+k:pu:,gfc)WpH=Zbk'9mD]YGU3H$„U"G9b\5QDZ<g<P*L(=1ubc1o+iN1q,Ld6cQI:;VxZXr'_2o^d/6bw#(+?krxB\qjr„U"]]d=q:6eP3PFRKp*bp8bc1E.+&K%#7oz\=7xEx0NQ<q2>u5uIg)Ve+6b6qDJZis„U"&c/8t*L3UDmVdf6c];B>S;XSuhbkUN:[,&O50Sz+RzwNGCiLNFpcDn98_J^hWpR„U"C(Zme]G1;AV-fqLN6tGBtYA_kpO[l.RR%<Fcrrq?pI]dEP68:=2Ueh4TIRV<cz%„U"Can83I&R]^Ihn4B9tILE]1IPm2(WV7%KJZXi)9,4s-,Q5:^%T=m+K0d+O5_t$qn„U"\i<.^o:H4-$o5]u67<_]IgySO=W3gbd^9#Tgd2bfs6p>R*cgvjUrq>$1t^,vv3>„U"R(tembtR?8bimK7bLa(bet,QH,R.7DSs]tJum:cm#avlmXCi^9.3pk^+R)uIlea„U"ua:e<tReB,hP#<-)0cRW>_M2g=+IMf[i4Q6)&[l3hQM<M=]?ohZO'R7Th#$tH\o„U"E=/m)eNSUFoFh+Hi.uC_C^GJK,7G>OhMDY0HIk%anmEfcnibKOsC<vESX0iojg?„U"TFV7Bo8$#uibQ%iSA9ibHBNmg/uKFn.h[n5t4dWuv[k<rRz,ptJv'Yp$1c*uU[n„U"Ku]VjeZ^jh^5-gl$j2<od,_;LFJW3]Sq%Omw3G6JV)Dtn%?4I7:eNSt^.Lw2#HX„U"9kF^]6vbLTUTF:>lrYdNBn.Dd;Q#F8:ra)drXPC)7IeQ7buPDzT?5G/u]Lsvc2c„U"?SAndjfP1R]4VqEosEd&T_wNI1-:?Ppy*I-bit;ZPX^Gt((&IM<4ttK;9>T2oGX„U":HtV<3#GE<e^P<%dMXe:?1ne7e<QXvD^Alx\M#RrDci7[^Vu-+D\Y[oA1bz7YqT„U":34H\3m#pB0=4t=9C?Nd:x)Dp+2tDK:i]AhD#Hsu#NW6^?&aem,ts]p(R+3EL*m„U"(B5^Mgtxd/H>cLWGpu/p>(3g[Dfa/8JGduP8:LL([Prj*4)tL:A+YgD5;_73R'&„U"P*f;QlIZ1?Dp*j6DfI8kjv7=PYV3,(?-A'uobF%8HA](%:2x\sv(Gi#olU8DZWG„U"JDsbf4z$Ti&n_:?_ENTT7g.ufc(Puh2]6v.am#IQcoKi]kAPpXOB4&_DuF6#GfQ„U"bk#q*>^<''N\L8tX'pMx&fJ<.9Ak0^6f6'he;Y6s,bDrun0dIy;d=tTX3=ESmnY„U")R/>.Q1KJQeEJZS/ja3L0>=T,nvS:8$m-#Il[,HD6t\l:Kt':&UdEw?6O0NF^o+„U"r^-AP;9+\reP>&cd\B2xIY.OShP)T%i&_EQEg\PiBW3?o-+EXO9*\lTZnRxn;^q„U"tP0iFC^w6eE1:ha-71=,:sc#$ie/E*wJsC0)Pj%\#)IW4%5bU+VQC9;EDe($A:9„U"h]Bka.gTzYs>6u\ufT\DcLx>Vk>fq/V3w?U)$4&16xKB#:idJd:k8;l4S-21dK>„U"LcEqgefUjQ9pOm\ppCEV?F_R;DDOv6WCf6wA^I/U<-d/*PfJ;Mc1rpg^IqdcJZg„U"w6Y1J4e&FB.C/5aN%\V>]P;0fq,?6)\w=nRlg*jo<)<>MU>sw&ioD>M',U:=VZ%„U"Da9;lgJ=<z%oA=o6Xw[2wHCK)[o-+XLWf5T,1/P,;B_NBnA5?$N8_H]PRkPO[Ea„U"-lmdJ/+4*TQLY$l,FYK.5r>gyOd9<ATmTrTmR4aFF4.iRv_gUlM&DRc/v#u#I/1„U":xctH;GLH3t<He/8,;v\j7)V+gQ_nY[vViinwKA:[O)X;oChT\M)T-W'Uk1:S]Y„U"Ss0G2fBf3zuk]T31%)<v,FLj=73Zf=:B1xEALL52okmW+#Bds:,V;pOOZ/='$f$„U"7YOXLlZ(:)VZ\]);eKDGjYaaWp8m=kEo0uA4o\bINRi9l-6>;qoB^_8n,sYr;OI„U"65\&kr,FFL=cs/SEn-ZO0-C/g63c?bK'B%Q0<jFL:/Fz4o)a?Il(-)3VBDoxhUv„U"h#;^M&,Z>e%eIE4U&[bI-3U/UBFj?nN<b6tT'<,UL$zHB>vN(#jKV<ZIZ2b11P>„U"]se5/ky6DjF3l46CoRp^#r<OiN7lRm(=\TI,n[wk-hW;*MO5&arO0B'Ae+3RP7_„U"<icM?2V\B+=&YyhvKb00pP/58#qowjkGMQ$Yhmg=iITS4naT=zb[?C6QS$v]R=^„U"5y3ocpLiA03jjkSawaQd+,k?%GdI\6Z'o%#VV%)fbcO0W)a-9%$,KMQihc7$L's„U"\Y1JWU+$eNB5J(:uBRbiW,pJV:4\3F6jq\NwHmH.)T.s^)Dq,kA0Dd*P6hJKV:Z„U"L1R8Gdt8>tBx&%up()%9%%%d-%_*oqC%w7OgR'.%%H*%%%/%%%%gj%shmr%Sgfx„U"S<yV=]So57Fl[BuNg$Ou,X[YY1oCI&T:sUO+fYM^Af0CadbV:-n-?Y'.wCp43Uh„U",#JQ9.Gh656olt_60oJ2[dcT:n0gXPI&X6'MZY$23QpSyRlFga<gcxOeT<JDj:9„U"'lp*'%y/FX.]X(_h+(9::[lNA9(8c:N5-(c4h3$/w0Rwd:knqN$?I#P#WUn8wi6„U"k/mb0u,hF7:7YxMUW?QGX3[jM%;n)n?#eT?O$-66DIMsQjV/+R6PHop,kwfVo21„U"XgC$Q<?>;zGGEK>'q?8AAC1(0]EJ7;0u,DMO<El?*6VL(x7nfqW,oT0NM:]<v5h„U":h]9$OF>R?m]K-JYL;)n;LJ'zXdtiDuhXY>[w=sx'#<xWWQJ3cia:CM,eaW<G%-„U";jH;/NdL-Xg1>eZ'3.r/:vHm-752d_%'>%;57)e%M&KsGLf?d4l^dVntj%F>W$B„U"/BW=%o,RBr)C)K&Po,NgBo;2;?eaq94Aj'Z#Y0o%Vj.B9nia/F;KeU25:?&EWa>„U"G>OCEv+Pg(e[AaKE)MAb38wLw>PD&>*H?<$p0IWr5^z0u8eq[cKkmsib>>q0cD2„U"X3GtW[Wi\P=[DlFO#,TUIcr\#9LY2#T=u/p;KVtM^ciM1ONHcR/be9CQ6'8^w%+„U"bOr?CCJX+=Y+25=G+D7NO$47nK3O<&kB+]\\mxdgs)H(nZu0%68Ap>-1CrS(&kt„U"zNC$&(03-+Ry;?f$_;dY$_g:KJ,M;tmkNTiO;Y689)D3Uwg:_<\Y6UnAhbm,(HQ„U"m9B=mbpi>_nvqG8m6;\mbJ)Vb<]w2fDe-F(<p9M1VJUS/57HAGmirtM+392_Yy)„U"$_fPOK.S(lod:HGx*tPv_&<Y.7/9SF9Ze5_(sjG+x+&dWRVv<ob6_3>$j,#/e#P„U"V7zX'd.V*TwDea9X*x<R6=Hmx5pw%'up(%)9%%[%-%TCv=EDuaJ,S%(%%?%,%%1„U"%%%%w%xRnk%xugS#gfx<OzX>j.m5MlT[D1v46.3$8X84wqD9Md5XQ?J-.**i6bn„U"<VD2J#''%*?$Y>vH>J5FXz\ZDa4mUd7r67RtDW>r9^IlP,=].M/qe(OWC(9D2V0„U"C1B=$uHZruqj<I?/sLWpTD2(RJ^*2-+<7arvOC/;;z$jBJW'FgcVth6LWnTfV)%„U"JtAcFggG^LsA=xbYA,3>%N9TLhM24*PX4L^1<ZU,CSK+#P$]Z<SO;4Sqo9Cunuk„U"W/58HqBE/mkm<N;gez[M-81>=&<6nYOaPF/P3HZr:UZT:^4s-#Gny=5'g79$kOZ„U"07i[]C.oy*RqNRo'UN)3CAHO:EMEm#-G>Xa9;9GM?O-an%j:t59EiF1gR&SoMtp„U"B?R13iX^XR%Ua=Wr158,J\r2Gn7bU7&=9-RLDBquX:(LmgbPPr$vMzm)Y:ZWFkU„U"OQ[uGxE>FmPzXN\)APQ6uK_nJSisg3$c-78B:BPav,LE/Q*W&.JD-eQSRD6Q,G1„U"6:\lV#>:CEjGE;h&MTdomCJ8_Pt3BIb'JpTe9F1]5$1oVdrO3&:iO;),XL<:;^N„U"nV$A;k8%bw8DV/rK(D.vXalecZPrkX3)h?CM--,ppR&;8*VasrWTOACCXI2r1rW„U"kW*Mc4?jXEZCjA8b<d:m_PPDrQhim&,c^c-56DJ=5C(UUqqDt+>r$x*4OiTsCrE„U"7')yLx#5LP4ciZgE;5hFNuJp;DxfTXJrVA-F84Z,?hqi.l;IFw-6HN/Gfe_RQhm„U"CI:;2Zgx9=Ju91L0W:pe:wT3XjqW;1im&a=uEOf9]Zja-7ueVc#LrXqSD-iU-qU„U"EmBVSq+m%::&XOPm4V8SiTI8Q1;uN&D29Gc_=HC7)eB4QiGzpTnYH#bUGtSH5'H„U"(X>>^2Y2)aW^[^o=#.1*=O*1WHdmL\);HuOY]GGH\eOa7dBU/ZB^)podDnfg&4F„U"S$tFUS9kZ[:\>FQ3.5kcqDr#0U;GXQGS6t6YZOvTGw.aO=yi.QADK:.:0hI)+\H„U"..]rAM8+>wXUUqn06lY%ts]U1d2jBB<vVj*oj*Tu$:;A2_+1cLUVKM$9j9/AD4s„U"V()TgpE->\-W]inC3F1cj,sgO(LL&SsmExs;b,q1l)jKe\gsukyv_e'qZnwW9[n„U"tcK=Rj+tKpqEF7=pgmA^rnLxswMLJ-nR?20&6ZA<jSTgOOD)0x2lJblbY5vii0%„U"bfs;'a/y'15^1b=Z/;+Fu23\.VbllJ2j3H*P#WaCXCGY<tVPoaSu\%dup(%)9%%„U"#%-%QCj4DcgKe-h[%%%)%&%%1%%%%f%mtws%RgqS#nkx<k$F9<dU5Shs'6<UDiO„U"R3r#P10pg*aNoC0QBdK;%^\qQbqne\(ug8iccOGFo>V5TEfi^p=t0Y#&X%pvm&0„U"&[*E^fyz*5\t;Ih's%rE[9qAbbVf0P*b.w99hM'aj_SdL\BVVhuKP_<jCwd_C:O„U"$Nw;ED5S_vQA2ruuCKlj._Yg\'pLk<NXpjj=lKPiBE[C2w#q?2K]pCzX^u/=+Ll„U"A'4542,pZ*knp>TbeU8_l5fbVO8(:L3XON5T]18;j/JYNcVhM?sOfSuvH?3OFCn„U"%UwaCRcR,ZmF<eB63b.7X=/]s'q&up%()9%%%%-%/jj4DTpw;b'?%%%&d&%%%.%„U"%%%gqfy%ySnk1xD_r,9<U5akp'VD0Enpm[X+]#]<-3j<[-9)u98UIW=bLV=mB[G„U"cIj&ZXLHj4to8?9OF>Y>A'O)8:%dKF]q)P'9u:MXLHmad&ea3mQ[^7.T8K;R?nP„U"D=O5OG]cA+u+0h+<pYLd+g-9qLXo=u77*cBzT>IM>A?IGqQx(Ave1ea=k%p$x[3„U"<v2DnP)gewk:a.^*/(\f]r8KDb(BsamNPaUk_;NHLPBb.j;UT_)$HG[D/L<5M#.„U"Z/-XV(4:Cu%p()9%%%%-I%^P1aDV[s*m]%%%%'&%%%0%%%%hqz%xyjw%Snkx,BG„U"NR[SnR[o^W_^7wUIX[zuuI%v%W1'91=2\f&.a.M=Qn[(bH)CC2x2[Et<?,OJ/-(„U"&3bK<5+3]BnE.o9dVMX)SZ(j_Os6AeMpo,+9M:WLwBAaAA7pHT2aVQ)D,7p[wX:„U"KC?Z9Q2QDP'U/4rH7/frn&xjJ/3:xhN&x^/?MUeeuki5+5&+%up%()9%%%%-%&^„U"aVEF]eOG%Q&%%%V'%%%0%%%%infr%fsyS#nkxT\$vt<mE5#Xanq3p/uKee2P:HY„U"WR5o1NE9K6X;0>]jJ%DHqMB(.2*,1Gj4iR\HwpdgufuW#AeX0keP9TO4?gPmI'2„U"q:'E60g24l?kr_SS]?;_QHkTn^E#^h/l2fuvqs/d%2A%Y+T+kPHR7g;_QW<(o^k„U"he1?L9cYWf6T\;#O0<ddNFj5N9.-cTD*cqBevwFsIvTDD'zLR-su?/Hfaj]/-uZ„U"gJifts*_cO+L:(Au_v)<;L.<^k%2$?\Q)i8LckT+cOS6<p0olGsnVrktOb%y;E2„U"w]r:Njr[?eYvPV\viHbW)_%1h9p/B4_Y?Vzk,F'm\FBcTIYf5?$4P)/mcg8SS/F„U"E::mvF5dS=bUihUBqZ*LVFS>;A-RDn+]t+u%p()9%%%%-L%3N1CDlM^,ZD%%+%f„U"%%%%0%%%%iwf%hmjs%Snkx&BNoqoGmF\o^W[^=WI,U%WVU\]JvUI+X+UY9*UKv'„U"I*W2_\[rEJC9OqC;5KU&e;ev%hb00%HHp(')'hh#(X(B/_SB0JB8B2&_n+eDHBH„U"_Mgx$PDtT*'hpXh*DTTJg)8;3)^;/hFdRq\FAOKN'Ka>'iMi*iQ'f\YWmZW$^0K„U"Z&%&z\*w1EupFLTfXQ,Q3gvAM.Tfqv*)'Cp1n9Jug)2\$gu)#Suep%QdtF[MdN.„U"&wiF]%ZXJZmlf<IHKKyb&f0%u%p()9%%%%-L%rS14Dh6](Fe%%%%=&%%%0%%%%k„U"fs%yfxV%Snkx8BpEP7nQGq[rtrC'Ennz=U]^WcZ^WI9,uIv7uUIX7)w359CeH1#„U"q?G$^kuE.A5-j?.>8WaIW.%:PQ>+W05VaB+5.k5'.+-/eu;13L*a)WCQWYS/aen„U"=AiMMwgPsv_OIjAHo3*d3LIes5(OsZ;[N)*d['*9CHkl9QEkbwZ.o9Qx#XxwB%9„U"Y1R#RrZH'2%up%()9%%%%-%2cT1DcQr-6&^%%%%*&%%%0%%%%kfsy%fxWS#nkxB„U"+pEPn+QGqrmtrCE%nnzUc[^W_9^WIX[zuuI[vuUI%X%X57Yi;5NAVWQpm2[.1=q„U"7V[[Z+kDC01C.?rZ.(mZ&i/RN_WHK,%a*?I+e7\(&u/&M8QHCGQ%ZY^kC40ODn7„U"QnFy(m:Qw7-/O*d/Mc^]$N)^CLt;dIM)v5;us_MJ7=))Vi9kA%&%up%()9%%%%-„U"%1QU1DlD:yt'&%%%%a&%%%-%%%%kfws%Snkxq4^:CB;U5SrhP5<'UyUJPj?a-dj„U"/-TdLu[x\.-R=UGGej(#j*jpThVFtKEgwg9V*i44Nsg#/P*C_pPR7%z<yR>qrFg„U"S'502Jzry')Hk6O;y[1AM1_luECsNf2.2M.*fsmsT[1\'Tlc?MW%4fj9)jB>;S&„U":b+vkoffb'/nThhqZtB3vQPCc?i;K^dA*JEO2\?D,-?\R#.,lhTce/rD6]TmF>%„U"8up(%)9%%[%-%)[aVE-mO5#I%%%%S%&%%.%%%%k%jijw%Snkx(b\btB<U5U8Fpw„U"4B0:I1ERVda^6x2cc;IEo4i2u:8$P23lEuB'+3^;dPIXJKLR\cs^e_'-GyJ?G\Q„U"oP%;\2[172c(y)JZqfm>BqNECi7?'<_p_sE'3>U$pnNW3EF\T5/^:>-KQ9W1,(k„U"YA9<aT88SN#/op0)/l21bB8m*k>49Tn6_<jOL:pz:]O(pPS<4ohcprl#mXagMu#„U"^KbRKZLsa$+l8Mw)pJn90X/h7Ku*su]S8#OnpkksPDbM2g4rVDtP.\NM&%up()%„U"9%%%#-%9/e_D+94.pl%%%%W&%%%/%%%%kn%hmyj%Snkx>\I:/&QUA+?i4Y$AK\2„U"iZEbKl10pzc>POCfsN%NV1\>jgRgBS/=Dtwd2E'tsN6$WrtL(N<>CflC,<;E4U(„U"ieO[Re8s:.&3XgRL3lY\jxGEC%a.hG5REBZo4YHhPb.1AMAO_%k;,b2UlB9VmQ6„U"DR,6?-NL5+E#yFVfOmTD\sv\=1;G\(lc*bS;o$cQ)>WxFc1v;0'Xup(%)9%%[%-„U"%R)#3DfDkcHb[%%%n%%%%1%%%%k%tsyf%jsjS#nkxBHDHP8oBp^^=W_^W'IXuu'„U"Ivu%<J?Ce'H7nuBP1O7L1%>0[/7XI1XQwU7'p:).REQ;6acp/8DvMP_oz\Z-^KZ„U"'o4lPQ%Ai>>(NOMhC(-So\Z99M#:WwB2AaA7:pH2aNVQD,%7pwXF:K?ZL9QQDAP„U"'/4*rH/f0rnxjRJ/:x/hNx^I/?Ueheui5&+%up%()9%%%%-%._yQDIDk<$'8%%%„U"&z&%%%1%%%%kzjs%kjhp%Snkx;d\:s'<U5i<heu4&BPmYJ)$#*BXpI=bwZ,UG5T„U"yD^88#YoUd#=eW8V)qVlJega<Lhq^K1)&%sPO<C\>8[e*Fb-(]]N6&,(>:tb*Xe„U"w:d^J3OyyfR9hK$xnWOr^.]5\jrzWBKD9(t3C]3BXIVxVc]qma*cEtcHIj-rhAa„U"IJU#-4R]n1-3*:eTDDrz)$D<=rP[\,M(wK1bPE<m4Xi<$edHC[pBgvPeHTAV]=x„U"^&P]iQ<g-.s'u%p()9%%%%-L%2k1.DDta(W$%%%%Q&%%%0%%%%lfq(f'nj%Snkx„U",<Dr/B;U9TEJHEJB1X:K7FNvnE$q]<&&uVgGo-uYg_DxgE=cI9pF>k:$\mxP/Ft„U":]0D^bg+<Q(w)wt9?TXoA.ksAY(8Wp%*%Jj>i7Cigj'rLMF<[aO'm.fSxLOf4q>„U"L.A]PzY=RkV*>G6G#e3EV;Q='(.rp<gPt]Ao>T5GiJ?JRZb/yE'ZB6%Dup(%)9%„U"%[%-%OAYiEXaN^XL#%%%6%&%%/%%%%l%fwyj%sSnk1x<_V,:<U5hTFPw?<TKg/3„U"AzVSGsdaqtc1-K,A.;I8lQZuUEv$/d:FUpyRgV?4pbeU$262Wn9QbAdgpPaYJ_#„U".?fse.5x,lJJ#:m26p=g*(6dwWp?eDDkvXZsjshFU*twvVu,raqI)g3AZQw(&an„U"V>-Z%u?3'>u#iI[Ke$IgPW6R.;S[<AO.[TPN;Mtm\vCCvDmD,K$Z2RzXb+Oc#?H„U"i)NY$fr9=n&t<Y52]rpli;6+a=&L?OLj\;FXS[]Q8o>ysAfRp=SudT%up()%9%%„U"%#-%>b7iET:7&ec%.%%#&%%%.%%%%lw%zsiS%nkxzauDs<RU55*9kde2Y_).jbF„U"g5M#0g2q/6<jK,9cm#VVmrBjq;rqB)X$m?R.5#m$dt<esCGoPet8a(Gd'u4HUQg„U"JllO.S'iK4)isj6)HyHw/diY__,R<OXdAP8)gczr,$$?N>zCkW6qXI^MUC$/YTR„U"3$IUh)Reh9yu5Hcf+/:lsng/SG'8oV5d)j=%$$l:,Osqi=\>PFb)NT%<ih%Y'MS„U"l.'VT04w%rZLm)4Bp](Z-'0=hO:yd]uk/#:x?<5O;DBviZm^GQ<eR2MG#KEQW?>„U",3'Fjl?NEw=csJpj%.up(%)9%%%%-%T_lEDfq1ZMC[%%%A%&%%0%%%%p%thmR%v„U"zSn.kx\t3D=RUj55*kadER&%yH-/F6p)x$Ct/v%&,[VYY:C1rKBx5^YP;Jao&44„U"j$dHQefsf%GLN;U3)BTv<4](IB>o/SRfA#GdgdS9eC=>76jQf\KVBxX$:kd#rDN„U"_FTtYh:<&MsLjnkZg-h5v\;H6hCXk<xq'4S?[k0)e[5bSn*4WFV\S<QC]^0Rw0M„U"G0F1t,PQ$Tc^DtWaZS7dt:]hLa;#D=2oge*e$xzGa>hc)uzlN_W*tOos#^NX)Qk„U"h%?Nc%%up()%9%%%I-%/_/EDm[<^A;%.%%]&%%%-%%%%pt%hmSn.kx\s3:]QUa9„U"5\b+dErr:QpDwcZ'K?9Dko,&yypQLYHqmHvljYf4V+/5VPHXn>W,nR,P/&93>Gc„U"%^hAJ(nQ^_s5\r_J>MWPO.xBM5sxFObt?sRqbqT,dqRQktZ]Yq$DM^>:pK4DO$#„U"hl(Xe=WVV]+vUg*>(_w].OPioF<+BCPBdQoL:a<r8b?3?'5VjD:(a\=w0>u;jfL„U"(Zj>6)lJh#R/xd$?0OlLal#5caK?$uSw]Tpk'JR:Ykv%%up()%9%%%R-%%9A3D,„U"m;&EG%.%%-&%%%0%%%%pt%wfqq%jSnkgx4]:+o=U5kUhT5c<Uy);0aEq^_F6=-T„U"o.OUk(a=np9h732bCPqQbD#fHd._MD(vHaS'p'a(m.,_7Sla*JB/I]3XnY+YeAZ„U"J492/It=cb6jYT^n3[-opd&<S6,5imq=-CEo&8EDG$cD3hdwYFC:j0pjrT6+0#$„U"&P?Wg+pp+sC]d,ra+,#ovYdPBFnu[\Z+sBvnwoBhi[g_U2gKYWLeod[2gW^Henk„U"u&kZi\JTLEQ*%.]D:sD)*(\=uDr6E\?Dyr*:Ddu%p()9%%%%-L%ZEF=D-f.,kI%„U"%(%.'%%%/%%%%rns.pt&S#nkxdOu:]Q7U56\9bdErar/)QV<_4a\GUV).dufO)s„U"TKhPd,N=I(7Pgu%oIBtJlW5k8p4&OqTwa.JMc:)iaZJEYJFVUT?NVq8LBtn-5kG„END SUB„SUB V2„U"TOfoccF^8u6-vf[Yx,-P(Ct3aaDpd0,L1ID?8vvTkX?*5nn;6q7n\>4Ws8X,s$a„U"*dTxu[c'gQE6DG;jpXF8Y.j&27YPO_[qnyEFQFSBM#+<T-Pmp]Viu:;NM2_iriC„U"0hQB_x0>=(V.vGH**w:0TnM0O4/w3+rBBu%p()9%%%%-L%Ql11DhbW*Ue%%%%Z&„U"%%%1%%%%wjp%Rgfz%rSnkgxL^:+/;U5jihPvPV2x/#ow?8f(GQPK]0)[FuM;1QL„U"4N=;;yOGNg0V(ooR,Stm64NW6DQe'woQHC+$-/5\2Yimj6L'#+EpRr\r7u>*[c]„U".7D/3ow(]h(mA?N%'Wi/=<Lu#U=KqPTQ+H)MoAt>SWBoUuhCGOa]VB-iZ0O7q<o„U"TCo33?O:lJ:w1;T)6+Ho%u%p()9%%%%-O%sm1^DgAs+'B%%%%h&%%%1%%%%xhm%„U"sjhp%jSnk.xr\V,><E5_TFpuYV0.dV9CY/M/^yEN.VEDMaz;Ts7B:V-tHpAjGrU„U"4;F^hBNv#[KCaBAVB^OO79]kK\F22B-UvbMU7mxO#'2jm7_<VLdNkRw=$R%>\ih„U"Fw*3&EFwETlPE\2A:T2yDg'GH&yJi4rs;q):933#aLxP3O)ZVy?2m8?-<Gqy^07„U"0W4XLtKxFa]s_#qK6iCf+(H.b#tL3GP%Wjfou>HP]=FIu.q..4<q,gJ1cvG31a2„U"XL,C+Ij'n4up%()9%%%%-%&vaVE$-+3T'O%%%%c&%%%/%%%%xhms%zwSn#kxb]%„U"ft(F:5ThIWuV2x/Xpe6[MArS)i-a9<\L0BHT?2jpu%Hw2B6xP8vThbLcWVB,i+9„U"-.wezad?2^Io-/6/Fq9F9bKshhs1Ga&/A&0n5Rp[1t;Z4f4/j5VD'x/\8*Q&2RX„U"_hcF[OU9jDQ<*Y)_87k-jE'oegGuVV5>xd9+=$O3k'siQ<2,fg/,Y9\L<cm[A9P„U"_g/do\c0i3LA8OJgBQLY.lM.0I2hxj60,Qr*ws)xUOcZlfk\t\Scs.Mpsv'$r+j„U"')q,>[gK^zY.%up()%9%%%I-%Fx81D^V0$si%%%%1&%%%0%%%%xn%jwuR&%Snk%„U"x0pR&yoRO#OnR%+-GqR=OAEPZGGMD7NoFqsrG_^=W_^w+UIXzauIvIaZIX)+)K/„U"u%?I1GC2_m2FInUD93Mc2EjyluG0_HbT?K5+FElqpf_?RM+#b>O[eq[^'^Wv%L&„U"DTq0u7-SOt0/,kf=aMpqT-?LGTo/2,oOg2(MmgCuMw9CvXg?D95o9M]QUp2ttxK„U"%T<%u%p()9%%%%-L%)x1:Ds(P(n[%%%%&&%%%.%%%%xnj%wuSn[kx0G[qROAoEP„U"GG*MDNo]FqrGc_^W_]^wUI[XzuI7v%K+[E?ibAO*6;(-8qeB.Fny.vn28J-S,oC„U"YW,qV\P-$8mF=y(x-Sh&o^//'c/?>\x^^3Pi^xh:4H2aNVQD,%7pwXF:K?ZL9QQ„U"DAP'/4*rH/f0rnxjRJ/:x/hNx^I/?Ueheui5&+%up%()9%%%%-%2'y1D>EXq,'K„U"%%%%v&%%%1%%%%xunw%fqjs%SnkxRruD9]=U15a,u43r.T=As4Bk6U9IVK<:e35„U"1?EfYQm7N-6BF0Z)f0k?g4m>DqE-T>F2B2ON7Wq]pUpHJ:UyQn%[KyJBD-5K4FZ„U"+kA4>*h33,XN93f(hOYaumpxp;_%,W=h^oguXM0.1/0C;coqXXxfR=og\JQ=Ire„U"_]#h,PNUcHQ9CTa(ok=DQXCRFKj&;eCxba3YVy\bybD9[Vt%tPLt-M?Uiw[st($„U"6jRiDX'YYtO?9hn'bvdlTqEgTk3R%G36.KZ#'w%up%()9%%%%-%3Yz1DJrFBl&I„U"%%%%7&%%%/%%%%xyjn%sjSn.kxBo+qGSS=nFEpc^^WZ]^wUI7XzIv%%w+e./kiG„U"K*Fs$7Nc.kQQMi/eyZP,%2nU<Y(&'P/mF_(Stqm[39yOC%Vv%'<nqu7\-St02/,„U"fi\oD:KC?Z9Q2QDP'U/4rH7/frn&xjJ/3:xhN&x^/?MUeeu5i5+%%up()%9%%%I„U"-%O9e3DaP97z2%%%%i'%%%0%%%%yj%uunh%mSnkgxl^:*GQU5bShrs(3Jx8%pM)„U"GnFh[F1u.oe*xnkMMsomL/B<1ro])o)UXlefh8T%/WLu89JEv,v2ZYa(OJYJ0a=„U";CI$qO_C$wbsZGfkE)XeFb47yA#dpu=TVTPv'BTV0PDg^9,PDkmMUU?\T7Ku-dJ„U"':Y^JW\fi;;oc?eUO<w_mz2^F.;:5bVk<t>,4LeKBQN:c*Y/l^.M2NtotsZWX?A„U"S+fR&SKhty0D8bISv'k'up%()9%%%%-%5Z'1Dd=Ry#'5%%%%L&%%%.%%%))&jn%„U"lSnk(xZOtfFq&A]FQvi-GDTSsmF\^sW_^K+ZIXV:X&Iv7uUIX%Uw%WJOGUU'?u6„U"h#xE(w#if&T=[[^',a?;u8\K?/KA1,gI9upx(>g[ZRW'L5)/\KK/U54+JeUUP%J„U"yHy/p.c[dZURSL1EzPF.MKo'<E1pF=<'73/pP'(-wPMq3s_]&s<Z'=bbb;Q%da'„U"Maix_3O's5+9%09muMDH7x-Ct%oROv7-sFqanFvI=U--Y?N]^'%%up(%)9%%#%-„U"%_-*qC5&P+P,[)%%?%,%%+%%%%n%kxSuCg<z,,>Sm9tL0]x,?dG&Efu#y_5zkTA„U"dmUx78UAKOo0>2SKFLg&#YC\b_0ovj.tRpBW>#Y.9C/cuGE2pKUXf=[Q[-mL^V7„U"ki7j.qe-\LMh1H^-.YTnun.1Laqae#.8IU+y]$U73^W'9.5)<^w(f3up]M+:-;o„U"yS623RY3C3:x91p$c>B:Ejh\2f$)?xUY/0rwxO,rX2cZ9b#^=DGY?bdibX*dSnW„U"Cp/]hE9;au*rGW#gS/mEXS<J<.7Wu$d79PR[bw=6#AZI'C6&9.drgGN0pbOvdY*„U"8r\UNijFG5/b2EL(;aT'0nlu[In_WgD&0TyzLD#.e]4:dHWee*%7U<\ZA^[l3\R„U"v,wPUEO>f4U_Z-o<*a9o$b9p];n?kM5IhS/01va&mLi(C&R:?tAtTH+(WDlebUT„U"YfF$)0[0va8\t(<K4=URtb;.n]:Z5%wbH(5q1mnY8Hu*4V)1WlY0,^Twj6F>-V%„U"6XjTFN1L^'>F)0UUu_p^AK_cnY5D'd&A=K9>^Dqi4Xj-:)qlCmv$Lo3hneFYNE%„U"CPxMc;0eBG](N4>#VWm:i*z/n%xhS6R;G<q#E'nQ+z+y7LZ2ji?oaocV$3f/TR3„U"kEkOf/NR3CfoiZjWu%\n?_S*.C.[wb,)_g#752Ek'tU_9bWMtrd][y_ob:-4XBW„U"h5/]#>o=yZ.Y[<_sP'F-,:2aA)cy5;T)2Yfbq^ZPFg,Y33q/M/+/GGL2909d2+4„U"jbS+gqGPs.80XYSqUrfSn-0u(LOU)J#<qD:?aYgA5?p6DnWcJVXRZn&A7mN%kJk„U"Vx>iq=Y;Bp3O;D(XBNY<XlWk=2Z[lJe]1kJF5x5sP;7G#l%''ePyAhNx<l+^cNU„U"uqmbE-3_g;'r^)9uu:M7Jf1X2C?L00R6r<SeCJX7A2s?u+kIZsjHq%([ivye+$$„U"U[sFC.FoCbfM+[1/Wb(:gIj=Ogd,nD,h2xKXK=FNuKNufnEX5-??^rrV#?Ymm90„U"3<'RMXt%Aq,z.llk7Z5EYGu1eH4F[G-L^cqy_Dtp,c?Nlf2-JBnnaArLfFAbL#G„U"xn=OEfs-;(J&Q4]qV*5dsJxU)=7fO1N^plp>[BEduR0]QetW%2XE9%9UYsHU;r$„U"510il]_DLH3MS2+(3hl7r>FI^G[NEb[*7FP9JEq<RFwgEcASD+/F<;N*\T1SvPL„U"KM^yU&k#bNGAOACdxw[a(,NBRIo\jvKZ'I*8EGQLJ*;<?s[sH)k<KA,lVZhU_T+„U".XHdGj,WZZ?7RFr<]Up*N\gMoFvP6UVOn*k#w5VU-3?L)L8gBMi:H.t#P9][wD%„U"up()%9%%%d-%_*0qCQ(9f99(.%%,,%%%+%%%%nk%xSvgA<yv>BSm5Mal[dEi2$O„U"ohaRy2>yJn&(7b_FbUSim?s/?(V;2O7E6=E>bds8gs,XE'72f;4o)$tFnKXXEA=„U"P9:=)s'EF=?<.+,FkPEW7V.:Fh733s#?rMu0xm>[EN:0U-,=-E+wR<Z6'ECUwJ9„U"/R/9uave-+dkj]vZK]SUP^kS/(5rqVSr8QN-p1e3dOz0mFjh(CUdMu?1.Fwi9,f„U"A#XfJF=7h9f9.Zi'u8kE5BHrilv9R%1.RCeS'Kv=Q??cXsvq<n$R+n4uT=Lf>+m„U"Vb+TgWY6*TCE>Q\D_DCR10oW9(HX4>pDdnmiSY*\q/]JsbkC\$l0UkY2iW-G_V?„U"Q,?km3^(81g?:$/H+I?780'].NU)Eb_PWWn[k2=hFiDfY;W8q,)7Z#\.[JzHZ1B„U"Ge85U\wGttsWmm3^5b]:FW1kpY)#0B4KW6'M&mevBL&i7I#3J75ZT(ycodLn3ee„U">c8[Ap>s.QX:)qt(Fd-x2$/e6/PIp/JhPXif*z.S+96hIjn6gPPZ--/W6'MZD\,„U"yKUH$7a;sq,BGosJK\UCq#S+)T](0:plRRB*C6-K$o#lNBpTe]p%P1tfo5S7)/5„U"=S)??AI5=t+<?k\pW0M*Cdncq<UHU0664fTBu3c]im?M*;c?1HCe>4bPi8nXXK2„U"xL-hiQlS8Fus,$I,V6px<'C?yxWRJX;0-kEc(odgq7>z31UnG<0gNP5\4E9ejuQ„U"jHoab(M9dQ->?LXq<&VVllEeDmkNuE,G0Sw]n+rTFZao3hhL&vp$UL(ht&oYvW(„U"9$]c8o#hiVqV8iY#lINxBl(xadT[Q;U]HYJK25(%uiA2Zc[rh2T-z2jX>T0v&Oi„U";U4:-UJtusPuBBuN._Q$tf?7pxb[H&b(em.F$Yz2aD34,72*)g8p>x]+ymp\?ts„U"lY=)8R7l:HE=obdDodBHrc.t/#RJN%<9c/t>Uom#A':/b$xyF2lMpK6sXQN[$]q„U"V&0$i4<;72*bxYcHADO:.?wmieO$QeWWe+8T-&A1ntn1VG$f?dBR$gG^G_b6A_0„U"$:rcs8JPnWUu&d8;ogs%0Q67=a$tdgNvFI%X8no-Jw_/E?GkhlqyA*rlKj[SPl0„U"jJ>W76pp$vc3VIotvIWkpIQ6&DH%L6c,x1TnyQ0TpB=AE'$sY#*&XM0%a^=ZhsI„U"r<3UEDRpW7Xvp:E9\lP[[GkViGVt^v,/j]\*bWVH'><J2qd%up&'%9%9%%%%-%/„U"sv=EZTBU0&B4%%%zE%%%,%%%%%%%%%&%E%%%%%%%%%nk#xSy'%yup&%'9%9%%%%„U"-p%_*q=C%wO+gR'%(%H*%%%/%%%%%%%%%&%E#%%%g%4%%g%jshm%rSgf%xup&%'„U"9%9%%%%-F%Tv=pEDaJ-,S(%%%?,%%%1%%%%%%%%%&%E#%%%h%7%%w%xRnk%xugS„U"%gfxu%p&'9%%9%%#%-%QCj4DcgKe-h[%%%)%&%%1%%%%%%%%%&%%E%%(%l;%%%f„U"mt%wsRg%qSnk%xup&%'9%9%%%%-C%jj4aDpw;,b?%%(%d&%%%.%%%%%%%%%&%E[„U"%%%/%<%%g%qfyy%Snkx%up&'%9%9%%%%-%1^P1DoV[sm&]%%%%'&%%%0%%%%%%%„U"%%&%E%.%%r=%%%hq%zxyj%wSnk%xup&%'9%9%%%%-(%^aV7E]eO&GQ&%%%V'%%%„U"0%%%%%%%%%&%E#%%%)%>%%i%nfrf%sySn%kxup%&'9%%9%%%I-%3N/1DlM;^ZD%„U"7%%f%%%%0%%%%%%%%%&%%E%%%'(?%%%iwfh%mjsS%nkxu%p&'9%%9%%#%-%r_S1„U"DhA6]Fe%%%%=%&%%0%%%%%%%%%&%%E%%(%r#%%%kfs%yfxV%Snkx%up&'%9%9%%„U"%%-%2cT1DcQr-6&^%%%%*&%%%0%%%%%%%%%&%E%.%%1A%%%kf%syfx%WSnk%xup„U"&%'9%9%%%%-I%QU1XDD:y-t&%%%%a&%%%-%%%%%%%%%&%E%%%%?%B%%k%fwsS%n„U"kxu%p&'9%%9%%[%-%)[aVE-mO5#I%%%%S%&%%.%%%%%%%%%&%%E%%+%fB%%%kji„U"%jwSn%kxup%&'9%%9%%%#-%9/e_D+94.pl%%%%W&%%%/%%%%%%%%%&%%E%%%']C„U"%%%knhm%yjSn%kxup%&'9%%9%%%R-%R#A3Dfk/cHb%7%%n%%%%1%%%%%%%%%&%%„U"E%%%&xD%%%ktsy%fjsj%Snkx%up&'%9%9%%%%-%._yQDIDk<$'8%%%&z&%%%1%%„U"%%%%%%%&%E%.%%5E%%%kz%jskj%hpSn%kxup%&'9%%9%%%I-%2kA1DDt.aW$%%%„U"%Q&%%%0%%%%%%%%%&%%E%%%%tF%%%lfqf&'njS%nkxu%p&'9%%9%%[%-%OAYiEX„U"aN^XL#%%%6%&%%/%%%%%%%%%&%%E%%%%.G%%%lfw%yjsS%nkxu%p&'9%%9%%%%-„U"%>\biET[:&ec#%%%#%&%%.%%%%%%%%%&%%E%%%%)H%%%lwz%siSn%kxup%&'9%%„U"9%%%#-%TlSEDf1>ZMC%7%%A&%%%0%%%%%%%%%&%%E%%%%:I%%%pthm%RvzS%nkx„U"u%p&'9%%9%%#%-%/D_EDmj[^A;#%%%]%&%%-%%%%%%%%%&%%E%%%%-J%%%pth%m„U"Snk%xup&%'9%9%%%%-O%%93ID,m&,EG%%(%-&%%%0%%%%%%%%%&%E[%%%i%J%%p„U"%twfq%qjSn%kxup%&'9%%9%%%I-%ZEnFD-f:.kI%.%%.'%%%/%%%%%%%%%&%%E%„U"%%'$K%%%rnsp(t&Sn%kxup%&'9%%9%%%I-%QlJ1Dhb4WUe%%%%Z&%%%1%%%%%%%„U"%%&%%E%%%'XL%%%wjpR%gfzr%Snkx%up&'%9%9%%%%-%3sm1D8gAs''B%%%%h&%„U"%%1%%%%%%%%%&%E%.%%nM%%%xh%msjh%pjSn%kxup%&'9%%9%%%.-%vaRVE-+=3„U"TO%%%%c&%%%/%%%%%%%%%&%%E%%%&aN%%%xhms%zwSn%kxup%&'9%%9%%%I-%Fx„U"81D^V0$si%%%%1&%%%0%%%%%%%%%&%%E%%%&_O%%%xnjw.uR%S%nkxu%p&'9%%9„U"%%#%-%)Dx1DsB(Pn[%%%%&%&%%.%%%%%%%%%&%%E%%%%xP%%%xnj%wuSn%kxup%„U"&'9%%9%%%I-%'ye1DEX9q,K%%%%v&%%%1%%%%%%%%%&%%E%%%%+Q%%%xunw%fqj„U"s%Snkx%up&'%9%9%%%%-%3Yz1DJrFBl&I%%%%7&%%%/%%%%%%%%%&%E%%%%'R%%„U"%xy%jnsj%Snkx%up&'%9%9%%%%-%2O93D>aP7z'2%%%%i'%%%0%%%%%%%%%&%E%„U".%%sR%%%yj%uunh%mSnk%xup&%'9%9%%%%-U%Z'1#D=Ry-#5%%%%L&%%%.%%%%%„U"%%%%&%E#%%%U#S%%)&&jnl%Snkx%up&'%9%9%%%%-%>_*qC(5P+P%,)%%'?,%%%„U"+%%%%%%%%%&%E%.%%8T%%%nk%xSug%up&'%9%9%%%%-%>_*qC8Q(f9'9(%%&,,%„U"%%+%%%%%%%%%&%E%.%%cX%%%nk%xSvg%up*+%%%%%%F%F%%a,%%&G\%%%%%„END SUB„V2„CLOSE:IF S=125AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„The ABC Programmer             VECTOR BALL ELLIPSE            Converted from PASCAL Code     05-26-96 (12:15)       QB, QBasic, PDS        91   3168     VECTBALL.BAS'====================================================================„' Original PASCAL Code by Bas van Gaalen„' Converted to BASIC by William Yu (05-26-96)„'„' Places a large vector ball ellipse on the screen and makes it bounce„' to pieces = nice visual effect„'„' Compile for best performance„' FYI: Pascal code ran 5 times faster (About there anyways).„'--------------------------------------------------------------------„„DEFINT A-Z„DECLARE SUB Putdot (X%, Y%, Colour%)„DECLARE SUB Setcolors (Colour%, Red%, Green%, Blue%)„„CONST Balls = 1400         ' Increase/Decrease accordingly to your CPU speed„CONST Startcolor = 50      ' I don't think you'll need this„„TYPE movement„     X AS INTEGER          ' Position„     Y AS INTEGER          ' Velocity„    dx AS INTEGER          ' Acceleration„    dy AS INTEGER„   ddx AS INTEGER„   ddy AS INTEGER„ Colour AS INTEGER„ MaxYValue AS INTEGER      ' ???„END TYPE„„DIM Ball(1 TO Balls) AS movement„„SCREEN 13            ' Try other screen modes if you wish„„'These few lines aren't too important„'FOR I = 1 TO 250„  'CALL setcolors(I, I MOD 50, I MOD 50 - 20, I / ((I / 63) + 1))„  'fillchar(mem[$A000:(191*320)],320*8,Ord(StartColor));{line at bottom}„'NEXT I„„FOR I = 1 TO Balls                        '{INIT the balls into the array}„  Ball(I).ddx = 0„  Ball(I).ddy = 1                         '{constant pull downward}„  Ball(I).dx = RND * 5 - 2               '{ start it moving left or right }„  IF Ball(I).dx = 0 THEN Ball(I).dx = 1   '{ not still}„  Ball(I).dy = 0                          '{ the object is initially at rest }„  Ball(I).X = INT(COS(I) * 140) + 140 + ((I / ((I / 4) + 1)) * 6)„  Ball(I).Y = INT(SIN(I + ((I / ((I / 4) + 1)))) * 70) + 60 + ((I / ((I / 4) + 1) * 12))  '{ you specified }„  Ball(I).Colour = RND * (I / ((I / 254) + 1)) + 1'{Each Balls color}„  MaxYValue = Ball(I).Y„NEXT I„„Pull = 0      '{init the gravity degrading effect}„              'Increase value for cool drop and die effect„„WHILE INKEY$ = ""„ FOR I = 1 TO Balls„  CALL Putdot(Ball(I).X, Ball(I).Y, 0)   ' { blank out the pixel drawn on the last iteration }„  Ball(I).dx = Ball(I).dx + Ball(I).ddx  ' { updating velocity }„  Ball(I).dy = Ball(I).dy + Ball(I).ddy„  Ball(I).X = Ball(I).X + Ball(I).dx     ' { updating position }„  Ball(I).Y = Ball(I).Y + Ball(I).dy„  IF Ball(I).X < 1 THEN                  ' {hits left of screen}„     Ball(I).X = 1„     Ball(I).dx = Ball(I).dx * -1„  END IF„  IF Ball(I).X > 319 THEN                ' {hits right of screen}„     Ball(I).X = 319„     Ball(I).dx = -Ball(I).dx„  END IF„  IF Ball(I).Y > 190 THEN                ' { BOUNCE! }„     Ball(I).Y = 190 - (Ball(I).Y - 190) + 1„     Ball(I).dy = -Ball(I).dy + Pull„  END IF„  CALL Putdot(Ball(I).X, Ball(I).Y, Ball(I).Colour)  ' { draw the pixel at the new position }„ NEXT I„WEND„END„„SUB Putdot (X, Y, Colour)„  DEF SEG = &HA000„  Y! = Y„  POKE Y! * 320 + X, Colour„  'PSET (X, Y), Colour„END SUB„„SUB Setcolors (Colour, Red, Green, Blue)„      OUT &H3C8, Colour„      OUT &H3C9, Red„      OUT &H3C9, Green„      OUT &H3C9, Blue„END SUB„Steven Sensarn                 MODE-X PCX DISPLAY             The Basix Fanzine Issue 5      06-01-96 (00:00)       QB, QBasic, PDS        212  7120     MODEXPCX.BAS'//MODEXPCX.BAS -- CREATED IN QBASIC 1.1 BY STEVEN SENSARN„'//SPEED HAS BEEN COMPROMISED FOR SIZE„„'//FUNCTION PROTOTYPES„DECLARE SUB X.PLANE (P AS INTEGER) 'USE THIS TO CHANGE PLANES„DECLARE SUB X.PIXEL (X AS LONG, Y AS LONG, CLR AS INTEGER) 'PLOTS PIXEL„DECLARE SUB MODEX () 'CHANGES TO MODE X 320x240x256„DECLARE SUB WAIT.KEY () 'PRESS ANY KEY TO CONTINUE„DECLARE SUB OPEN.FILE () 'USED TO LOAD THE PCX FILE„„'//STRUCTURES„TYPE THEADER„    MAN AS STRING * 1 'MANUFACTURER -- 10„    VER AS STRING * 1 'VERSION -- 5+„    ENC AS STRING * 1 'ENCODING -- 1 (RLE)„    BPP AS STRING * 1 'BITS PER PIXEL PER PLANE -- 8„    MNX AS INTEGER 'MINIMUM X SIZE„    MNY AS INTEGER 'MINIMUM Y SIZE„    MAX AS INTEGER 'MAXIMUM X SIZE„    MAY AS INTEGER 'MAXIMUM Y SIZE„    HRS AS INTEGER 'HORIZONTAL RESOLUTION„    VRS AS INTEGER 'VERTICAL RESOLUTION„    COL AS STRING * 48 'EGA COLOR PALETTE -- IGNORE„    RES AS STRING * 1 'RESERVED„    NMP AS STRING * 1 'NUMBER OF PLANES -- 1„    BPL AS INTEGER 'BYTES PER SCANLINE„    PAL AS INTEGER 'PALETTE INFO -- IGNORE„    FIL AS STRING * 58 'FILLUP SPACE„END TYPE„„'//VARIABLE DECLARATIONS„DIM BYTE AS STRING * 1 'USED TO READ BYTES„DIM HEADER AS THEADER 'USED FOR HEADER INFORMATION„DIM SHARED FILE AS STRING * 50 'USED TO HOLD FILE NAME„DIM INDEX AS LONG 'USED TO CONTROL DECODING„DIM SIZE AS LONG 'USED TO CONTROL DECODING„DIM XSIZE AS INTEGER, YSIZE AS INTEGER 'USED TO MEASURE IMAGE„DIM TOTALBYTES AS INTEGER 'USED TO MEASUER SCAN LINES„DIM VALUE AS INTEGER 'USED FOR CONVERTING CHAR TO INT„DIM RLP 'USED FOR RUN LENGTH LOOP„DIM X AS LONG, Y AS LONG 'USED FOR PIXEL TRACKING„„'//VARIABLE INITIALIZATIONS„INDEX = 1 'BE ON THE SAFE SIDE„„'//MAIN„ON ERROR GOTO ERROR.HANDLER 'JUST IN CASE...„„CLS„CALL OPEN.FILE 'OPEN THE FILE„„GET #1, 1, HEADER 'LOAD HEADER„„'//BASIC TEST (NOT FOOL-PROOF) -- REQUIREMENTS„IF ASC(HEADER.MAN) <> 10 THEN CLOSE #1: END 'NOT PCX„IF ASC(HEADER.VER) < 5 THEN CLOSE #1: END 'NOT 256 COLOR„IF ASC(HEADER.ENC) <> 1 THEN CLOSE #1: END 'NOT RLE„IF ASC(HEADER.NMP) <> 1 THEN CLOSE #1: END 'NOT SUPPORTIVE OF MODE X PLANES„„'//LOAD WHILE LOOP INFORMATION„XSIZE = HEADER.MAX - HEADER.MNX + 1 'LOAD HORIZONTAL GRAPHIC SIZE„YSIZE = HEADER.MAY - HEADER.MNY + 1 'LOAD VERTICAL GRAPHIC SIZE„TOTALBYTES = HEADER.BPL 'USED TO TRACK END-OF-SCANLINE„SIZE = 1& * XSIZE * YSIZE 'LOAD SIZE -- FORCE LONG„IF SIZE > 76800 THEN CLOSE : END 'GRAPHIC TOO LARGE -- WON'T FIT ON SCREEN„„'//DISPLAY STATUS TO THE USER„CLS : SCREEN 0: WIDTH 80„PRINT "FILENAME: ", , " "; FILE: PRINT„PRINT "MANUFACTURER: ", ASC(HEADER.MAN)„PRINT "VERSION: ", , ASC(HEADER.VER)„PRINT "RLE ENCODING: ", ASC(HEADER.ENC)„PRINT "BITS PER PIXEL PER PLANE: ", ASC(HEADER.BPP)„PRINT "WINDOW X MIN: ", HEADER.MNX„PRINT "WINDOW Y MIN: ", HEADER.MNY„PRINT "WINDOW X MAX: ", HEADER.MAX„PRINT "WINDOW Y MAX: ", HEADER.MAY„PRINT "HORIZONTAL RESOLUTION: ", HEADER.HRS„PRINT "VERTICAL RESOLUTION: ", HEADER.VRS„PRINT "NUMBER OF PLANES: ", ASC(HEADER.NMP)„PRINT "BYTES PER LINE: ", HEADER.BPL„PRINT„IF NOT HEADER.HRS / 320 = INT(HEADER.HRS / 320) THEN„    PRINT "ASPECT RATIO MISMATCH ", " -- X AXIS" 'WARPED IMAGE -- NO BIG DEAL„ELSE„    PRINT„END IF„IF NOT HEADER.VRS / 240 = INT(HEADER.VRS / 240) THEN„    PRINT "ASPECT RATIO MISMATCH ", " -- Y AXIS" 'WARPED IMAGE -- NO BIG DEAL„END IF„WAIT.KEY 'PRESS ANY KEY TO CONTINUE„MODEX 'SWITCH TO MODE X -- 320x240x256„DEF SEG = &HA000 'VIDEO MEMORY ACCESS„„'//DECODE AND DISPLAY„WHILE INDEX <= SIZE 'WHILE PICTURE ISN'T DONE LOADING...„    GET #1, , BYTE 'READ BYTE„    IF (ASC(BYTE) AND &HC0) = &HC0 THEN 'TEST TOP TWO BITS FOR 1'S„	RLP = ASC(BYTE) AND &H3F 'SET RUN LENGTH„	GET #1, , BYTE 'READ DATA BYTE„	WHILE RLP > 0 'WHILE RUN LENGTH HAS NOT YET FINISHED DUPLICATION„	    IF NOT X > XSIZE THEN CALL X.PIXEL(X, Y, ASC(BYTE)) 'PLOT PIXEL„	    X = X + 1 'RENEW PIXEL POSITION„	    IF X >= TOTALBYTES THEN X = 0: Y = Y + 1 'TEST FOR END OF SCANLINE„	    RLP = RLP - 1 'REDUCE RUN LENGTH LOOP VARIABLE„	    INDEX = INDEX + 1 'INCREASE TOTAL„	WEND„    ELSE 'IF THE BYTE IS NOT ENCODED„	IF NOT X > XSIZE THEN CALL X.PIXEL(X, Y, ASC(BYTE)) 'PLOT PIXEL„	X = X + 1 'RENEW PIXEL POSITION„	IF X >= TOTALBYTES THEN X = 0: Y = Y + 1 'TEST FOR END OF SCANLINE„	INDEX = INDEX + 1 'INCREASE TOTAL„    END IF„WEND„„'//CHANGE PALETTE„GET #1, LOF(1) - 768, BYTE„IF ASC(BYTE) <> 12 THEN CLOSE : END 'NO 256 COLOR PALETTE„FOR INDEX = 0 TO 255„  OUT &H3C6, &HFF 'INITIALIZE VGA PALETTE„  OUT &H3C8, INDEX 'SELECT COLOR INDEX„  GET #1, , BYTE„  OUT &H3C9, INT(ASC(BYTE) / 4) 'SEND RED VALUE -- ONLY NEED TOP 6 BITS„  GET #1, , BYTE„  OUT &H3C9, INT(ASC(BYTE) / 4) 'SEND GREEN VALUE -- ONLY NEED TOP 6 BITS„  GET #1, , BYTE„  OUT &H3C9, INT(ASC(BYTE) / 4) 'SEND BLUE VALUE -- ONLY NEED TOP 6 BITS„NEXT INDEX„SOUND 3000, .25 'DONE -- YOU WILL NOT SEE THE 'PRESS ANY KEY TO CONTINUE'„END„„'//ERRORS„ERROR.HANDLER:„SCREEN 0: WIDTH 80„CLS„PRINT : PRINT "SOMETHING HAS OCCURED IN THE PROGRAM THAT HAS"„PRINT "CAUSED IT TO HALT.  TERMINATING..."„WAIT.KEY„END„„'//DONE„CLOSE #1 'CLOSE THE FILE„SOUND 3000, .25 'SIGNAL USER„END 'END THE PROGRAM„„'//NOTICE„'I HAVE ABSOLUTELY NO EXPERIENCE WITH PLANE BASED PCX FILES BECAUSE I USE„'MICROSOFT WINDOWS 3.1 PAINTBRUSH AND I CAN'T SEEM TO CREATE ONE.  IF„'ANYBODY WOULD BE WILLING TO DRAW ME ONE THAT USES PLANES, I WOULD GREATLY„'APPRECIATE IT.  SENT TO "txs53132@bayou.uh.edu" VIA BINHEX OR MIME.„„SUB MODEX„    SCREEN 13„    DEF SEG = &HA000„    OUT &H3C4, &H4„    OUT &H3C5, &H6„    OUT &H3C4, &H2„    OUT &H3C5, &HF„    CLS„    OUT &H3D4, &H14„    OUT &H3D5, &H0„    OUT &H3D4, &H17„    OUT &H3D5, &HE3„    OUT &H3C2, &HE3„    OUT &H3D4, &H11„    OUT &H3D5, &H2C„    OUT &H3D4, &H6„    OUT &H3D5, &HD„    OUT &H3D4, &H7„    OUT &H3D5, &H3E„    OUT &H3D4, &H10„    OUT &H3D5, &HEA„    OUT &H3D4, &H11„    OUT &H3D5, &HAC„    OUT &H3D4, &H12„    OUT &H3D5, &HDF„    OUT &H3D4, &H15„    OUT &H3D5, &HE7„    OUT &H3D4, &H16„    OUT &H3D5, &H6„END SUB„„SUB OPEN.FILE„    PRINT "<>/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\<>"„    PRINT "<> PLEASE NOTE THAT THE FILE THAT IS TO BE LOADED MUST HAVE A   <>"„    PRINT "<> SIZE NO LARGER THAN 320x240.  IF YOU WOULD LIKE TO TERMINATE <>"„    PRINT "<> THIS PROGRAM, DO SO ENTERING AN EMPTY FILENAME.              <>"„    PRINT "<>\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/<>"„    PRINT„    INPUT "FILENAME: ", FILE„    FILE = RTRIM$(FILE)„    FILE = UCASE$(FILE)„    IF NOT RIGHT$(RTRIM$(FILE), 4) = ".PCX" THEN END 'NO VALID EXTENSION„    OPEN FILE FOR BINARY AS #1„    IF LOF(1) = 0 THEN CLOSE #1: KILL FILE: END 'FILE EMPTY OR NOT FOUND„END SUB„„SUB WAIT.KEY„  WHILE LEN(INKEY$) = 0: WEND„END SUB„„'//ASSUMING CURRENT SEGMENT IS A000:0000H„SUB X.PIXEL (X AS LONG, Y AS LONG, CLR AS INTEGER)„    CALL X.PLANE(X AND 3)„    POKE INT(Y * 80 + X / 4), CLR„END SUB„„'//USED TO CHANGE PLANE„SUB X.PLANE (P AS INTEGER)„    OUT &H3C4, 2„    OUT &H3C5, 2 ^ P„END SUB„Earl Montgomery                320X400 TURTLE DRAW            FidoNet QUIK_BAS Echo          05-28-96 (18:29)       QB, PDS                92   3290     320X400.BAS  'Here is some code that I wrote awhile back that uses the 320x400x256„ 'mode. Press "H" to get the help menu. It allows you to sketch in this„ 'mode. But it does give you the basic code to do all sorts of things„ 'in this mode. Enjoy.„„setmode:„ 'Sets SCREEN 13 to the 320X400X256 mode„ SCREEN 13: DEF SEG = &HA000„ KEY(10) ON„ ON KEY(10) GOSUB endofprogram„ OUT &H3D4, 9: OUT &H3D5, &H40: OUT &H3D4, 20: OUT &H3D5, 0: OUT &H3D4, 23„ OUT &H3D5, &HE3: OUT &H3C4, 4: OUT &H3C5, &H6„ OUT &H3C4, 2: OUT &H3C5, 15: CLS : 'rem this clears (CLS) all 4 planes„ IF flag$ = "restart" THEN GOTO loadtemp„ OUT &H3C4, 2: OUT &H3C5, 1„begin:„ position% = 15318: c = 15: plane% = 1: OUT &H3C4, 2: OUT &H3C5, 1„restart:„ flag$ = ""„ POKE position%, c„waitkey1:„ i$ = INKEY$: IF i$ = "" THEN GOTO waitkey1„ i$ = UCASE$(i$)„ keycode% = CVI(i$ + CHR$(0))„ IF keycode% = 19712 THEN GOTO moveright„ IF keycode% = 19200 THEN GOTO moveleft„ IF keycode% = 18432 THEN GOTO moveup„ IF keycode% = 20480 THEN GOTO movedown„ IF i$ = "C" THEN GOTO changecolor„ IF i$ = "H" THEN GOTO helpscreen„ IF i$ = "X" THEN GOTO clearscreen„ GOTO waitkey1„moveright:„ IF plane% = 1 THEN OUT &H3C4, 2: OUT &H3C5, 2: plane% = 2: GOTO pokescrn„ IF plane% = 2 THEN OUT &H3C4, 2: OUT &H3C5, 4: plane% = 4: GOTO pokescrn„ IF plane% = 4 THEN OUT &H3C4, 2: OUT &H3C5, 8: plane% = 8: GOTO pokescrn„ IF plane% = 8 THEN OUT &H3C4, 2: OUT &H3C5, 1: plane% = 1: position% = position% + 1„pokescrn:„ IF position% > 31999 THEN position% = 31999„ POKE position%, c„ GOTO waitkey1„moveleft:„ IF plane% = 1 THEN OUT &H3C4, 2: OUT &H3C5, 8: plane% = 8: position% = position% - 1: GOTO doit„ IF plane% = 2 THEN OUT &H3C4, 2: OUT &H3C5, 1: plane% = 1: GOTO doit„ IF plane% = 4 THEN OUT &H3C4, 2: OUT &H3C5, 2: plane% = 2: GOTO doit„ IF plane% = 8 THEN OUT &H3C4, 2: OUT &H3C5, 4: plane% = 4:„doit:„ IF position% < 0 THEN position% = 0„ POKE position%, c„ GOTO waitkey1„moveup:„ position% = position% - 80„ IF position% < 0 THEN position% = position% + 80„ POKE position%, c„ GOTO waitkey1„movedown:„ position% = position% + 80„ IF position% > 32000 THEN position% = position% - 80„ POKE position%, c„ GOTO waitkey1„changecolor:„ c = c + 1„ IF c > 255 THEN c = 0„ POKE position%, c„ GOTO waitkey1„ GOTO waitkey1„helpscreen:„ 'Saving screen before switching to SCREEN 9 and the HELP MENU„ DEF SEG = &HA000„ OUT &H3CE, 4: OUT &H3CF, 0: BSAVE "temp1.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 1: BSAVE "temp2.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 2: BSAVE "temp3.bin", 0, 32000„ OUT &H3CE, 4: OUT &H3CF, 3: BSAVE "temp4.bin", 0, 32000„ SCREEN 9: CLS„ PRINT "Key             Function"„ PRINT "Use arrow keys to move cursor"„ PRINT "C               Changes current color"„ PRINT "F10             Exit Program "„ PRINT "H               Help (This Screen)"„waitkey2:„ i$ = INKEY$: IF i$ = "" THEN GOTO waitkey2„ CLS : flag$ = "restart": GOTO setmode„loadtemp:„ OUT &H3C4, 2: OUT &H3C5, 1: BLOAD "temp1.bin"„ OUT &H3C4, 2: OUT &H3C5, 2: BLOAD "temp2.bin"„ OUT &H3C4, 2: OUT &H3C5, 4: BLOAD "temp3.bin"„ OUT &H3C4, 2: OUT &H3C5, 8: BLOAD "temp4.bin"„ GOTO restart„clearscreen:„ OUT &H3C4, 2: OUT &H3C5, 15: CLS : GOTO begin„endofprogram:„ SCREEN 0: CLS : DEF SEG : END„Ryan White                     VARYING WINDMILLS              BIGFOOT@SunBelt.Net            06-02-95 (21:50)       QB, QBasic, PDS        72   1678     WINDMILL.BASSCREEN 13„CLS„C = 16„E = 1„ON KEY(1) GOSUB ECH1„KEY(1) ON„ON KEY(2) GOSUB ECH2„KEY(2) ON„„ST:„FOR X = 1 TO 80 STEP E„IF C >= 30 THEN C$ = "Y" ELSE IF C <= 16 THEN C$ = "N"„IF C$ = "Y" THEN C = C - 1 ELSE C = C + 1„„LINE (X, 1)-(80 - X, 49), C„LINE (80 + X, 1)-(160 - X, 49), C„LINE (160 + X, 1)-(240 - X, 49), C„LINE (240 + X, 1)-(320 - X, 49), C„„LINE (X, 50)-(80 - X, 99), C„LINE (80 + X, 50)-(160 - X, 99), C„LINE (160 + X, 50)-(240 - X, 99), C„LINE (240 + X, 50)-(320 - X, 99), C„„LINE (X, 100)-(80 - X, 149), C„LINE (80 + X, 100)-(160 - X, 149), C„LINE (160 + X, 100)-(240 - X, 149), C„LINE (240 + X, 100)-(320 - X, 149), C„„LINE (X, 149)-(80 - X, 199), C„LINE (80 + X, 149)-(160 - X, 199), C„LINE (160 + X, 149)-(240 - X, 199), C„LINE (240 + X, 149)-(320 - X, 199), C„NEXT X„„FOR Y = 49 TO 1 STEP -E„IF C >= 30 THEN C$ = "Y" ELSE IF C <= 16 THEN C$ = "N"„IF C$ = "Y" THEN C = C - 1 ELSE C = C + 1„„LINE (1, Y)-(80, 50 - Y), C„LINE (81, Y)-(160, 50 - Y), C„LINE (161, Y)-(240, 50 - Y), C„LINE (241, Y)-(320, 50 - Y), C„„LINE (1, Y + 50)-(80, 100 - Y), C„LINE (81, Y + 50)-(160, 100 - Y), C„LINE (161, Y + 50)-(240, 100 - Y), C„LINE (241, Y + 50)-(320, 100 - Y), C„„LINE (1, Y + 100)-(80, 150 - Y), C„LINE (81, Y + 100)-(160, 150 - Y), C„LINE (161, Y + 100)-(240, 150 - Y), C„LINE (241, Y + 100)-(320, 150 - Y), C„„LINE (1, Y + 150)-(80, 200 - Y), C„LINE (81, Y + 150)-(160, 200 - Y), C„LINE (161, Y + 150)-(240, 200 - Y), C„LINE (241, Y + 150)-(320, 200 - Y), C„NEXT Y„„IF INKEY$ = "" GOTO ST„END„„ECH1:„IF E >= 1.1 THEN E = E - 1 ELSE E = E - .1„IF E <= .2 THEN E = 1„RETURN„„ECH2:„E = E + 1„RETURN„„Martin Lindhe                  PIXEL SCROLLER                 m-35728@mailbox.swipnet.se     06-04-96 (00:00)       QB, QBasic, PDS        42   1448     PXSCROLL.BASDECLARE SUB PixelScroll (Text$, Col%, NewY%)„„'         PXSCROLL.BAS, pixelscroller by Martin Lindhe, 96-06-04„'                   e-mail: m-35728@mailbox.swipnet.se„„' This is a pixelscroller supporting mode 13h, if used on other screens,„' it will need some modifications. Please use it for something lame!„' The scroller will scroll *LONG* string, try it out!„„' Syntax: PixelScroll TextToWrite$, Color, YPosition„„SCREEN 13„PixelScroll "Pixelscroller example scroll, this is written by Martin Lindhe, do i need to write something more, i think this will be enough. But remember: QuickBASIC rules!", 27, 90„„DEFINT A-Z„SUB PixelScroll (Text$, Col, NewY)„„    DIM Move(1277)„    DIM Temp(20)„„    Temp = 255 - Col         ' This lines will take the xor'ed color choosen„    PALETTE Temp, 0          ' and light it down. I am not good at comment my„    COLOR Temp: PRINT Text$  ' work, so i hope you'll understand the principe.„   „    Tmp2 = 1„    FOR x = 0 TO LEN(Text$) * 8„        IF x > 319 * Tmp2 THEN Tmp = Tmp + 7: Tmp2 = Tmp2 + 1„       „        GET (x, 0 + Tmp)-(x, 7 + Tmp), Temp„        PUT (319, NewY), Temp, PRESET„„        GET (2, NewY)-(320, NewY + 7), Move„        PUT (1, NewY), Move, PSET„    NEXT x„„    FOR x = 1 TO 320„        GET (2, NewY)-(320, NewY + 7), Move„        PUT (1, NewY), Move, PSET„    NEXT„    SCREEN 0: SCREEN 13   ' Resets the PALETTE changes, not needed.„„END SUB„Martin Lindhe                  FAKE PLASMA                    m-35728@mailbox.swipnet.se     06-08-96 (00:00)       QB, QBasic, PDS        26   573      FAKEPLAS.BAS'           Fake Plasma - Written by Martin Lindhe 96-06-08„'              contact me at: m-35728@mailbox.swipnet.se„„'                     Another cool effect in QB :-)„„DEFINT A-Z„SCREEN 13„„FOR a = 1 TO 63„    PALETTE a, a„    PALETTE a + 63, 256 ^ 2 + 256 * a„    PALETTE a + 126, 256 ^ 2 * a„NEXT„„DO„FOR y = 70 TO 130„    FOR x = 130 TO 190„        a = POINT(x + 1, y)„        b = POINT(x - 1, y)„        c = POINT(x, y + 1)„        d = POINT(x, y - 1)„        col = (a + b + c + d) / 4 + RND * 2„        PSET (x, y), col„    NEXT„NEXT„LOOP„Martin Lindhe                  SCALING ROUTINE                m-35728@mailbox.swipnet.se     06-09-96 (12:44)       QB, QBasic, PDS        39   1058     SCALE.BAS   '                     Scaling routine in quickbasic„'                   written in sleep by Martin Lindhe„„' i wrote this one after i saw the DOOMFACE.BAS, included in a earlier issue„' of ABC. That routine was horrible, so i speeded up the code some thousands„' procents...„„' e-mail: m-35728@mailbox.swipnet.se„„DEFINT A-Z„SCREEN 13„„DIM Picture(121)„„FOR a = 1 TO 121„    READ Picture(a)„NEXT„„FOR u = 1 TO 100„    a = 0„    FOR y = 1 TO 11 * u STEP u„        FOR x = 1 TO 11 * u STEP u„            a = a + 1„            LINE (x, y + u - 1)-(x + u, y), Picture(a), BF„        NEXT„    NEXT„NEXT u„„DATA 00,00,00,00,00,00,00,00,00,00,00„DATA 00,00,00,00,24,28,24,00,00,00,00„DATA 00,00,00,24,28,22,28,24,00,00,00„DATA 00,00,24,28,22,00,22,28,24,00,00„DATA 00,24,28,22,00,00,00,22,28,24,00„DATA 00,28,22,00,00,00,00,00,22,28,00„DATA 00,24,28,22,00,00,00,22,28,24,00„DATA 00,00,24,28,22,00,22,28,24,00,00„DATA 00,00,00,24,28,22,28,24,00,00,00„DATA 00,00,00,00,24,28,24,00,00,00,00„DATA 00,00,00,00,00,00,00,00,00,00,00„Bob Ellis                      EXTENDED PB GIF VIEWER         www.voicenet.com/~rellis/      06-10-96 (00:00)       PB                     341  22445    GIF3S.BAS   ' To extract GIF3S.ZIP, please load/run under PowerBASIC„' Add DIM before SHARED to extract under QB„„DEFINT A-Z:SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"GIF3S.ZIP",4^6:Z&=16505:?STRING$(50,177);„U"%up()%9%%%%-%e>RFCR,(CLx&7%%S)%%%1%%%%wj%lsfr%jxSgRfx&c:r9<U:5T„U"p+*X0-RrVTwxdf;]\C+R#[Sle09^W\**RAI2pc$C&SRjTJmDuroDOgau\D6r48Z„U"mmmStLmrWt-6sW9J?/OhZUrYscC4vpEV8PhI&>HW+I\Q:PG[0.)?D*n^-.;%>U*„U"1F3[vgIq+$<\':Mi7>J5yE.8',CESfaY;d>rM#c4b&C1oX&\J/2)+gR7NK9TadS„U"DV)kcN++T+p$r1zn%gRXSM]Fd:oA(hZILCY(QgC+XpX'Cm#0O7$+8hc92aI\<%>„U"0C)cqWi46otTgWr*.&Sd1&dkv-Am;[l\_L=SCvH79U)cwsyMB>uutsF8b^67^Z:„U"W1QVX.J<nrP]3g;NEqlNd.ubh&>lx:VhZrWZ,d71Baf:V#it/Gb:p.#XjpN#aqq„U"[GYq/k]^Rh.gH#Mf5>9urCE$5e(XHo#\7p%*up(%)9%%%%-%E-+BEa.KLcj#T%%„U"Y'+%%-%%%%l%nkXS[gfxF2L:F#s^'Yp7cLx&T\s0t$/sm/rlA[]ZC/e7c?(PBpn„U"KhU$JpJSDy\yt8xOrVgL6Nt47YrmD%dQvOX4zm)XtG.#'E.O4%A)diXRrg4FM09„U",T0asor='\n7+x2lPgFp^FX;j;WZ;VeVYQl<a]#yQkefD31IO(YEDZcHV+]]t9i„U"P11Fmni-\Y_5/OiR.+0#x3UfgkGTCk[0(U2\a5x:;VCrR^e9J(10'Kn5'1hC9-f„U"vK5l[nUg=0K]i'K8tHg#)v-&<L7mreO5NQCyctrL=5;=%(:e72Qa[i$T85WQMYi„U"\Wb>+gEHr]TG:JQXA5A[.]7wus;n^SUF8=/'&\kh602<,f#l%noa3&KunD6;TD&„U"'+l.>0u$^5BQv,^TM=Nj_v\dvYr[pT.7e+%9IrB$$T-?UVVZ]eOTw<0;pg9MBi)„U"e(TWDJ'1*\ZF_,.tmvk5MNE#Is%(/ja,9f$E)J_OtEv8]lhX5e]w[=lI-6V,AGp„U"4rrd:j6jN8V[D:ZeD4tp^T73_)[AJm;&rBZ]o_UXT&]?:pO=9ug.KebsKh>#LFV„U"27pp4daDtG^Y4SXFDH2SMBU&N/j>.:z:I<OZ,.68Z9$pttNUUm;dp>Kp8eKkz-E„U"W:yDt8VE^HbHC_s:#pyGyGbFoBPv.,d\71SHa$i>b#_6ZVlb<k\;2ojfl%7knj3„U"]b(dVtqb=G>BFO/3vR0GvvL]DSpD^_v,MRnkn6R[2?urDY<QXO/GrK\Z8%C#99M„U"lxM;/i/YzQuqg;OY5,1iG\sS;U[xSc^JxbS9F1vT#vac^k7&8wQ9rovhZ>H;JiY„U"kn?S6G&SK;8*>j<H\0%#-l5J1w15(3MPn.D*l(#/8z$d:27.KNZxijfV\g?+Yxe„U"x,fm*Y0mdYVJnD9;xuB;SrQ'/$nZF..,zMO>>kVH<(XE,.LdSf>4zCA,532HG?D„U":c_dUZm\DNh]4]m2Ev,;)I%kZG2Wt&Q?Z8PET5t,n,%.Tfp]]gs?:8iN[cdad(f„U"O(*/RX_h+4Ri48yym4s-)Y-ilDOXEeER;'pk[X2ZUiz_w,:c?&+/r3cB*[iOZx%„U"oDc+8$.R4pt^tq$E5V74R2Z:0=U^i^]Y')U[/U]r-/OqJb;8dZ2r>VvZU860[)j„U"Y<Zh<<5Hl\lwfIiz;ft4WOkvGx;4oo#?InNzsD?2re(Cl.'#s;nI>$iH\sq(HgJ„U"p0NZ?Y\mDH[uDYcwC_SD60=tE9a6^.x;S]''V4xGo_wYD_yHCT'<ZWL;)B:'+Os„U"iP6\Bv-Xg,\%Fp<Vpl+OiEB)Cp2=GZpaA)=+L;D'JJvfXNOr:b?O5xM%,RnC[t.„U"7Bp4s6y&7:Bo,Q6$9s5kONl2<'L,A:2v8mMF9j,oPb6*Nlk'Mm=CASEeFoPi.(R„U"(EPPck\goN]Q9y[_/wf$N\d';\%Ws\8fTnHW2Q,6m><-iIat2NXwQ+#W0o7yinx„U"JU>Px)PR0]8NM9-Z^=GEETA+*fGk2Hv.kFixlBn^y;=5AFBpvsT\PIVnKaX6L85„U"HnDjgfg)TJU1zNR[?jHQC'uK%RP8rn+*jW.X4+uYq:bMNH<1fSI_BxJ6Yl\Qtc\„U",RBm3uQj.6mo&3ANSa7I4L6o;1*^N6#dQ_9)Mx5Sw2f*CSGZniR&rMb-5arcbQI„U")qw*Eu[.dopA.gcMC%;S-$-hM:N&NJ;byPM8LK[q+p()F#c54*&u,\sne)n8j-&„U"Lg*/X:E#+cZt><6o#7[RaQG0>sEB_*pL9X:?S=O*X/#lg#Ln$Kfq#N9tMPBq\Dd„U"lKJitoZBeBr'>G<ZUDY6QT((eW]-YPf=9A6D%B%2KKY(TCwPYquqEOMYN2WRjnF„U"/l]iKl]LOcaS%S;^5ljYn#0+[e>jj^aY>C=F9&g(Jh6=(+'H=e#]0jT0L:(hb'2„U"6PrG8v0PcUhJcJV6r6bo9H^BkLWr6<yitL8fs2qgMBv3i^qt,+H>F(gxBYc2Vc\„U"aK9hl(nemX]YBRM3_8j9x.=EZ7?,R.9o8q*F;_(dR42?s(qhJ4tPZ2dA2RqmEJ[„U"W.H_c$C>tf<$v-6gt^8<b,Exvo&Swb9j^#z7&Rm&)S_+XU9Vx>n_;a)#)Z^X^>F„U"fun7dW9gb81M7fRK&_^6fABeV;_2<+%6p9)aYGyhCl]/,<6J]LQ.0<PG.HT)*jN„U"IQuMnK=ibm=sRE8e7kX2o,,N7C>frQ<<[NBkxIQiM6ZUj0oSQ\w$:%:3)r3q%90„U"rFm4WQ]/o.Kr?=:$dN)<x#EfTn(q_S3PyG=rO$_0Y.3_x[t#[ICEavV6',+1K7f„U"'PYs\In?,QIK1_j+,pSK10;?3Y)ScS(\eKWiFi:zDlRY+E'G^1Zi3j*(t[gl/2e„U"g$$LTGbOhBU;S:;LVRSvU5,<W-FRzU%2wQ4*rWL.&ZD5Y\RVlp^x;(<mS<Lbg(y„U"C%.pE$_fJlQi?i0F*/>*8W1sX[)#=ZG.So%SI-t/.$YycSj*P;rutM;)YHFd'*q„U"7dHS,j0)kYDi_<l/M^Ht]3tft2ahp(_lx]$aWTVll:(H#j?RvSAr%VeeMn,5gFG„U"O:MbfB;U]JUf\y^>Mk8=\Dt4NY$B/wg-T4nU;i/2)q3K4LLN+#W8H]_V)(,(?AO„U"MCr%)9zi'T9LC<rE*H01.=*fC-&;_YHW$\r9v;QwL7->nkdy(eXhCP:-=RC],-Y„U";t>aB%c8]kQ1tC8(0u4'#I_]#WK+JE':jN/[0-JM/Rib\,nC.OOLlR738g]X<1F„U"]Hfk.4c/HB,oJ2.YVF'lMk\pRC>pU^^g3L=H\6ZQ%<%*.RL)>y3W^KYT6NGN-CM„U"JlRF?9hRM[:IlZE+(V*CIYr&;+C=8Ui6'Dt6jSqj&naP%Upzq8xmo-fr7[L:n%d„U"G1qQju4Xq#j9,y9SLf?B4d)d#SGnu=Qe*d[YVE5d3tN^$vd^#L\e2^'BI,4MnYB„U"b;(i&nf^b[Q8V?U=JGmAPl*p#]r6W'TSBK.S-d_F#CUTlN-t>_a*YPWe)z_C0re„U"gA.ENX[OW%=1Ir'/VxE(8I3f*Eb2'.-/FA9%^xGmh<T*qrb2uCucQv%\S+_'(v7„U";u23r0>g6Tz&=SxOu6'F#)_ai;>D=L0nK4.^t7gNJ4[w#=J&Zs[JALbhrqGLNN\„U"fJmRKUv\N^;%'&E+(wf2NQ?Q&?m6%h8.a,[H?2_^1*CG%$-IB'P)M&2Yo_B,fh8„U".b?Y*,%>D,Qc^L,1V]uajKF4ctF4-VW5L*87+^97c*^ry?15s$).BNr>i&G,5'a„U"Z.3])A^K*3+/m:>xB)bD'(fAYppb=neAnDY+<<49=z1.GjM#su*eWN9,O3&Nkn/„U"jM'Rd>/=;9<'QM%JJmHrrcz>H[mfGfK;Ko'1d\Yk%n3iwKlML3?v_rE3)n#;X+Z„U"Fc1LX2pGJK&#D8frg\QnwDp2&w,_CWWMB'<x6l.U%luk)'E;;3hzJ_K3OQE\/Ug„U"+x[L*,*;qp64HA#l;k#J?8S;1Of#2/F3Z)_)9SDJH:B4HUA.a:m(a%18^#(17rD„U"aN^8yQXj?9d/gI)M3a;T$[C$mB=z;#ZhYN/F0I5vEf)6)%BL,^6;,GGUmC/CrUb„U"jFv&QQJ,RIbSIX[eWqIV0dD=TjH8-a+/KS;1T^9+AratYJ8\\RHMCge%WB*>X07„U"L\=qt_aLwI6?:773[E;.89/t?,?U3-hy$^[K4f[U:*jUrCGFg7Z;J,:i)&%6go;„U"h*'JI-Bg.M*.$M:B$[VFqoE07>fLn*c-jW/4ZNI,,)kjos/DqGqb$=QZ_cAo)N7„U"kU<U.?0#dLWGgr$mmcMs9\)Zhl5JO3AQCBElNSGg]IwJ'wo/\TnUN;+2[Iz)ZUJ„U"n__sn/u0'RS.AF+xo5]\+bkSiBA77jX3OD&A?>a[ok>\xSX$H8oC_P>r%Z&Q)m/„U"2Y/>]XARcK.JRTLmb7Its(:3AI)I8fxB[>Fekgflq%;qko;:Aw6Lfdoo,Rb4,bv„U"EA,x9YjNncFO,V+NVt%,3D%y^;0p6W%H[BR2uI#o(^4(h2H[MSTfaAs.zCh+O1I„U"D_ha^bL+3R+J_4m;5/hadH2)Rg*^.Vr=lc8B_7%Fg=ZlIsn%+eln)WcQ^Lf''w2„U"?#Ve^.9ZB;mXDW'B;[??JGtk/z:E:NVAA+CRu1apm=sNdyr/=9MqHn:jik\(_SZ„U"xVhCSzje+WoKN5SQDUAX3o?iD>/+X00Vuk^<;asMMo2jD-mirPN]XEyMa;SNG\3„U"MYEs?]PB\D7IOj-L;D^(Z7'D;DHqAt^oK(kV5/KwvCz&&Eo*Vx?3HPJ+KD]aJvr„U"L<^r9EF-/h-+;W,mC0f[KYK[16PnAp;UN:CK-3V;eckhh_BS6=Dcs?jZH\a-Uup„U";m2(NI9&h):8jMn[1Ms&mz];#u=;[QNH&&l/rB>%,bPqG,O:fqB=m(^*mqgxn*&„U"b0'$4aRToC&v[o-n+/TXMHJ:P\,yoATehIULX*&Uw=vBL6tPtgHW,dWWes]F[(]„U"hX%PES<oZCRAxqiYXW4+a;$tggjwK3]e?sO#%zTloXaTW84>8t%q1f2In)$TQmL„U"K=j_hEs0>-5SsRL^8jPrBk,JUX:Q:uIT6[bf.2:zfe3U?\Ff#T.5P)F[w^K_)yP„U"MPMbu,HMbAkM[;Eu\Z9]88Kr-__lpsFoOor8crhB:AkUs(ONMTf8>tP'<vaqi'V„U"Xq?'CpSI,B(=ufm%oe(^\<1uA;Mg^5d$&BiXw?&MAA?vqX_dABnfi.^0x?eq%,t„U"RoW*U<h,kc.?DH\+jMpL#cj_(mrRX*]tW[AJ>y%RVDP>pu;O(G?i9wg=BqLmio$„U"5S7yG;/4-+boQNRJdG:,T)P.NrIvEYio$xE%O#iJt'V$_nq*CO>VLSo<fY;_>TX„U"Iu4-oD:\E/y[-cmmPn(x_pf)#p+f59h0JXM.B-g3UW+R+GTx;,4ZbBwtY+#wtE9„U"H$Vb;Ewrw=W7<-yKRWE,Wn6$RlgR8t9qB)yX?]ayFTY7)N>hF-VQ)cquxlwrV\,„U"pr-u*pa]lbcG,IC$0M;6;X?#4ADM>AX?uUC9(g'KXD8M4PrO>edO7<^cRo/-;wC„U")?0'pV*C90(%KVJ.;1od[2bd+uXuZBM^.+qx^.w(&Au>]v=^(P.6M3PcD/J]90K„U"817E;YgvI+4\dka13^3,NL(nJ*=.\UD^rr)f&O>p*F9SirXjagoKv=s4Y:bFPAt„U"Rq'\Do&W]Ra/B&SU?'U=+#[WkkJ1I1n%v%oio7EAj7qEaxYzC_=3dEFfTz4'ufn„U"t_kE2e/%b(UzQ:yXZnx942'u16\2X%8&8xzOn?q?Y-EYP&b0?02*>iZEuN8J4^M„U"j(Oj/#Eqx',CdGscP:Fl)53W3MPV^M^zl9obY[+B]K(jq\pmAlJM_ul+>mz&3CK„U"cf6f+YgIM1_r3XdCbTj8RA=.5Z#F-gi0X\2-WvCgc\u*])IC0?K1<h:oS3&_:EF„U"_*=eGuiSf>c3ah%.g;S$-WD$NW>ZW]0\QaPvWv[FVcMf,Q,Tp+:lne^F/fT.y=[„U"xjc%i/ceu6^253.z76MBC9]7;V27&1;KxA2BPnULa>u7xb;.D<+yO<7?LC4I?D]„U"$'$HcJiRu8PEsZ;/*CAo'#y;2#kJgA'&oX/p4XBj%3gfC0*h=ub8ppR:HUJyeq&„U"X[GU-&Jel8w<rF7oUDElqqWb's<+Jc+R/8-EtKSlltnh?2-Xd2*$U;Zke-Ejq16„U"28?6<JH1Y[&XRVD#eS,_defTQb27<Topc0Fc]H0E.vn3]cG\I)Rh]32+9n>nG]1„U"9meBC,K2\\qM>w)52;-b$,8K:Ou(=SK/9Nv2$VU7*),H--D0(1qp>$?J/GVAB('„U"qbKf-ueDqSp5\K*7\#aY^38O9Xp>2ioV%]l_MpA4Clgp&\?pdh]i=7v=up^s4(R„U".QcR1FG[4vWoYL].Z.1>\62IDUui9D8o2j.PjHHgDOC;_RZ/,W)1b'WqY5#Jn=U„U"*0*<)?\Th\p0;Q#(=<O:du7>j,>Mbqkz-6&(%/G]Y;*1?)9Z1[blYXVcbVj8JCP„U"tI$YUN)OFkMLYtR;T;l[Xuvxc;(P^Kd&K>\YKRssdwTu+s/H5N2DT73:[':j_1n„U"h\3a'Id>Okl5ACheB,.lGCnL7^/2q'W/e8tTRJ]8cfTeH5=O#vb9b='Sr#3d#bX„U"QS=8>5FR-DgNY:;Cjw>=X$Pavpim>.2apBezkQ:k.wybltI%EE2$P$hXm7#Ngwu„U"%K=IzlC;n>?k&LzKoD0xVmneqbRaGBgPxikY7;3CPeRLlkKhMhhN>YxGwe$5%b7„U"U18XA4L6),'[qU<k99CUd7_5adKJAntY6cD_9UkMA7iDXau/vpW:Q9c56iI&TNA„U"fA04G+Gd>'77%ikuxrF)XP#-*[&PQap3wSDTwvsMAC+#FivUbEGex]\y4nkDG]Y„U"(tQd.1Fi3qZpospM^RhxwRyP$?gPEwrp-J'.g7ICckJ(Lwbx44th6vRWfRVC7d3„U"_vvlgRxJ4b%0ya:3S:[_y)t$cI&\-2Cae_()QRAH7;4D0yY16-,g.-vD=IIcHv]„U"'eK>jSBJXR?=3<e5>Xsl+cGgi.c=hS,\Do'E]Harsu42I^]_.NqZz3=T[.7ugw]„U"oDh8]jTFVP$o%JipX)VQ8'^Vg+,<93f?2fiSxWStCx+z7SL6WAYb_,&2a*jNS'$„U"-*y3nE(YF)*ez>:ZoxEFEV$%NBnE^1::TJlG*[*D,<X)dle;$RhVatK'Vfp6#eY„U"tn&+v<49J,%gW;,iAH'j(Gec45Sw;<.c[h$Y-1^=)Z>\evoa;4*;et_;OH-,]]I„U"%\E/BkvWul2+x'_FQakb-)0e5fd]QGoGQT#K#-TxtCJ?>\%vi;u?;TLn]RS)2?T„U"me(3Z/KvgfT4wg;2MW;m(?S*J\w;Ts3U8kPJM8SgRMlBo80KfRP//oD?Hb]s9$Y„U"h\G*W;[Bkx0t#i3>LD0Q_bS$]Rx2tqJJ]EQeF?t<0^%AVzF&bNsk*YR^S0;J5Zk„U"/PxC*Dqk;UI9'Q-0Z=bBU=M-8s9u36;JCV$OxnwC'?sID'hFtZEWox?1&_K*%lt„U"k;P1o%Ho*>re&vRS#VK1=H#kutVse[3MhfHT.ILyq*Ag1=S8waKmPTfNTxED1E&„U"1vnr,>ad8G%bvD-m_D.el?9p/+odEIY9qG(3aJ^Ocs)-+7[f%Cdrw*kfi*GH7(L„U"&]n,$jDD<N>'[R=cbmKaq2<K]f3MP/H^\[^*r<5RC7N5;7KT>QuO)EJ$%*C\'f=„U"N4qDgN]2tiBy^Jn$-l0g3?mYK6?If96h2DI$9qttcHGEvZ$MWh.&??Lar6ET9sR„U"%<^'kY7#34Q)9epzlBB6h$czXPs2])18E+fZg/RmMq2-*eDTNt-.]K<'Fshc(7a„U"&5U\rwa>Mkv9;y-<hKa45Ah]\j*Hv_$ts+H[O]9l8J^070[2sGUaNhRKoM6jt>q„U"B0?riCM)+'?JPHt;fiEK2:J\eTn0YlV?9'ojC_c,%IfKnkH9D'02vc[2*<H\wwm„U"\j5?s[9z+,&b(pn2BWVe:]WJD+n;8XSQF;oUhaHxLy8dhBSCbc%tbKh4;3m172]„U",t&mqyOcA/*%;kFxeO&Nt[7b0I8TG8]V=bX*?*vt>cZ&k/uYl</oA94ctPnSX2(„U"OBsNMcs7b:lnBGOA#KkmsUQpPqN;%QB;PSM^q_3]bB0K*uI[F?%[ryh?C&?denh„U"LCb2'vUe-MbKD/$xkL?G)0mvEw]N?j.%#z>vT'5r.-swM8YAlPT\k;^o-slwLe3„U"3k2J4/?D4RA%ee#b#GUz('JdBr[jEM;9aq$2+Jp/]hCVx2:iBbpA#_h*18YXMB'„U"r.n$p^Odrkr6/.a3QB?rH)ALo?[2r*kh^6_ZeOt9DM^wfW<RbiBnN4>NKXCN(mZ„U":8J]7Dab2es#)Ch,MrdHU)J,7WM+Dv^ji'l]^QS*6b=c5e^VD?qCdww_72rst)0„U"_va)+OR;GR7lUAnXi2,]2Oe\Dkl;'Gq(U49j2P>TuOB[2TA/R\zL<BBRXu_SYQ:„U"zAWdAl%S=w73]$Yp'uvPWJP,Cm59E\V:YWi/.FWUyS'4RtAa_R7#_<Vhb0e]Zc-„U"[q?E,1]l]rK,-IC?Hz'J12tDJ1KwFXIshp.1,\-WC38VL6OducCdBAhtQT>_l*[„U"J48EZcK\u4>8j)eF9OQSf+eM_A+y>tp16Cmmflqmf&qAHbaj+t/orqaVvs>f_b)„U"b>S(eO0mG*'Z*Kl.%Qcm;e3ii)SSa,2r\DXYrc^Z#mtzH_-jybx>CKNiA$\7qad„U"P8i\;(Y5c258,1&0wV)PYkoujR9<Tqha=j\A-/m:GZAn:#i40jWPtCUl3ok1Mg$„U"Z0.[2bWJ$rc;b=sZkU1<(bff25<6GW?Ewq4=R^K%B_7cnLoQ+^T>#.UvViSi_n-„U"+EbG8W\.CxY4jlkQevt9v=+dH((gL]\l7<k2QzcZjz,?B-e,7<N.'jmj.DF1r'r„U"R_ADjB:]RWk=j'Q*,eS?$]xv;d;UZHM(Az4$W3#\q+IlFQA7ReQ]b_]r(Gb=>%U„U"<N4EDDmhezfY/[o?Mf<g=_Q+5/d-#,:G%M'bT_71H%\M\Q-;Fprva72d^1QeXEL„U"*FQyO#]o#C8+xam'RI&ZF_v5#82vBVHA[-g1vi0o^]%\E.qFjijlD-dKu?IWg9#„U"y8YP2W)6c-\f'w.Q%'O2q>_A[C_g1Y\/2^Df3WxXZf)f<Fs&qw\j,2V>itwceH>„U"Td=QiYS&^ZuRRU,89TD$cdq+V84w\Ds$3>XR%vIqL($1ib[/+n5Y6=ZKQW\/9c9„U"4\wor3VV7&j8G?XZ*Pbk[$mzugj>1=\d)T%Pz)g&gN6;CUx-&x4(5Wii5gv/>p$„U"9jQ^'Bt53S[WJ[.T1#'djF+MqrS%Cw+8&C/S.=AB-kMJTH;N0snD.Q0Hg8sM?II„U"8a_hmSU3.OU7W;(TgHsBj]nrn>aBSTI+V;sEnrwM#_['gaefqC:$c?(7z5S8tiB„U"6GeT,>p9FU2pJFt_2kU[&n4f*uN[?jN\Yi6]sAZsqNQ1]0WZQ4?Kmq#pklX+E_:„U"?V(W\lfF+$c+).fCIl&*T[zqmUXa=E%:fJC<i55yJ'agP<UrCS%d%M.S=(0,Ctm„U"+]fyXPH:2(]4s]oHq]U9,YpGPg5z?c#bsH8;TN\4ID5C?D<Es5PhZ[\i2LoHX'p„U"ef(cl%Df[=b-I$]JecVDP88EtHT1i^5?E9)2]PQdpMNi+,eJ:dQ,/BR>tWvDCzk„U"og$f_F]$tj(Q>p%$jefPe%(flAKt5Dl?As=r0Gl38at_&3.OLiRpqe7u5PDTma]„U"9kG8?N3U<:SF2oNCMN>W%alVh.7o.qfE0fLKS&u\+)Czk9Mz_D?V\eI.d9Vl\/M„U"l&Y&O;X&u^)PbfYJm3-meAT_HDu;ut0p3>vfWJk9X.&lo_mR-(V&AMnll6p1apA„U"NC6slI$(v8U29OX#GpKpdMG>=bc(LO$ryE:<tT&[>\=7j*Sh&JGDm5ZtA59%XK8„U"64h:%pFUN:o)UP5ixiTVR,[sDsH++IcdQh-JG4Xr-,ZSi2L9UJLiNW[9=XPuD)7„U"Fu.Mp_CRN?s^3s8ViHFo&5oU93Mr'CVK3du\GZY_HTb(Cfz/CXZqSt/k1/R^i<l„U"bMx9#'\n3wRq9cn+0\W&CD(J,:mWpDK>f2_WgZuwv,RLCFHA%Q8[.3N(AKm$O>,„U"Qd3_o1&iuG5NYbDNgZ?AGgotDo-5kN3J18s#.=%:=Af'Rmbudc,\'j)Y+7M+(Ut„U"W3kqDK,/NVEOzOmlp-oD(]9+3kH_Fj+3OU2EC2=5Y6&ExB&l]Tu9E?DW$hVb0DQ„U"cOj3,qI'<76DEGHac>=1Vlt(nS$5_;e7E:-mv.#Wx5u7L.3L,2Wv+9IlP\./uKH„U"Ghs.Dqp?*1bI/0]4ys2]VWywo9AO+US4\QgC4Pe3)J'M'Lu.M2(5x'r0A:JXthO„U"GDRhaKNekzD0Gvr,X7md:CivIrR#k)4X?.^zJPqwekE.rhD]N9L6x+GR_g8p%cf„U"d'6jLd,mrj3gSH(8[M>tHS$_6a;mn6DRo9AwXC%:_R0-ZU?NqlrAK-w>CAEjCma„U"22GQ>5d]Fe6HT?nSV*Nm]KVBv3QTB[,Lg8O]LFzqOh6K6$Gaip_YL3(ca._<A8Y„U"7^rtlGX4Qt4V=Hjm:3HH8%cq'8vcvKS1RY*HMC^fCIGA_K]Mh(3+q3>pBMjWMhm„U"[1w+I+JnDG:<LlZ#C*<(>Z*m=)\Olg2/ShOwIVeo3,He'p>ubo3NxiBflNC$NUx„U"fI\$(]>[VE#s0PI-R;l#Lr(cU,nE4OWOvHwA^C?1,qF%I/-[E'ypmmqK3s7&7=]„U"J,1+>HYYi)mJ9hwh<hGOLo]pt<BqW]Ku&c><yC+[>O.t6e<*B[s;Z,AMna0XRjl„U"^9uVG_kqBBSu(Fe\0%1P-^SC#=P53,k:)pWtCKghdhJjTe7#=9;i\3bi54[)m,o„U"k=(Cc'^fh0)A#sZ3H#AlVqe++2LqQ06&l;V2rWTWgpr8\i,hv4<rSaKU2I:y83G„U"8[I82%wjkSBJd&&ggOUHDAWe>g5<NKusDtmuYO<;aMBeILI&x=RfjLpEY'KGO%C„U"T>\9lC6j-<55KJd%tojVIcE&p*/NNZT4rjtx7QUJo';Zz-0e,x%.-Zt/Qi2xCIN„U"P,i#ooR+Syo/M&q8-o4L[#2rD-Gjmp^+nKW't&c'nwVT69%6NZeyBe+$qd:lDsW„U"Lie7Icf,T+;^fNYXx&=m[*W4In]=FkV%QpIl,NUZJdCUQo_[rguTN-&F%cR:c[p„U"#PTcYH*Q>,t?eFz]_uDc+>T^=39GT^\+NO;*4u#^f2&+GC\GNiz:AL>686pp<Bp„U"ftaZ*SfT_cKhzL^Rwg$Beu:6=zN%cf=as<5gtTIZPj29b7c6d]iri3(,I5+MxTr„U",>C;glg7SHFVkRT-k_G'kjr.qpuB2,3E3SnwLg^8mJNyDK?4='wSRtJCIqtmzE'„U"b%Ls'(jPXNrL7(KmR)pZZIENER]o-P5V5Nf*aw4M_cO:uDEp1)Dlp2cA=B-r?f(„U"Oj/r6tyNkB\hrcxgJZ]oZH6>xfqJ_DM+4,D+_TiE*M,6f-a6sQ1X'BT;39RTP3C„U"DcJNVb>bZQ[%7_sX7c=MRLN>P7_qf]-e-[FQ[kaZmek'_clYe;Kfn\naK8+0mp9„U"L9RCSV(B0K%)DV7p*h0L0kf\jNvl(b26lEaXTB_?]e9q(z>ePmd>UWL0)6)Z5%6„U"TM(0J6NqQK8tFIb.+,mSO68IL0G)rXPb1j59j,Si.eij[B>'lw,EQaVu>wn\q)H„U"[RpR>xEU(7UnH:*61P:]YiO]#N4ShNq.Z6bh/hp:Q=\QfqQ0/wY#zQ1(<CguB-N„U";Wn.O?u07x>2P5DIwH*LAfzzMZrxjKKiY)AF,_+.M%$gu.Dl?;ogGltsN]t$]oV„U"yQWly0ARP&5VS5:GI6qnR$jaNQjg^F.N4NR8nW+Kh^R8<]x(OsPdZWghK[5nB;I„U"jdaKUb9DJ^b90X8Ip(iZ%cSs+<saJ:2Sqf-^0Myr>mPGi0=,$jM7E)GThP;1Z*j„U"[P<O]--$ZMmY(<Fim[qjP>%FhPsPT'Z\3aDmCO7x&<,Q0ycIhAR7*Jhq&C-h0-D„U"/%y+KF>ais(V\cxsgrdpXhHg6TG6KBaJ8FTeg^K,VMDJ<V1whyp<?#GTu%[PX>f„U"MH9hQN/4wZ%DX.nLBfgm+PIEOaQ-^5n>rc,ub1Yb805gtk'%mKJmths3?3hkMxC„U"GzE3HXtQ1<='omujgE<=krH4?X/=/\%m68/+#Jwz1^2TcHtbw'vkaOJhLKD,2Pr„U"4'1Wi<q]N+#N:EG&%:plYKuWNGm>\'L1Ss4,V2x?tv'd[KS^O(=y;*c<1'h9I+e„U"G?X.vd^]RKmg,lBP'[Y8gc<e?u4vv(bF_T-9=PBOhk.F^+h1z,<dhXjAhAU4JQa„U"vmhFyOujkHo0Pf%bF)3NssZKtC)jj^&bT'j^*//7rNNTL37VLuN>NK\4wdi4vNd„U"8+cPC#hZ.3mF+BP>[IP2dAZ--Oh=gfME#ZE]kLjI[c_Y_3ul:LGP7$Pi[5GWFj^„U"vhU$kE\qFCQ.UE_/(As/zOfEpDE,r-IDfK1i'e2J=s0:foi?+1n<<JIIbib'%]<„U"r#twF53,RT0rDMq_^H/-Yq2AFZY-]Y*(i.ZsN*,<Iy_[Ke\/nPyfR;Q0POE$7u0„U"&Hf<csS.BuDD_>Qm]Cc3)1gvP:?,cqdi4'2,mnbJ(UbTTMd&.jQ98M/e9q-Zx8(„U"KaRa2,5,.\0gr$\tpX\jfFnCoZmdZNYFz<f5lT8Ep_Sh]kkM&/dej6<V_sgU>Au„END SUB„SUB V2„U"g&\5D;3,rX%xkfl_Kw4Z136CA='f>rO:Oap=UMsj^l&XeY[dwsHvn\wb7$nL=7m„U"CHbLKb>F/]&$[>NhmCF*:#nRK:6Vf]^kPG3CJo4QaFQ114NMfENf2=NAxq6I5MR„U"bo<\Uqm6rGvC]a[/s-m;h2ln/Pf0vuEG=8/.c03X7_1/2M)J%+$ijY09G>k1-K^„U"*tM14iG+&&urjaPI]ebW<Rj:O4k#(Jm,8iAqM1a\nU#N>EG%Gz:a0Ccd.Exe083„U"H,EiM.fWF]43bh75:,DYXabne\Z_)y)poa$eOVNYTxk9)ZF/EpPg69,KwN(G:BS„U"K_e(naZCw.d5X_kZCNL&%/L?.q8*TrkWw[K;?6eCRLSvyjh>i4Wad:[ktF;C%P_„U"oS2^t,',507Jd;2.xIrYKDt7qcJ*iDN2Q(D8o+IUA64/wUR.sIGPOun>odR-NDK„U"sSp\,MO0)SlGo<F^*KqEoRiy5x,0p=bV[W-X[l=',q=ceQZYoLQWw'5i$e2)zcC„U"9<S(%vQ:3C/J,?'a3j>iZ0jt$9h)vckG;FDSaPZuA*LnK/M7y,I+xF8*VHQfx25„U">.p6JkBu3:y6J(3<o*QJrj6;NJ2iRsm88p*t6jW6Cc+p_Dm1<ry1mi69tC5Ekgd„U"fc^IUcN+3PY;E,3YIFF/-LOT_u'I;FDsnAw[f*R&8rt3,3HPkj%Z-WbhktK-d/Q„U"Km3Q]1v-_1AVe3?'rd>%HYZ4)xXA1>Rzp#FG2s3V#Q9+s7K65h/onfi[f3Hc;A0„U"lY5H2::G#\NI#_RAO8NTS?,yBfhyU.R*BjjjEXFlK[%?e16u:Nmv20bUoV$h1X:„U"JAFSSF.TS#UCS#Ve[_>B;N+h9>m)/6(HPPzfmYYvb\?5C4ke72.WW)cSNWhLg#(„U"4#wNkuDoQGVF6?R+W>g06n(IH/6Nq,BFRfuKMF-+60wTdZ>3RydttLI4>6/8O]1„U"sua]YfKx52=I'+([:\HgmI2$vX)T/n[ekXCNtd(5#Ojm-35q-34'TIDEu'Khenj„U"eHj9/CB>aE*wT#mGx]h7s#^pL,Bh9SvR.b1%;QmxvS;f;6ZXXe-slXpiFV5zN9s„U"[B2N-xMbA:%<Y/PpMsYXSTWNeORj.M^ulxWAb2zsp;R*bQUjV<5R._$W<BWEAz&„U"i\I=oahes4%>)ghOjOTTOED5X27SCWClKZ<CQPr7v(0(AkWF7*zSozD2V&0X^$\„U"dDw3e)nyW^_rW#[Aijd_$uI$u#wNqEs:/S)?Ry(n3*>U\=LidngNMd5o6l2^^if„U"9oq#+_95T,b<)?.KGQh-V6?JrV3i<ZWLL57a;oLX[q]Yr%2O9AV&VYzq?K/Xsc?„U"rx]2Rt1JF4lGr_[UXUWYbX%6vx?:5'QeHifY\DRzjY[<hZvEc/L^kxpBAns#vO4„U",\JY-1T.V<-VIJ67-H1kjftQ?)ew0bspL[]jJ-Ts^'1RC?qf%l0H>a.B8HxSG^U„U"%jC'KL/-][^N,s].7Wqq26>FB]VchF^Pp+(]g/-^#MZ#pq\vHx_kcEp1$pSvQ,J„U";M])?&=*$p'grFMebL#9Ay%(>TaS:Jri=[Wpk:euB.ray)'j^CR5hhX/2%pc]gw„U"Ke'CwaQbzm.mzMw2fU&l%V0<x#Kedc8XARH'CAxxrVrnL')un/ZD3Purlngp=0:„U"<C,N0L2bpi,-qijT8:T6L,6(J9Q't%;FLdV#gU\JG2d>'NxF&W9p-[60%Hn##KW„U"je3XVtYO1aCUt:WhSHq0q&D#Pp0,SWW[c_CCj'-[fh=gGYC:8S+n5bdOJG_-YwA„U"cT[Z:QQkwWTQ#qmpWpyY:0(]>u9,;T68>85R)<YrPLsUxj:z&U#>tP&zgjv.d2%„U"N^(u+),57xd;.nzr,i2kx2(c&^?Nbll%qs\ddR1TG'hnH-lokj3SATHhlhmipkc„U"oT2g$N]*0n*D'JJ-;Orw*1D)Z;ZXcrmiSrgTptF55:DE[eE3pXL^qqE*,xaZiS1„U"%w6I:h^%UhQ_0t#-Kh_Bsx4FS;=f=5FRZ;o\x3w+mTfhsmNFeJ:W1SAKWY,SG#H„U"V_b-BLbiDnRCdX54'rScu)0ZML9fI8vE.d=/ffTLf7)%YZ3S_\PuI4/YsG,W-n[„U"3H1gNDIPbOgW%PP,C_9sEPyUO/9#Zm/o3BP:FlS>Sd7g,7ou%[F2i^%6qnK3C)#„U"C8poxax+WR(MhmJN+Bt:(ow]>CSm5D3#Ih(+xTQ(YUvDG&Gv:0:F6=%t+ck:\F=„U"4x%U&?og7J=?]b59x)BNh=#lvN'JuS.w^3x?.sNNnb4iSqiM_amnxX'gHilc(#(„U"iPpa\k:-bTr3,)ZYqTBnV4gL1WNAC3KFR,%9OuH_1g0,rIU/M3d1,Q[scPFYWvq„U"Q/f=LU?9Ys2N5eTG2bK(?xVzk&=Uo*F02Nuf,=5HCWJuk*0zrV#,[55x&u4oCX1„U"UP<xAVG]\hAtOS0fffg*rKWY<t[Si>9plHcZBj:(qr/misZ6mTgl$hl1e*vOqP#„U"Vef(;q/X4oGe9,q#d/FYS+K9&f45uSk%pLq6,e?b%U6AaDz)cgjC)L7UexE'd*x„U"/0vxQ),PfpOxpZF2vhRW)jO$kWILF5hlng^_m]xn:T:cQ)6EY=4(^Mo-P\Lm]v#„U"FU^8t[J/CBz\<PA$tE0BRk#L*Rk31yDg#Z4N&<LR])&<Rmsp$Q]N=I\SD%tdDH(„U"$O-#1J+)c3iemJg6jlO9D#NWJ0rut3B[,P/4r.B8R%E*PbOL($koQ;^AC%nA(P,„U"AiPT7N2<)FGaS,1I8JGN-1Caoq?a#e(bLE%U&B+O(i4x,T)<u44niqc3dCVcfS)„U"*C(pqi)XR>u^it7%vL<]lOb*cb(j%$#\eXPNV-#9r0KlNSoji^nrgeiDBc>>^f0„U"J)^q:;6LSwSK</)G>6'Dm*edfe*$gv5*t:rc:HlQ[q*<fE5twE?9?9O7g](CnEp„U"obf>IyFr*D](Pm&'f;7(Nc^B7z.e]o<_cGK_J;L**Y9.s*>J%/y8meb3Y9fs]Q'„U"L_Qd?J=\$TEq;S/YfuQ>.Q7To&Nx)Y++-)rw-an%GYR_/-3jrhw3mD5igcO#_O6„U"bAU9gN0Q=/jqFF/dOZU?z:#]uD%up()%9%%%7-%H*K#Ek65-O7.%%%:M%%%1%#%„U"%x%%lfxz%gVSgRfx^);<>T]+7wCENx0E#]VK]#dP$8/lV>qispKqY^rR]F*oO*'„U"_)qR[#IvJxc174piT>UM,z&YTZff.FgfO%]_?5]l3ihp94%>2]YORnju:eV)BPB„U"35EqG1NoD7a6qID541xY3N2&OAEj7<dC#w(o5dkI+hugeguD4Acif7#n9HpuHZW„U"LWxp0qW0VcPV^LcXP*[u.G_sU4L43q5loklrVlLPF$rzQBTBgZZEFx6$6M25J0+„U"XoH(mds?xPd$X+TRUI(A0jIvNU<YI74lL0r:79SW2qvbJg<GBu*01ch2*YePRgI„U"=tTBx*;(f[#IkH5i<'tALQLggygJB-z%?GHk+mj2WFYPV,rT*$dhL0,3+4pS6qx„U"ZU0vAS=a*BL<&f\1^C=/Pblzb6DDF<V&w)6<N8<qquJ1B>.fkb:Y6^L;v\2DTGa„U"h71&&6L'$Y0ul?b&9s5JQB;CE+Z<$C]'$$2y494hx;(G<FLqZJ<8).2]Vae*1qc„U"dPB)YJbNABi#s;aKZ+f[a[66f&i_BL(lA.gQS>LNKi^-R^Y;puKN4,HMtiePIX)„U"eKszeCZ*n#nAQc+.1\QNP.'S</PYntINi41GY1mHE:A/eB_[Jl1>PdsGn?d\W(0„U"k>jJkNWH+QN?;16*%'Hg#PTPAD%C1xyVw)2ha\ZY0B=2Rr.3^2#mP-:j2Jir_a5„U"2KII4OV6Yj#qJRHD,Ms-66OwDRcJ7dsD>=iT8Cqrg#&HUm&xu<:28*i+]H;0<'=„U"_i,JsNn#^/$oc,rf,j;^8KWeexw'1[w:OV0eB<,o>doD)OU>qIj4X>'\PV*oD+Z„U"[U%u[ZlgAjy)1q_7t0ZY-4i?*kE+&aX%NV)>fC4mkr2<Or2Y=[/^P3L6)+DPm>B„U"c&c0]c:_g(N(3E71'gek&)g_\'TM/DrLktwTE&y,%QMl+$eNQQ0QvwY?8+P$2jA„U"4pU-nMMOuf\XXM-]n%-?0vrqTlY5bhfb6'xY)d+-24h$eLm6^,p9'=]L?WIL8XT„U"D0Mg(75M'Z-YaO9\Mmu.J0Mp)F)YX/uSTVr73G'F15lix3X'H$<3x0V\NS_t_eB„U"\auA:Yb^MLM>1cg,Dae%4\EMVEEMp3+0Q/IZQ:R0r1?eoxLl)tqJFF%iA2b3#.D„U"+IsttMoqgKYj:FqoH=vo&[V^pJ>'JJ3E&TbX;FU6VhE'^7*oTQSh+/lIOC$YB<3„U"-ES'ZT+t;_Onat/if)l[a'OQ:pE+WN0$O_J;0U&y<n\K7Q#w(vTFdXCI;9D2g<H„U"f=rc(cOxW(#LNb#u1wWSOH2n$wlWV\^xC#)v=^B4T#$I^RBL=AKd^h=MK<72q^w„U"KqQQhKH7gY5S<cL%p8_J;&pI:&=Y\?Dsqpg]/ZF+5qM#XDWAjiI9jwwO0I']$c'„U"9BAd+9/e8?p1%zpb42IatZ+RnI<kt#SEd%O+ZhkLA(3WmbLkPI8=BOa%us]dO0]„U"txm7Jqn6kqs*%4<CT:z7kID/)?Tv9YjPECX0%3ngna5_;6O:>>5aaYOQ?:D#[px„U"xKE;/#EFcWM>+'ri.k[f39fw(WnfXxvmPlhb7J.PgG0AUo/gj$e7Ockm=\0o[1X„U"E>(n)V,YP:lS5;V:<Z5+Y]p+4gWbKirUJc5)+h/,WuJ68*^G?G[SZi(+a4Hu.Is„U"n&S6EXN.n?)LR6ckf'XvO<v'MTY5-rU-1/U%i?_[]E4*8E^;C#PKm(u1^8vY(9L„U"TOil4qbP7TBx1RL?m'ql(6dxpCa&ej>l%$vioq,j<b2)>g#b47T\S'+'tRZZ$an„U"ApG4s3)=6(5/Ss/j't>J&:HOL/#>r3p,j/g\yP^#s6rC2/4HKF-ANXqBx-XFca0„U"We;u)#_yFV.IgI>YcfONm7yOAd__CM1QE70R9WF*?V$pEqbOuae,JMF#$$v8cn>„U"/6mT3[PTltO32]lR/PUU6S=:BN,yOK2^z1osw&.j]\YAwFL=M$7KY2Wd#?E,=6/„U"%T9GljyGwO6ZFYf-5DGRaN?G)'dMaIjoigMAn$^RNPx,VGEX0P3?45^+CuqN>]j„U"ohnuUn1M#n2qCBGrw,3/1FDp>$$*6:^T:0^IqAkjks-JSz+pH1g;r1\-K&S+GB2„U"YeTBi^k80$CpL8)1\MV1pp#nr03-\<gz?nS<9/y;]^l]iGwQ.(<>_SiGyTq\5nP„U"59AwdR>.Ivt(J=TSo1j+e-^H[%^^1w/-UGCfd)2/SEf#mx$e2K-<(s>cW</\BnT„U"_>2T>I?dY=;rx\vg4FF?hi*.?116IWhox)h%Q:^&uq(GSjhk.VP+4&5JvNKn;SW„U"Ornw'[wP#AQEke<IgQcT-ti,AIlUs.T5<qx>+LAO2[31UqE<>ZH%R-+YAFN<>Mg„U"ez:CrZb<5RQi1x:T^I:ofq57De?XgJ6TM5B4Ll:6TjLPWEJDd>^Q8^Qjj7;#bPd„U"/v*slw,HQ6'onhZGn'j,)fTe9GujWP95^hZD_7uJ-k(k$15E$23+9n?RNJrP)?\„U"htq'QVrP[Wb>NA>W[IiaAdLJ&&73:uahM^iSTciH:'(8T#DD1UQI0;#2SG2Z*QB„U"v_#OJ1ES),zAW-.v>_A;$1&s>%KMaN>-Fn3qJ<gf<HU,fBgQ1X4Zd#:'JxU<Q\R„U"92U3(OTlNt:gtCO?>5YxB9<G#cP)Yx))R#4F_)IM/EfixA3wJ1PuO=(TW]OKCO)„U"xCFldQEpZ0G&U[JpbDcVI/jO)[ZaA,j4KIA3Y+[FOfZmH71YhN8Wm$Db(UB/Hm$„U"nrx(jDgRHPqaZf_XfZOfwyAh<$K,BZ&4a8u5N_QD'd^zF*&jTAJlXz4,t&]EWNW„U"(b]k(pUY>gA9]PCwpz3WU;$t(ND?j*2<IKJhWNt]J3*?nMA;pk6;Z]$R:8$4J]'„U"R*&)81M1JLV$ZBus\11NjZmI=GwT]Yvuiauvt6de#dr7KxN:>]-SXBd/[yGzK]x„U"3woz_W3-1n?,B_[]U#JEghki_RPI#Kj#MbXog/O0nKs.=r2,t,pW<(EacfU[P=D„U"]M#N5Iz'CTo270B$vhHT[]by5U4;A'Qfk\2tC6COl_ZX.[i9C#64<T3KGYuVVl&„U"N(up%()9%%%%-%;7/?EtvAH)%k(%%%e/%%%1%%%(x%lf(y(uV%SgfxJdz,>BT]5„U"KsTIx)<AZh/Tm%$QU%H-14\ApnO)D?jhvQaO.[6X9amC^pcPXSn><D&t#e5mm2h„U"l,3.n%R^hKU7vUU*6UQL8Q(si(0iLtx/IqFFtj%h0N0#Ye]'7B/-Dadit=b(9?&„U"Vg-x'k>>rSoaELB'T4l=7+%%<KJQa*1J+85.mc)R^DnDYs8UiHj811=7:z1&ZT[„U"[Rf\?\9L?\d)BJ#.KVJ(Gp&LKC%ft?pC%akxVA.;t$.Xw<he6aBgPxZ9(#XhRdP„U"r'k5^Q'4'61pq5Q*EsbV70EE9K,a2T1B;-_uw&NS-?&AXy'gO7ddb9%#D(#/szC„U"c_;(9S.]qJ(3HX)4h2tlAnmUP_IUc[6]Xd#336HZF*(oVT+/Ry5;:0Ko_:X;FSm„U"OrvuX[nXu0%.=J+md%YAv^4lw[Hg,fxY-6Ub'7uqtEJt[\Kj#ut#g$q%f-;oYqr„U",yRNV)G,R_][$>N'hU#HI,<aR4VkR6PyES$fgU=2CK>$+<D\]tPSWB]n:.P.j?Z„U"e,9l$K1T%8?Pl&Y,04<kRX0uTtoAKu$MbNX1KJ)p<WN[s%d4k9J\%i8Jg_Ld/#=„U"aqv2(A?pM9A-?fGi9kj.ArE%k,)qA7eOwK9q2wu%yR<Od:sj<8nzo%o7TJc<%CN„U"6=VWns+#rxP1lYuj>&mP0*aJYsmKH]hKp$0Ug0La(\SEGZJhJg4sY.MfZcKxno6„U"h2VcNDzfEofrg^.DSU\yb6cr<oiYkI&s\nt/^82glzD+8?Tzi:w0ZCew\JGUP:]„U"%>zD''W(D*QRRU:Gn2,D9$,P_KSvv-=.\08dm*>j6Ie2ST/=Knivd(B%M$aGGv8„U"MHsZ^DD:YVbkELomp]0N]P4/X0S[2K3gJDkg\9=Q.r2QfgcI.$;>_'8w.7j+LoF„U"KjWUso_=]MMHp)92T%DJ9Pj'+DD6?PY_Fa]v?*uT(6%S.C1q_hAE$(#R8lkGH:H„U">7<_dI0da3J7C4fG&>V6lu%*WjoMS-OsOO\0rtb^58?Zd9kl3z;Z\,L+K)LiRMO„U"\-t:ro(&Ts^d=rwx8r=rx_DZU$<z'xdup%()9%%%%-%=o6CEpSJd\%V&%%'Z&%%„U"%1%%%%Fwjf%irjF%SVxy;,^:s'<U5i<h$k4,BY%7%]2geEDT+I%Mgu&jzG=3A<Q„U"JE\3$22uif%LnwgU5_mh\4*9&n]b*7b6E'n<?2-IyneJ,tZCpA)$TFdJ'Z,0+EV„U"_e)$,]/U?\,na+B&l<-t#]5*sl&gZ>I#-,EmujvJy/i''l+jN$nM-O<x0:$peQC„U"9#xV$'],Hy=[vA&DKV57HLrxJg?V1lNbD''Qdy)2<pn\-wmGaQg:ptph(c]/pGK„U"rJi_YGDi'1zCZa*duDi=<*qAp\Xjk2vVR>_nA*I;zt+Nq)XF5PEKHH680B_u;vS„U"S%DqM?_(_mnv\PbrN3MPo[xE#8:;.y0N1e'6ej/y:fi5M7qBMa$H6M6_>5nKVDl„U"qz7Ld#u77eb)XT&_m$b<Av%'up&%'9%9%%%%-%%e>F4CR,C&Lx&%+%S)%%%1%%%„U"%%%%%%&%E%%%%%%%%%w%jlsf%rjxS%gfxu%p&'9%%9%%%%-%E-+BEa.KLcj#T%%„U"Y'+%%-%%%%%%%%%&%%E%%(%L&%%%lnk%XSgf%xup&%'9%9%%%%-a%H*#LEk6-*O„U"7.%%%:M%%%1%%%%%%%%%&%E[%%%a%U%%x&%lfx%zgVS%gfxu%p&'9%%9%%#%-%7„U"G/?Ev?AH)k%(%%e%/%%1%%%%%%%%%&%%E%%(%I_%.%x%l.fy(u%VSgf%xup&%'9„U"%9%%%%-m%o6CdESJd'\V&%+%Z&%%%1%%%%%%%%%&%E[%%%c%b%%F%wjfi%rjFS%„U"Vxyu%p*+%%%%%*%%*%C%&%%j%d%%%%%„END SUB„V2„CLOSE:IF S=71AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Douglas H. Lusher              GRAPHICS PRINT REPLACEMENT     FidoNet QUIK_BAS Echo          06-08-96 (06:02)       QB, PDS                54   2157     GPRINT.BAS  'Hi. It was no surprise when you replied to my post of„'the routine to print text in the graphics modes and indicated„'that the VGA character set was at a different location on your„'graphics card than on mine. Different manufacturers did their„'BIOSes differently and I knew that. I had also known a long„'time ago that there was an interrupt that could be called to„'find the location of the active VGA character set. But believe„'it or not, it had never occured to me to put the two together.„'Duh. I get absent-minded sometimes. And when I first came across„'the idea, only the CGA character set was used, and since that„'is hard-coded into the BIOS, its segment and offset are fixed„'and the same for everybody and were written right into the code.„'And it just didn't occur to me to do it any different until„'I read your reply. Anyway, here's the same routine but with„'the interrupt called to get the location of the VGA character„'set. Also, I modified the code to get the LineFormat bits.„'This should execute faster. You will need to load QB with the„'/L switch and put the line„ REM $INCLUDE: 'QB.BI'                                    „„ SUB GPrint (X%, Y%, Text$, Culler%)„ 'this routine allows printing text at any pixel location„ '     in the graphics modes without disturbing the background„ 'by Douglas H. Lusher, 06-08-1996„„ ' 8 x 8 char box, CGA„ 'CharSegment% = &HFFA6: CharOffset% = &HE„ 'CharWid% = 8: CharHgt% = 8„„ ' 8 x 14 char box, EGA„ 'CharSegment% = &HC000: CharOffset% = &H4ED5„ 'CharWid% = 8: CharHgt% = 14„„ ' 8 x 16 char box, VGA„ DIM Regs AS RegTypeX„ Regs.AX = &H1130„ Regs.BX = &H600„ CALL InterruptX(&H10, Regs, Regs)„ CharSegment% = Regs.ES: CharOffset% = Regs.BP„ CharWid% = 8: CharHgt% = 16„„ DEF SEG = CharSegment%„ XX% = X%„ FOR Char% = 1 TO LEN(Text$)„   Ptr% = CharHgt% * ASC(MID$(Text$, Char%, 1)) + CharOffset%„   FOR Ln% = 0 TO CharHgt% - 1„     BitPattern& = PEEK(Ptr% + Ln%) * 256&„     LineFormat% = (BitPattern& - 32768) XOR -32768„     LINE(XX%,Y%+Ln%)-STEP(CharWid%-1,0),Culler%,,LineFormat%„   NEXT„   XX% = XX% + CharWid%„ NEXT„ DEF SEG„ END SUB„John Wantland                  3D STARFIELD SIMULATION        kwantlan@coffey.com            06-09-96 (20:50)       QB, QBasic, PDS        46   888      3DSTARS.BAS REM starfield„n = 50       'number of stars„DIM y(n)„DIM x(n)„DIM s(n)„DIM c(n)„DIM x1(n)„DIM y1(n)„DIM c1(n)„DIM s1(n)„RANDOMIZE TIMER„SCREEN 12: CLS„FOR i = 1 TO n„x(i) = INT(RND * 640 + 1)„y(i) = INT(RND * 480 + 1)„s(i) = INT(RND * 5 + 1)„s1(i) = INT(RND * 5 + 1)„x1(i) = INT(RND * 640 + 1)„y1(i) = INT(RND * 480 + 1)„IF s1(i) <= 3 THEN c1(i) = 8„IF s1(i) = 4 THEN c1(i) = 7„IF s1(i) = 5 THEN c1(i) = 15„IF s(i) <= 3 THEN c(i) = 8„IF s(i) = 4 THEN c(i) = 7„IF s(i) = 5 THEN c(i) = 15„NEXT i„DO„FOR i = 1 TO n„PSET (x(i), y(i)), 0„PSET (x1(i), y1(i)), 0„x(i) = x(i) - s(i)„x1(i) = x1(i) - s1(i)„IF x(i) <= 1 THEN GOSUB 2„IF x1(i) >= 640 THEN GOSUB 3„PSET (x(i), y(i)), c(i)„PSET (x1(i), y1(i)), c1(i)„a$ = INKEY$: IF a$ <> "" THEN END„NEXT i„LOOP„2 x(i) = 640„y(i) = INT(RND * 480 + 1)„RETURN„3 x1(i) = 1„y1(i) = INT(RND * 480 + 1)„RETURN„„The ABC Programmer             REAL-TIME COLOUR-MIX-COPPER    Convert from PASCAL Code       06-12-96 (10:56)       QB, QBasic, PDS        68   1686     COPPRMIX.BAS'=====================================================================„' Real-time color-mix-copper„'  by Bas van Gaalen, Holland, PD„'„' Converted to BASIC by William Yu (06-12-96)„' Compile for best performace.„'---------------------------------------------------------------------„„DEFINT A-Z„DECLARE SUB CreateTab ()„DECLARE SUB MoveBars ()„DECLARE SUB CopperBars ()„„CONST Size = 300„CONST Steps = 25„CONST Bars = 3„CONST Pi = 3.14„„DIM SHARED Pal(0 TO 3 * Size - 1) AS INTEGER„DIM SHARED Stab(0 TO 255) AS INTEGER„DIM SHARED BarTab(0 TO Bars - 1) AS INTEGER„„  FOR I = 0 TO Bars - 1: BarTab(I) = Steps * I: NEXT I„  CreateTab„  DO„    MoveBars„    CopperBars„  LOOP UNTIL INKEY$ <> ""„„END„„SUB CopperBars„  WAIT &H3DA, 8              ' Wait for vertical retrace„  cc = 0„  FOR l = 0 TO Size - 1„    OUT &H3C8, 0„    OUT &H3C9, Pal(cc)„    OUT &H3C9, Pal(cc + 1)„    'WAIT &H3DA, 1            ' Uncomment this to make bigger copper bars„                              ' Compile with this uncommented„    OUT &H3C9, Pal(cc + 2)„    cc = cc + 3„  NEXT l„END SUB„„SUB CreateTab„  FOR I = 0 TO 255„    Stab(I) = INT(SIN(2 * Pi * I / 255) * 86) + 86„  NEXT I„END SUB„„SUB MoveBars„  FOR N = 0 TO Bars - 1„    FOR I = 0 TO 63„      'Pal(N MOD 3 + 3 * Stab(BarTab(N)) + 3 * I) = I„      A = N MOD 3„      B = 3 * Stab(BarTab(N))„      Pal(A + B + (3 * I)) = I„    NEXT I„    FOR I = 0 TO 63„      'Pal(N MOD 3 + 3 * Stab(BarTab(N)) + 3 * 64 + 3 * I) = 63 - I„      A = N MOD 3„      B = 3 * Stab(BarTab(N))„      Pal(A + B + (3 * 64) + (3 * I)) = 63 - I„    NEXT I„    BarTab(N) = 1 + BarTab(N) MOD 255„  NEXT N„END SUB„Jonathan Leger                 COMPRESSED BIG BSAVE/BLOAD     leger@mail.dtx.net             06-04-96 (22:14)       QB, QBasic, PDS        829  54689    COMPBBS.BAS DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"COMPBBS.ZIP",4^6:Z&=40787:?STRING$(50,177);„U"%up()%9%%%I-%7c]<EtI7v'w&.%%5*%%%0%%%%uh)'%nj&&SgfgxlcT,]LU5bUh„U"H^#Bk0QkETTm,_+yQ+w[s3_a:l/i4j+g[j*m9clXW\^Y8\R%/fyj]o\,x=X\M/h„U"Rw/*#/(F<4=1ug&?j=%Be8*XF*dqx5A1T*B<lY2JWo[0b)3V%2t4'O&V^?KrFWM„U"t5$HW9R+,]#1iSeTX)%hhO?-2(/dq-NMo#R[%zG,I1P.m6KL>wEE9<1ROUQdJOM„U"QR*3Cj,W'co=u(;K04t?,<6fwuXs=+s$btWhH8]8BFtcjl-c6rP$HACjh:K<W<w„U"'POV2ULM\t6$a7Z=,srv7/og272T/uPFtvQqA_rD:(;Ov#9V$VNH(=ZWC[+Zj.f„U"viI:;nf/_uhb5qq4ALxdw)JN%((p_tp1r\oGo]C&Y:7iCiG5s\loFsq:qLXuP'd„U"oYx$TIq$<3utdYMBpz4<]T.z)>L4?,g:'ut)m-_*f4M\Iq10*=68hS[2tYitE#r„U"wk%FDB0xNFEMd>.hQrRmC5DFe_/jQG5Sn[pLu\ro-PDJxi;VGn/+I]yOa\blsX6„U"OLzHWbdHYZdW%t9P/v=9&fF%*vIOglptorXp;SB.Sg9UCQ(lqE60&uxsXjLmK&G„U"Ydshkh&q6mE3tc;SIxC/F8#P^+qgFJYi*d[<Ev8+nC36S*2F/(5Rg/9-Dq(u%p(„U")9%%%%-7%x.LaA&a&%%di%1%cd%%%/%%.%g&k%fhjSIuh'kML(B2OlKls16PZBF„U"-%&_osPww:_:207%SVRn8IFAlXo18=^_>6U3b\Bgs5,)dl8])7jY>:uA%C^u]B%„U"[uqgTcX#up.r7<7rVf>T>rwnxtro.7vrojxxZx;Xy%U/z=U3Un/7=+<kmD1;)s#„U"uh4YNvwNTW2;,<=v$O(4N#17HDn508Viqh&j,S7dDKcXA[w_rpHPetFnw)6x_$t„U";Z661PU(RWu$stV>.7xD2FRs,8mU[.rHK*9#l=KK%J2?bWjG+)3\XNaR)aNp<WV„U"VLLc2w9Qw;D?uJl>4rqL1tQmvNvkSwwv7(/u.(dmIU'Xb4HqnHrqu/V>v^Pm_YN„U"2NB(SVugvB::dhujEVVZlpHFVR.ronsTqw<)Y7_DR;D64a\7a2.<Q;_PqgWrH_/„U"Z8BK%;nM)8Wsw^8X$NF5pnJ-vXfg+nhj+f,?Hp1ormyj5(G)6aMJt>9(Jo(4mmT„U"\T=Q$71p:4'YPe-GjYk0q.jmGT7%.dvD/uO[^C>QiNd3ZxAZEcoj6C0]lsX?SG0„U"SyklT+[,baQ7\$tOs=UM9RDi_hGhpW^G[HU#JcZ-HiC,MdD#,b$tc_Wa2w<Nhz<„U"&hK'(KgS4d0D[1wW2VarR1iB&>iuKfZXksR/q5nq-bc1U2k5l6-A5kr96=t:.0'„U"IWfd97q3$3\t9n2Gx/j_lxk:8if;<+k,^[GN,0IMdON\<R&<rB<P3/U&u;^TMFa„U"D6d4&aRl0RBVTvtFV<,3Jf?<.jovX>9NO\1d6r(wktpinBYK2S;]vJTmt$vZHeK„U"R*oWHI.n$U98XFd\.p*X7a?a\-/5coY08lJiTht-)OSKgsi%;r+NUYnTk:Ox,NB„U"pa*QDf$h_?i.X?WWLaGuOY0;GaC1Pw2KBs-+x[dm/iqua<::NHt)JYnigQNq5P?„U",1W8-jd:$K&Z.vG\?':*4_;F#n/<49[*+_HcC-cpXJT3u1ZNhMoHg)Y4(-iEr^V„U":hmqH)R]m4qlK[\nsk\7]/\nCA^5&KixaiH4j8%AC]?&i:2*15J;b;tT1G-Vu13„U"Iav?gC^cmQPMj<OGt^hJU2qdKYm#mTrsk;qEtc2e_qZ5)>;Ww?e]'ALL]RaQ;\K„U"V4,3b3kE0jI[PP<X(z;\wIeJER<<W8Wp_5b+DWO)2\%a7d_C'\)B'n.bBIY:'t3„U"0*3_bkhUf<QDW[,Yj'&?J*BA4Wjq2SQIejnB---he#/HL#WSEAAgqLG^\]8^/[T„U"_zFf]*aR,*-;rK%<8ccp8]kZ)i]+PU3P$'L=Hp>W./tx%f,h3ST/Wt,*PHOuIc=„U"*fUtI92a6AZe.fqz=295qO_4ME/0uCzcsA/$UGW9<Y&>O[a.l0K*qyYu#;WWkgk„U"^U7.R\%G2#Q<b;22+$0)aI_ozD(256$tXFvtilo$&#+/AYmp,gw7GTLO-5&EP3=„U"mT^KwLHb6K'hCSlkkEQ/vY2N:s\cTon3F*QI*y=.C5v224v0rqK8jb_endL?goF„U"RmB+)Q_k1n<.<qeS(xW9\Z_0DN)Y>HmB\d##\-a.A5m2R42kikB:4dZ=t*BKQj9„U"A=\ADh[J_T\ipVN'KYyKtV6EGW&[x?gU+xIi>KH\0:30Q.,)e?9K/*4dvfKKXCM„U"4Tw^M>#,>r;%KKjGY8D^^&<:bPRLDVoj*%RWW,S5p2QG+MLkA0wPPmUZy#(jkY?„U"#I7Ms,UVmW[hO^LFRJsq98s2Y25AxsYYh)tXRkulN3.3eR1quW(^pWAOb0Lf]$N„U"A[HA_[qa)e&WvKUamuEjW^]nui2ZshfiXrVyqLu\B1%V;EYoDtlf'SoMsLGZECL„U"jj2#=[ZJg>ZW\fbd7/aE#&t4s(\.iof4s'Xu-DT).f)jTa<l>ED3iLa2hPvC%\Y„U"5RM?\W_F9&S'$#NBI.KEAL)8R^;-XPq+b0+1T(BP>57DD),[E'oEhCy3]H*n;',„U"b#P+FP1^fRZFD2ar\[<cQZ-T$^K;$0,?EU_T3HSrpwC\/IWdJ4,_D_ePq.tU2V[„U"e:4N0Ys;iE.\Qg?o/$Xi6XheriXKje5_:^?;QhDQ2m*5.djGs<&/JzSWB*W6Ji?„U"TUu75BJKZe4VI1>58?6*E#[t\QcE-E#m11<li$)%QeZE,f^n;K[i.1>LgaR9LSC„U"(y):o2O\\E(do<6o*(QYMhQ%m(qPQ)b&]r>57gq,G]sSGRMempITG9S5\=^Oj3K„U"M4Y(GL[R'H](RGnq8%a=:(uL[E[RE<p1b8QgXs*THePE/kV[5\_<-9G+$;QP4.;„U"-D#5S1MRcb716R4ZAm$j7*83M4c3oX^o23_Uw6XQOUPwLGP)/:jETZR'GUE[;FS„U"oR'dDo_USVj*vpDW]J]a^_y.-2=pC*I)<XJnqbirXSqx)s49EZPc=jJJ:O&he:^„U"WBxLn$f-W(GLzVR-&NU7Yl1bL<aCXNWCm_?R:&0/-d&.vBJX[4y-*#7'JK)coK:„U"+G[d4BbLT-=UM0In)H$)])=P>5&kYM_Nm9-,L)?SQ2eGNjZRbOZvR^<9Dk]73TR„U"Q'+GH7SG$O5L7t-60k*]ri5UMsA+oX=x.yEbn.H8ji]2Oh/BY^<gfDR&grJyBX>„U"N%]%3fr1';rh/W%X;y1[uxQZakNREDptSn9o.KMSngqZW#qSFQ<0PA[9rWO4I&R„U"<+)CB,%iMa.='OT/6_.'Ka]r=A4ECwGBuG-#e\O%VAGOJzFYs)j(N'U<:e7G%8J„U"yC8RSi'oT*z/o5^_gr?h$:d//vX,Dq]&S:T%;NCBS7uRWp6$nKICBEPI[;e=)[<„U"?/Oi6O=S9hC%A>.fZ;W4liphK6*%[MMlT\amS5EaK;/y9[IbZ2.1oEECE2y0)Lk„U"zE/*7$SmpkB1RpD;eQEfXylYd*:VVn&I7oJO?h_/K].8hd1dr%#UaZ[$V[(tuh9„U"aD-Y%??WBJ2;Rc(u*)CAmhlq8GK8?*taPg3C'DQRQ?ab\J88?h/IK;8f#r\q+B7„U"WmIgC[uM:uS-=#sm9wT_Bt_rBKLi/_Q>&]Nk8H384>$2w$rs)UB0:FI%Vw'Js.E„U"__0Q<OqU1O$JhC\>kd+(7F7Lh<'1t3^eI^';LH?qEFN5Z(qef.vEJ,>j[=$wpne„U"qqH?H#M9#)%vPl-#KaE?H=+LZ-*%qncl)u.Ij\.Oa.B:-4n:[OCrgZ7m[%^.Wer„U"?v>DnMx;'S0TUgg&e1?G:+r$T5?KsIzS1?Y);[_2cJj[GURO$B9*N&CUVJaW\sk„U"T%'^q?7W\cgj2)7-;;:VlrwgD#2CX<h4h9bf;F0/&2zr$s5b+\a]-5;&5mmtA[N„U"e$DYyNF<Rn3H*-n_U[jY_=&*I;+]<e_&zZi_45oT*eZqPDSC84PePMK[8f4f$_m„U"2BX0K7PkFjAG2OtO'4rOuB)d6qP:g5ZlB#miP^I?=F_DO<.mCM(nMay87>*YV;%„U"*nYLnVULV.DF*0d#ZnH4'W368?_>Q]MjvT9/\m[>8lWRx'cBaaXuW1V1f:xNTjG„U"Ge9E&q/ID6XHqevm=,+6/CGx+C06&^ekZFmmt%;czdB+KmSe,poS'S]Tc/9Q>W)„U"#0;mYz)YU3K1H(-\qOV/+#K,7uEn>*0?kOe\=A=FH5D__x/_%5hkK.,JXiRaU<+„U"<'siv_FN7FRZK'beI)7S9N_hx9F/KF]h]%y-X;I&]agF4CtC44esBdho9$Gwx*H„U"W[\2mcegb'9M7D+4RJ[iQ')QH%mQiI^qZ^6+>xaB/#q24K*g#>+cSh$d9&)\+:6„U"cJky\8I=1XGDkI*^cy:;/r:WG_,xgK;R/bQ,JHEz$*_d<M7+XUBRZOlVm(<^3Y5„U"/I,/)fmXE5NjPDvu?nV,kmP%'m,/EJ'M-nq[\Kb(t^FO479d=J([XC[uw4oNoN*„U"LEIQfK\bfSU#Kzbk0R.jH70N^?kZf=_sb*9dNrT%\cm-.r)eehzyyY)D/PQke*k„U"l)[w(R+a-D43is<i.JUlRi6?+<4V/jz>Q8OXS(1=T2ghM?F*Z5:.6$(F%UD^t>g„U"&72_WfElPUoW%[aR\CLkJZ$n\jk3G7JNB^KR(I/QoO:h0dlXe/#'Wa1pq;%+p*F„U"7QR7pQdKMOleZM)/MY,9G,*V8*0X/b1MQx1RB]:e)9)52NDEWdPKDqfMouqV#Mg„U"3rAedN%l+c\i0^-QsTK8K'nwI6oSdDi#U:yZ-amI+t');d8f$mc_H[)ki./ziv[„U"JM-TDVHV(#j63WNn[0:.f7QEF'djR#mo%s3CodhCqbvOOW17hj%YVmgdFps)Xom„U">H9cX2L0e8f^/cch\)f(<NDG/&nMVT+Nv/E,J>?GzJQ28k^ZJ-9Z&4)p5/i%0]2„U")CMJQv[OU&TF1IsZE*nM:c%9rAm5Ia50h9IOD,;C<s+.9\<)?-j15EEpQOg;nU;„U"'JG%jK)z[D[57pS6JC)gGT&^IZ3jYR38/*u%(>ym8cH86X)5n$mNU;gV&yB53nK„U"PWuuYG7CVN,tVQ>+iN?m/&d.Qel:39M8H]\?QV3W8WdG3R57c676Y:0NnmvWI:)„U"b<&6n17sHBtLE,\q#fw&N8x')(4e.7A.l9$&hK.]7J*-gA]VvSI>F[A56:mnYUu„U"?S52#m+RYj6J((qaq#rN<O3dhv^XD>qCgZYlF0T.3g\5*%6f,p\c%oLOMfCZo[Q„U"3E>1onlHb%,>:/8p[mdZ?6ME%PiFng5'(bsCk3IiHz3fV;(LKj9]V[R2QHQadw%„U"<F3/qJBwu5k,,d$N)?=p+WbzvIZ)$'Sn*u2,eq(MtJi^lOmm$q4OA<z/kt1XIWP„U"82,sZ4'X=JK,%Lgof:oius7BkU45oED[9UE\&9-m?o*9Ks1:kJ3(H+PGp7(kqo[„U"u2JOfE:[^'630:Hx2]>+w&TlPg9Q'+BE.w^<#oVYmACx*h0$7)kgH^FhgjX;jxV„U":5)%sv6<&8:r,QdM4NQMSe4V-FSGh]:X:;%.Douv-=krPuM[d'\/L(CIPdmUD2G„U"KjrGXEW:'aBcjWk/wR&\R.n/Wl1JgWFQu#oymj55C&v%AkyKS\io-RPHD'/PK;6„U"o<zFSL87l;=(5JNTVm-[GcaS=jslZq/rF83<Lu/?HQK_YB]rx9a(q^L:]2P_BZ,„U")%5WsOzTYmq<,9\OZiCo1NHbE)rM_Lah/*%A2Ibof'^.K6PY%]pR9*#W#Ti_,yj„U"pPyJ2B$.5m45oRa>,+RQ>;P6W#.%FAu'gh7_m2i:h*JiGW19(F\_qP)G$zLQkri„U"T(v/)KAh2x2p,>H.50/^Y)1%kQ*]5IY,<<5CiQr0:4fs9[f>;lF0DOhNK/KdmOW„U"DsznFO>R4rq:mK<wyU:g6XOXw%aQZXBe5[0hNJ2[b/U'%cRB65)ymhCzR+,X7>>„U"0188XQR<-pbj/LY_%*61&kg4WC'qRg/5;+%>uR2(nIKq%d[(cAM10PxO5Q)&%N$„U"PFr1PFBhU/7$=U4i\iJcHi'TB23eYu\,\:%MH.*jC7m7.cqR&]SMLMCoWpg+Dq1„U"qh#Dl1vGg>U_3'Egk845\6#g_Rr;q*.tE5f\f**69_Ei.H'Q8Z*YOS3D9Lk1kn<„U"F('rEPVZQl#bFRcwQf4wEtQa<GJ_0<;u7M'MnTkCiusAm7e?SKd5%?[>h(%XOSO„U".ggM<oXY%iic_KU[w;Oq%Gx.&>k1&+$vlL**u'+M[(K5EOmIGDT)T$HiUi7S,/)„U"eXh,MUs;qecI^$KWnOjfR#/DyH%QR^3Ted9,#6/0iKJ/;F)3MvjJxrn3,4;n9nR„U"+K)<:R02*z?9X$>Ig%9C.^Q>[w.GdQZYeekSX1qre5+qL=gh5?j?Rw6XF-9E1>p„U"86b0o]'oc'si4'NXHh1]v?E,A]M+lE-d:VLk[g(jN8zZ^(0Q:jO#A4E%U1q1-T.„U"*>4pu%CN9Py4Si6\GG8ryBRG&kC1]AR9blS9b%*Yf.1PJlMmkdoV(<>faF.ua_n„U"Z\Pt5Oq*/aajtK*ucy[I*rRVzdmdAE6&IDJ$^i5m:b0%K-QP<L]EQO>V4e_$3Ob„U";hlL9%i8M1;Yi9ve$fN,EnEIaj[*^3,N:9*;Wa8n#vfF0(->rvCvT7;_3v]H(T]„U"^KAp-*PFmeKrN(ayUihQDiPQqH&a7/_0'9SY9M4XPj=hPIok&?lMeA#8EC:3W:N„U"WRIT_PGuU\4uu]*xpFOG?MgyW88*-8%t6p#gDy[LGa4K+yTz:C6jed-oeGA]As.„U"LDHzkSEoA?ek-R.MfSvJePjhAhDgyUE1e9/aaNc>V+JJ[P(>$EWfZU:sa.PR'-0„U"Q[5do,udAsM8[WG[_V+)h-t5#fX(<IY6EW3/-P5W.w)JqLTKG21Pv6B1HZs8=2+„U"^7X]=UWBqw?QGu66YM'b>zt7p$O>H\'%N*aj_^P2G[Iw?S<$1,C6Tt[Bb'+-7ur„U"%b[GDOUklm;AI6DbMKZuZ6N.E,R$9Ri8I+C=u6cgrM4.65X)9e]6VpQ4t*bX8vd„U"NpM4FvxiG:B[Modi=iDq6wLBs9N\\PGC,rI-oaaD[r>>oMIFJ<;qc,VeiOUHRE)„U"(Ihf6jd'aa_1T7h-)yvmu0hVV+-&=73</$u=:=:.5X,G?Z$/>nv6P];6q.vO5)%„U"TCR6\*0>gUJu/so'GO8jK66]qG<d^/H6q8,W3C7b%KJmcsKdW1fQ7^['KlgOx72„U"fXRlA$B9]%_dwfL$+)yw2zpmYqs<e2bDINJ1kFuD3ebT=jQ,EfdC2zZ,N%z-XyA„U"j.s11lf%qh:)%6]3cfS5Sw;cjotD;OF5)=K8$/]Gx^Mcl7mX#X\dM1\<0;m5^YC„U"<G/O>Oe.TYbsg:O9b:t>P<>M<3G342v?nsgMYRdH/^EW.mAt.*G#)O1lAT)hsu$„U"Qiv_AlQb1S$NSuvW8G#\LXk(]^4_O3yuD44&Hn3R+J=aaCcKC7t.rd2wl/7N&Sa„U"#=q8MPO/%#Vay[3*^%j.'R.'<4dVhokit_wLh9Fi3;,L&]V0YbaErB']Tu^?4)7„U">mNZX6ZD78he3N#Xg?BY8O0&w*TuC2Lxm#>A;lirk+c^*c]>X5Hd?Z[-'RH\3\1„U"kH1;jj/IJ[9HK<QdzE)APiaP&D4[,xc^itVOfsp#v:AO0uB.wH4pdkXw'=YDO-C„U">)2w3sYE8HT/sjF+sgcSAZsX'T:qBKn49>jXNe=_RT9n>*HWA/B59ocB\]j(Ils„U"sktK%)Y2tVYD2;g5h^>?'Ev5Jr#e-wOh[vGxP?x_tTPfZR.j5QF(/AZ-jz:wZfE„U"b*%?GepE#CO\B'Ywy7Zq7ZW\0wrU-C#1KISD0$u*oFPmFiI]I1%u$S)Z;6r+XWB„U"ukj=0IM?8Z\1=h#6TFq([p7fLe'b]I?m'qM*7XOJt9>V+A.IGbOfKX;#li5?3c3„U"9&1<MUL2:4rw?HQh<BGG.BsbnQD;uh=HY(e8y2xy\_-<,]$/\1oK:0%WNO><Z&J„U"7(XS55:=X%[k#Zb+%4q7COaZGVg==*XbPyKX,7cdtkuf(1*Fwl%+bsjnv)/.ALs„U"FUz-E$oC?Zu>5q,r'mW)[9]*6bNAIa-UIGm;#+<2:e?=y*s^*CfiRaPo(*qFo4L„U"D1-N?wihOcBs<RET^cjJfd*q95[tBl(YW>mq-8=I%_I68LsfC0W=JMh;FcZX,qg„U":<n*?pcjUO5&GUBlb&7S/;958a?,5(=6qnU_o%dxnxLG*#(xi$*JOuLgj]+Q2\p„U"Jp/d)Jl<b1At3=GUSsU)uic<<4UDc7;5$^X62.uM:$lQP1V&]K]JK-wQ#4EKBu.„U"##P;H9K1t13XN&DN\-AEa6z>F>Yiac044ZCE7?ygV)kUp%H)>\yE1slorcEP-Qw„U"tF<SG$->QP+\gcY)M?NHwWhZ,;F\'/0BfiiNs,$_oY'n+k,*)sc^/Rg0t>))1k3„U"vn6MUx[>C'P)GONgqtaWV2MUKdvOALIbcnU7;abK.Sf+F%][NBRO9,IScy%oQd%„U"7I(;i^u[spR2:2vql8\/J98OYXjnXx\*VCFB]dv\8:#B0ZW2L$=.dcwmBeR/47+„U"45SW?<QkBO)[si;%,4=FH1'0\a#U[US7E1VfiHM.MAUwpb,Hi&HY5rVHTMl%>,P„U"/R)eE\kiynl9KS%c'%IHrAh%8f7Jbh:b'D2^u[1J/a5s$sBd&6=%bQ>I2JzL]J$„U"ot1mVR8)L01t9eM6:3t7g1uJ1eKY=:t$w9KP63Sgs$rgsp]o;9)t,Iv/ER3D#/U„U"?ly'bCGE,_9*VdP/xu^kI,n%kdnX]Ki.bG<_sxO7tXuYsCbzeV:aSW&%F)[IyYX„U"Ly6cxTSPDN87xT1JP2IY.'Azde%Po,K01LM>cpM,cJIZ])%Y1Lg>(KqmFF6=e-r„U"EwCm=GoCLD+cN:;.fj1CswOW<)gh[AN31hK;x*vROZU88-](qEz%Iu]S,Bhz\Xu„U"DIWQjQIF:ejW6o3t+x.Br47N1Pr3Ymk)FSf+xKD8v?j^C8BP*.wJHvo-t&%BM#:„U"R?#Juj4t&P17KO9]\JXLx_kV\>Z%2m^*TsBOR/lTxAt-Hr:v;eHXp:wdrB2-Mli„U"NvOP'%zZax[]\HVHL'[:?CFp6H_7BPlKf1CMWiO)vUP8yp-q;jLD?*-'?Q$&\]t„U"'1ru+/HXMu%I3##*TY[pePx%9\qI>3nj'nO^x$rj-k%%qKPM:=n^k0tBJ4PhbiL„U"L[[Vz//=lfv*m$w<Wjoss.t$xN*2[OM:_&]JJ%yBFV\AuEn<4Pjh9IN7*-iss21„U"XEb&Z\0-tnRGJ:Ck>/gMu'eB1Y&iZ$hFR+6L%1T,J+/L#(Kh1=-tIwnR;Y^>Q(^„U",h=X6xF1s5\m(znb'I_7lb%2n(scRF\W>)3rHIt6]fTgLb3adD:hL5w/&_A01_o„U"vHX;a+()(o<Kf0+LneY7-O\OI#rPIRjMMo3dtc\Vx.P)%XW&--KGO'7*Kx0c&5]„U"(_fUo]v9KX&D/y_NwBub4\G[Ea$m0RNs;AB&r8)Li6eT&D\;o?Nccdy3xl^.9SS„U"ML3?uJG%lO(eEuXD+T*6:PNj$-_SFq?0)jlCfaN7z8G]t>pFpiR0C1eb8/[Vg.$„U"t+yB]uqU;lCB_R>C_em&2BKrg>X?UiBogn]NX-O[Z21<8txZh_Ra(c%ap4(on4V„U"v9<>tw)zEF--L?i#h3ytIb]Ae_\;XJ7cJ?lQ&+1&WW,N+=swM_qE5]BQnJOt<c[„U"E-eTeH\AQiGDXWORjq4,#TUFA:*_m[fF[cY3IL:*5o8e+(=wNIjd^7)Coa*Q6*A„U"0IYg&.2*JVAyVsg$Y+[/kk,Jbbbg?JIt3,a6fGhDDFu)]>h*MkN0GjKGUCkw?E<„U"4$Od8q(*]X?$NK1=J;qe0Qh,,(quD,C%OTQXUT_;hdI6:ZQ15aV81w:/55_Uf9U„U"%)%rI8pO='4*#NmPzAMbtekVW$Gn/ZjOnK*0Vsgh)zcmQYETT<T/6bfg.6xFZI3„U"iYL'W^Ht8g&\s)opcnbzc5khPDg8\zlVlxpI.<jYSCz;&u<),4[*K,IiQ5b0b-[„U"&Y53#\Ui&&bPxG'YYa4jTl3CcKB4dus.ANXXS(##'&$hyUbU3[%ab(V.IK_Y.oQ„U"e9R:-1k%k1^U6p[EQcH10i$$;jk)Dc_$rnUb,mcj1ocNcCV/4Bq1shb?VlIP%SK„U"%#TPycN-M5_nhgFE:FY)Ef4u87U=ATev5/\B7St*4)GkAn-eymXLtnV>\o65u^3„U"]nlQh8/pW.Z\ZwukZ-^4XGDU70zHw75$qII,2;pO[QA5[L,8lkVZHem*fARdab)„U"wh'$/UAd(h(NGlF+V3p>U.2a=(6#1IB-aQnS.6:sW]Z,8pcNb,+,0pBx#mU4v%/„U"l_,Y,uwW8x*GTg&Izdhl;YNJyt'WIO+7_Nsr^6'.gudi7yY8+_HW;^43OML_y6V„U"b)5*eI36;icFsUU^28W.0We_K7n9t.s%j2Q\bbSC2QPI:,,MsF:AuvC4tqx(Ed*„U"r-mQ6<W9_[et:$z:1Q]^'TJ>7:c3MF8UAGiaGpBy(%''n976ESSW506Z*bSMk_P„U"#Yu0GT<Q2j?)HH>[%&5VGI+Km6da:Lb$,4\(zR/g>uF=SIb7n\+,6$Zamf^'4:p„U"i&$DnX&Zgbp*dE,TZ&Q?8M/5nJV;jt\D(c3\(mNBvdrG1HZkl?Hb&en&F%A[fj^„U"2_oORW59umcrHI&/zE1ixq.e8.<#8]yYr[8?7-3T>eX'P*TKSFANEMktkQ2P>bm„U"Tw1dIio2eW5B,mojR,qa[_wrBCV^XrEjA=4*7[[jF6.6^4Gm$Lb-]4/(4(*G8[N„U"3V;xG[4bm-jZbwc+g5,Ln\<iH[g/]?y,a:DCE/XYa:O>k2'-P,vhrWx0+=bUS7Y„U"V[Y6Gd0vBl-ZuF_g#b+mLYo6Ixjmt14&geU)#nImXPZmFPiFcFv[$G=0x=DB1dW„U"/G#+GAYQ$j<1tD%MLSaK%0SU\t4#l#?psr,[?(_c?<iF;vpRkffIy/i7_/Z^iAZ„U"\M#:vvMsFdiUVCPpqfHI(qYgd/KacV'g*,stLS_NLTg$7;l9CtW:Z2;2i'5qG0o„U"4UO-,SK0Vu(kGb;B+Sm\m<I7a?rTGxq)6lYoFa8<1E)bXD>;X[\tE5Z9J9=POYZ„U"5e7ZH1o^9onL(D/:t]873OmIxYn9S,q%)$u[&'qO=_3UT\rUF>&j-6,&.AE\>k$„U"9gGMR[_Gud^[:?JilnVW&i-00QXv?Qq*GxnB6BpIGoTPT';i9^*c[EPy+=<puwF„U"e&2NIuhT.g//haQ6mL.nLd.GrI/v7PEKjf)wk0ABBYwR9GNd/'N3_4p6RX=L'26„U"wgUOOT\$/;N2\5anmpQ#O5+;w\S]nMAR(XFA;>UyzW7V*)/,2gug2DRl&WSwhD5„U"u]LH/a>#8bSo?7PGtR,6p=b$kN<=lDtZ>G_FLRVZDS6_%+%^;8[$::6#4icsj:o„U"r5TEB&ni8oXEi%*-5Og%u>kV]5:SAloZC-hhKOeErxa',?q\\K>+3.Z$0FcLP'/„U"-iA.Sq7=T%AjInF<+.-5D)Rlf7_8bQdrqgMxl>m<b'6\Jp/#<U(bAIYlG5zSY?r„U"?OF4vVo?T7)npaESUu^?gswF^l#1uZicnef$d?IsgW8OK88h&RZ]I+AC+3M4+7/„U"*BF<VyJNdHhsEMoaHy)u*Q\tX)*L_c#8;RL*UIB]lACV,QSqV06G/U,T+k<3r]f„U"8FCQn<iPNm6UY8f$,5h28OM6.S[\[q0-.;uYp%fFa%6)D6bCGA#7(>iOQV)p*?M„U"c&e6y]DGRSG9rD/m=R*l'2T.95Vu)KK<8Uw2l[G_ShC:8eOKO_*TH+;+7DKuPj6„U"h)_-c]McV,b(sGDtb0N/W_Wj/fkTf2[*IF5ib][0B6DpRtUPm;9o,1daoRS+,bd„U"p5l?^0\cn-*?10T?e9%ANCRsHrYxIW,[^_qKas;<T_x4Xp/UXw(O<WkqoooAANZ„U"FAS-pP,N*^D\N^t#^BI-7]9FreKPD/FC'eN_'E]r6kMcsZr4/Afz.Po$z.Arv=F„U"E?vgEO.w9bKl_YOj?/D8/4rLc-V8W*sY69bh%Vi=HV<4(YMe\Da9n=Wdpl<6*mH„U"Ids'e0-)cxBjBkD^T.zgbqt.M%C.L&>.?WXY5=RwioGg9f6MH:C>P\>+M+$*F(*„U"LEpV3:tjHoe-8vJpKAY>qEl$*\zXv;)68>by*x%mk9r*]Kep*3Jkj4ND+5)9kr:„U"i3.#6A'#q*v7YaO]He\1Vfw-SAco8WVqiT,LI7ZqAH-sl%;$[I2gWeU60+Dc%nw„U"j<'b=Z'0mp:EjH\CL4_xAYok6&JFmvGBF=K\'43pGhs4g<+UMKXHjLt+>n*vYOX„U"3pqou.yA.oMa4bq;H&tPYxMpXGi6]+:RJ<C-X<42kewK+b\JY=UgrBXk&:W7nyj„U"MpR2U\&D<ukp^yrYWPyX$:.[06X%Amk8_r1,RFZ;CIG=.^mK6D4ef*KWH?6#+LC„U"r^X-nU'_U+l\s;3HG^cX0PVIX:c2OX=i:p'nqXemTh?:0Sfjk=leU6u1Z/Ec#*$„U";r:2BZqhxWT/gIO#n&bk?ITrd?rZLRJ'.iSh5NZCY5S_lFGE:>;+SpSrhC$LF1J„U"B<5%$U6P4O*%5m%wdJ%WvXO:,u5TUQ'Yb-MS'?13)xA_N/>LmHA4Lc?hh\Xvph9„END SUB„SUB V2„U"n,R>Nrx9f,V#y&)e)[I>UlzIV\X06&3J_5M4v#vqA;8qn(ed7fkEev0oOp?A56h„U"-J%2u-3>3VCG?4+)NW_Yeyq]]cM'7Z.4C[N?4Rs$V4Q:B,-mMf=bd,37w+Zs)L%„U"Z8hvagf6GpGtpGp_+mNada6N%D[BWUD\jK/;i==SP/DtlD)CgBM-m#NV1Gz<JB^„U"L]2fzQ/7,*<:s&Q.a6g'G:2MrEPIRT3ULB'4.?iqHYA[D6j2*gQ3:+gj==DZ<p/„U"Lw1W]/i5i+mz'MuaHn<teGXWoo&CW^R?O['PlhZE)':if%Sh7]siHLq,v*t4c.)„U"B+Zf-(0[4lbzF6g$X^[3qf_rhq>k(nE6QYG2unIfM58YLV-kJh8?ICxb]H,Qb*\„U"EW:$8;\ADzMHXa?[UU76eoXj&d_WSAkje:BG43R7%Sn2n4UTd6W.Q1C\IIsEs$h„U"UdI5Kx>\+UyZ'3by=*$W0'H'Arr8xk;_CWsSY9d<at+HRtU_[nhh8RjLsxaPTFJ„U"VXCB-ME8o>FKLp<ZfHH9-t=5W>h[rbE-5.F5nXM]S8sx5Zb#;rgbGxiciSwdo'7„U"Y.Z5lBHuLsf6>cuvyjMixEs]T)gX:*$aa?Q)k&X1<:lkl/>-KQ61&GEOIxedE9/„U"ttYP\],QYSm1TmXO0Gr^IxeeI%s1OQeBTYrtwI47U,<<sqk71QYh+ZNJgr[\Ul7„U"fyd3[\1qAid'Rb6f\P;d;H4rGT>)T0w7md-^#ewJM;*s9%$I'dw?>yt:CC=epx$„U"ilCM5?kErNb-qWYld%4c*bUu=t>0sIyfy;%+4(M_>kK.1eFZ9WcdMs<#3<:oFf1„U"Im#RfZ'uCZ3Np3e_'-]AY?.[Xl[TEp,Ble2-6$7gSW?Js$K,e[T0,z2Cu>^37Nk„U"IW$1,]$_gi2rR,Cg6'#AURJQWlOSejPMdR81O9;[l/C,$=*^,MJ+K7Dw\vg7=F,„U"Q,ZxM[>DiISCcL2P2mi.WbCAZDb9HIS%uu4Zs)2jFU,8^u%183a5Du/VUt1[RnW„U"G[#04-7L2V%(:<KOw%iR$G.W3X-/jLbu]o=D5O8Pma)4Gf$NOb;QeQfH[\krZsm„U":m'bHt$_JH;l4k*3Gv/p$BFaFP(?0T)fswEs_#EU[$192i]0/YNRR0UqRE4[u8v„U"-Ikf_KD3kLRsNBNSjo36_Z#cRk4]ii8hpH$\ik\C4VJa6'AE']_Fc]rKM1zfEV1„U"dp0PEhUR>:cwjkWWeD7t-saTv_7dn2cURHMpY2pT9-,u8eqQcRhWUVqehv3c4cP„U"_b&l:,\S)NkUZ4F_[EGCSL&&BV81S4sgQoGWHA-=MIv2a3)74#O#,W455L,HPd)„U"wPd/;T#Il#/^JJDJjOoSyo,eE_#a>8>R$.MvV^$:Ro:7VW3n*T-<T')r%?M<D%6„U"FMTr[t+R-bQ^Vr,),/^*rWCtIrHya(D:iQ0a:SO(#r]&bk,s)R)21PNvj]H\2ob„U"mJmN&DN=X+ddCa-u)pYwj&amhW4Kfm3RDsWBc>4Ghk;^\SOMI1_WYw<RA%Nv?nd„U"FR\tE+2MmE?B?8H0Hve*T[d\]FB.WjGu_>2?\k7\no25VG)hD8CZS6YpQYcvAoI„U"WN4)glm_zXER(5.rpw_\F*R:I?aW+Wc1CW4uO+0M3Z[3:u&o,L:H9*\e>[-q_=1„U"\[1X48jJ=BV0?U0D>HGvA\B'Rn%4SNdBo<8#$?0vjYTngmoIsk.<I)O(v:vKjXp„U"7O35^J8v]ie-H%AL0_/T+MZ4^T=/TLuu)rlCNz1.djNP+6sHwga(/LQbe*$=o+,„U"*T&f+z9f)>R6$tDxahDG;V)YJqhWl+^V,8570YKBYL=BKAU4:65_I%m&tLGE'Ie„U"7o[5v,'WCSAw^oPKG)<C;t4qMfZc73zWzDqat5^wU\CZssf[Y>39zpb_HKYPYaZ„U"Xql_l6%58(aReWI\k-/e?YhjzeU6]&(G=7Rdq1RcE3D5hre_<S36>sHp1-qxQN;„U"V%NMU6r>dH5(/O0zXlFYJR'iz(bnGul_tN2Gal44An#OjCU;akv;E%1<l>QH.4*„U"Tlm:(>DH)Jk5-aFL7IaTG+rRuSt*8]t[1w>;<Nt\EZx-FXD/JJh5;+R3V+LVrjN„U"OdRZrmrFngC\L\?%l5),wXfUa,O'3-C)9j^TnHA*?DHBYc0<eyE_b\k^h7nX8>B„U"xl0I4KT+HpBuncZvnoto*)JDh&#*oV^ce<=[g%'5BX14[H20^tO#CO:<XIp1SZ5„U"_r<P(Rp>WJ9?-kce(R=?5=N8KN8$^t4*J/#8mQ?X2eY%0eEw:gZFvKVsrv1WIT-„U"U6qi^Q3<OW(M=2;Mk[Gz5jcc:knJq/Z/oLr:hF[-#:i<q[6(,zWyW#HF<I<Dl\0„U"bwd6.)o]+fC09FI_iwhR>:VUXn[fWnx25bOs\^rtpv\2dUp%cXFq-5A3_k7>6w.„U"bAEx2L6lcI660mU?;L6]j#pgB#KG,$22mo[?W*BN#lt-:p'v3JD3f>;#j#kLum3„U"&=PZcEf+kNqvS-QB/7lQ5=UmLqCxNerE3dLs;EplmIfRxdo)mALLQUe6TtW60Jn„U";UpTY>asE9u4V-dU+L0).LjY?N0U$'ROpB^'[)4cHn3NV,b__>eco2fq^^di'po„U"\><aLDkN3l-eg+QvVe-\TCif<k<3glZD']TL8f-Fy;5^Sh(JuzH?ht-d:2bllls„U"-kv3G?w2Q2?^AG:h%K>U<%*DRdLo0?)NjtXS$]GGUENvGuct'5^C3#,RLg,bCIa„U"Lnw]d&Dl<.mui;QdRfjPCMi%5b-*eoa:;b[6=_2-%<+8P=[t<R%blD[Ns;SK456„U"h?prEkDJGp+nwo7?1uM/AM&/S8l2hhVZb%z>bZ^w6\t^jvM]3lIzP*])_6Z-LF-„U"GHY&vt7#9'lJXLaE*-_)/)ao.(>4h_pC5PGQq2##hE\QU8h5>7T'Bf#)T5_ST[X„U"NN9Q]W1oTzPJP6Tszf>(mNsn3CJG-(qU1?&:::.dZv)ZI]M?0j:xo#8P#*GpBi<„U"W9Bh<2.%uZo4%:B&IM>Q=e6pKG%6\.,lx8*u9kB5GPtQ<LyUW-x.g[erzj.aj.=„U"H\Uz=chah2i+E'x'H3?4<(X2.274kTPO$DpZj6f1oMo$m'\UMz2;iZ^c%FvZ3-(„U"1vZ'3lF^j,Kp;]CJ*lT.1+jM5b(UG-^5XtzpJ#g_D/e3%J\Wc'1z\'<PoqeB$6&„U"CH$nL,8qqx/qj<[lEC=]Sfp_t7<?3'4SQ5b2IX3*-JG-k:BI$5o#GsFaR5<+HW8„U"OL-Lx9N2C6]3Z*l?qk0sRNf2L4D#i?P\,LMC0Ro/(HI=1M7sXTnh[0BA+Gro].6„U"1njdbK8?8e-VLIEH][93EQVvX:So;]gwPekQ>6g[yRLUg$,KYPcE-GUF<VrVgdK„U"3L1zh7Q7j^yJhnE33&DJ3uJkQ'LLo%<*2BGwdR#*ouR?aPW64V+l-v9\jyfC6k)„U"3uXdtz64IeG*gMv0DiaOhRI?gC<Ok/e9HjPE<44]Cq=Ppd\Hj:L3MbMmLxR$/]'„U"0Zw6$cj%#w,(&IH;YHNYpH,;%HNC,R.:D;pFcSW:Veprmr#WnfgO%0J$#*1L-In„U"sH^]A9sa.:k/$u;22P]9%o8p4Zac&'pQVGP#Vkg#9B0_\:5R[Y.ZiP+x3k,ZoDo„U"H^N/t+awWfFL9JEqAa#a7Qs^lorW9c$J0mDB^nrEdO-w)__Z^%IlT(PuQ\=KxvI„U"ZL(\=hf.p'8KCgCh_zD:]:?0]Ec#C*HN0yJxR,4V1[MQSu3g-[W87l3f#.&_RH^„U"Si*1xa.Z^P+0K\Us$ktlJxoFfBRiI^2U99bVH;[^RwLYw+G.<>#lv5Ve(''g6O6„U"gJH3#E[sjHn'-)LAA>I(*_?='oHOTvXECmAh\&&=Qw[Q,6Pb=64pD\)txN6W>9-„U"2bC3:C[O/*$d=z&BvZF[g9)dPwl^Hj?lWP,L0cujmHo)do#uDs(>Mia,t.?dwZ-„U"+4z#G,3jl0-V^[*prPFN0eE-%y]yD[YO\>0qJltH3BffLv0%,*LPwHPBSnftvq6„U"5($EJ03w[%Et_b6:bj[BZAEgKHSZu,-_l.&OVj'IUCNwfXb((i)H43Y_q<mxBQ#„U"P/0hg+z8R_Rt;)M1jJ#LM8FkuW*SZE3nY1,Y<I=cdC&bj4x-^/uiuW#'^.C=_LU„U"L#C%?nI4VRp]M&:4]VSxV\$PQV/k[\DfDl-pO1+8SA,e'^UlHrkO7r,^s+j&Tr4„U"il5\1(#FYZ65IK.j5K0p#F/mcC8^3vuBh#U*[jm^LK0vurw&7/qLT,#V&8GCjEh„U".%h?;h(4]+qgkOaJ4pAYK;)f=cT?)u86?YB+2:4RTFT<W2UG\Z>'m)oc+?%[hoD„U"5Y*0J/6asnFH]wBik,<ZVoAHZToTs)V&=(4H,mu8v=vgVUGOD^$+p86_/iq&-[=„U"^[s[sLW&qd*TrWH]v8$4MkHe18+*h;Q/dbuUX>TlyNDWq0rJP.Aa+[2k[v8\s-Y„U"Z'T^[[5M#:U8he\^Q:l$pax<djvHcw,F?J&EuWfBZ4k<:)f6Fj%:DRA).fCJ[C?„U"tv9e>#vhkBX^Yeer^ExW[YO2rt+jbr1Lo,S7);>(uk$W,(EoG2UT)t^_,/bFZRq„U"Jv$.t-4=pti1mI;HyNlGtMlyX\TlU*o.P'f:VKmCo(4;uJNxIo?DJKZDI(C\\J4„U"=P$X28ICe*0axHKe&C&;54rM4Kk/iqRcv(+6Vy1p\$*.WtuO')m]/dq?iHz0j?\„U"su;jae:o3Xh7CJl/Z8rnt0idcou:>^7KGnSiKROoT\)<-$/1R))B<5%F*=Q\C8I„U"dEJd%X5v(er;KG7fl$MeYw#rGb11qOFSD#-<oi^F4$2u:)4*#q5-2D#l5/#NiQb„U"B*i)SnD)K&(y56P]\t+b'iN2C%-Z(4mZUSkgI9-p4\'3-\w6k87f#OfwO^e0rwO„U"imHV$Su=cu+qZV_>[7*g%KdP\%BjDd&q'^Ig]7actd>rZq88LME\99MQ\Pj=_K/„U"$3:xh3m/tf)#/X;>ZFn8Cd8qpXiUYC0FJpGK_Wm6*6x=29%Rpc#Z3UkuKhrrXY;„U"WSuTtT5-Vl^dp$G+3mL<nMrUW&tj,D3nMKSbQ1UrSdUkERds3f/K<H/a+KYbBSi„U"kk8j&^tCvQ'NS$F>ID[2_H<(6jxD<\m:9.V*i=S(L*tum8cd.Uuex)=?)QBDuXm„U"pKAohxdkzdHL_j7iLUJ'_AVM3aSjNHN3C?:x8qX'L1Kf0NgIKDYd5/0fABf/([(„U"/lt<%jr?4^hL+(BQhYg70;g*QHMAWZEwiQs)&DXANxJ(,WnWlmo,^ZVW7lrp_#4„U"m6Tj0<mR+dwa9t?[144HAWkg=KujM##(u5nZN;*5sn;wjqS'm.6<,bQxtRLch?v„U"boLX#.-wO7CO$P,le;WE:evtXC&N?Ovb]Okpv*cBl,3mL4#J5]gszP#NA7/kw-^„U"_/07Ptyw\wZRHIvB&xu.oB?IwaSZ_QCzG)_nDZmwbK+X5eBdB\8jDCBm:g5r/%#„U"Kr<h]RLki$4o7%9e?OQGYKToF3r4?+;HAKV+ql%$7a1wA]wguS:S0sJ;D,I[_uT„U"kljaYnuwbatv4w2$%6R)=0TTFT0()mfAv,HBO:o7pSZjl\]5%V;DxL&'K3Tt4q)„U"/JWjvH*NwhAG%^[)mv)7VLP6>DAq2#-cTXMvso9]ZhPtH\<Aq8C3-US[F:h2<<n„U">fgPdWrud8n8VPGnp1oX*_;IJ.)zB^Ra=Ud%de,)tHU]%l]pYj]eR3_nO%Qg,g:„U"oe&hGKqdT,^bB9RU:tC4%kmb?OrF[s&Q2-.%.._E%IIIIOIaO_[Dem)#&&fV2SS„U"SIr5^gr\7..)Xjf+:\fr^;:>XDHQCpkJ2.F^Q6eV$Y[bXg0uX4h7Wt#gHLzzdS7„U"[0OY<UG#^V]EQPo&?H?e4:#I:6G1sU\(HEn+$Srfhwn2163G*M:',\*q3+%9#<$„U"_RGC\h+O*:6\gGkw(VPwt\<MvCMy5x&?Aj95l*n*$bR&Ct>RXcn\yiViGFsD8'*„U"5/LoU+^t+ScXyR&i:BO:PF]s]dr]OR&\5B-[ODuSLX1o'HlJs&-1cBHPf^3%$N4„U"pSW.rAWOnq(5<DFh,%CZ(u$;Nl.p\G?i47^i[W9dH(=Ld;lZYx]aSckqvE?J8Q?„U"MLfiq7P.7YW%cxS=ETDDSN3^*7kX?qg=AQ[HD[lXuS9=i-Vc%I&&k]>#YAvHLPO„U"sjQd<(SGm9nQfE'kNq#[>T21hy?C?SeyONuvX\&Y^^>fEefwrLAA?P9IVo6mq][„U"D3:5Uw0N=i&>RYf3sKBR%m4dJY:la-MKFHr(B+vjta,+xmu/Gq$tNx*EZf03N)J„U"R0XepLqegMZ)IQjp39cr<D$Y8/sB#uNhsn$.)VMTz$'dBlOP/hgYQFHFzW*<5a8„U"'%C\wEl[+)5Q,C8bfVhak#bs:J%mAF%\sFysH,FSALkHAnd9-]4GQ/E.Fj?y3C4„U"sCKK&IdP/P'KM69)\2VfkyF5*Hj3TU/d^mv%kNhnu89QAO2QZNYCj\27F1YCN=4„U"m9c-WD7v15>sI607l71LuYKM_],-[0\\rjo%aDjNQIl7M*k3n\zvJ<[cL2%>$DD„U"msWatD*>ptocf4*ei4j8ZBD[Lw4?e7si9^bis0^PgI6-P7m+W#l.oiie'b(9r=g„U"7_%fNX6uo.ijYd5)t=$Tzl.#yxIbU?ai1#osqY#dJY>cSoqAH7mRS9SY8?#I#.t„U"_$s=Dh--\1R[/RyH1)n%Faeh*MXdrcqC&\>C^^U_Kmr4Sk*=gET;ig/e]$Oq^q0„U"zk9Ms7m)<j;9eH?pGYwQ0Glr3w3p8?MgIXw3JZw2.k<YEmUB'fGPBar,i/Z6HV)„U"GnG'b;GzxoYKe,DqsZI#.Why'35hvRFRh?%dw+]Sq^nkAcOfw>pa82O9c2VF2>p„U";'Le#f$B53x)c]d<gT>PDd\IV;]pru31&?$ks-8]o7/'OEG-6XJ9<8EaU)TpTQ7„U"uFI.O&c-AhzI),4Yd%4wVybj<$ND0tfl:u)o9IV[0GkjRQhs$Jyd/PvrMtX<shE„U"87V>yMyUJ,E49h:f\V(Eka*3;ZThOrDdc4e\+^ZKLt_N6)*jX+S76qdp(Kk<dBQ„U"ai2R_,jH?gwIB#ZMN0+W:hP.At=oJ93Io$WB:A5vX(Le2]Hkyo7xbt2Tik\*uK7„U"lGpV(kLQk1;Ztsg.K;5BTe[YP39X0E]&d_?uMK$fZ?<t_GqrPkcTxU7F6vE9?lm„U"'DfU^JHsa:Ge,jN2jj>#<Qf&5Gf2AlBLzO;kX/H5?51XZKWXntJ,Kp]pRaa?#LY„U"4-bUhQ%Z3gk'6?6*MmDd(?b]G7CE7MF<X&xIc]Mr;B#X3_M>uFDET6M.;fIwSVc„U"/;mRY]xm[:]pRmtqG>Y9]I<]-UiT9wO7l#yph'JDbE=HDp,^abj$V9WRwe*8aGY„U"/ok(wPA+AScz#efh$*GYXt;TJ#dd\[f11^ov_kTJI2OV#CM'5f(zU]20?+(sD7I„U"S7*vq]b]x7H7-WoNqY3-jXiVJ4p[C^_'KpWLwBD0HgULgF0/Z1z8uNHVhk^fLrI„U"s08dsl*3o'uWfPV7HU2a6GZKOW\<cm95Ld6+%=%fndZnegr(+S+Ie'hVAhy)CR&„U"ruw*n2ejj2YE,-_'&gsqT>knQLSX+3XP')?w6ZU.r-qLbng[F6Gu9.RUKDNc($z„U"pk[dqd<S/r?V2w8]N]w9;iOKN/&;d<DtY6<G:$>Loc>KImxwXg>>qxI^2u=OfAY„U"ns97qxgoK8Evn$;\UmuvfSjE[$&VCi;O(&a.=Q8TjZ(n)E[%\XjXmuV.%M[r/g$„U"b9f3SgEMyVBA_li;E9YNL2m=M8m+[2_GnL3AS2f]Y4U]7/;Am*Sz:d2D5o[:wBZ„U"qb41#r'v^qM6/.)<7yJt*&w2eGM\Ni*:,?:&jm)s/jR.%Np3<km(,i)qsEeWTfl„U"CkU5<hsc,prq,\&1RK7?-<JtV$/'Jt)BF4(=\W9p2C4_*KPcT.MmsMp,sZKF>'o„U"3&#hg]*v=SmRQSZYD/xUOIuJ:DgB##2Z$,M-DriI$o3#;lKl&FI](VRHmU=zEG$„U"B^Bg1RT;nkA5pl;/.b9TqORI<WQ%:_e?4=:'Nr[+uHNOB2H:LE?Q&X4YV#-2v$X„U"'?ii(gVTi+QaVxK'34(0?eY5bwnHJ]nFjE'k.5ns*f\Jo74><+eZHxBp)=X9+0Y„U"HUs^29LB>fl61eHz(1P$aCc/2Zi])/qg9jFMFRH^a:/;jE,T/E7W[E1eCMGS[Uc„U"JJE*Q.WVuUK7O0N%c^aXb2'LbYYf;UrHNA'5%XiI%C\1=%H+kQ'w3%W*Nq0>[T+„U"1\OkL9/9N:9sU:?FxJLt+e2oi_]Y]:tu\.(o8\_%B<V09]QwlK[<Qd9r#g7Jc.&„U":XLyBE2-48jw\C77Oo,?F1-EwR:Sj#.-EA^CLC,iCX5bRcyHk9X%<T)[FO&78O[„U"B1eeI,e2?-g[3kOcmUj]bv')cBvq]L^cbu0J5n%.0OYvtzuemFuw9*8nGoL19z'„U"jBJ3+;KUI%wL&++Mh&i+#%;$,3Wi0>7S#,4]7a^6;VFcV;B2<E:R(RS=\DIZPLI„U"0Xda:MVF3YQ%Kn7[-K'k'n-eco:*eN[:oK\&EASy$W)\EBDN5Df?y[_2TjaQkFY„U"^JZW-gewWPp7VN'?qDmc$-Z)\3b83_WP+tPtt-YLM/1T7Z+?,NKEPGC$0r7/7CE„U"f+*&[u>W/p?WZ7P?j*=f:1fi0stpw?6DW'ZGl-TJ;%,^BgACFn54dqH'b.i6]=M„U"6L_,j.cmSn;B2f&))ZrYPt'$5E;)O7Aio=g'r)*X.:j5[)G)vi>;R:Hw6[[4Wwe„U"G:R0Zi$br(=,y.W*2V>dablJ0<f:br6bQ8L34#>r+%.2K&+0X4ZQNYbY4G>>n%3„U"dr1INAG>t#[U9rBp>\J]Zl2'14*3;:_6eYKSeNmU?^CG'*cqJM7d^$T7E;;;q*/„U"Iac#61i/Ix>IG<oLAfY6\i1(K'IK^p9BP;Hb3aLA)s'^1W\MNkp=A&*Ik9Eqg.\„U"3K]-J-P7Szb9P8Q,O9#o2^&wMZO5S#3kd-oIe\g%YY^E7kiaJ_*YaM+8fMXbsxC„U"D5m3K5jTOSV)NEOj5eER5E3Z?E^bMd,JEN\R]]C*3jH1EK9VbfvveR/69)45eMh„U":\jbQ8;]9>/O(e[D<Sv/b>qhv&;:Qe2SizmX&\/o11AoKm%T]PdWKvVlARUv;7C„U"sDF5u<pa7k1NY0jgZ*O6#NpdR+m?FSrwmCV+_b8PZ,m1H5jJ+R^ljbmPEJ+vKxY„U">+>dEE(BAE?+u)H%WACBle(sJRee\?'Cm#,5tp_CLU829G&l'Ujz11CLlT1U6L<„U"4AmLsj_mpG/IPl^_cD6t0h(%[_9^O-tf1Is*73vGn_ssW/F=2+*)mu(/ERod*v)„U"+HZOEIkW,Q(d'>7cuXUmPUnLqSOo_;#95ksa&\fFy3>8J]IR%f*Gjs#mL?Co(1s„U"AAd_Ic*K:[ttbQ]PO0%8XrY\AJKm?dt(j-\Khao_sO\Uw(Kkin0->?Mq%E>VmTe„U"FD=5yR'd+JiB<1&oTb+bRE%jJ('DX6*P1Gd].EDzpg+bH$xDBJQ)e8UbW4Hb<5O„U"N\\*'KtZ:$rWNx4^Yd*gjtINm^8%\WCnfCja4>IOM1<''h[[g)[>-+#5ld$I,$4„U"Et(\_])947w;LQu[B$pm$Hr'+2+u...0N0FGGtGl_Fk*0=Vr7LtGel$FhlW6Fhu„U"WvtpdDaGi?iZ<lA^CbMZuqBb.LtnctLoeRul$HDr+Krki^z&(k-8Mv6_Fj5+gLY„U"DpdMuu6rlfTk.7MvusfT0?.uPYHu+D:qHc^3FN^lRA6#<KN?Zq'>f>3N-OdgSgo„U"+.k+w3sTu^r3AWP47=Hkn_>?O25ycYND7rJJ.ppke(,h;l6dgG*fRu3BOdi%(6^„U"m_phvbn0\XldW=+?5B+KEHiG:lC%8+i+8.vTZ#6&$f\WD]DQPlo%Q++G;(THUN,„U"\t4GDZQsPkoRf?*nBTpQ#fuvA^6RaTi4:dY5Mcl5Qk6+M6#L<KUZ4KHjGY>C58u„U"k+Jd^p-oPNbtq7NCq8Y+7H[SEq[<4ZRYDM=Yk%MUoKR^FwgBq5Z%AFMn7oVX4+k„U"vcbHd(FjZjtP.5G#)AAG<'x&up%()9%%%%-%>j*=ED2cxz%c&%%%%(%%%/%%%(g„U"&kf%hjSuIfqTa:Fb;u(1SP6C6W8W%8mI7(6PiG1P$W-#Id%X%eE5P\$mI+AA*'X„U".iG$65fp7^X_<FDti0tf>%5GiVYqaCj_V=0uPdnt6v:/U#A3lrEJGammqKLbo-Q„U"DRe;[nHU<Z>AW2+&%ldnI4oV'QhrpV<Z/Gams2vyyme-SfdrnI4Vugpt\ljiGAj„U"a.G5&O8FqT'*R4gUBgLBUR%X%di2\2$yj_<MxgoEPWQteN;>b8*FcG-'[K3q#Y4„U"I[*SrpXtVgMD:YwS#OYFSj9idwP(5tD.&vWeR*K9Z#di2v]Air=Qm^)_M,kq8>9„U"Jay#RrRu.+zg'jtPQeI7udu)Sa/cTrhM?(8h6k1?a:fAE>%uqxTZE__u;=i8vz#„U"8,([0&ubQ*NX.j\?#;#orhE4l?re>4%up()%9%%%d-%g*]=Et5/m*8k[%%a7%%%„U"/%#%%g&%kfhj%SgghVKLR=k;TaNie&bvuB?7/3Htw<,G\2.1Fpy0\W4e[%0MFCp„U"5Wsl\Ith=d=6BF9mc0CZO/0lHG.G5f-Hiu?DxuDYNr(NuxXwltNuXxudxuXYNq#„U"N<uVxCrw.q4MNYB'f[AvQK;9)dsPCNeBtEdnHd8TNZ'x/Tg?*i[f5qtvLnMf?BN„U"^S#=<oZ7b=Z6Wcktf'rqeW<h*Hc0dKdzh4F=N/r1b7\LONHiYa5lNmMDnXfA$64„U"fmBbU,0:8iP+*4Hh<miW\82$2iLdF397j2p__zc[TT.pWsx>XgnuzWxfhpy*tkd„U"8?iL>&fBXPj63rj;9^*KbE4nhD3WH?PJktpbUOP[-N_A9K6+o4r$fuzxx8tAcfH„U"WnBfgwAku;DxlzZw?w.0]S02FlkSQ,F:MwoCSk,kypi+>?5a$f/.KsItjm,o'Em„U"v=Prxj$'x:2UHG5S#^T..o<Yjbpe&<p/$LzYUCT?joIMpO>Jgiz$H;Lp(SsysrY„U"F2t<*nK2Vkb$ftvr4GpvL+,i5:$4iGoH/F8MPP55C[celuLS;35s;Gi^OlowI+l„U"a#gC]Bga<-Sxz22W?,n8bE17gtwk.6:;COIHP8(NkyCau_N&z3SZo+l$GEgJDGc„U"$^f;fmmoetS]:Nv0drdbZnSNPh(TdOh.S[82tl3YHmW5Y7>Kvpj?chU;2[dZPF\„U"q,G(i,#THEWuQA+SpagWs?PWT4k2)bfqKPI>tpN\D#M75Q[7tmyjL[Ia.t_,Os\„U"KaR2B]SXskiCjmIy5sAd;A$n^&$$Sa.Nw=Vv]2ewsZl%I#DLe$mZ<G/,Ke^=,9D„U"W7C0]c8nJ:uhn5jCvaf:yN</>#mO+YL=miT;KK#LPpl9lT$pnxOTdq%kOiGs^$Q„U"bB.dfKks8nj$pq6EX1?yux88Q[/bhC:lal&+:4'R_zcC*pZv/CPt(<R#R.]2ccX„U"Q8>je28d]cPls6o&Ti4he1iLBX)F3ZbLcPp*HB7_R,.3H3[l[WMxd(I0*O89Bxc„U"_&nfQn*w[lf^;nISg$'0jzmohm4$8+F&G.PqfVXY6/Vxp.6oiF>?2m7PIwj-tqz„U"tI3LsKm8n3K0_ipMTY/Iy)/cj$;pxDzR;0a)P(eL8;^+d[>h$6ybe\SfJpnvGS[„U"LrI8Wo(a^h%C%QJ.nvn^xOp)>qLa3B9MvK-8+A-3_osf$src:n)DG<u_8N;K5nk„U"GIK$$<B:1l\pQ#.?dTJM(2,;N1(tB^oY1N,Pc:FdCSb>ALIM9n5c7Bc%Ju-OEnz„U"uipE.*v+Kw8;f1CTCF-4yk=OiY8NheTUmY$8rO9L[BP->*gjd]x^DMA,r+JnxH%„U"28RgDNEbt$2*)QaoQ$q'nbsn6fEHcQB2PY#Oye&]Ecti&i>7:ZdWm8<\fQ99rR\„U";-jgzH2Pq)+]rSsh\qcZ6Cm8;j^IFaAd8-\*3Dt-X5w\Xj3CvA&;cy5aOIaou[j„U"u=V6Ob(eX'<2+BkX/<X&->RLuz.xkDC0l40-4nD<Rcf'I]x'BbHQUgw*qMifdNd„U":1iBJmd\joqB,^wOL,URBeN*J4$,Wm1rwH)fL\Xh1+LyK;<[GGLRenge?P-[:X,„U"DR&,j_mMlIZb'Q<^$8HJ%ghRf$8,)ma8IIs8Bf&s_1>[PwsdpF6Nh?-#o3LQd,/„U"l:eq0f=3wdItxCMo5HpN%CHK7</k59xrV$IJue\[OdV*65H?r*0I<0FqcMphvG]„U"-)loJGn]MI>55$bYmKUd:3XF:(PJx6pdiNw[e#N\-RX:/s^]<<p_2rY[eIxn/)V„U"tq7sRZusF>WOrS\-c5F^<1y.8GiiFONSyf/.\js;h,KkwkXlIPl)_t[l\l1PL4D„U"$]6&J<E[aa]:cqfS>q_\hZ5&u0Uo^_-fU3s_*_]WGr7n;On[XxLTR[vl:3vFZon„U"x>'/Vh_jz?k7/?soT-UkbcZk6UqSI&AvBs(aVNa/Pc:F5LX6R.d^:va4:MpPEM9„U">>v><XZ7.?&,Jma0][,WKBhSW4APO0U&(5aSJh*OCN1*,d:-_EUj2mu%x%;oO,*„U"GFkR^R;yGP]p>F2$#XM_u_R)rj=.cZQu'<P.0eO3[XG\L7r)wFJEXEdvNorQm^T„U"Zy=MmYc='$>+TDd+Dd<Srs]jodpdDn.zw?/1WMTHz\W#_ubmceA.4b^i#w_kv/c„END SUB„SUB V3„U"Md=\\W[27y6]?LcaI*okB3BHa2QGVC[VCMLM#0[t6u&WsZUw1TYX)>FfQKI>K5U„U":2:1y78>I4,1<CA=VMJZRN4<vdXAvJOiDLOcv7V4KBUEBG^)7%X3#[Nabdu3ynb„U",>D^'4a&sCdbkH,<mme;mlWTFwO4*pAcEl9dn';ttJH%Wiz>1,1.mzDm16x2(I3„U"#qhxeeW2?gI9?$DJeHZ3$f2x-3uxHABKkp;_FR,qrMV$F&14r-QtQH*l49u%>t_„U"LPaCfxtoXUj=&fLi$vaeRU2KIX5+Yma&v7:>d=r2IWe$QOw%MKwu(b5PbgQ)8b7„U"jhf*Hd>Z1AJ_(L=P51HW5fOP$$bT$,q?6cxq^=VmUI^jk]M'a\LRC(oc-:#UZb(„U"[x&wyA6\6-\KOs\Kdba5t]tS_LLg'Z?e:^Iv64zB2eYbMW8>+d/GZJOf-u,NIn+„U"e.c4X6vG7QF)IV=sT]LJ>_0#GUJ/-kyO.l;lhI/.?H13nXdGBA1O^2K*68f#Q'3„U"V)5)D5MB3GoE;[<AnOXNxSFtniQ6M.M&%Y7;iWtT*\_F4)eX?f9sCK#:gkVVT;L„U"dP.05]ZTE+70cu(VGPkMsMcWmiZT7#jW^?\MT5C4wK3oijm^)qvTC[ms_9)=9[I„U":??MA1F9=%8]yn)&We1d8$mkQ;c[RrHR+AGgcm[?+&B]5%6&im;UlUX2gd9To/U„U"ohg:0aXrXp8?kZXWLMg.^Rd,MGCfQRQsWnS1TU7$8b_)nl2D&d.X;3SoxXcKKX7„U"l5WJfQkZYmY/aJ&F'k'i(o$-$u3ZH^>O,^dS4:PO15=TnD[%&+=O;a1go>z7A67„U"Or6'?JXde:Z/Ct[zHdVU$CaGfZk*brY78YsSC<\ubTT%ZQTQ&5*\tBe])yHl_b(„U"Mh8,?)QvTl5r,Fw2_iW''uu2%.8M<AxKWLh5i?YsuI]e7mikSAT8>QA2q1>j)TO„U"Vz8)Hp6E(5p*rT\'O-.uDJoc?st88[ZMFtdbj#bs+sb#c?$Zok0W0I;V\A]*R<k„U"eo_KT+J=pAtz'iIfogizf_Nkz)PHA5WmqD8as#sd]jFj1=9L]mMq:,B-h&wrT6G„U"Prl?i9rFv\-GzL,U4Eo^2iUJs'A2>7C*=pT3KNF$nWe1$cRC?Dx&BW4sr]vF\-e„U"t^kMhf9AP^]&j:5E.)w,<W.[tf33O5'+iaOWG#>aSAjtkMqt2]R*jxlXcC/XGKn„U"18-LQ&m\C[bj^q#oXM:#denYwL,\HXfFmLtrId\8u+R,4Uh>>HkEr$H\kn9V?DZ„U"iIj/8gOr2QqN3HlG7tLKu&<hb=T;m#\s$BbKlEPY8e#FfdteM/BSn;$?cRI&%^n„U"E[Qs%IeI6^5Ki_P%kd1C]U[80dbDJYKv\BcM>'93son:iO_rq%/qkmKy+l%$)O+„U"6^PGT$r^+ueSm[fT?A6s]6Ho'S86DM'9k9>Q^W2G%4'PA6)LOphjVxDxTb4Y3Jb„U"Q/7*EOL=T$A9seUGTmJN&)mywMpLfGiWg&AfV-6K,fE_d^Ys*v9qh]u%5y&a-bt„U"mXm1OdpHlk4z_<cZ?.UiI+H56Ke5Q('5XCP3z4>%n)N2<ehlRE_Zh5dpef$dx0W„U"\?<o=#cjm:Ts-1SXkJBs>A&+O\Hh6G>W^7K[$bkg%6cNQlE4qZB^>6K:wj8p9Aj„U"EkI.b<WNA$tiRdkfV?o%P]CieZI6.EJB+G..7r4C3pcVdII+CtJ7*5B3IlSP6J?„U"l6:?gn],']=9=(1P%wAI-D9to[BOi(k(KLiYHo20C^/RX\C-1P3BqdIkSw+a3UM„U"9^Pd#NE5>Wc6WcBk,L/pHTv*S*L1,X>MF$6v'4F?p]9s;N>]>fo.;?rmhw9;5_8„U"cvVW47%p5IQz3Qj4_)Uk2CZkvavLCOg>3]=6<*u=:k+g-(5?hlWMJachQkKXVVX„U"f9eHwkj%nEAUrTG5bcDE)Er;pLIMUlY)hRwD-.uC85B%<;SmZ&jn2g%7dLFR'G*„U"[qFJRVLcq]4*m97R^DzkUqJc6:QlGXH;g>%z;Ht_B#/r-:J?j._NX$.X80#=zFW„U"t/g-qWnBbQg^6D^3EJ#XmG%xnuf?6K/nJ%X$n,0a4RGGR._Xudea'J97L\3Bnaj„U"q8t1Btc-YlH<FrK,eJK6xgF7ziho+2$GPr[d\Ul;shb(<6L/G_Or1XTX%Fol;ID„U"24kkOD:>:m4s\*>vQ;&8eSxQ#Ma'--m[#>d)MOAVoRq6ciZsQlS(cBfL3I-'f;R„U"SQyRd:m$osJLzf.FhN3,dwy^>ey<5$aSdt.JLvLQV(V='gBhy_M9(rCQHIf8\4*„U"L,VQ23$s1JK(O2+mObMXEdDHAqr6qd+C=C2#J0e>'I3E%mi]DbZwIy^GrR;1$^\„U"GpJu*SmaZWN0LGFE)gv27Tq5nQb1X_R6p?8R-DKJK)fa55E_)/L,1=]qb]Zru[c„U"d4=8glevL^ET$4b3u2vSlD(+PsnqQ'x?$Rl$2%EYF;QPU^%)iCXBc?81^uLGQi=„U"p%<o(D&E/UsJItIFiVm*CjN6g#>i95<YX%gxb>UoW%dQoJ;sXFH;*Fhpiah>wjV„U"kWhS<OQuwwLx&k9L^7%b<5)-?9sPsU+#CxJr(JENN50E8FUMI*_--CtX$I2]+Mx„U"0jfsmtb=f7^P/rs7Run\scQb<V5Z4s-YE<ikW7)J.kt]DatHUq?32rWZY2VRfUM„U"3)L.I_y^=9-W(?r'i)H<#mNAGlgkL20t[L)^+jt9tQmlmm)jYNA+Ow42%3V4Q&W„U"tD?\jCR,$Z(FMtc/CHEC:slk^_nkn-k>ehK8o_tjvO?xkhh2ebr2Rj4c)cLi*/1„U"$kPNpyH-T0UC$[nHh&H[:s4bI#BGr[S5o&ocJO<KTXSrY,eQ7kwelZu]W?P-F)6„U"-DM54P)-jIdyY:Fg%kw?nXT^9_1aF+SnIW09Uobt&WNZ<9HDj8,MY2;[sMm#c%V„U".EWrgB-6&/CiP]tKtDi-h1r>=xkc[-9Om^ywp/U1lrs_pB[AUbXHn3U2D/SHde,„U"BIvx2IKWAl9r#;D(E9vUauFjg=&5lnf<#freh5'+I2dvC_?lqM,z(oa7wv8\Xyk„U"Bf=ZQ]>JLOoC;F%]&YLMOOtI^K*+WnIOM*U2_7%gE2c?NiXyCJB\3r0(L&Q9kNA„U"UOT5HPzDu=5+A5Vs^o\k0>,mlSEVD(6qiV$Y&ki3lCdEj5zZdepHSB1v2jJ2YhT„U"F#FXGBF7Y9&sT6.cAkON>t=elH\c(4=)5aAJ8?X$V-z44_zFhPQH>9,GWQzR8[4„U"a2k'+D]sI]w%^s]ma2U?Jq2,Jvoi\LW6,E-X3qL+jJ^9zVd9cvO#_J9aSZQ45wB„U"Vu34Qn'c5oFS'A12>=vbq_ys*W9VT?=0=PLhbs)_JQ,*e'Am0$#j?<(kqfiJN3w„U"bn$<)-]97y?X3J[MN]4_dST;#?sf?P.V2RJ_9lB2H<5XYrM3+E\*?hOAYh4=7bd„U"hBK(7w$,mmakB$MD2RVa?]KZ*QD?tPu&n^DZTqs?J*%M)F4-M9+?n?%h?a3_+XF„U"_l((.BwBlEa4=KKK2lD]:F8WbTJD*5ki$1.T,O26[)3qEf3]-dQh:Gv#HJ>)dBi„U"N;IdjzIkdsv_7:ji')k'_,8gZi1VvZ>$c)/j*k4?'9GVk:MOjeFoD;O4$-aEbcF„U"#-5(]UVE#1-*6(jT\Q5#<X=)a#Ib:8UydsRmBv3gTf9E,12ojTFuea*oKU0W)vJ„U"irF3aQ#Ga-XVl5OhX'T3:t4gnei,2n.G2ujKGY_H_<Sv#rH:mirK(iclj])9Kj(„U"jUCs'e%>ij9TgI6>=e7s:.^B%M06-]%J3H.uj-tBp1XP9a5D2e4PaY3MMg8RSa'„U"H.'(/rp8axPiXa4.M7XLmGRS\6373K_trSW;Tg=8d6TY=X.-kR3sU4ECohlp4DB„U"I%8,x-<+e2-CG+BTKG6+fh,R07N(o[rR-O+3;]Br>&aKslH;=-qV^&Jpl\WClQ;„U"[5o(W.5be$VzBW>T*320wq%X2v[gBFr%76fok*o=_HOz;#]?FW#dlLahOgh)Qba„U"xk8iGfl[ni9&k*;[Q+'3%(M(z&fXPnU3;yCb9:Vjk;qPP1$tdYPD#lvjbqV,]j>„U"%a71cm.^7knjQ^Kx,/E%t?E(8IK8t.iqN$4F36N$r2\c>e1c22lN6_%faU466k,„U"^NJO>dPWbY95XGV&:OC&m'4+49:\Zg%B[86C\KDW9'l5\q3(G0kz?K=CmP8IFTN„U"6'uH'ns>Ne5ha+Z7Pr2&3%RV0)mp;ZfQKDX*lNT<%'GJ$QL-?FHBN&&5z1o31-,„U"X2WPDxW2kYJMK26p^e&gI7mko8l.<DX><_FnQ='#Fa&rDqU/IU'.&Ejsb%D6(5_„U"__WkV5.d][a_i,%a/J=ID>/<QpSoLD+6'PVNqDHR)jXvMN&[/b5COPx2UY\e_bm„U">QFDyLb_B-)cdLc0oL'aLjsHPWp<1A1<HBkiT0NLV4Z6]%eR:[gQpi3ras:b0GG„U"29mp;P]ntVP&8cVo^v((LvSDXWIM*&*[3Y=bi<qC6tg'6QW%fJX_m.YAD4i.pYy„U"g*q0K^GP2,4a,8+7YSqwB2e6y^>m]k,tc,#&#,?js,:kONIKC^5g^^2vOL^\2$\„U"l=tpk#]*tP%(_(D\%4Cod-7Unr.$cIZ'd:3OzX3P-<?[7p,$wA-Y+y?aRUu1=E%„U":\z1\M:WX3i??46C>q.4jKqWhE+*mJ6;^<a>slEbnB&rhPl/O^Y?7Fj(+jEywuY„U"d6DFY,'MjC\CS;z[Gu?N.m>]^GwX%RdOt6AT?<<SMqtMd'AIV>#'I\/o:IgR15%„U"K>lZk,C?E(N.z]=_:s]H'OtvYqAq8hf1W2$0N_>$C_dAd3K=TzT,Tm-+lhUA?2n„U"_9=LBA6X:V<ON0S\2lsCB#K[*2A8j6F$3/FIl,X(cPVAKZf0jOhQ;x^E4i(l(>f„U"sCXs/gby#6(I6/jT&7O,mvj.cV]Pluj>%-r='O*+2'vX$,0AS#:#bnZ3J7SQp6E„U"/b(]ebYiJ<n]&(OGk2#3#9k$'z38Pbb_'8yelLuz=rT-0KMn6E%t-:Jl:KtsS#P„U"PenfbPK?Q(qx6p%s>5Gn8[J:ip*)Aq-EN5%v_$\GlZI00iMBKV(=eN4q%\XoJK5„U"Cl\tw=EEcBU$f5f_]l^ND1ua'Ti>L,^;^w;2Ugk>KRK,b'C+baqHDbA6:F9abUg„U"KQs92E3boWPh]*<c>Q(ohO(+7R*l(3*#Src\,qr]uL;nq,P[7,$3U\^H=$([peQ„U"8o-dg/jdFSaVw)0R^8wU*CA$'[fc7]32w#-LdT;Ev7v9]$=tg8i_8'*]1J;K%ym„U"kS2v,%3d234GW>eI8-<d\:hN&oJ&;]dEXRmeCyn1HD?+V*qT-2?;9,eAVP]tkDW„U"E7o&rKa,X#X^9JUqT4.kz,ZKm+(Y:#6Q4aEoaoY)+>mt,tQZ3/G.4*$E]Jr[%An„U"ihlgke9;(W6$24,FgJJ?Z'>lmqvqcY?T>XfqLt?l%nYT.hNQ+^[8:_,N\I4/)$T„U"bx9?>&kfRaX[Y&$>vYT=,H*u'MJLw>guA3Vg,f5pQR,CU2yW:uM-M<>N/ZD6\:V„U"xd663-NV-]tA,4^yST:c'=_<A,tS.aR;;WEEYWNaIOE5PfZ,LOC5u%IMiAcXXR1„U"rU73huLtEZ&Ll&/>B5Sr3V3na&oNObtDnvx^cX9L(#iDjQ_i4StefQuHsA)GI2<„U"5dcJZW'<(V2[H8*vNWX$QJEQHUEnbPv+MevLzc3iDvi2H$WtSGeWL;r-j1XbpL7„U"hO+x8Z#(u(r5UlaGhBz$qp1Nrc5,onHGil))%q8lMZaSET>&SKK0c[7Fc%Rp'Hs„U"=DgS%(bX=B:C1MEja],wt5AECYG&W=MJ\(QhviA[_M]xcX).zyDz^pS09^nw0Y\„U"Ooxv#mG6ZVGzk$qIK^.'C)$SUMOEJ)7\kPqih+Z3Jw518\b.6#B>,t]Kuh?U^kl„U"Wt]fUKoYV,mH#bbj.wc'yioW%mc&,DKQ]fTI/IY3+bn,wxZJ\2*HHpvL=UHk;UR„U"]bHO:q_tSIHjooalr,3aU+O%6iy_<c0VP3C^1b=0a>v'C]jrTC[uP7[:,+[*BP6„U"Tty'lDL.K^/A]p5hCiXvTow^Unn;h<sOp]v=mV?k[qSZ(b7<g#Grn6-e-H7./]0„U"qgo[e91o'C#Z%acW5k60x]b[cmuPLvyj3vHGy^nmIMS8vR.D5Ied^:1H$s]]g%]„U"MjhO9$Dv#MYr8]%v__'2MG=m>Yg>5B_.ah>.+I1);DGojb=Jc4^[4h#pGt+$-1C„U"e=O-ho]]=b?$OBNLK.DIx?pF8\l^=fwI2Q_F<_*hepa9HrP[wUoO8GUA5s\O+&o„U"0$3BVq:w)UF;P3NiBsT?>&3BAIVt['[q$8KZks]YeI[;ANJEjq77XK#)M2VNP\U„U"\vC(,#/M?SSKm1$t'DlAN;;z0bw58_n\(rp^r\/iRSx0r5#<1Tc%EiD/i/s)Gd4„U"b<8;e(DnA&aBL[4o#1-ulqD6k\6?ZL[Zh=bYYi6E*pc*Zva%uAuBH^ICEOZ.pZ2„U",K,F3k:BSWCdkhf>[UZ,YV<8\\u_TfVPLsTt>5g68K6KW7wRsEQoIl#(>m0sC3L„U"R]t96(t4D/BGXmWl__0n<UT&a'SgpDsgBD[Mc'ez;2]R0'2Av(?91v&l.:XBR$o„U"mksY\sm=_vO]]a/dvJEl_dyWIxm5'iiZH>X^E7n(I$F7(VPB<N1OmuhOD7jnOHd„U"E>5zy39Ea,k#YPO4OT/f[lCy=OF=htM>?o.c1(X5$aMQ=*;PW(N8ASuIp+t2^f.„U"yULOFU&alP)=u\Eq=(WKsd>3=(Gg^4dXe&k*C,fH%0.')Qb'eT]vc/ggJP?(7+f„U"RnhO9&#:YkgN-L_h\pWs6l#KgWD:4B6Kv1TATD3r#=+IOJ#m8VK1i=a'hsT5kEX„U"8',&z_ZpLcPQg;f[V-Xo(?7Md__>7h+9AuK-5djYF)/zyXKCHI.NrF0n0i^GC8w„U"zG2+xuF^P)f>Z9PF/Pepdg6pz8ft8,Y$x.a<lg=(fpo.$0YxKlp:rW>z?,5)->O„U"in-6YpVnfdk[5Sa]9MPLK$OAp/A7IAFK3H#?JkYsYSqJGUKFdxrbLYJ.Ohsa'8m„U"h7#D$4v3(E3kSVugdalSs(eRijwR3dk,qLmF#t?'(9O[h-wDuvml3g;Wm463TsK„U"FaM&;IdwnaabOrXQ]Y22z,8,(kJ]3\idKH_jX#8(w<CZlv)f%<D<oG#hP?7o0qO„U"0';aQpX?sr:3(ssF=S&e=L5s+vNJX#bE[7Ll'R8PLTfLT[P16iGU8dqUfXRE[u9„U"tVXM='iIQpt3++miSvYz8]REO'T8r960rHU*pIhuVO]2:4nzX^<&^X[6$6pJBB:„U"WIpoQ]KG#,iB7Eb6cv;'S9D5eX&mHDMcgzmeK:)L[<XRk=flIXPAIlk>MerMdPM„U"WeB=t9ABn;BB6-pd?>XkY5]4A58VWL/dW,+*FhAS-4S]Tj5(f^qXf6ee+HX)DqX„U"\F3/7U:9m_q:e+T5Bw5aZwAU-k>c2d:6.N<(RJDIa,f:2e:Pa%yhSY'p-K8ZB3p„U"y;:n#Y]O<7(?*pqjr#J6DtkS+l\WX4VFSBI2WdjXE4)f,g4Af0Jh(1WUd62)=-r„U">?;;3x=gJC+dL+;/$fjVGJ+9$i//h=wEUf=3cX^82PLg)j>K48PLn\]-6hszmmR„U"XHg$eU,6Np5rdUGb,e/l^N=s&f$C4pA<77<a(rGVQU&B\m[v8rB92(+kV10on\:„U"O2+C0s75AY77#&3uf9,jF2\+uq_F\AeR9'Iah(W=Uk#t[tT?uWsOG47zy$E$A1l„U"s5G)d.2CQ<+:8HbK*lQIS,DW4P6MoU^g0Y?lYL1i#M;LZ'R3[J,;q<:7AM'$l+[„U"(e\aWvULRns<8_wyu<4cPuB1+Adz6RP?(2Dll^8^M(^pZulFjapNO,JL9UVUltI„U"^#c3ugc,kZTU6lI&JJZKYJI0p)3W?8EwK<PSgJe/PJ_gN'c?$n-*??%UaX#WYgr„U"hR[wY,<i<x&^7Kh8L2lg?wDQve1LLF60n=AX?*q*6iRR0T^(v1Gswm(dmb%Q?va„U"VuG*25lQ9xF-dXC2I*$%bNPg#kw+:VCihnn+tbK:.5oQ>CGo7woF.0DWv>3D1CG„U"R&q_s'^<36vE;I2v1rtCjMe=+c.0\lSEQN$<(h.Ke\I.',oCPF^_r+#W7_k,u'2„U"0H7gRU8-1Nq'dtqOcn6fUBmkp(cgau*Vkzn8rkK+b/_<mi&3&.A+vHvYn5kU1R#„U"5UUU]AO7l[<20W%-P;YUUxzqKw^%;g798hI^s]bojYmgHq5ghJXqkE9_P^UKeR$„U"9hQl\0=XFB6vW9C[#4OkaScmV-3u+PU6Lo5-dtu.V#=eXDv:9lNF^%'iFxJKEj)„U"RyuKhl9DbSMSVKX=R9nTW$dwL&J,IE$_eg^:2Bp2^yIXzM*n%ll+oN)+F7C[baq„U"6%.l]GgoLf90\U7y;sA6)#ebYm'6EJsa7[&7uhL#4903ANmkdUh<>M8WJK4A=ug„U"wOT>Ct=7&r'qQp$kE&i[?r;:USUTt3SrSZ$$e]b6ON2(,12n3ZB6.JMAtl(5u9A„U"YDM1Pvp\#)LypXRBcqA($l0OrT%RdY.xglD5j#/5X'&WTq^[Skh2Cp?q&IUH#.u„U"Pzqc\OXCZ3/kfMt5>lb\*Ma\yp9=e24C1RL_Sdh%gBLa6]r[aM)8T$rr5[fdQSs„U"$If$kTGZEO>t]40BDfELj/Q9O^3%$N]h_+pJ-db.(A6JeTp.lFU*7bn'L3hep'W„U"$dPLXiDm8CjzwK>RXj1Fq*?Ei59F3'D'a$[\OY<i,b8FP0oIO_DZ_'62?nBj1hr„U"v8+1>pg_>83uKr:gqV2;?&R]qn2;G4&4lmCZ$w%D3$tpTE<?FYwNoWz6XUjL.ld„U".T=.RQyFgLxT5^>.SWDpe24(J.'$D^TPx0P7(4Py)r=^xxHDJ%L26tXN4SB/$uC„U"5rWQtAf?d%PE1HNp/Jrp50]Wjk(KZu,eZJ))xT:B6f#wBiZB^hhzDr2\K-k,pz(„U"'A[e$L%*GE0C5#7?hKHJnk=#BI=Bgev=7AJkon*)3fchcV&Anp*%(vK<'1WrKP/„U",_O=KTkkWI^ZCHhD:P74rqq/5LJ)eWwIP;gqy7%#0IoS3RR;?Cj=JZl=)Z]Y5L+„U"FWAQ?6S[dV='),rbL-9TWIT9F9$Tu\oW[<oAB:9IzP765GQUoL5hzF:n1YFXmdk„U"d6sW\UipWH,W>laBZiYx>3T%u,9395F_1OeaqrlUkBr9R\dE%iUH6Q3(-(kLQ3M„U"[X_;x_\M3TZHl+^9<KC8b$X:1c&F7qL82&X\8k626AOp]co_*TS1;BhiW&at-o1„U"]m.n)f[C.h=.OAs=vsp-Bv3m7,KZCPV3RgNN)Fevy+__My.FFp]cj:.A,KgCnAc„U",7Ff?1)f%NCrb4>2D1pE-EIJ-+E0YMAjxEFCEBn=,[bxU&pTVZqF&:sH&URiELV„U"kM-kH)t#hv_GVRv9##>Ym/Vawl35g,Egk$OU.+j=6/RXyO-h:]7,OX+l=U%t1oW„U"f4fU6RP0/=OHBZ9[gS3f+4e\8uh_[i#G%TRK;<a8g[8l^v>a&+xsYeZbDc?Itg#„U"1K-P:]c3dg4E?KDZ*SRwKH72M^-Md::$7o6Z8*Xw_nKZMQCuQnTpj$cba$<ojyN„U"8-cW9V+R[0)'n^ehm,5/fT5)0,,uUo3nT(b-QY,tb&qCm?Tb3mkT<xuNBe=E4H-„U"2HG^D9vW.tI'*Z?KA<dm#Lue?].(K435or(Q[Ba>M+FQfSd$HlTr7Gk)Q*C:a?o„U"_[M$p6Jazh:':3Yjk;Q0,qNxw8<2u$C(TsFT=DrIIrbyQ4m.i[19Bb_qX9T+w&x„U"E_O2.6z13L&5wuvGaKMymQ6S5y>J;6yHc&:a+qLo:>XpzkZu;.6HmkFfBga<\hl„U"dR%2#l(T&c03v,JBp+;A00svsQnMEk>2.8Jo6S^NGsTOjJ.Lz)1vJ8(e9l,a>HY„U"\9lHvLpf>?\Z5ccPCQUvjJ/.?uj5ETExuXQS$6TVatq&$nB<0[rsKRcrokDq3$L„U"Q2DoO[vWQkimmT:YJXe2oL&x309Y$>9(D.4c7D/Tl0K5a9wcx^^oWJ3$Z_z()j\„U"/8LHXU>fi+xY>TV<HvoB6i41r/V(NP:$((7(Q*uhvf4z=^lm34P5,[$XW35:aY(„U")M4]rtDa8A7xsX>Ggz?W5?B9%X%/K.:h1OgP>p-HTO8BvIn8raJw6eU=LgrOw5m„U"XCsPljw:4s?IHp[u?u.\B&_^fVNkj>GI$<z#RxwWQj.)NWKbdIEDWy#<M;mL3Cz„U"Eo,q8JghajEu2oElQ7$sX22LF*r^Ok\E=Uv:^\6iMTbm1$G91s3n^VIL(dk,j0i„U"O6_Gtm;5NOK\C&Wc(XNAkVf+H;gsxXlARcHH\5pMH^*bJzE1jW45S(I(*0TN.(^„U"be-rG+=EWlba*aLUKJo43Y)SB-LLnKWdhs>nN=0NZdtm3_c_W6rr)y&bA>etse/„U"gs2P&gs&Lj49WZ#sui'h;Y2BEgd2mWbb%X8Oi,)2DJ2ee0MZ)jL/vmY$Z5a(t:i„U"M)\EuQFKx5OD%b.7GungHN+:%*N;T0L_Yvf]rCit#[.pz(:IYweJtYgFdl8&rsF„U"e9\-\4#1XnD<Mg'9\%fb\.Ih4YEjgKY(r69]3gBNk1rL+&;d5v<i<7e1r5&m=R/„U"^giFeNh%:k\x5:T60<Ep:w](#eo++IH1$HUgscn\m7CasG9w.;jnxDDkMVlemcX„U"agJbM64K,HP;z\AufKu,nUCSI4,/\l)[tWu_IYsTwSD\XD1=I<]INyJ,l*Exp>m„U"qW;q/,q7]rKYXXCCwx)Fnbq8u4/ZkglpUZD4Ts,Pt)yctdld[75$vfaAof0tkNP„U"Es_m:BtHcOXpd9Pp'NP%igSHRb6Hy%j[K[7Bowd2nT^R7o'hXS+=tQ7JF=U]p->„U"t1YGk3nlf0.aaBHcT<_$VElvB7GAwAQwhkP%pEH%P43-eMds?.DdO^,UC0QIM,f„U"VsUhmSh8AOfGMQnslhN^d0s=B$GuT,l1&[]*;9SnDWeZiB7jVXmJ[XWi#SA'f4l„U";#)&YYg8Iz+>4U6k$cl_i>0bp(k;RUYq'ck)jN_rP2Pv-0Qhnlp?o<,rMRL^kZH„U"j'F6HCkL2zFl+8=(3wK7YEhG<c#7hqlAMfHrppHgob*DFil&1lk9hRDqZ[Gns3f„U"bGfX,i%jveK.^^44WGhzuMBtmo5Lq5;D[EhJ6%EOcSGlt()ujLFmtkJo<01F5?T„U"o7\JAcnCt7/,bZT06'WDVhqVdK.HDj19GL4RyOVmgLnqF6mGX=<YQLhJ'OapMbo„U"psr%cU:PZNF_Gm0W2n+^V#,c_Z6DjLzz6.i?-1_sD,fnW%E3xXnE0<-29cyVm<r„U"msejglhO8n]_botH0\7I'Xg(Tso#[>YYGUSL$4EnE-6HU]5lW0PrQXLlmTN6T=9„U"'fmb1ho]i_ZBQ_5jF4$.*MO_;ICb(Ym[.,]/nL$B.[=8jaPb0_VS,3HCB?Pbs?^„U"FNX=VC_Lis:X7T5tffna.ca=bl=Lu>YAv&HPjR?spaM?<O6H?F;J'E8Q8S1C;,o„U"TPokaN05zuIcP4kznk2.ot\Hz?8:>x\)V;II?HIWp[X3xgJMZ0wuSnGR4Vk<:kU„U"brfWN6FIas_J/X/1QCWn0HU3Y<pVuM6(n.ht^:3R$OS_*.kz#&.K-Me4j7SEn63„U"no8f++HH?E]JjEd\[X(T$1jj*VkRI81q(=1TZeFG3Nk7c?A)KGIWa,gV,GeXWhe„U"#^*,b$mr\6KqhFWb?uQOmky\3?P]i*M-9b,f\N&l=nYkf1H/R.-c&cc3JqO<p((„U"<xAh):d;mQNlMq6hGfG(AHlJq,la#5W%Nq7gV]&-3M%kKWdfU59Nv&N0)SZb#^t„U"Hgi6fgjb#];*>m83qHJhnCr=X$7pB'W64dl=SDLrriu(D:e_S=_*g1kDa]7JG8J„U"KChEl?Jf*p$URX]:$$s*ga%oQSp;J#7'MXmgn/V*N*:]^cqt&,.vx4pg^Jkq^m*„U"MRNq/Z(TkaTZV8]7c>/lACmjrhOimUV?VdMUOPMJjN\jJdp26-nqPD3[gupBsgG„U"1Aa[2sOTtEcb/)Lmq?>5\U;6]F2FK/nnmK*$yetK7d%,nkeO/X=tC0:qW_2jL17„U"qrfRt<*MI>.,Ri+K-U)sCwIay4zTrshjmKo+Q[qLSr^pBF29BQ0H;#tAqE<k:n<„U")pWW&FkH%nOjA1Q**#Y]2;&DHykW1d6)5sfAoNT#*1-XgD1>2R)<fMpsg3\nsf:„U")<XXt\)rfPy+;cXC5(V7c2Le.kL8s[BxFVIiFYJ<ZJ/bIG6GN0a#?AXP'6bClv4„U"zSDV>*5ni,Jgk8HA4Q51_PJpXkcj'l&3*JS[DCEPMSgq;Bi(y:5bqOQp0,s5f,&„U"j1lTXd*^Q<%pq>UNG?3aO3>O,l:kmVne;PK/<ygr.<-f/t;&POfA)5rFIXswj6/„U"FpHV)3X2l$euwff*]vFc1,t%4RmtXAH1,nV?Ut*ua:Nt16lHV>+Gi-OFp0yPo4;„U"ix0rx:'F,lCpsH6ZgX?ZLt3Kj3:nqRL\Vv&Q5=>Gt448R6uCY0dQ+tLrbs#RrRn„U"2lg)tnMoVLs>2F1zCjaEe#xi>8dk0l&BqhRE8a5k6EIrVDOXz;k.ZLC3'KedIO:„U"IijqA]=8,eRKTv66b$XTLLfM5/0oR1S3<2kbYm]qxS+tTP,RfY*TUqTUur'0tGX„U"4'sQ7w[L%g[H7#*+M.Lt_)=:w0#Fs$f-/7^VHW)9U2o.btyTAnE<u4t<Dx4d0<?„END SUB„SUB V4„U"jWRK6TSG.*$>F5gJI<mDLxInGBcxKDEt+%t6g^B,/dszD6t'PcsH6Bg2;eL\5GU„U"(VY;LOUdAXZ.BG;24ZMfskRauH<fk/n7I\b;aMF>n$P_sC1ak0xW$G\cgfgx74M„U"F'L\SxhE-G^lB[fwNEdg9-rQQ:Lu=MLa4i8mLL',*0I5=F#HLl,KtPEkC3XBmW[„U"\Q01<GQV6MqnttWr>[_&pe7[J-NYsj0M+=hDqQWVli(Jx/kLsDAX:\D6;V5^f],„U"R]EL^J^xJnW2]]JoFs,JX8vWei50n2*a)/NW96P\AnJQlJeh>#gV^gVCM?*GZaq„U"s76FlGY2hzcW1j_Nm_/-nk643YC0g<$<O/=^cr5vpXxs$jg?fB*g7mfZa4V;rd$„U"A?3;,>eg-q0[r/VQ,p$?Ddu/%ZSm[EM=p\,X_,7exjL,iN-nVDq8/0ig$AkqXqN„U")Xn<hdF#T6o_jQI)BBm1yZu\/<pRQOio.1RD=5\LFP4W^iWJTSeqBJ9o_>W'Ah[„U"QVshew7lSXCMrUnkL=uCB$PPd7?1lY'TS<TOU9MY8?j^x88FrmsqI9renJ$QB*m„U"1N/$-2\*PZWJxbUV>)O6Fw,IUBo%hKahM0u%Y&/Z<.I/RV?X.0>[D'>K[bKT#;S„U"Whl/lPVxkKce_TgNlqTSbe-ZoLrQsklrT[&UpB0]EO8aKu_GqR>qJpJO=VcRe;;„U"pI=GaWhle(w6k^S$+q[gLs_a\(D^5JLq:&=MrVUfN0tA]nSMIECACM=V[t<YRca„U"%f,7D9$PG>aIf0($vb]H/nr<BLidnob.\-uS$_;j[t6?U^&35AtS28oI&h?jo0<„U"gPeu8la$BaANK4Se;v_<cANWkCWe+0,jaQUki;l.n#J1#E3&eUN3r1nh=:47AO;„U"TVqot,vlEuWf-Jt4cneahC#O]=:<8td:P>fKLL.fwnoPSN3sp)S1W.UrBVYmCe9„U"$_k0&p2GIYIp9lwP[BK*lA9^7iv0gFEv:WsTT3_4(\.+.'RRcl2Txeb<$%iit*]„U"]JAaH.lj8%0MdC*&URR34T;q*\lW/]C5D6<XJ*X2t0[LWxH=sJ#Z[qNQh=$d1oi„U"?^7,Y(Bp1;1z%ma._Yl%dHHcS#v4m+ImdRObt2,UKF6Y?m5U]5DQ_2?f9j/Da4g„U"Fb't<tmoSFMmOG;anMtHFj,L9K$OcFsLEF9vtg27GV>3D\D5XsYkD^8%Hb3<l4X„U"9j/Kq7VxlFIHmkz>hJsv*f8r%Qh5WSe_lcPYpc-TPGG-hESd?mEO<W4*4Ub1D6]„U"kTN]KR6&OsJqnZr+'R64nnu=wkV]$NGhwdP4XsYG-Q].XM\1$7eD:rWJ*)HSjbJ„U"].E8q\j%ZNb'ljQKiT1Pt=fQr)4pdY7nFp,WtQj]*]&;SmIP*$DK,:lMT-Fq(Pl„U"oCrg/h7;L5ri1x3uT+v4nemzq4tob9-UM_H2HZ'D[ir9+'0l-,>k?Mcb4Utl=p.„U"\4xai[A:DJGMS+CzqWg(;P-#0^e>'n1IpFAI*dgQ0%4\sY0>dcIn1?l94F^:CAE„U"A;?(Lhc:Qa#[Xf$vfQ4tB-%e=b(Wf2XY+Pr6E$k%p/Qj2okb<gWb<Zt[x>P)ZR\„U",(1x5o4uR#>$6GN-xHb<NHv9Ls]r7R&aS#xKuj>Xmi)IH<6i*t;6IMk%3yGSGeX„U"$uOG8#Z6j-XjWZN*,-$W0Y)ZCzi*)Rlc+igajtf(MeA.YKEMS3j;>zD:Y,5f-qh„U"MX([P)pLEI3X:]DyycnueeT9H$6rM'syq?eq9nc2D3#>-+2iS//Gn;T/M35$7st„U"fhp6B/=>IMVplHF7rr%lR6.n^KE\8bEH9NG;RhAalE%ZJDqLW=Xn[430,.$d7#_„U"b:DRv0be/1C1BV)YYlQC?Z3,vA/krvg8&cxCW5Er\6&EeD1^[U'Lr\IIAF/EA+O„U"64h4Q1wE[qtbb]A%(ko6AeFsm9F;T[f]b,v1W*Yr4iQbCIiC4qB\qyvXU/]M5fT„U"56#s#<e:RZ*NGO:GG05_82ZGI0/p6]hk1n>%JpL55nn]06N3c-cEKV)i[#<c>:I„U"B5Iq_bo:8]e-FcT*nASU];LSM[LWUe#2&)_]o''XJV'GCOc15(uf1>,h1&5\+^W„U"hqnNZAr)nUtXdo3zm3$KK%(>CGUc?Y(A/zGv%1DC:;qzcJe^pm^8*Jk:<P?T5C,„U"=qLZ[;lfPQV-H0V]_Q7cPWPPRuEs=c[,,l1NblG]'J6\nwvFTIN'Biv4zT]:QhS„U"ku9/r_sN+*tkO8Cg^;wB5rHI0F,kbB:W6TDlGvealYu2hD_UM;4f>HWGy\pf/2=„U"9Tjaxu,Isc<DM3Skm?Kxwi'^.L[m2_*GS0>pLaK$yh]+u3E<9?20(MZ)Z's,j/6„U"]VD7pXJF4Yn8helF/NDhqjlHOT#f'.F4.X&F746=e+U[r4k(e>\JP:0uSBOG$LM„U"&NDpn=j8dZ5B#D9fA]9kjQL.;d5,pUmKa;c8MweEx?/HCmTYe-85uuZJ?-V$glr„U"rnFXt#qj&lW&]O;oQO6cbV9+Y\yvCd1#iYOZse<\Zrb]mNT\]btcB*\GLd8xIUa„U"eQIE00<3?bG>f8=/wYdp]c-ue$*2)^]Ju1e6?JlU=_6XN*thzIVGPO2NayLj4BD„U"F2h^zDiYj_PMEok(4T#g1%<Dkr.pZYjEskjP]]-k$r>EV/,L]1#O9#L;Ut8^QGU„U">IJzqXcxKStA4b922aM5lnN=p(>+g,nQ6k4yT55Fl3^*MeVb=*-S7&Q=Wf<]4UT„U"B]/M;vhK^M?jXhY&:Wlg&62TI?LZZykOman2mG;g/Xe#ddh,Akj%m;2&u2#ROB8„U"oTrqnrJSWIlS-fG;%42n=-NrDQbdSv9m8bjui=ApZkKnI(I+u'ThvasUv3WbF4[„U",nMGB+YeN>R$]8zRzj>.fVKHp]>_dJP8MzzkWxo<Z86a=L=K%eW2Yj3hb4R2h&y„U"1HU1(6i2I>6I]6c:moMNp]9R__mSasNOHWHFioRK;$3:EB4PRm>x:,Rhs3Q6sw-„U"Ki^tsijDY?,lVLIn2$.91JKvh/%tK(ujnTE.spn$;70$nW8).cux$4H+W[imH]P„U"WdajXm[L^.kY_0uOdE-kX<xJkSsHLNNc6,I^(=HE)rJaEWYmbbr)yU_Sf?XP3^E„U"ERn6Q*U^c0q1$V3EAH9v/Ni>'v'tkH-L%.zT:Y#G$7doG_#,>E&0^U,^O>>dcZw„U"'QTnaiRpdJEUH(+^Smemk;W9WlxxD_YbciSUi$+:;:.bL5o0_]ZR;S_kv>[?^G?„U"k7Y:Ha^'FsE44#H8aH#FnfBWlanswlVu0&=F1RtjO,g4M=#0nvW4c;GdM08aWWW„U"'k\AqRQu8X6NE[d^Wdlq6j>%2(y9b'j+0hsjCmKg=c:&gNFb:u;:&tM=exm7tb$„U";*H%8_t3IEvYgYhm9W3'=,wo2ZPVdwW<KmK.urBiMM.#WjlhL>tp^AC3+e^P[W,„U"E&C$;;mv1-]xVFasv(qF$V=57HTM%Rz_N[C(dmOxsbH3e,7LjV8*(_,HoL?tuL]„U"8Qbm/8ErVw\&d_2hV9VM7u03<.*xeCRCql)2pU5[-Fp+xEqy604sGwH):.z7$G9„U"p';6&qt?A:\qV;m]2%dw:wjy*B0j^NqlQe9s+S$vG(j.h%dZDCQBhTvD[SSmx2;„U"r*2HVf[J+hh%+NQ[0]g5pK3ziag8XNl3Kq2$%=$pG.n$q:VIpq?FGmD8?I*+Isj„U"Q;*OOZ.p$CjF8%pmS^lT0m4;?jWKmBBm$jE9S6,#'J5xy2UtUOLG9hWIS&3Nu7t„U"iC8^0:)Z-LK$&_Ym)(hUx&FHG,X<F1(K6Kl0%9-\,ntoWD''.[WR;K82E&e[lo1„U"cnP</k3L/ErG0hTY=rO.YHkLx&)X\/gX$BiH6TVIhDxb&JRWbDf$6:qTh2X8W_&„U"Fd*F&ZsJ[l?Z;b86$n.\SsF$tYA>lOm_b.UOv#kxS+LQ:c+bsP1QNlZW[b#(q#f„U"?TXaa[NID8:IR>t^$#1Eco?zFc33/P07sK_O0U6=*vbsIt0\Xkk#yGb8OmAX3rl„U"[:Y/&ZWd%mT6^^Jnp^z<4Bi64'V4Yhi.i<fP.RB[t6%/Sr;cGMmh%KYcI9*9Q]?„U"k,K<nRNWOjD:Vb]uwdZkg8'qB4M2k$?W+NS3GJTo_TJOA]Dq08'I$PlbWkQ-#n?„U"VMVZ.P\8q2FR/[yg2bkll=8=xjJrJC,++$oKmXrMr3'X'VF:L,\l1y_N-qVJXxQ„U"(z(XIDtjQv]QRLO'D_QIv&j48PE8<p<duhupnGzaL>X==TNQHFJ)]:kGx1UTq?s„U"5dJZoi5jnSkP?4V1V4/MTq]>1_dQ#f1Zz,)z#UX&.r_&Y-sR?jzxGiQX(.y^*b?„U"=uhcp_8Hm&+QtI.o*W7u0Gxt/NOdj1(V#%QTB^8?Pt6a&+dSBX)dn2VS.UXyTta„U"%P<]4;Jp)$jGUn0(wjZv06:u(bbt6&#bz.^Wl^Pw+S9/:os\BxstvP1:Ezr&0=N„U"siTTWMjoT=+]6ZpiFER=5vFj)Kluw57DLLuc6kxw9b\%2kj(^3i_0RsV-$Fw4km„U"5;]miGt;yh/4-o,taTXrd\80vPZe=eTK7$vc611[zG*hx]5;(jO>FS_U8hn/L8m„U"U<<x_G<QxPdX*za'r<bgs$Dt:9q*;?eUj_5dJhm+AaJbujtIUg?)/*^ktg/2T?4„U"3]Y(Ia_b7I'4BbrMTn<F]kOc_4[BGa7bM7x\0nl^bfSA,Pt6t%?r_kFui5hFJY)„U"G2m4k^M26npLr6JR/abR0,*^orVwP-jMiUql4>MJ9u3Tozt2kFay^C(=w[_u+W'„U"CBtdNlZfE0?/*HYW&AlB?b:\B,CfGsuL9Q4oSbk'?Z&[bRtYQ(\9Lw$84Z+v7D^„U"V;gq]dBU8&.cJZs'#KHt,*Nvpf(OinJEkz>&#<_b7[XACMKiF.'VE)4bei^#,*a„U"vv2oUuvQi8iNS^bkq<%YaTG<umN2ns]bmwY2o\t9#c7?^x#Elm]=orW&Ep?ah#%„U"d<>AEGPyhbpZwUhpM03gdKhtqCZt.u^bWIZ8ZTttYRYs%&p$\j)5p$MT9qqbs<h„U"mdf4HuXo%a?J6Z:D$1h(Z3&Ze;&y^1Y+F,]/%_6hQl=PHi;3?g2LxG^jT<o%mUT„U"NX8,pQ8lUJ6tu[XZV(%(?1Nd7;\GC,q^G2BbILh-F4FxwEVkpPWnb]9E5VU.Zpe„U"'92M%2BT%8DJ-JRaBIqREX+cdOWU>S$.R[AMDqN[8)Zl>,<$fZ,?1\oRaT?VPAg„U"q*9kN9CVu-L6tqG<V^l<f9BtLYa0N<p6Le=A2lHDq+%yntdFNfonq#H2(>G0UPe„U"IQ1WP#uXXbB3\>3\_43S[HlJmTYRAr7':LOraqPAPgK$pjMym:i06>U=>'EPCP,„U"MOv4MvTs*HDMIG4r\,lli#VE^vb9+orA*OxCMl_$ZoX[Qa_^hyM[?kfODr^P:t\„U"WSHHE_)nHp_n(#VZSn%^Na69VC'(]hU)iNE&wGWX2dA)IBh6T0Itsv:ovcPV'UH„U"Hr*=A:y^>X:Zd,9HgulAfdny=+6o&nF&#9<QG%eERb]Do2;Q+n_zscR5d_3Nnr0„U"x&b%Iz'c]3Kd%1*Nq&$=:Vi_g0(60NbO;Oedx*fQu&XqBbnI=P.$U:ScDeC5cR6„U"YWOm\^+tms\[?gw46ZkJ$jy_$2(jOj(PqA?m\:*JhL<hn+&<bkGn(/+a0A1)XbR„U"8dBFGC8NDlg2f+k<5AFp)SbpW[WOKHD+T\&_lViSBq;qBbv8InZ--2Duf^hL[v8„U"'OZEzJQq.Di3n4$oSi3';\9R.NlP2EUaiof,,64^Z[-BW=C\xX-Xf=jjWN+,5xc„U"7KNlX(Yh*z(;KIqgxP)ZE5&EA_$/(sNf0_99Q$A':SKt5KdCsvAPayxkOFoPubC„U"p/b.hiK/sqqI4HkkGY6dXcq6g1*Gb^#zI0%D[[je6.tS.JOW862?Wd]G?6<P4Y+„U"ro49QLCPM+z:Bh^J.6$5LoV[48iVl5rt=#.rY:d:r)H;kIVc6t5Vb_%L'L0LPW<„U"$dB$$GEn2&q4wMZ4lEH\0Jukvcv<DHw[[RWnts$3wiD):Fxc9,a8-?vBQG.fY]U„U"qvjhk6jZ=,uW(IMW5U_hU1:/z-RecYWc46%ex?25p0b&_Lf,i%VzX^Yu=rP'<M:„U"OA<'I0sVlyV'5VNvb/2o&Rm<*LgY)ix8P5(Yr;0fRXdq4McZg7/$FLUzsivUJtZ„U"ql<UePAf&jsAo7tK.WhMm-.C,ELqzKTL_l_lmj\TQHK[tK)(t>M:MU#GKIG_.GZ„U"bb<+CFsvcOYpt/5lq5;k/u5*sen9ffLh79'<WlgGjJoEp*&%H8L>2BGzBQLxU,K„U"/=98>(JqAAS;K-W\*orXabd4s:-:Yk-%TU6;(SdOKHuPzJy5_yHx(X5V*xkbDlh„U"&349q#E)Zili4yf>d8emNq['BO^fQz-(]8pW(f,YX<d_0^?_4JRRt'q,/CPb;EE„U":sj+_tgA9f)cQ0vz5=)OPtNwJTW<JGTP%/+]\Hk.;laEf[*&:eDz\1wk0Q'O&B+„U"&'VYEcc4M%K?kO*MGYzF4i&+kr#5=\ejj\Bco<dPkQ)RQLTr?3-'$NMA5^bRytX„U"[0$Eg0ZJ$gS5Px<vGj*GgjbeR(M8j=6A&Kx\X:^IC=$bZ%14\+Hf*DMh'R:B7tF„U"G,\.IQ:Ap7[+n'#b3O%7O\]Q7aKXQJp=sMLL\'Nbdi^oP.v\Q3(X:47x]dYF;X%„U"fFt(vRLsQcJ6ZFY<fONX8zW'lekCH()D9_%_&Xx&Z9Hr=WxI8*ur/EuP[6[de8L„U"clNUSb3_ky:*Axo.y4cF'j_J>e2(iy0:<bd8JsO&oYIvr/2O(hz7Wpr]TPlMkZD„U")kuNhmeqp_ekKecn1Q,8pUlKt*;=-3.ZKh]dFBcIqMPN:<L/#EVa1Utom2#c0dz„U"-19I/>F8h7g#[/.uQ<WylGvS\zuvZ>_LB4e[0,QibJfhFi_z.Ip\DZ+qRMr*hlN„U"M9Putmj-o+KBR;9IV.]cZn2PAa(oPrdmPB_1GTeE_5)9?yh$QWGyVHZ0l3A6zkw„U"uc>pb7s*A5/(?<UI&])N'-y4:8l/MZ$1bCCEw4</q*r./?1sdN1Y+'kOjX42o<w„U"Iv[QvpmQ.Ll\AYDt[qWySn#l8RR6lIDl>]]R-.ORQ<m1ZQs.??C?cM%zZ5mAEjU„U"q3mT,G#(OF>b?et)tMHdKCeQK0twuF($^D'pM'h0J[m#mvL3bVD707[ElY(+1?X„U"6&)2k=7Pv-jh?][e82R0<B=4MI6j?V0m5/^VO:k\DimeXu3bO=OM/i_4l9P+8Hh„U"Q(^1,lO)c.IU*7Z;>j)h5ek>8x:=PCe(TCK2s3]kJiHc[EibNC:K_2DgWHkaL22„U"7ryF:nDT6D4gO:4^*SbNRqXm;+zZF^T?msLkQ&aU*8_Xu[LML&oc+Gha/3E^&o>„U"xK]kZ%n9StGkdcwpnMq#P6_M6b71a$^+0hVvhGf;uA*CLOZV=KAva)d[W\5MA-h„U"B1lfhZu8rdC#,oNi$+<1My-ChAuA.*g(,ztlmb1+V&6TL_z+HYW[>pgkn[qqsn5„U"M%8UvrRq5>P-56mT]??dD2YM_B$b%Kb6>qsY#60xwG1f>^fbSL4n?Zo0+&7YB+x„U"JJsme5^hVh)eGKNbm>u4sp$j\+P.RS%[+Nr2a*XIeKSLs-5[0N]z\pv3lehq;U]„U"mqcn&$c8$87=1x)/\;(&GhOoluU6'sQ;>c'*dsyyK^Jqm_,^F%s1uslt/v9S6&_„U"MumBiP$=:fX6$l5k%f_N5gj+nNO?g.+t/DO<>-OCDIIdq-ln5/O\WV0NzJ5h*Vh„U"oU3PZ'gk]8Hz_B\16c$Zx=rxjOb4%P#*FxThR&MTVtv-$n'3)c2wam3ToQO8[]F„U"/_wc0.<Yzk/.9p2\t8Bpr],kS=&rM[u\2F^l1HxM5bB\g-.+>H_^#H2x%*up(%)„U"9%%%%-%P+qJEpJMn=D#4%%2%\%%0%%%%h%trug%gxSg7fxf$q:FSAPaXL]Kxh,a„U"r6U*EC=6WFUKhE,<9AE3R&;A:H8]Yw(V)0n[P.(tld0y3G*V'kgn56p'eHc^Z*M„U"cItC643YLoV&Nukmk;PN*7b0m'w^NXj*m9Vm^YlEYf;WMvH_L:+>o/>D[V&kwD]„U"Qtt'WvjW/O/fZN>p0,LUtm9CJfoWtC13%ZLIRFp<U[3Doc2vv:_XH/a5rb%.IQb„U"2JS*;aTecpo+,rKq.63V;5(+Qa5(B(7]eek23E0m)l+R;;ap=ZvO]k0I_JI'ieu„U"bOoR)KL#b>i?7\R;27Ql#VR3woJ]-Qbr47,dmLgYWZl5.t2?$rGUkZZF:kqR$T*„U"o8\kg_/s$en&=qZ[L?Bt8bh/k6vo$*VKkg07qj-\kALzK_G]Yu0:Z_=4pND_Y,A„U">R%)6,5.JGOQ/(<0QkBKC09XkOL8>$I.fh_boR$DcZUUa*'*BvCO26d5WKH#VBu„U"t<o.+X0v7(ADdEb+uE,Raq[a5),YgA*u:Rg$p^%V]?B^=si0j+K_*GXvL+3djx$„U"dFGZ,5b8KBtfw%)Hmst3vSXZa4Umu0)A$y[0[9fFg%J9pn)AejF>d*K%B*n-pll„U"wuVWnjm]\/?8D#[QE[MZSv&>u/tr=u=iD2H]a1Fo]3E]B_H]m?6:^KA$:[8.5-,„U"If=_>*FfnS$b:=HDrDu46NIEyrG+E]P+%BmC#RMv2>aD9TYlqcNBN*V&h1cf8l*„U"*9E1_*#nuvvd._T/HN['wT<K[,A+u(id_n6w?nN,q$>hA<^$UT41AS]fW4Bjin,„U"0=yo'LUv50&CW:;W\AI%I0tv+h1r;:;9*j',&Uv/Qj0_eqGP_1WdhMVc<(_4K'X„U"qD+asZ.Jh8$Ay\oDAz*gmh7;PE#v+i])3TIt:ty/zDj<;1USjbKY*lej2W93t<v„U"00bunZcK)Rz<Um?xe%Y\?w3g'2NseEaOp-0w%ko6S7q5?Tm%Nr]N,sP&j6[ah+g„U"a7+/KM3wr7GcYe'W)<+8?)x3wksn'>YvZ5'gHuDGDg?Ch];o;D#IUx2ME9aG-A+„U"[;3'58iGDOsgDJVX[<[ArE7X>fE>vY7sLNUr3ErzZ9lfvmFI=CJQ7ejD]b(XRRa„U"PQ:K_DeK2giqz]41K3H7XI(6Zf=R.L%=s[_/$nOF;$:)F*&qxg3vCO5;;#wtG%_„U"2VW\L8Oy1md'oX4[<D?7I;e_ft8$i7c9:4%&<>tES1S?tV*kSGH/zWMDo'w+;Pd„U"1bH3,#IW:Pm9P>goWuk?Obs6ts1\u):ZmW=S2LMzyQFH3Vo+Z:pLb[W/#QNR;=0„U"f4Gi(LHA]YRJJBLH,;P+4%7(x19cvvmJ'g^R3]sntm58f<nLa2,Mldcjj9)f=*5„U"p,fPsO6o=n6dTbRuCnxH&o)SmG/RGr,3GZ[O3W-z6S:SM&HH^?pw'^7Z9RyR5+L„U"W8&Z$((PJ'7LpkdJXO*8EbFx]^,*2#J*RA7DyY?R:BZA&OpKWXyH[j*&$tB5v>-„U"3Wl[h3JAf%o2r5=h;y4Ek(%aAsjRO(e,GsD9r(b8w)SGXNLi%_$,bYcDS7qk:hm„U"mKGH7n9bQNVW((sMh>YE'FaLoR3#BE[Pu<rn*q)UIR0e4kHqQhKs/MYN0m'=m2^„U"u]H(YI+*LRBAstUgHc.Fb5t?UF1#m23me:WX2;)S>dqf4P>cIkWD]RKWwH-l^sF„U"4&1+0'<f&C>i#,/ex5Wa*^ofAwof\t%07Iw4ig-2+lnY*W-*WYwO-6npA*n#dR&„U"zHs_<Op1cgm4?*Xs:MQ)w?L4J_x(15$U^/Aio:td.0t#2d.vS%XI>-PB=7ceS-l„U"iCVDH[Ml;3)tluWML74Kx^)w/1+vIc^+v9o^n&J/FMaD0eZV35Sj0Y.Xaf6Y'9h„U"p'?727Dd7eI+$AhBooPfdLf)5&w:d(fgXSrK=+*wlov-'XuLjMV,+mKI'48_h$u„U",eUu<84ZRUi.OysNAgM>#PUq4M;:1p#;DH*%ECi=2X(sd#RjA?^%0IdWNpX'5eA„U"8_f6fJu,$5k(.5nIQ2Exs]r9-n-?WsBXIXQ&>/a,*WT<o'an;,25>*B1ER8zdRo„U"OXW+ZU9=NS\=xIuT7557II6#n?nNE3Gxz\dpWw:HmOD'2fcTpCO(QA?B.PJXw9:„U"Ho+kC(-YKvhAa'3U/$w3AL52uoZL:oI7-Os2SUxiVj\n%<0&Mrm:^8Dh<70/PC]„U"0v4Rh*9I3*_hPpNk]C%/stmKI)Ub&)UBg9XDMZ&+(Kx/N)&aR4%mm/YasMJ3;Bk„U"*&'_z$d+V69)%lI#oW4_fYq5-o9YUCaMpCt.eJuQK_rZ0P1/+(/-M-h243[&RCi„U"-eFC]ja#v(GUYFfw*TxN<zUl+TjcWnx,LS^$G8oIbSLQbQqTbkca%GVjJ&6SOAk„U"7HR8EEmp<&XQ7zC.o/1h_(UEEb<m_peJK&$P929pfIeW;]nOTI#2*k8)Q5h?\vc„U"wPs],j_tEV.0[p1f;>PCRm<N9,X]k=,[k;wkXjJkS*W\:q:rh*?aEl)8XdjD&81„U"zFbs5O7[Tanjv2O$;O-;1uYb\r8;:h49^'-mF2DmZdeNMW?wZ9%eRpd$Rk+$,aB„U"4OuijBu>2NQl:GlSv]+.(BFQDEHxJ2mKU^WI'jGUR'q,3]GS4HQ'%nHLI/9f**l„U"QjqKvod+_Ayu3Z[dMB_pbP77QcK/)=VT5r&Qf%*^Qc04GiO9Q]KvpddQnc0dp$P„U"bl'\sdNHMsqcVa9.4u4.xJ'?fY\)%.OnVHosroj)'CAIMuh3r<\Dh2(i0Qv*Zdk„U";%Sp8J54g[GYNwRy,P9Ci2s3OEs$tb.(dTL_;aHY>(/E'FNViw5S8^_0r)n<O3,„U"Ex68HYA+589'=_*&sEF38C9rZNx;;[,)&QXiE+eV>dAEFMnTbMC*dbk+s0Udkq=„U"EC5)2;][]-gO5m^O5AT'IljhdEdnC3c/t)Z7Or+g6=>.?)4=[1OrWE;]?:43TMw„U"gBskF71mey2CHu;rs[17SCD=v1'tU>K&n-]aGXI0:Q063Z&L1b'2Fx679lYb%=*„U"$_.oWEhQgoCh,n34,(>ied)/Fms8:Z&ZTx<WpeP6g,T9,8v0OJxbhjEAoO)Y:e#„U"Y*%f,*\ex,QR_slt.JwZi>-MMA\dLrDI0L;wm.,-Z0XJ:O)oAnR<H,R>AWJjJb$„U"fui;SWIu5c\cb?kvXM)>Bvy6Zd'c,3\iF6d=Wg$57fv]K9Uu+n]?vEDRa[<$a+s„U"uRX45W1Iw+*.(nI4ImhQd[Q#o<9z$d;qIkgUEs:SDcTs^7q=2J#wK*+)?u$C>ko„U"So*3[Jb*,hv5/x[UzHK+&<nF5S0YUA,eI8'<:#fMjxJBH&l\4cIF1A900<$U'#9„U"GqgS7p+K]g\lDB7yTJZfC=U+JL-bDM=AnRKCedu/OuhQWn&o\VEySi[nB(a\2:v„U"RJeGlxEg2bb<1%+#+ylP?p\t^^)z%hl%96):7iR,nK,K&)1e(EN>B_^uOnVR4qa„U"%rZ4S'WG,'Z'FefVVhK+'#T5=Vob01+:pT85Ttgdf(ARZ[t+Px)wYGw9AwA\aZb„U"\CQw3j/2>7[q[VfJxDseBHc7v4QL61=-H4)E\aOS1=hxvD,O$GIA,y7]X^'k\O(„U"/C(5Nxtn5J[V.cCz#.rm2;0ca1KaFA)'Mx-Yy$JCxsq-c-3U]&G/*:-Co]-?Zp>„U"fuQ??p*aJ2&SweCD#Q^^t-3m:gLsqSuwaYS-:O9u$9F%6qG4NYF^YUr[aI\70c_„U"#G5<_.&6>jw5VM$:Q0%FIe?nhDQ<*&?c^j+.rRC>]Gi5xamB;PT?+)WzkB%85aa„U"/$Y^]BM5Qv%zzrHRagrgx7>rp>jv;*Kx;uX8>pZxkq=uuYJ6G]LWH3rVj+Q/L*z„U"(BE/3_RB*=^al$**P8FaBSO]1o4?NDi65QGLbN1fW]NqQ><p]p]tL#BEZ_Hio3F„U"kXoRorK8jw;CZ7R4'>\X6MPth9Lf4JDmGeM<+8X_11ntvv*7Pv#SUhLr4X$c$uZ„U"l&7xk'/Bn-j-&_$K?Waoo4pm%]fP_kV)iwD-zo\L7k9iA9iCn;wj0+J+5>ml_RX„U">O/UK/F<O3&aG+9o1buLL-;QxnVe=0q2mBL./%z[Mo_C^<9,'][h\?En?G%?h<0„U"*];8tCf5,;06$(WDWQ]/H6Z8GFgr[HWHmMF39Y0CQ)#t*Y]Fi2%YrlK]Kg%DZyR„U"k7d&Nna1\cQZ7D2hDk$Td%x-a[X,>1Y]36%4jnDvKeE^?8X_d\]-zB6?\BpOH7c„U"1''F\+=$YA3'HL+:wbHM^#1^KP;-Jml8&b;uACOgDns2I_l3K8l?T$]QOlhZV?B„U"$f_.44KLA,3KDsWb)A7YqW#NDtBX\D]m$iIObFl>#uh$ESJ]nm$Ym\ul$Hm-YqZ„U"4OHCBi_M]8MnVv4h(tvc8EpG?\/Bc2k2c6'JletR3XxY]V'cb'#Tr*%a1E+SWM?„U">[?$Ne)?tenn<jj+]R[qj1f(sFQj[EXm>$u-;W[V40bn#SL;]6TnPVoISsp(BWC„U"*gik_9Rwf#]C2b((xlh[eX_Hx_-,ZKbJ>IFH2Yi%bWhI_JZGC-pPECj;7]GPSKY„U"hmO>ctiTL-3%-aJ;RP0KuKVtoEDe<f&vM<(zjEU8g.*++TjCHr*LPqd>nEmdkB.„U"(syh3dQ6)uA)oDVrf,dPFVa>9J:vlt+fd6WpX*kLb^7H*9N.e-g9cqVT/dTO_Yq„U"F5Drp0l8aBI$HJzhd+oVsC:)d.<jM/A.gIEd&z/_:+>C><#)y^Y%$g*OH#\)69D„U"q>Tb0v:U*<'=rg5*LdH:'vmslT(Arq%P28KA8zk1Q#<f^A)c^ymk029n<fpnCVv„END SUB„SUB V5„U"af.QsZx;vosqRgHjd8i#k(wReQg*99k3D&P.AuNxctxD.Td%OrS*Wp#6+jwu;qZ„U"$_N+A\d?D22slC^%=Qr?xqfF6>VsysgXLI#l;WK]70iCt>5S&PdzHecTdfoqpH-„U"0(q^irNt3JGbs36I6<4Y-tV0SN]w+cWpdm8uKf$mETqHbmCW>7;N/i#^Mu]/cL^„U"9+L#o8eD.I(+5r4u%p&'9%%9%%#%-%7,c<Et]Iv'w#&%%5%*%%0%%%%%%%%%&%%„U"E%%%%%%%#%uh'A%nj&%Sgfx%up&'%9%9%%%%-%+x.LA9&a&%%di%%)cd%%%/%%%„U"%%%%%%%%E%%%%L'#%%g&%kfhj#Suh'%up&'%9%9%%%%-%>j*=ED2cxz%c&%%%%(„U"%%%/%%%%%%%%%%%E%.%%]k#%%g&%kfhj%Sufq%up&'%9%9%%%%-%>g*=E4t5m*&„U"8k%%+a7%%%/%%%%%%%%%%%E%7%%ml#%%g&%kfhj%Sggh%up&'%9%9%%%%-%7PqJ„U"ECpMn=&D4%%&2\%%%0%%%%%%%%%&%E%I%%T]%%%ht%rugg%xSgf%xup*%+%%%%%„U"*%*%%?&%.%Hm%%%%%„END SUB„V2„V3„V4„V5„CLOSE:IF S=88AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Martin Lindhe                  FAKE PLASMA EFFECT UPDATE      m-35728@mailbox.swipnet.se     06-14-96 (02:11)       QB, QBasic, PDS        56   1470     PLASMA.BAS  '              Plasma Effect in QB/QBASIC by Martin Lindhe„„'  I was exprimenting with some wierd effect that i've created some days ago,„' (it looked like shit!), but i started to play a little with the source, and„' here's the reslut...        please e-mail me at: m-35728@mailbox.swipnet.se„„DEFINT A-Z„SCREEN 13„„b = 64„FOR a = 0 TO 63„    b = b - 1„    PALETTE a, a„    PALETTE a + 64, 256 ^ 2 + b„    PALETTE a + 127, 256 ^ 2 + 256 * a„NEXT„„DO WHILE v# < 4000„   v# = v# + .1„   w# = w# + .3„   u# = u# + .001„   x# = COS(v#) * u# + 159„   y# = SIN(w#) * u# + 99„   a = POINT(x# + 2, y#)„   b = POINT(x# - 2, y#)„   c = POINT(x#, y# + 2)„   d = POINT(x#, y# - 2)„   e = POINT(x# + 2, y# + 2)„   f = POINT(x# + 2, y# - 2)„   g = POINT(x# - 2, y# + 2)„   h = POINT(x# - 2, y# - 2)„   col = (a + b + c + d + e + f + g + h) / 8„   PSET (x#, y#), col + 100„LOOP„„aa = 50„DO„   IF bak = 0 THEN aa = aa + 1„   IF bak = 1 THEN aa = aa - 1„   IF aa = 135 THEN bak = 1„   IF aa = 50 THEN bak = 0„   FOR x = 100 TO 220„       FOR y = aa TO aa + 15„           a = POINT(x + 2, y)„           b = POINT(x - 2, y)„           c = POINT(x, y + 2)„           d = POINT(x, y - 2)„           e = POINT(x + 2, y + 2)„           f = POINT(x + 2, y - 2)„           g = POINT(x - 2, y + 2)„           h = POINT(x - 2, y - 2)„           col = (a + b + c + d + e + f + g + h) / 8„           PSET (x, y), col„       NEXT„   NEXT„LOOP„Dave Navarro, Jr.              SPINNING DOTS                  comp.lang.basic.misc           06-15-96 (01:37)       PB                     156  2933     SPINDOTS.BAS' Spinning Dots„' Adapted from original Turbo Pascal source of unknown origin„' Converted to PowerBASIC 3.2 by Dave Navarro, Jr.„' Donated to the Public Domain„„$DIM ALL„„DIM inPort1 AS SHARED WORD„DIM nDots AS SHARED WORD„„nDots = 21„„TYPE Rec„  x AS WORD„  y AS WORD„  sx AS WORD„  sy AS WORD„END TYPE„„DIM dot( 0 TO nDots - 1 ) AS SHARED Rec„„SUB waitRetrace()„  ! mov dx, inPort1; {find crt status REG( INPUT port #1 ) }„L1:„  ! IN al, dx;„  ! test al, 8;„  ! jnz L1; {wait FOR no v retrace}„L2:„  ! IN al, dx;„  ! test al, 8;„  ! jz L2; {wait FOR v retrace}„END SUB„„%tableWriteIndex = &H3C8„%tableDataRegister = &H3C9„„SUB setColor( BYVAL colr AS BYTE, BYVAL r AS BYTE, BYVAL g AS BYTE, BYVAL b AS BYTE )„  ! mov dx, %tableWriteIndex„  ! mov al, colr„  ! OUT dx, al„  ! inc dx„  ! mov al, r„  ! OUT dx, al„  ! mov al, g„  ! OUT dx, al„  ! mov al, b„  ! OUT dx, al„END SUB„„'plot a pixel in mode 13h„SUB plot( BYVAL x AS WORD, BYVAL y AS WORD )„  ! mov si, y; y„  ! mov di, x; x„  ! mov ax, &HA000„  ! mov es, ax„  ! mov ax, 320„  ! mul si„  ! add di, ax„  ! mov al, es: [di]„  ! NOT al„  ! mov es: [di], al„END SUB„„SUB plot4( BYVAL x AS WORD, BYVAL y AS WORD )„  DIM f AS WORD„  f = 60„  plot x + f, y„  plot 199 + f-x, 199-y„  plot 199 + f-y, x„  plot y+f, 199-x„END SUB„„SUB click()„  ! mov dx, &H61„  ! IN al, dx„  ! xor al, 2„  ! OUT dx, al„END SUB„„FUNCTION colorFn( BYVAL x AS WORD ) AS BYTE„  colorFn = 63 - ( ABS( 100 - x ) / 2 )„END FUNCTION„„SUB moveDots()„  DIM i AS INTEGER„  FOR i = 0 TO nDots - 1„    plot4 dot(i).x, dot(i).y„    INCR dot(i).x, dot(i).sx„    INCR dot(i).y, dot(i).sy„    IF dot(i).x > 200 THEN„      dot(i).sx = -dot(i).sx„      INCR dot(i).x, dot(i).sx„      click„    END IF„    IF dot(i).y > 199 THEN„      dot(i).sy = -dot(i).sy„      INCR dot(i).y, dot(i).sy„      click„    END IF„    plot4 dot(i).x, dot(i).y„  NEXT„  waitRetrace„  waitRetrace„  waitRetrace„  setcolor 255, colorFn( dot(0).x ), colorFn( dot(3).x ), colorFn( dot(6).x )„END SUB„„SUB drawdots()„  DIM i AS INTEGER„  FOR i = 0 TO nDots - 1„    plot4 dot(i).x, dot(i).y„  NEXT„END SUB„„SUB initDots()„  DIM i AS INTEGER, j AS WORD, K AS WORD„  j = 1„  k = 1„  FOR i = 0 TO nDots - 1„    dot(i).x  = 100„    dot(i).y  = 99„    dot(i).sx = j„    dot(i).sy = k„    INCR j„    IF j > = k THEN„      j = 1„      INCR k„    END IF„  NEXT„END SUB„„FUNCTION readKey() AS STRING„  readKey = INKEY$„END FUNCTION„„FUNCTION keyPressed() AS WORD„  keyPressed = INSTAT < > 0„END FUNCTION„„    DEF SEG = &H40„    inPort1 = PEEKI( &H63 ) + 6„    DEF SEG„    OUT &H61, INP( &H61 ) AND ( NOT 1 )„    setcolor 255, 60, 60, 63„    initDots„ASM mov ax, &H13;„ASM INT &H10;„    drawDots„    DO„      moveDots„    LOOP UNTIL keyPressed„    ReadKey„    drawDots„ASM mov ax, 3„ASM INT &H10„END„Tate P. Sonnier                QB DRAWING PROGRAM             tate_sonnier@juno.com          06-14-96 (15:39)       QB, PDS                382  25323    QBDRAW.BAS  DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"QBDRAW.ZIP",4^6:Z&=18747:?STRING$(50,177);„U"%up()%9%%%I-%1E]GEMH-34H..%%SG%%%/%%%%vg#iwf&%SgfxKf?:>ZSAoJ5su„U"V6$SJh/i]9mo61KM->^-J78o)-z98veY)7l5>k7LN8l$E[f$jR[N<Wz4DOoMIKi„U"WB-ltO:m_\5_F0S>T$r(FHmCU4VgHBH3]]lOTC4rF?-XQeL3TPrVMdlfF/np^0r„U"9k_X<KW]#n_HuKHR;0^%CGF8]8j'JR^Nf1IB3v0STZ,rn3b0Q,L%>ccqnv\qe=t„U"X8\uYgrb?BisKs\(]ObYKOG/iS8P2kFH$pgC2%4HU[jghTl&S=m+bt>;Vuei-k'„U"gOp5SYoG6iWRf(R.SHZN;0com[c'9wTV3_rEJSUM\IW=XDmmqfs0kh0e1EPkIZF„U"3?aXx<rD\+t5e,)zl'PILvgbZlGrZdLLYbRf7+f3Q%#Raww;JMr,cb%ZBp)t]9%„U"GowAT>]cOH?b=gZnbBGO_1+[+mMH'.1VbKYlTJG1Y''<b[_B-)E?bD/[loHF'^q„U"B#-U1CIx72/Lh'WIDjKnblvw1/t)x2C0[s,w.59aoF65G1?m-Tc>-=TbqH'f,*F„U"Bhk79B0kdyi,pb>AQTgc4j#qLa.q\P*e(s0sbh1l73N)B?^>,[?e\u4=p'8oFQI„U"oIhEQPc<h92VzE]9$Ypt%:Sj$RaYwca21[m%vhT2lSZk00;^ZUokrrcL-+wEnG5„U"-<gH\?Nf'\9GQP;jEeqbkK,E8jr9rfQst^w$+RfT;w%/TUq,2=yN*b9_LHH]\Q4„U"j0g7RnN2,V[5Y,DIIgWQ&S6_+K)N5$[y[EUY,d'fK9mZ+fK3G;BAk/,t$QJ1twP„U"lfa9mZUf7Yhb[WTA%X?ms4tWg3_0A2_5IJd&g1Th/V<DF]?mXaOJ+9TA$^%<km?„U"m#P8b6sCcfZ6S,2Kj/9)lpm'xl_sr.,5d3(EjZgf<stWdNsfQ0$Nr>25d46,Nfg„U"rS?w#Qrxu<MgCE8Vt]^*+*:NKE-_rS_#4#;Dc[-)j5-w6m;iM?20ymCChWHW2rq„U";F&&6aa)1dfi/08PZ0GN:G^GUAsO-;3&lFfQ.FtIFiQW.Wed./H=\XgiffCr,iT„U"Axw^n8JXagH5Zn-HaBdQdl6LZw%HeHs]mBVU:S]rU<+VfWAt3qR<3F]A21HJ,&J„U"jg&*>Y+HBIm41I,wWBqS+$&RCBCPtCBmoW'A(&mNa1d5+8((XB)UU/v&JCAr7G)„U"ZlBn'w2il(XbfDsK*fp.9vZcfE]SD]H?iG/^3uX;e>R\xQ5S%k),qNN11'&Qoa1„U"Ct/HQ+(YVV$r]CfHMa<:0JsXS2D'A:$NL4MAQ&ZvdNaPS-q2gB(yxV28hsZ.ZME„U"S>]b(aILmbSenMe$Z#]AWKB)J#z_tmP<7u)+6c?dPlu'B[f271UvL&3qS(W()2;„U"2Xfr_A;0H:KAF=L$1twOZ+6EM?5*MooKRhVWnT3fn=bV)MjJ$l+RbF=HRXLM3d4„U"zT()PR-bU:ubheg$<B=(;c5sfWY,+WQ[qQGK36(Pin&inFACvi'2cp$tn<go(1o„U"Nxoil_yEUFWRBdbx,dC-7XRS_Av&THF^),VKj3l^6rYc>s;cAkyd6Wj5pvpL<>P„U":Q2cs0=qtqpDg7\5:jXbT*CtG]HcCq:_y[$gCFuIJiU%8nGu9A$gOvnVg)d[UDG„U"C2D0n,e_#&qG^a+bVPq\jf\=C8X#a;#MSc7lVS&EudCG:25I*)-Jd<'7PCqaIS8„U"Vo=_amqBx$=LXhPH??i%tfTm0:oT)F*I=[5/rXJ3e]btnd^Wl2socb$Ic'l+_18„U"4=<+po,CebuS8Vf_Q_$;gGsBcxNFnTcn+5,b1-K\GU6F[bU]OORaVsEJ87%X(9Q„U"\T\*mOxmUY?cJiZ*kk4i(RqB=G4Pgr2uf+vs'kV'\o3.2HmTGXvPA1[*<CZp.IP„U"-N1*%,65G77\-Mr_B$ah?vuI,nE4:$Gh7(BL3/Y[e4+=GYCE9^pVBbg>ecAn_u0„U"FRe&QA>IalVNLl*g:.xz#lc.bDO?_B<#X>'<)gjmLU1c&z$n5O\ceO^8[t:)rBC„U"<RIsSX4F:r$;6BEO8w=uPlE[25Ng\Hu2GL6qPG180YmDJ2=\*%Cp=RBv,UbP](%„U"SL[BAdRhf$;2ofQ3DgiXGXB,2o%p0C?%Ue]%r?Qo(U=l^8?fx2Jqo;EX/)&=kYb„U"^++g%y\SKU]&iTxK,LKXZGJbm9>1m(*0l5#$XnEktxoe3*D4iskc1DoQ#>h&#XL„U"s:U4<V5>_:JZ7>n\SNnMOQl,:*8'HZigNh6\lgV>pG</%,[2z,pTQlEiL02R(F(„U"i.,=9)J#N3&Cp5d>#J?:z^r#x.Z3]is]7isgTFfrji02O4fq89*,h<hsvqao2[A„U"MLERZfLP2[6>AoB#'W*lfo--ny6r)0Vcc]D*6*AKr=>,,I/*Q%yd?UHrx4'8:yE„U"q'e\Y5qTpVddB$%Q9(kEvmjM,j?iuYmS;_YA=HE[<NIUzgo2R$row46N&WdX.Wi„U"i1Ga5u[#GLW=zEevd-G]CEADB7QgPu8&jCU-8[#lBTD]J3kvTMR;5'\K'<B0my^„U"5U-EY>c1881YdGY'%+Qds?KsJfIA-1%s*C2M:pIx4B+AyDH$B]i^4E1f'TwR:-c„U"#/2uU[Sp^Tx#>[G6Hs0$[>B-E<[]cG424EiEs8MJQLl7D..+Qi3a?1O-=fmra\e„U"EA0li'syJ21d7V3bl/FV+QjeR#*Z=U9)<d6,M=9H14v7b<BW=B(-zhQPoqpi.IZ„U"(bIlse0/E+od1h3HLb4\U)T*2&+ldO%7v,A_CeL0o)AOzl8*UX;9OuPU;Wnt2o#„U"l*)4kDCBj5NtJL_OHOkoGqc[%v,i._Eyr=x*SY(Vgz%5z,ou2BZ_(RuRp5qz[bW„U"h;d#0_6V/kQd&Y)/.Mz0N^DpqRSyOTqq)Z23I98qrX&Dde9j,&*%zzZu.OB7^u)„U"<S=%)3;b-PGcqbbr]dqfATFz*EHh/7tt1rUxjjwwW9?wGY*T8W1kO1ZLGR*'W-&„U"-tmLNG%.Y5Lo.u%p()9%%%%-g%'KGmEh?&-6WJ%7%<x%%%-%%%%iwf&&SgfFxfb„U":b&\]+fX^VxPoB<eS3$)XKlEsJ?QF<e)WXh7YUgr?0hVX#o5B[%Y2s*6bNuzbt0„U"D/e4](MRoEYQ+%yzOn.zJxy#_ipNh=i<#Zq58F>G-FD#1T+.-X*DAZ\bBkko_&u„U"\-lH<XZJImTFQLX1TF<dRTqME0%tu(OJdw<bK+Ka-G/L$VoMm7mR5wXUeL<iu2p„U"Gl][6RU'(x8r=A\,ZJJeB)s8mrJd?dq*LVzrp?jBEHBF[KHmYW81QqRihSH1(4a„U"^\NwDE=rvtHM-8T]vTkPi'hlPh_3PscTG#\+C2#2]DN4p>*H1PCDmN*F2/;#SsV„U"5O8mv<#dB(HL[Am6'A*O^UB.f6Zmm5?oJ,D:38vg/Gk:i)2vXbUoZ\^J:VMBc(6„U"%s-(PB==1%U[1QIZQ3k.M8PiA-j,]$j3va*J\<bijkE(F:koCS[L+EU?DPi/jJA„U"SWc\iUG23okcWj'n:_As\OQ<qj_/n_a=BIhjLF;P.p+wXew6Up)3Kj4)uZ;[4kk„U"3cQRG&3:_]fQ(%*,b(?nq1+D$,K=gDQFQGYFw>rvZ($s/$AQ10n,Vso(uTZQAf?„U"Hol9DI$VnX$_QQ#3.YL[EaJik\R&mi(6BZP)o;$d,_nE,h4e=ZU[rPet8'-:9pt„U"H.R\MYA5]0At<;%*IbV$I3m3'xMGNQC8+X<jbr?mvr8pWd>DM:di'=Js8#p8K&d„U"a)7VOfxS%+[K8MBQm6L8j/k*Rnv,._E0FKf<-:7g[LfI\r205\,e0JS&[JCx/[8„U",rUV?'RaVDbxvLL,(YoGBt(+U);['kVzZdUuC#>5uXv?o9uP5^>7ue]c_EjFr:<„U"hh8Ndo_+G?,nB^GI0W%C%0t7p_QbO7.mbZ6YDE3=3Ld[;7e)gU01e'e2X%YVA=1„U"7flFTc4mZaf\?Z*#mcgab.VIiWrB&h#vx<UF9W]5_sV__G^XpISu*&,VasDqC#r„U"/-SK?(I:2>jua/PO%v[<qTux8]5s.YMSzB]$5]x8RHudKksfh8#>(MWM>^3VSEG„U"TDd\?KqNo+av?_?sSF(*qnfb(ubmV0=F+t(s]r,87=$=MT/;WlxjDimD=[G9mBk„U"rXCYfpzSQZm-]JHMrHvbdl<HM*Er&F:Ocn?[8q]<K2XO.O]X>H;CRx2R+HuJ<Q&„U"N[HwT</rJ9Cr?Ibra'8Fe-P[/[QP$s=S]+A(YK]JrH3Tyu'PZ>+#,?.stCzLW=-„U"t(-RP#RV\gd?=aosX\B)sHJeKnkJH<'PSCFYguE-mw;8FO]K[Z1Z5Z]fGrvtl98„U"XF=j'kK1o[XO+t&OKrn4*usn.W+h<p1ho\mE6RlB[)fv4/Ua\fxn<$i]>)gMY<Y„U"8a?&]pC?DNwjG/'=nq_a,eL];m?6]ZP+&g)n88leux;ppNIbS\mjeEWVdNccsZu„U"6>.NlDa0IR))m7B#UA$uF^<Y:u<v6Gd^kOW)mpxYK3yJw/D.LS6l(J=&,>wq)nj„U"Xg*[HlxSXsJ>^lL=?_u2QEX*su7U5l/?P<#kOki-+ml:*nI<M'1->6*e>RUnLVj„U"Osn[rwmW#AwWA5:+ld(+3-VI7^-2[se$2=0kwy?SL1.\9+4OLiL&V?[=(Fc;W_$„U">UYSCk\k9+B^LtX,h+29vX#<v31]e#d[*2,N(;d4Vs'9;R?XLM6XBdaFpy/(&VP„U"YXY:/LN3KiphL6L>f#fAzpHtrp0iUk.MP*i4U=u*0v6.cal95dLA.o8Yi$M$YYt„U"35nG\Na[OD_HsAP)SCE/fPDW;6N5BQ8fyEi:R,L,faK*%JoHCFeXpRv((+Yc,hI„U"$jYgqxjgUOuWa=-V>RWeI)Gohc*KgHiR]B>44_C+K<Gl9Di'g'Rm]xjxd$BA<tP„U"J&UuXvvbg=0LF;_B1?F5d>OO&Hyc^3Fr9.0xO_V(0c&,jno:vqEwwJL>Eii(oOA„U"[BF,qjiXdu/7blHXiPia*[t#kh^FDU9SOSm$e]C\R83//'(>+MJ^J3UZa4^w>d8„U":HM^DyHoW&_#CVAH[Lh8CIq/*.NQ\&0^A&alZTK6?b-5x9V/'ruGDX-&XhtUv6/„U"M]=JrS]KiEtspdtVJiW9UeN?HEdW\)DlYbcF>/+ldKY(_=2A[\pMbDe3h$(9EdI„U"%k35.DVk'fO6YD(ij-GX?2<j*,NqM:.ifTzf6r.P1gL:J2NP_XT)q)vNFm78YSJ„U"iqu52:9\d(wRElW,B1-bh7cee[_IHB,E/#+^>3oOXI>yHUq-*42jE,tYrj1pLLp„U"W)1a(aU7n56uAC,l)6#i3e*(,Lr+)L\Y6lRD]f>y+DH_05F;2hCI#q+m[f+8fa;„U"YNw)YPglX87Jn;NMum6^/n)K2FBr8P?6[=:QFKSHKVyTNGHs=x.T6)Wy[ydHa]K„U"),W[)gk[$6)T#nUn/OGIgnP2oJmV5igN[iuSO2#\bhUvo;yj#*kqAK*HDfCi^Xa„U"6M52$+md3y%urA.op<uv1+78k3MqmPp12q4%ZL1X?bf<8U2kudLSbPilqQ<]#l/„U"D,D%=O-;q^B5sMNJABs?TfKCIfmv5LN't8G\Ky9M/N>o:3>(zsi^Ww5-MSro/gL„U"ctjv6</P.U5h&u:Pg0uqH<G;:K3)BjqDt_bZb>]hFH/$0u^l0Cf/'4^Sg?Rcm6$„U";Qc.=Yh.Dcw,i's$f*:ES1;R]a05)bT\b*$SSQ,'>mTeXjX^7dD/CHFjl9D-iK.„U"LkoDPENYlJ%_f+hAIt)&L)4aSs(O)0&kLy88$K\7ndxDL+n4yFIFFYpU7$DSS7y„U"'TK><>L;xGZ1]bu;E7BUn^uX,<*/2tv^iKxu_U,&?i0)O'sMf+jtNb4zF].U7b>„U"'tif13.uy4'IWZ9va#Up-F?/mXHiIc6vJt6rJCqo;z3;Oo3&oD$0;ACR)r-V9&-„U"m_3wNwK)Eggf-&f/s<.<1DKor&%-#OP00q1#\8i)dE:%oy=B>VKFgO%]BK>VjmH„U"l1G&fpjOh2/ASERaEg0c3wdh(5ypQ(lwja$C7kJ#jA3.m\2>H//qZ242I6Vfe,c„U"WK:\rOUNnbo^y+at\?olWET7+mN)e1fI47s&M(xm]feB+BPvtL%\opoR142MBv+„U"r.HAWt\-j#AG0DV_3oYUSN]3ifW+J1n:-bMF)'BbrSJN1'wj&w_Ro8fPD%<[QDo„U":'x6nXA;?Xexk<*MAC&[c[SBs-6R9Ja.hz?-[icN5<A:Fq3+]q1Na%BZ1:Zaj'q„U"W8qGLQC_KNf.t)lx6&K;Rcr5i7Sv>O^WKnDzk4RqDC^8l1%Ib.rY3>YU?Ex\0Kq„U"RaQ$H4jYVBDdKq%E9$8cav6E2LGArtCdUOS6?*-Y/w5M3Wq;>lT^<;=ZUS>XU'y„U"u0FfCF00j=A&*nquM/Gf9c00j_=n/UmS:0?t<YmBs\\mG'Rywi:[d0Se?tN=ssr„U"6t_5xGAuVKBO#JfV8=[qXL#/oZPuV^;oQR6ZhuBHDg&Av5Nu^KoR'vWf.3)*k3M„U"Au=bBVT[BYOV[KW)K3LbE8=F+G4P*GPV:4ldeMJJc&=fLi=>4pgg'LTx\&QMS%*„U"&cn;q4ux6>V)>#4pZUA/6k:g20g_ReM>jbi'c/d[VZ?_9gF0m7O^&V1:kvCb=e$„U"b8d1h7:-_$r.__10saEg$.V74[SDJ)&4e$-U^BbtU.Xr:-qOX\6>,P>b%xiAAA-„U"3=A$.PJ>;:?N/$vpDw--eXi<7[DB)0r5V()STSV;%?8cuM)0F_7o=7*jlUd\<j9„U"=(sQ1*&m8t)9^;G%&.MD1#MZ<KjO8*7CVN*/Vhma4*cTSq)4w7Tp$=oH42dc#0?„U"dX1G,.Bf?Q<ZJ^-Y#$.'l_/qYO\hPquw#V7*][ZGV)N^_]_;VU\][q)Je'k$[JQ„U"gr4aFM4MHW]jk[]_EVTiV7kV'FX502D.CJw4QT\ZOi#IY6ckm$]gv[+F:WeD[u&„U"lImP3\)7>k-&E#w#=w53d%9;d;m,7_#p[MVFNz[>r2PH]ve?Jj<Fhe(4'L895a/„U"UoDr]5BUpO]m0]fOf^3ulG/+ot-5mKtHbfK,-r3cVI-2OOOWyVG-AJ5mxhatur^„U"vSh=HsX;OxI*[hf$AH:'gPbIEhkmZs?>8HWj0bVRYGe)lf9$'WD\>^[S<um13ED„U"rzA#bXsnu$s1On=BUsw+8p($]nn$</UCL<]cM1*m:N2*s4X*$B>,]sI'Vo,K;3I„U"o6OQC%B?]A9LFi]to:%8Ejj&y]PRVWnSVP9x'0gfakAD^7?.QRs\+Cdmm(lQio0„U"Xh-Omu[:ATxso;dTLohW/&a<Rg9NJu=Fpki8-B/l6X/1R%wUXAY$9>X;'H%]JXe„U"Q(:5ZIDoV?ZMr/n(+twM]tM:/(PB6eU.B3Zn4MJZR*^(ij7d8FE#)OdBApXOL:I„U"%BO^OuEJz+$eRP'KbTKwgmnHR#2,J-1Nu)0&XDX<?Z:ZU:GY%CYt/'NRxW\d,'f„U"=p(5I9T0#L5<x'%7BU/(GbP'\bt0;/gMuNf(yTkaJWBq,g[G+Q<2Orfj*Sb(CGt„U"rfsiY9cBdQ1GVv:,Q]I:cpB_XNCot)8<F+iaGEXdqRk4W2VK;UY6R_l3+d];_H1„U"V<]c6&$rDZWgHLe].1DMH$I;h-7qLT.ufsTLDVmqTLG=^Dk^Y6rPhhBu/FoD)mP„U"hlOM<WrvY8P?DB_:tHmsLD;HEJ)ril[KsqPMliIpl2]$2awt]=Tc12u3Qy&)7vV„U"-D-2/TwASm2j;(WM_G[Rz*0RosA<XiDj8?tND'DP$TdI?=Bhp4E$G]J9SUNHQ#p„U")iV3#w)5O:2haqT:>_H=zU,-RvF0Y4JZ4G*[l2+Id53[D\fO57q=o+ltIzp[-N*„U"bAL9w[Au]2h1qQ7]N*w<A&Q-PmFm+*8k/IPrsU-*v<B3G3X=QUEA+;Pcn;PLiY3„U"=8OI94dup&L514bSP5T0,Nh(Gth.#swDo9PEUZ*kfNz4Vi]IRi8PJlOeRfda>S1„U"XzmXAdG*N;'\7$2/LEaFMB&Yb]q.6'/wK,xU4Tm9(E+M/.k8c*=%cm'BZ-n_r-G„U"^b&xAzdS6?DF8dHdb[)A.&/clII[7:A9IaSZqT;TIOm^-wLM/.W0R).]sCbK-g:„U"k$qMn0YN&8oF?<]rAV7d'9S*YnC*:P01)np(udfdFHZ:Lx]:aR*YV.pKZM85G%S„U"IT+t=KIs_b:hM#Z(Tu1EKKIFRnEc(XmR^oEXOeZ_V'*lgNRig+']p.9EA.KM?F?„U"-4dU7L2_&W4D<Ch/aV7_6xLBH\,N^1Hl>'Mc)A<5kn]H/Cfc\Qh*MIa.VxgLfY&„U"3NHokEEP>&oaa#FSfi90V1K9R1aInlT0&i-0<2AlG(q?[ea6R[R]AR<#2IpG=?X„U"cUlu(3\#f<?]tExO^9YzoOMxJlpiqy+^Iv\0S0*UE=RT)*RqX.e]2:hG4$#G2aS„U"Z[GWcdK]sPb;^Z%CB/Ch\Ur?GwL/U5U=D;Lo_'SC=LUXD<eY<lP.ns0O<B/MXvv„U"D]M#Z9>O&>&(x3Jp24+a<6nGSjNCe34]DLgROgI*<CVM*pL3pTd5bYSH%'aUKog„U"_fJ4JK745xjT8]ocAZmd<(+&v51YDV3dV+Rcp/n<%'n>B\:a/5uoVF,sB./7vSh„U"Ogixt,:uxRr11LfEmo_lh-&LxAy3Z/LNsmSdZIud;T2ED-NR)BB[4-b<j3F1*P+„U"A,,o.S#/Rk:iY1mKw*3(q:A7UR7]2gk98a^CmdO_K7k.1etHeK*v-$RA_#=)AU-„U"Ass-CN;GHVG0<Zh':MK&*yy''Scg*88q(eG_Km_=l(Bm9b\w<D00pGJc=Ppb=k;„U"J><D%]D[O\9MNgP077shY9(X2eaQH%q&/lxO2-./NMs4.r]EdWnP?hz_*WF]Ug<„U"uZ_g9<mt%Ude<ri'XhT5x.AYpYnd3Pc\L/dANQYeDwBTg5OH9$U9;)7=_xD:5+P„U"\dOn9Rs()?A-&;YR'PPaAONo_E+)Q4k$/1+8ul)%C/^6V*&Z+,jX*nhnvK^YmI3„U"Qh4V9O6B*joA9uZ8mNHEmUWl?fz+g4M&(&B-*/[N0Gk)E\*:ZJimKg>]b4-%e$n„U"Sao$CeHW=pnV*?s0*w+B7ACjnM*qL9d%oo8/?exWAn[B\V+XdQv%kf9epE'jmE9„U"b#92l9Ld?MZ#:BZi'Rgs5['CqSFc[<.:kZC+[HMuiUlpL:VzY_/Zb_t$7?b8m5e„U"]PWG-2mw(/7HB'PE0A\GrX$bPgA[=#wZG:&S]4i?qoxFjR8C#iFi%0/I1z0+Xo.„U"'_9%3J?_0C^KeH'I;NN/Oqx<9;NEE*=w6ZBk<gC971-6tFI<v'[Y)PHm$6fw2>%„U"%JfZvER0PgrQ.sls5hG+Nu)D-S9E7c/TKp>=iM[nlT9fA#&&b-aDV'tAOi>f]A=„U"c8-wU3foBWjvPM5MpsW*AW.s**$^IJFvob:/iER$m3tE(mRumodUd7Xw1DoshnD„U"UsA4aDSf$OfWO1OL<2K0;5ngz*_p/yI5X<:8'r8T*qfZ:i+VR]Kp,El$VU21;pn„U"\'lXNawzM:Y2dRB9g?EJ'liEGn*/UiF*#,N=,cimU_VJhsmUJ4O$t2m'+GCxpEP„U"Bw[]#n^d&fENWb?^nkRrO]xYc5kxpABq%c9+VT5W\$BFm+Q355r<MoY*J#7l2/<„U"B'b27m0\qVzW_kOWJ$,DMBsve%0OhB_Q_a23nZa,a)Fx1ZrcTe$g;H#vMq-r(C&„U"6vlXIcT6-:%aiGUq<WOgY>5W'i<z[f<Agg],XHwF&_<fP[g2xte^;&mCi=fKa\7„U"h-Gh#4RKWx8M],]/5wX19K>'#zRkNEU,pnUXPutJKrO<R,PIKiQRu6/cdh<>EX,„U"\q#=S'Hi0TuLUpYBoYXc;'l+w<ioC-qL-'f4yWYatrq>_Sc^U?yY?WtfDU%93e'„U"U-;,780c92&JvmrG'-ghq&rdwZja3g7Fp4'\p97FCJ;c(4t?RNhbcy1MOR1gt]E„U">Q8gp5j%SL3v)QqF64RF[-r#+QL>624:m(iw5?_i93R.%+5Me:$:Yf5rc'-s4k*„U"T?2%F]e\)rcz%H_ok,Ei*<IWjZAq1Suped7u\Lre7ZA4khQ9<jk4l^PS_'z_$+;„U"LlRur%;UVe;%eYXd=x;B;8'Y\^ssfRI,NH,OB4ZPk/VSUW9S93=p_7mS0sZ(1B^„U"EYkEdFyb[isahqw)TD&glzMXle#&\HyP9j#'X-+GS5Sf;G(v2MC.(BluA19=;^r„U"4s'nYQ9?a_MQ8NFZ9PpS\#fL&I*/>1K1+Deo+Bd:8i>L=To*ASp_/APbloP(-^k„U"=#TMVO*MP=.#KWiB$a.Q$Bj,/+fU:ci]%o_=XW*qp_f$'(i/7??>l_=AE0*$\'L„U"A-yi=kHYGoWBwO]=5k>m__dVb9n1m=a1Y7?9rv3kC#49m6P1AFKaFy/T)I4/$^j„U"AfRD]5*_Lrldx9+0a(]VCBwSv4r-#B>H+AZn6_/2]/..T&d^6+PaDoSaW3MCz42„U"8BqX>YuEi6loG'43TH<pDs[6wj86SrDfu;c,t_Kv]02SED$TJw5'[TnG6_FO9W<„U"bqttQ_t,;kj*KT)[T$1pGaemn][ues5:?EBn)KR2:^<u;\R[F1IZ.P5am^<bpam„U"<G*G$-U5(B\3/;Xl,mD^[gV(z=PZR=bL;2NpMgz:I1Pvn:^/^*2uSv]S_fYlVEO„U"TOQ[7zmC8VNBcVEGi*a2&7a%NJ#$/4-occD#q$G[j1(<bTJ2#B)feg<)v=_rWA7„U"lXhAn\7qY+'IV\z)s\=tFMF7:_ttnEwem,b6\Vtr<7%z;L&uZ]ZMxk;AV-)'l4#„U"wqRJ#5:GQ,V)]mOL.$6,:.,Cg1ZWT:Tiy8gL#H<>A)32fzB\8gxizclEP*Vb5;H„U"6;?g,[XiSq7fmb:CtN<HJpX)wXeDYS$06n.hMZ9Z_[OT;=-xrZ-G4gzMwB-cuNw„U"jVVa?u%Tjtbm(FtI]8kON8#nQr-*pOPEC$[QmlcnRJ&u,PAQwnVbThn=KFeRE[o„U"\z_1LbOlUeo4a$PV]6d;GhCa>dmT6iHrSvIoJ=vt08C5<h+$pi?'.AJC3$qA+yM„U"]?Q5JEPz*-_6jG]wYS;p'7Ipc<MD6c1hY5Z(/d105&-/Mva,#ZZ^I&daTpM&I%U„U"pQG=N2BSeYwC+,[jmH(s$$iN4yfER=jqJT]-ly?wRdH5'_QBGU%n+<D4[Ifcgie„U"%lOj;]C8eBci=Z:Rz1v&\A#PW7FZJPCz]G_FJRBdIbP8,7xb.8H//g5QW.F?53f„U"T.ex*d2jJ7Gm9r^<qX5)>=DJ<b3?397'A^]'*Q]_;1]FCGo>Ji)Y\Pa5)d]GeN^„U"R9w%4zm[lo;2B=Rs7$jE#>FuhQ/w=c=rC%.7zl_;x>po&[7)uTkBMbgGA&6PWUS„U"DMx1Avh/gGB=g*3(;U<pw>ZhHUijiS[]b3=/rV_jX2l0p-dt$/QtEhjqBw1PXL1„U"*I&]:?1T]grAXDn0z07mO.BRUq+^]sxXeLy/'x01(UnMLIM-DUd9$b0^BA$)O(\„U"XT9)Y+E<oLO$a0*01/=:qM<9&sBU]/s38763Zi[u*sDlBnE,04c&L)XoW9wB;i/„U".#QXO8Q_>>Pwn3r)S:R?dYo:[%HG.6>%K5B=\P5Q+LG=4:EuFKN'MO*v6q>2_wk„U"Bp;+YkQfE2PzC2:uLP>rJ4G]JG;xi9iyQ-B%OL*f3X$'^\a-Zo*F>Pr*Xv=^u3N„U"[S3JMs3a&Sr%YmbO6.=9%_jNL88.,49?R?(:fkmP_eJW6H'HoE3O0rHQ(40f5A#„U"LuYAHy(.c=C.wDDAO\JtnID;'o=,NxsRO2S4uzh*%AnCe9NqVRYG7Tj2EjjpeH>„U"Z+Ilc:xp:O>zWNnd[,e]EY*4X3Re;b7TP7&keYM#Z_P9E,IV9WDAhE\^De#-ADz„U"=kW.dh4srJOIUpP4Aq>nnr**kt#n?jmTIM;b46Os;&gTw<,k4bY?^kKNsM5jNfC„U"e_VC>J&7VMV/2?\TfhvH:['X$/u[UFY#T'C8Fdxax8\wQPc=:lm>7E5(/x?TcHw„U"%<\>bB3ot9Q%vL;JCSEF\&KI.QZDokT-Fi)$SoOol.gN#ubTsl%8,e#6(Aimc1X„U"$;G(I&Wr*VY:]_[(;>W?x[vW%;hSfctyBtq;W=>SZv;Iz99&Os%g6H(NaJo&9.P„U"D1zTz)Q35nb\-DS7OhdoNWi/b1:ZzMWc4sQms:mw3t;kL'i_oKh,)9.pHkdYk./„U"(tHTJ_dEXskdJauriUq$'*(HA)VLrcF$X(v??>sg1()s4rRNYZz;u4*xMc(8l.)„U"cqEcqdA+qP+Xus.3u*V:EfTQXV#<w)rc[iTnD<U)(y%x%?UofAgQNtCZfW3AyB;„U"wma(__j\;iXr/uXL2j7K<8l_%PNBQEtR?[nF&P/7PFra0*pX4KP1z+.x;9*-l=l„U"c4vC;&-9gI':XBAsPd2SIds>ad.wC#]R6maZx^Z0\Gi%V=H^,x+ZfM^eZvrT:=2„U"UZB,*57+_pgQ[C-V;wx9sL5Bsl4eWp02ZjQo;&hjWxM]_pRlm/%ciOhdsau2cL;„U"dIs=-s>[c5]<+A:ftdTt;ms>;l\DC:Kk>/W:F<glUpT:k\y5?^vT-tmk(=;t=d7„U"'R2%2P++eOcl:*l;978W.+]gZ?qJ+4-24#drak/hF5%3sD.TlTFvaF>]^;.)'Rk„U"r,Z6NfMWybGe2g/H-FPg\a7<Sr_;6w>>Y2F3Sh+s(*E0vWm\f+B?BS1JE[sm]eW„U"w#KchdyAuLx]fibn^$S:0DSKYUKvatm=.MNMCG(Evx92JlBuaJaZ&:<w*'Vku%e„END SUB„SUB V2„U"]bI)$>4X5t15,fB/UE)p(dwHrD2$(s-YG-]_+d--%X6?Goj,3V+_A&1=sl/s1j<„U"[M,6bfv8+jx(KRx46=\'Y=(Mu/HHf;Hu\c/:w;\%(pIDN+'G>3/.<5D>O*O4F83„U"Q#/rbRg5AobD,]nlUg[:LW[k#PfVZ>V*ZI^OPRb*>/t-hfLSH(Jbsw0]p3qmg:D„U"i/lQp:WAM.g3'_AL+IV:hWqMdBiFar;nPX:wkHQn\kg&cSV1(IA3>yGI*$sM&Wd„U"YZ-B\imo_hz:(+^L\dprfpM2d9CwC69ybW&)41=MmmZAYws:X9&beP:=&wanLp0„U"7#[&gNkgc&#FYwrl$k?FM)<_;.oGdIs:M7;A3/ro/&g3p&Hi5.La:y9)N*\<dv%„U"7.j^?F7ZWa^QVmndQMmfzw6O6YO5)&f0>]wtSU])^G(_CGgHsN7i-8nrn?w:my6„U"#KtgVZ)SHq'v9.\Rz&Tlje;qs+s5;)Fxh;5GBB>K66dLNMbcL8wyYpO*7O%&xnK„U"'mIY'MBfL[WavS*:9vbXDlVLoZnh+YpdK?\WA_EN5KOU?-AqLRZ5mmr*^gYqMjw„U"?CsEr2L<84/=lhZa=wWl2HB7[?spQA_#yVU0<niG=KK#wq)7-(n]TWcnqOY&F?_„U"A>Wm1A+*('U.ymNncaC-O$P/*;4ZN'E'AKiPPWuU;YY]#]'XtnhD.3+PQ]0,JQV„U"cQV0r5(^p7RT#lRq6LW>qO_1+#Oc-,*5B=;+[&>u+Ug\/Dl2WsGngI\g%th=&7U„U"z;i\In5HFmP&YTKgNW->93#H-Ls'[HID7C$B-MBQJL%ZSqKb(+q8-ItZ,S1[wy4„U"ZHEJBjk7XtS'orqs+d1vAHBjc(ZB:Veg,Hbj>RQ+'O$sMNK<t35oFw>bZ.=2G+N„U"RN#RY_B]\<:[rU;wh_$gVDg1S'Y)*GA+L7v?g;.W&d'%lq9_3rcCJ?9bQQ%.tL:„U"0=i:/7Ac$A$70.KEl>pxOq%KYgEB83uk9dCWh(C<VOGM+8v##)l?tU-[TJ_fh+(„U"7$S0mf+,XG2p\G78\mRz%0LI-7[s;V\>[:p.1&-I=+MmjnyO2NcpRj*.cHCWo:R„U"#nErAGv>2FG>lx=q\n>0PcxYKg?9F/dmuNjO*[u4i:fwIXSZTqi1Mf:EW^\:-22„U"n4EDxR:.22s1<+t(%SV8whUi,>I>c\#h_9['MO;Xd3)DCP.YeQ&n$GQfWcv-&0/„U"G%zi#xRP?':QJ4k<^ie9qoRp:qG'^7Q[7(D;bC6fCUp,IdJjHQSyESYt-;o\EFO„U"1&V_[B'R]G_rG4hY>e7J(pfu4)V?b/QnZr'0<<_UH(:LJ,1Cn)9x\^I_^Oq_I=1„U"mP>uMbV_=6c:H0'MFm[s3q4Lc6<j]Gfe\AlAjUJ=#XT0U&#:.bm%V[G]NZ64%G'„U"0w)9]0c'__9&QM,xlBafU/#pa3t3j]*Z%jr;E+xNBPr<.W:m4>T1fm#..qOFWx.„U")ovF0dMd=B()EV0,Ay_+k6[o98Po2_]3]Or2TjE]u(.<HU**Ppx,2ZWqg'^KokS„U"I_bL<dI?Sb0jY82\45tWINQiZBG7%\V'=pnmd'0hk'ae%)>VK5%>/(S3haaY5<O„U"N82UFdi'<Ym2)[+=ppxw\p/nID*Aq<5,h,KH_dMHSN])$deX[M<dMUjF;&d7bL]„U"XK1B./6QN5:+=o*6p#LidklFg?Q]_*2Ti6F0<qhw3bSD.d.SV5-SX[4n/4Bl#00„U"P;GK[<1_uodZN_H[n[Dh8;m9qo=.ah_T<>Xd5vN0J8pjc:tL,ts\q^LCifJV7-g„U"pZrJgpuRnsVM==pHE2SK=X[hBKLGc*Ahhn;K#*R[h7r<kC9Z?[jOH57SU<\iq^6„U"-Y;^tq6uOZRw5=Ed-arkuhk65_A'S\%a85$A)*m.=]#p<+l-M#/PsA_lz'mG&pk„U"dOdDeo(%K>XJc-,DXK:f8*l;7LqkrDFBbBElM0r,=8*mEBB&_Qed?\u-F^Fm'D$„U"fzb]a/_qU-UZGDJ0L)s2g_O_p=L\J+)cX([;Im+Y+^Iro3VL7XbLFGr\(:*3N2[„U"DhCjrN268KCw(ot#u\[%#Dg<q*ck]C-d/mbj.K5dx;y5lkIPA)6t%L5$YS[(pIr„U"hjJxxdEPDi+(^GV7inO4'QkE4m>hrlXraDMP%-4./.[1'a%K7k/p;#nTX6sD4Ax„U"zKzoi-.'R,,=Bi8nT]F/meeMtav.0n&M*GOu)U\^c583%)o.*hHg>7LYip2.V_G„U"?hkab_?acY?]?wCe,\u8EbwJ$DwQiu[E6]xGfD[*o$Qk.f)+/#-8Y1aCsK4cs:c„U"aVF$C9aX<x6s9(<mtnssirs7<agih$aqL<$L$o37qqF<r/wh#,p+pu<cl)Bhl<E„U"2rQP8UDZt)]w]]NHfct%kse&/T<c7'CXkWr&g#AWN^O;0h%\Lt_SfAj+IU;%NE?„U"a4\sAf)W>wRbItR+L6*fTp8xBk:;#W$&[M0bl0(pPsIS;X(EegS.,2[d,JXZ]Jg„U".2cGL(0PU+]DH8k8x(cs4IUT;&=B+]Y&Bfq(\BP?9W87:bO5X[U]'lO'f.\Je$2„U"dD)Pxm,'47$/w0a-Mx,u%p()9%%%%-(%+h7=:][A'v3>%%%j[%%%,%%%%vYy%Sq„U"ngEf*0GXyN.-PJG:5(WH5EJS/H_15HX&%''Fe.CX3EM^05AMOYXQ%vfC'P0]9\t„U"/1CmnSYpl$O)$fUBTSV'SwDJeqz_2JQ]p)*neGz%?H<FDA2iskWG,d/k^bXd.&J„U"6rXFTh?4iF^ute6HP-x):Zh.O-*ts$6/o%OfumX_ZjU%M_WKjd&W(,3=QRKjeV<„U"'49n2hv=Sj[%-c-F+)6<%&RuT?:_JnQI71'O'[iH,,\[oQSjUy&MGifD-tJ1T.%„U"9eR_pYzDeK;,X#HuMJl;\VJM0#&LUm[o%7Hj7.aA*,sli%Ujq66gs5X7-J2C]ta„U"=Nqi[iEcsI-jQ(TGOl#Qj:p9Q6qZTP4,D$8%$3d-.>#5FItUVEpF%r%2OOd</wD„U"Pn::s?OXJaeU1X/5j=i]&G\C-Da=Tc6aZYa.GO(-T^z^9DF974h9q+k,Y'C[Haf„U"(b:Fe-O;e;FN4:+-1i/\bdQk(H-J:LUL).rC(ZT_3d]SgZnCge:L/M.vl8*r2Wo„U"1YJG](9n;HJ\.ttc;>XYbLnBOMczFW;?8]Ycgg97=VEG;wG>/2wj>2+<uhQ'/u_„U"Hd-Y4W(zf_?asg,64S,n8<%'YdJIWY.wA6li8b[078ofn5tccGSFN7=Pt*vxWjQ„U"20WAe?BR6A1tloUe?Wl9B#h-(B_-#(HY_4\.:qk\q7Zs*X#i;.JKV.DC^o($WlX„U"$GqLZVw?ml_SBFb]lR.=<0tsA3mor^mgdv>x[dy.?$c4&>]I'8Qd9l^G):o*M9t„U",Va0d;,/e8-WVQ0nLh'&/knrWceic<fDyjnR:T8lvE(IRyi<zJ$dHoMsl-cY+ac„U"lvLTafK,j+<xq)X0'kf.]Q_bkw_;r)w^>EqO_+6&d?y:qV#4X]G#Cdm4s<U3N\#„U":rP[nj%8KJlh1OC$=AkDLvtJJD2vwDe-z9_O\M9^GuNst=;$BndjctqfGM\V:r\„U"$zr&mN-qI%P(W\k+u<DoNCgrzlwTS8wyhbMKVt#EhauktGqO#4j:]H[$Ght4=p,„U"D/]S(O\<-:Y8.hn8a'b#TRXucPWo>n:wqvb$9mQ)iV_rD6*L:7\<W]j;SS0ObiM„U";ntkfH[EmkVsS6.7t0<knn:mH.]T7uHjw-uvPp5gQY<le-ptx4c>asfGK&;axVH„U"v8Mnbu8K-5s+4D]WyF0c?l(&ikXi)H$wPXOBClAu<%)co$bcN]6#\fKQx:fkv:d„U"O0Iu-YF.eNX>YLlbD.w_^2Vqi*do-Q%0s4OAqgCk6_D_fE/pDNhF;[jY6PqZfOa„U":]'HzXUDN>6&Xj=X*s(i$Kdkiy0cdu:pu\hWDrlfJkQ'ma$'<:v3I,<-ac<F[)d„U"SQ']K%Oj'swer.;53P:lU21FrF:/^;1VC:uDP(VQ)oeUE%T#&+Q8B$7^p,oZP'7„U"2r>ysn\(*8l4x0(%N/cc%\&;q3_<j-iEasw(kIafa[Pood+ywpO_Yz;Iqb+eoBI„U"BBTRlQ,fqGf1a*_(wnB.IJxT=B4JR;QjWL]=4DXz%2yQ+1qqQ3M;^I;);?PGb))„U"FjPW^Fm\<fa-crCBFj?E&^J\<DXcy&2GqyoiIg%jpbVs1_<tYE-=Ou.o&,#3N-a„U"d2>v*-.1EP2l^n>GQ-EePQ[R+m]6R$)N;X6$Yf&K:'Qk/#_XG)$xH=:EPZ6(.uC„U"/[vXbV:'4DWtQOnp7DN#ohieBpm_se$p\i%6FGkDsW^1)X'H.=6T2eC'cV+\T;8„U"H(..Y4m+S01=9qUWT5/DA=\MX/g<R5);8i&eB$?+m6*_/&NFq4zpYe,+<YYxG,$„U"FNlF'<Ec*7d4J&<:gNk*Fp%N&e_<-,N)\[Z4'*jIP-^USu4vlQ\PjRf4)K:e:qa„U"'9HY+X>5f]UCfsO3ou8;oUpO+S8;<uY\%58+;pa:Ak.,B,-Tmr\YTrZGT(GM%l\„U"_N'%=;mbQ)Il(FjDE[ai;7FDE'kk=<?AlK.FucLs:0lWO?F\s>XkT(N68bLvGu%„U"fc*:%Kd4.jYZ&:#E];k4&e-2eRnvFq.Y/K_gyAZp)sX-<Xsel^50?](Cg/dPr;^„U"_6kHQJr9m>w6bMN-%L92Lem#h,Px*j'34VdLfexy3Pjohi?wcSharl8WHArhcI1„U"?-O8+?fH__/j,qT3ai;c%:$W:#9ILYk+R'O$bwAoGPFT.VI3DXeCj]e&&;:H3jO„U"a?b01d/oRPg'i:nt<7HT]A<LETf$=f7Yi/QbuJ5R/7IU*aR9oR[&l<9)?yqhDdu„U"wpeg._SGk&gD/%qu$bIQ'fQR\tJ;4\,%.k*v%1P6<N'ih\_K1Sd)JJ&UJKfj9(N„U"6[eo8x(U_AexRPIY-*47NYAdj';8+L^Kd;g.^$&C,?_*1k_hO&-tU;7gStET1*Q„U"l3A6i[nbuUALMenv<+yI+Arg^pc5A:Nsu(KC^v:vNW5hlV'a0n/>^IWaQ'v&KRN„U"AhF/kyK[kk4<M4>$\m>3S-:BYMRFezPo-]Q0j:]h%$DAgXln(wWnBrqO\=jv5C7„U"h[f]68G^wLc55<;lD*6i)AcolVmP/6krc#JcSJoTUB>41iDx<8b-&\7hpd_A*vP„U"A-*Hd8gC3N;Su$D/)&&;gp-aZK^CFKP%N%bTvVQ%)3kxTV%tv8&&)c+]r]+:qn<„U"i#)&_f[n^NQs2N>\)8e]Q47o.<.J$b0XhQ2xC340-bFJHe(3[NvJSL1_1nrA?p5„U"91*1.m#4p5JUB%%__T^.^.kiH4Jpaupi]Cch+5C[gKr[pKUNUkhj=C67O>Cp.OD„U"^VWCW$u%A?Oo-FlrDSJA\pK8Zu76Jj,J1<l/H\Jj,^KDLcZ+db)QdPO6wpg9Cch„U"R7o3CHI^],3WJnu=wbaVagrS--vroMBX#%4lOPV1HKm$EIR:]iXO.;K6gHo;io?„U"z.l;8BDWY)F[5I5=L$u]1=8'c[$GpJzKMxy&#pjK1p1^;S9<jD?H1asdGN72IVi„U"<<(j/;iKl6[XHz_NvHo(ssSU+:;aW(X+s1A6Gh2])a6hNL4P%b817d=bq59uDDi„U"7a/d#]kS#i&XE2U979.P*J&&Jk0pB\LeNamugP)X)slIYt-K/$s0csF-5(4CsUu„U"Lc-gjgZsn<J=TmBT2[K3_-i]4Ahx:UV1QAWL:#5t\L9*[iOLMT>cb7ytlNddAk:„U"^A/naCJ.OC*e<asO5s]VnCWA4bsDn<ca.TRLi=+?4C):)Iylso;&wTBV<LJe'tB„U"TO9;l=xfTJ$S:(X]T%7NG-F<CnjDWSQs3<Xo2]QB?+d<#^x>ec#0F0YbL_Icz9$„U":/B)(rQFGcJ6'2qMsvT^w4dBPxFSB9q\6]bnO*vmYce;8.\ws$n%kZrfit<B9E-„U"^(lGx6EWK9m7lsw\GQk(0[KYvq]i;gUXzaq<6\DiYd1ymM(,KWo3^[$o6-.WM/s„U"GT6(m07wAgNLBgi0ZI4'o7mUv0(QGr:#P%27Hcl,s-;b-F4[Z,8cf;9d9HixxT5„U"K_bByJM>ZVXiFdxNJax.$-SGlg$M]>N=OTuJIoGg2kA[U]UMK9$B/O)rNq:XG1$„U"O9*6,qgsy1.5&*ynU.z*3]VC_6U#'p$2-lbXwNs/kajHjF.FQUhre<:BY$B/S)h„U".W<c9[Up\+nJF3mvaDANAg4*CMX/x[]7oiR.?b6&1;Yl=J$mqgknWt-WPiZ;YWG„U"t7YHC6j?H.t_g)ZW?jQ$lm1FGE5LJWK=m6/$VM]8o.P[DD^1K0;/qQpvRm.$/T1„U"XGnO,ZKH4u1+sK+vwbXlV_M^iGo=(\0S::C1p-G9Z%z]9g*)epw;J:=ex#kIZ<6„U"iiy-aBJ0$JM<T)GCb_20%fs3L$Z>=w-+i\;VNbj&,W8W^]r,i4p%3q6RKBt1#tV„U"AuMTERs^.E-Ugn:lBkx\wh^IgQv)fe*Q)zuBl*nqN%DJQ7'V86:+fS]toRO<uXO„U"GGI<^Af[AlY*#tpxLx6=c/xSt^g8.biV4^s#oXgZWv0tQ-Q,un=?tg-=lDkCEB&„U"e6LgW[GN^pPa8RXJU1v9;Qc/kz;t<2ntA&PLj3TrT3kNL'ZdL*1[]kwXI'3r>.C„U"kO%.HfSq5o6k:E+#He1(X_0%NU?w*Z9=1\2E2?dg_[<f0K/h>:)$iR=*P18:c/q„U",UjU*8:/i_p:uZx(>?B9$[D[E&SwQ^A/;]p7-;9AAwiKy&o=;g4.1p135/V?9eF„U"<a;'S%Q$?mpY%cY&K:ZX)MIh;d)K,Wv),x.Ow02w:x/adg>LphK]$L^$xr_N/:]„U"'a*l\qrD]g\L$XH9.f*hmaUHN(WcRrA;R4pX>TAJHBNdS9Xd=L]3Ur5PZ?U6<>e„U"hk7-ZF,VII<(pPuVrN3mB;vwr+2>DD*f^#EairUU._:&Rtbjk2g2iyQnNgNsKm(„U"V&[0t*4*8EVE\jq5A7T:orU:0&G\gqoK<Qg8vKi<9\^N(h>OJFTb>7=#DXF=k3y„U"/RX;m=z,f4(Soai,jJ,=8a7fxpjYMEW6JJwl^ww0a+Vwt9M6fj8Yhe1&+hc([EI„U"MA8lj_N0]-,j9TyU]YVlIWJ.hm3O/g(vQDK>QP2'cmZ9i0SY[uv#h8Y1%Ooh:.?„U"hMiA*[pfX_\eNM\F[SvY2&1?U=&cDerBjJAkfTI2ld=mtw%'jTQbW1_>\lTVq%3„U"/^LTap4?^oVHSVcdK#)FJa&Xc.W/v6W.g?,)U/n,&tDn&6PL*&&8Jvtyml4w3eq„U"$IXZtQb3A/MJ9bS)r/&qy7uX=O)*B/brOnnft0+jTV$\z;QJGEE-:FI^$]dgD^&„U"O7NLFNMBmM-0Nt^#'KLUXIU)U78U_>VyUOKR,^G+eD?\P\3_+wPbAEp-J6c]+C$„U"Gx0NskGI4jLw.=]JA'LrF3KXlN7Z<QN)1p2^vQ#7iULAY5<CoBG'IzNf%[]p<9_„U"i/K)qzh[ae]/;4]\)GhN=.VU<w5KC)I&Z7E7e2QJCoedpUlBp>+J2>CL&9W%4x#„U"lhwlS\f(buPg\/UBS#Q:#XG:JhcYaubE'\iqm7gZiNZ>0[(XmIZ&(swx/&l/\CA„U"Y0R<LOv0eZv^BfssY$C)[uaE]csIf,.lNAZYDF^ULcGsXG#FpUev3+:&%8cCe:>„U"=pg<8hfPlv+8SENfS-R?c#4,Q/k-7OOzjaRe_Z.8r'/nS8\#cd]tkC[5X8>4q0Z„U"+&C'+oU*U6f<P#\d,<=FAj,;tlqjn(]kek*&udlS1P)4+iS=r,+WD64d&S0]V<,„U"rMecHY:Al(ez#a$?IrHFen(H)b7W<12ZE8*bE%LCAVNa0,x?rqlD>60tM=3_'/C„U"2Ab#Fc&qyvwJj4\s8vVCWR-t9vOn]>u#O25m8P+.qd;hDaeKgzbo+3\)9ikm_nF„U"NbI]q\J<?jmvNG?mi\]M31$PwFy;YQf-YSnjI^3ZOgkLjcT]XC.T7++J<y8->5f„U"dTVKbCFIN[u*gv:qC/hI^prr6nljcuq/+$\EQHbDowmfE*pE[x?$4\_tn>G.Pg%„U"3.Sy'>-mOLQu2L9M*5LY1Ou%<A4u,(\]DqUoS#4ZX2USo7:TYlY9gBSUCt/8h9S„U"lJFYI);v',BLQnOpryXhQ3<X)k?5^'TWP7]F+LelDRz^0E5qZ[/Y/P26%Gb>bUp„U"dmBCTWruZjx_6PF]+e>u6,x2yVOhAx'*:R&*uT?Wu.0lc^5j+>,m1U0''<6g[E>„U"UPS&U=fX.JpeyU4+?=)P.vF2hh/CYXaBg)W5>jh32^<6\&xM.GR_MN&#Jy]Vn1H„U"[uukH6?Dw\Xk9MH7Qj'YNSiYqQrokRD)ij:lBRvCaZO;DRJIbqO7G2m-c%G=DmI„U"m',)lqg8YWCLS^$Bs*.F#Ir&%I2<J7[j1Yd07b%;I%p.z+N3]pX(%Pzzx[z+z6'„U"?C%X845UKm:-Jp?Ra'voONY9JFxNf7N0<0luq06JXYlQ1>nmBGcp^zk-HwPA=zp„U",Vst'GpR8,\K49&iU9Dv(fB5oO$Kc9K/)O('_;ges6D#dc+r20\oHm2K&C(ajeT„U"[5>%jgoYS8o-qBk2oKm3<F\E&RvXd[zXo*>t:Z>4oV1I)zZu]xxRGGWLGFI>RyV„U"/3G&+.[zZi%Jpp&_B/v.%mzHz(RiC%FnNGFRJRWtq9$D;_3p<.$A$kEOVv,-\Bw„U"qTP6MMvkwXxq&M4+/6tbE)1b5$k8BNfhLtbx#d_ZeJA2^Z%NAaI+k.B<Ii%/jBI„U"+4au5.ZCrk6>8S:Yg.=he:T,uKbnes[:eYHn93#R(OS9Xu-RoM7,hf]JI[h)[x5„U"V^%n.L7m#RaO[Fvy1qmRN(ydpzWlwcLKG&bQ[hUw_&r/^#7zmHoS9DFv)oAL%*4„U"]Lfrl#Dc2Orj)]VBTagzP[D+0sb?/G9.-N$x?g#8V<QZ+%\D<LF8vPe(rWmdVC+„U"m?tne'fA9lj4t[TrEd:n<9=^2lk6kTs\CwJN1L6P]Q#oqor&TE8MG.W6YIKi1G#„U"H:/,WXz%oJ;M91J6sl/YhCa-mD-pLDAOS_p:cer,z84rNDyT6q/-DZ1u^.zVH)P„U"j$wvIM4rk]gH*6.hUC](O88kPHah##%03v>):0uk,cXeHf5.b96MN4A2w*rUy>\„U"j;/4d52c9qOpz&.#NbD%&6&]pHS'.e2&r1z^QZE79[a0V8Xochh_q5Vto?wQXiH„U":L)JBp/c^Km1FGM[Jnf=xO[;hPZw\w)Rb&L)o7FUj;kL.;iO2s'[y]o%X&:Dx<Y„U"fn7W;5?3[I+WRmKP^A+ZY3MV1^6a^NCacK\\j'x<VfTi?Bica84Jku=$rpmw^1$„U"dL5^u+ar*vaM-PNT]8t\L%l8rH:F)Uw:LphxHTh3<b*+NexKnzo;&/[/NL_lRv)„U"CEJ4=gljNN-'h]+DuN8jE-mc,KCq-TXJT-MttMY(3;[80T#SrHqN6u\0cKof1=J„U"<o'1k]^9DDSj\W=:R(h=hVvTEwlXbsX^.3d*S=;:gFPTsy)#rU#[dgeRC;WmkV^„U"bfXsNcWu=7+fy>4Trd)d<,2]U6diZkDDEM(k;fR2MTn2_;n;q$ZV=;-p1.nQIT$„U"SWbZ>5$f#'PH5n;TXWAEWRO+L;jW8M$GUJc;8OiO#x0PTP%&?)FmO/bN>R)nP6=„U"H)9Z';xU0ni8duju[2qwh/C8Mm9dU:6qLFuTUliU<p?Q6VabGBtlTK\UF?nTBaO„U"o#l3ISk8e#'T*sRIq\075s4PH=-eap%7H[ndS.:=nMoQ3b?]_<P0$SNcKjCSx2G„U"6D#l\/'$HyU%pKML$*KlK+RaRk9*-Kb<iU:TBZ&lD(jTo/W8MU9Jc0X/'Cy9f)E„U"N6Y-F?phj14ytDI,)Xksdza\an/HZ:]J'At'4I1n$a:3p+&(MJ(YA:r3++Z)Ct7„U"C<1F043Lk9#oYxeM-q$M4L^7sq2j=<Pz=AVbsH)W-Akdp6DJ8=V'%Lh74m)mbB>„U"C(UxB>dBGW)XjVfx7G1AB/#Ka4[/C($DkMw&88MU_wp<M]WWQ$Zh<W8Lr#DpNGX„U"5MmfD34DM3%slXtE>6QC7gZo/6C^?K#ndW]w]Ne6;e#2_(O_3$%s)VR_^*P?7CB„U"z68Ch-^<1nEXM,m#;$m.#^pn)UY9gl,B>.bTJF'$l]39pvVImbLr9F=Qlt*5.9i„U"JgxT;K=<??,9y0Ek3ERD8ihfG,6ZT,8h=i5.^rW;j^c(IDBp4N15vc48\dBSrX9„U"6p-C/0gV;tY34TR=6:#7Ng=?t-xJAD46mMT:]*ND8lh#'%zwZ#4eN)#/E_w,=+<„U"JXbV'Ff49K43Ax-XR?1L70K7y2(WD7uaEJPvy=Jgu#+N,pu7[2)-T-]Z&%9II6K„U"Bp'grR'('5TJe7du4Kfeev)Z/,X^r+M8:;2,MF#r^F=ua(aUCQHb#eOyQ^iEZ^(„U"vP,P82bdmr4bMkyemtnwxoXd98eDWcw7+k^:u.5+t6>d?7RaU5Ina878pGBL:rd„U"f.h=196tasqhe$H>u2F;v4OT+>IPNJy7inMzhj^amobaDP$:4Av?dWTXt1]vtO?„U"9Z]sD2=3^X<uH>]^hIZBj=Zq>bc-dOBBsWmJfA5/#qRB]THv=)r.leZu16QZgcJ„U"W<]?eFo,u_D4l#2]<$ju+tB?RBKTOtrzSh^s0^fEZN;9n]TU'BmB-xejM5da#iO„U"[6vlV,6(1YaoNKtEvx/uC\wnVc/Cf*ZV)n9q6:]WuW9XCS26M.au^DR4y,8E)Yr„U"VN<;%nfP=WcKNqv0-iXup%&'9%%9%%%I-%1E]GEMH-34H..%%SG%%%/%%%%%%%%„U"%&%%E%%%%%%%%%vgiw(f&Sg%fxup%&'9%%9%%%I-%'K]GEh??&6WJ[%%<x%%%-%„U"%%%%%%%%&%%E%%%%p.%%#iwf&%Sgfx%up&'%9%9%%%%-%&+h7:c][Av%3>%%%j[„U"%%%,%%%%%%%%%%%E%%%%tT%%%vY%ySqn%gup*%+%%%%%(%((%r%%(%Qm%%%%%„END SUB„V2„CLOSE:IF S=12AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Luke Molnar                    ULTIMATE FONT V1.1             Blood225@aol.com               06-17-96 (10:08)       QB, QBasic, PDS        324  9699     ULTFONT.BAS „'         Molnar \ Kucalaba Productions' "Ultimate Font v1.1"„'            written by Luke Molnar in not very much time.„„' Remember, "Gratuitous advertising is ok for non-profit organizations!" =)„       „' Questions, Comments, and all that other crap is very welcome!  EMail:„'           blood225@aol.com, AOL Screen Name : Blood 225„„' -- New in version 1.1 --„' * Incredible speed increase!„' * Italic font added!„' * Very fast loading„„„' This is a simple font demonstration.  Feel free to use the routines, but„' you'll have to understand how they work before you can copy them, or at„' least put forth a little effort into understanding them.  Or else odds„' are they probably won't do what you want them to.  This font doesn't„' include the extended characters (129-255) because we think it's a waste„' of disk space for trivial use of certain characters.  If, however, you„' want to change that, you can easily edit the MakeFont routine.  Also, if„' you think about it, the basefont data file is WAY too big (the 64 bytes„' we use for one letter can be reduced to 8) but it works and it would„' be too big of a headache to change it.  Oh yeah, using these routines„' and claiming them to be your own is strictly forbidden!„„' This font routine features the following :„'  * Uses up to 63 colors per letter„'  * Evenly shades each letter„'  * Scalability (is that even a word?)„'  * Extremely fast for QBasic (Well, except for italics)„'  * More styles can be easily added„'  * The routine itself is pretty small, because it's not a whole bunch„'    of DRAW strings or LINEs„„DECLARE SUB GetPress ()„DECLARE SUB Border ()„DECLARE SUB Font (text$, XStart%, ystart%, xscale%, Yscale%, Style%, Clr%)„DECLARE SUB SetPal ()„DECLARE SUB MakeFont ()„DECLARE SUB FindFont ()„„' Instead of *slowly* reading each byte from the font file each time„' anything is drawn, we'll dump it into a buffer.„DIM SHARED FontBuf(0) AS STRING * 10368„„CLS„SCREEN 13„„' If you want to use this routine......„' Don't pay attention to this stuff, it's just all the page stuff.  The„' only things you need to know are the Font routine and optionally the SetPal„' routine.  And the FindFont routine isn't of any importance either. (Well,„' it's very important to this particular program!)„„„FindFont„CLS„SCREEN 13„LOCATE 10, 5„COLOR 15„PRINT "Hi.  This is boring text, huh?"„GetPress„CLS„SetPal  ' Sets up the colors quickly„Border ' Draws the really fancy border„„„„Font "Molnar \ Kucalaba Productions", 20, 15, 1, 1, 2, 126„Font "on the Internet - Visit Today!", 20, 30, 1, 1, 2, 126„Font "M \ K", 15, 40, 5, 7, 4, 0„Font "FTP", 80, 100, 6, 3, 3, 190„Font "ftp://users.aol.com/blood225/", 30, 125, 1, 2, 1, 63„Font "WWW", 80, 145, 6, 3, 3, 190„Font "http://members.aol.com/mkwebsite/", 8, 170, 1, 2, 1, 63„„„GetPress„LINE (8, 10)-(304, 190), 0, BF ' Clear the non-border graphics„„Font "There you will find...", 11, 15, 1, 3, 3, 126„Font "Over a meg of the highest quality", 9, 55, 1, 2, 3, 190„Font "QBASIC programs available,", 35, 80, 1, 2, 3, 190„Font "including", 49, 105, 1, 2, 3, 190„Font "GAMES,", 149, 105, 2, 2, 3, 64„Font "GRAPHICS DEMOS,", 28, 130, 2, 2, 3, 0„Font "and", 40, 155, 1, 2, 3, 190„Font "EXAMPLES!!!", 78, 155, 2, 2, 3, 126„„GetPress„LINE (8, 10)-(304, 190), 0, BF ' Clear the non-border graphics„„Font "VISIT", 38, 15, 6, 6, 3, 126„Font "US", 108, 68, 6, 6, 3, 126„Font "TODAY!", 9, 128, 6, 6, 3, 126„„GetPress„LINE (8, 10)-(309, 190), 0, BF ' Clear the non-border graphics„„Font "Coming Soon", 9, 10, 3, 3, 3, 190„Font "1) Sub Quest", 19, 45, 2, 2, 3, 0„Font "2) Pieces 2", 19, 65, 2, 2, 3, 126„Font "3) Fury!!!", 19, 85, 2, 2, 3, 0„Font "4) Ambush III", 19, 105, 2, 2, 3, 126„Font "5) Stick Boy", 19, 125, 2, 2, 3, 0„„GetPress„LINE (8, 10)-(309, 190), 0, BF ' Clear the non-border graphics„Font "Fury v1.0", 25, 10, 3, 3, 4, 126„Font "* Digitized 256 color graphics!", 8, 50, 1, 1, 2, 190„Font "* Sound Blaster music & FX", 8, 65, 1, 1, 2, 190„Font "* Completely mouse-driven", 8, 80, 1, 1, 2, 190„Font "* 3 levels of mayhem", 8, 95, 1, 1, 2, 190„Font "* Two different enemies each level", 8, 110, 1, 1, 2, 190„Font "* Unique soundtrack for each level", 8, 125, 1, 1, 2, 190„Font "* Numerous Bells & Whistles", 8, 140, 1, 1, 2, 190„Font "Download a test version today!", 20, 160, 1, 2, 3, 64„„„GetPress„LINE (8, 10)-(309, 190), 0, BF ' Clear the non-border graphics„Font "Bye!", 60, 20, 6, 7, 3, 63„Font "=)", 98, 100, 7, 7, 3, 190„„GetPress„„CLS„SCREEN 0: WIDTH 80„„COLOR 0„SYSTEM„„„„' For those interested, here is how the Font routine works:„„' Font Text$, xstart, ystart, xscale, yscale, style, color„„' For color, 0 is red, 63 is green, 126 is blue, 190 is purple„' Of course, that is dependant on how your palette is set up.„„' 4 styles....„'„' 1 = standard.  Best with 1 scale factor for x and y.  Like normal text, but„' with a calculated blend of 63 shades of a color.„„' 2 = circular.  Looks bubbly, kind of hard to read but still better than„' boring text.  Drawn with Circles, play around with the aspect for cool„' fonts.  The bigger it gets the worse it looks„„' 3 = revised 1.  Filled 1 style, slower but better with big letters.  Notice„' how this font always uses the maximum amount of colors for better appearance,„' there's absolutely no "blockiness" at all!  Also has kind of a "3D" appearance.„„' 4 = Italic 3.  Pretty impressive„„SUB Border„FOR x% = 0 TO 32„ Font "$", x% * 10, 0, 1, 1, 1, 0„ Font "$", x% * 10, 190, 1, 1, 1, 0„NEXT„FOR x% = 1 TO 19„ Font "$", 0, x% * 10, 1, 1, 1, 0„ Font "$", 310, x% * 10, 1, 1, 1, 0„NEXT„END SUB„„SUB FindFont„OPEN "basefont.dat" FOR BINARY AS #1„ IF LOF(1) < 2 THEN„  NoFile% = 1„ END IF„ ' If the file is there, load all the crap into the buffer„ IF NoFile% <> 1 THEN GET #1, , FontBuf(0)„CLOSE #1„IF NoFile% THEN„ KILL "basefont.dat"„ CLS„ SCREEN 0„ WIDTH 80„ PRINT "We couldn't find the font data file!!"„ PRINT "Luckily for you, we can make one if you want"„ PRINT "to see the demo (hint : it's worth it!)"„ PRINT„ PRINT "So, should we make the font data file?"„ PRINT "1) Yes"„ PRINT "2) No"„ INPUT Choice%„ IF Choice% <> 1 THEN„  PRINT "Fine, be that way!"„  GetPress„  SYSTEM„ ELSE„  PRINT "Hit a key to make the file...it shouldn't take too long."„  PRINT "Oh yeah, don't go ballistic when you hear a beep, that's just"„  PRINT "the seventh character of 128!"„  GetPress„  MakeFont„ END IF„END IF„END SUB„„SUB Font (text$, XStart%, ystart%, xscale%, Yscale%, Style%, Clr%)„„px% = XStart%  ' physical x and physical y„py% = ystart%„„LHeight% = Yscale% * 8„Optimize% = 63 \ LHeight% ' Any constant math operations done multipe times„                          ' in the main loop should, well, not be done„                          ' in the main loop.„„„' Instead of wasting our time with all this MID$ garbage to access bytes in„' font buffer, we'll just take a PEEK directly at them.„DEF SEG = VARSEG(FontBuf(0))„„ FOR h% = 1 TO LEN(text$)„  FPtr% = 81 * (ASC(MID$(text$, h%, 1)) - 1) - 1„  FOR x% = 0 TO 8„   FOR y% = 0 TO 8„ „    Col% = PEEK(VARPTR(FontBuf(0)) + FPtr%)„    FPtr% = FPtr% + 1„    IF Col% THEN„     SELECT CASE Style%„      ' If you desire a y scale factor greater than 8, you„      ' must change the division to higher precision...very slow.„      ' Or, you could find a way around it.„      CASE 1: PSET (px%, py%), Optimize% * (py% - ystart%) + Clr%„              LINE (px%, py%)-(px%, py% + Yscale%), Optimize% * (py% - ystart%) + Clr%„      ' Notice how this style only uses 54 colors, so you can see the top„      ' of the letters where they would normally be black„      CASE 2: CIRCLE (px%, py%), Yscale%, (54 \ LHeight%) * (py% - ystart%) + Clr% + 9, , , 4„      CASE 3:  FOR sty% = px% TO px% + xscale%„                FOR sty2% = py% TO py% + Yscale%„                 PSET (sty%, sty2%), Optimize% * (sty2% - ystart%) + Clr%„                 IF POINT(sty% - 1, sty2%) = 0 THEN PSET (sty% - 1, sty2%), 63 + Clr% - 1„                 IF POINT(sty%, sty2% - 1) = 0 THEN PSET (sty%, sty2% - 1), 63 + Clr% - 1„                NEXT„               NEXT„       CASE 4: FOR sty% = px% TO px% + xscale%„                FOR sty2% = py% TO py% + Yscale%„                 PSET (sty% + .4 * sty2%, sty2%), Optimize% * (sty2% - ystart%) + Clr%„                 IF POINT((sty% - 1) + .4 * sty2%, sty2%) = 0 THEN PSET ((sty% - 1) + .4 * sty2%, sty2%), 63 + Clr% - 1„                NEXT„               NEXT„„     END SELECT„    END IF„    py% = py% + Yscale%„   NEXT„  px% = px% + xscale%„  py% = ystart%„  NEXT„ NEXT h%„DEF SEG„END SUB„„SUB GetPress„DO„aa$ = INKEY$„LOOP UNTIL aa$ <> ""„END SUB„„SUB MakeFont„OPEN "basefont.dat" FOR BINARY AS #1„' Hey, change 128 to 255 for the full font.„CLS„SCREEN 13„COLOR 16„FOR ascii% = 1 TO 128„ CLS„ PRINT CHR$(ascii%)„ FOR x = 0 TO 8„  FOR y = 0 TO 8„   pnt$ = CHR$(POINT(x, y))„   PUT #1, , pnt$„   pnt$ = ""„  NEXT„ NEXT„NEXT„CLOSE„OPEN "basefont.dat" FOR BINARY AS #1„ GET #1, , FontBuf(0)„CLOSE #1„END SUB„„SUB SetPal„FOR x% = 1 TO 63„ OUT &H3C8, x%„ OUT &H3C9, x%„ OUT &H3C9, 0„ OUT &H3C9, 0„NEXT„FOR x% = 64 TO 126„ OUT &H3C8, x%„ OUT &H3C9, 0„ OUT &H3C9, x%„ OUT &H3C9, 0„NEXT„FOR x% = 127 TO 189„ OUT &H3C8, x%„ OUT &H3C9, 0„ OUT &H3C9, 0„ OUT &H3C9, x%„NEXT„FOR x% = 190 TO 252„ OUT &H3C8, x%„ OUT &H3C9, x%„ OUT &H3C9, 0„ OUT &H3C9, x%„NEXT„FOR x% = 253 TO 255„ OUT &H3C8, x%„ OUT &H3C9, x%„ OUT &H3C9, x%„ OUT &H3C9, x%„NEXT„„END SUB„„Steven Sensarn                 SPRITE EDITOR V2.0             geocities.com/TimesSquare/2609 12-27-95 (15:01)       QB, QBasic, PDS        131  8675     SPREDIT.BAS DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"SPRDT.ZIP",4^6:Z&=6240:?STRING$(50,177);„U"%up()%/%+%#+%\GnjDDe6>/V2.%%FR%%%0%%%%xu%wnyj%WSgfCx0/J%,+#+'41„U"p(%.,0.%0.,;%,-+*%+,+*%[,;<%0/+-%/0*+%:)+<%*/-*%+:+/%J+-,%=/,/%„U"-0,0%)J)J%)/+)%*9*.%Y,+<[.?Puuuutt't10Q%0Q0a[0QP%%1&GH%9:[\h7Xi„U"T%a*+7mH9^oYep<FfMDFW;naQ#o.+VW.DjHl>07Bnc&Igr40TR52HR#fXv*Ktql„U"gsX?G1vK2^*lfua8I_YW]0fkwo*\q%1TfNiEc=k3)2]]$fT.=#3o4mb=$xfI1Ma„U"^8W<Z[2bl[$Fpa5Bl3$2]ED^C]1:/J%hK2gYNt<#J:A[NS07]jq3GQauf.WGdTq„U"MTWf#Mfuj1OkK/7bK+,VsoA;fr;L3BnNn0dN$nF5WIkb4Xfk&dT1oB3dmhqAMh:„U"&fUCYE;qT,2p\:]ZBF5Q<Il]iT^bT5RWo:,[f+Z&;LFcFU8:)6Kt*qnLvjxU'Fa„U"NNUuw*Y>M0reA?iCRFkv]?D*0\rus(q[DIpP3_NWuLjId>/f8YsCMq^+5NS>L/\„U"l>M%/XX/_k]YGs9?AG9xV+0WIF0n+Yg<s=WlxItbcAotwLfpjhHV1VUexJq>3(X„U"Q.RrMKtlRH?X0pL9Rj>NcVGD)QxB>D)N5kv,#$B4'x]9j]>vYO(vcsMj/<Ow&#g„U"CJ]G4#_p</x]B:U9T;1BwDF-e'ysD>epQWI*Ns%mT:t']\0%;:4wtM(Ts(O>P/9„U"u<cNZo1XF%M<s/F]G+Hq0=wHD4-X3PNmCj=xg5U\J7bxE$3l&Qr;Hv4:&w]/E$x„U"X,76dLjTpv7mv,6/ol52JtM]:)j:^v$9+DDfruC8P$s#-(<h?I'6b<G$t<6%a/^„U"hCsNcCrEu?BB;hL978WVI<ouvf0P1CFIoo#.<x_<^a4av4/(2R&ox--72wm:Rv<„U"f0bWScDxNhHTxN-X#gMyalmagPTo*Rr]&j0lthjmE,T<\U4(MDbPkhTi)0f]c%[„U"#>6#nKV8yz7t+*\.Rj=x_qrJ2Qx^F<Q,Wx^rB1/M'ddLL*^snc35d[LaHI4.pn/„U"h.H2[b:GdSC);^4vivdO$37m3l2^7#$B%FrLwXX*6w]YN1B776(P6_tSh&i-?sV„U"Y*Xk=uJV)EtKXB\,65s-geR$6,LBWIX(jR2qTrZSp_jEz8]FlM=rT>8)mrLbb]+„U"2xr3JB3#C%3:WTgQQ%l72jk8<L/2CNE/E-)chIe\J2&ClPbij4-ItMe8iZ'g$.L„U")]EQL^XZO;2g,4B=iQ+ST.#GAm.2:&]-p:e%3wAs7r[&6_'R>\u7W2KBW^Vs]6W„U"_L0/W.VKeo+v&N7H?B\,^vHvbIU$dk/[mD2_=]Q8<V_T#m$%]*9()h$nV*^DhV4„U"5<u=hCE]=09t1uL1'a$,]74hhY72'#sqYWs-:^<[EG%E&dt%.,\4]YEr;+F>$I]„U"X+>W*B2iKq9X9<<uL=CEe-=9tW[M+URg%:]#uGGFBc#HwECW4U00j3Yq[XrAgqs„U"wQFC3[[FDnb3.40a$R1umT:#)H0(o+9cwETr9[kpEF9R:-7M[.gUkOpi'eTi2;3„U"X_B*;QKhEb;M1(Z<aRwUZXI]3?GBIx,w1O?p?tN_9Z6QOH?FFho7#.D>og%)rrg„U"L.qw'l4QkxhhurbJlM.Tnitnr_$n]EWUY[uE+k$D']Zo31k3L,m9A]p1W8F'p^q„U"MIw]cn3ww'JUd$#$dXj]qI_j/bsK7tlqMpXY3h$NJLn0rw7%lc__G'g)+?YcfO]„U".])UPPUEd$+(%).k4D]qv5euoTRE#C^LrJXL(B#Sd6s;Uk,310S13AV32A+t;Xt„U"NoeBnqx%95]U[rwaGQfhLK>5>1*jeo3fI2GCzbM0LbT7^MNMBkp5:PA]C1aa\s]„U"/)1gi/Ce#3fgX7AYU]orf;)->2ZcWP&Le8o$ezagHZ)1.&[pmUf7;<fMjKo8:>?„U"1enB*2>6Y=H3*?3AV$ZPiYsFnr=_]^IiH=Z-mH<\9ER/AqFtIqu9#$[_Cl(9O#:„U"_Vc<YC#a;0Z^CDQ$Ni9R>$fc4fx4a4y4/AZ?dGyZ]:/LE'TF)S_]9ZC0BtY%W=v„U"CM9+_caIDqphvQLi)RJ0g=D-[E'4?/e[RCsn>+E^H5x#XH\CrAj'>hv]X7pTMHt„U"hmO-xQc[F9SzY#LsL]G#Z8goLCEZ'+si'^kD>#+f\mU-_*H#H=O$I)u-Y7',kq6„U";l]?bkd#xLPRnD_4Qgl<R,XP/j$SNRr0()uZ;uc((_#VoAkaAC;OF08_i2<n,#q„U"=b6xh8w4OQVcmssc828r7F=ae/hA'w^]+SnsM7et,e)^VMk.b=#yR=4JIHT&ar$„U"hGX6:=Te1Jqk8Tnq5_Be&UioW\G6#4yuW$qtHUubHtA==EqPVLnAk/,3-W]n:b:„U"aT#.j.U=)E-I&j9g%9.Sq;Y3vC0\?)A1Iia[_Fddh_#1Lo2&YGU>h)4uX-__>#A„U"1X#V/<ipbJ8V+]*y:4dWa0xpM>aO[?x^j'J?LdD]\K)#,3lri3]g.,RBIDlfJEa„U"GwX*Lqhqmn&Q=K5ON5sC63BY.[e;yN'f_Ca82K2:^_2'CBdXK_MUZ/qdUBifKO0„U"5Wk%Yn\Ce#\tM_cg+/iy4<9BY]DB-zaJ8G).y$eV^YA?,$09Bv?e[NH^P&A_Uv>„U".8mMk.PsS[>yB?8B]j$dgwZ&4hlvGU_gJw1ocXo1i4Sr:zX9P)Ld-Mc((7J:[wN„U"2&D&si_B'2ak0PIs&QQ_67hk?aa.TKrVHgJEr-7uI(Y]FGJ9P3UQ>0:qOPITe8%„U"STMg'0Lkgb>c''Mjt=qrRDBcE:O\sl90^pYCKU(kH)L99&VEMDOPAV_5)T>CiQR„U"42xE/p0:1P&Yxd,,iO'1B-2]V+O-2s'K+kRLoWIZ^M4y*1-+Wk^*ZeE^+Z3JDw-„U"61'[:v>BD)qWUk<l/+9=wg<K]q0hcbl8TJ0vp4Qi#u7c+AEUE4=wUAMV\ZoZ%UY„U"7MQs;ott(M;]rh])f$)XF%%q=YikA%2X97hd#k(K6r]KH:SuVYPGKz'w],JJ'l/„U"Y_om2JLr;x4q<K1Q:f8sEmoGY1,Q6hXc>V_s>S^>^?#A+^2#*LS?37]MGH9-O7[„U".crhi'R=BFJ1Dk]B#Z5*H:T#=#>M9tSU+-\;If:obiM9*?bne[]J9'5)1q/[Ga1„U"D*aVFj%fSZU3_un5Yi]5<W0a'cdi:9]wkju)0[$5A.=mDo>g53)>JaAN+kqwVHi„U"dMQGD<I)wKz%C,21]7W1RsM1'C.VbTh0Ii^fOC-m8_bx7YR_AVy3g'Lf(%l'L./„U"'pq9)G-UEs/j)6^hXL-2/;K]0fiCuJA%jMd<'shPlZJmg%n$7oif,Vib;fIBQsh„U"2d$mg:,?KDB^-FNth;o1e:$jn=h50AW%GuNQP3r1E+KQuF5FT$^7Gl_AU_,kWfi„U"2\\RqZ1AK*sonCL/Qvsc*v;.]F^7(lmFidTDK2l<6wcGW&u9JBtQ#SP1U#GA\9?„U"Jln-ia)h*\A.=^YC6L$G&7DGsTmEq1g+7#6(i-]FH0lAj)J:^zNqM-8+&N8ucSE„U"CFG%n?,-NL=OcY1)_?0fg<K9:2O51v;%G_.3e2j%N-5Tpi4ANRA#fuv7]X5B-i;„U"]GUM2JC3-7GOdm7BOmCE:-U#*UU&FO]c'_a]u5Q5q;^]XdfItk)Tp>H?3Hj/?$Y„U"WKgjLN_yadjX<FSMbh#kR*%83hqFaGI;i4OERwbJB5x'12UYm&1P\MOr1S&-%+=„U"Wr0b/W+Ls3V0:-BR]-:-QNl>7x=I4J)7GF$Bk_]MPGE-d0j-J(FwNiArs]g/Kd\„U"8(OhI+pY*[p6(bWl9Z9Tft4I(3ga*U;4G,W2G-e;NUXhP46VQlQ]sCv>T30zYZY„U">zSW+AWrwT=j&'dk&hFCCgJw?R5*391Iu^RiAaga#i,[,o%Ul5)$7=9J1E4-Kh/„U"7xbHr9R+5*r/4z5E]yh<JK]0K>(Fl]1%ZLm\BT]j8xkEp=mm_1?l5>Sl14G>#v3„U"#*r^lHC9WJ%o10Aa=ITeq8E5+m3XeP=2zOo*XgI4y''S3)H'Vtt%eLZ>^Com;GR„U"Jm3C,rs%&%U?s^WRvXBZL_Khmnl:flXQJGZlXRfJU*Z<S&1iTBYp]cFr]mic04t„U"Sc;2vM)-*9uIFCE5n]3uK'N1-*#ls\K+S/BJ'Czy<[%RBDd#kufCe5$)5yQv#WJ„U"k<9?/xzAh$Or?G5)1h$ljD=WAe.cDFW_T0g5IT113yGAG%X_\P7\dPrBF]o+MF,„U"l\::Hig%m6I8O,>f&>3NY$Sm#7N<5G4_]#,9Z'#et#hW&Rf=mC2nsAOWR;vuxQ\„U"w:E9hBHKShOIT-YblRB]g'gL\luD_=W=uZ<[Ju6fF#UC#8&;'YMUXe,k&1]*L/b„U"i$p5C7uLA3$DG4jmip%xrtTNI$bi3[8R1%up()%/%+%R+%04&fDo^<r-U'%%%%E„U"%%%.%%%%mt%zxjSIry'0(/J,+7#+41%p(.,%0.0.%,;,-%+*+,%+*[,%;<0/%+-„U"/0%*+:)%+<*/%-*+:%+/J+%-,=/%,/-0%,0)J%)J)/%+)*9%*.Y,%+<.?sPuuu?„U"ttt1%0Q0Q%0a0Q+P%1&%GH9:I[\7X,iTa*%+7H9l^oepAh'lr.(cP(G_wvO;O.Y„U"0s1.J8p*USQ8^_U&-(9&gJ/%xMo2*79mu=v\d'h0EbjsDg__wm9E$NG?*c#pi'M„U"icw,P\O,1T?o)=7Yv4$KsiY[;^Uw=lju0-KxMpdEE?n[dObn%d?7as)7xZL'fxN„U"dePuw=(WwW#:==fahtD)Xxx<uuwHMxs_.8sXD5GxEH$&n<e'vE&\s(c>$#xW]nd„U"gY?Mr[VA$^SC4aYbbg#[iX./<$\jlYzVg3fxBRZl^gHGZ'vVQVd,\AAt=>]-3Ma„U"D0_KQ\[DsWp$cv))volTS3K0M_yR*aC'a1<=$Cl9SAgbQiwVj^4fDUMA_%R.$:s„U"rFfc3)<%pv4N&IsCaht3%T^Fn]BtASJ$i9.bVA7xRSF=K1HY.+x%yEB8c-Ged4I„U"-3%af/fT7imZhd#Z'pc<v4b6X9X+_o+,S5q9yY_sG%f-NYb+P%4pDFbI;VAe_-i„U"a(f5:./Ax7$9Z1-;<Q/_k7#Qm%Du7,+fY%N>4\?[[mL<5K-2xC(m6D]_\S9m^fY„U"D-cx:0Sb_C&%nl2OFU&8\R,e*Er47%4Hof2U*AOw^?ei*xL_/DHYST#KH$YT30;„U"[/FAiYS+I/q+GB=8-?ee*2)N=(b&G0627d%4)*8k=gO/0NeZK_7(D5eu1Q):*)2„U"EDdL5+:Z_CCCuYGsf40G<4'(4%0OrWP4,9y:\GpDbBd&vKE1_(x;'/fB])[gIR3„U"2S[^4-$;dj9_O:?sxfjo<owgw_w87Y]cT:*Qspp(pww:%w8d+%c#u%p()9%%%%-„U"j%t8?REqjX,J>+%(%A4%%%0%%%%xuw%nyjx.Sy'yMt&(^BT]7M:<oxugmEEUK4?„U"r^\;C']OfV%Fa#\P/aK\+oPT/7j6T+wFnx]wpJ*zs3O$R:E.1Y)G2ZDKzZn*-w_„U"\A7+dg^<YE/N2ynQtp;AyZa9],<3gk^)?k5Z%/F%PPq:mldv#\.AbD*+Ulz^o'B„U"Z_6(zK?fYBmKrdk\/r,,^8(^tFq]=si9%4YYQe>zSP)&,2Ssr9q947Us'g85z#&„U"k_rKIn-QF2?73Gp*7CFjd5QCBrOR>:^*D4l0l*0(wC,fJ0\(pCZSaf&6J/Ij?d:„U")dUBy5Dp>zUFug'OpaNIj_PODOlVg%\TjBhNs?^Pe;_R3/Eo&[Y]wkq+#Q./=vt„U"x'IcdtOnpSax2-&kh]UZ22Pueh>OdvP.jAn='(E]5\:z<4I1ex-^^mpOPNr*78^„U"NX^RopS%=AyaW%:#4%H'Pu2kL3Evj0+%6Ms88g](jigrDq]wZIg;g77e8n3Ci,p„U"0%Qf>lM:,9KF3RU934BLEK%-3UYF(b$M?.f90voq'K;f-EP3r;>Gt87[I#zekX_„U"MDUWtv)E4cJ:H+*3OuM_:pT1kLf%2]]1;#kGmdhSRA4'lx.o^p:F,b:oo9)-%rA„U"+BA2D/AD5Q-+YG8u7U8(W+#7[[H3q<G%<o/>/qqTP;F8LLS#xq5v*?kbLfh'M0S„U"grI7'pb(C$1JhRK2J5%&,xhB2g<$j;_H9Lnw&HKkE]g;-t%0ZFlRe/YLq(>u8]2„U"?q^Z[z&B'i=-QW&S/NJ&ynL(Rml8uUTZ/5%MU7M>[;)p*bkap+ChMHKPsj2:'9<„U"uaHEd31]ysIt^HoxcJ-OxG]:c6Ab[g(i.98n83Z1=4l7.(3YlHg1AS2v)XZF=O_„U"Nv5Zq6fE&J:l0)Cd5?DsH/mtXK>i&pRNwVj=A*qYC&pLZ1Q#/m$guKohUw2eo&m„U"3Ec)67CPvjS-J7VbKiNlS5T6y5:bZ,dRW\p9ZQ(iDn/NM3+;sMHYf22%fABlEVe„U"LzsB[+3'Yujb$?Hiis67'iu6vec;zAWTG,DpY<mlFBFvb('#n)y9^lW<;MX>a?;„U"#c'J0c7JG./]7x5'Xe*LlKMQ'W0H3p<g;??a6(\c-p&lomUH+s.UU>EJ/]UV#iH„U"VuDWt4X)WX0I?DvB5GrG2or9Xv?dkm_-HK&aKuN]5eZQVW^WP<ElB$CMtJl$$j\„U"i&UIhBb;bh<Wu;NpE8^/:v:eILy&%Tv/JP'$AxaY'?8FqB^UdH97NWe&K';a*kK„U"=O.38:Nc&pJ#1fk)w]u0l\SygPI6Dq/=ACM5_q0LIbBlrPh9y#U<K.v:S+B]sgB„U"guQhhf=b=a6WkC>AT\Ua0-.Jo.A%iSAI%48qhWdlOe?SeLNH*MOf%y[4j;]G6wK„U"VBwweVdq1+Mrs9+PV]a$lw2AN(Qi$;(7arAlK&q#)qxea51,7$v%7XrB<VkMgL<„U">=?oqF/lqu^iB\ub7E#-R_L#tolZ7#%H.4ULUiCNLK3=1wcduRO3O\>&l_B>+tE„U"?qaOF2B(-kL>c35hsAf:#okhmvb:SC1bQm5#Zosl1n6.VAvtoR46TQd8,VBGmd-„U"Jb*)X_rvQ#[Hn7=uK/kLp]iv;6VjA:R[8cf9I-_'P+Q98$:&E2^j0WPHnBBS;Gt„U"V3.ozpy.MeQFb]ub<nO,q7LP/qvK6K-tsK3b<eWKo0o0.566<8F.sm0_C[FD$nf„U"7nZgR]#baTm2bolgK9HqB#M/+<nEl.lbS^sCx+ATTFiV\>mt27cQ2VrJETb(1BA„U".er#c3qHNfT97:\oh0h%[HV.DPng'Q:9LB8^-J4%CArU3i4W/K]7&HdwB%JUzrj„U"k,=/3,U^HI&1*Wb75'edYkQBX??Z2;2'fm=44=iwnkYnH&wigT]IhZ'[aMFcEC0„U"^[ncFBLVq6Er?_(h_66e.uo0OTH+fWFm,L4P6e(44SpawDa+1Wt,&Ia3WLPV70m„U"wwZZ\Z21%U[bqpG3Hmh\LQ]O7hhi_yNf$h>tOLCH=B7[CMZmznPh3Rd\[]Dg?q(„U"G\J.M5M48%u-1Wn/z;7N;-A0gPfox8:fZ3uv]^.=N[>>('R#agQ3n,9rpwa8k)?„U"Hj9=%[]b2Z#1&Lv'^-I*uBOmpMI+Y%9c4>*wT)M^mB:MahX4<)7&lUY0OZO^g&6„U"]D).kv8l>hsK35oxD_u.fVP=3q7dEbr]]>mLH>(JIU*V[9jlPQ:KW^'rQHo,^?i„U"%tup&%'9%/%%+%+I%\GjsDDe>*/V2%(%FR%%%0%%%%%%%%%&%E%%%%%%%%%x%uw„U"ny%jWSg%fxup%&'9%%/%+%R+%04&fDo^<r-U'%%%%E%%%.%%%%%%%%%&%%E%%%'„U")2%%%mtzx%jSry&'up&%'9%9%%%%-j%t8?REqjX,J>+%(%A4%%%0%%%%%%%%%&%„U"E[%%%,%5%%x%uwny%jxSy&'yup%*+%%%%%(%.(%x%.%%p<%%%%%„END SUB„CLOSE:IF S=105AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Douglas H. Lusher              320X400X256 VGA MODEX (COMPILE)FidoNet QUIK_BAS Echo          06-16-96 (22:49)       QB, PDS                332  12622    VGAMODEX.BAS'Hello, everyone!„'Here's some code that might be of interest to some of you.„'This code puts the VGA into MODEX - 320x400 with 256 colors.„'I have also supplied code to write pixels, read a pixel,„'clear the screen, print text, save a screen image (complete„'with the palette) to a single file, and restore a saved„'screen and its palette from a file.„'Some of you may have noticed Earl Montgomery posting code„'that would put the VGA into this mode. Be aware that there„'are different ways of arranging video memory in this mode„'and the VGA will not operate the same way using this code„'as it does using his code.„'The advantage of this method is that there are two„'(Count 'em! TWO!) video pages available which might be used„'for animation. This code has been written so that you can„'read or write to either page and I have included code that„'lets you flip between them.„'Here is a brief(!) description of the memory arrangements„'when using this code. Since there are 256 colors possible,„'each pixel requires a byte of video memory. On the basic„'VGA card there is 256K of memory arranged as four planes„'of 64K bytes each. In this mode, the first pixel (0,0) is„'the first byte of plane 0; pixel (1,0) is the first byte„'of plane 1; pixel (2,0) is the first byte of plane 2; pixel„'(3,0) is the first byte of plane 3; pixel (4,0) is the second„'byte of plane 0; etc. Thus the address of any pixel is given„'by the formula: Address = (Y * 80) + (X \ 4) and the plane„'is: Plane = X MOD 4. To access a pixel for reading or writing,„'one need only select the proper plane and then peek or poke„'at the appropriate address. This makes screen writing in this„'mode a very rapid operation. Since only 32,000 bytes of each„'plane are required under this arrangement, there is plenty of„'room left for a second screen page beginning at offset 32678.„'This is most easily accomplished by using a DEF SEG = &HA800„'for the second page and then addresses remain the same for the„'second page as for the first (which uses DEF SEG = &HA000).„'==============================================================„'Note that this code *must* be compiled in order to run.„'This is due to the two SUBs whose DECLARE statements contain„'the word "ALIAS". These cannot be used in the environment and„'the operation of the screen save and restore subs depend on„'them. If you *must* have this capability in the QB environment,„'I have SUBs that will accomplish these tasks without using„'the QB internal routines and will post them if it is requested,„'however they are quite a bit longer.„'Please note also that two of the DECLAREs have been broken in„'half because they were too long to fit on a single line. They„'will have to be restored before compiling.„'I would appreciate any comments or bug reports that anyone would„'be willing to share. Thanks.„„ DECLARE SUB Set320x400mode ()„ DECLARE SUB XCLS (Page%)„ DECLARE SUB ShowPage (Page%)„ DECLARE SUB PutPixel (X%, Y%, Culler%, Page%)„ DECLARE SUB GetPixel (X%, Y%, Culler%, Page%)„ DECLARE SUB XPRINT (X%, Y%, Text$, Culler%, Page%)„ DECLARE SUB XScrn2File (FileName$, Page%)„ DECLARE SUB XFile2Scrn (FileName$, Page%)„ DECLARE SUB QBPUT3 ALIAS "B$PUT3" (BYVAL FileNumber%, BYVAL Segment%, BYVAL Address%, BYVAL NumBytes%)„ DECLARE SUB QBGET3 ALIAS "B$GET3" (BYVAL FileNumber%, BYVAL Segment%, BYVAL Address%, BYVAL NumBytes%)„ DEFINT A-Z„ DIM BitMask%(7)„ FOR Bit% = 0 TO 7: BitMask%(Bit%) = 2 ^ Bit%: NEXT„ File0$ = "TEST0.S2F": File1$ = "TEST1.S2F"„ CALL Set320x400mode„ CALL XPRINT(40, 0, "Hello from PAGE 0", 4, 0)„ FOR Y% = 16 TO 399„   C% = Y% \ 8 + 16„   FOR X% = 0 TO 319„     CALL PutPixel(X%, Y%, C%, 0)„   NEXT„ NEXT„ CALL XScrn2File(File0$, 0)„ CALL ShowPage(1)„ CALL XPRINT(50, 300, "Press any key.", 0, 0)„ CALL XPRINT(40, 0, "Hello from PAGE 1", 2, 1)„ FOR X% = 0 TO 319„   C% = X% \ 8 + 16„   FOR Y% = 16 TO 399„     CALL PutPixel(X%, Y%, C%, 1)„   NEXT„ NEXT„ CALL XScrn2File(File1$, 1)„ CALL ShowPage(0)„ CALL XPRINT(50, 300, "Press any key.", 0, 1)„ SLEEP 2„ DO UNTIL LEN(INKEY$)„   CALL ShowPage(1): SLEEP 2„   CALL ShowPage(0): SLEEP 2„ LOOP„„ CALL ShowPage(0)„ DO„   CALL XCLS(0)„   CALL XPRINT(0,0,"Indicate which page to restore: (0/1) ",15,0)„   A$ = INPUT$(1)„   SELECT CASE A$„     CASE "0": CALL XFile2Scrn(File0$, 0)„     CASE "1": CALL XFile2Scrn(File1$, 0)„     CASE CHR$(27): EXIT DO„   END SELECT„   CALL XPRINT(50, 280, "Press ESC to exit.", 0, 0)„   CALL XPRINT(50, 300, "Press any other key to continue.", 0, 0)„   A$ = INPUT$(1): IF A$ = CHR$(27) THEN EXIT DO„ LOOP„„ SCREEN 0: WIDTH 80„ END„„ SUB GetPixel (X%, Y%, Culler%, Page%)„ 'this is code to read the color of a pixel in MODEX 320x400x256„ 'this code is based on ASM code written by Michael Abrash„ '   and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3CE, 4             'select the Read Map Select Register„ OUT &H3CF, X% AND 3      'indicate the bit plane desired„ DEF SEG = Segment%„ Culler% = PEEK((Y% * 80) + (X% \ 4))„ END SUB„„ SUB PutPixel (X%, Y%, Culler%, Page%)„ 'this is code to write a pixel in MODEX 320x400x256„ 'this code is based on ASM code written by Michael Abrash„ '   and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ SHARED BitMask%()„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3C4, 2                   'select the Map Mask Register„ OUT &H3C5, BitMask%(X% AND 3)  'indicate the desired bit plane„ DEF SEG = Segment%„ POKE (Y% * 80) + (X% \ 4), Culler%„ END SUB„„ SUB Set320x400mode„ 'the following code sets the VGA to 320x400x256 mode„ 'this is a translation from ASM code written by Michael Abrash„ '  and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ 'start with basic SCREEN 13„ SCREEN 13„ 'change the CPU addressing of video memory to linear (not odd/even,„ 'chain, or chain 4) to allow access to all 256K of display memory.„ SCI% = &H3C4            'the Sequence Controller Index register„ MemoryMode% = 4         'memory mode register index„ OUT SCI%, MemoryMode%„ X% = INP(&H3C5)„ X% = X% AND NOT &H8     'turn off chain 4„ X% = X% OR &H4          'turn off odd/even„ OUT &H3C5, X%„„ GCI% = &H3CE            'the Graphics Controller Index register„ GraphicsMode% = 5       'graphics mode register index„ OUT GCI%, GraphicsMode%„ X% = INP(&H3CF)„ X% = X% AND NOT &H10    'turn off odd/even„ OUT &H3CF, X%„„ Miscellaneous% = 6      'miscellaneous register index„ OUT GCI%, Miscellaneous%„ X% = INP(&H3CF)„ X% = X% AND NOT &H2     'turn off chain„ OUT &H3CF, X%„„ 'clear all of video memory - setting mode 13 only cleared 64K„ 'of video memory. Do this before switching the crt out of mode 13„ 'so that garbage does not appear on the screen when the switch„ 'is made.„ MapMask% = 2„ OUT SCI%, MapMask%„ OUT &H3C5, &HF„ DEF SEG = &HA000                      'clear page 0„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„ DEF SEG = &HA800                      'clear page 1„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„„ 'tweak the mode to 320x400x256 by not scanning each line twice„ CRTCI% = &H3D4          'the CRT Controller Index register„ MaxScanLine% = 9        'maximum scan line register index„ OUT CRTCI%, MaxScanLine%„ X% = INP(&H3D5)„ X% = X% AND NOT &H1F  'set max scan line = 0„ OUT &H3D5, X%„„ 'change CRTC scanning from doubleword mode to byte mode, allowing„ 'the CRTC to scan more than 64K of video data„ Underline% = &H14     'underline location register index„ OUT CRTCI%, Underline%„ X% = INP(&H3D5)„ X% = X% AND NOT &H40  'turn off doubleword„ OUT &H3D5, X%„„ ModeControl% = &H17   'mode control register index„ OUT CRTCI%, ModeControl%„ X% = INP(&H3D5)„ X% = X% OR &H40       'turn on the byte mode bit, so memory is„                       'video memory is scanned linearly, just as„                       'in modes &H10 and &H12„ OUT &H3D5, X%„ END SUB„„ SUB ShowPage (Page%)„ 'this code displays the specified page in MODEX - 320x400x256„ 'by Douglas H. Lusher - June 16, 1996„ SELECT CASE Page%„   CASE 0              'display page 0„     OUT &H3D4, &HC: OUT &H3D5, 0„   CASE 1              'display page 1„     OUT &H3D4, &HC: OUT &H3D5, &H80„   CASE ELSE„     ERROR 5           'illegal function call„ END SELECT„ END SUB„„ SUB XCLS (Page%)„ 'this is code to clear the screen in MODE X - 320x400x256„ 'by Douglas H. Lusher - June 16, 1996„ SHARED BitMask%()„ 'turn off the screen while it is being erased„ OUT &H3C4, 1: CMR% = INP(&H3C5): OUT &H3C5, CMR% OR &H20„ Segment% = &HA000: IF Page% THEN Segment% = &HA800„ DEF SEG = Segment%„ OUT &H3C4, 2                    'select the Map Mask Register„ FOR Plane% = 0 TO 3„   OUT &H3C5, BitMask%(Plane%)   'indicate the desired bit plane„   FOR Address% = 0 TO 31999: POKE Address%, 0: NEXT„ NEXT„ 'turn the screen back on...„ OUT &H3C4, 1: CMR% = INP(&H3C5): OUT &H3C5, CMR% AND &HDF„ END SUB„„ SUB XFile2Scrn (FileName$, Page%)„ 'this code loads a screen image (including the palette) from„ '  the specified file and displays it on the specified screen„ '  page in MODEX - 320x400x256„ 'NOTE: this CANNOT be run in the QB45 environment, it must be„ '  compiled and this DECLARE statement must appear in the code:„ 'DECLARE SUB QBGET3 ALIAS "B$GET3" (BYVAL FileNumber%, BYVAL Segment%, BYVAL Address%, BYVAL NumBytes%)„ 'by Douglas H. Lusher - June 16, 1996„ SHARED BitMask%()„ Bytes% = 32000                    '(320 * 400) \ 4„ ColorRegs% = 768                  'the number of colors * 3„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3C8, 0                      'blank the screen„ FOR X% = 1 TO ColorRegs%: OUT &H3C9, 0: NEXT„ File% = FREEFILE„ OPEN FileName$ FOR BINARY AS File%„   FOR X% = 0 TO 3„     OUT &H3C4, 2             'select the Map Mask Register„     OUT &H3C5, BitMask%(X%)  'indicate the bit plane to restore„     CALL QBGET3(File%, Segment%, 0, Bytes%)„   NEXT„   P$ = SPACE$(ColorRegs%)„   Segment% = VARSEG(P$): Offset% = SADD(P$)„   CALL QBGET3(File%, Segment%, Offset%, ColorRegs%)„ CLOSE File%„ DEF SEG = Segment%„ OUT &H3C8, 0„ FOR X% = Offset% TO Offset% + ColorRegs% - 1„   OUT &H3C9, PEEK(X%)„ NEXT„ END SUB„„ SUB XPRINT (X%, Y%, Text$, Culler%, Page%)„ 'this is code to print text in MODEX - 320x400x256„ 'by Douglas H. Lusher - June 15, 1996„ SHARED BitMask%()„ ' 8 x 8 char box, CGA„ 'CharSegment% = &HFFA6: CharOffset% = &HE„ 'CharWid% = 8: CharHgt% = 8„ ' 8 x 14 char box, EGA„ CharSegment% = &HC000: CharOffset% = &H4ED5„ CharWid% = 8: CharHgt% = 14„ ' 8 x 16 char box, VGA„ 'DIM Regs AS RegTypeX„ 'Regs.AX = &H1130„ 'Regs.BX = &H600„ 'CALL InterruptX(&H10, Regs, Regs)„ 'CharSegment% = Regs.ES: CharOffset% = Regs.BP„ 'CharWid% = 8: CharHgt% = 16„„ XX% = X% - 1„ FOR Char% = 1 TO LEN(Text$)„   XX% = XX% + CharWid%„   YY% = Y%„   Ptr% = CharHgt% * ASC(MID$(Text$, Char%, 1)) + CharOffset%„   FOR Ln% = 0 TO CharHgt% - 1„     DEF SEG = CharSegment%„     BitPattern% = PEEK(Ptr% + Ln%)„     FOR Bit% = 0 TO 7„       IF BitPattern% AND BitMask%(Bit%) THEN„         CALL PutPixel(XX% - Bit%, YY%, Culler%, Page%)„       END IF„     NEXT„     YY% = YY% + 1„   NEXT„ NEXT„ END SUB„„ SUB XScrn2File (FileName$, Page%)„ 'this code saves a screen image (including the palette) from„ '  the specified screen page and saves it to the specified file„ '  in MODEX - 320x400x256„ 'NOTE: this CANNOT be run in the QB45 environment, it must be„ '  compiled and this DECLARE statement must appear in the code:„ 'DECLARE SUB QBPUT3 ALIAS "B$PUT3" (BYVAL FileNumber%, BYVAL Segment%, BYVAL Address%, BYVAL NumBytes%)„ 'by Douglas H. Lusher - June 16, 1996„ Bytes% = 32000               '(320 * 400) \ 4 = 30,000 bytes„ ColorRegs% = 768             'the number of colors * 3„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ File% = FREEFILE„ OPEN FileName$ FOR BINARY AS File%„   FOR X% = 0 TO 3„     OUT &H3CE, 4           'select the Read Map Select Register„     OUT &H3CF, X%          'indicate the bit plane to save„     CALL QBPUT3(File%, Segment%, 0, Bytes%)„   NEXT„   P$ = SPACE$(ColorRegs%)„   Segment% = VARSEG(P$): Offset% = SADD(P$)„   DEF SEG = Segment%„   OUT &H3C7, 0„   FOR X% = Offset% TO Offset% + ColorRegs% - 1„     POKE X%, INP(&H3C9)„   NEXT„   CALL QBPUT3(File%, Segment%, Offset%, ColorRegs%)„ CLOSE File%„ END SUB„Douglas H. Lusher              320X400X256 MODEX (ENVIRONMENT)FidoNet QUIK_BAS Echo          06-22-96 (08:34)       QB, PDS                351  10852    320X400E.BAS'Here is code for Mode X - 320x400x256 that will run in the„'environment.„„ DEFINT A-Z„ '$INCLUDE: 'QB.BI'„ DIM BitMask%(7)„ FOR Bit% = 0 TO 7: BitMask%(Bit%) = 2 ^ Bit%: NEXT„ File0$ = "C:\TEST0.S2F": File1$ = "C:\TEST1.S2F"„ CALL Set320x400mode„ CALL XPRINT(40, 0, "Hello from PAGE 0", 4, 0)„ FOR Y% = 16 TO 399„   C% = Y% \ 8 + 16„   FOR X% = 0 TO 319„     CALL PutPixel(X%, Y%, C%, 0)„   NEXT„ NEXT„ CALL XScrn2File(File0$, 0)„ CALL ShowPage(1)„ CALL XPRINT(50, 300, "Press any key.", 0, 0)„ CALL XPRINT(40, 0, "Hello from PAGE 1", 2, 1)„ FOR X% = 0 TO 319„   C% = X% \ 8 + 16„   FOR Y% = 16 TO 399„     CALL PutPixel(X%, Y%, C%, 1)„   NEXT„ NEXT„ CALL XScrn2File(File1$, 1)„ CALL ShowPage(0)„ CALL XPRINT(50, 300, "Press any key.", 0, 1)„ SLEEP 2„ DO UNTIL LEN(INKEY$)„   CALL ShowPage(1): SLEEP 2„   CALL ShowPage(0): SLEEP 2„ LOOP„„ CALL ShowPage(0)„ DO„   CALL XCLS(0)„   CALL XPRINT(0, 0, "Indicate which page to restore: (0/1) ", 15, 0)„   A$ = INPUT$(1)„   SELECT CASE A$„     CASE "0": CALL XFile2Scrn(File0$, 0)„     CASE "1": CALL XFile2Scrn(File1$, 0)„     CASE CHR$(27): EXIT DO„   END SELECT„   CALL XPRINT(50, 280, "Press ESC to exit.", 0, 0)„   CALL XPRINT(50, 300, "Press any other key to continue.", 0, 0)„   A$ = INPUT$(1): IF A$ = CHR$(27) THEN EXIT DO„ LOOP„„ EndIt:„ SCREEN 0: WIDTH 80„ END„„ SUB DOSCloseFile (Handle%)„ DIM Register AS RegType„ Register.AX = &H3E00„ Register.BX = Handle%„ CALL Interrupt(&H21, Register, Register)„ IF Register.Flags AND 1 THEN„   SELECT CASE Register.AX„     CASE &H6: ERROR 52    'invalid handle„     CASE ELSE: ERROR 255„   END SELECT„ END IF„ END SUB„„ SUB DOSCreateFile (FileName$, Handle%)„ DIM Register AS RegTypeX„ Temp$ = FileName$ + CHR$(0)„ Register.AX = &H3C00„ Register.CX = 0„ Register.DS = VARSEG(Temp$)„ Register.DX = SADD(Temp$)„ CALL InterruptX(&H21, Register, Register)„ IF Register.Flags AND 1 THEN„   SELECT CASE Register.AX„     CASE &H3: ERROR 76   'path not found„     CASE &H4: ERROR 67   'no handles available„     CASE &H5: ERROR 75   'access denied„     CASE ELSE: ERROR 255„   END SELECT„ ELSE„   Handle% = Register.AX„ END IF„ END SUB„„ SUB DOSOpenFile (FileName$, Handle%)„ DIM Register AS RegTypeX„ Temp$ = FileName$ + CHR$(0)„ Register.AX = &H3D02„ Register.DS = VARSEG(Temp$)„ Register.DX = SADD(Temp$)„ CALL InterruptX(&H21, Register, Register)„ IF Register.Flags AND 1 THEN„   SELECT CASE Register.AX„     CASE &H2: ERROR 53   'file not found„     CASE &H3: ERROR 76   'path not found„     CASE &H4: ERROR 67   'no handles available„     CASE &H5: ERROR 75   'access denied„     CASE ELSE: ERROR 255„   END SELECT„ ELSE„   Handle% = Register.AX„ END IF„ END SUB„„ SUB GetPixel (X%, Y%, Culler%, Page%)„ 'this is code to read the color of a pixel in MODEX 320x400x256„ 'this code is based on ASM code written by Michael Abrash„ '   and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3CE, 4             'select the Read Map Select Register„ OUT &H3CF, X% AND 3      'indicate the bit plane desired„ DEF SEG = Segment%„ Culler% = PEEK((Y% * 80) + (X% \ 4))„ END SUB„„ SUB PutPixel (X%, Y%, Culler%, Page%)„ 'this is code to write a pixel in MODEX 320x400x256„ 'this code is based on ASM code written by Michael Abrash„ '   and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ SHARED BitMask%()„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3C4, 2                   'select the Map Mask Register„ OUT &H3C5, BitMask%(X% AND 3)  'indicate the desired bit plane„ DEF SEG = Segment%„ POKE (Y% * 80) + (X% \ 4), Culler%„ END SUB„„ SUB Set320x400mode„ 'the following code sets the VGA to 320x400x256 mode„ 'this is a translation from ASM code written by Michael Abrash„ '  and published in 1989 Programmer's Journal 7.1„ 'by Douglas H. Lusher - June 15, 1996„ 'start with basic SCREEN 13„ SCREEN 13„ 'change the CPU addressing of video memory to linear (not odd/even,„ 'chain, or chain 4) to allow access to all 256K of display memory.„ SCI% = &H3C4            'the Sequence Controller Index register„ MemoryMode% = 4         'memory mode register index„ OUT SCI%, MemoryMode%„ X% = INP(&H3C5)„ X% = X% AND NOT &H8     'turn off chain 4„ X% = X% OR &H4          'turn off odd/even„ OUT &H3C5, X%„„ GCI% = &H3CE            'the Graphics Controller Index register„ GraphicsMode% = 5       'graphics mode register index„ OUT GCI%, GraphicsMode%„ X% = INP(&H3CF)„ X% = X% AND NOT &H10    'turn off odd/even„ OUT &H3CF, X%„„ Miscellaneous% = 6      'miscellaneous register index„ OUT GCI%, Miscellaneous%„ X% = INP(&H3CF)„ X% = X% AND NOT &H2     'turn off chain„ OUT &H3CF, X%„„ 'clear all of video memory - setting mode 13 only cleared 64K„ 'of video memory. Do this before switching the crt out of mode 13„ 'so that garbage does not appear on the screen when the switch„ 'is made.„ MapMask% = 2„ OUT SCI%, MapMask%„ OUT &H3C5, &HF„ DEF SEG = &HA000                      'clear page 0„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„ DEF SEG = &HA800                      'clear page 1„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„„ 'tweak the mode to 320x400x256 by not scanning each line twice„ CRTCI% = &H3D4          'the CRT Controller Index register„ MaxScanLine% = 9        'maximum scan line register index„ OUT CRTCI%, MaxScanLine%„ X% = INP(&H3D5)„ X% = X% AND NOT &H1F    'set max scan line = 0„ OUT &H3D5, X%„„ 'change CRTC scanning from doubleword mode to byte mode, allowing„ 'the CRTC to scan more than 64K of video data„ Underline% = &H14       'underline location register index„ OUT CRTCI%, Underline%„ X% = INP(&H3D5)„ X% = X% AND NOT &H40    'turn off doubleword„ OUT &H3D5, X%„„ ModeControl% = &H17     'mode control register index„ OUT CRTCI%, ModeControl%„ X% = INP(&H3D5)„ X% = X% OR &H40         'turn on the byte mode bit, so memory is„                         'video memory is scanned linearly, just as„                         'in modes &H10 and &H12„ OUT &H3D5, X%„ END SUB„„ SUB ShowPage (Page%)„ 'this code displays the specified page in MODEX - 320x400x256„ 'by Douglas H. Lusher - June 16, 1996„ SELECT CASE Page%„   CASE 0              'display page 0„     OUT &H3D4, &HC: OUT &H3D5, 0„   CASE 1              'display page 1„     OUT &H3D4, &HC: OUT &H3D5, &H80„   CASE ELSE„     ERROR 5           'illegal function call„ END SELECT„ END SUB„„ SUB XCLS (Page%)„ 'this is code to clear the screen in MODE X - 320x400x256„ 'by Douglas H. Lusher - June 16, 1996„ SHARED BitMask%()„ 'turn off the screen while it is being erased„ OUT &H3C4, 1: CMR% = INP(&H3C5): OUT &H3C5, CMR% OR &H20„ Segment% = &HA000: IF Page% THEN Segment% = &HA800„ DEF SEG = Segment%„ OUT &H3C4, 2                     'select the Map Mask Register„ FOR Plane% = 0 TO 3„   OUT &H3C5, BitMask%(Plane%)    'indicate the desired bit plane„   FOR address% = 0 TO 31999: POKE address%, 0: NEXT„ NEXT„ 'turn the screen back on...„ OUT &H3C4, 1: CMR% = INP(&H3C5): OUT &H3C5, CMR% AND &HDF„ END SUB„„ SUB XFile2Scrn (FileName$, Page%)„ SHARED BitMask%()„ DIM Register AS RegTypeX„ Bytes% = 32000                    '(320 * 400) \ 4„ ColorRegs% = 768                  'the number of colors * 3„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ OUT &H3C8, 0                      'blank the screen„ FOR X% = 1 TO ColorRegs%: OUT &H3C9, 0: NEXT„ CALL DOSOpenFile(FileName$, Handle%)„ Register.BX = Handle%„ Register.CX = Bytes%„ Register.DS = Segment%„ Register.DX = 0„ FOR X% = 0 TO 3„   Register.AX = &H3F00„   OUT &H3C4, 2                    'select the Map Mask Register„   OUT &H3C5, BitMask%(X%)          'indicate the bit plane to restore„   CALL InterruptX(&H21, Register, Register)„   IF Register.Flags AND 1 THEN„     SELECT CASE Register.AX„       CASE &H5: ERROR 75    'access denied„       CASE &H6: ERROR 52    'invalid handle„     END SELECT„   ELSEIF Register.AX <> Register.CX THEN„     ' incorrect number of bytes read„     ERROR 57                'device i/o error„   END IF„ NEXT„ CALL DOSCloseFile(Handle%)„ P$ = SPACE$(ColorRegs%)„ File% = FREEFILE„ OPEN FileName$ FOR BINARY AS File%„   GET File%, (LOF(File%) + 1) - ColorRegs%, P$„ CLOSE File%„ DEF SEG = VARSEG(P$): Offset% = SADD(P$)„ OUT &H3C8, 0„ FOR X% = Offset% TO Offset% + ColorRegs% - 1„   OUT &H3C9, PEEK(X%)„ NEXT„ DEF SEG„ END SUB„„ SUB XPRINT (X%, Y%, Text$, Culler%, Page%)„ 'this is code to print text in MODEX - 320x400x256„ 'by Douglas H. Lusher - June 15, 1996„ SHARED BitMask%()„„ ' 8 x 8 char box, CGA„ 'CharSegment% = &HFFA6: CharOffset% = &HE„ 'CharWid% = 8: CharHgt% = 8„„ ' 8 x 14 char box, EGA„ CharSegment% = &HC000: CharOffset% = &H4ED5„ CharWid% = 8: CharHgt% = 14„ ' 8 x 16 char box, VGA„ 'DIM Regs AS RegTypeX„ 'Regs.AX = &H1130„ 'Regs.BX = &H600„ 'CALL InterruptX(&H10, Regs, Regs)„ 'CharSegment% = Regs.ES: CharOffset% = Regs.BP„ 'CharWid% = 8: CharHgt% = 16„„ XX% = X% - 1„ FOR Char% = 1 TO LEN(Text$)„   XX% = XX% + CharWid%„   YY% = Y%„   Ptr% = CharHgt% * ASC(MID$(Text$, Char%, 1)) + CharOffset%„   FOR Ln% = 0 TO CharHgt% - 1„     DEF SEG = CharSegment%„     BitPattern% = PEEK(Ptr% + Ln%)„     FOR Bit% = 0 TO 7„       IF BitPattern% AND BitMask%(Bit%) THEN„         CALL PutPixel(XX% - Bit%, YY%, Culler%, Page%)„       END IF„     NEXT„     YY% = YY% + 1„   NEXT„ NEXT„ END SUB„„ SUB XScrn2File (FileName$, Page%)„ DIM Register AS RegTypeX„ Bytes% = 32000               '(320 * 400) \ 4 = 30,000 bytes„ ColorRegs% = 768             'the number of colors * 3„ Segment% = &HA000„ IF Page% THEN Segment% = &HA800„ CALL DOSCreateFile(FileName$, Handle%)„ Register.BX = Handle%„ Register.CX = Bytes%„ Register.DS = Segment%„ Register.DX = 0„ FOR X% = 0 TO 3„   Register.AX = &H4000„   OUT &H3CE, 4                'select the Read Map Select Register„   OUT &H3CF, X%               'indicate the bit plane to save„   CALL InterruptX(&H21, Register, Register)„   IF Register.Flags AND 1 THEN„     SELECT CASE Register.AX„       CASE &H5: ERROR 75      'access denied„       CASE &H6: ERROR 52      'invalid handle„     END SELECT„   ELSEIF Register.AX <> Register.CX THEN„     ' incorrect number of bytes written„     ERROR 57                  'device i/o error„   END IF„ NEXT„ CALL DOSCloseFile(Handle%)„ P$ = SPACE$(ColorRegs%)„ DEF SEG = VARSEG(P$): Offset% = SADD(P$)„ OUT &H3C7, 0„ FOR X% = Offset% TO Offset% + ColorRegs% - 1„   POKE X%, INP(&H3C9)„ NEXT„ DEF SEG„ File% = FREEFILE„ OPEN FileName$ FOR BINARY AS File%„   PUT File%, LOF(File%) + 1, P$„ CLOSE File%„ END SUB„Andy J. Golden                 STAR TREK COMMUNICATOR PIN     YHBV44@prodigy.com             06-14-96 (00:00)       QB, QBasic, PDS        55   1847     STPIN.BAS   ' Star Trek: The Next Generation - Communicator Pin.„' BASIC graphics program by Andy Golden - June 14, 1996.„'    This program was not created, approved, licensed,„'    or endorsed by any entity involved in creating or„'    producing the Star Trek(R) television series or„'    films.„„dim y(5)„screen 1„window (-10,-10)-(10,10)„for z=1 to 5„  for x=-10 to 10 step .1„    y(1)=-x^2+8„    if x>=0 then    y(2)=-x^1.5-1         else    y(2)=11„    if x<=0 then    y(3)=-abs(x)^1.5-1    else    y(3)=11„    y(4)=sqr(49-49*(x^2)/100)-1„    y(5)=-y(4)-2„    pset(x,y(z))„  next„next„„' I originally wrote this program on my TI-85 graphing„' calculator in Algebra II class back some time around„' February 1996.  Then on June 14, 1996, I decided to„' translate it to work with PowerBASIC and QBASIC and„' other BASICs for an IBM compatible PC.  The result„' is the program above.  The equations y(2) and y(3)„' had to be modified because BASIC just can't handle„' imaginary numbers; so I used a cheesy IF/THEN/ELSE„' statement to eliminate them because I just don't feel„' like setting here for a few weeks writing all my own„' mathematical subroutines and functions to handle„' imaginary numbers.  Maybe some other time.  :-)„'„' Here is what all the equations do:„'   y(1)   Draws an arch„'   y(2)   Draws right leg of communicator pin„'   y(3)   Draws left leg of pin„'   y(4)   Draws top half of ellipse„'   y(5)   Draws bottom half of ellipse„'„' Here is the original program for the TI-85:„'„'   FnOff                    Replace the word Square Root„'   Func                     in equation  y4  with the„'   AxesOff                  square root symbol.„'   ClLCD„'   ClDrw„'   Zstd„'   y1=-x^2+8„'   y2=-x^1.5-1„'   y3=-((-x)^1.5)-1„'   y4=Square Root (49-49x^2/100)-1„'   y5=-y4-2„'   FnOn„Steven Sensarn                 SCROLLING CELL MAP             txs53132@bayou.uh.edu          07-08-96 (00:00)       QB, QBasic, PDS        50   3227     CELLS.BAS   DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"CELLS.ZIP",4^6:Z&=2141:?STRING$(50,177);„U"%up()%9%%%I-%aaf_EBa&yjm%%%%%(%%%.%%%%hj%qqxS[ufqf,a*2%%V-(b8il„U"lM.91aWahu5m+NuaxMK$b_%4._(*I[KYi/i6^0'_uInRif-/_61DT.7uM^Sfd\%„U"x6^Rfg*mi,'l'u%p()9%%%%-g%da_jEE1W'QJ'%(%K7%%%.%%%%hjq%qxSiRfyf„U"%2,FREj1&Yqu7Xx+DN(JG'G7E=UE%4M0%4rL)E+TFf2ICX5f(Z(B$/0.1J_0.AO„U"'U'_ISx9FBYN%*YLsC?HK34n2(<M#?&KYI%Bg-tQJ,V1eS+.l[pu.FZm>U4W60E„U"I#e9\,B-W4ei8&_b$)gdb09Ri\01T$d^fHXgYNVO>^M<i&r%(W,,('1KlUuX'd_„U"hYL7D5;E?01S&tXhn[5lP$I^wWSLQRbzjV%(EVr%i5RC4NDiW5R6=\W\Dt,P*%[„U"-51DBKRp].6%[fkOYCkk$PDq_Y%,M*t#AFTj]?DaBPzq*<mE%q0+Q^63?T%c\a%„U"D'8tp8[TYf'udaH^<O#-)0p2mjcFm]D06)q#e::JB<stO[q^+POnI?mERQ+Ignd„U"&-1,fV%Y&f;oUo4<O+rI.<ki/4pN(eOOE0SVOKXwXV1R4Qp\Ck)pT]r1i-11PWM„U"mX0x[FQ/]kZm#E?U?D=P,&#A4$+0OR0:28/I.zxdpHxpV_b)z8k4Ro.6o[[l?Wv„U">.n9Z%NH3S89Hhab%4XNmz;J*2(kc4Q-<OsWv0n5KtZTS+FQ1Odm^uJlb$*izp=„U"=p%-kJd<XTW&S,FvWF11MQlwY_:o+_]P$9Ox%lR$xzaMQ3oIN3x:LcO4&K2\,\V„U"c>FbB=>nvtR?/r=0?f'xh1?'^v:0)tBT-rIX0ko(zeNDe#oxBk7(aM%u%p()9%%„U"%%-j%6a_OETZc+19)%+%n9%%%.%%%%hjq%qxSgRfxV';<>\[+1wCEWxPAYrN=+-„U"OsP:=f1CoQIoHk2j#/A*BpRn>ZhtvnIloM$[A$n4#$1=JRT[BVAsmoqC#?d3gNV„U";,AOR8A2iAhW;nR\3(,uui4MEZHqM_+fQM$0g&DhmY*FaymiWr$)n_pR\P#FaM$„U"4L+\n;??j2v\U3C,MA4#7yIM:A=Ov#+tUj6<.[J(0d%ohPtk?]T3r[2)9*6oA:b„U"Vu:.KI9D*F<[6IG$Mp\(#6j5a-Hk_[wL9Cre1N*B/lB4Vdk7,-i49[4.9&z0Gs/„U"[&*syh:M]wQW*U-H.12?YG(UcZ9.Q*ahRV+XE<]ROXZMH,Uc$is:=ec*J+3D?2I„U"Q3E#2J.FwM_P'h/B;?,iE$GE2-DI)?I;>BP_4ghBMnHIS?(SJVMyF2d0^;5U2Uh„U"8z>v7PS0nNYW;hYa>c&NP/$-wXl'+\BXWw-4SmMQ=BN^XwXT;7]L,W;71L,hnA1„U"CPFt1TgvmK;M[(=eD;jpsvLJe?u<F#H21&%m6lETRG]UGA,L^:Uyt(LKhp-bu'p„U",CQ-pH5)hP7)b#N.bbX;i)hT#0n$<.W7KfPODCL1h^V:s&7oq:g'jXxpQm\DQm/„U"AN,b_l)56Z9&*E(^iK;]047UFvCK9q-wON6A5^*g?%m7>42T$:6>B(Z^mV5ccl0„U">2vm]2BN9YGW=7ZNp$)C\T*PY=.xwe^fgo__h=pE#Mt^mEXD]EI/9j6d(_EZPR*„U"j\5o?.dPw#V],okK#m^_G8#j[CzrShBA)j3y,Mjh^Y86ioTOw;ro8;AvSFG-Mq=„U"t51?+3;]sTMS/=G5&mjscp&fP-*Z2BoWsX3vs^eGrMrC;sa0zWcJM+jh+$Yh'V.„U"gT48t?CPK<(6OrK\jNHJmXWOnkduu2VNbsn38+[7G&mp1nFXMpPITO2jLjdf]:X„U"rChPH8Etp-&#fChcI#AQJBxCEv&bLHdbcS0KOs*tl,FYvsEi/s[F]V4\G(pXnSF„U"a8UNZc5NJH;+qF.6-ksetbK+J&nO(oD73i:_8UD?d>lZva^s/6Cxn.L2l2=7bJ6„U"znGxcSyl,EFOjG1AOLQhORacMc4?*pR=Mw0c3mqB\2XS76N*pecv;f+.yuBPBMu„U"3b.%T_d:75C=yDf#UIR6pxkk9g4vd)6_m$eq<svWZ?Q:FgG^nTtT8FoKTt,oAdx„U"gYs8w>rA.xa>sXGHDF4vEXT4<0PvdPN6o$$r^&:OdbIWL3DIbt9&m<'D\E?uLu0„U"lr>Ka\j-G.HpL&imoONJZQ-oU.86MElI:_1Mmr2oa[cZp4D_TCtrwQ3Ya7R4+fy„U"nV<s$=']'yP<J:KP99j$5DQfE]pl06a92$-M%I8UYIaKl]VfJKU+DX(rnFDbERT„U"IZpgAd4KN$m:WI+h+]\Z<7=Z2EC:CiT[TWmqMYDh8jrYND^**/cVev9JI/p-^6'„U"h.FB\i,m:qT*qJ:=Kw$;GJ]_Lb0h.$>>#,uGHXfo*#nduja?qC*e6NdZ>,ia2IC„U"Z3BI:QcL8x2k/Oq(SAwCjT?Om2Xptq2AX]yieOr/Wo:wUS'Cdup%&'9%%9%%%I-„U"%aaf_EBa&yjm%%%%%(%%%.%%%%%%%%%%%%E%%%%%%%%%hjqq%xSuf%qup&%'9%9„U"%%%%-g%da_jEE1W'QJ'%(%K7%%%.%%%%%%%%%%%E#%%%>%%%%h%jqqx%Sify%up„U"&'%9%9%%%%-%<6a_E3TZc1'9)%%'n9%%%.%%%%%%%%%&%E%7%%4'%%%hj%qqxS%„U"gfxu%p*+%%%%%(#%(%t#%%%q%,%%%%%„END SUB„CLOSE:IF S=28AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Scott Tuttle                   SCREEN ART/SAVER               Scott.Tuttle@newriver.net      07-08-96 (20:23)       QB, QBasic, PDS        198  6816     ARTS.BAS    'Screen Art/Saver inspired by John Wantlands Black Hole„'but for faaster computers.„„RANDOMIZE TIMER„DEFINT A-Z„„SCREEN 13                       '„maxx = 320                      'screen dimensions„maxy = 199                      'can be set for different modes„„FOR t = 1 TO 255                ' sets palette to shades of white„b = INT(63 / 255 * t)„OUT &H3C6, 255„OUT &H3C8, 256 - t„OUT &H3C9, b„OUT &H3C9, b„OUT &H3C9, b„NEXT t„„                                            'rem these out for QBASIC„IF COMMAND$ <> "" THEN                      'check command line„        num = VAL(COMMAND$)                 'for number of pixels„        IF num < 10 THEN num = 10          „        END IF„IF COMMAND$ = "" THEN num = 100             'to here„„DIM x!(num), y!(num), dx!(num), dy!(num)„„„cx = maxx \ 2                              'center coor for current screen„cy = maxy \ 2„rr = 10                                    'diameter of black hole„FOR t = 1 TO num                           'init coors and speed„x!(t) = RND * maxx„y!(t) = RND * maxy„dx!(t) = 0„dy!(t) = 0„NEXT t„„t1 = 1                                     'some constants-for speed„t2 = 2„t5 = 5„t4 = 4„t6 = 6„„g! = .2                                   'gravity factor„„DO„„FOR t = t1 TO num„PRESET (x!(t), y!(t))                   'erase old pixel„dx = cx - x!(t)                         'compute distance„dy = cy - y!(t)„r = SQR(dx ^ t2 + dy ^ t2) + t1„                                       'play with the .98 for different„                                       'effects„dx!(t) = dx!(t) * .98 + (g! / r) * dx  'accel * orbitdegradation + force„dy!(t) = dy!(t) * .98 + (g! / r) * dy  'ditto„x!(t) = x!(t) + dx!(t)                 'calc new position„y!(t) = y!(t) + dy!(t)„PSET (x!(t), y!(t)), r                 'draw new pixel„IF r < rr THEN                         'did it go into the hole?„        PSET (x!(t), y!(t)), 0                    'erase it„        x!(t) = RND * (cx \ t5)                   'create new pixel„        y!(t) = cy + RND * (cy \ t4)„        dy!(t) = t6„        dx!(t) = t6„        END IF„NEXT„IF RND > .95 THEN g! = RND - .05  'random the gravity-nice visual effect„LOOP UNTIL INKEY$ <> ""„„SCREEN 0                               'exit w/credits to me :)„WIDTH 80„COLOR 14„PRINT "Ù     ¬         "„PRINT "ıcott ≥uttle '96"„COLOR 7„______________________________cut here_____________________________________„„'Screen art that draws water fountains.„„SCREEN 13„                                           ' you can specify the number of„                                           'pixels on the command line„                                           'ex: GRXFOUNT 1000„                                           'for 1000 pixels„„'rem this for qbasic„IF COMMAND$ <> "" THEN            'checks to see if there's a number„        num = VAL(COMMAND$)                'on the command line„        END IF„' to here„„IF num = 0 THEN num = 100                  'if not-its this„IF num > 2000 THEN num = 2000              'limit on num„„DIM x(num), y(num), dx(num), dy(num)       'x-coor,y-coor,dx&dy speeds„DEFINT B, T, Z                             'pallette & counters„RANDOMIZE TIMER„„g = .1                                     ' gravity„scale1 = .627451                           'scaler 1„t160 = 160                                 'constant int„pi = 3.1415                                'pi-duhh!„t199 = 199                                 'bottom of screen constant int„zero% = 0„one% = 1„two% = 2„t255 = 255„mode% = 1„„DO                                         'color scheme„bf = INT(RND * two%)„rf = INT(RND * two%)„gf = INT(RND * two%)„LOOP UNTIL bf + gf + rf <> zero%           'no black-outs„„rand:                                      'randomizes and resets„CLS„dyscale = (RND * -4) - 3                   'rnd dyscale„dxscale = (RND * two%) + one%              'rnd dxscale„da = RND * .01                             'init-angle speed„a = RND * pi                               'init angle„FOR t = one% TO num                        'sets all coors and speeds„PSET (x(t), y(t)), zero%„y(t) = t199„x(t) = t160„dx(t) = RND * 5 - 2.5„dy(t) = -RND * 6„NEXT„„'„DO                                                'main loop„„FOR z = num TO one% STEP -1                       'pixel loop for color„„        FOR t = one% TO num                       'loop to calc&draw„        LINE (t160, t199)-(x(t), y(t)), zero%     'erase old„        x(t) = x(t) + dx(t)                       'compute new coor„        y(t) = y(t) + dy(t)„        dy(t) = dy(t) + g„        IF y(t) > t199 THEN           'Did pixel go through floor?„                x(t) = t160                          'reset single pix„                y(t) = t199                         ' with new coors„                IF mode% = -1 THEN„                        dx(t) = RND * 4 - 2„                        dy(t) = -RND * 6„                        ELSE„                        dy(t) = SIN(a) * dyscale  'and angle speeds„                        dx(t) = COS(a) * dxscale  'constants scale speeds„                        a = a + da                'move angle„                                                  'is it OK? reverse if not„                        IF a > pi OR a < zero% THEN da = -da„                        END IF„                END IF„                   'draw new pixel with color based on distance from center„        LINE (t160, t199)-(x(t), y(t)), scale1 * (t160 - ABS(t160 - x(t)))„        NEXT t„„IF INKEY$ <> "" THEN GOTO quit              'key check„b = INT((53 / num) * z) + 10                'brightness-scaled to num pixels„IF z > t255 THEN z = t255„   „red = rf * b„green = gf * b„blue = bf * b„OUT &H3C6, t255                              'ready to change palette„OUT &H3C8, z                                 'color„OUT &H3C9, red                               'red val„OUT &H3C9, green                             'green val„OUT &H3C9, blue                              'blue val„„NEXT z„„da = da + RND * .01                        'rnd the angle speeds„IF da < -.1 THEN da = -.1                  'see if new speed ok„IF da > .1 THEN da = .1                    'ditto„„mode% = -mode%„                                           'another palette change„                DO„                bf = INT(RND * two%)„                rf = INT(RND * two%)„                gf = INT(RND * two%)„                LOOP UNTIL bf + gf + rf <> zero%„„dyscale = RND * -2.7 - 3.5                      'rnd dyscale„dxscale = RND * one% + two%                     'rnd dxscale„LOOP„„quit:„SCREEN 0„WIDTH 80„COLOR 14„PRINT "Ù     ¬         "„PRINT "ıcott ≥uttle '96"„COLOR 7„Erika Schulze                  MODE-X MANDELBROT SET          100775.2275@CompuServe.com     07-09-96 (19:15)       PB                     476  31377    MANDEL.BAS  ' To extract MANDEL.ZIP, please load/run under PowerBASIC„DEFINT A-Z: SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"MANDEL.ZIP",4^6:Z&=23240:?STRING$(50,177);„U"%up()%9%%%[-%n6KbE\g:D/K;d%%0W%%%-%%%%rf%siSfRxrf,;:>Tm>evE%'r4„U"*QJI$b%A5moqJ8#mT7in,>bCSfe'G+=)12YsR(s7wrLwXk.H8%<(+QNRv;]l=>C„U"/_8*SvSd#6cWBTmDgKdT(hPHfsIY(k&^<l?PaH2crPZTZaL^<.>:7B9^MHc2p&(„U"=]6hhT-=8:t2ns#?GxEAF4W\?XiDD-RQUSu8dy;[c*xUFZN2xi_.(T>vVTJsstW„U"'XG25blht^ENLjLWjDgd-lH'_$DCS&D7\r,ZaSCEVWLfLY&N0JOB\Lv)q^J#=47„U"Z223YEkvtmRcfK:E6(K#kOI4-(RncVX1s4P4l=U%*.8UHjxJA-W(t<)lg:C*gXA„U"0ERjy7]T0v+>mYAp'('E%^XUAlbiYnG'V6bDXKq^.bCt(Cq.r6(35nwnVrm6U_L„U"rC,':gjR94F<k4b&q<\BmKSQ7MnuY]C[*C4[^Ix;q6dQsTJI,q&NRfbcqG5EqB8„U"tpfcP&gky%,lx<V.jRL)Z'<+n;VKWL:Cg*-<ISqjob>uZ3*jZ4EfIYVMueCHvGo„U"%_R&j9v7m*JQARVlMIqCb^0*sm1rVb/lwAW9;tX^jW+DIK_5?3biQ7_BHc$^#>6„U"P'$((Kn=T#0ZTbM.)#]<0%dzQJ^d68fbLwEDynuR$JQr5$Io_C4_j>v5c[RzrxS„U"YZ+q/5j3b&27&;Q8dc>d-.;C</WbdnhSJ\l;#2E]gl,4g,62)>a'8+TPYW#y<E)„U"9;sr8VYw=$^4AetjSZUmaGi%$;.JR#L2p,('+8;46(,)8M/ZbfLa5m'X7Eoo[9g„U".88saCHQ]je.HW#?Biy):QO7IHT;oq0>'n7ePzqIt&8WxYTJtF+0eta*eM>6bH7„U"<QcA\Y,imtQ,6$/k7SWrii\-3LqXPB,T4f0#DXk#/:JMLb,,#Nb3nL'Z=b%r?k^„U"&ulb0BY1A(r\E(AY-U<f0*J<.BSmXQlrIqT3;JBnK>n_th4mPtt7*)a9oE<-W+j„U".naPQSsZRdU.l([oYAu8ATbUWAoH1qjx1>dN(hkH\-Ag0FZENt&,]gEp+.ACO9o„U"+g8mLvmdMPx<]'?mj<3q$<=6\.bdSfQ[5g''J*Y+Vrm=24gtd8fMI1PC*/-/>>f„U"ed5<fMFTDa-G=Cm)Rxx4uMzPXd?>9-r-4s^YqVoP9DP4u\VH+vC_y$4EDr9i?^E„U"#P=i*H+vhkgbcQ$MkQ>7HmO6=Ekzsd$_5-s2U<OP%4zNP8ke:vms.,)tnybQDb+„U"_WZg[;+CRd(K#vQ13$?f/e-+<W[kcTP+\D6\].c;&_[6Goc_;\%nxrQ/vcyc47A„U",QCq<WC^1Mb2CegW,umOm^'r*pq$1ZJT-CHHDs]IA[4,[x5'-AK7tOWr(7<%IZ,„U"nT=qYP8GNGR_(X%+TSLA>SFZXMU%nMhNx_?882]tNl#dElZ3%[N;=KN-TlGnfTX„U"G$xGbrd,YK%/.>E[kJlV\k]?J&ok>v\b1'?SsSqn]?Pr^JlMVpBl*xT+OPM7K\i„U"#PTu1.vPf$TN4Q5Yh_n<=mqX3j7,9kD<UDCXs4pujSiEH8W2bWBqvJ$cLxP0CSt„U"'wyovPG0FBt$3#t],43N]]#AK4Z<wr,EAN])EN;v5*fi\WMu44#/Ac,+%2&,M'Z„U"l;1e'5e6xPB-UMM:Q+o\0DihyIZ:h'#07Eu201=l%<e/?DG=v#WCObGPbi2%PPH„U"DRnBBP$e%9Rr$Zu33g48rzKZ_4]ZSDhRY9Ahh%L>[prC[NQQB,]q:c>R]'%dv/+„U"kL^s7T3?OU:cA(y&B.*ev%/3;wbuF9gA7v[LG)RN[%fFY2J#-9<]R]#.5i]nDey„U"D(4<vY*C^&s6dj>Kx;-?CCBfQ%dC5^>/erd$9N+fOVPgHJ&A*jHV2>(2*tt+lrA„U"LY*)\ip(7;K->>r2%2A$gvL#*80MM;V:vM&Xw4/mgwK'dRLc,2.hHg=EAA1ddg?„U"AtNlr>qq_)^WN#r_k3b-TY%ccuF%r3umHlG/8DMwgigAs_EKRCTsMwfE&[murmB„U"#zmJ:Pe.g-KPM^$%*z+9W&,TIvmJ9t\F/v[tum6aicJKeLosG('8-0AsVI_M]FZ„U"((dae?AiB)a,zMlH/rz7W_l-KnOWb?h3](LF'b,OI_L$qce)mio1Wxfn06qIESh„U"Y3j=qcdmTc_Kg-u*TJ9n?b$mRJv$V8s7cNM:s-aHn?bKg?8Kpl\]w01?xxINnp$„U"858hZ24e'rN;cv>['\rN$.UGKJmUstahS8:Gu64(0Ty-jFnAY$Ts^SVN%<]D^m:„U"QQVCCA%UddP>)aHDxJjIE/,s44^n+U]*13(p?hjbLArSukCIvgqT0Mt>Dc+/^LU„U"F*vk9hhO[j<t'#lPAQrhX&a77N7_L?oKmrA$Udv3QVb\:jQuI<Wk7Nj7]6N0(&J„U"xsIAHC<?O6N47]vz;\U6NO7_v&5pajGUfMSG+4J\jYQu-z+c+\jYQu-z+c+\jYQ„U"u-6::Y7Nj7_v6+?)\jZ;u%]cEW9RVhnO-2MAs2QkLa$IEdzr*.$Ed\<>.k&BMHf„U"hMAsF&$Ed^HK[m_JnZa#oB+rBq$K8TIEdXv(6$Ed(.AFELfM1smRG.w&BMGf,MS„U"W7*]vJHLfM)u>SMkxmi3.j,lFNjG9\$jpxYM?/F[v9a.tt,66\UE%d>\#aIAt?]„U"F+.k;b#,f6;wBFrRSv$h$SSv_v;8_)v;xD0Xjsc<72]6ph9\4jJ'uO\N7I04.kb„U"H(^fkEUdVM-nR)rB2F#\)fr^s\h=_)x1NAM)-tHH.a.dtRFK%d4hj)M/Y_)w3+m„U"7kH_'NSS$4G)d[tC\2Lr_ne(90lE%d>\#PsONY_m0)t4t?t?j.kbd^5]A<-u-II„U"'Etlg6;ukm#mRd*1m<KLUmeD[6.jlEpBUM?MFQ3ikE%\hGq'#:0\$jxYYM?FC[v„U"9x5\h;sLNA>Kr($)x\kmmQ&N_77NoneS-Mkxi%_Ed^5a($(ck,k+hDF/v3B$[pp„U"3k8HZStVPrlFCF7+.tt-CF+.ottCFR+.kb3dHmD[^EdF[H..k5b]TGpwj80t_)x„U"m7IIedp^a^>+3ed>>a$)3Bed^a$rH,]M6\3yTk-G^:a1(fl;r$#2A<])BrnW,5p„U";B)rkb$>mZ7GX]#77O)nB..-dHH.5x^604.lbH]R?B:cu]m/'glEdg^aBbO-]6\„U",3ua'urB1R.EfMWA=[m_2n[j2j7G^__<jSE[tpg;'uApmVgn'SZMk,TYSrB$u%C„U"Z;KnJ]3tzb;ngJ]3*Z<NOf0=_g0fdt^O$:9I%adrS_OmQNI0-3%Hc.wx]950ttn„U"&g;wABQF0*x8nm[Rdj]:Vk8XLI.r2g]Nn0GFjVk$8BI\uK*/wXNgp2g]Nn,\)Jl„U"c<vvY>;]0x^A6Zz]YSrB:\yA.l3L$_U(d,..*lBGFHnu9$HSqs_CqRB:]\$fkZN„U"M?F_Q3/in'#X>+?ni#6XRkwns[7,C^tmL_Kn-A?6j6k6;wBGpF0xbRomQN[_7wH„U"[t6.l8bHR?Lr/M]6S4G'*lbH>&fKUd=lfvcGPr^15:=$Uddl<H:UPr^q1+[AQ6n„U"H-rNk;w\BIFn*$^iI'edb.a.lxgFLEtMLk[\L4/lbHHR3t0DMAI2TV9_v/Cc=/W„U"lbS:&_Udr/Ec]HV0MK#I\mgnt5te9O9OnmVSSnvdPF0vL^a_))MYmtV*n0SsZk-„U"nJHp'Fgt*n0d)SHScs5JiuLLO$ERkwso/cH_ncG.n/H[v9a.$l'S38G^[K77G&^„U"a..0$lB.5x^60a.tt7^$g'mY/xB$nKZ.$e^-areH4]hk5t+rLqNMBmGEZq*GFVl„U"Q;jl4\KZwdmdjGH-msxi?;umIXIEHXtSMk,qTSrBM$;\5mUdVopSm:uT]m?tp>k„U"84HfvcRTvLH07^wddFjHURTvL^5;RSvL04gRHu$)xm7IIed\677oAn0.x,^hGwX„U"DXjwk'&A'b^h=BP98BL)Kn[1thd\4Y?>D++DXb&;x^hXg&x^h70&2d$7BIENHTS„U"SKr^b_%Udb.Px^vWY+9uk</Fj']_Ll+hD.7(2.1BoM$?Kn?/pt'NoncjR27on)c„U"j27ronL/h6'7H:DX$6=;slldGwNwmmicHpDXA6N$^9s6ouJ0u2ps3s?Rrsnt*_$„U"ZgL5rmYQiXsbZ2eVJmk\8pdhCfNTYF(rSuu;k/=EmQsi:u)jL$lppy%,,ucJCtI„U"l.?u;OSZv[<XJPDY-DoA:pp7*?P>%xn5mPTLntu%EuDedPKG:IB-cQE^2Xbb=wU„U"$P+c$my-kRMo4iQr6WYAyXTNf4ierH8q?0M;R+=eLe6gYDNiQa>?_H='\CLVfrX„U"3.D2N$%E\:=tvwo]Y[up[m1$VUsQj,wW^M>8SXB80Vke2nC;&v]3C[[1tjEjN-^„U"mmv4?'zVu518Pd(V(qea'C81q=L$H<Qf:?uIx'Er8mM:J&e<(Red%/b>#nk.g/_„U"p$3+)D/9c*,kHRK[#k,g,Y/DDPRr2:r8[:FbnMq'k];gUTBLPN]3DglFdZfrtFa„U"'O4-(jdc6>\:Vkv$&V&F+E*(:OTaL_]w5fI+cEsIx/;LP;=Hw%uKMEbLs[_HCIb„U"*l5r3G_,EBm_2Z&bGkTWw]OMcgXiq$ofwv+EbE.9NKur)hp]2NkW7l7UK7vNP,n„U".U1.pQoWoDh51;FT3**h9Qvibs-6Q,1R<tJzZO&Ece_M^'$\qy>XoWb?#$=+rtd„U"IbfoB>rDQ,se6r>RGd:V>jB5#FwtGZTY'3^(Y$.&alcrTcuIrw%L,_3/+ojsHy8„U"Oa<247hymRQB;1XIypikVkLmbprS'+[A.km\LyaYb+47Fl&[KsI:4T=\\wZx2?b„U"/$+=03?.yr7IB:VuBfIa)lKJ:Y>PsI]YTUnW#XeZGOOgfOa5P^Z#*$z1mkDH;P1„U"*ZE;jQK^hHqdTgrkmO'%0MQ,>*9cT9HmIiL<t.=O/eb$5tQMVTDiu3:5=>sZJtW„U"#ZA'4E39_Sfn+Jjsf>za&lp%aYG[ROxnyP;/i+n*\fNT%fIS73*3Fc$%-9gzz#*„U"7j7j5P>2*t#vO*SOX5_v#>tFnu^9&CS.R\V5(X,eVij7B2[&-t;[=%8:(z\;<q9„U"*X4Eq9tujr;2K_Oqg9_Y+&sDH3]rDk;=f??NSLPdBZ0<x$7I'-3<)(3VIBwYTGZ„U"7da;(b7&JBu8a]mMoex5;vEOe-bJbXK.BgN/&gL6sLniJj0X(D+VXr)nzOkqImM„U"6sN-qLzh(Yh(sy:S?)]pU14HZc*Ob/U,,MA;*\:p_sN9uVvmXIvHShn+yA0I]2g„U"vjun6-TTDDxftH)?h)Hj^,sfW>IQjBvQDCeXhmTXaG#,ty+V>N2isew[W)\Vcg1„U"DKB_jeo:cR=$A=)4jd-B+4#)_JRjevOJkFNk8t)u8nC:^gEKZhc$PAc>w;P'7gp„U"r5gMlhyyz4=_82,G,hUmWT2$*H1YEXiu+w2WbT*>X[CqcK'aJGL4zo9(bzo#]lJ„U"1\.f=ZBMZYb_mIamJsRfh=^)XE4^Ha_L:itE5AHS5YI0imKDp,5&.=Nd\+f/F3d„U"=P<kA_AcC8+YOMVlqEYOtfWd9^6g3MlJ9tXpw=6OKfkR9&XO,=z7Ccc<js'l#)+„U"q6JN3k]pxzU:xb:lEb:W.SpK<fTlPO3ce7KLWP3sigq.bb/:WLrtu(Bm:Zh7K3l„U"79WOHlp9OWQA.5bb:WeLru(NBKri41HTDS&r?HQqd3kfw_h(D%b6eTlPO3DULru„U"?(BmZbh7KLWP3sigq.bb/:WLrW_#M38k,4sZ?b(bEb:WLpru(BPK4i[\_0d3GiE„U"h.sL\mPWBKFi9E\1sY5MP3Esiq.5bb:WeLru(HBmZho7KLP&3CrrW_P'bY#sd3E„U"siq.5bb:WcX-Kl57(b>$2uaE6wWtlh+b#8eIr5UWP3sigq.bb/:WLrtu(Bm:Zh7„U"K6LP3CRtr?Li)i[TWP3sigq.bbn:WX'aK\c+,iEjyc7?Pv^3&rgo6K\LI/1qh2%„U"kqY1pRdDevvWW3w2QD5&vQaE'iy=0qXz:1ZhNRcP8]h#6_hzixxMI=[VtKKv.*B„U">X.ftZMS_u9LXQfq:er7gWCZ&r^hARGRdjCu;uk9bv<(n\qYh>M5h6j#WsH<sFe„U"Zd7jWN_3NZe?508+4s/F#:bE9<3TjjTnQGaA:*E=,f'D:7Bg>fg8dpr$;fX3qqn„U"IzWO$Kt_W6k/[/Z-?b%/uwR#7?G*LaidW$/3G<V)b7Uy$=yzGp$:0;EKa]+gg7w„U"&UDU5<uT$\/IYuO<VF1SmB1J*u$^ey[%U23oD0bMoL$1\zt)NxuVas+M&kO'-V7„U"WexSD9=&\#9gV*9xBpoN:p\i.z,/OE9bb<,&w?66kZ4DDq-M9Xf*oDGpU7mNQ%\„U";f#B+7/ZhuZ+4Icfe_eVPK3RkHp[=XZhNemD*kyeL^YYbnNR0hO4(h$/4c_F>H=„U"-&D-/c?Qv[,htyhObR]X>IGokq+^>wcDpH9RR3nS^u.R]ua$7-Rmb9ZfMPQlryA„U"TYsrS-Rm9_p&065)as;5k#t;67Y1*r6)1EG_xVZmhCj'WvKb.?Ln=g3Z9b+24kt„U"*HkjO>,A%EW'K2ji6w-Y8rER+=q&LUI9dZcXObS>ZCx74N,TG5WMzn66MN6tuE%„U"*u%im\',pJ:V_^xp;S8BxnOoD4*oCBz*hD9+RsA$oSO5]Zi^hc/b$Bqo4yOibfb„U"jB]fq_(NTBJQ4g%0]Wo$h+Q#J':bJ(hzDGnsf:a)l$sU3\gTk$1KG[:\=6af#pG„U"'jQT3.3ea4gV9F_=L:S#Qxn+,=\E*^t,&..Xn[t^(&qGMY(\s8CsMRT$E)=C<_?„U"e%Sf*ds-[\s3RhJRlf(f[,ORkF76,e]:UJoCM\-)D8Ec4%_XbhE7AQQok\&C\[K„U"dc=9rPLYajpL++=o,B[M>8o.\F*2qA'#1_6(KsJhq20K^>LGr[PbL7fK=h<9.Jp„U"&3R(+k.?<wEi[KGSq:N\clf<TBw1I\GxZ20ke>kYMveM\_923DK>5$XoshLO/lU„U"=?eM>qgL[7+SP^DWv=wGh%LsE:FzW=U9Nt+>Xj<5e*4))b.M'P1EH0*?%l.W\R)„U"^daZVx?tmu9a\c#=Nt$<UxbsD()1V'QPD8alt.Fm>cWB^?l_IM7u:8Lbpq?vQYa„U"KjV6-A.0]n5<Q(u[Xwv=GB+ZqscNg_c.fiV6K\.cxpB5D0<E^-u]e(UH;YB'PHP„U"1c1=ePUHzu#]9LY]VbHqD6ZXfd^KkX70Q2b[39t3+K7aC7C=vfAqA%%[:P+PF[<„U"<M'i8YYCjqf;c\zGMZm%tG58bZ;Ru)dtEEIU62*HX&6VDFFv'Hd(KAZzs)p)X+:„U"3X=M'eqj,YH<'T[QX\2y\LDBF*Bh7E.q&Xa]FA5_$gh(0\m(%&Jk6QL[3ZvEYWQ„U"Y-25S''S5)tJ2W*F-^6exLEw0gR/Fcj8KT*u/?nhx(%up()%9%%%#-%A6'$E?G.„U"lBr)%%%H0%%%-%%%%rf%siSt7go6y)<;xzp=MG6l6f,hQf6v*4$dAgAZQUuVfd+„U"[STDW]&<O-gFgVKX)[p1::>UZt,?JiK1Z'rF5iE3S#kqiT'>DBIW%/vW7-VC4%9„U"8yipeff#MM/SOW$+?A*TC..t5p5hZBblkipLm53f<nDZc/'mev<DnY=de^1&/x<„U";F;SCt:cfVr5<LlVjF=1h<jFm=c46Lk%87jc4v9BRPoPtrQCNJDMhhz9op9Xu[q„U"wTKtZG)\iwrG+[hBDXCJ6aUqW9j?P--_3T+PL_4^g7EDc(a3/iRpF?[BX-s1iU'„U"]'8At[#698PG)cT'(h4dO^7'S:r&,ZJJ39QcogStm;TnHjqCo+_<pI5t28z]lox„U"?_Gp[8N,Z/0huQRs$f]B5<3&;p$>7huMOSVZm?Y?xFFqUrP#Ib9TfmjPP%nJ_.A„U"G>3'g&&S,_27<*oGF,#DeL(OH&d.3oscc6(_Ju:j(G4%2_'U;/Qw:ga'M7eqKSi„U"Sto^mg0$jYRbIiImMn([.XzP5Lna4^Rlv5-\ntzD6CuMrcLne9.Uqb[I*v=%1ES„U"'x+2iMUgU3Q5p'd0[DUG$[^35eWN[6k$8P^cx^XiAnXj2B3kPBPY5v^>]OKp&]u„U"U.B^HU]S/&vU>J:Sbp.hbD3C?]6mwtPB&]p.865cH,fR9d2E]OnDhs-p'r[t*QA„U"8oT(;]Xv0B&PTBb3MIa*5gYHK?:n)GIt^W.Bd;0R(U(\;3H4]WH:jgUG-VjI0Xr„U"w8bk;._tY7C]suT]c:eOq3rfoIxq2DqeT?MOO_>vS)]kU>2lj:/<Ta^RskNTYqw„U"Myy8iS0=:/%U9/jRG6?'dQ;z'Q''xxB*QP$%mY[[4_p</7$/430u(^_[#v#-MW?„U"ptVX7M-X5.dqQoKw<2Z'9lZdeaQOG;TeRKQD-G;R2eZ6E+<O6D;z-:/;<76S-YZ„U":xJL//+'=)[X-X#=1c%sm1IKVS0)oH:;+ZL=[XWRUHE[8/6Zg.p8p58z1*m/WzT„U"=78v>g.6;yQLG+78('oCu#:y,tCGC/d';h0.1<)iuOzc&xB'wht(ySfz;lywG3;„U"TeK:Y\c?p27MM.M:0w[ReZ6MW?ptL.JUVs3/Au?.AC].jt5PZ=WWEX11wH3eA-_„U";af,E+8<L38]4$l.9q=DUcB1YEhv4fujv$*uZUAvrqF+$$S77tK7C,Pe$^gurYb„U"mprRH:7+#cstCKBHf1]FYC]rks]3?>k]GuDH_#jj;REtAp=OSB\ot>k\D6fKUs7„U"FbYm$(grbb.ARb.kGsthb(cg_iac\4m(jr0bd#p's*nm,n>QoS>:K^Yv#K^kxbn„U"+q:#.T5Nu>njcd+d9trGo$]Vd1;nXmhuWrv7E%3ssmTcr&a<LZdQh5U2tVAqku*„U"clw).&CG:8.iKmsv3FNHj4bu]chkZjmR*bDL_fnV(rV?WgmhXk0r(u't#D6Vl.x„U"?k4vACNFFlqqO[so9g]Fa9Bd#SBTHZjNkt;8BHHcPm$G-pp$(S1ws8TkNZEw%,u„U"p(%)9%%#%-%AH6bEIU&6Q^[(%%h%/%%.%%%%r%fsiU%SgfxN.%<>\jm5wmAIw<9„U"A_#TS6we+/zydzb05n2\1e=0c6tkj6?R3&p<?\mZPX7hkO(FKrbkvYhlhL_2hLh„U">NUjm=ra)HB<CyQJ=:B,7G=l'y#$1nm8=.>*ruf:RFs3\,Ht>3%M?4--r60k.*d„U"*6)hp>rrmOiE[U,$,?9wi)1g5iB1'8-A<X&s;fr$7/3DPT:OhNL,do:qGKB__X/„U"n-rf?M97wt2L98D(u7\yC\W?iL8S]F^UoUm:hgrPP>7;hH5N'Tt]V+rnnuAGQs2„U"4+:kevv5(qMr%[T^Db[29*\/\o]r9XrT7:djDPm.?;8Dz7,o/<2,g5(YcTMTOj<„U"\S?jXQ,bNS\<AuMYsG9>m*JpV1iewfQL?,E'dz+dy*]biMg+5W_g(G7hWQ#/:w/„U"vjD3U,3.O[JVQxfDRfgKG7XZ?r)avH7g&8_-HOD/>mj97NXCPYG+DUM]))_;pdw„U"xknf1-*/4ZA>jS<x5Vh;fM>#*I1)pxln1Xm+1G]s\a$U$f*F^J-(F$,\f+1/>?v„U"mOc/'A:d9aXn.f*k<t%T=mpiS<r]J9Ou]^[sZXcSHvjwaNL,ixUzI5I<a/^x5i[„U"yEEep^h''bAH4.t$.pExKgWm9uE7'A<>oKB&Aee7+auSVtS>h_>0ZMF;ARa]BGS„U"XSeGQ/4iruG;k_9_*L_]eOMB+C=zX-V1J9'PJ;^d09AFqEfkOpM]N,RI*?h5',+„U"<F;r?.ssEv=t3PT\uV.HMIFxVb*P>+AM&vI.*N\v<-RY:(j[ct(QCLw:kHiYJib„U"iI3'e$Sosvj2SR-I2$g<:a>d:SH-A:d)m8[5rU.[jUd;vq'&6Igc*.Zm&wkuT,n„U";b3\mUsD(wOS#>40ka6SnV%AK1$k#mZ38OvS:%Gvu/dVm\Taq45RS*Art?wZ?6k„U"_o:(?i;;gU0O#n>fhUI-3XiGqi9GB*aa0c3MqJb(ZGdl$uB<hLbbGa5H(f$H(]>„U"R8:djC:4Eavk8$uJVt/0x7&&3R2ywSvt3rct'ivCHUc2F]Ch.FGoa+m6Gb/QLP_„U".L*dvnJ2w$;Z<Xu$qXqD=NiOn9UiSpdKaA;UCY.0.?P0&-*:GYCbh3Kwg5wx<i/„U"X75H^VX1V$/SHo#H7dLQ#a66d+BAG*N8nA_\dHL(1k?eiKC[++m<u%p()9%%%%-„U"g%E*$sE>Rd%UD&%+%Y(%%%.%%%%rfs%iUSn7sh&w;,:;Up9L/I3x?$f_DCGs3eR„U"<Xcb%v-b2eV.k0Di.rKsLwltVElSRGT/mb4ZW<UBH^qP'0fo:Y%>DcI(n63i>y5„U"9&5XV\j9vEl=:$1)Rd8&C$Bp\YY&v0CfYMh6H(jaa[+LUZPFr[(FdaJ-DXY&:z8„U"Z6W9J;TlKnXR.RKfYi6#)1f$9F8Pf;p.5/E^q&Y#FK6*9\Xl<<7s]=V,+v^&]DO„U"w)k]:sA1=yFf2NPz9?:yWC44K:vFVh$.L3&Bmh0K\\3*;yZFcGRCkZ%9qNh?ChU„U":cKt)7p_,T6CL#YTQG2_=ql(\=F*9wVsDpEOL,;F:rNW$ZDv[3>.7$lQ4]36FrS„U"(ys6c:kpC)quYb/,L%'up(%)9%%#%-%U-6bE]E5T#_[(%%d%/%%.%%%%r%fsiV%„U"SgfxN.%<>\jm5wmAIw<9A_PTn6w\-UzyCysUW]1\1e=0c2tkj6?R3&s<i>b6(8L„U"Xg&.CKWbkv_hlhL_qh,_>]brt0YC&$3S4zea5Y](.$0H&N(BUIt<0S['ZwD[;jL„U"6j'*v1,PK1A.+VM/kd*d*6)hp>rrmOiE[U,$,?9wi)1g5iB1'8-A<s&3Z#JBY*,„U"c<;/9l83ynJ/KF8)Bl>UN(uE<mZYMKu7/-X(u7\yC\W?iL8S]F^UoUm:hgrPP>7„U";hH5N'Tt]V+rn.vAWQs&4+:kevjk(qL#2;.AcaU29*b/Po]u9BqV:JNjDPm.?;3„U"nxK4J;TA6aF+9NSxXOj<\S?jUQzbNN&&wu2YsG_Lc2zf9=YRvS#tY5e,Pz1\w/A„U"LAxV^NoHVXj;U3)\WOs9qCdC26&:&VJVQxfBRfgKG7XZEKHBL6XAOYm)i$4T0RG„U"/89M^:?K(4=9A.RmZJSxNGI_+SR4X?]0q90NWho/p8\['7+&PxGI+1I(+afv#ml„U"W6$*F^J-(F$,\f+1/>?vdOcE'A:d:a=n.flb<tvTOmp_f5K#7/aMkl?hi>Dfcwq„U"MBobSFM%Nbcb=q)kN(r#z5De7su8:4#m?;wA'J_y8FMI8MkO%#?U\ClP+\t)<3Y„U"Ep2E;uHj/>L,)AR4s+-A2/$mZf'_wu,)52>HG-3Kt9c3+4[xX-V1J9'PR;^d09A„U"FVEfkzdvAz-RI*?h4],+<F;r?.sq?tBO$oHJYK3ohU_3c?Zkw<Oc\cwhbz7VcRK„U"#54o9k8mCzJ?D7T4WWC_,xx?Dw;j#N_c&(<PI\$k1r+H1;J^kE^V9&Z6GDiEXwi„U"9$wMZj%Sl+8o+boWCC4zA-M[]T]ypY?c;uMYZ$2A[^)e/6WZ\hZKv.MS,(i5Y94„U"WDt.A<-p$w6>9,4hDfWP>'#Y%,>MP8GzDec6cOn[tj/gQ9-7a\DHtxgY$RY^)W+„U"aSVrbMhphb$]BB7cDBKaDu(wB^-S2D]a<kglFnT0wp+*;3^b2ND=nC4lp,.AH>e„U"nR&A[pDjWJU[PgIVbEZ?k]peza*0gyI6Ti;dRWvEf7=Cixq\Wi7d7XRfk__:Z?d„U"s/:[FUl_k7%:[S.&.DBQB6\30K=k%Q7q$;nG=t\lJskM;,E]_2zs[=#k_L.Db[8„U".sXMs:cIw+%up()%9%%%#-%'+]$EZp&L%M&7%%S(%%%.%%%%rf%siVS[nsh&\av„U"t;IU9Tnk(;N1%FK#+I.f.H_/*JA[Q)U[b2#?&WM\-lW)Nh,dzEbabR44FlfgFHR„U"^r_-$O&r#o6DK)^$u&uT4o.)K,ZlZ\7qL&dWGX3.Xd9Za?'9b++E0,:N1>y(vAF„U".kqZk96[:VJTX#(\Go_k*HIY<G0D7-j(DhUG>L/m3JJ2H9&S)+#q-OI)Lz+:m=y„U"pgvud3XTip>I1&JYOb%%,5<SOXQYpbf33Q6Y5%C3%mI>#jGIP[ba[lA5Bg'_dRn„U"c4bY)A+P-XA1$u(t]R2F6++uO?Tvi/Vg+XL&hix_Wck-VN\*L\e?ShZ,n(fUi#%„U"so$oIJ,D;JsNo[B^w5?ckcr_&4Fc:GBMD&wk7O-L*wcZ0DM,lf(u%p()9%%%%-p„U"%^6bdE<V%*(_(%+%f/%%%.%%%%rfs%iWSgRfx.%<T=Tk(5L[&Hw<ew&qpjl;ab9„U"f[E)9.>ERi+nYoU7OVM)-&JnOIszDrsBgrYxd?*YCQtYlhLbB5fhB$J,fLR,d3R„U"((:E4sGHP%;<-1eDVFHBLRpr1Ox+a]TnhVu:8']:/S#C<fDgYK^q5R)fa*,7*/6„U"H,qf364on-&e&g0s3pV9/E5o#bM5elTNZ15=%wNzf&,B2gpj2H_PHZ.P:,ppYeo„U".tEvUgz\p_fMcIeE-E6R&TnpD;UM.HZ4ZD]&+j9S%D*_NjFYJd0ee#>hOp<4Zpj„U"B,LBWr/;tSW*4%[G,s#ThSrZcxiqPl/Mvksb)5A;hVAyUyvG')>P8?X<*%uQx.-„U"peiOa[lRq[&S-7L3Fl>bPqjD&%E[qO?pq6?mTub#Kf##a:3W'b'>ZwIZGk&*3#G„U"6q<An07a3?jhV)8aaBA$-mRMsD-%eGPqi>zo1+?#pYkl:JQ-h'ai[c%#jQE+zfM„END SUB„SUB V2„U"gPIj[pb34m#$SE0rIic%f#ja>u>L8Z+^X#>;J&[Z9IaT=:Izi+U<t[2?$3ox^Fh„U"yT>MM/D3.\C4PHBF[DuOGNY3%r%QPg^^qakgKpqlK\-L<)PGnK9&g*0X_Y33o?S„U"[Ie^#Q%ndME6fb8^xY=WG_g7jj/cY=gPgc-PGYTM-p>+?LoYIfdZu)Wf(G9nP_'„U"b:Ru$q-d)tf+noEcOZL\*Ug#V1P$fq_V:e,cV.\['&tJNUlG=hbX]Y_:\KVBhrX„U"\R$ufjbSP6c_x?<bt41(]zpu6(s?hwj;i\e&#vWK&f8HM6aG6DaCr8tSt0p<taq„U"D+,)a6UAZZHB[/f4aSdD#'TkW2Kg]jJTdfqo'&Ig&[*Zme&wuTb,ng*e#Iv3A&y„U"<bP^+Gm(Pfh%b3dBWR]IV.-dPZ%h>5e\5,pTajq4RSn*atiuwZ6kB_o(?Ki;gU*„U"09n>CfhI-W3XBqkU9B,:aac35MGa(5ZAr:uL]p7]mCnWY$el$>;k:diY.]YFW_M„U"Hi:HCpu2f8=RzeoguW)eognFCX2d_f&9m>9FOC3X',11Gi$K<<'(FN4y2TMZnaj„U"+2H]oH8>;KXZ&4dNW-'hPVXfQ387O;7]>eh6QB\7W?d5iq&e/<BElFi\Rn/j6Z)„U"-,GLCKjx6XJba*fYl\QykbqU5->Bl4W\SL[)n&=b&N(up%()9%%%%-%<p+$E]8m„U"jp%N&%%'Q(%%%.%%%%rfsi%WSnsah&wJ+s;U9MLUSN'1FK##+.6.2H/*JBAM)56„U"=#]ZD)x#(g$0Nhn<z9>*aR$4rF<h2i$kjMc2%4&\uX#J/o\pc]u#k&rO;&_dj]p„U"L$/Xm;cW;0T)\UHjo3*vECfY]62H8G&Zj<JaZ9cWRnWD-TUfq[);(q?<GGF7-At„U"cUpjjs3R,J%:9&x;7=);H.g9:S$o*js_\Xh&:Drx?Lhu\eBA&G%[EdS&J)%8,Sz„U"qDI>no;YOAYC\k\UngIWt[B+tQLFJ[UmvN;%EAP-XnGo_e6*5$X[DSiQ_R-LkFk„U"hUNUL)SSB_gm>d#\p;JR]gFWFdELf1Ptsmff^po5R'W3XJn93L2dYk3$z<u90bo„U"S^<s2O9S+4U8T?scv)g,;hup%()9%%%%-%>f6bEY)Tf.&_(%%'d/%%%.%%%%rfs„U"i%XSgfjx.%T,=Tk5\L[&wK<ewq#pjla,2<fER)Y.EHRi+Y=oU7VNM)-J%nOIzuD„U"rsg.rYx?p*YCt3YlhbMB5fBq$J,\pR,dR_((:TJsGH%3;,-e_D^FBfL2p1>Ox+]„U"TTvhuk:8':R7S#6\f<q7DEKXQ+EmRYM.UW(TuE+,Btt)ZC%p^V3t=/$+-IRdhmr„U"z^4215%lwnD&L,&Af=[#7'Z_NM=NEUU)lSPeoR#/&U'c)vhr,RIoBo+9UeM-&wE„U"KjT)UK>bq6I/)[]xP/RY*8.[tZA-7mM08hbgf0G%,8Sj4QQ\7^^?_wk?B.uqV63„U"/etcdhbP^jG(zWqjkDe[nK_]p#j6D9sG.d2yAxGNmn\tQc[JVr/ayU81>(PCO^S„U"y'#)C5qt9H^_$D-b1EE?Y9'rmV'Z&;JE8hX/9t2+__Y5-H[nYb]rO%ie?Iu&l+;„U"I#6T.-.#Z]'5,\/e];s>,aM9LRbS;U8,2k$cJT9hjETuXA#&.R'OyLb(SaQSbmx„U"2HurWBQTT7(O?_RSEq(TP1%M:D$6P.n/rBsSoYr/vwq<s4H4p74Y7*9r8b2F\3N„U"o?GcN]Cj5EccCmfgL'r;ku1O%-pYL?L.#hLI0N3d&my-O$4kKSk'#?)UCpP*+p)„U"<r3Ex2hEuHjU+L\iB/,l(J>VT<NHAeBEM#r>qMEC-F3t9c;3^[x=XV1H+9PR;]R„U"S/2\5^0r0NM]z_)a'\Lqkh]p(=7;n6<\Vom(t5dbc,t#qBWD7]b8=h?+,c,LN\k„U"iV3RpX1QafE79trZg^:J1kv:OkDR.1mMj#$fcG_]:k-%mp;&1]?J'v5\GVg]*<3„U"OOEut9DL2OE6^Qwf3SaWV;Mz&Y\RH^NR\q_$xUMZ$t&A^)eZ/Ww\shKv._M,(i_„U"=5^Wpr.A<f-$w6u>,ph#DcM>B'Y%JM>P8G2zec6Scn[tDjgQ9a-5YDp8xgZo$QR„U",/Wa)V:rMhp<h$]B]BcDB7KDu(-w^%SM2]a&SklpnHTw0+g*3VbORD=nACl4,(.„U"HBe\.%A[5pTWJ&UPgI<VEZ?-kpez6a0gyUI*l;[dVvE\f=CjhB\WiB'7XR<f__P„U"ZZdqeI>Fg[pKr*'_XN*M3O0FisYWi2+>*mU<dK[6(dD;]cB,zR:^[&_VX>Aj:DL„U"mUms]Gqs^sar%#up(%)9%%#%-%#b,$Er(^s]N[&%%S%(%%.%%%%r%fsiX%Snsh*„U"&aftB;e5T<H_iDjK=s>Ryg=GT\eTd(E4FuRHC0C/rP:pbE0gx66LyeOOJRlr<5/„U"lNFJ>b;)fnzDz8rVQMh]x=,x'gl&O;&B_jUuDbE6$=)V2#'-#2p_Y3(_DTR9$&1„U"OT]VnG:?pf/rYsgAp?fgEw2fJJ7i405tV3(q^qC=$af0m3J22(1S)I+#mRHI)z+„U"e:C&pquwN8Zff(>5I1JY%Oa%,45^OXEQYbfu336]D5-1%amSvwKGI[8dmk3Z>k4„U"2tXFb-i.2Qz9;S'*BnwY<e?5E+Omrz3tcZ^V2-7xW.V5C]kW-V\*2L\?KkhZn(R„U"fU<%sI^fnpoubo>kw=cuCvZ]Skc_&u4F:GO?M&w^kw4,p$wZ0jDMlf%(up(%)9%„U"%#%-%s-6bE:JKOP_[(%%d%/%%.%%%%r%fsiY%SgfxN.%(>BTk5MR[&wV&Pujl0>„U"ia4I]-SO,uOS#h-ow=]f#h&Q^.fsRgw.k>.X6iDbyvobw54WkhR>7HR^AAV>E5t„U"&:b$P2z1jyaIHo1fD0wgdVIH3[F9<i/.;6$lcVCfd<P';u^qmkYQBP]A>k5Sr7T„U"_D.5VZDji/:x)X/6EjY$?X(2;,&Z3^#B>C.5&oP198u7'nYsogK_rQ&95kiS\R]„U"Iupt6SKMhGpNulLE97Es5SWW>O;I4QZC.IoljD]^R,9SY%D_NdjFJd30e#6GhO<„U"4cZpB,YL:r/3;tW*'4vG,Os#6fQu>NGhu:*cFxrC'P-]+T]Ayy#NG'>][8?<*r%„U"ux.3WoiOta[Rq5S&-7$L3p>LbPjDZ&%[qCO?q6??mv^W#K#:Ya:G'e$'ZwfIZk&„U"()3G61q<n0p7a?dJhV8a.aD_-LmRsD2-%GHkqizof1+VpoYk:JPQ-'aki[s#XjQ„U")zCfMLIGj[B3-Tm$SUE0Ii<cs#jta>>lc8Z^XI$>J*9[:IaA*#IzBi?<tr[2$3B„U"oxFhjyTMMT/D.\kCpHBN0[uOgGN1%9rkPCL3^akG=LqluK<Lvd)PnLC9&*0kX_3„U"33oGWI*e^Q%LndE62fb^xTY=G_)=8j[bcYgPogdPGRYTWoq>+Lo9YMdRYu)f(3G„U"A]_u'bFHoWX&<[c*JR>rqMqa\g->_DZj/SZg'(0GgMZMY2de,s9]8V6u\Otj(ib„U"3>GF[q5n0#Mv:nxChu3vB$<(]nzp6(Qs?wj5;iP&X#vK&rf8M6saq9a/CrtSBt0„U"<tQaq+,p)aUAnZ:B[^/faS'.D'TLkWKge]jT8;cq'&6Ig[*.Zm&whuj<n4o*#I)„U"vIuyGv$D4-j5ySnV%AO6T8#mu38O(n:%WFsQ#4bL0HgEX,.0Guowv<X,^Fd:+/h„U"RdU2>N/aWQW4n5C8Abj2P2f5HGTNbukCJJ;$dlPuB<hLbbba5HRo$HR]qRN98jA„U"94EjvkYllawBTMNPzOTeU64lRfbg*apPF9((a0AOhaCX#*=?gjWsT^S+hw^Cw/v„U"L;bY3;:mfL:KYr7f<HM'766Wz;15)BEKKJK+BXWHU)bJ3aYOZj<(OS_ie]W?%#c„U"\HI;.5lRta[vBG'LHB/O$V]*zLjU2Hlr8^C?.'#>dl.DbN(%up()%9%%%R-%L,K„U"$EDK'u\N&7%%S(%%%.%%%%rf%siYS[nsh&\aft;de5TH+YZdq8Wn:ypgqj?,P/P„U"f0Cgok:a=bkcP'RbV=TwJDvz'x.i4E3>jRG\Hh6r9J.[&<NDm\w*Xnu4Nw,d)tr„U"RSOdjUpL.s:$)EvT#CJ)R*YmY&v;CfYM62H(#cWjQJaZ9c:Tk_hD0VVo[)7>u\<„U"PGD1-dlDhI^GL[m(3J*j)yT)+%.TfM6Q_+NXCPp52wDL$-QX1+E1JYy%a%,5_dO„U"XQJYbfyZ76[I7v2OmVErklUngI_>[BK^2FBng3K:*R+QT-gbk,B]q(PR2HB+[ut„U"H/tZo^V22]xW._kCek-PV\*LDR?Fh<_n(fQ)9%s6_oIJ3,;JsbNSbCZvZ]kjc_&„U"43]/64&jPyH<MVrB=YiT4>jGo&%up()%9%%%m-%&69bEiy6rl$(7%%f/%%%.%%%„U"%rf%siZS[gfx.M%*>r.k9M3s7xZAPyPfit,T2Aqzd.;qGaK>8OUWrZt?[XFXB%-„U"r9\,8*7BX&^\yyN;hVE^Y67lls>G>bRqt0C3&2vjYhh[aD38&F8(3^b\U]p/bS[„U"Aw6D[;Lr6j'vG1rPgF1HL&4q7Ea[X)di.QY.*)W(adT-<on(-ecg8B3p;-7fEeQ„U"0uG]D5z#'egcGPrPdgHK]S<]7b(_zWP=EinU?SP,Uo#/r%icqn0r,v*9E4+.9)-„U"%pX>^Gef2b4q)o9/7?[hPj/Q*8pZ[DI--7M0l8h_f+pG,H^STQQA\7^?ja5giX<„U"xZiF0TwnWCB:A(h6;E.xvl_D2l^]_8cl+YiwPI)R9On;Qv<X0/_#i]\B:pp)=O.„U";q[kW0#6l?6\pfA0lB>m1/J2r8AQsh<P?3;)_$iU*.HSmIm7<u$?wsk&KiGEUZa„U"?HXv[&Wu;(SZR?AXR%#*l(3K/XP,Y,3<>0D'+WRla<kYp_gGah]VAgfPy',3<ns„U"?^HxkU$KhP3e,PTPe,Cq2_-=C#k<Yq^ldS1tT3wb4tvR\My[Kac]JT^ViAkWeX*„U"52*,J]^cYX3.pwDo&^t48*%Gs75+_SJqibbSf\Va)+d+%I4zKmsmkD#9^VkFR3J„U"a;Nu:2'VPN'k8be8fXRQqTTYb%0g6;/:^/z^9RgqFMr_m8Ro%NMnDi>v53\#lM'„U"8)Q-<jMYi^OQ^&rI]w8XDB[x#&5_3Q]+Zc8+?gTKlelEqbCfW.uHMwqWky##1zx„U"FzBX=zbBncU/W&.3yLb\yfAJD=lW'xMt>NZ55LBnxZCek>(07K8y$[Ql4oo'Y>^„U"-p,\70vZT2tw:%0-b4fO2KeciBE&7^w;AB\xC9NHr^l(daTdDmF%+nU3>ebuo(N„U"d29OFxiD#>3aggLfG-^RmhLGNxLfHBt.+]G0jqF*.2s[oqm7TV=\3vhY2t(mmAH„U"4dv$jPj]iJY7u2J&I4aIheoBre[H9hDiTCl?>B=58[au1xUm>.[KLJJq>(5E4sb„U"_G7pA9d%s']Y5<VAUQV+.6G8\j0P_8^,yg8^jsIbVU6tX;X17i3iWnPUiWptJg>„U";VCI*0.?#,E5*:7U?^1Dru:Po/;f4HqJYeHF_gjQ8dU8^qxQ.=#eW'ZO#G;NnKs„U"hgu]hrV#;>8?H#;[m8&%up()%9%%%#-%t-0$Eyh%9YO&7%%S(%%%.%%%%rf%siZ„U"S[nsh&\aft;de5TH,_iDK<=s>y#gGV-4]IEJ^m(-MbW#RVZaCSaZV&INHh-O_jo„U"m/$W)hfKZlWTsiO4LN;9)LFln42c6:8zuJzZ*zeH6[b)s,iI:fFg+Tfk<aOGROH„U"BZEjsbgC0GCL-U+^5'c1s5k6*I$-9=\C.?ug'>8E,zaH87kIHJ66<-hAe=FP<:U„U"$E^Y;:Pti#N6gN9,XumovTFCgC\7/49&7i^Y1W/1Ht$'=T2/h<R:haEc8.X.2?/„U"a6(]<$=gxRm_&5+(DO*1F%;,+OFU$=T,%oUxdgM_GHq'Hh8qQ%>B^LZfZq%/.Hk„U"nY5q$:=5E):gnHJ6;a83bSvd*^)AN]^qv^rNq=B),F+n:ys6c<ep39qfg,D6t%%„U"up(%)9%%#%-%EG*$EmW\zKl#+%%%%4%%/%%%%r%fsij%qSugOq6%N8;8PBHx5$n„U"kL*ll(^#W\O_>5SO5;kg.Iprs-d>F.&sJ5RFKB_\79+g[[keIDSsnFk1)%RPDiX„U".<(7bWYn\ndO5QsVxks?CGrsR.SU+N)D4w4DB0Gepw7O:&:QWpllG?/AxR7:XJu„U"huW$ulv7hl$7F$bF\dm2ZJh%/WF3R:kL6H:\PU#uSRR),z\Vluh'G'?_OYu%xpU„U"$h=q#I^Y=.3Zs4;L.bh,$O/2e/auS?S?*nWOeS]&5>VA>Yn82Wle90);/,h0EM9„U"VK7ZhAwUN6rVUD2MwuPT8NCNX0N7YCm9pGLX$?-MhD];?Cm$8VluR12*MCsxJ7q„U"_Rp#wrNw(>LiQEk;p:v[XDwkvS6A)CbU;F\6-w6[2;F)*J$V]>RJ*?8=B#Tj>Z=„U"wY[x+-_[_-1$Uq/oq?&9r'9)Ja)&MVxnM/0X=m.=Bp,uCa(HMEuW/_RipK=wM=N„U"kHi0BLq^P)H4A:$irg-gZG-9$/Q*SDQF=MRbhp('Az=zmV0SH<*nEcm(+5HfO.c„U"Qq1Taw:7URSeptk+hStwN)0Jyk+nK3,/kMT's<Mx3enTJ0Q5GRY:#dK<6Wp5eJ:„U"-oGjmf%B$_a^;%)f9RR;n+)/<[(S=N*TBp3v,-.yv+SFZ]kh\zACqphD9\69RBS„U"r)8A-d9.q^%Ud$(DEidfKPio)6wOiG*$<c7$RmLkZ%tp4]H>GHsyGV0]A37r7YU„U"?j$sgn]=<2AkSe8r_\IHt]jfoDZO.jc4V^CK)*35J(mkJ&p1RA:%=tK6b0Hj-W,„U"ZuV<VHT&%*kxZjV--,aL&rafNg*36=%,H'V<+]on/72A#jcJKT_o_Z$uKPR7:ek„U"\U^$D5Y$6,tRG8>dpoy?XA5bBw-((\kKn:K'K:rvrOgPD2es#l5IJna46RZ?MkY„U"[E4dbC^PcdNYFuhpPMuMMNNI*'Puquu//O[<.&5pto\8QKM?PDqCw(*S.RjsqKs„U"pknWaoLDob^_>4do7kV0E*OUp*>XeeTX7I*+(sH&>,$f64bIy,'/95K]-]fx0a[„U"7/0-/7?&>:?9#2[Rn:Up>.XjJUYM%p7-jjLGlJ9oTu'10-8V)kiGf-o^_*n7zC=„U"r\&o*lGZt/4&0gJZ8O9APOhDIgzHBDy_z'WMK;SI;L3(6.Dyx/%:(z\HxyR>xCo„U"'*;S;LmA3Nb#upByiDpy5B2ylx*c?;5FK-]pW(0c;8vm(jjg=*c&di^d7435'5K„U"sad/l7-snX.)TL<.LM3b19sZ;kZZ]PSyJ-rf0JtCwt&tZB2FuqXkA=Llf]6nSK4„U"r_y*utzX>xVk'h]<Wd#QIXXFbXrh5tu7u3Qqc+3tBcPs#.3G^mb/oy+O^LkkphC„U"r0fbf0HdUtLO=mVlEOxxR4Fx0Vm<s<o%XxhFti75sghN_xx;R;cH.'tLB74Unfh„U"mIFu2%KvA3x*q4RDlefS>/[D9<RstmVF)8rwjmUM]F*:k2/SYo3BxYhj>)*X?l=„U"68^FejQ/M#zW_,tJY^6A=*xP;VGQ[(En)QJGOcwfG(^Mb#i0i6igg89;1?XFPa6„U"P0BQANCsNoSciB)8w5LgUHOSYtH=FgC:5,xhwd4nvRU2*_wd[nbovOBcnS]RD,;„U"LQCa-K1VUV87TRLr'M3pZhga>ZadQ<AKjc=R#1nS2JE=(d3C0iMZM9Kg,2Qj2lZ„U"J[nUFUED==^2(5\XX85vch%iC:q(f3sHZ_<+dj(^C]>(E)2ZA[d0(FvaHWar+;d„U"k8C#>Oo(giFWifQmbxxP77lX'?KLLn2xLLPbLbU+rJVb8HQC6>9JNnA]Zt7KEbu„U"uUNMs'*mGYsoaV,G4rRi/kgUmBUf%I5pi*rji\aStK/$u#:X-CKk,2TEtcol.74„U"r\7<q[XTJ6Ds]Iud)[b6Y#mnSU-Kg<h\l5jbR/D-3uRU279&BiM3_'#acg7($=k„U"n'K,15$ueWXlo6=bvDnoh$4y#]]pMH^yVRM4jP#&U\>7#24$E/bslaBB/IxJ-q4„U"ybO]i)F;i0j)cqDy.CU-BX\FGwdeIfYuu^6ANI$6$-GuS8,%mryTJ[Pk,+=0l[V„U"bbQ,;h2e0]\zkU<c*#v;44.Q'CfCO^7AZv[z0KC7mi5$f6FRS+8TegToHLl_mmm„U"hDFl_kTRXeJo\rSfWtJ4I'x4up%()9%%%%-%?s7aE0FZ1m&&5%%'AK%%%/%%%%w„U"jfi%rjSVRxy&)).B#\MaNnyor'pMS#zCaCX3mYLw;vKqJa%=Fo&Qnu]VFr<Zy9>„U":1XL1%e(=vrmv8g#+UA)Gy.Dq8y]]1uIawn]x+d'OIMy$q?DswufqL^d,M\o:g8„U"p_QHk[n5mW-&Ww\9i'GPRB7M2;^0RSiR%YgT$i*c#jHnRD0T*lC5rjN+m'Z%xh/„U"q;esi?6v0c5moa#o[0:+aUo4O#^&?UYj91=0,B)-Ocf[^3?6E8]tk1cowoLs=dY„U"Yuou_[B[bq^)_okoW'*(\-n+GWaDG3LqpfhH5JwcSPj'aJI1W*0?jm4]DkNTVe&„U"+^s?lX+\fvKJLpBJ,hq0>wVC%M,J<,>+\lT*FmchR$rcdJ$s(KJl$uo_X<iW.YW„U"rujeFGFeBN^<JTxjgo]8ZBWj]W6Z8^:dkvbpR=M;F/42Z#4w)P#cE5Bc0x]4o>b„U"x96Lq25ihzwki:;s>U\f$#L:=OmJvsz,[Unikue_[mZfN>G,ItVQ(y]<vHusm.W„U"9hS>_Sd%mq<<F68yuq%[Jx+$/$l0P)wcP#hp)8V\:)PH_?r:S^P3592'O4L*[R'„U"e.G.X4?^<3v=J+#pUyZX3mZ+q1mgci=&t:R7//K9P7Jh+Z(Bcgh0$IBF;it*mo)„U"2cmi++8n$2bSHe9IZDLRg\UCi>1vC?-s]V-miIs&xuv.9.q9LMvdn1$4$.Q;ZCP„U"aEl>t'O9Ugem+^RZCYY9,SxdIGHMw8oZvwSAi;t#CIm)sFT5WI'EImU5eG>1>Og„U"S*(GW%.]+friJI]^;fW0z=.'nK/AA7ktY7C'0bQ%2dY,IHvYRBZj'lVF.J)cGKj„U"NP]GVI\huhV>7:Ft$jmeL_gJK0NLR*jG1*aSIdj(7\4f$sAA^Nn%dFI-xPv%0D>„U"^&6.oh'[bI>3a3+f5>[baU8wCrGn_T=Zxt_/%YbQ%HNL+Fd7ztm:7T-wCY#,Gl<„U"QrWYy'm/A9I&0:j);1pi*uE^e)hC#UZezYC$971^UZkYe=470kq9yJ[iU/+JgJB„U"'+gG->zdCzA1;OpeiRYvRTIRES]mc5#09)sE6&sUaxhjL[n]b44bqCm8mmHCkYf„U"7Vm-RZ9SC[H+V8tMV_2Op]jO'Tx\S>>vev<niQ\5O\&SkWhm9k5-1fx\VJ:9js2„U"C3/QmO,(]&W-nJ/#bYp6WBp0#3'IqGdZ&A=f'c-qAu:(CGW-%)No$IJ,#/L/EcY„U".>;O=H+^VelT'%$\$>Rvqeia<*Bn7nkVDmUXN<YetnCsQf?XY6NKiQKrbntDY:w„U"J2If-nB.>?A==*W$xM%W<r&=g)P5PH_saVt9jGu0>Nf[=udB[,Iq?o#Ti8p\bje„U"K1%$6^h*fu8NxO*'\5rhlK-,\oN?n3.U-4RIot0n^UY,$/(%H_$rdrwr2R\YJ]?„U"(1cg#MMq5^QjbZ\\,$\.fqiYsa-eV0Q:G$>2GSmBxKUUl5gds3hf6aSK7WB:NAB„U"^n5VcMBCB\z]E,/-iDT]-<prI\iq8p/wM6;1&;J0'Vj'^;w.0+w.4t3l[OKh2[W„U"g#UK;HJ4WEM/l5.#^9G1P>3KJ]aQgVoCSUA)06uiW,)K3l^]SxglZ<oeH4j-o/$„U"C(;t*uE]e-s.FZWEwF/IYUx4;D$dXQ/uQ4*JW$IXO/I%Y_xv6G]V1sBg-+/[&fr„U"bZ:#SM%/M2dugv5$3fn,3'OVDXhCr#X1x;4JHkS^h5KgKQGT]8F$+NI=:KCk2AQ„U"y1nF(&2_v3Q>phP]arh&uuZsF<^q>Q>:kC07jUu;Lqm*SSoVZ5vq0+Nulnpur.;„U";-8.1wfuh'/v^/;P]$F5XZHT,_m&lW,TetabEX0r+X<+HR\5FKuqGbmA96Q(GQV„U"',JowU21r_5S)yXQ0i(6M'm-LBobx+bf$>:D%#g+z5<\XFe&aF]kdmh[Rko[CR/„U"LG%)qC:okvRHtt37DLhp'rhGcI&.N(&yCV88TVKu?$yn/H/%([t6+$JwT][DIDg„U"lG,d).zQMYk4lY%8cbPoMA*o1KAeZ6C_wy,(pZ17g/3K?k$)D&UosE8q2<-\%]n„U";1Mf6&;V&UDoP%a]c6URg])tb97GR.Fcer7xI/-B9'sS2;RDp'gySaGTl&ugL>R„U"H0kG+pi%k40wseSO#>IURT^wIGweXaPk1p2wt]jW?U+GdB'8$Jae&y8+.Cn\v0P„U"U&YvHbVeub)Vl6HM4tSO4[vB-p3,?+]+a]5_*r^3F5j7IZ(*(Ncndwx,o09;X>i„U">[^Xwr<CV%Z_(SadO*C2dx-)d\Qua/^..G6:U-u$Req839kH2+XtOJn:+5)Ht$7„U"+I^=]<fe]Iq+ND.JfArW/paZATn3XYPtqqw-?117-#\85Y3/5mXJ^Av*^U:fD9'„U"-QI5J+F/Zkdu)h%E#FJ6k+'xUP2)6%zp(neCZ%7pkLNht4X7#T&3t]A>eqm#s7[„U"3XcH\Er1J7L.GS*(>^nBe;70bKNm$3YBvaYvv3:#MXw-2%<w:sgRW[)RDQg7B#X„U"%_6+o5W<>4kP)),*L[#'D93gNXVmPdtn78P*Q;#NRH&$>Q:AKJ#,_G0)?F&[?P<„U"mWTdF-Ih*$l*\m29rk#QI)ABC==qNK8fb/n$xp\80]8irG-eNA_h'9LYq/X6iWy„U"C*&lRH$*=\GQ8b\0N\+N5&Cu6$SC3'=$8g]epTd\%1?omM?:(yk)B_oOP\p;CqH„U"l<=4l-R4gVe]S[jZbf%uWWXHhq<N&eld#NYaFtHOCO0QRd68w)$Ma'g.*:;\mmN„U"T*p,<I?*PT2v=P+EjE6+tY'x'151hVsWgLDBL:[jSE)k_[uz*16^5hCoZbVdx4J„U"_Fqm8%abB?>[[#3Y0MFTF#A^py1T=sX#r<G'3sZPMoHK<O-xj)2&E(S]0aMrVup„U"e;LMrFVHg[LY9BuP'#I)ZJ13f/-'r<HIJHWSlr#D=36T_t%L%i\soh]n)tWkz.#„U"h;$6POVhNt2X/^(\8xq\#6KJI8rJtV?.kKneJT2R1_NL):P2N<(?HYHA>k9?ewb„U"Z&F2pGL/WZc/=pL/qJdrXkYd<l2n.D$RFSR1BXd#ptBM9Yr*,UukRZd7*>Bag?%„U"fSCo]nuNm2$ekrJcA6:dNM.lN?_.QQ0pegG6B8)9\aNU]?w$H]/^B#-msL:+xBW„U"NpD_4R%ukI(IP+WA669HbYo&B8-[1/*>nfa/P*'cfA+z540cmTBT<^6u6cMZ$-2„U"dDGEQwO-?#A&v^N*3a\$KOSLvDXAFmL^3'Ao6?eFOw%fkQG0^3t7pPRJw_l*Luj„U"FPLR&npPmTgZnY):xD<J/,>Quhm#RA/4nropCI=3S^pCq4Tx'7BuwPA\K[3ggTD„U"m2<.cE#6+<2);88WEtCB#[YVfGA0csVg%Cfag5-H3N&W;47kgVWDO5OogtWF:G#„U"85ieGh?e:rczBgaNk-;DspF)415=R%o>p(T\j\/eEWRbhKm6Mdl89PaF;*FNLsq„U"WB,hR$Alb_986XUD,lE&Knb.0]^*;uIg:(QJeAiyjhzoCZ/VkKnMGa$fRVv<rLh„U"aT$nt$gxF._oG-:&XOEFi,A4QR;.^s3HEReg.yt+SCL=n#cUADb/ZCw[.V3O0E6„U";]WNi\ywnp.0.whUzpg*qB^A?/pvtA29;Z4)SdGI^p53OP3fDr<O:G<qLrJKTqL„U"^xc7?>$9RA2c=4r):,0P%*(:CP=K^6yJ79gQg+]^g\phHO(s1NX[Y]QhCId7052„U"HEuo6:,4jV<c4rV2Qn_/(wm2bRB5?FMe*,uHW::lBux2-omI2]+40o)W/&w]Yd6„U"c09OYenQ*i==cwA3r0'P*R[CS0J>,]5b7M+2gcmoaBP_jdkeF#I8)aZq.(5ER:#„U"PY9JHQ#l^k8$/,F,L8O3\_R*;S[OuMJUi+khl7Dx9Cop0^35_Mq;ddFva7IE3,\„U"*.a__I3TC+N+:m2%7nV1,6I=vPP%:ccM>M4UD[1*JM9[/N,ai#lZgw02;y.x?f?„U"BX7MQSK->/=*QKQEfa*LU,giYD#K&N9qERMnRH7.fe(<yvao3lRlo%v&kGRcc'L„U"u>P9Uuah/[0NP^hNQULgEdppRwPcdeb$u%_jqb4\,US+,=0W#%<G6\32RSnn,0V„U"E3m(%c_GxB^B$ul)_pfW_f=ar1*AU?$T0,NE3f?4u#[WPT'\^j)RS1JcYv+9$8V„U"m4*YSAllNCbPzW94MI8>6nUJH3%jJ6pzyBMPY5I((PE$RJJUW'YW2jv1gt^h8E1„U"^aQl$R%B<VB%#)JK4D2b'nEDQg?o?Mpzv]8E$gN9W*$o%_i6hx\pvHtEGY,rkRS„U"4a'Ca5eTvy1#Of2PHGvb.(nO4&>8Mf=vR^5XvmbHd7I1(lA+jIyVSewdkQSc3UF„U"2nMK*L_K:Spd$H.wYLa)hv]JML-*H0(g\h=K?0wtfHhrcGDoJp[0Sg]\jzk'm5b„U"=FV;9Q,E9v8h,Tfvmt%sXd%90URYGOzVWB%LQr/WI#gh:sFZpaLf()Ja#[%Ky/Y„U"+2QL]nO)]\Fu%HTBx2._AU;f35s+cUt]qrs9aN=$.1\Ayo>2FNeg_=tnZ:td=w)„END SUB„SUB V3„U"\$r8C;CmMVh:=43_uqIfe3x^a03t7Ol1b9^ANq<AGGAE#l)O.P^2jcMq*41GJ;?„U"eX$4B/_>L8GmZmFio%<C?E#6Ls7h_MIluwkvhXd]R*o<O_T^m8:*pD5;4:;T_A;„U"LZ[:rLq3.VtGPva[ruCq7TWYTJ9VH-):WJbH-gr*#C<ipXXCi;;Qg>#uYl&)k[V„U"2?'iI*i[Df)7<NKV5Z-*cQA+Zofn<ujMqXz%e'v1PQ'9Rw,qW-:7'T,9\hFJPGw„U":vm$f5OZaSG>F-Nps>Sou:d?[['-eu[s>P2HQ'E0Af&b#uWVL<S8<Cq8/XuLpXa„U"SM9G8BBRZXg9WM8s^vigHf>dXuP'f(nKP,JekqN4R^bxG6rw26(1f8hgr4zaXl<„U":,aNT8%.?6v5IlrYfRAlGp[z4-lSU,t^_Mh8t7^y[[e,-OY;J5bzQBF)vn71'<e„U"lz7qeU8AP1t1F'a,DoeZ<mNG1+l5tRHf[\\lsx?5Rb3WE1kP/p/:]mh_1*4kTLz„U"0EiAWNDHQT??ZN4TqH%'MVijEve5Cp.eN=.uJHVGeWQp#H-oM))A/_cmAR#wqP6„U"(-QHTf=]sKKTvUBJ8roa\gFdN%]?:lb(\cGr>g)G1/'gUrj,n>An=gmS]s-^a$\„U"a3$H=ZHuJX6#\fXK[V+d>_FOor#GIx.MF]wKRj7XVu_:((g8S.GHAkLf19][Muu„U"=$'kaZ1FpBSCP0NlO<TANZM.3ml>.W7KX(q^f$\1[tW^g_s.Y7ecmbCL\$x1\]+„U"fE=dl_RNu%dup(%)9%%[%-%BH6bE#ZQNCg[(%%4%4%%-%%%%x%zgxS[gfxFh&:>„U"S7m9vaOmuVj[OFTK$k=j=\q)A>+/:M*MDFzMO=epE'iPC$=Jvn$D2;YEG;;HdeE„U"Iq2VmJHL/l$E3>JCvm%CmU>iC2SIl*c''807iBC=,tYYT<W7^'.On.TRMOBTcVf„U"7G$3>1M&2=#bMbxgdH_Q'r1xDr)6q3CjKh44_C7Q?XDxo*iDInSL9dwJ]kYTt1Z„U"qe]v;htO_2U>cQi2t=Le0]TS=LH%#F3mjF)L<().L5Ou[P]FN1Cphc7OfL<gbfb„U"^RM+Bf+cRm>_77)2+AkF.u56b^m]ESS7CQf*Bo:EMB'U=jaOMchSZ*q8rBn+eg:„U"04%X=^XR^ZllmH0$W<Vi$+Ye<0'e4U8s;>>to&d=>7C[N$EQF.+N]OPX,LOXs3>„U"6;+V;:Qp+Y8UBl#FoZmPS3NC7C%:^?6Uu'o-[p8*)<%\9.%<9;d0)DwB%DF#HNO„U"Rk-)\'$9exOqZ8V+?-7%X$MYBn&%I4D?q_uN\l=H%HiIuh297)cjsDXX-Zakc1N„U"wRr&dCL^<eJ1unN':nm\R(i>Mn4>v;>V1uI&(8gDjba$cyqT_%UOKcmrq&/-'2S„U"T#^P2(EyU2%o).jR2U^7aHNQG&d-,;y54hqD2?X;0Pf8(T%W.D4_a)Gu>oyj>f]„U"dg=+T8^rfX+FwOMB;(5bVV4\/8Io^32-%%rv?b/N75r:ZWH,ss\FDE<-0-$h;=1„U"T)'m86'wHDjY?JL4';9XZ\lXg0?DU*o,3E1ps4/e5#wf%YB;ttQ]Z_%2,.E,K<q„U">d#&yXX#ebMDc2XgZ\*3n\w7b?23G\UT?3)P45W]16*fphsEV%XC(s.QFbNqUf#„U"xjlRvNSH3xnZ4=7d(u8/k:>c<(/a5r6,d<a-%3>YJvLT4)lqz>^r\%#gtoE[-+*„U"T_1\B'xR6j1X1BodVE+F5#uW#Y?OcOUFiYNMsxdZ5Gbx\hne_FtE+TYMC$JUXvI„U"hhSK^tV=rd=grlr4oYZ;gAD;FT^_>wQ71+hVZ5J9<s]5$dLTQCi.L.zxRFvNA$2„U"9(jlg9.IHa?L^#K.d)Zhqv>1$<G1gQ&sIkC:.Y%p/r<SXqn=SY'ldLh;VHQ+7%5„U"B,JJg3\Jt4$.5c(hvZ3rLF)fIGfT0EZJ:uwH5s1't5J_;4usJADL0AOcd1Ms)KW„U")RaFIdm4TDNu%p()9%%%%-g%V*$pE^Zq-TF&%(%1(%%%-%%%%xzg%xSugjz&aF&„U":8f=W?nR^Ju+</[(jpR%;Y6.R)oS-[iFr,*.7zmK.*pTkagt-:2t]=KoHPShOfQ„U"x7k65.JihQ%gtaN9i\UOmfIh=\i4b<UtkflGZeGtJ2nF6;<_o=U=THL%[EVnBr6„U")F\Sns*\*7.?6C+(ahfAQiT.ya$gUrsTq9$w439=N?yd<o/A]hhFLJg-,8B<Bh7„U"IEu#S=W);_C$BA:n+D%3k<TD#;D<P;eAM+4P9rSUIZoQ9p]p.hV?+cFVz%F9j7&„U"UHTrmF45.]mp<)nj%IrEQ(Vw9&u5yq>2+gd1cI2\\;b4P\Pt.'*If/\zDcIs;_i„U"=J8+Ni5t_b-B;)=Mg9$]3F1DQ96W.[tf&g,Q\&7Fm\VmD1nA.)#TY$e3l[loWhk„U"vrZt6hjvslO8:7Pt[LdHGKnrTu^AznafpTMo<7_L#DBa;)NflX3gbq>63v5G1]6„U"+cW28&5_k4V;'o;q?GXzlP>B,$U4IhXb\aaS:6Uxmkz;lAMqA$n[u8Ro-xem6L*„U"rleRnd'_DvT.Fnp]XO8b&It9y[Y_iL]i7AB9??aEUj?<B^P-VorwgheWG,ug[*/„U"#r,\8up%&'9%%9%%%[-%n6KbE\g:D/K;d%%0W%%%-%%%%%%%%%&%%E%%%%%%%%%„U"rfsi%Sfxr%up&'%9%9%%%%-%:A6$E%?GlB&r)%%%H0%%%-%%%%%%%%%%%E%7%%q„U";%%%rf%siSt%goup%&'9%%9%%%d-%A60bEI&56Q^(7%%h/%%%.%%%%%%%%%&%%E„U"%%%':#%%%rfsi%USgf%xup&%'9%9%%%%-g%E*$sE>Rd%UD&%+%Y(%%%.%%%%%%%„U"%%&%E#%%%F%D%%r%fsiU%Snsh%up&'%9%9%%%%-%>U6bE4]5T#&_(%%'d/%%%.%„U"%%%%%%%%&%E%7%%6E%%%rf%siVS%gfxu%p&'9%%9%%%%-%',+$EZ*pL%M[&%%S%„U"(%%.%%%%%%%%%&%%E%%(%CI%%%rfs%iVSn%shup%&'9%%9%%%d-%^6BbE<V6%(_„U"(7%%f/%%%.%%%%%%%%%&%%E%%%'<J%%%rfsi%WSgf%xup&%'9%9%%%%-j%p+$+E„U"8mj'pN&%+%Q(%%%.%%%%%%%%%&%E#%%%I%N%%r%fsiW%Snsh%up&'%9%9%%%%-%„U">f6bEY)Tf.&_(%%'d/%%%.%%%%%%%%%&%E%7%%CO%%%rf%siXS%gfxu%p&'9%%9„U"%%#%-%#b,$Er(^s]N[&%%S%(%%.%%%%%%%%%&%%E%%(%PS%%%rfs%iXSn%shup%„U"&'9%%9%%%d-%s6BbE:K1OP_(7%%d/%%%.%%%%%%%%%&%%E%%%'JT%%%rfsi%YSg„U"f%xup&%'9%9%%%%-j%L,$gEDKu%\N&%+%S(%%%.%%%%%%%%%&%E#%%%W%X%%r%f„U"siY%Snsh%up&'%9%9%%%%-%?&6bEoiyrl&$(%%'f/%%%.%%%%%%%%%&%E%7%%QY„U"%%%rf%siZS%gfxu%p&'9%%9%%%%-%tG-$Ey%h9YO[&%%S%(%%.%%%%%%%%%&%%E„U"%%(%_]%%%rfs%iZSn%shup%&'9%%9%%%I-%E*f$Em\5zKl+.%%%4%%%/%%%%%%%„U"%%%%%E%%%'Z^%%%rfsi%jqSu%gqup%&'9%%9%%%m-%s79aEFZ/1m&57%%AK%%%/„U"%%%%%%%%%&%%E%%%&ue%%%wjfi%rjSV%xyup%&'9%%9%%%m-%B6fbE#Q6NCg(7%„U"%44%%%-%%%%%%%%%&%%E%%%%Jv%%%xzgx%Sgfx%up&'%9%9%%%%-%;V*$Et^ZqT„U"'F&%%&1(%%%-%%%%%%%%%%%E%7%%\y%%%xz%gxSu%gzup%*+%%%%%7%77%U(R%%„U"O%%%%%%„END SUB„V2„V3„CLOSE:IF S=234AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Jonathan Leger                 FAST MEMCOPY ROUTINE           leger@mail.dtx.net             07-11-96 (10:14)       QB, QBasic, PDS        204  10399    MEM.BAS     '***************** MEM.BAS **************************************************„'*** These routines were written by Jonathan Leger:                       ***„'***                                                                      ***„'***                    leger@mail.dtx.net                                ***„'***                    http://www.dtx.net/~leger/                        ***„'***                                                                      ***„'***    PLEASE write to me with your questions.  I would appreciate any   ***„'*** feedback or machine language ideas for the expansion of Qbasic.      ***„'*** What can other compilers do that Qbasic can't?  What can PowerBASIC  ***„'*** or QuickBASIC do that Qbasic can't?  Maybe we can make it work using ***„'*** Machine Language routines that will blow away the other compilers    ***„'*** in speed... lemme know!  Write to me at the above e-mail address.    ***„'*** If you'd like to know how the ML routines work, write me and I'll    ***„'*** give you a step-by-step explanation.                                 ***„'****************************************************************************„„DEFINT A-Z„„DECLARE SUB MemCopy (fromseg%, fromoffset%, toseg%, tooffset%, bytes%)„DECLARE SUB FillChar (segment%, offset%, value%, bytes%)„„'$STATIC    '*** "REM $STATIC" keeps our buffer from moving around in memory„'           '*** for more info, see the manual or the HELP screen.„„'*** Dim a 64,000 byte buffer to hold the screen image (an integer is„'*** 2 bytes, so 32000 * 2 = 64000, the size of a SCREEN 13 image).„DIM buffer(1 TO 32000) AS INTEGER„'$DYNAMIC„„'*** Go to screen 13.„SCREEN 13„„'*** Clear the screen using color 200 (sorta bluish-purple)„FillChar &HA000, 0, 200, &HFA00„„'*** Draw some circles on the screen.„FOR x = 1 TO 100„   CIRCLE (159, 99), x, x„NEXT x„„'*** Copy the image (which is 64,000 (FA00) bytes and starts at memcoy„'*** locat A000) and dump its contents into buffer().„MemCopy &HA000, 0, VARSEG(buffer(1)), VARPTR(buffer(1)), &HFA00„„LOCATE 7, 7: PRINT "This image has been dumped"„LOCATE 8, 5: PRINT "Into a 64,000 byte buffer() array."„LOCATE 9, 8: PRINT "Press a key to reload it."„„WHILE INKEY$ = "": WEND„„'*** Clear the screen using color 150 (sorta deep blue)„FillChar &HA000, 0, 150, &HFA00„„LOCATE 2, 1„PRINT "I'm putting this here to prove that I"„PRINT "actually cleared the screen. ;)  It"„PRINT "Also demonstrates the speed of the"„PRINT "FillChar() routine which was used to"„PRINT "clear the screen in this spiffy"„PRINT "color."„PRINT : PRINT "Press another key to reload the image."„„WHILE INKEY$ = "": WEND„„'*** Dump the contents of the buffer back onto the screen.„MemCopy VARSEG(buffer(1)), VARPTR(buffer(1)), &HA000, 0, &HFA00„„LOCATE 1, 2: PRINT "Tada! So fast you don't believe it. ;)"„„WHILE INKEY$ = "": WEND„SCREEN 0: WIDTH 80„„REM $STATIC„'*****************************************************„'***                 FillChar()                    ***„'*****************************************************„'***  FillChar() puts whatever is in value% (which ***„'***  should be a number from 0-255) into memory   ***„'***  starting at location segment:offset, ending  ***„'***  at location segment:offset+bytes%.  An good  ***„'***  example of its use would be for clearing the ***„'***  screen with a different background color in  ***„'***  a graphics screen (which is pitifully slow   ***„'***  usint PSET).  To do this for SCREEN 13, for  ***„'***  example:                                     ***„'***                                               ***„'***  FillChar &HA000, 0, 15, &HFA00               ***„'***             ^     ^   ^    ^                  ***„'***             |     |   |    |                  ***„'***  Screen 13--+     |   |    |                  ***„'***                   |   |    |                  ***„'*** Start with first  |   |    |                  ***„'*** pixel.------------+   |    |                  ***„'***                       |    |                  ***„'*** Fill with character/  |    |                  ***„'*** color 15--------------+    |                  ***„'***                            |                  ***„'*** Do so 64,000 times---------+                  ***„'***                                               ***„'*** This will "clear" SCREEN 13 with the color 15 ***„'*** (bright white), and it does so _faster_ than  ***„'*** the CLS routine clears SCREEN 13 in black.    ***„'***                                               ***„'*** Notice that the 64,000 is in HEX (FA00).  This***„'*** is the same as with MemCopy(), where a value  ***„'*** greater than 32,767 has to be put into hex.   ***„'*** Since BASIC integers are signed (can be plus  ***„'*** or minues 32,767), BASIC does not let you use ***„'*** 65,534 (64k) in an integer, and there is no   ***„'*** way to declare a variable as an unsigned int- ***„'*** eger.  Machine Language, however, does not    ***„'*** recognize the plus or minus of a number unless***„'*** you tell it to, so by using the HEX value, we ***„'*** can trick BASIC into passing a number larger  ***„'*** than 32767 to the Machine Language routine,   ***„'*** which will treat &HFA00 as 64000 (even though ***„'*** if you do a PRINT &HFA00 it returns -1536).   ***„'*****************************************************„SUB FillChar (segment%, offset%, value%, bytes%)„„asm$ = ""„asm$ = asm$ + CHR$(85)                             'PUSH BP„asm$ = asm$ + CHR$(137) + CHR$(229)                'MOV BP,SP„asm$ = asm$ + CHR$(139) + CHR$(78) + CHR$(6)       'MOV CX,[BP+06]„asm$ = asm$ + CHR$(139) + CHR$(86) + CHR$(8)       'MOV DX,[BP+08]„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(12)      'MOV AX,[BP+0C]„asm$ = asm$ + CHR$(30)                             'PUSH DS„asm$ = asm$ + CHR$(142) + CHR$(216)                'MOV DS,AX       „asm$ = asm$ + CHR$(139) + CHR$(94) + CHR$(10)      'MOV BX,[BP+0A]  „asm$ = asm$ + CHR$(136) + CHR$(23)                 'MOV [BX],DL <------+„asm$ = asm$ + CHR$(67)                             'INC BX             |„asm$ = asm$ + CHR$(226) + CHR$(251)                'LOOP 0112   -------+„asm$ = asm$ + CHR$(31)                             'POP DS„asm$ = asm$ + CHR$(93)                             'POP BP„asm$ = asm$ + CHR$(203)                            'RETF„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL segment%, BYVAL offset%, BYVAL value%, BYVAL bytes%, SADD(asm$))„DEF SEG„„END SUB„„'*************************************************************„'***                       MemCopy()                       ***„'*************************************************************„'*** This routine will copy the number of bytes specified  ***„'*** in the Bytes% variable from the segment:offset in     ***„'*** fromseg%:fromoffset% to the segment:offset given in   ***„'*** toseg%:tooffset%.  To copy more than 32767 bytes,     ***„'*** put the HEX value in Bytes% instead of the decimal    ***„'*** value.  For example, in HEX, 64000 is FA00 (prepended ***„'*** by an &H in BASIC, to make it &HFA00), so if you were ***„'*** to copy a 64,000 byte screen 13 image, you would do:  ***„'***********************************************************************„'*** MemCopy &HA000, 0, VARSEG(buffer(0)), VARPTR(buffer(0)), &HFA00 ***„'***           ^     ^        ^                   ^             ^    ***„'***           |     |        |                   |             |    ***„'*** Screen 13-+     |        |                   |             |    ***„'***                 |        |                   |             |    ***„'*** Start copying at+        |                   |             |    ***„'*** the first pixel-+        |                   |             |    ***„'***                          |                   |             |    ***„'*** Segment of our 64k buffer+                   |             |    ***„'***                                              |             |    ***„'*** Offset of our 64k buffer --------------------+             |    ***„'***                                                            |    ***„'*** Copy 64,000 bytes (HEX = FA00, BASIC = &HFA00) ------------+    ***„'***********************************************************************„'*** For a full explanation of why we must use HEX instead of decimal***„'*** for values greater than 32,767, see the remarks in the FillChar ***„'*** routine.                                                        ***„'***********************************************************************„'    This routine was written by Jonathan Leger, and if you use it,„'    please let me know.  I'd like to know if this code is getting„'    any practical use.  I've wanted to emulate PowerBASIC's POKE$„'    and PEEK$ for a _long_ time (also Pascal's Mem[] routine), and„'    this is my first stab at it, which worked out very well and is„'    very fast since it's in pure machine language (it was written„'    in DOS' Debug! =).„'***********************************************************************„SUB MemCopy (fromseg%, fromoffset%, toseg%, tooffset%, bytes%)„„asm$ = ""„asm$ = asm$ + CHR$(85)                             'PUSH BP„asm$ = asm$ + CHR$(137) + CHR$(229)                'MOV BP,SP„asm$ = asm$ + CHR$(30)                             'PUSH DS„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(10)      'MOV AX,[BP+0A]„asm$ = asm$ + CHR$(142) + CHR$(192)                'MOV ES,AX„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(14)      'MOV AX,[BP+0E]„asm$ = asm$ + CHR$(142) + CHR$(216)                'MOV DS,AX„asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(8)      'MOV SI,[BP+08]„asm$ = asm$ + CHR$(139) + CHR$(126) + CHR$(12)     'MOV DI,[BP+0C]„asm$ = asm$ + CHR$(139) + CHR$(78) + CHR$(6)       'MOV CX,[BP+06]„asm$ = asm$ + CHR$(243)                            'REPZ„asm$ = asm$ + CHR$(164)                            'MOVSB„asm$ = asm$ + CHR$(31)                             'POP DS„asm$ = asm$ + CHR$(93)                             'POP BP„asm$ = asm$ + CHR$(203)                            'RETF„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL fromseg%, BYVAL fromoffset%, BYVAL toseg%, BYVAL tooffset%, BYVAL bytes%, SADD(asm$))„DEF SEG„„END SUB„Tony Lieuallen                 GROWING FIRE                   marvin@mars.superlink.net      07-05-96 (16:18)       QB, QBasic, PDS        86   2053     FIRE.BAS    'Fire!!  By Tony Lieuallen.  E-mail: marvin@mars.superlink.net„'This is a demo I made (Evolved slowly from the file in the PC Games„'Programmers Encyclopedia) in my free time.  In the rem's is what you„'would have to do to make it run in PB (originally written for QuickBasic).„'I like values of XMax=200 YMax=100 X and YStart=50.„„DEFINT A-Z„„SCREEN 13„' in PB make this:„'      (or is that ah?)„'! mov ax, &H13„'! int &H10„„RANDOMIZE TIMER„IF COMMAND$ <> "" THEN„   T$ = COMMAND$„   XMax = VAL(LEFT$(T$, INSTR(T$, " ")))„   T$ = RIGHT$(T$, LEN(T$) - INSTR(T$, " "))„  „   YMax = VAL(LEFT$(T$, INSTR(T$, " ")))„   T$ = RIGHT$(T$, LEN(T$) - INSTR(T$, " "))„  „   XStart = VAL(LEFT$(T$, INSTR(T$, " ")))„   T$ = RIGHT$(T$, LEN(T$) - INSTR(T$, " "))„  „   YStart = VAL(T$)„ELSE„   INPUT "  XMax=", XMax„   INPUT "  YMax=", YMax„   INPUT "XStart=", XStart„   INPUT "YStart=", YStart„END IF„CLS„„CMax = 150„Red = 0„Grn = 0„Blu = 0„CC = 1„„FOR X = 1 TO CMax„   SELECT CASE CC„      CASE 1„         Red = Red + 1„         IF Red = 60 THEN CC = 2„      CASE 2„         Grn = Grn + 1„         IF Grn = 60 THEN CC = 3„      CASE 3„         Grn = Grn - 2„         Red = Red - 1„   END SELECT„   OUT &H3C8, X„   OUT &H3C9, Red„   OUT &H3C9, Grn„   OUT &H3C9, Blu„NEXT„„DEF SEG = &HA000„DO„   IF INKEY$ <> "" THEN„      COLOR 180„      SYSTEM„   END IF„   FOR Count = 1 TO XMax \ 1.5„      Y& = (YMax - 1 + YStart)„      'In PB make all the "poke"s "pokeb"s„      POKE (320 * Y& + (INT(RND * XMax) + XStart)), INT(RND * CMax)„      POKE (320 * (Y& - 1) + (INT(RND * XMax) + XStart)), INT(RND * CMax)„   NEXT„„   P = 0„   FOR Y1 = 2 TO YMax - 1„      FOR X1 = 2 TO XMax - 1„         X& = (X1 + XStart)„         Y& = (Y1 + YStart)„         P = PEEK(320 * Y& + (X& + 1))„         P = P + PEEK(320 * Y& + (X& - 1))„         P = P + PEEK(320 * (Y& + 1) + X&)„         P = P + PEEK(320 * (Y& - 1) + X&)„         P = P \ 4„         POKE (320 * (Y& - 1) + X&), P„      NEXT„   NEXT„LOOP„Andy J. Golden                 CHAOS                          YHBV44B@prodigy.com            07-12-96 (22:42)       QB, QBasic, PDS, PB    26   565      CHAOS.BAS   1  ' CHAOS.BAS„10 KEY OFF: CLS„20 SCREEN 2„30 DEFSNG A-Z„40 COLUMNS = 640„50 ROWS = 200„60 START = 1„70 FINISH = 3.999„80 TOP = 0„90 BOTTOM = 1„100 MAXREPS = 10„110 HEIGHT = BOTTOM - TOP„120 VPCT = 1 / HEIGHT„130 FOR R = START TO FINISH STEP ((FINISH - START) / COLUMNS)„140 X = .1„150 FOR I = 1 TO 100„160 X = R * (X - X * X)„170 NEXT I„180 FOR I = 1 TO 30„190 X = R * (X - X * X)„200 XPOS = (R - START) * COLUMNS / (FINISH - START)„210 YPOS = ROWS - (X - TOP) * ROWS * VPCT„220 PSET (XPOS, YPOS)„230 NEXT I„240 NEXT R„250 A$ = INPUT$(1)„Andy J. Golden                 FRACTAL FERN                   YHBV44B@prodigy.com            07-12-96 (22:42)       QB, QBasic, PDS, PB    26   566      IFSFERN.BAS ' IFSFERN.BAS„SCREEN 2„CLS„VIEW (0, 0)-(639, 199)„WINDOW (-4, 0)-(6, 10)„RANDOMIZE TIMER„X = 0„Y = 0„WHILE INKEY$ = ""„R = RND„IF (R <= .01) THEN„    A = 0: B = 0: C = 0: D = .16: E = 0: F = 0„ELSEIF R > .01 AND R <= .86 THEN„    A = .85: B = .04: C = -.04: D = .85: E = 0: F = 1.6„ELSEIF R > .86 AND R <= .93 THEN„    A = .2: B = -.26: C = .23: D = .22: E = 0: F = 1.6„ELSE„    A = -.15: B = .28: C = .26: D = .24: E = 0: F = .44„END IF„NEWX = (A * X) + (B * Y) + E„NEWY = (C * X) + (D * Y) + F„X = NEWX„Y = NEWY„PSET (X, Y)„WEND„SCREEN 0„Chad Beck                      PUT W/O ERASING BACKGROUND     FidoNet QUIK_BAS Echo          06-27-96 (00:00)       QB, QBasic, PDS        71   3091     PUT.BAS     ' [= As two common people in New York would say, let's start rambling =]„„'> Wait a minute. Is the above an example of BLOADing a image? I think I have„'> the idea of how to get the sprite to the screen.„„'That's an idea. Draw a bunch of sprites, use PICEM to display it and then„'code to save it in BLOAD format as maybe something like SPRITE.BLD. Then„'the program can load it in another page not displayed, and GET the sprites„'into buffers while displaying a "please wait" message on the viewable page?„'Just ideas I was thinking up while reading this.„„'> Now for the big question "Can you tilt the picture after drawing it?".„„'Well, if you GET the dartboard into a buffer somehow (assuming you can create„'one large enough) I guess you can PUT it differently? Or what about this: You„'scan the visable page for each pixel, and replot it slightly differently to„'an angle on a non-visiable page, then flip to that page and its tilted! Or„'do this on two non-visiable page while the "please wait" message is on the„'visiable page? We may have to use the 320 x 200 mode, as don't that have the„'most pages to work with? I am not sure on the concept of this virtual page„'thing, but it may be a key to this and other neat display tricks.„„'As for animating, I heard of page-flipping techniques. Also you can do some„'neat things with the PUT statement:„„'From: Chad Beck„'Subj: PUTs„„' > I think it was CHAD BECK who earlier posted how to PUT a bitmap to„' > the screen using XOR and AND to not distort the background.  If you„' > could be so kind, could you repost it!?  Thanks...„„'     Actually it uses AND & OR.„'     The ANDed image (which is PUT first) should be an inverse of„'original, whereby color zero is used for the solid areas and the highest„'color in the palette (mode dependant) is used for the transparent areas.„'     Here's the demo from an old mail pack.  The pair of images used to„'draw each sprite are left in the upper left-hand corner of the screen for„'your inspection.„„'-----------------------------------------------------------------------„DEFINT A-Z„„SCREEN 13„PALETTE 255, 1024 * 15            'Change color 255 so it's visible„DIM Image(0 TO 33), Scr(0 TO 33)„„InColr = 4                        'The inner color of the circle„OutColr = 3                       'The color of its outer ring„CIRCLE (5, 5), 4, OutColr         'Draw original image--make transparent„PAINT (5, 5), InColr, OutColr     ' areas Color 0„GET (1, 2)-(9, 8), Image„„LINE (16, 2)-(24, 8), 255, BF     'Draw its compliment--Color 0„CIRCLE (20, 5), 4, 0              ' for solid areas, Color 255 (or 15 in„PAINT (20, 5), 0, 0               ' EGA modes) for transparent areas„GET (16, 2)-(24, 8), Scr„„FOR Repeat = 1 TO 9               'Draw a background pattern„  LINE (0, 20 * Repeat)-(320, 200), Repeat + 20, BF„NEXT„„FOR Repeat = 1 TO 100             'Draw the sprites„  X = RND * 310„  Y = RND * 190„  PUT (X, Y), Scr, AND„  PUT (X, Y), Image, OR„NEXT„„DO: LOOP UNTIL LEN(INKEY$)        'Wait before quitting„„Kurt Kuzba                     HAPPY TRAILZ                   FidoNet QUIK_BAS Echo          02-10-96 (00:00)       QB, QBasic, PDS        72   2907     HPTRAILZ.BAS'_|_|_|   HPTRAILZ.BAS„'_|_|_|   Happy Trailz. This program demonstrates one method„'_|_|_|   of creating a series of self-overwriting lines to„'_|_|_|   keep the CPU happy when there is nothing else to do.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (2/10/96)„DECLARE SUB HappyTrails (l%)„TYPE LNZ„   x1 AS INTEGER: x2 AS INTEGER: y1 AS INTEGER: y2 AS INTEGER„END TYPE„l$ = COMMAND$   '_|_|_|   REM this out if using QBasic„IF VAL(l$) < 1 THEN l$ = "4"„l% = VAL(l$)„IF l% > 20 THEN l% = 20„IF l% < 2 THEN l% = 2„HappyTrails l%„SUB HappyTrails (l%)„   DIM la(1 TO l%, 11) AS LNZ, C(6) AS INTEGER, K(6) AS INTEGER„   DIM dx1(1 TO l%) AS INTEGER, dx2(1 TO l%) AS INTEGER„   DIM dy1(1 TO l%) AS INTEGER, dy2(1 TO l%) AS INTEGER„   C(0) = 15: C(1) = 11: C(2) = 3: C(3) = 9: C(4) = 1: C(5) = 0„   K(0) = 14: K(1) = 13: K(2) = 12: K(3) = 4: K(4) = 5: K(5) = 0„   RANDOMIZE (TIMER + INP(64))„   FOR ln% = 1 TO l%„      dx1(ln%) = 9: dx2(ln%) = 9: dy1(ln%) = 9: dy2(ln%) = 9„      FOR fade% = 0 TO 10„         la(ln%, fade%).x1 = 320 + fade% * 2„         la(ln%, fade%).y1 = 240 + fade% * 2„         la(ln%, fade%).x2 = 320 - fade% * 2„         la(ln%, fade%).y2 = 240 - fade% * 2„      NEXT„   NEXT: SCREEN 12„   Ky$ = INKEY$„   WHILE Ky$ = ""„      FOR ln% = 1 TO l%„      WHILE (INP(&H3DA) AND 8) = 0: WEND„      WHILE (INP(&H3DA) AND 8) <> 0: WEND„      Ky$ = INKEY$: IF Ky$ <> "" THEN EXIT FOR„      FOR fade% = 10 TO 1 STEP -1„         x1% = la(ln%, fade%).x1: y1% = la(ln%, fade%).y1„         x2% = la(ln%, fade%).x2: y2% = la(ln%, fade%).y2„         la(ln%, fade%).x1 = la(ln%, fade% - 1).x1„         la(ln%, fade%).y1 = la(ln%, fade% - 1).y1„         la(ln%, fade%).x2 = la(ln%, fade% - 1).x2„         la(ln%, fade%).y2 = la(ln%, fade% - 1).y2„         IF (ln% AND 1) = 0 THEN„            LINE (x1%, y1%)-(x2%, y2%), C(fade% \ 2)„         ELSE„            LINE (x1%, y1%)-(x2%, y2%), K(fade% \ 2)„         END IF„      NEXT„      x1% = la(ln%, 0).x1 + dx1(ln%): y1% = la(ln%, 0).y1 + dy1(ln%)„      x2% = la(ln%, 0).x2 + dx2(ln%): y2% = la(ln%, 0).y2 + dy2(ln%)„      IF x1% > 639 THEN dx1(ln%) = -(RND * 7 + 9): x1% = 639„      IF x1% < 0 THEN dx1(ln%) = RND * 7 + 9: x1% = 0„      IF x2% > 639 THEN dx2(ln%) = -(RND * 7 + 9): x2% = 639„      IF x2% < 0 THEN dx2(ln%) = RND * 7 + 9: x2% = 0„      IF y1% > 479 THEN dy1(ln%) = -(RND * 7 + 9): y1% = 479„      IF y1% < 0 THEN dy1(ln%) = RND * 7 + 9: y1% = 0„      IF y2% > 479 THEN dy2(ln%) = -(RND * 7 + 9): y2% = 479„      IF y2% < 0 THEN dy2(ln%) = RND * 7 + 9: y2% = 0„      la(ln%, 0).x1 = x1%: la(ln%, 0).y1 = y1%„      la(ln%, 0).x2 = x2%: la(ln%, 0).y2 = y2%„      IF (ln% AND 1) = 0 THEN„         LINE (x1%, y1%)-(x2%, y2%), C(0)„      ELSE„         LINE (x1%, y1%)-(x2%, y2%), K(0)„      END IF„      NEXT„   WEND„   SCREEN 0„END SUB„'_|_|_|   end   HPTRAILZ.BAS„Kurt Kuzba                     ROTATING A BIG PALETTE SMOOTHLYFidoNet QUIK_BAS Echo          04-07-96 (00:00)       QB, QBasic, PDS        86   3329     BIGPALET.BAS'>   Can anyone tell me how to access the 256K colors that I'm„'>   supposed to have on my VGA graphics?  I would like to put„'>   some color cycling and the like into my graphics, yet I„'>   can't find a way to get beyond the basic 15 even in screen„'>   modes 11,12, etc.„'>.............................................................„'   In mode 12h, which is a 16 color mode, you will be able to„'only use 16 selected colors. You may choose which of the 256„'standard defined colors you will use, or even make your own, but„'you will still be limited to 16 colors of your choice.„„'_|_|_|   BIGPALET.BAS„'_|_|_|   This is a simple demonstration of a technique rotating„'_|_|_|   a big palette smoothly in graphics mode 13h.„'_|_|_|   No warrantees or guarantees are given or implied.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (4/7/96)„DECLARE SUB RotatePalette (t%)„DECLARE SUB PalPocket (save%)„DECLARE SUB MakePalette ()„'$DYNAMIC„DIM SHARED PAL(384) AS INTEGER: DIM SHARED RGB(16050) AS LONG„SCREEN 13: PalPocket 1: SOUND 999, 3: MakePalette„FOR t% = 200 TO 1 STEP -1„   CIRCLE (60 + t% \ 2, 50 + t% \ 4), t%, 201 - t%„   PAINT (60 + t% \ 2, 50 + t% \ 4), 201 - t%: NEXT: t% = 0„WHILE INKEY$ = ""„'   WHILE (INP(&H3DA) AND 8) = 0: WEND    ' Uncomment these lines„'   WHILE (INP(&H3DA) AND 8) <> 0: WEND   ' if compiling to .EXE„'   WHILE (INP(&H3DA) AND 8) = 0: WEND    ' They are for smooth„'   WHILE (INP(&H3DA) AND 8) <> 0: WEND   ' rotation if compiled„   RotatePalette t%: t% = (t% + 1) MOD 21400„WEND: PalPocket 0: SCREEN 0: WIDTH 80, 25: END„SUB MakePalette„   DEF SEG = VARSEG(RGB(0)): O& = VARPTR(RGB(0))„   r% = 0: g% = 0: b% = 0: rd% = 1: gd% = 1: bd% = 1„   FOR t& = 0 TO 21399„      p& = O& + t& * 3„      IF (r% < 64) AND (r% >= 0) THEN„         POKE p&, r%„      ELSE„         IF r% < 0 THEN POKE p&, 0„         IF r% > 63 THEN POKE p&, 63„      END IF„      IF (g% < 64) AND (g% >= 0) THEN„         POKE p& + 1, g%„      ELSE„         IF g% < 0 THEN POKE p& + 1, 0„         IF g% > 63 THEN POKE p& + 1, 63„      END IF„      IF (b% < 64) AND (b% >= 0) THEN„         POKE p& + 2, b%„      ELSE„         IF b% < 0 THEN POKE p& + 2, 0„         IF b% > 63 THEN POKE p& + 2, 63„      END IF„      IF r% = 70 THEN rd% = -1:  ELSE IF r% = -8 THEN rd% = 1„      IF g% = 73 THEN gd% = -1:  ELSE IF g% = -11 THEN gd% = 1„      IF b% = 76 THEN bd% = -1:  ELSE IF b% = -14 THEN bd% = 1„      r% = r% + rd%: g% = g% + gd%: b% = b% + bd%: NEXT„END SUB„SUB PalPocket (save%)„   DEF SEG = VARSEG(PAL(0)): O& = VARPTR(PAL(0))„   IF save% <> 0 THEN„      FOR t% = 0 TO 255„         OUT &H3C7, t%„         POKE O& + t% * 3 + 0, INP(&H3C9)„         POKE O& + t% * 3 + 1, INP(&H3C9)„         POKE O& + t% * 3 + 2, INP(&H3C9): NEXT„   ELSE„      FOR t% = 0 TO 255„         OUT &H3C8, t%„         OUT &H3C9, PEEK(O& + t% * 3 + 0)„         OUT &H3C9, PEEK(O& + t% * 3 + 1)„         OUT &H3C9, PEEK(O& + t% * 3 + 2): NEXT„   END IF„END SUB„SUB RotatePalette (t%)„   DEF SEG = VARSEG(RGB(0)): O& = VARPTR(RGB(0))„   FOR att% = 1 TO 255„      C& = O& + ((att% + t%) MOD 21400) * 3„      OUT &H3C8, att%„      OUT &H3C9, PEEK(C&)„      OUT &H3C9, PEEK(C& + 1)„      OUT &H3C9, PEEK(C& + 2): NEXT„END SUB„'_|_|_|   end   BIGPALET.BAS„Douglas Lusher                 320X240 MODEX WITH 3 PAGES     FidoNet QUIK_BAS Echo          07-20-96 (11:19)       QB, PDS                184  5828     320X240.BAS 'Greetings, everyone. Here is code to put a VGA card into 320x240 mode„'with 256 colors and 3 pages. This should be a good layout for high„'quality graphics and animation. It has a 4:3 aspect ratio, so the pixels„'are square, and it has 20% more pixels than SCREEN 13 and multiple„'pages. All with 256 colors. Please try it out and send me your„'comments and bug reports. Thanks.„„ DECLARE SUB XCLS (Page%)„ DECLARE SUB ShowPage (Page%)„ DECLARE SUB Set320x240mode ()„ DECLARE SUB XPRINT (X%, Y%, Text$, Culler%, Page%)„ DECLARE SUB PutPixel (X%, Y%, Culler%, Page%)„ DEFINT A-Z„ '$INCLUDE: 'QB.BI'„„ DIM BitMask%(7)„ FOR Bit% = 0 TO 7: BitMask%(Bit%) = 2 ^ Bit%: NEXT„ Test$ = "The quick brown fox jumps over lazy dogs"„ CALL XPRINT(0, 0, "", 0, 0)   'initialize the print routine„„ CALL Set320x240mode: SLEEP 1„ HMax% = 320: VMax% = 240: Pg% = 0„ FOR X% = 0 TO HMax% - 1„   CALL PutPixel(X%, 0, 2, Pg%)„   CALL PutPixel(X%, VMax% - 1, 2, Pg%)„ NEXT„ FOR Y% = 0 TO VMax% - 1„   CALL PutPixel(0, Y%, 2, P%)„   CALL PutPixel(HMax% - 1, Y%, 2, Pg%)„ NEXT„ CALL XPRINT(0, 0, "This is 320x240x256 mode, 3 pages", 15, P%)„ FOR Y% = 1 TO 14„   CALL XPRINT(0, Y% * 16, Test$, Y%, Pg%)„ NEXT„ BEEP: A$ = INPUT$(1)„ CALL XCLS(0)„ CALL XPRINT(0, 0, "This is page 0", 1, 0)„ CALL XPRINT(0, 64, "Press 0, 1, or 2 to see the pages", 1, 0)„ CALL XPRINT(0, 80, "Press ESC to exit", 1, 0)„ CALL XPRINT(0, 16, "This is page 1", 2, 1)„ CALL XPRINT(0, 64, "Press 0, 1, or 2 to see the pages", 2, 1)„ CALL XPRINT(0, 80, "Press ESC to exit", 2, 1)„ CALL XPRINT(0, 32, "This is page 2", 4, 2)„ CALL XPRINT(0, 64, "Press 0, 1, or 2 to see the pages", 4, 2)„ CALL XPRINT(0, 80, "Press ESC to exit", 4, 2)„ DO„ A$ = INPUT$(1)„ SELECT CASE A$„   CASE "0": CALL ShowPage(0)„   CASE "1": CALL ShowPage(1)„   CASE "2": CALL ShowPage(2)„   CASE CHR$(27): EXIT DO„   CASE ELSE: BEEP„ END SELECT„ LOOP„ SCREEN 13: SCREEN 0: WIDTH 80„ END„„ SUB GetPixel (X%, Y%, Culler%, Page%)„ SELECT CASE Page%„   CASE 0: VidSegment% = &HA000„   CASE 1: VidSegment% = &HA4F0„   CASE 2: VidSegment% = &HA9E0„   CASE ELSE: ERROR 5„ END SELECT„ OUT &H3CE, 4: OUT &H3CF, X% AND 3„ DEF SEG = VidSegment%„ Culler% = PEEK((Y% * 80) + (X% \ 4))„ END SUB„„ SUB PutPixel (X%, Y%, Culler%, Page%)„ SHARED BitMask%()„ SELECT CASE Page%„   CASE 0: VidSegment% = &HA000„   CASE 1: VidSegment% = &HA4F0„   CASE 2: VidSegment% = &HA9E0„   CASE ELSE: ERROR 5„ END SELECT„ OUT &H3C4, 2: OUT &H3C5, BitMask%(X% AND 3)„ DEF SEG = VidSegment%„ POKE (Y% * 80) + (X% \ 4), Culler%„ END SUB„„ SUB Set320x240mode„ 'begin with standard 320x200x256 mode„ SCREEN 13„ 'disable "chain4" mode„ OUT &H3C4, &H4: OUT &H3C5, &H6„ 'enable writes to all four planes„ OUT &H3C4, &H2: OUT &H3C5, &HF„ 'clear video memory„ CLS„ 'synchronous reset while switching clocks„ OUT &H3C4, 0: OUT &H3C5, &H1„ 'select 25 Mhz dot clock and 60 hz scanning rate„ OUT &H3C2, &HE3„ 'restart the sequencer„ OUT &H3C4, 0: OUT &H3C5, &H3„ 'to reprogram the CRT controller,„ 'remove write protect from the registers„ OUT &H3D4, &H11: OUT &H3D5, INP(&H3D5) AND &H7F„ OUT &H3D4, &H6: OUT &H3D5, &HD     'total vertical pixels„ OUT &H3D4, &H7: OUT &H3D5, &H3E    'overflow„ OUT &H3D4, &H9: OUT &H3D5, &H41    'turn off double double-scan„ OUT &H3D4, &H10: OUT &H3D5, &HEA   'vertical sync start„ OUT &H3D4, &H11: OUT &H3D5, &HAC   'vertical sync end, reprotect registers„ OUT &H3D4, &H12: OUT &H3D5, &HDF   'vertical pixels displayed„ OUT &H3D4, &H14: OUT &H3D5, 0      'turn off dword mode„ OUT &H3D4, &H15: OUT &H3D5, &HE7   'vertical blank start„ OUT &H3D4, &H16: OUT &H3D5, &H6    'vertical blank end„ OUT &H3D4, &H17: OUT &H3D5, &HE3   'turn on byte mode„ END SUB„„ SUB ShowPage (Page%)„ SELECT CASE Page%„   CASE 0: OUT &H3D4, &HC: OUT &H3D5, 0„   CASE 1: OUT &H3D4, &HC: OUT &H3D5, &H4F„   CASE 2: OUT &H3D4, &HC: OUT &H3D5, &H9E„   CASE ELSE: ERROR 5          'illegal function call„ END SELECT„ END SUB„„ SUB XCLS (Page%)„ SELECT CASE Page%„   CASE 0: VidSegment% = &HA000„   CASE 1: VidSegment% = &HA4F0„   CASE 2: VidSegment% = &HA9E0„   CASE ELSE: ERROR 5„ END SELECT„ OUT &H3C4, &H2: OUT &H3C5, &HF„ DEF SEG = VidSegment%„ FOR Address% = 0 TO 19199: POKE Address%, 0: NEXT„ END SUB„„ SUB XPRINT (X%, Y%, Text$, Culler%, Page%)„ STATIC HiNibble%(), LoNibble%()„ IF LEN(Text$) GOTO StartXPRINT„ REDIM HiNibble%(255, 15), LoNibble%(255, 15)„ REDIM BitMask%(15)„ BitMask%(0) = 0:  BitMask%(1) = 8:   BitMask%(2) = 4„ BitMask%(3) = 12: BitMask%(4) = 2:   BitMask%(5) = 10„ BitMask%(6) = 6:  BitMask%(7) = 14:  BitMask%(8) = 1„ BitMask%(9) = 9:  BitMask%(10) = 5:  BitMask%(11) = 13„ BitMask%(12) = 3: BitMask%(13) = 11: BitMask%(14) = 7„ BitMask%(15) = 15„ DIM Regs AS RegTypeX„ Regs.AX = &H1130„ Regs.BX = &H600„ CALL InterruptX(&H10, Regs, Regs)„ CharSegment% = Regs.ES: CharOffset% = Regs.BP„ DEF SEG = CharSegment%„ FOR Char% = 0 TO 255„   FOR Ln% = 0 TO 15„     BitPattern% = PEEK(CharOffset%)„     HiNibble%(Char%, Ln%) = BitMask%(BitPattern% \ 16)„     LoNibble%(Char%, Ln%) = BitMask%(BitPattern% AND 15)„     CharOffset% = CharOffset% + 1„   NEXT„ NEXT„ ERASE BitMask%„„ StartXPRINT:„ SELECT CASE Page%„   CASE 0: VidSegment% = &HA000„   CASE 1: VidSegment% = &HA4F0„   CASE 2: VidSegment% = &HA9E0„   CASE ELSE: ERROR 5„ END SELECT„ OUT &H3C4, 2„ DEF SEG = VidSegment%„ VidPtr% = (Y% * 80) + (X% \ 4)„ FOR Ptr% = 1 TO LEN(Text$)„   Char% = ASC(MID$(Text$, Ptr%, 1))„   VidOffset% = VidPtr%„   FOR Ln% = 0 TO 15„     OUT &H3C5, HiNibble%(Char%, Ln%)„     POKE VidOffset%, Culler%„     OUT &H3C5, LoNibble%(Char%, Ln%)„     POKE VidOffset% + 1, Culler%„     VidOffset% = VidOffset% + 80„   NEXT„   VidPtr% = VidPtr% + 2„ NEXT„ END SUB„Ben Lloyd                      PROG-DRAW 2.2                  foxeggs@newrock.com            08-03-96 (10:55)       QB, QBasic, PDS        114  7405     PROGDRAW.BAS' Remember to extract the .ZIP with option -D„' ie.  PKUNZIP -D PROGDRAW.ZIP C:\„„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"PROGDRAW.ZIP",4^6:Z&=5217:?STRING$(50,177);„U"%up()%9%%%.%%:0'wE%%%%%%%%%%%%%%%3%%%%uw%tliw(f&Ti.wf&T%up()%/%„U"%%I%%=%%(F%%%%%%%%%%%%%%%9%%%%uw%tliw(f&Ti.wf&i%fySu(i&up%()/%%„U"%%%%)=%(F%%%%%%%%%%%%%%%%9%%%%uwtl#iwf&%Tity#iwf&#Sui&%up()%9%%„U"%7-%;w9vE98&7IL%%%%O%%%%:%%%%uw%tliw(f&Tu%wtli.wf&S%gfyp$/YnB(T„U"]Nq7oQGq,%ITO'Fx%/R:9^vAv9JeN#OWA(boIT%<%up%()9%%%%-%&UI&F&Er]9„U"'d'%%%N*%%%9%%%%uwtl#iwf&%Tnsx%yfqq.Sy'yS4y:='[U5bL<XNgI#<idPIe„U"8(uA/JKJOgyy2z-[Xm&0#GoSsLe6Ph[x))y:7X/oEJt>W5Y^vr1I_*&fhmi0.,(„U"2SH'A%OeR\u(z<8/$)ka4Y6b#&fPRC.c;utbb]crc9de<ZI^i74\B2AnrL(]7P<„U"d<nqE['rRD)=0CqE]-K'^)ptCLei^C_N(9pqTgcZv3wWUoer1Ht1'dAI-K3&C2F„U"(M,$^L/P::;/1gbVV#\,n\jZ%U92ow$T;l/Q;L51vk%CaW8QThA;n-6ioK$qUeu„U"0=eB^Yw%xskosab=PTfZn-p&]INO4HiB-S,')tvIEjr%/6dIJ]1g<,A*PDWM/:a„U"W_DoZsqBZL+xAdkUq<:GW0g8O+kp)Z\mN/8SxA'Pf.O56[.)'Zs,5a^HEWk\sKc„U"ac_w&CO)?DTLD&)'(XH)Upj5D5oJgF(HpEha,F>r[0mk.l/(3Gz%mfN^uGUc^f0„U"X<(Y>8=#u-NYM60d]pjoFSzLqhH&LBp5%5XG-Bk1;dj/H3:qF4*ePu2j2g.a6$?„U"g9waQ-C0]ZV)Kc^HcT>E-Hp&VY1X--OPcU)*#ak/&U62LR-6*CmQ53('l&scm)R„U"Tl-IHH3_$RP>]V9=k0X(uBW2GPKeA5h6#jxnznGCS2EIb/?6TVg:<k/<JEZGrC.„U"OpgJC[mU2K(Q#awP^6]$rOIJ(Vf1yTgqE^*RUTH&2e/uL_1DKZKOALjlRE;$2<W„U"=Xu[ndlMf'RmO>(%TD]gDlxIoreWE/0tYH-J:+51wyYE2Tu1LuA0J:)[3yAAu?v„U"Re%LiXe]YQ3$Aav<Cf_m>LfTh6FjoIUmp>B1Wv6TPMs:8X=okx3d5q<Xri?iXs2„U"oGC.xG<X_l3ZMt++U]i^1(;4hC(iM1sumTR^bkTf8$rO>G:tUW)[C-kwSAf>P$9„U"RC(8[-OYA3&yF1:;qb6Usk=x4,Gi4u%p()9%%%%-(%Uw&+F+E2&b9%%%%>%%%%6„U"%%%%uwt%liwf&&Tzx%jwSn[snX$o^W[^IW%aU#;e'WI2f;-%S%up%()9%%%%-%%„U"OI&FOt)PU&^2%%%^\%%%7%%%%uwtl#iwf&%Tiwf)&&SgRfxN*rd>T/j;x=9ox(Z„U"&Y7+QlWWM-FDObMX+vPWQM6,PL)#;JZTco'te;V?x?qD<\RNOFU>L1D,k*sl<0l„U"GHmdC_fjW>C5WLvIJ]qy<.DlIB84htqn,6Vw:BPMAyy(MEJJdqcom^+bSJscDPT„U"<VXd]Mv7kqEB;>.f#0\^?i1D3WHA%&urlm[EdMzecHky^?0#NFPzl+[8vxcPtJ_„U"'YrPjDBU'DOrlXpV[h0B'vKr$KClS&85UiVt&BadM3^Tz25H2erNSLGHpjhX]]6„U"F:><$Lcgp<T,oH1k:y[YzcFMB<Z'*5'\JQQ,<j<f7zguQ3)qQA>KQhf#XumgO(o„U"]SE^8,IgyM?E:yI\ZT&h?L.q.rJUgU/R/NL3YuiIfaD;S3t*&8%q.xAsrjo6<5w„U"T:m_D&ab09vfu493WheE4Oi-'VoTm;V/Hfn]*$IWsfbiRAaE6IN3?JrvvZ%[>.&„U"u_2[HF5U3)?WY?5S#*>^kz#,nE_=zEpkW1H)x5-lCmg's\BWOI%WfUs^%(.=5T*„U"aqm.KFo&XnYWDcb=c2+[fV$kkS;aO_0e=3cE<h#iqP)n.8PlW#nI)CaS$cfOQwJ„U"<nSaPVl&+n^#+JVx9iw#+Wn7p?70_e2u?[h1<v+[HT8KL7u$9ES3;rqb1pmhyZY„U"VljN8hSSa<r[W-?SU&vRU738a(2_Y*a_X&WD>]35eMd&Qgeam+<W\)*qGZGlD([„U"5&zUp()ymZxEW2;IL;Z1B[1(/m5f%i7n9G+dmA/?rc1<swqL4rR$N_r>ab]9<BY„U"'M(Wx0I>AB%Wnu4AFzto%ChVBbII0)_25pHu..m6?h--ZhA.oG>tcek._5NAY%U„U"gy25v6[Wm,&0q8<BfomRGnla15fUEw1.XFl8rp.ToebD+qICu,;kAEPi5I;Ybo[„U"0X*V3GebN2Ybz8'pyIQ5;p3hOlJ3rfE*qB_&?t:7H*p:Z5(YP8Q,f;TrC-*g&aY„U"p:5av6jcA+TchAX=kO#\,EYWnm+x?i'o>*tx)o/NZf+ptSKpJ4502nWY.=kWpl\„U"XL4#y_.hL*KYy.wZU&niKB5T7)s5chtkhZt+pL2q.Jze%\.aqiv*>[fApNeQFa<„U"R7cH_G+]L&qCp%&[D]'7Q<P^v_&>v$<8l0I<(#&UptIAd\qgpX;aGo1J$5oH=Xj„U"Egf]Od].T-62.)%hK+0ZqFD_Th.%ki[\Q_iG]fXTjoRg/N6CyD<o5_6EPq\vj>g„U"7,[Ld=r5h]\td;.c9-wKQvSlC6yTXfP.;3O\4<mJ8P\vP$pz<5-R%G1o.>4rd,/„U"*1R$c&-=X:tkIA'w,<0cSOKDg[7koY][BXdYZWaIE5l0C)bDB-;:4vi)lEqHMVH„U"zrjYDQ5CFB+jeGc,3*h1xt]'d1[^S35\f)._<kqA*?qACFbZ__mO]=Bc2Z:>''K„U"5tHsMjP'_;#Ul/$AV&jSA:6f5Gu?:CFkC6Qg1NfmiPbp\VX89sY,*wq/ieu_rR?„U"+1P)tBScMwyXt]STXrg2F(4&pZrsUZPJuidqhckDXvm_xvkhki6<uZ8?0KAAZ6S„U"AQwQMKF7[pk[uXrs51o1Xj[aO0K>m&+]?oR,^]'KHPg0qv<M&/v6.nFXOXSJeE+„U"L5bh)4g[gpM^idg*Q[f_HY*+e%Kkyy#/LJX=qeP(>^DC>I^avWgr%(O0k9YB5M3„U"X%hL1ti7g*Z$Ippz'HG'P0]JsoZnNaa9]+pKvAQ\#BL_k9Q3C>T-&?*(/jY-79_„U"d$-bQP>:/r;4WljLaM^IXBUa_u&7uANp03KtF-0PA[<.5;E?0PLLmSid6,WXdYj„U"'%/t.BC(\PR0iVzWVDrz4N.;l?fp^':'\c9&4L-uu<Q;M*_MiotPlPM/6TCReM7„U"H$&=))i)rCr'&$g\p*eqEZe:Xkuq1dRww4mJ-'sH;0sk<XaIef+JnnF%T.?ZP),„U"q1btuIBoKWRFP#\E,Ve>l51u7^/hBoz0tbjXO?(iiXf_lx[>CpNa&>[/8.BBh)g„U"(LVk[l<?Px%Y<Ly3R#NIUPefY['<<$k7*Oyu0XD1s9Q*D9zV(kt_.f^Y-PjxDIa„U"6R833>TE-H)9Igm8o/RD-++i^8y/mu396mbdzQXZm]&+w-5CDWZ-&37;d>I\H97„U"b=Jz3Zo/)Z;advkyKJZI(+(s5=t.v4t\HB#>g7q8,-+'TTuHR:m$4IHuBum'PJ'„U"M_Tz.$pey6nX&P*v5q(szVrqT[b3-=I0,p.K3]DNmXv&lRGb;lLjVrRY;5/MS1o„U"vI^]GX&(hR/E0Z9bLrZ'd[v[=7fIC.,>6q%bA?eGDCXA*qSfA-aTnG7)-=b2ob5„U"Ltqa(6c51KT:[4q%U)1ZHUJn1Npenemc,U[\(e9j'K'3-NZ_K);sN0TM'lgbsTA„U"sQ2l?r'9F^^Ilt#,nIra/lHiRDi;-:_1i'\(#lJQXVsC9#.rJ?3F?.AWIfeWYET„U"+a^kHHF#)t-g7JT0a3qze#kT&NOKkt#2W#NPCraGFcKh;RA**&x<=0sFt%PAz\*„U"GAzvkS&T)YIk,3A#w20L>%e7ra=6*?*+.;Hk-Km)3o>652eP$LI?&#:nO3*Wchc„U"$JwH.q%qiVz15RCVMP?SuMW.c3^*z^Ds#69Ojo^oX&6MAFOJXwV#?J,8W;c<uX=„U"BePeJH?>e:^..-7wKsXL^c^L1=[dGJ=6)u=DT>=qX\8GRqSfB0?Z-ufcp8b;T:C„U"D,_i7o*z7li4,X)*4,*]oc7aVo')m4b,gr49>s'HW3T[j$mq7n>61kN:OMZxEAZ„U"N#X4q[jjGO_V=2+sVTbo_]dQM&-k]wlBjCjq=#BRoZJ*S)cCE>uF.>M4.$?Yf,_„U"[76N9Li6xf$G6mHEc;t/ATsZ#lWnUnyR%9Dt*Ww,XaNGJC#]D70gD]u_4i_Ox(<„U"GWl$F93Ur6*9QTkQSf%F4)MH5.D;v7McFu<H_Nt%DBsv/lDzv9#Ni/TDhYunKP4„U"uP[4k^&a$S^1mV_G5)0$^?;_P*z8W(2'PK22g6\/s(_P*Sig;68d\'a2U;3qI*#„U"d;?gX&Oj+;1Y/L([0#U,k<MORG;jQI)LZ3#b5?E+D/PjVUr>X1V.7:QI+d;Ih<L„U"3s<Z*)c_Z.9b5'XQ2R1Q+/J0(.bpaAQ8>e\R^NflG?+5iAv4A,uDGfD/K=[NUe[„U"e&#VR/9+]guoW>:hPsQAc/Y/*6oeh#;Y.TF3lvP5+_q'_HDS8OSDz8O1Vi,Spx0„U"M5'p#u8^i8CITAX0pR+3fO5L6GP7X__swROwY?-g?29WvFav&:hmCllHK(FpUO1„U"F%q]0AR9R6jA7^1?Lm(tJLFdtssc'C\aSg>z3)9Kl#F=dQZdh[A8';fCPknFMV,„U"KJBl-8b4o_P=,M&Wc6%c4sVDn:S?5k]IZeX%+++=?Q9I+pk\F2aGg,m&l86dGKs„U"mZ%T?bIimp\gj#m_J'2w7a+W'H(ueT9Ia+s[ImZeP?fbOYQo9x4W.:hV:uQBNU=„U"X2IB;S;G1RI9*X/teL[e:979(KX'2]RqW1Yq3%MG,\eV69'p3^*DS8OSDz:PCdE„U"HtDdv35^:ZG6J0B>jv^(M]I-km2D\p33j,[&EnDMyghP,5M.f4?^jDHs\DHG4S,„U";d\<YSn5pkEAabp7B+%1^(/BdHLw2^kocDAK$3%>q;HuA]nm<b0<'%B#_2;'7:G„U"+0O\UB0&#'o)F<'H^EFh>4a*BNOIdN^Lte+foe]$88.U#7==g$<(>:G%0;?=,cq„U"(0;n>:app*P9MUD[;:O\/)(XD1R9/1d[Pb/U>FuAY2WYIn'H27Ju+hOJ+0_?KiL„U"C/Ms-bnB(VR93zS2E(UK:JX6)/L0;7nq%z(FXXQUzkC=5^RoGUzTTB;MU_dmhug„U"h^-jQlT+7iV?]Pqhga*Yt)$PE*hwVER,LNj6/M_;D=c\#&VMKU2Y2ipu9qXh-PE„U"fUTG0DIhnu;J8Z\O]U743swpiWZt$#K208M7v.TeMO.>Ii8H5wANSQgh<fkMu1b„U"S5a4m6E'8b<Uuv1V\#-I]uk6=G=l,w/'9VSd?7yH,x]O?^:^:MS7MHX)f>sZZ#R„U"L&aQmhjUlU9>qCmuOo^ZviLZ+&ejz*fUMFgJjPfRpqCdi%5E%ziN_M-za/'aqQc„U"(+(__Pf(S,3^#wlqbQ%<(z<<$-QviMDd>sBM'p4PF3w+FD+Qf\mgJb]Zua_%#wG„U"Q/Z(F?MYhj<*7yWQitpZ+b9vkCRaex6lpQdHLqus48g;HSq4V)(>Ed\2cup/&RN„U"gR[$v:5rh^adulZOYwmMr4h[1JJI1Nmsi:?Tv9t7>CGiuu)4g/tl*WC^]AO*gcZ„U"Z5S_^7>[fH)EQr7>4KMK+;tDR8Tj2x[xSt$YZ]3F02=NiBW#4Z1tv#a^LFD;O4W„U"_kRzj<zY#3e1nncE#R<pm:]5mLBmq-ic[KO+w%4up(%)/%%#%%%>&%(F%%%%%%%„U"%%%%%%%%>%%%%u%wtli.wf&T#iwf&%Tijk%fzqy%Sgfx%up&'%9%9%%%%%%8:0w„U"E%%%%%%%%%%%%%%%%3%%%%%%%%%&%U%%%%%%%%%uw%tliw(f&Ti.wf&T%up&'%9„U"%/%%%%%%)=%(F%%%%%%%%%%%%%%%%9%%%%%%%%%&%E%%%%Q%%%%uw%tliw(f&Ti„U".wf&i%fySu(i&up%&'9%%/%%%I%%=%%(F%%%%%%%%%%%%%%%9%%%%%%%%%&%%E%„U"%%&-%%%%uwtl#iwf&%Tity#iwf&#Sui&%up&'%9%9%%%%-%9;wvE0987I%L%%%%„U"O%%%%:%%%%%%%%%&%E%.%%_%%%%uw%tliw(f&Tu%wtli.wf&S%gfyu%p&'9%%9%„U"%#%-%U#I&FE[r]9d%'%%N%*%%9%%%%%%%%%&%%E%%+%c%%%%uwt%liwf&&Tns%x„U"yfq#qSy'%yup&%'9%9%%%%-(%Uw&+F+E2&b9%%%%>%%%%6%%%%%%%%%&%E%%%%,„U"%)%%u%wtli.wf&T%zxjw%Snsn%up&'%9%9%%%%-%%OI&FOt)PU&^2%%%^\%%%7%„U"%%%%%%%%&%E%%%%o)%%%uw%tliw(f&TiIwf&&%Sgfx%up&'%9%/%%%%%%)>%(F%„U"%%%%%%%%%%%%%%%>%%%%%%%%%&%E%%%%.7%%%uw%tliw(f&Ti.wf&T%ijkf%zqy„U"S%gfxu%p*+%%%%%-%%-%0%'%%e%7%%%%%„END SUB„CLOSE:IF S=255AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Tony Cave                      BURNING FIRE SIMULATOR         FidoNet QUIK_BAS Echo          07-31-96 (01:12)       QB, QBasic, PDS        218  7253     BURNING.BAS 'burning.bas is a fire simulator followed by a palette manipulator„'1 compile the program (Qbasic v1.1 users see REMarks in SUB getsizes)„'  (you need to save this in QB to generate the DECLARE statements)„'2 run the program specifying window size„'  EXAMPLE: burning 100 80„'  where 100 is the x value and 80 is the y value„'  executing burning with no parameters uses the default values.„'  (you might want to use the defaults first to get a feel for it)„'  for great palette manipulations try using:  burning 200 160„'3 when you want to freeze the screen and go into palette manipulations,„'  press a key„'4 in the palette manipulations:„'  press "P" for a different palette set„'        "-" to slow down palette rotation„'        "+" or "=" to speed up palette rotation„'        "Q" to quit„'Feedback would be appreciated (especially on speeding up the fire sub)„DIM ca(9, 256)„ID$ = "BURNING.BAS (c) 1996 by Tony Cave"„screenmode  ' setup the screen„getsizes    ' get the screen sizes„firepal     ' setup palette for fire„circleback  ' draw circular background (REM this out if you don't like it)„randback    ' draw random background to speed up fire simulation„fire        ' fire simulation„colors      ' palette manipulations„'NOTE: This program is not guaranteed to do anything.  The author„'of this program claims no responsibility for anything that happens.„'If any damage is done, it is the fault of the user of this program.„SUB circleback„FOR cir = 0 TO 255    'add this sub for a circle background„CIRCLE (160, 100), cir * 203 / 255, cir / 2„CIRCLE (160 + 1, 100), cir * 203 / 255, cir / 2„NEXT„END SUB„SUB colors„SHARED a$„DO„ DO„  cycle„  delay„  getkey„ LOOP UNTIL a$ <> ""„ keycheck„LOOP„END SUB„SUB cycle                    'cycle the palette„SHARED red%, green%, blue%„rgb 1„u1% = red%: u2% = green%: u3% = blue%„FOR t = 1 TO 254„ rgb t + 1„ OUT &H3C8, t: OUT &H3C9, red%: OUT &H3C9, green%: OUT &H3C9, blue%„NEXT„ OUT &H3C8, 255: OUT &H3C9, u1%: OUT &H3C9, u2%: OUT &H3C9, u3%„END SUB„SUB delay„SHARED m7„FOR asdf = 1 TO m7: NEXT„END SUB„SUB findrgb (x%, y%)          'finds the rgb of a particular pixel„SHARED red%, green%, blue%„c% = POINT(x%, y%)„OUT &H3C7, c%„red% = INP(&H3C9)„green% = INP(&H3C9)„blue% = INP(&H3C9)„END SUB„SUB fire„SHARED sizex, sizey, space, ca()„DIM x AS INTEGER, y AS INTEGER, avg AS INTEGER„DO„x = INT(RND * sizex) * space - INT(sizex / 2) * space + 160„y = INT(RND * sizey) * space - INT(sizey / 2) * space + 100„avg = POINT(x - space, y + space)„avg = (avg + POINT(x + space, y + space) + POINT(x, y + space)) \ 3„avg = avg * -(avg < 255)„PUT (x - 1, y - 1), ca(1, avg + 1), PSET„LOOP UNTIL INKEY$ <> ""„END SUB„SUB firepal               'the starting palette„FOR pu = 1 TO 255„ OUT &H3C8, pu„ OUT &H3C9, (126 - (ABS(pu - 128))) / 2„ OUT &H3C9, (126 - (ABS(pu - 128))) / 4„ OUT &H3C9, 0'((ABS(pu - 128))) / 4„'LINE (pu, 0)-(pu, 25), pu  'This is to check out the palette„NEXT pu„PALETTE 128, &H20303F„END SUB„SUB getkey„SHARED a$„a$ = INKEY$„END SUB„SUB getsizes                'get the screen size„SHARED sizex, sizey, hsizex, hsizey, space„space = 1  'distance apart for pixels or boxes or whatever„sizex = VAL(LEFT$(COMMAND$, 3))„sizey = VAL(RIGHT$(COMMAND$, 3))„'Qbasic users REM out the above 2 lines and unREM the below line„'sizex = 20: sizey = 20  'change these to what ever you want but„                         'larger numbers slow it down alot„                         'For good palette manipulations, change to„                         'sizex=316:sizey=196 and wait about 7 min„                         'before pressing a key„a = sizex: B = sizey: c = 318: d = 198„sizex = a * ABS((a <> 0) AND (a < c)) + 50 * ABS(a = 0) + c * ABS(a > c)„sizey = B * ABS((B <> 0) AND (B < d)) + 30 * ABS(B = 0) + d * ABS(B > d)„hsizex = INT(sizex / 2)„hsizey = INT(sizey / 2)„END SUB„SUB keycheck„SHARED a$, m7„ IF a$ = "=" OR a$ = "+" THEN„ m7 = m7 - 1000: m7 = m7 * -((m7 - 1000) > 999)„ END IF„ IF a$ = "-" THEN m7 = m7 + 1000„ IF UCASE$(a$) = "P" THEN nextpal„ IF UCASE$(a$) = "Q" THEN DEF SEG : SYSTEM„END SUB„SUB nextpal„SHARED palnum, red%, green%, blue%„nop = 5    'number of valid palette sets in case you want to add more„palnum = palnum + 1„IF palnum > nop THEN palnum = 1„SELECT CASE palnum„CASE 1„PALETTE„CASE 2„t = 0: m = 0„FOR pu = 1 TO 255„ IF t = 0 THEN count = count + 1: IF count > 31 THEN t = 1„ IF t = 1 THEN count = count - 1: IF count < 1 THEN t = 0: m = m + 1„ IF m > 3 THEN m = 0„ OUT &H3C8, pu„ OUT &H3C9, INT((32 - count) * 63 / 32) * ((m = 0) OR (m = 3))„ OUT &H3C9, INT((32 - count) * 63 / 32) * ((m = 1) OR (m = 3))„ OUT &H3C9, INT((32 - count) * 63 / 32) * ((m = 2) OR (m = 3))„NEXT pu„PALETTE 255, 0„CASE 3„se = INT(.03 * 127): th = INT(.08 * 127): fo = INT(.99 * 127)„FOR pu = 1 TO se„ OUT &H3C8, pu: OUT &H3C9, 0: OUT &H3C9, 0: OUT &H3C9, 32„NEXT pu„FOR pu = se TO th„ OUT &H3C8, pu: OUT &H3C9, 0: OUT &H3C9, 0„ OUT &H3C9, INT((pu - se) * (31 / (th - se))) + 32„NEXT pu„FOR pu = th TO fo„ OUT &H3C8, pu: OUT &H3C9, 0: OUT &H3C9, 0„ OUT &H3C9, 63 - (INT((pu - th) * (31 / (fo - th))) + 32)„NEXT pu„FOR pu = fo TO 127„ OUT &H3C8, pu„ OUT &H3C9, INT((pu - fo) * (63 / (127 - fo)))„ OUT &H3C9, INT((pu - fo) * (63 / (127 - fo)))„ OUT &H3C9, 63„NEXT pu„FOR pu = 128 TO 255„ rgb 255 - pu„ OUT &H3C8, pu: OUT &H3C9, red%: OUT &H3C9, green%: OUT &H3C9, blue%„NEXT pu„CASE 4„t = 0: m = 0„FOR pu = 1 TO 255„ IF t = 0 THEN count = count + 1: IF count > 6 THEN t = 1„ IF t = 1 THEN count = count - 1: IF count < 1 THEN t = 0: m = m + 1„ IF m > 3 THEN m = 0„ OUT &H3C8, pu„ OUT &H3C9, INT((7 - count) * 63 / 7) * ((m = 0))' OR (m = 3))„ OUT &H3C9, INT((7 - count) * 63 / 7) * ((m = 1))' OR (m = 3))„ OUT &H3C9, INT((7 - count) * 63 / 7) * ((m = 2))' OR (m = 3))„NEXT pu„PALETTE 255, 0„CASE 5„FOR pu = 1 TO 255„ OUT &H3C8, pu„ OUT &H3C9, (126 - (ABS(pu - 128))) / 2„ OUT &H3C9, (126 - (ABS(pu - 128))) / 4„ OUT &H3C9, 0'((ABS(pu - 128))) / 4„'LINE (pu, 0)-(pu, 25), pu„NEXT pu„PALETTE 128, &H20303F„END SELECT„END SUB„SUB randback„DIM c AS INTEGER„SHARED sizex, sizey„fy1 = ABS(sizey / 2 <> sizey \ 2): fy2 = NOT ABS(fy1)„fx1 = ABS(sizex / 2 <> sizex \ 2): fx2 = NOT ABS(fx1)„FOR y = 100 - sizey / 2 - 1 + fy1 TO 100 + sizey / 2 + 1 + fy2„FOR x = 160 - sizex / 2 - 1 + fx1 TO 160 + sizex / 2 + 1 + fy2„c = INT(RND * 50 + 206)„'use the following two lines for a special background„'c = (COS((y * .03515625# - 3.515625) ^ 2) * 63.75 + 63.75)„'c = c + (COS((x * .0265625 - 4.25) ^ 2) * 63.75 + 63.75)„POKE INT(y) * 320 + INT(x), c„NEXT„NEXT„END SUB„SUB rgb (gluupin%)           'finds the rgb of a color attribute„SHARED red%, green%, blue%„OUT &H3C7, gluupin%„red% = INP(&H3C9): green% = INP(&H3C9): blue% = INP(&H3C9)„END SUB„SUB screenmode„SHARED ca()„DEF SEG = &HA000„SCREEN 13„FOR x = 0 TO 765 STEP 3„x2 = x + 318 * (x > 315)„x3 = x2 + 318 * (x2 > 315)„y = (-(x > 315) - (x > 630)) * 3„LINE (x3, y)-(x3 + 2, y + 2), x / 3, BF„GET (x3, y)-(x3 + 2, y + 2), ca(1, x / 3) 'put colors into array to„NEXT                                      'speed up the fire sub„END sub„Kurt Kuzba                     BOUNCING GREAT BALLS OF FIRE   FidoNet QUIK_BAS Echo          04-18-96 (00:00)       QB, QBasic, PDS        77   3098     RGB13FLO.BAS'_|_|_|   RGB13FLO.BAS„'_|_|_|   A graphics display program based on a FIDO ECHO message„'_|_|_|   From: Mike Castelli   ...   Date: 04-05-96 10:48„'_|_|_|   Subject: Circle Burn„'_|_|_|   No guarantees or warrantees are given or implied.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (4/18/96)„CRSX% = CSRLIN: CRSY% = POS(0): ScrPocket 1„TYPE BallsColorDef: R AS INTEGER: G AS INTEGER: B AS INTEGER: END TYPE„TYPE GreatBallsOfFire„   X AS INTEGER: XD AS INTEGER: Y AS INTEGER: YD AS INTEGER„   H AS INTEGER: C AS INTEGER: END TYPE„DIM SHARED cr(1 TO 6) AS GreatBallsOfFire„DIM SHARED rgb(1 TO 6, 16) AS BallsColorDef„FOR t% = 0 TO 8„   C% = t% * 5 + 22: B% = (t% + 1) * 2„   rgb(1, t%).R = C%: rgb(1, t%).G = B%: rgb(1, t%).B = t%„   rgb(2, t%).R = t%: rgb(2, t%).G = C%: rgb(2, t%).B = B%„   rgb(3, t%).R = B%: rgb(3, t%).G = t%: rgb(3, t%).B = C%„   rgb(4, t%).R = C%: rgb(4, t%).G = 0: rgb(4, t%).B = C%„   rgb(5, t%).R = 0: rgb(5, t%).G = C%: rgb(5, t%).B = C%„   rgb(6, t%).R = C%: rgb(6, t%).G = C%: rgb(6, t%).B = 0: NEXT„FOR t% = 1 TO 7„   FOR C% = 1 TO 6: rgb(C%, 16 - t%) = rgb(C%, t%): NEXT: NEXT„SCREEN 13: RANDOMIZE (TIMER * 100): PalPocket 1„FOR t% = 1 TO 6„   cr(t%).X = RND * 320: cr(t%).Y = RND * 200„   cr(t%).XD = (RND * 2 + 1): cr(t%).YD = (RND * 2 + 1)„   cr(t%).H = t% * 2: NEXT„WHILE INKEY$ = ""„   CircDraw„   FOR t% = 1 TO 6„      IF cr(t%).X < 10 THEN cr(t%).XD = ((RND * 999) AND 1) + 1„      IF cr(t%).Y < 10 THEN cr(t%).YD = ((RND * 999) AND 1) + 1„      IF cr(t%).X > 309 THEN cr(t%).XD = -(((RND * 999) AND 1) + 1)„      IF cr(t%).Y > 189 THEN cr(t%).YD = -(((RND * 999) AND 1) + 1)„      cr(t%).X = cr(t%).X + cr(t%).XD„      cr(t%).Y = cr(t%).Y + cr(t%).YD: NEXT„WEND: PalPocket 0: SCREEN 0: WIDTH 80, 25„LOCATE CRSX%, CRSY%, 1: ScrPocket 0„SUB CircDraw„   FOR C% = 1 TO 6„      cr(C%).H = (cr(C%).H + 1) AND 15„      cr(C%).C = (cr(C%).C + 14) AND 15„      X% = cr(C%).X: Y% = cr(C%).Y: H% = cr(C%).H„      FOR l% = 0 TO 11„         CIRCLE (X%, Y%), l% + 1, ((H% + l%) AND 15) + C% * 16 - 15„      NEXT„      FOR t% = 1 TO 16„         OUT &H3C8, t% + (C% - 1) * 16: H% = (cr(C%).C + t%) AND 15„         OUT &H3C9, rgb(C%, H%).R: OUT &H3C9, rgb(C%, H%).G„         OUT &H3C9, rgb(C%, H%).B: NEXT: NEXT„END SUB„SUB PalPocket (save%) STATIC„   DIM pal(384) AS INTEGER„   DEF SEG = VARSEG(pal(0)): O& = VARPTR(pal(0))„   IF save% <> 0 THEN„      FOR t% = 0 TO 255„         OUT &H3C7, t%: POKE O& + t% * 3 + 0, INP(&H3C9)„         POKE O& + t% * 3 + 1, INP(&H3C9)„         POKE O& + t% * 3 + 2, INP(&H3C9): NEXT„   ELSE„      FOR t% = 0 TO 255„         OUT &H3C8, t%: OUT &H3C9, PEEK(O& + t% * 3 + 0)„         OUT &H3C9, PEEK(O& + t% * 3 + 1)„         OUT &H3C9, PEEK(O& + t% * 3 + 2): NEXT„   END IF„END SUB„SUB ScrPocket (gt%) STATIC„   DIM scr(4000)  AS STRING * 1„   DEF SEG = &HB800„   IF gt% <> 0 THEN„      FOR t& = 0 TO 3999: scr(t&) = CHR$(PEEK(t&) AND 255): NEXT„   ELSE„      FOR t& = 0 TO 3999: POKE t&, ASC(scr(t&)): NEXT„   END IF„END SUB„'_|_|_|   end   RGB13FLO.BAS„Kurt Kuzba                     BUFFERED PCX VIEWER            FidoNet QUIK_BAS Echo          07-20-96 (00:00)       QB, QBasic, PDS        66   2566     PCXVIEW.BAS '>   ok, well the basic gif displayer I have is very slow, about„'>   3-4 min. to display a picture.  Is there a faster way to„'>   display pixels?„'>..............................................................„'   You might benefit from the use of a buffer. Have a look at„'this. It is for 320x200x256 .PCX files, but the idea of the„'screen buffer is implemented. Where a greater ammount of„'calculation is required, and multiple bit planes are involved,„'the time savings should be considerable using a buffer.„'With four bit planes, you would use four buffers set up as:„'   DIM buf0(19202) AS INTEGER„'   DIM buf1(19202) AS INTEGER„'   DIM buf2(19202) AS INTEGER„'   DIM buf3(19202) AS INTEGER„'Once you GET your screen to your buffer, you can write to the„'buffer your data, and then PUT the data onscreen.„„'_|_|_|   PCXVIEW.BAS„'_|_|_|   An example of 320x200x256 .PCX display in QBasic.„'_|_|_|   No warrantees or guarantees are given or implied.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (7/20/96)„ON ERROR GOTO OOps: '$DYNAMIC„DIM buf(32002) AS INTEGER: buf(0) = 2560: buf(1) = 200„'_|_|_|  init buffer for 2560 bits X 200 lines„BSEG& = VARSEG(buf(2)): BOFS& = VARPTR(buf(2))„INPUT "Name of PCX file to view => ", PCX$: IF PCX$ = "" THEN END„bt1! = TIMER: PRINT "Loading file"„OPEN PCX$ FOR INPUT AS #1: CLOSE 1: OPEN PCX$ FOR BINARY AS #1„fin& = LOF(1) - 767: SEEK #1, fin&: pal$ = INPUT$(768, 1)„p% = 1: fin& = fin& - 1: SCREEN 13„FOR T& = 0 TO 255„   OUT &H3C8, T&„   FOR hue% = 1 TO 3„      OUT &H3C9, ASC(MID$(pal$, p%)) \ 4: p% = p% + 1„   NEXT„NEXT„SEEK #1, 129: T& = BOFS&: DEF SEG = BSEG&: CLS : spin% = 1„PRINT "Loading PCX  "; : spinner$ = "//--\\||": rle% = 0„DO„   PRINT CHR$(29); MID$(spinner$, spin%, 1);„   spin% = (spin% AND 7) + 1„   p$ = INPUT$(256, 1): fpos& = SEEK(1): l% = LEN(p$)„   IF fpos& > fin& THEN„      l% = l% - (fpos& - fin&): p$ = LEFT$(p$, l%): view$ = "done"„   END IF„   FOR p% = 1 TO l%„      dat% = ASC(MID$(p$, p%))„      IF rle% = 0 THEN„         IF (dat% AND 192) = 192 THEN„            rle% = dat% AND 63„         ELSE„            POKE T&, dat%: T& = T& + 1„         END IF„      ELSE„         FOR rle% = rle% TO 1 STEP -1„            POKE T&, dat%: T& = T& + 1„         NEXT„      END IF„   NEXT„LOOP UNTIL view$ = "done"„bt2! = TIMER: CLOSE 1: PUT (0, 0), buf, PSET„WHILE INKEY$ <> "": WEND: WHILE INKEY$ = "": WEND„SCREEN 12: WIDTH 80, 25: PRINT bt2! - bt1!„OOps:„   CLOSE 1: PRINT "error"; ERR: END„'_|_|_|   end   PCXVIEW.BAS„Darryl Stokes                  DONUT BALLS                    FidoNet QUIK_BAS Echo          07-22-96 (16:33)       QB, QBasic, PDS        59   1169     DONUTS.BAS  RANDOMIZE TIMER„SCREEN 13„„recalc:„'CLS„„red = 0„green = 0„blue = 0„„redbig = INT(RND * 5) + 1„greenbig = INT(RND * 5) + 1„bluebig = INT(RND * 5) + 1„IF redbig = 2 THEN redbig = .5„IF greenbig = 2 THEN greenbig = .5„IF bluebig = 2 THEN bluebig = .5„IF redbig = 3 THEN redbig = .25„IF greenbig = 3 THEN greenbig = .25„IF bluebig = 3 THEN bluebig = .25„IF redbig = 4 THEN redbig = .75„IF greenbig = 4 THEN greenbig = .75„IF bluebig = 4 THEN bluebig = .75„IF redbig = 5 THEN redbig = 0: red = 1„IF greenbig = 5 THEN greenbig = 0: green = 1„IF bluebig = 5 THEN bluebig = 0: blue = 1„„FOR i = 30 TO 92„ red = red + redbig„ blue = blue + bluebig„ green = green + greenbig„ PALETTE i, 65536 * INT(blue) + 256 * INT(green) + INT(red)„NEXT i„„c = 32„dir = 1„„circles:„DO„x = INT(RND * 320) + 1„y = INT(RND * 200) + 1„r = INT(RND * 150) + 1„FOR i = r TO 1 STEP -1„CIRCLE (x, y), i, c„PAINT (x, y), c„SELECT CASE dir„        CASE 1„        c = c + 1„        IF c = 92 THEN dir = 2„        CASE 2„        c = c - 1„        IF c = 32 THEN dir = 1„END SELECT„NEXT i„c = 32„dir = 1„IF INKEY$ <> "" THEN END„GOTO recalc„LOOP„„Kurt Kuzba                     PALETTE MANIPULATION           FidoNet QUIK_BAS Echo          06-02-96 (00:00)       QB, QBasic, PDS        86   4033     PALPAL.BAS  '>   'I like this one alot. It uses the PALETTE statement„'>.......................................................„'   The yin-yang was very nice. Here are some hardware palette„'routines you might someday find useful.„'_|_|_|   PALPAL.BAS„'_|_|_|   This is a simple demonstration of methods of palette„'_|_|_|   manipulation. Demonstration uses graphics mode 13h.„'_|_|_|   No warrantees or guarantees are given or implied.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (6/2/96)„DECLARE SUB pal (act$)„SCREEN 13: DEF SEG = &HA000: DIM SHARED red(256) AS INTEGER„DIM SHARED grn(256) AS INTEGER: DIM SHARED blu(256) AS INTEGER„FOR t& = 1 TO 63999: POKE t&, (t& AND 511) \ 2: NEXT„SOUND 999, 3: pal "save"„pal "fadeout": SOUND 999, 3: WHILE INKEY$ = "": WEND„pal "fadein": SOUND 999, 3: WHILE INKEY$ = "": WEND„pal "blackout": SOUND 999, 3: WHILE INKEY$ = "": WEND„pal "restore": SOUND 999, 3: WHILE INKEY$ = "": WEND„SCREEN 0: WIDTH 80, 25: END„SUB pal (act$)„   SELECT CASE act$„   ' "save","fadein","fadeout","restore","blackout"„      CASE "save"„         FOR colour% = 0 TO 255„            OUT &H3C7, colour%          ' Set color to read„            red(colour%) = INP(&H3C9)   ' read red value„            grn(colour%) = INP(&H3C9)   ' read green value„            blu(colour%) = INP(&H3C9)   ' read blue value„         NEXT„      CASE "fadein"„         DO„            done% = 0„            FOR colour% = 0 TO 255„               OUT &H3C7, colour%       ' Set color to read„               red% = INP(&H3C9)        ' read red value„               grn% = INP(&H3C9)        ' read green value„               blu% = INP(&H3C9)        ' read blue value„               ' Test the color values, decrementing if necessary.„               ' Set loop variable if saved palette not in use.„               IF red% < red(colour%) THEN red% = red% + 1: done% = 1„               IF grn% < grn(colour%) THEN grn% = grn% + 1: done% = 1„               IF blu% < blu(colour%) THEN blu% = blu% + 1: done% = 1„               WAIT &H3DA, 8, 8„               OUT &H3C8, colour%       ' Set color to write„               OUT &H3C9, red%          ' write red value„               OUT &H3C9, grn%          ' write green value„               OUT &H3C9, blu%          ' write blue value„            NEXT„         LOOP WHILE done% <> 0„      CASE "fadeout"„         DO„            visible% = 0„            FOR colour% = 0 TO 255„               OUT &H3C7, colour%       ' Set color to read„               red% = INP(&H3C9)        ' read red value„               grn% = INP(&H3C9)        ' read green value„               blu% = INP(&H3C9)        ' read blue value„               ' Test the color values, decrementing if necessary.„               ' Set loop variable if colors are still visible.„               IF red% > 0 THEN red% = red% - 1: visible% = 1„               IF grn% > 0 THEN grn% = grn% - 1: visible% = 1„               IF blu% > 0 THEN blu% = blu% - 1: visible% = 1„               WAIT &H3DA, 8, 8„               OUT &H3C8, colour%       ' Set color to write„               OUT &H3C9, red%          ' write red value„               OUT &H3C9, grn%          ' write green value„               OUT &H3C9, blu%          ' write blue value„            NEXT„         LOOP WHILE visible% <> 0„      CASE "restore"„         FOR colour% = 0 TO 255„            OUT &H3C8, colour%          ' Set color to write„            OUT &H3C9, red(colour%)     ' write red value„            OUT &H3C9, grn(colour%)     ' write green value„            OUT &H3C9, blu(colour%)     ' write blue value„         NEXT„      CASE "blackout"„         FOR colour% = 0 TO 255„            OUT &H3C8, colour%          ' Set color to write„            OUT &H3C9, 0                ' write red value„            OUT &H3C9, 0                ' write green value„            OUT &H3C9, 0                ' write blue value„         NEXT„   END SELECT„END SUB„'_|_|_|   end   PALPAL.BAS„Peter Cooper                   RAY CASTER 3D ENGINE           peco@trenham.demon.co.uk       08-09-96 (10:31)       QB, QBasic, PDS        93   2705     RAYCAST.BAS ' ==========================================================================„' RAY CASTER 3D sorta ENGINE thingymajig„' ==========================================================================„' Wrote this about a month ago, it's a sort of wolfenstien\doom lookalike„' but all in native QBasic source! Uses an interesting ray tracing technique„' could be optimized x1000  Infact, it's being converted to ASM and stuff„' like textures will be added and maybe a bit of shading„'„' Anyway, this code is _public domain_, change it, modify it, whatever, it„' only took about 40 mins in total, So whatever.. you have fun with it <grin>„'„' Cheers, {:o)   Peter Cooper„„DECLARE SUB screensetup ()„DECLARE SUB makeworld ()„DECLARE SUB maketables ()„DIM SHARED st%(0 TO 360)„DIM SHARED ct%(0 TO 360)„DIM SHARED a$(1 TO 10)„px% = 15: py% = 15: sa% = 0„PRINT "please wait..";„makeworld„maketables„screensetup„lp1:„FOR t% = sa% TO sa% + 59 STEP 1„xb = st%(t% MOD 360) / 100              'get inc„yb = ct%(t% MOD 360) / 100              'get inc„bx = px%                                'decimal copy„by = py%                                'decimal copy„l% = 0                                  'reset length„DO„bx = bx + xb„by = by + yb„l% = l% + 1„k% = ASC(MID$(a$(CINT(by / 10)), CINT(bx / 10), 1)) - 48„LOOP UNTIL k% <> 0„„'PRINT l%        this would print the distance to wall from player„x% = (t% - sa%) * 5„dd% = (1000 / l%)„LINE (x%, 1)-(x% + 5, 99 - dd%), 15, BF„LINE (x%, 101 + dd%)-(x% + 5, 200), 2, BF„LINE (x%, 100 - dd%)-(x% + 5, 100 + dd%), k%, BF„LINE (x%, 100 - dd%)-(x% + 5, 100 - dd%), 0„LINE (x%, 100 + dd%)-(x% + 5, 100 + dd%), 0„„NEXT t%„PCOPY 0, 1„„in$ = INPUT$(1)„IF in$ = "x" THEN sa% = sa% + 3„IF in$ = "z" THEN sa% = (sa% + 357) MOD 360„IF in$ = CHR$(27) THEN SCREEN 0: WIDTH 80, 25: SYSTEM„IF in$ = " " THEN„        px% = px% + (st%(t% MOD 360) / 50)„        py% = py% + (ct%(t% MOD 360) / 50)„END IF„GOTO lp1:„„SUB maketables„' Peters boring _yawn_ table creation„FOR tmp1% = 0 TO 360„st%(tmp1%) = SIN(tmp1% * .0174) * 100„IF tmp1% MOD 100 = 0 THEN PRINT ; ".";„NEXT tmp1%„FOR tmp1% = 0 TO 360„ct%(tmp1%) = COS(tmp1% * .0174) * 100„IF tmp1% MOD 100 = 0 THEN PRINT ; ".";„NEXT tmp1%„END SUB„„SUB makeworld„' Peter Coopers demonstration level. Change it if you wish! Each number„'is„' a color number„a$(1) = "1919191919"„a$(2) = "9000000001"„a$(3) = "1000000409"„a$(4) = "9010005001"„a$(5) = "1020040009"„a$(6) = "9030000001"„a$(7) = "1000078009"„a$(8) = "9050087001"„a$(9) = "1060000009"„a$(10) = "9191919191"„END SUB„„SUB screensetup„SCREEN 8, , 0, 1„CLS„WINDOW SCREEN (1, 1)-(320, 200)„END SUB„Jonathan Leger                 LED SCREEN SAVER               leger@mail.dtx.net             08-12-96 (21:02)       QB, QBasic, PDS        274  8803     LED.BAS     DEFINT A-Z„„'LedDisplay() routine Original Author: Scott Pessoni - August 1995„'---> Modified by Jonathan Leger <---„„'All other code, including InitLedDisplay() and InitLedBar(), written„'by Jonathan Leger (leger@mail.dtx.net).„„DECLARE SUB InitLedDisplay (x%, y%, onc%, offc%, digits%, v%, a%)„DECLARE SUB InitLedBar (x%, y%, onc%, offc%, elems%, maxval%, v%, a%)„DECLARE SUB LedBar (Number#)„DECLARE SUB LedDisplay (Number#)„„DIM SHARED DisplayLedX, DisplayLedY, LedDigits, OnColor, OffColor, apage, vpage„DIM SHARED GraphLedX, GraphLedY, GraphElements, GraphNum„„'This string, scrollmsg$, _must_ have a space at the end.„scrollmsg$ = "REAL PROGRAMERS USE BASIC... ": scrollclr = 14„„SCREEN 7„„t# = TIMER„x# = 0„DO„  x# = x# + 1„LOOP UNTIL TIMER - t# > 1„„x# = x# / 5„„RANDOMIZE TIMER„cx = INT(RND * 280): cy = INT(RND * 160) + 12„xd = INT(RND * 2) + 1„IF xd = 1 THEN„   xdir = -1„ELSE„   xdir = 1„END IF„yd = INT(RND * 2) + 1„IF yd = 1 THEN„   ydir = -1„ELSE„   ydir = 1„END IF„„digits = 1: fore = 9: back = 8„sloc = 40: slet = 1: stog = 0„„DO„„FOR Count# = VAL(STRING$(digits - 1, "9")) TO VAL(STRING$(digits, "9"))„„   x2# = 0„   DO„      x2# = x2# + 1„   LOOP UNTIL x2# >= x#„„   stog = stog + 1„   IF stog = 5 THEN„      stog = 0„      SCREEN , , apage, vpage„      LOCATE 1, 1: PRINT STRING$(40, " ");„      IF fore = 15 THEN„         COLOR 9„      ELSE„         COLOR fore + 1„      END IF„      LOCATE 1, sloc„      PRINT MID$(scrollmsg$, slet, (40 - sloc));„      sloc = sloc - 1„      IF sloc = 0 THEN„         sloc = 1„         slet = slet + 1„         FOR sc = 2 TO 25„            IF slet - sc < 1 THEN EXIT FOR„            LOCATE sc, 1: PRINT MID$(scrollmsg$, slet - sc, 1);„         NEXT sc„         IF sc = 26 AND slet - sc = LEN(scrollmsg$) THEN„            slet = 1: sloc = 40„         END IF„      END IF„   END IF„„   InitLedDisplay cx, cy, 0, 0, digits, 0, 1„   LedDisplay -1„„   cx = cx - xdir„   cy = cy - ydir„„   IF cx < 12 THEN„      xdir = xdir * -1„      cx = 12„   ELSEIF cy < 12 THEN„      ydir = ydir * -1„      cy = 12„   ELSEIF cx > 280 THEN„      xdir = xdir * -1„      cx = 280„   ELSEIF cy > 180 THEN„      ydir = ydir * -1„      cy = 180„   END IF„„   InitLedDisplay cx, cy, fore, back, digits, 0, 1„„   LedDisplay Count#„„   key$ = INKEY$„„   SELECT CASE key$„         CASE CHR$(27)„            EXIT DO„   END SELECT„„   IF (Count# MOD 100) = 0 THEN„      fore = fore + 1„      IF fore > 15 THEN fore = 9„   END IF„„NEXT Count#„„digits = digits + 1„„LOOP„„SUB InitLedBar (x%, y%, onc%, offc%, elems%, maxval%, v%, a%)„„apage% = a%: vpage% = v%„SCREEN , , apage%, vpage%„„GraphLedX = x%  '|- Upper Left corner of„GraphLedY = y% '|  Led Graph display„GraphElements = elems%  'Number of graph elements. Maximum 32„GraphNum = maxval% 'The number when the graph is 100%„„END SUB„„SUB InitLedDisplay (x, y, onc, offc, digits, v, a)„„apage = a: vpage = v„„SCREEN , , apage, vpage„„DisplayLedX = x '|- Upper Left corner of„DisplayLedY = y '|  Led Digit display„LedDigits = digits   'Number of digits to have on display„„OnColor = onc: OffColor = offc„„LedDisplay -1„„END SUB„„'LedBar: A simulated Led Bargraph„'-----------------------------------------------„'LedBar Number„'    Number = The current number you want to update the bar graph with„'-----------------------------------------------„SUB LedBar (Number#)„„IF Number# < 0 THEN 'If Negitive then blank Bar Graph„     FOR MakeGraph = 1 TO GraphElements * 2 STEP 2 'Make the Bar graph„          LINE (GraphLedX + MakeGraph, GraphLedY)-(GraphLedX + MakeGraph, GraphLedY + 5), OffColor%„     NEXT MakeGraph„     EXIT SUB„END IF„„Elements = INT(Number# * GraphElements / GraphNum) 'Calculate Number Elements„IF Elements > GraphElements THEN Elements = GraphElements 'Check limts„„'----------------- Draw Bar Graph --------------------------------„FOR MakeGraph = 1 TO Elements * 2 STEP 2 'Make the Bar graph (Lit)„LINE (GraphLedX + MakeGraph, GraphLedY)-(GraphLedX + MakeGraph, GraphLedY + 5), OnColor%„NEXT MakeGraph„FOR MakeGraph = Elements * 2 + 1 TO GraphElements * 2 STEP 2 'Make the Bar graph (Dim„LINE (GraphLedX + MakeGraph, GraphLedY)-(GraphLedX + MakeGraph, GraphLedY + 5), OffColor%„NEXT MakeGraph„'------------------------------------------------------------------„END SUB„„'LedDisplay: Generates a simulated Digital Led Display.„'------------------------------------------------------------„'LedDisplay (Number)„'    Number = The number you want to display on the Digital Display„'------------------------------------------------------------„SUB LedDisplay (Number#)„„SCREEN , , apage, vpage„„IF Number# < 0 THEN  'Setup Led Display panel„     FOR PlotX = DisplayLedX TO DisplayLedX + ((LedDigits - 1) * 8) STEP 8„          '----------- One LED Matrix digit --------------------„          LINE (PlotX + 1, DisplayLedY)-(PlotX + 5, DisplayLedY), OffColor%„          LINE (PlotX, DisplayLedY + 1)-(PlotX, DisplayLedY + 5), OffColor%„          LINE (PlotX + 6, DisplayLedY + 1)-(PlotX + 6, DisplayLedY + 5), OffColor%„          LINE (PlotX + 1, DisplayLedY + 6)-(PlotX + 5, DisplayLedY + 6), OffColor%„          LINE (PlotX, DisplayLedY + 7)-(PlotX, DisplayLedY + 11), OffColor%„          LINE (PlotX + 6, DisplayLedY + 7)-(PlotX + 6, DisplayLedY + 11), OffColor%„          LINE (PlotX + 1, DisplayLedY + 12)-(PlotX + 5, DisplayLedY + 12), OffColor%„          '------------------------------------------------------„     NEXT PlotX„     EXIT SUB„END IF„„Number# = FIX(Number#) 'Get rid of the decimals incase there are some„Number# = VAL(LEFT$(STR$(Number#), LedDigits + 1)) 'Chop Number to LED size„„PlotX = DisplayLedX„„IF LEN(STR$(Number#)) - 1 < LedDigits THEN  'Clear Unused digits„     FOR ClearEmptyDigits = 1 TO LedDigits - (LEN(STR$(Number#)) - 1)„     LINE (PlotX + 1, DisplayLedY)-(PlotX + 5, DisplayLedY), OffColor%„     LINE (PlotX, DisplayLedY + 1)-(PlotX, DisplayLedY + 5), OffColor%„     LINE (PlotX + 6, DisplayLedY + 1)-(PlotX + 6, DisplayLedY + 5), OffColor%„     LINE (PlotX + 1, DisplayLedY + 6)-(PlotX + 5, DisplayLedY + 6), OffColor%„     LINE (PlotX, DisplayLedY + 7)-(PlotX, DisplayLedY + 11), OffColor%„     LINE (PlotX + 6, DisplayLedY + 7)-(PlotX + 6, DisplayLedY + 11), OffColor%„     LINE (PlotX + 1, DisplayLedY + 12)-(PlotX + 5, DisplayLedY + 12), OffColor%„     PlotX = PlotX + 8„     NEXT ClearEmptyDigits„END IF„„„FOR PlotDigit = 1 TO LEN(STR$(Number#)) - 1 'Plot each number to a LED„„WorkDigit$ = MID$(STR$(Number#), PlotDigit + 1, 1) 'Get 1 Digit„„SELECT CASE WorkDigit$ 'Find and select which elements to turn on„     CASE "0"„          E1 = OnColor%: E2 = OnColor%: E3 = OnColor%: E4 = OffColor%: E5 = OnColor%: E6 = OnColor%: E7 = OnColor%„   „     CASE "1"„          E1 = OffColor%: E2 = OffColor%: E3 = OnColor%: E4 = OffColor%: E5 = OffColor%: E6 = OffColor%: E7 = OnColor%„  „     CASE "2"„          E1 = OffColor%: E2 = OnColor%: E3 = OnColor%: E4 = OnColor%: E5 = OnColor%: E6 = OnColor%: E7 = OffColor%„  „     CASE "3"„          E1 = OffColor%: E2 = OnColor%: E3 = OnColor%: E4 = OnColor%: E5 = OffColor%: E6 = OnColor%: E7 = OnColor%„  „     CASE "4"„          E1 = OnColor%: E2 = OffColor%: E3 = OnColor%: E4 = OnColor%: E5 = OffColor%: E6 = OffColor%: E7 = OnColor%„ „     CASE "5"„          E1 = OnColor%: E2 = OnColor%: E3 = OffColor%: E4 = OnColor%: E5 = OffColor%: E6 = OnColor%: E7 = OnColor%„  „     CASE "6"„          E1 = OnColor%: E2 = OffColor%: E3 = OffColor%: E4 = OnColor%: E5 = OnColor%: E6 = OnColor%: E7 = OnColor%„  „     CASE "7"„          E1 = OffColor%: E2 = OnColor%: E3 = OnColor%: E4 = OffColor%: E5 = OffColor%: E6 = OffColor%: E7 = OnColor%„  „     CASE "8"„          E1 = OnColor%: E2 = OnColor%: E3 = OnColor%: E4 = OnColor%: E5 = OnColor%: E6 = OnColor%: E7 = OnColor%„  „     CASE "9"„          E1 = OnColor%: E2 = OnColor%: E3 = OnColor%: E4 = OnColor%: E5 = OffColor%: E6 = OffColor%: E7 = OnColor%„END SELECT„'Plot the LEDs to the screen------------------------„LINE (PlotX, DisplayLedY + 1)-(PlotX, DisplayLedY + 5), E1„LINE (PlotX + 1, DisplayLedY)-(PlotX + 5, DisplayLedY), E2„LINE (PlotX + 6, DisplayLedY + 1)-(PlotX + 6, DisplayLedY + 5), E3„LINE (PlotX + 1, DisplayLedY + 6)-(PlotX + 5, DisplayLedY + 6), E4„LINE (PlotX, DisplayLedY + 7)-(PlotX, DisplayLedY + 11), E5„LINE (PlotX + 1, DisplayLedY + 12)-(PlotX + 5, DisplayLedY + 12), E6„LINE (PlotX + 6, DisplayLedY + 7)-(PlotX + 6, DisplayLedY + 11), E7„'--------------------------------------------------„PlotX = PlotX + 8„NEXT PlotDigit„„PCOPY apage, vpage„„SCREEN , , vpage, vpage„„END SUB„Claude GagnÇ                   ICON MAKER V1.0                cgagne@globalserve.on.ca       08-16-96 (09:25)       QB, QBasic, PDS        486  11658    ICONMAKE.BAS'****************************************************************************„'*                     [ Icon maker  Version 1.0 ]                          *„'*                   [ Claude GagnÇ, Toronto, 1996 ]                        *„'*            [ You can Email me at: cgagne@globalserve.on.ca ]             *„'*                                                                          *„'*     [ You can modify this program but please, give me some credits !]    *„'*                                                                          *„'*                [ This program make 50 X 50 pixels icons ]                *„'*            [ You can load those icon by using BLOAD command ]            *„'*                                                                          *„'*                 The mouse routines have been taken from                  *„'*                        Le Grand livre du QBASIC                          *„'*                         (c) Micro Application                            *„'*                                  1992                                    *„'****************************************************************************„„DECLARE SUB fenetre (xup%, yup%, xdown%, ydown%, aspect%, couleur%)„DEFINT A-Z„„DECLARE SUB initsouris ()„DECLARE SUB souris (OnOff%)„DECLARE SUB FormeSouris (SoftHard%, BMasque%, CMasque%)„DECLARE SUB SetSouris (X%, Y%)„DECLARE SUB TempoSouris (Tempo%)„DECLARE SUB zonexsouris (X1%, x2%)„DECLARE SUB zoneysouris (Y1%, Y2%)„DECLARE SUB getsouris (Mode%)„DECLARE SUB attendrelachebouton ()„DECLARE SUB attenddeplacement (Mode%)„„„DECLARE SUB ReadData ()„DECLARE FUNCTION Interr% (Num%, ax%, bx%, cx%, dx%)„„DECLARE SUB ABSOLUTE (Fonction%, par1%, par2%, par3%, adr%)„„„„'**********  dÇfinir les variables globales  **********„„DIM SHARED sourisx%, sourisy%, sourisk%       '*** position et bouton de la souris„„DIM SHARED PM%(45)                      '** tableau pour le programme machine„ReadData                                '** lire le programme machine„„„„„„SCREEN 12„initsouris„CLS„„ON ERROR GOTO gestion„„DIM tampon(1 TO 1432)„„CALL fenetre(0, 0, 639, 479, 1, 7)„CALL fenetre(10, 10, 270, 270, 0, 0)„CALL fenetre(280, 10, 340, 70, 0, 0)„„CALL fenetre(286, 16, 335, 65, 1, 7)„GOSUB miseajour„„CALL fenetre(280, 235, 629, 270, 0, 0)   ' FENETRE COULEUR„„FOR c = 1 TO 16„LINE (c * 20 + 280, 240)-(c * 20 + 300, 265), c - 1, BF„NEXT c„„CALL fenetre(280, 80, 340, 140, 0, couleur1)  ' fenetre couleur1„CALL fenetre(280, 150, 340, 210, 0, couleur2) ' fenetre couleur2„„CALL fenetre(350, 10, 629, 225, 0, 0)    ' FENETRE FONCTIONS„„CALL fenetre(10, 280, 629, 469, 0, 0)    ' FENETRE TEXTE„„LOCATE 2, 46: COLOR 14: PRINT "Functions List"„COLOR 15„LOCATE 3, 46: PRINT "F1 - New Icon"„LOCATE 4, 46: PRINT "F2 - Save"„LOCATE 5, 46: PRINT "F3 - Load"„COLOR 7„LOCATE 6, 46: PRINT "F4 - Not Avail."„COLOR 15„LOCATE 7, 46: PRINT "F5 - Shadow (Up)"„LOCATE 8, 46: PRINT "F6 - Shadow (Down)"„LOCATE 9, 46: PRINT "F7 - Shadow (Left)"„LOCATE 10, 46: PRINT "F8 - Shadow (right)"„LOCATE 11, 46: PRINT "F9 - Erase/Fill"„COLOR 7„LOCATE 12, 46: PRINT "F10 - Not avail."„COLOR 15„LOCATE 13, 46: PRINT "ESC => exit"„„„souris 1„DO„getsouris 0„clavier$ = UCASE$(INKEY$)„„IF clavier$ = CHR$(0) + CHR$(59) THEN„„CALL fenetre(286, 16, 335, 65, 1, couleur1)„GOSUB miseajour„END IF„„„IF clavier$ = CHR$(0) + CHR$(60) THEN GOSUB sauvegarde„IF clavier$ = CHR$(0) + CHR$(61) THEN GOSUB chargement„IF clavier$ = CHR$(0) + CHR$(62) THEN GOSUB changercouleur„IF clavier$ = CHR$(0) + CHR$(63) THEN GOSUB ombrerhaut„IF clavier$ = CHR$(0) + CHR$(64) THEN GOSUB ombrerbas„IF clavier$ = CHR$(0) + CHR$(65) THEN GOSUB ombrergauche„IF clavier$ = CHR$(0) + CHR$(66) THEN GOSUB ombrerdroite„IF clavier$ = CHR$(0) + CHR$(67) THEN GOSUB remplissage„IF sourisk% = 1 THEN„IF sourisx% > 285 AND sourisy% > 235 AND sourisx% < 624 AND sourisy% < 265 THEN„souris 0„couleur1 = POINT(sourisx%, sourisy%)„CALL fenetre(280, 80, 340, 140, 0, couleur1)„souris 1„END IF„„IF sourisy% AND sourisx% > 285 AND sourisy% > 235 AND sourisx% < 624 AND sourisy% < 265 THEN„souris 0„couleur2 = POINT(sourisx%, sourisy%)„CALL fenetre(280, 150, 340, 210, 0, couleur2)„souris 1„END IF„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF sourisx% > X * 5 + 10 AND sourisy% > Y * 5 + 10 AND sourisx% < X * 5 + 15 AND sourisy% < Y * 5 + 15 THEN„souris 0„LINE (X * 5 + 11, Y * 5 + 11)-(X * 5 + 14, Y * 5 + 14), couleur1, BF„PSET (285 + X, 15 + Y), couleur1„souris 1„EXIT FOR„EXIT FOR„END IF„„IF sourisy% AND sourisx% > X * 5 + 10 AND sourisy% > Y * 5 + 10 AND sourisx% < X * 5 + 15 AND sourisy% < Y * 5 + 15 THEN„souris 0„LINE (X * 5 + 11, Y * 5 + 11)-(X * 5 + 14, Y * 5 + 14), couleur2, BF„PSET (285 + X, 15 + Y), couleur2„souris 1„EXIT FOR„EXIT FOR„END IF„„NEXT Y„NEXT X„END IF„LOOP WHILE clavier$ <> CHR$(27)„souris 0„CLS„END„„miseajour:„souris 0„FOR X = 1 TO 50„FOR Y = 1 TO 50„LINE (X * 5 + 11, Y * 5 + 11)-(X * 5 + 14, Y * 5 + 14), POINT(285 + X, 15 + Y), BF„NEXT Y„NEXT X„souris 1„RETURN„„ombrerhaut:„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF POINT(285 + X, 15 + Y) = couleur1 AND POINT(285 + X, 14 + Y) <> couleur1 THEN„PSET (285 + X, 14 + Y), couleur2„END IF„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„ombrerbas:„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF POINT(285 + X, 15 + Y) = couleur1 AND POINT(285 + X, Y + 16) <> couleur1 THEN„PSET (285 + X, 16 + Y), couleur2„END IF„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„ombrergauche:„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF POINT(285 + X, 15 + Y) = couleur1 AND POINT(284 + X, 15 + Y) <> couleur1 THEN„PSET (284 + X, 15 + Y), couleur2„END IF„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„ombrerdroite:„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF POINT(285 + X, 15 + Y) = couleur1 AND POINT(286 + X, 15 + Y) <> couleur1 THEN„PSET (286 + X, 15 + Y), couleur2„END IF„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„changercouleur:„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„IF POINT(285 + X, 15 + Y) = couleur1 THEN„PSET (285 + X, 15 + Y), couleur2„END IF„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„sauvegarde:„souris 0„LOCATE 20, 5: PRINT STRING$(65, 255);„LOCATE 20, 5: LINE INPUT "Sauvegarde [.ICO]: "; fichier$„IF LEN(fichier$) = 0 THEN GOTO finsauvegarde„„GET (286, 16)-(335, 65), tampon„„DEF SEG = VARSEG(tampon(1))„BSAVE fichier$ + ".ICO", VARPTR(tampon(1)), 1432„DEF SEG„BEEP„„finsauvegarde:„LOCATE 20, 5: PRINT STRING$(65, 255);„souris 1„RETURN„„chargement:„souris 0„LOCATE 20, 5: PRINT STRING$(65, 255);„LOCATE 20, 5: LINE INPUT "Chargement [.ICO]: "; fichier$„IF LEN(fichier$) = 0 THEN GOTO finchargement„„DEF SEG = VARSEG(tampon(1))„BLOAD fichier$ + ".ICO", VARPTR(tampon(1))„DEF SEG„„PUT (286, 16), tampon, PSET„„GOSUB miseajour„„BEEP„„finchargement:„LOCATE 20, 5: PRINT STRING$(65, 255);„souris 1„RETURN„„„remplissage:„„souris 0„„FOR X = 1 TO 50„FOR Y = 1 TO 50„„PSET (285 + X, 15 + Y), couleur1„„NEXT Y„NEXT X„„GOSUB miseajour„souris 1„RETURN„„gestion:„BEEP„BEEP„RESUME NEXT„„„MS.Data:        '***** DATA du programme machine pour Interr%()„ DATA 55,8b,ec,56,57            'sauver le registre„ DATA 8b,76,0c,8b,04            'chercher AX Ö DX„ DATA 8b,76,0a,8b,1c„ DATA 8b,76,08,8b,0c„ DATA 8b,76,06,8b,14„ DATA cd,21                     'INT 21 (numÇro modifiÇ !)„ DATA 8b,76,0c,89,04            'rÇÇcrire AX Ö DX„ DATA 8b,76,0a,89,1c„ DATA 8b,76,08,89,0c„ DATA 8b,76,06,89,14„ DATA 5f,5e,5d                  'chercher le registre„ DATA ca,08,00                  'RETF 8  =>  fin„ DATA #„„„SUB attenddeplacement (Mode%)„'** Attendre le dÇplacement de la souris ou l'appui/relÉchement du bouton„„ getsouris Mode%„ X% = sourisx%: Y% = sourisy%: K% = sourisk%„„ DO„  getsouris Mode%„ LOOP UNTIL X% <> sourisx% OR Y% <> sourisy% OR K% <> sourisk%„„END SUB„„SUB attendrelachebouton„'** Attendre le relÉchement du bouton de la souris„„ WHILE sourisk%„  getsouris 0„ WEND„„END SUB„„SUB fenetre (xup, yup, xdown, ydown, aspect, couleur)„„„IF aspect <= 0 THEN„        surface = 8„        ombre = 15„        lumiere = 8„END IF„„IF aspect >= 1 THEN„        surface = 7„        ombre = 8„        lumiere = 15„END IF„„LINE (xup, yup)-(xdown, ydown), surface, BF„„LINE (xup, yup)-(xdown, ydown), ombre, B„LINE (xup + 1, yup + 1)-(xdown - 1, ydown - 1), ombre, B„„LINE (xup, yup)-(xup, ydown), lumiere„LINE (xup + 1, yup + 1)-(xup + 1, ydown - 1), lumiere„„LINE (xup, yup)-(xdown, yup), lumiere„LINE (xup + 1, yup + 1)-(xdown - 1, yup + 1), lumiere„„LINE (xup + 3, yup + 3)-(xdown - 3, ydown - 3), couleur, BF„„„„END SUB„„SUB FormeSouris (SoftHard%, BMasque%, CMasque%)„'** DÇfinir l'apparition du curseur de la souris„„ R% = Interr%(&H33, 10, SoftHard%, BMasque%, CMasque%)      '** dÇfinir FormeSouris„„END SUB„„SUB getsouris (Mode%)„'** Chercher dans SourisX%, SourisY% et SourisK% la position de la souris et l'Çtat du bouton„„  R% = Interr%(&H33, 3, bx%, cx%, dx%)„„  sourisk% = bx%                  '** bouton (1=gauche, 2=droit)„ „  IF Mode% THEN„   sourisx% = cx% / 16 + 1         '** position X (mode texte)„   sourisy% = dx% / 16 + 1          '** position Y (mode texte)„  ELSE„   sourisx% = cx%                  '** position X (mode graphique)„   sourisy% = dx%                  '** position Y (mode graphique)„  END IF„„END SUB„„SUB initsouris„'** Initialiser le gestionnaire de la souris„„ R% = Interr%(&H33, 0, bx%, cx%, dx%)   '** initialiser le gestionnaire de la souris„„END SUB„„FUNCTION Interr% (Num%, ax%, bx%, cx%, dx%)„'** RÇaliser l'interruption numÇro Num% avec les contenus des registres de AX% Ö DX%„„ IF PM%(0) = 0 THEN                     '** PM%() est initialisÇ ?„  PRINT "ERREUR : programme machine absent ! Arràt!"„  END„ END IF„„ DEF SEG = VARSEG(PM%(0))               '** dÇfinir le segment„ POKE VARPTR(PM%(0)) + 26, Num%         '** mettre en oeuvre le numÇro de l'interruption„„ CALL ABSOLUTE(ax%, bx%, cx%, dx%, VARPTR(PM%(0))) '** appel„„ Interr% = ax%                          '** valeur retournÇe prise dans AX%„„END FUNCTION„„SUB ReadData„'** Lire les DATA pour le programme machine dans PM%()„„ RESTORE MS.Data„ DEF SEG = VARSEG(PM%(0))„„ FOR i% = 0 TO 99„  READ Octet$„  IF Octet$ = "#" THEN EXIT FOR„  POKE VARPTR(PM%(0)) + i%, VAL("&H" + Octet$)„ NEXT i%„„END SUB„„SUB SetSouris (X%, Y%)„'** DÇfinir la position du pointeur de la souris„'** X% et Y% sont en coordonnÇes caractäres en mode texte„„ R% = Interr%(&H33, 4, bx%, X% * 16 - 16, Y% * 16 - 16)„„END SUB„„SUB souris (OnOff%)„'** Allumer / Eteindre le pointeur de la souris (0=Çteint, 1=allumÇ)„„ IF OnOff% = 0 THEN OnOff% = 2 ELSE OnOff% = 1„ R% = Interr%(&H33, OnOff%, bx%, cx%, dx%)„„END SUB„„SUB TempoSouris (Speed%)„'** DÇfinir la vitesse de la souris (0=rapide, 100=träs lente)„„ R% = Interr%(&H33, 15, bx%, Speed%, Speed% * 2)„„END SUB„„SUB zonexsouris (X1%, x2%)„'** DÇfinir la zone de dÇplacement horizontal de la souris de X1% Ö X2%„'** X1% et X2% sont des coordonnÇes caractäres en mode texte„„ R% = Interr%(&H33, 7, 0, X1% * 16 - 16, x2% * 16 - 16)„„END SUB„„SUB zoneysouris (Y1%, Y2%)„'** DÇfinir la zone de dÇplacement vertical de la souris de Y1% Ö Y2%„'** Y1% et Y2% sont des coordonnÇes caractäres en mode texte„„ R% = Interr%(&H33, 8, bx%, Y1% * 16 - 16, Y2% * 16 - 16)„„END SUB„Gerald Filimonov               ANIMATION FACTORY V1.0         kwmelvin@nr.infi.net           03-26-95 (12:50)       QB, QBasic, PDS        137  8847     ANIFACT.BAS 'Animation Factory 1.0, Copyright, 1995, All Rights Reserved„„'    This program was created using Qbasic, a programming language that comes„'with most DOS packages.„„'    This program will allow you to edit a series of frames and play them „'back in a certain order. You may choose between four colors and a couple of  „'editing techniques, such as Cut,Copy,Paste,DrawLine, etc.„„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"ANIFACT.ZIP",4^6:Z&=6074:?STRING$(50,177);„U"%up()%9%%%I-%:0/ICzA;:oK3R%%(=%%%1%%%%fs%nrfy%jWSg7fxfB):B?^lk4„U"zuIDyczR3']5a+lo5?7;o5?,:9&ZW9OLd]OmF1w:R4n?'pdJ>I\52s%:5X3o'BP„U"ENUHE-)RDc0MTFY-qF%\6m?>&.44SQulErrhb:n[>>q7p+RbeWD<I+Fqg'arFxh„U"Hu$0l>WnLqk27NNhmeT_X&5-U%ZfVG&l6rC/0S3IZ]x?=s]#f#,;jEi#$=;'f=t„U"8u3\/6u</wqo=C.5u\%))9>&$.9>/$.C]Id45z//&p&5w8gQb2jm#9S.OP((sK(„U"YZYdCuw)=9pr'6&.)M'&m]%vrZZgWa)%yJ1nC5u$LFgLenj%I?D;I\(e0]D%W:<„U"iHmZ-7U(*iKe$VIeRq^zZv'?)0L,:+Yu;yPw_PnX(1$6'q7*.vX9RV'Sk-WW+\k„U"6lDsX1iB1PZ?AZN5EQ></b>=X$6.pf.bnUh'Q-XfXq%:-YlG-E-4h2reA'b2nP*„U"4>zdRr6)9i%0I4PZgMlPOcV]pIJjTvz*b+K=qA:3538l;u/l&o1l\R3o(l:;Gbl„U"UsxL$X#VYo$Vz2z=V17Shq0YAw)'a),:Tmd/5b+MsB<U-n?$01-nIUhr4dnYPgQ„U"cF_/BnllhGV>vp6?lB[ke>;$9DU%E:]0e[Z_N:Tu42x:QKh0$12VR7QC;b2QLg/„U"6lqMiW%VMf33m4TbKMKG?GH9#mMRGJh,IYuEB/G5\[r5BDnqF1EZG<6CE%MvnF[„U"34gCuq>Y5HhtBIs:KK35QMeB.LL-nlL$d\YvB]cZV\ix%Gg'mVi,(+kxPBS.0TM„U"6A\w<Q+50dID(vek;+$xm%8:3*Xo]ZP]%u9lXjpiOXoV#rt?m&G1lNKIFb1c>j1„U"ureE#rANs]iTwWr_Iv.F%Nk6xQRqCcba0=t2>(*:Y==HV:F/IB%yuU+S'pKI5y9„U"9;nf'C-+fO?J7D-&oU.EBeV'Z_D-gY\3$,;/J+G-W$ij1&35%C^#k5).(%2x7('„U"oEXkRIO]9d(YQQMOO]8'e3'Fg=D99I_=)S;(m$*4f1^&O841ES:%Z1A/PD/,1l8„U";R:+'xi?m[s-)x>sja#a)r-.Tlf\C.DW_?dd57%>8rv+*;k&=i>WP9%<-UZb]qx„U"88B6&sSV,f=90lP[iBWs0=9%NIBJgtU_fML:3a^)hc3XKQe)rMFQw^fYTV5&W's„U"7pDU4R4Ju)#A0C75G%t/sPe0on;=RXG4[TWGV]GcRy#ARbooEAP>b9%3n2*fFI_„U"B5-goVFs\^hU3s;k84Ska'g;[u(N]h+Xr1.=$[PjNbI_+Vn.o^*+-Z,oQ8D0\0(„U"w_O+V[c)XoH1=$\8jpwAE)aFjAeAS]+q+UMN=Y4Z;8JV$shco5Bf,v=R$$4_t:E„U"82)Q)Z59eVOp7sb[XM=4Os'hBJ&u<\f:t$p&+RJPHvXc;ll_Z8<wT(]X3.fqBF_„U"A(P3?aiLJD8fZ094bJW=sB=P:Wrt]ms%Y/[=AUdD]H+#sPni/2<F(O2,XlrszC?„U"FAl*etI0OH8\&E3%xL)pzDejxKfgVEz\b?%$3*gwFB>?%$Nh$Sl_.\a:tb7qYYh„U"bCD*[Fz>=4guKKMcEUc-N587v)sccY'$t??uV*>AJc5Z#:$3w-GFsgql1Pvs%Ie„U"$6\.TAi]SHj+\EV5_*rTE#4/+#*nH_n5[4ct;%<Q7\<oMbr:mrZzUNs3cKSa>=k„U"m#j$QF6R&iTjz6VR&TXDV2TxE(EJMYJlMx;bi$RhIV2#qi:K)\I/f_4ic/sqqF9„U"t8N'j,%hz\mY]\LKKj,5V+KDR2(SST8i9N$+ebQ(mtDp0X8e&f$.0u3h]A\IDmu„U"uo$-Q8mh-b_2NZ4#Km.E#E9^q)0bpH/wo$'VIdGI.'xZM]Yc8jr3-bnp+7--RVi„U"\mBGHSS-gq%=(YT%k;aCSFZCl:nqij0VQ+MjzU,S7XZTM:&CAcB0Y^g2#$8Q4'+„U"hd>_^<GTq,B]ZxWB4_Cvno4b1>GrRl*hFVGE5m?W]Q*\6h<nqvE3Wn?i=p.70q1„U"hU>UCjdrkfRzuZY>.&_XsR+4b'Op_1jb==RWOI$=VuA$4:WrhZ6#\ICW%k\V*/D„U"D-^1eOW#y+]]qWE*4P6T,,)ASOaGkw%;7&xBI:ln4<q5:\<;&7m:;jvPLK0W7mg„U"<<ajd0iZZ\:)nTF]'&I_S&y3.Iu5$;jAZSwxobgl,044F56M_?^%pN[h>&+XJ:g„U"H.vsejGF$L(yf^?4gT>3M^'RQ9MYRfi76+hInK;PMGAgb^)nvfCInS*/<?9EgLv„U"K]/=nqP]eHA:CT\[vX_Jcw1BLNgS+?Vo;fv=:Sm#iNl<0$mk7g<37&6Fk9.eU_-„U")c>3.[(h9JpKENF>g.7(_e)k=HsvKa>qDQZ%m<Z<%sgs[s=*fP=\Q3g?l%,uNoX„U"/-GUqf.]^5)&-/'TLfovEp1y8h>xO_kPX9j&&o]VJO>*$rjMk(JbTef?KhO4o82„U".;o+rS-*E5z$bP%\ExhR(X^b5mSlacCU7LLh#K+\__l+*?UBh#q0D;c[[N.>n0&„U"5$hZS$]Gfu+3'_wFO)S(eaVK^2'nbDJfR8[%nWp$.Ull=nX^S=b[E8<Z1\:ha>Z„U"Xl5N?k<8oSH^gBL$u]x0pa0lRxn5mR1gEUAB9Fu63u,u]&rI74m>[qneNb9<y>/„U",wMrHU#k#M69-QK[cM-/#lvgssE8)ORlV0)[hZTYE#u#5H<y?Sm]/sg_VXp8><A„U"n8^qZC%1P#6Uj9[PJ-q%#2'Pi&-9L%1mFUtiAfV]s&a%o9D+d/B[>DGlAI^DWU2„U"s173b83h7=t3:Qk%X+Y+e-:/wNtq[)p>?=wZ97L;+;3g*KyY)QH_a=^wvW??xaf„U"Cl4uAY<HN30FlK$TrAIK+8X_n76pu=;i[jK;f/XnL[[bnr)MN21oeE1PI5*wAkJ„U"v/5#*kQhRhg#alE2c(,Y76&)N&]D$^t4iaTZt3MLs7+g9>O7F7Ne./+mr6pNBHZ„U"K-5wqhGuij6RbmmhtCA/h<pM(%6wzi3zORDT2,\).KRA2*oX;,v3py=;[jYma7>„U"qOMN1&q(?)m:I5QV#9pg,)uFY4%eR2whsub:<5Rr=*&evW7gwC4NjA8xQamSb/1„U"sW%I8N;bahdk.YqAgDE$QzTj:A*P7P#)XWT$wjtVbmMuMC/riUe%:5z<d/>#BEX„U"MfX:t3['zMp^4]:Vx%qz1ts:bh$)(gmXq]8q$8JU5Qhu(Ae^UFH$3X;c.NWVV<-„U"O/$kD_tbaMY<Mka%K3edr:,jlGikafV8/>=dsP]]Xv8AlG&f\IW76bsA(#K-HpL„U"?Ese4dhm]E<E+3YXwd&0$aya;V6jJiX$5m=p'*waL6k#^'jw'SR;co*UOLJnGpg„U"(=oh+n3>Pxw%1Jt$&WFLD$ZUOp:,FMfkzlpfr8<o(<qUc_nm-(mrbSb\DORzYJL„U"wdTU'a_C**+6+Mn$55Zp&LMr\S#0f)H+_T<sqP4LlpPluYdrr]fZmbfNWb;eABv„U"+,7WEU,xO=77D]tj[Bb*a2L+:?$rekc[SPLMmk8mT?YH]_87qIko0#&by5cJm88„U"J;c-4c8LoUd3_74tqT:Itg:TMS17P0-:-AvT#u(+*pgz2f>PqNsO:Lc*El\kxJt„U"2$aPCm3X;<.p&[e7PIkqMR-+p:+-k[pbnwuaeFoM_LcYAwuLtXiDW:]M'ogGwJz„U"pNO?Gj7<T>B%b2uE&6'0Zqmym)5KBZSGt<+mI8w.z-LLYJ>9=2Sh7<HUQ?[w\p?„U"R;<bZu),+;VJZpO1JVINN&;Xt+;shm[85R$KwCkD8],>f[BK'GJkt_e:Mr,z^k:„U"0vlTtVtlI\0Lno)]3OlTAyo.CIrSPu\agVBkTh^<';Jkqkq^AsB1zX0K_Nxt%)[„U"e)17[U4mA0KdER-RJi%$3CsK<86Bin0Gie\>As+8t[n5DO:/E^(zOZ^K)Bo?hSb„U"_6k95&o=X^oaZv(^c<RR2g2ZSd/6AU\\4gm.NhQWHo57bDJ[oo7OhOmxTqpPL7f„U">[mfK7=CD>Rjm&[ZOJ%lHXW/gnhtJ0$De>uKa4$wC7;w7$tPtt434byvX>R?ziB„U"1t'Tgzb\G9-z4*<h_=XaNad#P^Y&N6D=7i_ShkQ5(0&5+^XPH^HiQIJG%Oe\%gq„U"J?8vyjlLn6FSF&\(/3(]$RrTNmJqGRZ)daZ=h6]#:/QWoS\7Ze\+W=sUbA%bEcI„U"AsE'RIqHHaO5Jr(dj0aMtas)v%a:3SlsG9;RDXB_VyHS<]%i$]xG+DwTJ)7cq']„U"6BL06s'.ZgzU%F?N?CPsyca9?,5h\Z=&I3%CHqC:Pvm2(^u8iAbO'm(c/.;O%:6„U"-/To4hhzxYQYXwr\ivba)spvEDNwJAabmmmHW\eNvJ[*1n>8K7#5gw4Il]tPb;-„U"B3Aocowm7W.Pd8ycu<Z.9&K/;pnb#w,/&1qz\5:e?2s&#1P$)Gj-Qq5>h?#c0zN„U";)=\[,]rptat2AQsqfw%dTYoj\a94n5\%qD,eJ9ncjUYx:5;O;q:P.WZZ)(I<pa„U"n3nZYvn$n=9bSlF]3U:f+[8Bj;^?+Rik'T[aZMgayGREglyeGdg[S0f9f;sG_2q„U">*=I%W'NN-WO2t_A%ROU':6J6ViMal6<12$ok(JaKvYIkn&s(Pq.r7Njb-D5&ik„U"+i?q:uW5&sf]XHCmr'Vfgorl]A(6WQl+ub,(M78W*YY^7\0_H[X=QJ+paTOn&1I„U"=gw%9L2:I$R7ttOOCpWUY0RfKbV;<ZqiAhYUX#\r9qF*'tCLiZ8y3OM.AlI/2I&„U",_sAQ.USlsoP4sj9e+Da(9qi*.7X^R>[Nv?j);&[hN1_Q:;z^?jk7&DiFbMj2/Z„U"]P;d3x(%up()%9%%%I-%+5JICm.&;eq(m%%OA%%%0%%%%fs%nknq%jSngjVfl:/„U"9809IkLTO;Cl1;P&jNYBY898OD>L?Gtl9#5%\L75FgL<c:xs-HWt28s..=q,n,M„U"A7$IlhE82?tZvjvLrPLt3cd/B-<>lIfZL-QO^vK5hW>Z1llRnMmGMnaI\-?%&4\„U"939(KrV>>dBaka>^EWDZfl+u(P#LZ$Lth6V(mlBGp(o9r+AM.qk2W:ObJ:C>4Tr„U"UB3Mrh[-,(uP#L$lLthXE(mLn\f+ed#2MWY\-kXAAwk>l'BMrkJ:W9blJH+(lP#„U"b$uLtJtZNlaHn8%-WGOs<rifR-NM$K[-4l-XcBQ=lCjZS_U:on6TQRp8StBPd^u„U"jmrmkMmM^1aI-?a%F\Y2y]1<Tujn&Q:(Z\?ta62TB,dbh^%aTpK\gSRca[A06cm„U"cknW^U$(mlGdp(orX+MJ(qIDv3<7)W*lXM&L9Jp*c_H>JrLUuwck#A=Pj44-(;^„U"vHLWprpzZ$B$t[&e(S/MpO+d%27t%R&?%pYof0^)7%I>O/X7&o&e(QSw=O#+%2o„U"#&Y%7.%2o&R5#)imcS/8Hxuyv[&Y%S>=9^Z8S+I%/W2'Do7A/VBvk<Fi06;;0l\„U"S+fI%_pU(ekx0n[x\CFKwi_#H2jgrSUI^%o&S;OvsdWW_UOlN-har7xa7u2a7B'„U"Q5?%=YY+?$kF#)ei[j5e=_HV3u#v&#e(s:T9w7Ke6c,8ec,^gAj-c<4K3>O$3>S„U"3S>W3>U[HVCuk3r\.s(O+kkOO>QmNJJlU0MvOOqn&7(,prU)NdjPXgjYigjZgVj„U"[gjCr-\lr5=w10L%o&nvZYihTKBUt>usafpDM28>Gq$fXqCXUyCX+PCX3CrX;k3„U"lb]Dl%4]2%1??)(uObTxu2(cnuZTfbmJek3YXH:.QOFKY8-\nKYIVUfiaDbBrd5„U",p=JtWCAA?%\-v4%#,M[4*i]F[95hxN%R#cXU&8%aps(Qi>_;g+90,YO2Hlt+pT„U"j+)0%?%r\8O2L%G75&;Ag+eZQ-tBS&7%2%%?%%Y(%O+%%%2%%%?%%Y.%%7%+%I%„U"%\o&%i'xh(%\7%%I.%%o&%%e(%&O+%%%2%%?m%%Fi%8up(%)9%%#%-%+)5ICTVq„U"K;Z[%%%O'A%%0%%%%f%snkn%qjSnmgWfM%f2%ER1))beU&SEX*kqp\7.KqiJY7H„U"4oG->=&w^%8?%Y%09&O(%%,%3%%A%]^%?%YF%9&O%(%,%%3%A%.]%?%9Y%9&&O(„U"%,%%3%A#%]%?a%Y%9(&O(%%,%3%%A%]%8?%Y%09&O(%%,%3%%A%]^%?%YF%9&O%„U"(%,%%3%A%d]%G[%'up(%)9%%#%-%<)?ICNS%2aB%(%%7%,%%/%%%%w%jfir#jSy„U"'(yLyr,BT[5$6:kx\0Lbmduk2DN.,FuO,>])N4Yt'7sXB2(GfIKUEe:Vs=vtgg7„U"qt?^st0jli)>pBf'Xz##:Y(Dgza_uT:b]LIR:9JFs&DuAYmcKcaRhFViEOnV,ma„U"3/'[l-\JlY#^Z-P-Y>m8m5;ihH*OC)(ldx2bCChg%u*QEDI<PGf8v-$g>wPLg-9„U"c&Dqy]MK&'Wa(D^_B;97A,W1('pFzr<5?qBDgkil%?#u,$Y&aK;_K)/fo0J(duU„U"W^8cCRoZ9T#wQ?0O#]0'SWZlI<9N$aPIrYO8#8g,fPiC20RphB-uwCDkpFfG1j^„U"Yf&f$Y&?GP:O*E:z98km>rqgP9Us+#_>XZRoWrOR\FxVg*]E%hwXyOESDi1zBGM„U"X>(:_3gR\C92dZ/&<+6,.k+&6n[]<6XK=4SP#O=*R7tVMa59-A[S^1zr8Fc.,e(„U"#P0#,XzasYZ1K9nDJ84m<?r7T*0_P0E7%3bMJLVWddB:%R1OoX48ji2Fq&AioE1„U"GTtLZ-q/G&3J1'bZcU9v^C99.EaMzGtZ37wv/7eI4YARqWmusvjAS1,%um7hB?#„U"e#1L-bpL_o>CG.HJe/<PNEkmPk9Q;iN7]xuLme#NE:r<pEj:\Lbk,-Vm-u.=',^„U"'qMVrfu[oVk5Mr^uk^xL5TaAS/VE?tB[(W(eDn[;J-pu3smLLINF_(xR-.FrQ\?„U"aw5Me=;d0L=EWa>HlmA8gBTUc;_\gSgb.<JgP*VDe6=0Iknf78rIWiimTt\KoM.„U"e$ffbQbTy)3.0>j]()*LNlZC4AozkuVz>G..MRb&iEl=t_9gR$[pyF3Wv4&xAb^„U"zHt]WD/PddI?A/a_MSVIiz_.-&uf:3Y]hVePPFl92&H<IzQ-WJ;df-X*mn^C\8s„U"B\57ru]09(w7<,JG]HMSOCbih*V]Jn.4awHaR&$V+]-vlxV0]0m>FDs)K?Cgu'$„U"/a'VLajC8T2$5D1&KoQV*arJ4iV,Qh1oL3I$C)LK9bGn[&TW_^#\/Q7/mEzE2<V„U"[%8i+%*UOH,Ss9_-)a/qmkZMM\7BiRINQM):*h1Lp^h[BBTw*WFSoST4tAu]r]^„U"hvpzfh]&>K^o-zGW?/jUK7VKB>O^*b6U*N&%up&'%9%9%%%%-%2:0ICJzA:o'K3„U"%%*(=%%%1%%%%%%%%%&%E%%%%%%%%%fs%nrfy%jWSg%fxup%&'9%%9%%%I-%+5J„U"ICm.&;eq(m%%OA%%%0%%%%%%%%%%%%E%%%'u3%%%fsnk%nqjS%ngVu%p&'9%%9%„U"%#%-%+)5ICTVqK;Z[%%%O'A%%0%%%%%%%%%%%%E%%(%#7%%%fsn%knqj%SngW%u„U"p&'%9%9%%%%-%2<?IC^N%2a&B(%%%7,%%%/%%%%%%%%%&%E%%%%J8%%%wj%firj„U".Sy'y%up*+%%%%%%)%)%']%%%'9;%%%%%„END SUB„CLOSE:IF S=204AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Steven Sensarn                 RAY CASTER WITH KEYBOARD ISR   comp.lang.basic.misc           08-17-96 (20:04)       QB, QBasic, PDS        519  20378    RAYCAST.BAS 'Here is a new version (I merely added my keyboard ISR to the last).  Don't be„'afraid to hold down multiple keys! :)„„DECLARE SUB screensetup ()„DECLARE SUB makeworld ()„DECLARE SUB maketables ()„„„DECLARE SUB SETVECT (S AS INTEGER, O AS INTEGER, I AS INTEGER)„DECLARE SUB GETVECT (S AS INTEGER, O AS INTEGER, I AS INTEGER)„DECLARE SUB KEYBOARD.IN (OLDSEG AS INTEGER, OLDOFF AS INTEGER)„DECLARE SUB KEYBOARD.OUT (OLDSEG AS INTEGER, OLDOFF AS INTEGER)„„'$STATIC„„CONST NUM.KEYS = 10„CONST INDEX.UP = 0„CONST INDEX.DOWN = 1„CONST INDEX.LEFT = 2„CONST INDEX.RIGHT = 3„CONST INDEX.CTRL = 4„CONST INDEX.ALT = 5„CONST INDEX.SPACE = 6„CONST INDEX.ESC = 7„CONST INDEX.ENTER = 8„CONST INDEX.RSHIFT = 9„„DIM SHARED KEY.TABLE(0 TO (NUM.KEYS - 1)) AS INTEGER„DIM SHARED RAWKEY AS INTEGER„DIM SHARED OLD.ISR.SEG AS INTEGER, OLD.ISR.OFF AS INTEGER„„CALL KEYBOARD.IN(OLD.ISR.SEG, OLD.ISR.OFF)„„' Just a minor change, but it's good for a speed increase„' of about 30% on my P133. Changed the LINE,BF to draw the„' walls into seperate LINE's.„„'=======================================================================„' RAY CASTER 3D sorta ENGINE thingymajig„'=======================================================================„' Wrote this about a month ago, it's a sort of wolfenstien\doom„' lookalike but all in native QBasic source! Uses an interesting ray„' Cheers, {:o)   Peter Cooper„„' Clean-up by Brent P. Newhall„„' Improvments by Nick Cangiani (nicksxe@gnn.com)„' Sped up maketables by v Zoelen AA (vsim@xs4all.nl)„' Minor improvement by Marc vd Dikkenberg (excel@xs4all.nl)„„' Left arrow  == Move left„' Right arrow == Move right„' Up arrow    == Move forward„' Down arrow  == Move backward„' [ESC]       == Quit„„DIM SHARED st%(0 TO 360)„DIM SHARED ct%(0 TO 360)„DIM SHARED a$(1 TO 10)„DIM SHARED grid(1 TO 12, 1 TO 12)„px% = 15: py% = 35: sa% = 0„PRINT "Please wait...";„RANDOMIZE TIMER„makeworld„maketables„screensetup„m% = 1„DO„  IF m% = 1 THEN„    IF P = 2 THEN PCOPY 2, 0 ELSE PCOPY 3, 0„    IF P = 2 THEN P = 3 ELSE P = 2„    m% = 0„  END IF„  FOR t% = sa% TO sa% + 59 STEP 1„    xb = st%(t% MOD 360) / 100              'get inc„    yb = ct%(t% MOD 360) / 100              'get inc„    bx = px%                                'decimal copy„    by = py%                                'decimal copy„    l% = 0                                  'reset length„    DO„      bx = bx + xb„      by = by + yb„      l% = l% + 1„      'k% = ASC(MID$(a$(CINT(by / 10)), CINT(bx / 10), 1)) - 48„      k% = grid(CINT(by / 10), CINT(bx / 10))„    LOOP UNTIL k% <> 0„    'LOCATE 1, 1„    'PRINT l%;        'this would print the distance to wall„    X% = (t% - sa%) * 5„    dd% = (1000 / l%)„    'LINE (X%, 1)-(X% + 5, 99 - dd%), 15, BF          'paint ceiling„    'LINE (X%, 101 + dd%)-(X% + 5, 200), 2, BF        'paint floor„    'LINE (X%, 100 - dd%)-(X% + 5, 100 + dd%), k%, BF 'paint walls„„    FOR U% = 0 TO 5                                   'paint walls„       LINE (X% + U%, 100 - dd%)-(X% + U%, 100 + dd%), k%„    NEXT U%„    ' Could be even 20% faster: FOR U% = 0 to 4„    ' This will skip one line at the right of the screen, though.„„    LINE (X%, 100 - dd%)-(X% + 5, 100 - dd%), 0      'top lines„    LINE (X%, 100 + dd%)-(X% + 5, 100 + dd%), 0      'bottom lines„  NEXT t%„  PCOPY 0, 1„  RAWKEY = 0: WHILE RAWKEY = 0: WEND„  IF KEY.TABLE(INDEX.RIGHT) THEN ' [LEFT]„    sa% = sa% + 3„    m% = 1„  END IF„  IF KEY.TABLE(INDEX.LEFT) THEN ' [RIGHT]„    sa% = (sa% + 357) MOD 360„    m% = 1„  END IF„  IF KEY.TABLE(INDEX.ESC) THEN ' [ESC]„    quit = 1„  END IF„  IF KEY.TABLE(INDEX.UP) THEN ' [UP]„    Oldpx% = px%: Oldpy% = py% ' Save where you are„    px% = px% + (st%((sa% + 30) MOD 360) / 30)„    py% = py% + (ct%((sa% + 30) MOD 360) / 30)„    IF grid(CINT(py% / 10), CINT(px% / 10)) > 0 THEN 'Walking thru walls?„      SOUND 80, 1„      px% = Oldpx% ' Forget it!  Don't move„      py% = Oldpy%„    ELSE„      m% = 1„    END IF„  END IF„    „  IF KEY.TABLE(INDEX.DOWN) THEN '[DOWN]„    Oldpx% = px%: Oldpy% = py% ' Save where you are„    px% = px% - (st%((sa% + 30) MOD 360) / 30)„    py% = py% - (ct%((sa% + 30) MOD 360) / 30)„    IF grid(CINT(py% / 10), CINT(px% / 10)) > 0 THEN 'Walking thru walls?„      SOUND 80, 1„      px% = Oldpx% ' Forget it!  Don't move„      py% = Oldpy%„    ELSE„      m% = 1„    END IF„  END IF„LOOP UNTIL quit > 0„SCREEN 0„WIDTH 80, 25„„„CALL KEYBOARD.OUT(OLD.ISR.SEG, OLD.ISR.OFF)„„„SYSTEM„„' Level data (this way you can have walls colored 10, 11, etc.)„' 12x12„DATA  1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9„DATA  9, 0, 4, 0, 0, 0, 0, 0, 0, 5, 0, 1„DATA  1, 0,12, 0, 0, 0, 0, 0, 0,13, 0, 9„DATA  9, 0, 4, 0, 0, 0, 0, 0, 0, 5, 0, 1„DATA  1, 0,12, 0, 0, 0, 0, 0, 0,13, 0, 9„DATA  9, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1„DATA  1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 9„DATA  9, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 1„DATA  1, 0, 4, 0, 0, 0, 0, 0, 3,11, 0, 9„DATA  9, 0,12, 0, 0, 0, 0, 0,11, 3, 0, 1„DATA  1, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 9„DATA  9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1„„' Old level.  If you want it, come and get it.„'  1, 9, 1, 9, 1, 9, 1, 9, 1, 9„'  9, 0, 0, 0, 0, 0, 0, 0, 0, 1„'  1, 0, 0, 0, 0, 0, 0, 4, 0, 9„'  9, 0, 1, 0, 0, 0, 5, 0, 0, 1„'  1, 0, 2, 0, 0, 4, 0, 0, 0, 9„'  9, 0, 3, 0, 0, 0, 0, 0, 0, 1„'  1, 0, 0, 0, 0, 7, 8, 0, 0, 9„'  9, 0, 5, 0, 0, 8, 7, 0, 0, 1„'  1, 0, 6, 0, 0, 0, 0, 0, 0, 9„'  9, 1, 9, 1, 9, 1, 9, 1, 9, 1„„„SUB GETVECT (S AS INTEGER, O AS INTEGER, I AS INTEGER)„„    'GETVECT RETURNS THE ADDRESS OF A FUNCTION POINTED TO IN THE„    'INTERRUPT VECTOR TABLE (STARTS AT 0000:0000H)„„    STATIC ASM AS STRING 'THE CODE FOR GETVECT„„    STATIC INI AS INTEGER 'USED TO DETECT WHETHER GETVECT HAS PREVIOUSLY„                          'BEEN CALLED„    IF INI = 0 THEN„        „        'CREATE ML FUNCTION IF NOT ALREADY CREATED„„        ASM = ASM + CHR$(&H55)                          'PUSH    BP„        ASM = ASM + CHR$(&H89) + CHR$(&HE5)             'MOV     BP,SP„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&H6) 'MOV     BX,[BP+06]„        ASM = ASM + CHR$(&H8A) + CHR$(&H7)              'MOV     AL,[BX]„        ASM = ASM + CHR$(&HB4) + CHR$(&H35)             'MOV     AH,35„        ASM = ASM + CHR$(&HCD) + CHR$(&H21)             'INT     21„        ASM = ASM + CHR$(&H53)                          'PUSH    BX„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&HA) 'MOV     BX,[BP+0A]„        ASM = ASM + CHR$(&H8C) + CHR$(&H7)              'MOV     [BX],ES„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&H8) 'MOV     BX,[BP+08]„        ASM = ASM + CHR$(&H58)                          'POP     AX„        ASM = ASM + CHR$(&H89) + CHR$(&H7)              'MOV     [BX],AX„        ASM = ASM + CHR$(&H5D)                          'POP     BP„        ASM = ASM + CHR$(&HCA) + CHR$(&H6) + CHR$(&H0)  'RETF    0006„        INI = 1 'FLAG CREATION„    END IF„„    DEF SEG = VARSEG(ASM)„    CALL ABSOLUTE(S, O, I, SADD(ASM)) 'RUN FUNCTION„END SUB„„SUB KEYBOARD.IN (OLDSEG AS INTEGER, OLDOFF AS INTEGER)„    DIM RSGL AS INTEGER, RSGH AS INTEGER 'SEGMENT OF RAWKEY„    DIM ROFL AS INTEGER, ROFH AS INTEGER 'OFFSET OF RAWKEY„„    DIM KSGL AS INTEGER, KSGH AS INTEGER 'SEGMENT OF KEY.TABLE„    DIM KOFL AS INTEGER, KOFH AS INTEGER 'OFFSET OF KEY.TABLE„   „    DIM BYTE AS STRING * 1 'USED TO ACTIVATE IRQ 1 IN PIC„„    STATIC ASM AS STRING 'HOLDS ISR„„    RSGL = VARSEG(RAWKEY) AND &HFF 'LOAD LOW "BYTE" SEGMENT„    RSGH = INT(VARSEG(RAWKEY) / 256) AND &HFF 'LOAD HIGH "BYTE" SEGMENT„„    ROFL = VARPTR(RAWKEY) AND &HFF 'LOAD LOW "BYTE" OFFSET„    ROFH = INT(VARPTR(RAWKEY) / 256) AND &HFF 'LOAD HIGH "BYTE" OFFSET„    „    KSGL = VARSEG(KEY.TABLE(0)) AND &HFF 'LOAD LOW "BYTE" SEGMENT„    KSGH = INT(VARSEG(KEY.TABLE(0)) / 256) AND &HFF 'LOAD HIGH "BYTE" SEGMENT„„    KOFL = VARPTR(KEY.TABLE(0)) AND &HFF 'LOAD LOW "BYTE" OFFSET„    KOFH = INT(VARPTR(KEY.TABLE(0)) / 256) AND &HFF 'LOAD HIGH "BYTE" OFFSET„„    'THIS IS THE ISR.  IT READS A SCANCODE FROM THE KEYBOARD BUFFER„    'AND RESETS IT.  THE BEST PART IS, BIOS CAN'T TOUCH IT!„„    ASM = ""„    ASM = ASM + CHR$(&H52)                          'PUSH DX„    ASM = ASM + CHR$(&H51)                          'PUSH CX„    ASM = ASM + CHR$(&H53)                          'PUSH BX„    ASM = ASM + CHR$(&H50)                          'PUSH AX„    ASM = ASM + CHR$(&H6)                           'PUSH ES„    ASM = ASM + CHR$(&H57)                          'PUSH DI„    ASM = ASM + CHR$(&H1E)                          'PUSH DS„    ASM = ASM + CHR$(&H56)                          'PUSH SI„    ASM = ASM + CHR$(&HFB)                          'STI„    ASM = ASM + CHR$(&HBA) + CHR$(&H60) + CHR$(&H0) 'MOV DX,0060„    ASM = ASM + CHR$(&HEC)                          'IN AL,DX„    ASM = ASM + CHR$(&H30) + CHR$(&HE4)             'XOR AH,AH„    ASM = ASM + CHR$(&HBA) + CHR$(RSGL) + CHR$(RSGH)'MOV DX,SEG RAWKEY„    ASM = ASM + CHR$(&H8E) + CHR$(&HDA)             'MOV DS,DX„    ASM = ASM + CHR$(&HBE) + CHR$(ROFL) + CHR$(ROFH)'MOV SI,OFFSET RAWKEY„    ASM = ASM + CHR$(&H88) + CHR$(&H4)              'MOV [SI],AL„    ASM = ASM + CHR$(&H50)                          'PUSH AX„    ASM = ASM + CHR$(&HBA) + CHR$(&H61) + CHR$(&H0) 'MOV DX,0061„    ASM = ASM + CHR$(&HEC)                          'IN AL,DX„    ASM = ASM + CHR$(&HC) + CHR$(&H82)              'OR AL,82„    ASM = ASM + CHR$(&HEE)                          'OUT DX,AL„    ASM = ASM + CHR$(&H24) + CHR$(&H7F)             'AND AL,7F„    ASM = ASM + CHR$(&HEE)                          'OUT DX,AL„    ASM = ASM + CHR$(&HB0) + CHR$(&H20)             'MOV AL,20„    ASM = ASM + CHR$(&HBA) + CHR$(&H20) + CHR$(&H0) 'MOV DX,0020„    ASM = ASM + CHR$(&HEE)                          'OUT DX,AL„    ASM = ASM + CHR$(&HBA) + CHR$(KSGL) + CHR$(KSGH)'MOV DX,SEG KEY.TABLE„    ASM = ASM + CHR$(&H8E) + CHR$(&HDA)             'MOV DS,DX„    ASM = ASM + CHR$(&HBE) + CHR$(KOFL) + CHR$(KOFH)'MOV SI,OFFSET KEY.TABLE„    ASM = ASM + CHR$(&H58)                          'POP AX„    ASM = ASM + CHR$(&HBB) + CHR$(&H1) + CHR$(&H0)  'MOV BX,0001--MAKE„    ASM = ASM + CHR$(&HB4) + CHR$(&H48)             'MOV AH,48--UP„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H0) 'MOV [SI+00],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H50)             'MOV AH,50--DOWN„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H2) 'MOV [SI+02],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H4B)             'MOV AH,4B--LEFT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H4) 'MOV [SI+04],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H4D)             'MOV AH,4D--RIGHT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H6) 'MOV [SI+06],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H1D)             'MOV AH,1D--CTRL„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H8) 'MOV [SI+08],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H38)             'MOV AH,38--ALT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HA) 'MOV [SI+0A],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H39)             'MOV AH,39--SPACE„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HC) 'MOV [SI+0C],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H1)              'MOV AH,01--ESC„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HE) 'MOV [SI+0E],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H1C)             'MOV AH,1C--ENTER„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H10)'MOV [SI+10],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H36)             'MOV AH,36--RSHIFT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H12)'MOV [SI+12],BX„„    ASM = ASM + CHR$(&HBB) + CHR$(&H0) + CHR$(&H0)  'MOV BX,0000--BREAK„    ASM = ASM + CHR$(&HB4) + CHR$(&HC8)             'MOV AH,C8--UP„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H0) 'MOV [SI+00],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HD0)             'MOV AH,D0--DOWN„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H2) 'MOV [SI+02],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HCB)             'MOV AH,CB--LEFT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H4) 'MOV [SI+04],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HCD)             'MOV AH,CD--RIGHT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H6) 'MOV [SI+06],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H9D)             'MOV AH,9D--CTRL„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H8) 'MOV [SI+08],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HB8)             'MOV AH,B8--ALT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HA) 'MOV [SI+0A],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HB9)             'MOV AH,B9--SPACE„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HC) 'MOV [SI+0C],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H81)             'MOV AH,81--ESC„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ   „    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&HE) 'MOV [SI+0E],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&H9C)             'MOV AH,9C--ENTER„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H10)'MOV [SI+10],BX„    ASM = ASM + CHR$(&HB4) + CHR$(&HB6)             'MOV AH,B6--RSHIFT„    ASM = ASM + CHR$(&H38) + CHR$(&HC4)             'CMP AH,AL„    ASM = ASM + CHR$(&H75) + CHR$(&H3)              'JNZ„    ASM = ASM + CHR$(&H89) + CHR$(&H5C) + CHR$(&H12)'MOV [SI+12],BX„„    ASM = ASM + CHR$(&HFA)                          'CLI„    ASM = ASM + CHR$(&H5E)                          'POP SI„    ASM = ASM + CHR$(&H1F)                          'POP DS„    ASM = ASM + CHR$(&H5F)                          'POP DI„    ASM = ASM + CHR$(&H7)                           'POP ES„    ASM = ASM + CHR$(&H58)                          'POP AX„    ASM = ASM + CHR$(&H5B)                          'POP BX„    ASM = ASM + CHR$(&H59)                          'POP CX„    ASM = ASM + CHR$(&H5A)                          'POP DX„    ASM = ASM + CHR$(&HCF)                          'IRET„„    BYTE = CHR$(INP(&H21)) 'LOAD IRQ ENABLE REGISTER IN PIC„„    OUT &H21, (ASC(BYTE) AND (255 XOR 2)) 'CLEAR BIT 2 (IRQ 1)„„    CALL GETVECT(OLDSEG, OLDOFF, &H9) 'LOAD OLD ISR„    CALL SETVECT(VARSEG(ASM), SADD(ASM), &H9) 'STORE NEW ISR„END SUB„„SUB KEYBOARD.OUT (OLDSEG AS INTEGER, OLDOFF AS INTEGER)„    CALL SETVECT(OLDSEG, OLDOFF, &H9) 'RESTORE OLD ISR„END SUB„„SUB maketables„„' Peters boring _yawn_ table creation„FOR tmp1% = 0 TO 360„  st%(tmp1%) = SIN(tmp1% * .0174) * 100„  'IF tmp1% MOD 100 = 0 THEN PRINT ; ".";„  'NEXT tmp1%„  'FOR tmp1% = 0 TO 360„  ct%(tmp1%) = COS(tmp1% * .0174) * 100„  'IF tmp1% MOD 100 = 0 THEN PRINT ; ".";„NEXT tmp1%„„END SUB„„SUB makeworld„„' Read in this level's data„FOR j = 1 TO 12„  FOR I = 1 TO 12„    READ grid(I, j)„  NEXT I„NEXT j„„' Peter Coopers demonstration level. Change it if you wish! Each number„' is a color number„'a$(1) = "1919191919"„'a$(2) = "9000000001"„'a$(3) = "1000000409"„'a$(4) = "9010005001"„'a$(5) = "1020040009"„'a$(6) = "9030000001"„'a$(7) = "1000078009"„'a$(8) = "9050087001"„'a$(9) = "1060000009"„'a$(10) = "9191919191"„„END SUB„„SUB screensetup„„SCREEN 7„LOCATE 4„PRINT "     RAYCASTER DEMO"„PRINT„PRINT "      UP ARROW........Move Forward"„PRINT "      DOWN ARROW......Move Backward"„PRINT "      RIGHT ARROW.....Turn Right"„PRINT "      LEFT ARROW......Turn Left"„„SCREEN 7, , 2, 0„„CLS„'WINDOW SCREEN (1, 1)-(320, 200)„„' Sky„LINE (0, 0)-(300, 99), 3, BF„„FOR cnt = 1 TO 10 ' Clouds„  a = INT(RND * 319)„  b = INT(RND * 80 + 10)„  c = INT(RND * 50)„  d = INT(RND * 10): d = d / 100„  CIRCLE (a, b), c, 1, , , d: PAINT (a, b), 1„  CIRCLE (a, b), c, 15, , , d: PAINT (a, b), 15„NEXT cnt„LINE (301, 0)-(319, 199), 0, BF ' Erase clouds on right„„' Obelisk„'LINE (200, 20)-(240, 99), 0, BF„'LINE (201, 21)-(239, 98), 8, BF„„LINE (200, 20)-(220, 15), 8 ' Building (gray)„LINE (220, 15)-(240, 20), 8„LINE (200, 20)-(200, 99), 8„LINE (240, 20)-(240, 99), 8„LINE (200, 99)-(240, 99), 8„PAINT (220, 50), 8„FOR cnt = 1 TO 20 ' Lights„  PSET (INT(RND * 38 + 201), INT(RND * 80 + 20)), 14„NEXT cnt„LINE (200, 20)-(220, 15), 0 ' Building (border)„LINE (220, 15)-(240, 20), 0„LINE (219, 15)-(219, 99), 0„LINE (200, 20)-(200, 99), 0„LINE (240, 20)-(240, 99), 0„„' Sun„CIRCLE (50, 30), 10, 14: PAINT (50, 30), 14, 14„„PCOPY 2, 3„„FOR Y% = 100 TO 199„  FOR X% = 0 TO 300„    IF RND > .5 THEN c% = 6 ELSE c% = 0„    PSET (X%, Y%), c%„  NEXT X%„NEXT Y%„„SCREEN 7, , 3, 0„FOR Y% = 100 TO 199„  FOR X% = 0 TO 300„    IF RND > .5 THEN c% = 6 ELSE c% = 0„    PSET (X%, Y%), c%„  NEXT X%„NEXT Y%„„SCREEN 7, , 0, 1„„END SUB„„SUB SETVECT (S AS INTEGER, O AS INTEGER, I AS INTEGER)„„    'SETVECT CHANGES THE ADDRESSES IN THE INTERRUPT VECTOR TABLE„    'TO POINT TO NEW FUNCTIONS„„    STATIC ASM AS STRING 'HOLDS THE SETVECT FUNCTION„    STATIC INI AS INTEGER 'USED TO TEST WHETHER OR NOT FUNCTION HAS PREVOUSLY„                          'BEEN CALLED„    IF INI = 0 THEN„„        'CREATE FUNCTION IF NOT ALREADY CREATED„„        ASM = ""„        ASM = ASM + CHR$(&H55)                          'PUSH BP„        ASM = ASM + CHR$(&H89) + CHR$(&HE5)             'MOV BP,SP„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&H8) 'MOV BX,[BP+08]„        ASM = ASM + CHR$(&H8B) + CHR$(&H17)             'MOV DX,[BX]„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&H6) 'MOV BX,[BP+06]„        ASM = ASM + CHR$(&H8A) + CHR$(&H7)              'MOV AL,[BX]„        ASM = ASM + CHR$(&H8B) + CHR$(&H5E) + CHR$(&HA) 'MOV BX,[BP+0A]„        ASM = ASM + CHR$(&H1E)                          'PUSH DS„        ASM = ASM + CHR$(&H8E) + CHR$(&H1F)             'MOV DS,[BX]„        ASM = ASM + CHR$(&HB4) + CHR$(&H25)             'MOV AH,25„        ASM = ASM + CHR$(&HCD) + CHR$(&H21)             'INT 21„        ASM = ASM + CHR$(&H1F)                          'POP DS„        ASM = ASM + CHR$(&H5D)                          'POP BP„        ASM = ASM + CHR$(&HCA) + CHR$(&H6) + CHR$(&H0)  'RETF 0006„        INI = 1 'FLAG CREATION„    END IF„    DEF SEG = VARSEG(ASM)„    CALL ABSOLUTE(S, O, I, SADD(ASM)) 'RUN SETVECT„END SUB„Thomas Gohel                   HIGHSPEED RAYCASTING FOR PB    comp.lang.basic.misc           08-18-96 (00:00)       PB32                   519  14638    RAYCAST.BAS 'TWO Part Snippet (RAYCAST.BAS and RAYCAST.DAT to follow)  [Requires UUDECODE]„„'*************************************************************************„'„' Raycasting routines for PowerBASIC 3.2„'„' developed by Wolfgang Bruske„' new SCREEN 13 routines by Thomas Gohel„'„'*************************************************************************„„„$COMPILE EXE„DEFINT A-Z„„MinAbstand  =  48„Winkel0   =  0„Winkel1   =  5„Winkel2   =  10„Winkel4   =  20„Winkel5   =  25„Winkel6   =  30„Winkel15  =  80„Winkel30  =  160„Winkel45  =  240„Winkel60  =  320„Winkel90  =  480„Winkel135 =  720„Winkel180 =  960„Winkel225 =  1200„Winkel270 =  1440„Winkel315 =  1680„Winkel360 =  1920„WeltReihe =   16„WeltSpalte = 16„ZellXgroesse =  64„ZellYgroesse =  64„„DIM WeltXgroesse(WeltSpalte * ZellXgroesse) as integer„DIM WeltYgroesse(WeltReihe * ZellYgroesse) as integer„DIM Welt(WeltReihe,WeltSpalte) as integer„DIM Tantable(1920) as single„DIM Invtantable(1920) as single„DIM Ystep(1920) as single„DIM Xstep(1920) as single„DIM Costable(1920) as single„DIM Invcostable(1920) as single„DIM Invsintable(1920) as single„DIM Vptr as byte Ptr„DIM Maxx as integer„DIM Maxy as integer„Maxx=(WeltSpalte * ZellXgroesse)-1„Maxy=(WeltReihe * ZellYgroesse)-1„„SHARED MinAbstand,Winkel0,Winkel1,Winkel2,Winkel4,Winkel5,Winkel6„SHARED Winkel15,Winkel30,Winkel45,Winkel60,Winkel90,Winkel135,Winkel180,Winkel225,Winkel270„SHARED Winkel315,Winkel360,WeltReihe,WeltSpalte,ZellXgroesse,ZellYgroesse,WeltXgroesse()„SHARED WeltYgroesse(),Welt(),tantable(),invtantable(),Ystep(),Xstep()„SHARED costable(),invcostable(),invsintable(),Sichtwinkel,Vptr,maxx,maxy„„' F U N C T I O N S *******************************************************'„„SUB Tabellenbauen()„DIM Winkl as integer„DIM radWinkel as ext„„FOR Winkl = Winkel0  to Winkel360„    radWinkel = 3.272e-4 + Winkl * 3.27249234791667e-3„    tantable(Winkl)     = tan(radWinkel)„    invtantable(Winkl) = 1/tantable(Winkl)„„    IF Winkl >= Winkel0 and Winkl < Winkel180 THEN„      Ystep(Winkl) = abs(tantable(Winkl) * ZellYgroesse)„    Else„      Ystep(Winkl) =-abs(tantable(Winkl)* ZellYgroesse)„    END IF„„    IF Winkl >= Winkel90 and Winkl < Winkel270 THEN„       Xstep(Winkl) =-abs(invtantable(Winkl) * ZellXgroesse)„    Else„       Xstep(Winkl) = abs(invtantable(Winkl)  * ZellXgroesse)„    END IF„„    invcostable(Winkl) = 1/cos(radWinkel)„    invsintable(Winkl) = 1/sin(radWinkel)„„Next Winkl„„FOR Winkl = -Winkel30 to Winkel30„    radWinkel = 3.272e-4 + Winkl * 3.27249234791667e-3„    costable(Winkl + Winkel30) = 1/cos(radWinkel)*10000„Next Winkl„„END SUB„„'***************************************************************************'„„SUB LoadWelt(dateiname$)„„DIM index as integer„DIM row as integer„DIM column as integer„DIM buffer as String„DIM ch as String„OPEN Dateiname$ FOR input as #1„FOR Row = WeltReihe to 0 step -1„    line input #1, buffer„    FOR column = 0 to WeltSpalte„        Welt(column,row) = Val(mid$(buffer,column+1,1))„    Next column„Next row„Close #1„END SUB„„'***************************************************************************'„„SUB RayCaster(x as long ,y as long)„„DIM Oben  as single„DIM Unten as single„DIM Zellx as long„DIM Zelly as long„DIM Senke as long„DIM Waage as long„DIM ray as long„DIM xaufWaage as Single„DIM yaufSenke as Single„DIM distzuWaage as Single„DIM distzuSenke as Single„DIM Skalier as Single„„resett=Sichtwinkel„Sichtwinkel=Sichtwinkel-Winkel30„IF Sichtwinkel < 0 THEN  Sichtwinkel=Winkel360 + Sichtwinkel„„tempWaage= int(y/ZellYgroesse) * ZellYgroesse„tempWaage1= int(y/ZellYgroesse) * ZellYgroesse+ZellYgroesse„tempSenke= int(x/ZellXgroesse) * ZellXgroesse„tempSenke1= int(x/ZellXgroesse) * ZellXgroesse + ZellXgroesse„„diffzuWaage=tempWaage-y„diffzuSenke=tempSenke-x„diffzuWaage1=tempWaage1-y„diffzuSenke1=tempSenke1-x„„FOR ray = 0 to 319„„    IF Sichtwinkel < Winkel180 THEN„       Waage = tempWaage1„       xaufWaage = invtantable(Sichtwinkel) * diffzuWaage1 + x„       NexteWaage=ZellYgroesse„       Nexty=0„    else„       Waage = tempWaage„       xaufWaage = invtantable(Sichtwinkel) * diffzuWaage + x„       NexteWaage=-ZellYgroesse„       Nexty=-1„    END IF„„   IF Sichtwinkel < Winkel90 or Sichtwinkel >= Winkel270 THEN„       Senke = tempSenke1„       yaufSenke = tantable(Sichtwinkel) * diffzuSenke1 + y„       NexteSenke=ZellXgroesse„       Nextx=0„    else„       Senke = tempSenke„       yaufSenke = tantable(Sichtwinkel) * diffzuSenke + y„       NexteSenke=-ZellXgroesse„       Nextx=-1„    END IF„„„    WHILE  1„„            IF xaufWaage > maxx or xaufWaage < 0 THEN„               distzuWaage = 1e+8„               exit loop„            END IF„„             Zellx = int(xaufWaage/ZellXgroesse)„             Zelly = int(Waage/ZellYgroesse) + Nexty„„            IF Welt(Zellx,Zelly) <> 0 THEN„               distzuWaage=(xaufWaage-x)*invcostable(Sichtwinkel)„               exit loop„            END IF„„            xaufWaage = xaufWaage + Xstep(Sichtwinkel)„            Waage = Waage + NexteWaage„    WEND„„„    WHILE  2„„            IF yaufSenke > maxy or yaufSenke < 0 THEN„               distzuSenke = 1e+8„               exit loop„            END IF„„            Zellx = int(Senke/ZellYgroesse) + Nextx„            Zelly = int(yaufSenke/ZellYgroesse)„„            IF Welt(Zellx,Zelly) <> 0 THEN„               distzuSenke=(yaufSenke-y)* invsintable(Sichtwinkel)„               exit loop„            END IF„„            yaufSenke = yaufSenke + Ystep(Sichtwinkel)„            Senke = Senke + NexteSenke„    WEND„„„    IF distzuWaage < distzuSenke THEN„„      Skalier = costable(ray) / distzuWaage„       Oben = 90 - Skalier/2„       IF Oben < 20 THEN Oben = 20„       Unten = 90 + Skalier/2„       IF Unten > 180 THEN Unten=180„„       IF int(xaufWaage) MOD ZellYgroesse =< 1 THEN„          colorr = 15„       else„          colorr=10„       END IF„       Linie ray,20,ray,Oben ,160„       Linie ray,Oben ,ray,Unten,colorr„       Linie ray,Unten,ray,180,215„    else„       Skalier = costable(ray) / distzuSenke„       Oben = 90 - Skalier/2„       IF Oben < 20 THEN Oben = 20„       Unten = 90 + Skalier/2„       IF Unten > 180 THEN  Unten = 180„       IF int(yaufSenke) MOD ZellXgroesse = < 1 THEN„          colorr=15„       else„          colorr=2„       END IF„       Linie ray,20,ray,Oben,160„       Linie ray,Oben,ray,Unten,colorr„       Linie ray,Unten,ray,180,215„    END IF„„„    INCR Sichtwinkel„    IF Sichtwinkel >= Winkel360 THEN„        Sichtwinkel=0„    END IF„Next ray„„Sichtwinkel=resett„END SUB„„' M A I N *****************************************************************'„„DIM x as long„DIM y as long„DIM xZell as long„DIM yZell as long„DIM xsubZell as long„DIM ysubZell as long„„DIM dx as single„DIM dy as single„„Modus13„WriteScrn  1, 1, 11, "Raycasting Engine by Wolfgang Bruske"„WriteScrn  2, 1, 14, "SCREEN 13 Routines by Thomas Gohel"„WriteScrn 24, 1, 14, CHR$(24,25,26,27) + " oder 2, 4, 6, 8"„„CALL Tabellenbauen()„CALL LoadWelt("raycast.dat")„colorr=15„„x=9*64+32„y=9*64+32„Sichtwinkel=Winkel6„„CALL  RayCaster(x,y)„„WHILE  done = 0„     kbhit=ascii(inkey$)„     IF kbhit > 0 THEN„        Taste$=chr$(kbhit)„        kbhit = 0„        dx=0„        dy=0„        select case Taste$„„               case "4"„                      DECR  Sichtwinkel,Winkel6„                      IF Sichtwinkel < Winkel0 THEN  Sichtwinkel=Winkel360+Sichtwinkel„               case "6"„                       INCR Sichtwinkel,Winkel6„                       IF Sichtwinkel > Winkel360 THEN  Sichtwinkel =Sichtwinkel-Winkel360„               case "8"„                       dx=cos(6.28*Sichtwinkel/Winkel360)*10„                       dy=sin(6.28*Sichtwinkel/Winkel360)*10„               case "2"„                       dx=-cos(6.28*Sichtwinkel/Winkel360)*10„                       dy=-sin(6.28*Sichtwinkel/Winkel360)*10„„               case "q", CHR$(27)„                       Modus3„                       END„            end select„        x=x+dx„        y=y+dy„„        xZell = int(x/ZellXgroesse)„        yZell = int(y/ZellYgroesse)„        xsubZell = x MOD ZellXgroesse„        ysubZell = y MOD ZellYgroesse„„        IF dx > 0 THEN„           IF Welt(xZell+1,yZell) <> 0 and xsubZell > (ZellXgroesse-MinAbstand) THEN„                x = x -(xsubZell-(ZellXgroesse-MinAbstand))„           END IF„        else„           IF Welt(xZell-1,yZell) <> 0 and xsubZell < MinAbstand THEN„                x = x + (MinAbstand-xsubZell)„           END IF„         END IF„„        IF dy > 0  THEN„           IF Welt(xZell,(yZell+1)) <> 0 and ysubZell > (ZellYgroesse-MinAbstand ) THEN„                y = y -(ysubZell-(ZellYgroesse-MinAbstand ))„           END IF„        else„           IF Welt(xZell,(yZell-1)) <> 0 and ysubZell < MinAbstand THEN„                y = y + (MinAbstand-ysubZell)„           END IF„        END IF„        CALL  RayCaster(x,y)„   END IF„WEND„„SUB Modus13„        ! mov  al, &h13„        ! mov  ah, 0„        ! int  &h10„END SUB„„SUB Modus3„        ! mov  al, &h03„        ! mov  ah, 0„        ! int  &h10„END SUB„„SUB Linie(BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2%, BYVAL Farbe%) public„         LOCAL s1%, s2%, s3%, s4%„         ! push es„         ! push di„         ! mov  ax, &ha000      ;' nur einmal VideoSegment setzen„         ! mov  es, ax„         ! mov  ax, x2%         ;' Differenz x2% - x1% nach ax„         ! sub  ax, x1%„         ! jns  Linie1„         ! neg  ax              ; Vorzeichentausch„Linie1:„         ! mov  bx, y2%         ; Differenz von y2% - y1% nach bx„         ! sub  bx, y1%„         ! jns  Linie2„         ! neg  bx              ; Vorzeichentausch„Linie2:„         ! cmp  ax, bx          ; Steigung <= 1 ?„         ! jge  Linie3A         ; Ja„         ! jmp  Linie20         ; Nein„Linie3A:„         ! mov  cx, x1%         ; Ist x1% <= x2% ?„         ! cmp  cx, x2%„         ! jg   Linie4„         ! mov  cx, 1           ; X steigt„         ! jmp  Linie5„Linie4:„         ! mov  cx, -1          ; X f‰llt„Linie5:„         ! mov  dx, y1%         ; ist y1% <= y2%„         ! cmp  dx, y2%„         ! jg   Linie6„         ! mov  dx, 1           ; Y steigt„         ! jmp  Linie7„Linie6:„         ! mov  dx, -1          ; Y f‰llt„Linie7:„         ! mov  s1%, cx         ; Steigung auf dem Stack speichern„         ! mov  s2%, dx„         ! add  bx, bx          ; Steigung berechnen„         ! mov  s3%, bx„         ! sub  bx, ax„         ! mov  cx, bx„         ! sub  cx, ax„         ! mov  s4%, cx„         ! mov  cx, x1%„         ! mov  dx, y1%„         ! call SetPunkt„Linie8:„         ! cmp  cx, x2%         ; Weitere Punkte?„         ! jz   Linie3„         ! add  cx, s1%         ; X-Koordinate erhˆhen„         ! or   bx, bx          ; Entscheiden, ob Y-Koordinate erhˆht„         ! jns  Linie10         ; wird„         ! add  bx, s3%„         ! jmp  Linie11„Linie10:„         ! add  bx, s4%         ; N‰chsten Punkt ausgeben„         ! add  dx, s2%„Linie11:„         ! call Setpunkt„         ! jmp Linie8„Linie20:„„';----------------------------------------------------------„'; Dieser Teil wird durchlaufen, wenn die Steigung > 1 ist„';----------------------------------------------------------„„         ! mov  cx, y1%         ; Steigung ist > 1„         ! cmp  cx, y2%         ; Ist y1% <= y2% ?„         ! jg   Linie12„         ! mov  cx,1            ; Y steigt„         ! jmp  Linie13„Linie12:„         ! mov  cx, -1          ; Y f‰llt„Linie13:„         ! mov  dx, x1%         ; ist x1% <= x2% ?„         ! cmp  dx, x2%„         ! jg   Linie14„         ! mov  dx, 1           ; X steigt„         ! jmp  Linie15„Linie14:„         ! mov  dx, -1          ; X f‰llt„Linie15:„         ! mov  s1%, cx         ; Steigung auf dem Stack speichern„         ! mov  s2%, dx„         ! add  ax, ax          ; Steigung berechnen„         ! mov  s3%, ax„         ! sub  ax, bx„         ! mov  cx, ax„         ! sub  cx, bx„         ! mov  s4%, cx„         ! mov  bx, ax„         ! mov  cx, x1%„         ! mov  dx, y1%„         ! call SetPunkt„Linie16:„         ! cmp  dx, y2%         ; Weitere Punkte ausgeben?„         ! jz   Linie3„         ! add  dx, s1%„         ! or   bx, bx„         ! jns  Linie18„         ! add  bx, s3%„         ! jmp  Linie19„Linie18:„         ! add bx, s4%„         ! add cx, s2%„Linie19:„         ! call SetPunkt„         ! jmp  Linie16„Linie3:„         ! jmp Ende„SetPunkt:„         ! mov  di, dx„         ! push bx„         ! mov  bx, dx„         ! mov  ax, 320„         ! mul  bx„         ! mov  bx, cx„         ! add  bx, ax„         ! mov  al, Farbe%„         ! mov  es:[bx], al„         ! pop  bx„         ! mov  dx, di„         ! retn„Ende:„         ! pop di„         ! pop es„END SUB„„SUB WriteScrn (BYVAL Zeile?, BYVAL Spalte?, BYVAL Farbe%, BYVAL Text$)„        ' PowerBASIC 3.0 kompatibel, Shit Err244 Bug :-(„        LOCAL TextSeg??, TextOff??, TextLen??„        TextSeg??   = STRSEG(Text$)„        TextOff??   = STRPTR(Text$)„        TextLen??   = LEN(Text$)„        ! push bp„        ! dec Zeile?„        ! dec Spalte?„        ! mov ax, &h1301„        ! mov bl, Farbe%„        ! mov bh, 0„        ! mov cx, TextLen??„        ! mov dh, Zeile?„        ! mov dl, Spalte?„        ! mov es, TextSeg??„        ! mov bp, TextOff??„        ! int &h10„        ! pop bp„END SUB„--- Cut End -------------------------------------------------------------„„DAT-file:„„--- Cut ----------------------------------------------------------------„section 1 of uuencode 5.20 of file raycast.dat    by R.E.M.„„begin 644 raycast.dat„M,3$Q,3$Q,3$Q,3$Q,3$Q,0T*,2`@("`@("`@("`@("`@,0T*,2`Q(#$@,2`Q„M(#$@,2`Q,0T*,2`@("`@("`@("`@("`@,0T*,3$Q(#$Q,3$Q,3$Q("`@,0T*„M,2`@("`@,2`@("`Q("`@,0T*,2`@("`@,2`@("`Q("`@,0T*,3$Q,3$Q,2`@„M("`Q("`@,0T*,2`@("`@,3$Q(#$Q("`@,0T*,2`@("`@("`@("`Q("`@,0T*„M,2`@("`@("`@("`Q("`@,0T*,2`Q,3$Q,3$Q,3$Q,3$@,0T*,2`Q("`@("`@„M("`@("`@,0T*,2`Q("`@("`@(#$@("`@,0T*,2`@("`@("`@(#$@("`@,0T*„H,3$Q,3$Q,3$Q,3$Q,3$Q,0T*#0H-"@T*#0H-"@T*#0H-"@T*#0H-"@H-„`„end„sum -r/size 2742/458 section (from "begin" to "end")„sum -r/size 47403/310 entire input file„--- Cut End -------------------------------------------------------------„Andrew L. Ayers                BURNING TEXT                   andrewa@indirect.com           07-24-96 (00:00)       QB, QBasic, PDS        59   1675     FIREPRN.BAS ' Description : FirePrint! - Custom text print subroutine for„'               VGA Mode 13„' Written by  : Andrew L. Ayers„' Date        : 07/24/96„'„' This little routine allows you to place a "burning" text„' string on the mode 13 screen. This routine was based on„' a routine by Martin Lindhe. Both are essentially the same,„' though this one is cleaner. Remember, the better the machine,„' the better the effect. Also, smaller strings will look better.„'„' You may use this routine in any manner you like, as long„' as you give Mr. Lindhe and myself credit in an appropriate„' manner.„'„' I wish to thank Martin Lindhe for providing the inspiration„' to do this routine.„'„DECLARE SUB FirePrint (h%, v%, a$, tilt%)„'„SCREEN 13„'„' Set up an all "red" palette„'„FOR t = 0 TO 63: PALETTE t, t: NEXT t„'„' Call the routine once for a simple "flame" effect,„' or over and over (as done here) for a great "burning"„' effect! Use uppercase for best effect.„'„DO„  CALL FirePrint(18, 12, "FIRE!", 0)„LOOP UNTIL INKEY$ <> ""„„SUB FirePrint (h%, v%, a$, tilt%)„  '„  ' Print the string in bright "red"„  '„  COLOR 63: LOCATE v%, h%: PRINT a$„  '„  ' Set up start and end locations for the burn„  '„  sx% = (h% * 8) - 8: ex% = ((h% + LEN(a$)) * 8) - 8„  sy% = (v% * 8) - 16: ey% = (v% * 8) - 8„  '„  FOR y% = sy% TO ey%„    FOR x% = sx% TO ex%„      '„      ' Take the current color, subtract a random amount for„      ' red flame "fade", and plot the new point„      '„      col% = POINT(x%, y%) - RND * 25: IF col% < 0 THEN col% = 0„      '„      PSET (x% + tilt%, y% - 1), col%„      '„    NEXT x%„  NEXT y%„  '„END SUB„Andrew L. Ayers                STEEL PRINT                    andrewa@indirect.com           08-01-96 (00:00)       QB, QBasic, PDS        39   1022     STEELPRN.BAS' Description : SteelPrint! - Custom text print subroutine for„'               VGA Mode 13„' Written by  : Andrew L. Ayers„' Date        : 08/01/96„'„' This little routine allows you to place a "steel-like" text„' string on the mode 13 screen.„'„' You may use this routine in any manner you like, as long„' as you give credit in an appropriate manner.„'„DECLARE SUB SteelPrint (x%, y%, text$)„'„SCREEN 13„'„CALL SteelPrint(5, 12, "SteelPrint! by Andrew L. Ayers")„'„DO: LOOP UNTIL INKEY$ <> ""„„SUB SteelPrint (x%, y%, text$)„  '„  starty% = (y% * 8) - 4„  endy% = (y% * 8) - 9„  startx% = ((x% - 1) * 8)„  endx% = ((x% - 1) * 8) + (LEN(text$) * 8)„  colr% = 32„  '„  COLOR 15: LOCATE y%, x%: PRINT text$„  '„  FOR y1% = starty% TO endy% STEP -1„    y2% = (starty% - 1) + ((starty% - 1) - y1%)„    FOR x% = startx% TO endx%„      IF POINT(x%, y1%) THEN PSET (x%, y1%), colr%„      IF POINT(x%, y2%) THEN PSET (x%, y2%), colr%„    NEXT x%„    colr% = colr% - 2„  NEXT y1%„  '„END SUB„Andrew L. Ayers                PSYCHO PRINT                   andrewa@indirect.com           08-13-96 (00:00)       QB, QBasic, PDS        120  3497     PSYCHO.BAS  ' Description : PsychoPrint! - Custom text print subroutine for„'               VGA Mode 13„' Written by  : Andrew L. Ayers„' Date        : 08/13/96„'„' What can I say? I can't seem to get enough of custom text!„' Well, anyhow - this routine needs to be played with. It allows„' you to create text that flashes (techno/house/rave style),„' text that fades away, dot by dot, and random snow text (certain„' combos of which look like flowing puke), and even rainbow flash„' text. Give it a shot!„'„' BTW: You may use this routine in any manner you like, as long„'      as you give credit in an appropriate manner.„'„DECLARE SUB PsychoPrint (x%, y%, strg$, fclr%, bclr%, range1%, range2%, factor%, special%)„'„SCREEN 13„'„DO„  '„  special% = 1„  '„  CALL PsychoPrint(6, 12, "PsychoPrint! by Andrew Ayers", 3, 0, 0, 15, 4, special%)„  '„LOOP UNTIL special% = 999 OR INKEY$ <> ""„„SUB PsychoPrint (x%, y%, strg$, fclr%, bclr%, range1%, range2%, factor%, special%)„  '„  STATIC FirstTime AS INTEGER„  STATIC colr AS INTEGER„  '„  IF strg$ = "" THEN FirstTime% = 0: EXIT SUB„  '„  xpos% = x% * 8 - 8: ypos% = y% * 8 - 8„  xend% = xpos% + (LEN(strg$) * 8): yend% = ypos% + 8„  '„  IF FirstTime% = 0 THEN„    COLOR 255: LOCATE y%, x%: PRINT strg$: FirstTime% = 1„    COLOR 15„    colr% = fclr%„    FOR y% = ypos% TO yend%„      FOR x% = xpos% TO xend%„        IF POINT(x%, y%) <> 255 THEN„          PSET (x%, y%), bclr%„        ELSE„          PSET (x%, y%), fclr%„        END IF„      NEXT x%„    NEXT y%„  END IF„  '„  '***********************************************************„  '„  flag% = 999„  '„  FOR y% = ypos% TO yend%„    FOR x% = xpos% TO xend%„      IF POINT(x%, y%) <> bclr% THEN„        flag% = 0„        PSET (x%, y%), colr%„        '„        SELECT CASE special%„          CASE 3 ' Regular Fade„            IF INT(RND * 2) = 1 THEN„              colr% = bclr%„            ELSE„              colr% = fclr%„            END IF„          CASE 4 ' Psycho Snow„            colr% = INT(RND * factor%)„            IF colr% = bclr% THEN colr% = colr% + 1„          CASE 5 ' Psycho Snow Fade„            colr% = INT(RND * factor%)„        END SELECT„        '„      END IF„      '„      SELECT CASE special%„        CASE 1 ' Psycho Cycle„          colr% = colr% + factor%„          IF colr% = bclr% THEN colr% = colr% + 1„          IF colr% >= range2% THEN colr% = range1%„          IF colr% = bclr% THEN colr% = colr% + 1„        CASE 2 ' Psycho Fade„          colr% = colr% + 1„          IF colr% > range2% THEN colr% = range1%„      END SELECT„      '„    NEXT x%„    '„    SELECT CASE special%„      CASE 6 ' Psycho Rainbow„        colr% = colr% + factor%„        IF colr% = bclr% THEN colr% = colr% + 1„        IF colr% >= range2% THEN colr% = range1%„        IF colr% = bclr% THEN colr% = colr% + 1„      CASE 7 ' Psycho Rainbow Fade„        colr% = colr% + 1„        IF colr% > range2% THEN colr% = range1%„      CASE 8 ' Regular Line Fade„        IF INT(RND * 2) = 1 THEN„          colr% = bclr%„        ELSE„          colr% = fclr%„        END IF„      CASE 9 ' Psycho Line Snow„        colr% = INT(RND * factor%)„        IF colr% = bclr% THEN colr% = colr% + 1„      CASE 10 ' Psycho Line Snow Fade„        colr% = INT(RND * factor%)„    END SELECT„    '„  NEXT y%„  '„  FOR dlay = 1 TO 10000: NEXT dlay' Adjust this to your computer„  '„  special% = flag%„  '„END SUB„Andrew L. Ayers                FAST VGA SCROLL                andrewa@indirect.com           08-02-96 (00:00)       QB, QBasic, PDS        88   3093     FASTSCRL.BAS' Description : FastScroll! - VGA Mode 13 Scrolling Routine„' Written by  : Andrew L. Ayers„' Date        : 08/02/96„'„' This little routine allows you to scroll the ENTIRE mode 13„' screen ANY number of pixels up, down, left and right. It uses„' GET/PUT to accomplish this, but the GET/PUT is tiled around„' the screen, so that the buffer used only needs to be about„' 1000 bytes! When you use this routine, don't pass in both„' x and y offsets at one time (don't try to go diagonal) - the„' program will bomb. Pass one, then the other to move diagonally.„' I know this isn't the best way (jumps a bit), but it does work.„' I made this routine for a game, and I only needed the four„' cardinal directions. When scrolling, be aware of the fact that„' if any graphics are on the edges of the scroll region (one pixel„' "in" if offset is 1, two if offset is 2, 4 if offset is four,„'  etc.), when the scroll is performed, "droppings" will be left„' and will need to be cleaned up. I know I could have did this„' myself, but I felt that some people may have wanted droppings„' left (I don't know why...), so I left it like it is.„'„' You may use this routine in any manner you like, as long„' as you give credit in an appropriate manner. Have phun!„'„DECLARE SUB FastScroll (XSpeed%, YSpeed%)„'„SCREEN 13„'„' Set up a Demo Graphic„'„FOR T% = 0 TO 500„  X1% = INT(RND * 260) + 10„  Y1% = INT(RND * 140) + 10„  X2% = INT(RND * 260) + 10„  Y2% = INT(RND * 140) + 10„  C% = INT(RND * 16)„  LINE (X1%, Y1%)-(X2%, Y2%), C%„NEXT T%„'„LOCATE 11, 4: PRINT "FastScroll! by Andrew L. Ayers"„'„' Show off scrolling!„'„count% = 0: x% = 1: y% = 0„'„DO„  count% = count% + 1„  IF count% = 10 THEN x% = 0: y% = 1„  IF count% = 20 THEN x% = -1: y% = 0„  IF count% = 30 THEN x% = 0: y% = -1„  IF count% = 40 THEN x% = 1: y% = 0: count% = 0„  '„  CALL FastScroll(x% * 4, y% * 4)„LOOP UNTIL INKEY$ <> ""„„SUB FastScroll (XSpeed%, YSpeed%)„  '„  DIM Temp%(502)„  '„  XStep% = 40: YStep% = 25„  '„  IF XSpeed% < 0 OR YSpeed% < 0 THEN„    FOR y% = 0 TO 199 STEP YStep%„      FOR x% = 0 TO 319 STEP XStep%„        IF (XSpeed% <> 0 AND x% = 0) OR (YSpeed% <> 0 AND y% = 0) THEN„          GET (x% - XSpeed%, y% - YSpeed%)-(x% + XStep% - 1, y% + YStep% - 1), Temp%„          PUT (x%, y%), Temp%, PSET„        ELSE„          GET (x%, y%)-(x% + XStep% - 1, y% + YStep% - 1), Temp%„          PUT (x% + XSpeed%, y% + YSpeed%), Temp%, PSET„        END IF„      NEXT x%„    NEXT y%„  ELSE„    FOR y% = 199 TO 0 STEP -YStep%„      FOR x% = 319 TO 0 STEP -XStep%„        IF (XSpeed% <> 0 AND x% = 319) OR (YSpeed% <> 0 AND y% = 199) THEN„          GET (x% - (XStep% - 1), y% - (YStep% - 1))-(x% - XSpeed%, y% - YSpeed%), Temp%„          PUT (x% - (XStep% - 1) + XSpeed%, y% - (YStep% - 1) + YSpeed%), Temp%, PSET„        ELSE„          GET (x% - (XStep% - 1), y% - (YStep% - 1))-(x%, y%), Temp%„          PUT (x% - (XStep% - 1) + XSpeed%, y% - (YStep% - 1) + YSpeed%), Temp%, PSET„        END IF„      NEXT x%„    NEXT y%„  END IF„  '„END SUB„Andrew L. Ayers                BIG TEXT SCROLL                andrewa@indirect.com           08-15-96 (00:00)       QB, QBasic, PDS        123  3346     BIGSCROL.BAS' Description : BigScroll! - Another VGA Mode 13 Scrolling Routine„' Written by  : Andrew L. Ayers„' Date        : 08/15/96„'„' This uses my FastScroll! routine, as well as another routine„' to do a LARGE text scroller. Check it out!„'„' You may use this routine in any manner you like, as long„' as you give credit in an appropriate manner. Have phun!„'„DECLARE SUB FastScroll (XSpeed%, YSpeed%)„'„DEFINT A-Z„'„DIM a1(32 * 64 * 11), a2(32 * 64 * 11), a3(32 * 64 * 11)„'„SCREEN 13„'„COLOR 7: LOCATE 10, 6: PRINT "Please wait...Building font": COLOR 0„'„FOR T = 15 TO 255: PALETTE T, 0: NEXT T„'„A$ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ!?.-"„'„FOR T = 0 TO 30„  GOSUB DrawLetter„  GOSUB GetLetter„NEXT T„'„SCREEN 0: CLS 0: SCREEN 13„'„B$ = "BIG SCROLL! BY ANDREW AYERS - HOW DO YOU LIKE IT?...      "„'„DO„  FOR TT = 1 TO LEN(B$)„    T = INSTR(A$, MID$(B$, TT, 1)) - 1„    GOSUB PutLetter„    FOR X = 0 TO 7„      CALL FastScroll(-8, 0)„      LINE (311, 0)-(319, 199), 0, BF„    NEXT X„  NEXT TT„LOOP UNTIL UCASE$(INKEY$) = "Q"„'„STOP„'„DrawLetter:„  '„  LINE (0, 0)-(8, 8), 0, BF„  LINE (0, 100)-(319, 199), 0, BF„  '„  COLOR 255: LOCATE 1, 1: PRINT MID$(A$, T + 1, 1)„  '„  SCALE = 8„  '„  FOR y = 0 TO (SCALE - 1)„    FOR X = 1 TO 1 * SCALE„      IF POINT(X - 1, y) = 255 THEN„        LINE (X * SCALE, 100 + y * SCALE)-(X * SCALE + SCALE, 100 + y * SCALE + SCALE), 15, BF„      END IF„    NEXT X„  NEXT y„  '„  FOR y = 0 TO SCALE * SCALE„    C = (16 * ABS(y < 31)) + INT(y / 2)„    FOR X = 0 TO SCALE * SCALE„      IF POINT(X, 100 + y) THEN„        PSET (X, 100 + y), C„      END IF„    NEXT X„  NEXT y„  '„  RETURN„„GetLetter:„  '„  IF T >= 0 AND T < 10 THEN GET (0, 100)-(64, 160), a1(T * 32 * 64)„  IF T >= 10 AND T < 20 THEN GET (0, 100)-(64, 160), a2((T - 10) * 32 * 64)„  IF T >= 20 AND T < 30 THEN GET (0, 100)-(64, 160), a3((T - 20) * 32 * 64)„  '„  RETURN„„PutLetter:„  '„  IF T >= 0 AND T < 10 THEN PUT (255, 68), a1(T * 32 * 64), PSET„  IF T >= 10 AND T < 20 THEN PUT (255, 68), a2((T - 10) * 32 * 64), PSET„  IF T >= 20 AND T < 30 THEN PUT (255, 68), a3((T - 20) * 32 * 64), PSET„  '„  RETURN„„SUB FastScroll (XSpeed%, YSpeed%)„  '„  DIM Temp%(502)„  '„  XStep% = 40: YStep% = 25„  '„  IF XSpeed% < 0 OR YSpeed% < 0 THEN„    FOR y% = 0 TO 199 STEP YStep%„      FOR X% = 0 TO 319 STEP XStep%„        IF (XSpeed% <> 0 AND X% = 0) OR (YSpeed% <> 0 AND y% = 0) THEN„          GET (X% - XSpeed%, y% - YSpeed%)-(X% + XStep% - 1, y% + YStep% - 1), Temp%„          PUT (X%, y%), Temp%, PSET„        ELSE„          GET (X%, y%)-(X% + XStep% - 1, y% + YStep% - 1), Temp%„          PUT (X% + XSpeed%, y% + YSpeed%), Temp%, PSET„        END IF„      NEXT X%„    NEXT y%„  ELSE„    FOR y% = 199 TO 0 STEP -YStep%„      FOR X% = 319 TO 0 STEP -XStep%„        IF (XSpeed% <> 0 AND X% = 319) OR (YSpeed% <> 0 AND y% = 199) THEN„          GET (X% - (XStep% - 1), y% - (YStep% - 1))-(X% - XSpeed%, y% - YSpeed%), Temp%„          PUT (X% - (XStep% - 1) + XSpeed%, y% - (YStep% - 1) + YSpeed%), Temp%, PSET„        ELSE„          GET (X% - (XStep% - 1), y% - (YStep% - 1))-(X%, y%), Temp%„          PUT (X% - (XStep% - 1) + XSpeed%, y% - (YStep% - 1) + YSpeed%), Temp%, PSET„        END IF„      NEXT X%„    NEXT y%„  END IF„  '„END SUB„Andrew L. Ayers                VGA PALETTE READ/WRITE ROUTINESandrewa@indirect.com           07-24-96 (00:00)       QB, QBasic, PDS        129  3662     VGAPAL.BAS  ' Description : Mode 13 VGA Palette Read/Write Subroutines„'               and custom palette setting routine„' Written by  : Andrew L. Ayers„' Date        : 07/24/96„'„' These read/write routines were developed from information„' provided by Eli Bennett in an ABC Code Packet. The palette„' setting (spreading?) routine is my own. These routines should„' make it easier to read/write RGB values to the VGA palette in„' mode 13 as well as in setting up palettes. If you use these„' routines, please give credit to both Mr. Bennett and myself.„' Have phun!„'„DECLARE SUB ReadRGB (red%, grn%, blu%, slot%)„DECLARE SUB WriteRGB (red%, grn%, blu%, slot%)„DECLARE SUB SetPal (start.slot%, end.slot%)„'„DIM oldr%(255), oldg%(255), oldb%(255)„'„SCREEN 13„'„' Save old palette„'„FOR t% = 0 TO 255„  CALL ReadRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„'„' Create a custom 256 color palette„'„CALL WriteRGB(63, 63, 63, 1)   ' From all white„CALL WriteRGB(63, 0, 0, 63)    ' to red, and then„CALL WriteRGB(0, 63, 0, 127)   ' to green, then„CALL WriteRGB(0, 0, 63, 191)   ' to blue, and finally„CALL WriteRGB(63, 63, 63, 255) ' back to white...„'„CALL SetPal(1, 63)             ' Each of these lines„CALL SetPal(63, 127)           ' create a portion of„CALL SetPal(127, 191)          ' the color spread. The„CALL SetPal(191, 255)          ' two arguments are the„                               ' start and ending slots„                               ' for the spread...„'„' Display example„'„FOR t% = 1 TO 255„  LINE (t% - 1, 0)-(t% - 1, 199), t%„NEXT t%„„'„' Rotate palette - this isn't how you would do it„' for speed (for more speed, inline the read/write code„' to eliminate subroutine calling overhead), but it„' does show how to do it. Notice the "sparklies" along„' the right hand edge. These are only apparent if your„' computer is fast enough. I believe this has to do with„' the registers being updated faster than the video card„' can keep up with or sothing like that. If anyone knows„' how to fix this, go for it!„'„DO„  '„  CALL ReadRGB(ored%, ogrn%, oblu%, 1)     ' Read in slot 1.„  '„  FOR t% = 1 TO 254„    CALL ReadRGB(red%, grn%, blu%, t% + 1) ' Read slots 2-255, then„    CALL WriteRGB(red%, grn%, blu%, t%)    ' shift to slots 1-254.„  NEXT t%„  '„  CALL WriteRGB(ored%, ogrn%, oblu%, 255)  ' Write what was in slot 1 to„                                           ' slot 255.„LOOP UNTIL INKEY$ <> ""„'„CLS„„'„' Reset original RGB values„'„FOR t% = 0 TO 255„  CALL WriteRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„„SUB ReadRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C7, slot% ' Read RGB values from slot„  '„  red% = INP(&H3C9)„  grn% = INP(&H3C9)„  blu% = INP(&H3C9)„  '„END SUB„„SUB SetPal (start.slot%, end.slot%)„  '„  num.slots% = end.slot% - start.slot%„  '„  CALL ReadRGB(sr%, sg%, sb%, start.slot%)„  CALL ReadRGB(er%, eg%, eb%, end.slot%)„  '„  rr% = ABS(er% - sr%): rg% = ABS(eg% - sg%): rb% = ABS(eb% - sb%)„  rs% = SGN(er% - sr%): gs% = SGN(eg% - sg%): bs% = SGN(eb% - sb%)„  '„  stepr = (rr% / num.slots%) * rs%„  stepg = (rg% / num.slots%) * gs%„  stepb = (rb% / num.slots%) * bs%„  '„  r = sr%: g = sg%: b = sb%„  wr% = r: wg% = g: wb% = b„  '„  FOR t% = start.slot% TO end.slot%„    '„    CALL WriteRGB(wr%, wg%, wb%, t%)„    '„    r = r + stepr: wr% = r„    g = g + stepg: wg% = g„    b = b + stepb: wb% = b„    '„  NEXT t%„  '„END SUB„„SUB WriteRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C8, slot% ' Write RGB values to slot„  '„  OUT &H3C9, red%„  OUT &H3C9, grn%„  OUT &H3C9, blu%„  '„END SUB„Andrew L. Ayers                VGA SINUSOIDAL PLASMA          andrewa@indirect.com           07-24-96 (00:00)       QB, QBasic, PDS        175  4887     PLASMA.BAS  ' Description : Mode 13 VGA Sinusoidal Plasma!„' Written by  : Andrew L. Ayers„' Date        : 07/24/96„'„' Now here's one for the masses! This creates sinusoidal plasma, which„' tends to be way easier to create than cloud plasma. This routine isn't„' optimized too much (a SIN table would speed it up some). Play with it„' some. As always, if you use the routine in your own program or demo,„' please mention my name. Thanks, and have phun!„„DECLARE SUB SetPal (start.slot%, end.slot%)„DECLARE SUB ReadRGB (red%, grn%, blu%, slot%)„DECLARE SUB WriteRGB (red%, grn%, blu%, slot%)„'„DIM oldr%(255), oldg%(255), oldb%(255), A%(300), C%(300)„'„SCREEN 13„'„' Save old palette, set palette to black to„' hide the build process...„'„FOR t% = 0 TO 255„  CALL ReadRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„  CALL WriteRGB(0, 0, 0, t%)„NEXT t%„'„' TPI = 2 x PI - Do NOT mess with, needed for SIN Calcs„' FREQ = Frequency (Duh!)   - Go ahead and mess with these two...„' AMPLITUDE = (Double Duh!)„'„TPI = 6.28318: FREQ% = 4: AMPLITUDE% = 15„'„' Create Sinusoidal Multicolored Backdrop Thingy!„'„SCALE = (TPI * FREQ%) / 320„'„FOR Y% = 0 TO 199„  RAD = 0„  COLR% = COLR% + 1: IF COLR% > 255 THEN COLR% = 1„  LINE (0, Y%)-(0, Y%), COLR%„  FOR X% = 0 TO 319 STEP 8„    YPOS% = Y% + SIN(RAD) * AMPLITUDE%„    LINE -(X%, YPOS%), COLR%„    RAD = RAD + (SCALE * 6)„  NEXT X%„NEXT Y%„'„' Warp it sinusoidally in a horizontal fashion!„'„RAD = 0„FREQ% = 8: AMPLITUDE% = 15„SCALE = (TPI * FREQ%) / 200„'„FOR Y% = 0 TO 199„  XPOS% = INT(SIN(RAD) * AMPLITUDE%)„  GET (0, Y%)-(319 - XPOS%, Y%), A%„  IF XPOS% >= 0 THEN„    GET (319 - XPOS%, Y%)-(319, Y%), C%„    PUT (XPOS%, Y%), A%, PSET„    PUT (0, Y%), C%, PSET„  ELSE„    GET (ABS(XPOS%), Y%)-(319, Y%), A%„    GET (0, Y%)-(ABS(XPOS%), Y%), C%„    PUT (0, Y%), A%, PSET„    PUT (319 + XPOS%, Y%), C%, PSET„  END IF„  RAD = RAD + SCALE„NEXT Y%„'„' Mask off ugly portions„'„LINE (0, 0)-(319, 17), 0, BF„LINE (0, 174)-(319, 199), 0, BF„LINE (0, 0)-(35, 199), 0, BF„LINE (289, 0)-(319, 199), 0, BF„'„LOCATE 2, 9: PRINT "Sinusoidal Plasma Effect!"„LOCATE 23, 12: PRINT "By Andrew L. Ayers"„'„' Create a custom 256 color palette„'„CALL WriteRGB(63, 63, 63, 1)   ' From all white„CALL WriteRGB(63, 0, 0, 63)    ' to red, and then„CALL WriteRGB(0, 63, 0, 127)   ' to green, then„CALL WriteRGB(0, 0, 63, 191)   ' to blue, and finally„CALL WriteRGB(63, 63, 63, 255) ' back to white...„'„CALL SetPal(1, 63)             ' Each of these lines„CALL SetPal(63, 127)           ' create a portion of„CALL SetPal(127, 191)          ' the color spread. The„CALL SetPal(191, 255)          ' two arguments are the„                               ' start and ending slots„                               ' for the spread...„„'„' Rotate palette - this isn't how you would do it„' for speed (for more speed, inline the read/write code„' to eliminate subroutine calling overhead), but it„' does show how to do it. Notice the "sparklies" along„' the right hand edge. These are only apparent if your„' computer is fast enough. I believe this has to do with„' the registers being updated faster than the video card„' can keep up with or sothing like that. If anyone knows„' how to fix this, go for it!„'„DO„  '„  CALL ReadRGB(ored%, ogrn%, oblu%, 1)     ' Read in slot 1.„  '„  FOR t% = 1 TO 254„    CALL ReadRGB(red%, grn%, blu%, t% + 1) ' Read slots 2-255, then„    CALL WriteRGB(red%, grn%, blu%, t%)    ' shift to slots 1-254.„  NEXT t%„  '„  CALL WriteRGB(ored%, ogrn%, oblu%, 255)  ' Write what was in slot 1 to„                                           ' slot 255.„LOOP UNTIL INKEY$ <> ""„'„CLS„„'„' Reset original RGB values„'„FOR t% = 0 TO 255„  CALL WriteRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„„SUB ReadRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C7, slot% ' Read RGB values from slot„  '„  red% = INP(&H3C9)„  grn% = INP(&H3C9)„  blu% = INP(&H3C9)„  '„END SUB„„SUB SetPal (start.slot%, end.slot%)„  '„  num.slots% = end.slot% - start.slot%„  '„  CALL ReadRGB(sr%, sg%, sb%, start.slot%)„  CALL ReadRGB(er%, eg%, eb%, end.slot%)„  '„  rr% = ABS(er% - sr%): rg% = ABS(eg% - sg%): rb% = ABS(eb% - sb%)„  rs% = SGN(er% - sr%): gs% = SGN(eg% - sg%): bs% = SGN(eb% - sb%)„  '„  stepr = (rr% / num.slots%) * rs%„  stepg = (rg% / num.slots%) * gs%„  stepb = (rb% / num.slots%) * bs%„  '„  r = sr%: g = sg%: b = sb%„  wr% = r: wg% = g: wb% = b„  '„  FOR t% = start.slot% TO end.slot%„    '„    CALL WriteRGB(wr%, wg%, wb%, t%)„    '„    r = r + stepr: wr% = r„    g = g + stepg: wg% = g„    b = b + stepb: wb% = b„    '„  NEXT t%„  '„END SUB„„SUB WriteRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C8, slot% ' Write RGB values to slot„  '„  OUT &H3C9, red%„  OUT &H3C9, grn%„  OUT &H3C9, blu%„  '„END SUB„Andrew L. Ayers                CLOUD PLASMA EFFECT            andrewa@indirect.com           07-24-96 (00:00)       QB, QBasic, PDS        222  6227     CLOUD.BAS   ' Description : Mode 13 VGA Cloud Plasma!„' Written by  : Andrew L. Ayers„' Date        : 07/24/96„'„' Now here's yet another for the masses! This creates cload plasma, which„' is also known as fractal plasma. This routine is pretty damn fast„' already, but if you can speed it up, go for it! Play with it some.„' As always, if you use the routine in your own program or demo, please„' mention my name. Thanks, and have phun!„„DECLARE SUB SetPal (start.slot%, end.slot%)„DECLARE SUB ReadRGB (red%, grn%, blu%, slot%)„DECLARE SUB WriteRGB (red%, grn%, blu%, slot%)„DECLARE SUB PLASMA (XE%, YE%, SCALE%)„DECLARE SUB DRAW.PLASMA (XS%, YS%, XE%, YE%, REDRAW%, SCALE%)„'„DIM oldr%(255), oldg%(255), oldb%(255)„'„SCREEN 13„'„' Save old palette, change to black to„' hide build process„'„FOR t% = 0 TO 255„  CALL ReadRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„  CALL WriteRGB(0, 0, 0, t%)„NEXT t%„„'„RANDOMIZE TIMER„'„CALL PLASMA(512, 256, 4)„„LOCATE 2, 11: PRINT "Cloud Plasma Effect!"„LOCATE 23, 12: PRINT "By Andrew L. Ayers"„„'„' Create a custom 256 color palette„'„CALL WriteRGB(0, 0, 0, 1)„CALL WriteRGB(63, 63, 0, 31)„CALL WriteRGB(0, 0, 63, 63)„CALL WriteRGB(0, 63, 63, 95)„CALL WriteRGB(63, 0, 0, 127)„CALL WriteRGB(0, 63, 0, 159)„CALL WriteRGB(63, 0, 63, 191)„CALL WriteRGB(63, 63, 63, 223)„CALL WriteRGB(0, 0, 0, 255)„'„CALL SetPal(1, 31)„CALL SetPal(31, 63)„CALL SetPal(63, 95)„CALL SetPal(95, 127)„CALL SetPal(127, 159)„CALL SetPal(159, 191)„CALL SetPal(191, 223)„CALL SetPal(223, 255)„„'„' Rotate palette - this isn't how you would do it„' for speed (for more speed, inline the read/write code„' to eliminate subroutine calling overhead), but it„' does show how to do it. Notice the "sparklies" along„' the right hand edge. These are only apparent if your„' computer is fast enough. I believe this has to do with„' the registers being updated faster than the video card„' can keep up with or sothing like that. If anyone knows„' how to fix this, go for it!„'„DO„  '„  CALL ReadRGB(ored%, ogrn%, oblu%, 1)     ' Read in slot 1.„  '„  FOR t% = 1 TO 254„    CALL ReadRGB(red%, grn%, blu%, t% + 1) ' Read slots 2-255, then„    CALL WriteRGB(red%, grn%, blu%, t%)    ' shift to slots 1-254.„  NEXT t%„  '„  CALL WriteRGB(ored%, ogrn%, oblu%, 255)  ' Write what was in slot 1 to„                                           ' slot 255.„  FOR dlay% = 1 TO 15000: NEXT dlay%        ' This may need adjusting„LOOP UNTIL INKEY$ <> ""„'„CLS„„'„' Reset original RGB values„'„FOR t% = 0 TO 255„  CALL WriteRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„„SUB DRAW.PLASMA (XS%, YS%, XE%, YE%, REDRAW%, SCALE%)„  '„  STATIC ITER%„  '„  IF REDRAW% THEN ITER% = 1: REDRAW% = 0„  IF ITER% = 1 THEN„    ITER% = 0„    LINE (XS%, YS%)-(XS% + SCALE% - 1, YS% + SCALE% - 1), INT(RND * 63) + 1, BF„    LINE (XE%, YS%)-(XE% + SCALE% - 1, YS% + SCALE% - 1), INT(RND * 63) + 1, BF„    LINE (XS%, YE%)-(XS% + SCALE% - 1, YE% + SCALE% - 1), INT(RND * 63) + 1, BF„    LINE (XE%, YE%)-(XE% + SCALE% - 1, YE% + SCALE% - 1), INT(RND * 63) + 1, BF„  END IF„  '„  SIZE% = (XE% - XS%) / 2„  IF SIZE% < SCALE% THEN EXIT SUB„  '„  SIZE% = SIZE% + (INT(RND * 8) - 4)„  '„  X1% = XS% + (XE% - XS%) / 2„  Y1% = YS% + (YE% - YS%) / 2„  '„  C1% = POINT(XS%, YS%)' UL„  C2% = POINT(XE%, YS%)' UR„  C3% = POINT(XS%, YE%)' LL„  C4% = POINT(XE%, YE%)' LR„  '„  C5% = (C1% + C2%) / 2 ' UL+UR„  C6% = (C1% + C3%) / 2 ' UL+LL„  C7% = (C2% + C4%) / 2 ' UR+LR„  C8% = (C3% + C4%) / 2 ' LL+LR„  C9% = (C5% + C6% + C7% + C8%) / 4 ' MID„  '„  C5% = C5% + INT(RND * SIZE%) - (SIZE% / 2)„  C6% = C6% + INT(RND * SIZE%) - (SIZE% / 2)„  C7% = C7% + INT(RND * SIZE%) - (SIZE% / 2)„  C8% = C8% + INT(RND * SIZE%) - (SIZE% / 2)„  C9% = C9% + INT(RND * SIZE%) - (SIZE% / 2)„  '„  IF C5% < 1 THEN C5% = 1„  IF C6% < 1 THEN C6% = 1„  IF C7% < 1 THEN C7% = 1„  IF C8% < 1 THEN C8% = 1„  IF C9% < 1 THEN C9% = 1„  '„  IF C5% > 63 THEN C5% = 63„  IF C6% > 63 THEN C6% = 63„  IF C7% > 63 THEN C7% = 63„  IF C8% > 63 THEN C8% = 63„  IF C9% > 63 THEN C9% = 63„  '„  IF XS% = 0 OR YS% = 0 THEN„    LINE (XS%, YS%)-(XS% + SCALE% - 1, YS% + SCALE% - 1), C5%, BF' TM„  END IF„  IF XS% = 0 OR Y1% = 0 THEN„    LINE (XS%, Y1%)-(XS% + SCALE% - 1, Y1% + SCALE% - 1), C6%, BF' LM„  END IF„  '„  IF XE% < 320 AND Y1% < 200 THEN„    LINE (XE%, Y1%)-(XE% + SCALE% - 1, Y1% + SCALE% - 1), C7%, BF' RM„  END IF„  IF X1% < 320 AND YE% < 200 THEN„    LINE (X1%, YE%)-(X1% + SCALE% - 1, YE% + SCALE% - 1), C8%, BF' BM„  END IF„  IF X1% < 320 AND Y1% < 200 THEN„    LINE (X1%, Y1%)-(X1% + SCALE% - 1, Y1% + SCALE% - 1), C9%, BF' MID„  END IF„  '„  CALL DRAW.PLASMA(XS%, YS%, X1%, Y1%, REDRAW%, SCALE%)„  CALL DRAW.PLASMA(X1%, YS%, XE%, Y1%, REDRAW%, SCALE%)„  CALL DRAW.PLASMA(XS%, Y1%, X1%, YE%, REDRAW%, SCALE%)„  CALL DRAW.PLASMA(X1%, Y1%, XE%, YE%, REDRAW%, SCALE%)„  '„END SUB„„SUB PLASMA (XE%, YE%, SCALE%)„  '„  CALL DRAW.PLASMA(0, 0, XE%, YE%, 1, SCALE%)„  LINE (0, 0)-(XE% + SCALE% - 1, YS% + SCALE% - 1), 0, BF„  LINE (0, 0)-(XS% + SCALE% - 1, YE% + SCALE% - 1), 0, BF„  '„END SUB„„SUB ReadRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C7, slot% ' Read RGB values from slot„  '„  red% = INP(&H3C9)„  grn% = INP(&H3C9)„  blu% = INP(&H3C9)„  '„END SUB„„SUB SetPal (start.slot%, end.slot%)„  '„  num.slots% = end.slot% - start.slot%„  '„  CALL ReadRGB(sr%, sg%, sb%, start.slot%)„  CALL ReadRGB(er%, eg%, eb%, end.slot%)„  '„  rr% = ABS(er% - sr%): rg% = ABS(eg% - sg%): rb% = ABS(eb% - sb%)„  rs% = SGN(er% - sr%): gs% = SGN(eg% - sg%): bs% = SGN(eb% - sb%)„  '„  stepr = (rr% / num.slots%) * rs%„  stepg = (rg% / num.slots%) * gs%„  stepb = (rb% / num.slots%) * bs%„  '„  r = sr%: g = sg%: b = sb%„  wr% = r: wg% = g: wb% = b„  '„  FOR t% = start.slot% TO end.slot%„    '„    CALL WriteRGB(wr%, wg%, wb%, t%)„    '„    r = r + stepr: wr% = r„    g = g + stepg: wg% = g„    b = b + stepb: wb% = b„    '„  NEXT t%„  '„END SUB„„SUB WriteRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C8, slot% ' Write RGB values to slot„  '„  OUT &H3C9, red%„  OUT &H3C9, grn%„  OUT &H3C9, blu%„  '„END SUB„Andrew L. Ayers                BUFFER TO SCREEN COPY ROUTINE  andrewa@indirect.com           08-21-96 (00:00)       QB, QBasic, PDS        93   4093     BCOPY.BAS   ' Description : BlastCopy! - VGA Mode 13 Buffer to Screen Copy Routine„'               Get ready for some rock and roll - this baby's fast!„' Written by  : Andrew L. Ayers„' Date        : 08/21/96„'„' Ok! Here's one! I am sick of Mode 13h not having a way to PCOPY! So I am„' setting out to remedy it. First, a rather large buffer is created using„' DIMension. Since the smallest data type we can use is WORD size, and mode„' 13h uses one byte per pixel, and there are 64000 pixels on the screen, we„' need a buffer 32000 WORDs long. Hence, the following:„'„DIM buffer%(31999), code1%(29)„'„' BTW - buffer%() is the buffer, code%() is an area of memory set aside for„'       the copy routine, see below...„'„' Now we need a copy routine. BASIC is too damn slow for this amount of work,„' so I resorted to assembler (all right, some of you! I hear groaning!).„' Noooooooo! Yes! This works, it isn't hard to understand, just get a good„' book! I shied away from assembler myself, but was able to pick up enough to„' do this routine in a couple of days. So, anyhow here is the assembler code.„'„' Assembler code is as follows:„'„' 1E            PUSH    DS              ' Save the Data Segment„' 55            PUSH    BP              ' Save the Base Pointer„' 89E5          MOV     BP,SP           ' Get the Stack Pointer„' 8B460A        MOV     AX,[BP+0A]      ' Let AX=Buffer Segment Address„' 8ED8          MOV     DS,AX           ' Set the Data Segment=AX„' 8B7608        MOV     SI,[BP+08]      ' Let Source Index(SI)=Buffer Offset„' B800A0        MOV     AX,A000         ' Set AX=Start of Video (13h)„' 8EC0          MOV     ES,AX           ' Set the Extra Segment„' BF0000        MOV     DI,0000         ' Set the Destination Index to 0„' B9007D        MOV     CX,7D00         ' Number of words to copy (32000)„' F3A5          REP     MOVSW           ' Move the words!„' 5D            POP     BP              ' Reset the Base Pointer„' 1F            POP     DS              ' Reset the Data Segment„' CA0400        RETF    0004            ' Return to BASIC Program, clean up„'                                         stack...„'„' I know, I know. Some of you assembler freaks out there can see some ways„' of speeding it up, such as using LDS and LES, or even using the faster„' double WORD copy (on 386-486). Well, I used DEBUG, and I was learning, so„' this is what you get. Speed it up if you want!„'„' And here it is encoded as HEX in a string for us to use...„'„code1$ = "1E5589E58B460A8ED88B7608B800A08EC0BF0000B9007DF3A55D1FCA0400"„'„' Where did I get the HEX codes? Using DEBUG! DEBUG is what is known as a„' monitor. It allows you to change/create machine code directly, without an„' assembler. It isn't hard to learn. Just pick up a copy of PC Magazine's„' DOS books - it will show you how to use it. They also have one for BASIC,„' which shows assembler stuff. I used DEBUG instead of MASM, because of two„' reasons: 1) I don't have MASM, 2) MASM costs too much. Fortunately, there„' are shareware assemblers out there, but since DEBUG comes with DOS, why„' not try it?„'„' Now we poke the code into the memory reserved for it:„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 29„  d% = VAL("&h" + MID$(code1$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„' This sets the buffer to "pretty" colors„' Some form of assembler is needed here to speed this up - perhaps a new„' kind of GET/PUT style routine...Hmm...„'„FOR t% = 0 TO 31999„  buffer%(t%) = t%„NEXT t%„'„' Gee... What does this line do?...„'„SCREEN 13„'„' Wait for user input„'„LOCATE 1, 1: PRINT "Press any key to clear...";„key$ = INPUT$(1)„'„' Call our routine - MUST pass segment and offset of buffer using BYVAL,„' otherwise you'll get the addresses only - not good...„'„DEF SEG = VARSEG(code1%(0))„CALL ABSOLUTE(BYVAL VARSEG(buffer%(0)), BYVAL VARPTR(buffer%(0)), VARPTR(code1%(0)))„DEF SEG„'„' As always, you may use this code for whatever you want, just give me„' credit where you can. Thanx, and have phun!„Kurt Kuzba                     USING GET & PUT                FidoNet QUIK_BAS Echo          08-02-96 (14:43)       QB, QBasic, PDS        32   1835     GET&PUT.BAS '>   Can any one help me with the statements GET adn PUT? In„'>   screen mode 13? Does anyone know how to display a sprite„'>   that is made with Sprite Editor and is appended into a„'>   QBasic program using the DATA statement? What it does is„'>   put a sprite that you draw in Sprite Editor in QBasic using„'>   DATA statements?? I don't get it???„'>.....................................„'   GET and PUT in mode 13 is simple. You can actually work with„'the data in your array, unlike with mode 12. I have yet to make„'heads or tails of the array data arrived at with the GET in 12.„'You require one byte for each pixel, plus four bytes to hold the„'block format data, which is two integer values, one for the width,„'and one for the height, of the graphical block. Try this:„SCREEN 13„DIM BUF(602) AS INTEGER   '(40x30 + 4 bytes for format data) / 2„BUF(0) = 320              'set block width (in BITS!) 40 * 8„BUF(1) = 30               'set block height„DEF SEG = VARSEG(BUF(0)): O& = VARPTR(BUF(0)) + 4„                          'set segment to directly manipulate BUF„DO„   Colour% = RND * 255„   FOR T& = O& TO O& + 1199: POKE T&, Colour%: NEXT„                     'set BUF contents to another color at random„   X% = RND * 279: Y% = RND * 169  'Pick a random screen location.„   IF (Colour% AND 1) <> 0 THEN    'This IF/THEN/ELSE is just for„      PUT (X%, Y%), BUF, PSET      'fun, alternating between the„   ELSE                            'absolute PSET usage and the„      PUT (X%, Y%), BUF, XOR       'XOR, combining present image„   END IF                          'with the imposed image. It„   IF INKEY$ <> "" THEN EXIT DO    'makes the display just a bit„LOOP                               'more interesting to watch„SCREEN 0: WIDTH 80, 25: END        'go back to 80x25 text and end.„Jonathan Leger                 GRAPHICS LOADER                leger@mail.dtx.net             08-12-96 (21:48)       QB, QBasic, PDS        935  26247    FX2.BAS     '----------------------------------------------------------„' Requires Luke Molnar's ULTIMATE FONT V1.1„'   Please refer to GRAPHICS.ABC of the July 1996 Edition„'----------------------------------------------------------„„DEFINT A-Z„„'**** Screen routines„DECLARE SUB LoadGif (file$)„DECLARE SUB LoadPcx (file$)„DECLARE SUB BsaveScreen (file$)„DECLARE SUB GiftoBSAVE (gif$, bsave$, pal$)„„'*** Palette routines„DECLARE SUB GetPal (pal())„DECLARE SUB PutPal (pal())„DECLARE SUB SavePal (file$)„DECLARE SUB LoadPal (file$)„DECLARE SUB RotatePal (direction, pal())„DECLARE SUB CyclePal (direction, pal(), numcycles)„„'*** Palette fx„DECLARE SUB FadeOut (pal())„DECLARE SUB FadeIn (pal())„DECLARE SUB BlackOut ()„„'*** Drawing Routines„DECLARE SUB ClrScr (col)„„'*** Font routines„DECLARE SUB Font (Text$, XStart, Ystart, Xscale, Yscale, Style, clr)„DECLARE SUB LoadFont ()„DECLARE SUB MakeFont ()„DECLARE SUB FontPal ()„„'*** EMS routines„DECLARE FUNCTION NumEMSHandles% ()„DECLARE FUNCTION NumEMSPages% (Handle%)„DECLARE FUNCTION GetEMS% (numpages%)„DECLARE FUNCTION EMSPages% (func%)„DECLARE FUNCTION PageFrame% ()„DECLARE FUNCTION EMSstatus% ()„DECLARE SUB ReleaseEMS (Handle%)„DECLARE SUB MapEMS (Handle%, block%)„„'*** Memory manipulation routines„DECLARE SUB MemCopy (fromseg, fromoff, toseg, tooff, numbytes)„DECLARE SUB FillChar (segment, offset, value, bytes)„„'*** Miscelaneous„DECLARE SUB WaitRetrace ()„„OPTION BASE 0„„'$STATIC„DIM pal1(0 TO 255, 3) AS INTEGER„DIM pal2(0 TO 255, 3) AS INTEGER„DIM SHARED FontBuf(0) AS STRING * 10368„„'$DYNAMIC„„LoadFont„„SCREEN 13„„GetPal pal1()„„FontPal„GetPal pal2()„BlackOut„„Font "BASIC FX", 50, 75, 3, 3, 3, 70„FadeIn pal2()„„WHILE INKEY$ = "": WEND„FadeOut pal2()„CLS„„Font "The font routines were written by:", 0, 0, 1, 1, 3, 120„Font "Luke Molnar", 70, 25, 2, 2, 3, 1„Font "Other routines written/collected by:", 0, 100, 1, 1, 3, 120„Font "Jonathan Leger", 40, 125, 2, 2, 3, 1„„FadeIn pal2()„„WHILE INKEY$ = "": WEND„„FadeOut pal2()„CLS„„PutPal pal1()„„Font "LoadGif()", 115, 100, 1, 1, 5, 15„Font "press a key", 105, 125, 1, 1, 5, 15„WHILE INKEY$ = "": WEND„„LoadGif "letterma.gif"„FOR snd = 1000 TO 1500 STEP 100„   SOUND snd, .1„   SOUND snd + 100, .1„   SOUND snd + 200, .1„NEXT snd„„WHILE INKEY$ = "": WEND„„CLS„PutPal pal1()„„Font "LoadPcx()", 115, 100, 1, 1, 5, 15„Font "press a key", 105, 125, 1, 1, 5, 15„WHILE INKEY$ = "": WEND„„LoadPcx "bwface.pcx"„FOR snd = 1000 TO 1500 STEP 100„   SOUND snd, .1„   SOUND snd + 100, .1„   SOUND snd + 200, .1„NEXT snd„„WHILE INKEY$ = "": WEND„„IF EMSstatus THEN„   IF EMSPages(1) >= 4 THEN„      PCXHandle = GetEMS(4)„      MapEMS PCXHandle, 0„      MemCopy &HA000, 0, PageFrame, 0, &HFA00„      CLS„      Font "The previous picture has been", 0, 0, 1, 1, 5, 15„      Font "loaded into EMS memory.", 0, 25, 1, 1, 5, 15„      Font "Press any key to load picture.", 0, 50, 1, 1, 5, 15„      WHILE INKEY$ = "": WEND„      MemCopy PageFrame, 0, &HA000, 0, &HFA00„      WHILE INKEY$ = "": WEND„      ReleaseEMS PCXHandle„   END IF„END IF„„GetPal pal2()„„Font "CyclePal()", 115, 100, 1, 1, 5, 15„„DO UNTIL LEN(INKEY$) > 0„   CyclePal 1, pal2(), 1„LOOP„„BlackOut„CLS„„FontPal„GetPal pal2()„BlackOut„„Font "End of..", 0, 25, 1, 1, 5, 18„Font "BASIC FX", 50, 75, 3, 3, 3, 70„Font "...Demo", 240, 145, 1, 1, 5, 18„FadeIn pal2()„„WHILE INKEY$ = "": WEND„FadeOut pal2()„CLS„PutPal pal1()„„SCREEN 0„WIDTH 80, 25„END„„REM $STATIC„SUB BlackOut„„   FOR clr = 0 TO 255„      OUT &H3C8, clr„      OUT &H3C9, 0„      OUT &H3C9, 0„      OUT &H3C9, 0„   NEXT clr„„END SUB„„SUB BsaveScreen (file$)„„DEF SEG = &HA000„BSAVE file$, 0, 64000„DEF SEG„„END SUB„„SUB ClrScr (col)„„FillChar &HA000, 0, col, &HFA00„„END SUB„„SUB CyclePal (direction, pal(), numcycles)„„FOR x = 1 TO numcycles„   WaitRetrace„   RotatePal direction, pal()„NEXT x„„END SUB„„'************* EMSPages%() ****************„'*** When func% is 0, returns the total ***„'*** number of 16k pages, when func% is ***„'*** 1, returns the number of available ***„'*** 16k pages.                         ***„'******************************************„FUNCTION EMSPages% (func%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(66) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(8) + CHR$(137) + CHR$(21) + CHR$(93) + CHR$(203)„„TotalPages% = 0: AvailablePages% = 0„„DEF SEG = VARSEG(asm$)„   CALL Absolute(TotalPages%, AvailablePages%, SADD(asm$))„DEF SEG„„IF func% = 0 THEN„   EMSPages% = TotalPages%„ELSE„   EMSPages% = AvailablePages%„END IF„„END FUNCTION„„'**************** EMSstatus%() ******************„'*** Returns whether EMS is available.  -1 is ***„'*** returned if it is available, 0 otherwise ***„'************************************************„FUNCTION EMSstatus%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(64) + CHR$(205) + CHR$(103) + CHR$(176) + CHR$(0)„asm$ = asm$ + CHR$(139) + CHR$(94) + CHR$(6) + CHR$(137) + CHR$(7)„asm$ = asm$ + CHR$(93) + CHR$(203)„„EMS% = -1„DEF SEG = VARSEG(asm$)„   CALL Absolute(EMS%, SADD(asm$))„DEF SEG„„IF EMS% = 0 THEN„   EMSstatus = -1         'EMS installed, set to BASIC's TRUE value.„ELSE„   EMSstatus = 0          'EMS not installed, set to FALSE.„END IF„„END FUNCTION„„SUB FadeIn (pal())„„DIM Tmp(0 TO 255, 3)„„FOR lp = 1 TO 64„   FOR clr = 0 TO 255„      FOR rgb = 1 TO 3„         IF Tmp(clr, rgb) < pal(clr, rgb) THEN„            Tmp(clr, rgb) = Tmp(clr, rgb) + 1„         END IF„      NEXT rgb„      OUT &H3C8, clr„      OUT &H3C9, Tmp(clr, 1)„      OUT &H3C9, Tmp(clr, 2)„      OUT &H3C9, Tmp(clr, 3)„   NEXT clr„NEXT lp„„„END SUB„„SUB FadeOut (pal())„„DIM Tmp(0 TO 255, 3)„„FOR clr = 0 TO 255„   FOR rgb = 1 TO 3„      Tmp(clr, rgb) = pal(clr, rgb)„   NEXT rgb„NEXT clr„„FOR lp = 1 TO 64„   FOR clr = 0 TO 255„      FOR rgb = 1 TO 3„         IF Tmp(clr, rgb) > 0 THEN„            Tmp(clr, rgb) = Tmp(clr, rgb) - 1„         END IF„      NEXT rgb„      OUT &H3C8, clr„      OUT &H3C9, Tmp(clr, 1)„      OUT &H3C9, Tmp(clr, 2)„      OUT &H3C9, Tmp(clr, 3)„   NEXT clr„NEXT lp„„„END SUB„„SUB FillChar (segment, offset, value, bytes)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(78) + CHR$(6) + CHR$(139) + CHR$(86) + CHR$(8)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(12) + CHR$(30) + CHR$(142)„asm$ = asm$ + CHR$(216) + CHR$(139) + CHR$(94) + CHR$(10) + CHR$(136)„asm$ = asm$ + CHR$(23) + CHR$(67) + CHR$(226) + CHR$(251) + CHR$(31)„asm$ = asm$ + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL segment, BYVAL offset, BYVAL value, BYVAL bytes, SADD(asm$))„DEF SEG„„END SUB„„SUB Font (Text$, XStart, Ystart, Xscale, Yscale, Style, clr)„„px = XStart  ' physical x and physical y„py = Ystart„„LHeight = Yscale * 8„Optimize = 63 \ LHeight ' Any constant math operations done multipe times„                          ' in the main loop should, well, not be done„                          ' in the main loop.„„„' Instead of wasting our time with all this MID$ garbage to access bytes in„' font buffer, we'll just take a PEEK directly at them.„DEF SEG = VARSEG(FontBuf(0))„„ FOR h = 1 TO LEN(Text$)„  FPtr = 81 * (ASC(MID$(Text$, h, 1)) - 1) - 1„  FOR x = 0 TO 8„   FOR y = 0 TO 8„„    col = PEEK(VARPTR(FontBuf(0)) + FPtr)„    FPtr = FPtr + 1„    IF col THEN„     SELECT CASE Style„      ' If you desire a y scale factor greater than 8, you„      ' must change the division to higher precision...very slow.„      ' Or, you could find a way around it.„      CASE 1: PSET (px, py), Optimize * (py - Ystart) + clr„              LINE (px, py)-(px, py + Yscale), Optimize * (py - Ystart) + clr„      ' Notice how this style only uses 54 colors, so you can see the top„      ' of the letters where they would normally be black„      CASE 2: CIRCLE (px, py), Yscale, (54 \ LHeight) * (py - Ystart) + clr + 9, , , 4„      CASE 3:  FOR sty = px TO px + Xscale„                FOR sty2 = py TO py + Yscale„                 PSET (sty, sty2), Optimize * (sty2 - Ystart) + clr„                 IF POINT(sty - 1, sty2) = 0 THEN PSET (sty - 1, sty2), 63 + clr - 1„                 IF POINT(sty, sty2 - 1) = 0 THEN PSET (sty, sty2 - 1), 63 + clr - 1„                NEXT„               NEXT„       CASE 4: FOR sty = px TO px + Xscale„                FOR sty2 = py TO py + Yscale„                 PSET (sty + .4 * sty2, sty2), Optimize * (sty2 - Ystart) + clr„                 IF POINT((sty - 1) + .4 * sty2, sty2) = 0 THEN PSET ((sty - 1) + .4 * sty2, sty2), 63 + clr - 1„                NEXT„               NEXT„       CASE ELSE„            PSET (px, py), clr„     END SELECT„    END IF„    py = py + Yscale„   NEXT„  px = px + Xscale„  py = Ystart„  NEXT„ NEXT h„DEF SEG„„END SUB„„SUB FontPal„FOR x = 1 TO 63„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, 0„ OUT &H3C9, 0„NEXT„FOR x = 64 TO 126„ OUT &H3C8, x„ OUT &H3C9, 0„ OUT &H3C9, x„ OUT &H3C9, 0„NEXT„FOR x = 127 TO 189„ OUT &H3C8, x„ OUT &H3C9, 0„ OUT &H3C9, 0„ OUT &H3C9, x„NEXT„FOR x = 190 TO 252„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, 0„ OUT &H3C9, x„NEXT„FOR x = 253 TO 255„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, x„ OUT &H3C9, x„NEXT„END SUB„„'********************** GetEMS%() ********************„'*** Function returns the handle value for a block ***„'*** of EMS memory that consists of numpages% 16k  ***„'*** pages.  You _must_ keep the handle value for  ***„'*** later calls that require the handle.  Example:***„'***                                               ***„'*** EmsHandle% = GetEMS%(5)                       ***„'***                                               ***„'*** EmsHandle% holds the handle info for a block  ***„'*** of memory 5 16k pages in size, oh 80k.        ***„'*****************************************************„FUNCTION GetEMS% (numpages%)„„'pageoffset% = EMSPages%(0) - EMSPages%(1)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(94) + CHR$(8) + CHR$(180) + CHR$(67) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(139) + CHR$(94) + CHR$(6) + CHR$(137)„asm$ = asm$ + CHR$(23) + CHR$(93) + CHR$(203)„„Handle% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL numpages%, Handle%, SADD(asm$))„DEF SEG„„'asm$ = ""„'asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„'asm$ = asm$ + CHR$(86) + CHR$(8) + CHR$(139) + CHR$(126) + CHR$(6)„'asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(10) + CHR$(177) + CHR$(0)„'asm$ = asm$ + CHR$(48) + CHR$(237) + CHR$(180) + CHR$(68) + CHR$(136)„'asm$ = asm$ + CHR$(200) + CHR$(137) + CHR$(243) + CHR$(205) + CHR$(103)„'asm$ = asm$ + CHR$(70) + CHR$(65) + CHR$(57) + CHR$(254) + CHR$(117)„'asm$ = asm$ + CHR$(242) + CHR$(93) + CHR$(203)„'„'DEF SEG = VARSEG(asm$)„'   CALL Absolute(BYVAL pageoffset%, BYVAL Handle%, BYVAL numpages%, SADD(asm$))„'DEF SEG„„GetEMS% = Handle%„„END FUNCTION„„SUB GetPal (pal())„   FOR clr = 0 TO 255„      OUT &H3C7, clr„      pal(clr, 1) = INP(&H3C9)„      pal(clr, 2) = INP(&H3C9)„      pal(clr, 3) = INP(&H3C9)„   NEXT clr„END SUB„„SUB GiftoBSAVE (gif$, bsave$, pal$)„„LoadGif gif$„BsaveScreen bsave$„SavePal pal$„„END SUB„„SUB LoadFont„„   fontfile = FREEFILE„„   OPEN "basefont.dat" FOR BINARY AS #fontfile„   GET #fontfile, , FontBuf(0)„   CLOSE #fontfile„„END SUB„„SUB LoadGif (file$)„DIM byte AS STRING * 1„DIM Prefix(4095), Suffix(4095), OutStack(4095), shiftout(8)„DIM Ybase AS LONG, powersof2(11) AS LONG, WorkCode AS LONG„„FOR a = 0 TO 7: shiftout(8 - a) = 2 ^ a: NEXT a„FOR a = 0 TO 11: powersof2(a) = 2 ^ a: NEXT a„„giffile = FREEFILE„OPEN file$ FOR BINARY AS #giffile„file$ = "      ": GET #giffile, , file$„IF file$ <> "GIF87a" THEN PRINT "Not a GIF87a file.": END„GET #giffile, , TotalX: GET #giffile, , TotalY: GOSUB GetByte„NumColors = 2 ^ ((a AND 7) + 1): NoPalette = (a AND 128) = 0„GOSUB GetByte: Background = a„GOSUB GetByte: IF a <> 0 THEN PRINT "Bad screen descriptor.": END„IF NoPalette = 0 THEN P$ = SPACE$(NumColors * 3): GET #giffile, , P$„DO„    GOSUB GetByte„    IF a = 44 THEN„        EXIT DO„    ELSEIF a <> 33 THEN„        PRINT "Unknown extension type.": END„    END IF„    GOSUB GetByte„    DO: GOSUB GetByte: file$ = SPACE$(a): GET #giffile, , file$: LOOP UNTIL a = 0„LOOP„GET #giffile, , XStart: GET #giffile, , Ystart: GET #giffile, , XLength: GET #giffile, , YLength„XEnd = XStart + XLength: YEnd = Ystart + YLength: GOSUB GetByte„IF a AND 128 THEN PRINT "Can't handle local colormaps.": END„Interlaced = a AND 64: PassNumber = 0: PassStep = 8„GOSUB GetByte„ClearCode = 2 ^ a„EOSCode = ClearCode + 1„FirstCode = ClearCode + 2: NextCode = FirstCode„StartCodeSize = a + 1: CodeSize = StartCodeSize„StartMaxCode = 2 ^ (a + 1) - 1: MaxCode = StartMaxCode„„BitsIn = 0: BlockSize = 0: BlockPointer = 1„x = XStart: y = Ystart: Ybase = y * 320&„„DEF SEG = &HA000„„IF NoPalette = 0 THEN„    OUT &H3C7, 0: OUT &H3C8, 0„    FOR a = 1 TO NumColors * 3: OUT &H3C9, ASC(MID$(P$, a, 1)) \ 4: NEXT a„END IF„„LINE (0, 0)-(319, 199), Background, BF„„DO„    GOSUB GetCode„    IF Code <> EOSCode THEN„        IF Code = ClearCode THEN„            NextCode = FirstCode„            CodeSize = StartCodeSize„            MaxCode = StartMaxCode„            GOSUB GetCode„            CurCode = Code: LastCode = Code: LastPixel = Code„            IF x < 320 THEN POKE x + Ybase, LastPixel„            x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„        ELSE„            CurCode = Code: StackPointer = 0„            IF Code > NextCode THEN EXIT DO„            IF Code = NextCode THEN„                CurCode = LastCode„                OutStack(StackPointer) = LastPixel„                StackPointer = StackPointer + 1„            END IF„„            DO WHILE CurCode >= FirstCode„                OutStack(StackPointer) = Suffix(CurCode)„                StackPointer = StackPointer + 1„                CurCode = Prefix(CurCode)„            LOOP„„            LastPixel = CurCode„            IF x < 320 THEN POKE x + Ybase, LastPixel„            x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„„            FOR a = StackPointer - 1 TO 0 STEP -1„                IF x < 320 THEN POKE x + Ybase, OutStack(a)„                x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„            NEXT a„„            IF NextCode < 4096 THEN„                Prefix(NextCode) = LastCode„                Suffix(NextCode) = LastPixel„                NextCode = NextCode + 1„                IF NextCode > MaxCode AND CodeSize < 12 THEN„                    CodeSize = CodeSize + 1„                    MaxCode = MaxCode * 2 + 1„                END IF„            END IF„            LastCode = Code„        END IF„    END IF„LOOP UNTIL DoneFlag OR Code = EOSCode„GOTO LeaveProc„„GetByte: file$ = " ": GET #giffile, , file$: a = ASC(file$): RETURN„„NextScanLine:„    IF Interlaced THEN„        y = y + PassStep„        IF y >= YEnd THEN„            PassNumber = PassNumber + 1„            SELECT CASE PassNumber„            CASE 1: y = 4: PassStep = 8„            CASE 2: y = 2: PassStep = 4„            CASE 3: y = 1: PassStep = 2„            END SELECT„        END IF„    ELSE„        y = y + 1„    END IF„    x = XStart: Ybase = y * 320&: DoneFlag = y > 199„RETURN„GetCode:„    IF BitsIn = 0 THEN GOSUB ReadBufferedByte: LastChar = a: BitsIn = 8„    WorkCode = LastChar \ shiftout(BitsIn)„    DO WHILE CodeSize > BitsIn„        GOSUB ReadBufferedByte: LastChar = a„        WorkCode = WorkCode OR LastChar * powersof2(BitsIn)„        BitsIn = BitsIn + 8„    LOOP„    BitsIn = BitsIn - CodeSize„    Code = WorkCode AND MaxCode„RETURN„ReadBufferedByte:„    IF BlockPointer > BlockSize THEN„        GOSUB GetByte: BlockSize = a„        file$ = SPACE$(BlockSize): GET #giffile, , file$„        BlockPointer = 1„    END IF„    a = ASC(MID$(file$, BlockPointer, 1)): BlockPointer = BlockPointer + 1„RETURN„LeaveProc:„CLOSE„„END SUB„„SUB LoadPal (file$)„„palfile = FREEFILE„OPEN file$ FOR BINARY AS palfile„„FOR clr = 0 TO 255„   OUT &H3C8, clr„   OUT &H3C9, ASC(INPUT$(1, palfile))„   OUT &H3C9, ASC(INPUT$(1, palfile))„   OUT &H3C9, ASC(INPUT$(1, palfile))„NEXT clr„„CLOSE palfile„„END SUB„„SUB LoadPcx (file$)„pcxfile = FREEFILE„OPEN file$ FOR BINARY AS pcxfile„„DEF SEG = &HA000„ „  SEEK #pcxfile, LOF(1) - 767„  FOR pal = 0 TO 255„     OUT &H3C8, pal„     rgb% = ASC(INPUT$(1, pcxfile))„     OUT &H3C9, rgb% / 4„     rgb% = ASC(INPUT$(1, pcxfile))„     OUT &H3C9, rgb% / 4„     rgb% = ASC(INPUT$(1, pcxfile))„     OUT &H3C9, rgb% / 4„  NEXT pal„  SEEK #pcxfile, 129„  c = 0„  WHILE c < 32000„    clr = ASC(INPUT$(1, pcxfile))„    IF clr > 192 AND clr <= 255 THEN„      LPS = clr - 192„      clr = ASC(INPUT$(1, pcxfile))„        FOR L = LPS TO 1 STEP -1„          POKE c, clr„          c = c + 1„          LPS = LPS - 1„        NEXT L„    ELSE„      POKE c, clr„      c = c + 1„    END IF„  WEND„  c = 0„  DEF SEG = &HA7D0„  WHILE c < 32000„    clr = ASC(INPUT$(1, pcxfile))„    IF clr > 192 AND clr <= 255 THEN„      LPS = clr - 192„      clr = ASC(INPUT$(1, pcxfile))„         FOR L = LPS TO 1 STEP -1„          POKE c, clr„          c = c + 1„          LPS = LPS - 1„         NEXT L„    ELSE„      POKE c, clr„      c = c + 1„    END IF„  WEND„CLOSE„DEF SEG„„END SUB„„SUB MakeFont„„fontfile = FREEFILE„„OPEN "basefont.dat" FOR BINARY AS #giffile„' Hey, change 128 to 255 for the full font.„CLS„SCREEN 13„COLOR 16„FOR ascii = 1 TO 128„ CLS„ PRINT CHR$(ascii)„ FOR x = 0 TO 8„  FOR y = 0 TO 8„   pnt$ = CHR$(POINT(x, y))„   PUT #giffile, , pnt$„   pnt$ = ""„  NEXT„ NEXT„NEXT„CLOSE„OPEN "basefont.dat" FOR BINARY AS #giffile„ GET #giffile, , FontBuf(0)„CLOSE #giffile„END SUB„„'***************** MapEMS () ***********************************„'*** Sets the page of a memory block (identified by Handle%) ***„'*** that is located at the beginning of the page frame.     ***„'*** Example:                                                ***„'***                                                         ***„'*** EmsHandle% = GetEMS%(8)                                 ***„'*** MapEMS EmsHandle%, 4                                    ***„'***                                                         ***„'*** When the page frame segment is next written to, the info***„'*** will be placed starting at the 4th page in the block of ***„'*** memory represented by EmsHandle%.  This could be use,   ***„'*** for instance, to store multiple SCREEN 13 images in one ***„'*** EMS block, by moving the first 64k image into the first ***„'*** 4 16k pages (16000 * 4 = 64000) by using:               ***„'***                                                         ***„'*** MapEMS EmsHandle%, 0                                    ***„'***                                                         ***„'*** And then putting the next 64k image into the next 4 EMS ***„'*** pages by using:                                         ***„'***                                                         ***„'*** MapEMS EmsHandle%, 4                                    ***„'***                                                         ***„'*** ... and then moving the image into the memory block.    ***„'***************************************************************„SUB MapEMS (Handle%, pageoffset%)„„numpages% = 4„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(86) + CHR$(8) + CHR$(139) + CHR$(126) + CHR$(6)„asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(10) + CHR$(177) + CHR$(0)„asm$ = asm$ + CHR$(48) + CHR$(237) + CHR$(180) + CHR$(68) + CHR$(136)„asm$ = asm$ + CHR$(200) + CHR$(137) + CHR$(243) + CHR$(205) + CHR$(103)„asm$ = asm$ + CHR$(70) + CHR$(65) + CHR$(57) + CHR$(249) + CHR$(117)„asm$ = asm$ + CHR$(242) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL pageoffset%, BYVAL Handle%, BYVAL numpages%, SADD(asm$))„DEF SEG„„END SUB„„SUB MemCopy (fromseg, fromoff, toseg, tooff, bytes)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(30)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(10) + CHR$(142) + CHR$(192)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(14) + CHR$(142) + CHR$(216)„asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(8) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(12) + CHR$(139) + CHR$(78) + CHR$(6) + CHR$(243)„asm$ = asm$ + CHR$(164) + CHR$(31) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL fromseg, BYVAL fromoff, BYVAL toseg, BYVAL tooff, BYVAL bytes, SADD(asm$))„DEF SEG„„END SUB„„'****************************** NumEMSHandles%() *********************„'*** Returns the number of EMS handles presently being used (there ***„'*** are a maximum of 256 handles possible at any given time).     ***„'*********************************************************************„FUNCTION NumEMSHandles%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(75) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(93) + CHR$(203)„„NumHandles% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(NumHandles%, SADD(asm$))„DEF SEG„„NumEMSHandles% = NumHandles%„„END FUNCTION„„'***************************** NumEMSPages%() *************************„'*** Returns the number of 16k pages being used by the memory block ***„'*** that is represented by Handle%.                                ***„'**********************************************************************„FUNCTION NumEMSPages% (Handle%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(86) + CHR$(6) + CHR$(180) + CHR$(76) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(139) + CHR$(126) + CHR$(8) + CHR$(137)„asm$ = asm$ + CHR$(29) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(numpages%, Handle%, SADD(asm$))„DEF SEG„„NumEMSPages% = numpages%„„END FUNCTION„„'******************************* PageFrame% ***************************„'*** Returns the segment that you will need to write to in order to ***„'*** store your data into EMS memory.  For example, PageFrame% may  ***„'*** return D000 (HEX, -12288 decimal), and then you might do this: ***„'***                                                                ***„'*** DEF SEG = PageFrame%        'D000                              ***„'*** MyData$ = "This is a block of data I want to store in EMS."    ***„'*** FOR X = 1 TO LEN(MyData$)                                      ***„'***   POKE X, ASC(MID$(MyData$, X, 1))                             ***„'*** NEXT X                                                         ***„'*** DEF SEG                                                        ***„'***                                                                ***„'*** Note, though, that you have to have a block of EMS opened with ***„'*** GetEMS%() and maped with MapEMS before you can write to the    ***„'*** block.                                                         ***„'**********************************************************************„FUNCTION PageFrame%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(65) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(93) + CHR$(203)„„PageFrameAddr% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(PageFrameAddr%, SADD(asm$))„DEF SEG„„PageFrame% = PageFrameAddr%„„END FUNCTION„„SUB PutPal (pal())„  „   FOR clr = 0 TO 255„      OUT &H3C8, clr„      OUT &H3C9, pal(clr, 1)„      OUT &H3C9, pal(clr, 2)„      OUT &H3C9, pal(clr, 3)„   NEXT clr„„END SUB„„'****************************** ReleaseEMS() **************************„'*** Releases the EMS memory associated with Handle%.  This is very ***„'*** important to do before you exit your program, otherwise the    ***„'*** memory being used by your open handles will not be available   ***„'*** again until you reboot.                                        ***„'**********************************************************************„SUB ReleaseEMS (Handle%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(69) + CHR$(139) + CHR$(86) + CHR$(6) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL Handle%, SADD(asm$))„DEF SEG„„END SUB„„SUB RotatePal (direction, pal())„„   SELECT CASE direction„         CASE 1„            temp1 = pal(255, 1)„            temp2 = pal(255, 2)„            temp3 = pal(255, 3)„            FOR rgb = 1 TO 3„               FOR col = 254 TO 0 STEP -1„                  pal(col + 1, rgb) = pal(col, rgb)„               NEXT col„            NEXT rgb„            pal(0, 1) = temp1„            pal(0, 2) = temp2„            pal(0, 3) = temp3„         CASE -1„            temp1 = pal(0, 1)„            temp2 = pal(0, 2)„            temp3 = pal(0, 3)„            FOR rgb = 1 TO 3„               FOR col = 0 TO 254„                  pal(col, rgb) = pal(col + 1, rgb)„               NEXT col„            NEXT rgb„            pal(255, 1) = temp1„            pal(255, 2) = temp2„            pal(255, 3) = temp3„   END SELECT„„   PutPal pal()„„END SUB„„SUB SavePal (file$)„„   palfile = FREEFILE„   OPEN file$ FOR OUTPUT AS palfile„„   FOR clr = 0 TO 255„      OUT &H3C7, clr„      PRINT #palfile, CHR$(INP(&H3C9));„      PRINT #palfile, CHR$(INP(&H3C9));„      PRINT #palfile, CHR$(INP(&H3C9));„   NEXT clr„„   CLOSE palfile„„END SUB„„SUB SetPal (pal())„END SUB„„SUB WaitRetrace„   WAIT &H3DA, 8„END SUB„Brent P. Newhall               2D POLYGON ENGINE              comp.lang.basic.misc           08-22-96 (11:30)       QB, QBasic, PDS        223  5653     2DPOLY.BAS  'This is a C-to-BASIC conversion from Andre LaMothe's book "Teach„'Yourself Game Programming in 21 Days".  It's a simple demo with three„'asteroids twirling on the screen and a scrolling starfield in the„'background.„„'If you have need, take it and use it.  There are enough SUBs to do most„'of what you should need to do.„„' Polygon„' by Brent P. Newhall (BrentN@juno.com)„„DEFINT A-Z„„CONST FALSE = 0, TRUE = NOT FALSE„CONST MAX.VERTICES = 15„CONST MAX.STARS = 30„„TYPE VertexType„  x AS SINGLE„  y AS SINGLE„END TYPE„TYPE PolygonType„  border AS INTEGER    ' Border color„  interior AS INTEGER  ' Interior color„  closed AS INTEGER    ' Is the polygon closed?„  filled AS INTEGER    ' Is the polygon filled?„  lxo AS INTEGER       ' Local X origin„  lyo AS INTEGER       ' Local Y origin„  NumVertices AS INTEGER„END TYPE„TYPE StarType„  x AS INTEGER„  y AS INTEGER„  dist AS INTEGER„END TYPE„„DECLARE SUB CreateTables ()„DECLARE SUB DrawPolygon (poly AS PolygonType, polyvert() AS VertexType)„DECLARE SUB ErasePolygon (poly AS PolygonType, polyvert() AS VertexType)„DECLARE SUB MovePolygon (poly AS PolygonType, dx AS INTEGER, dy AS INTEGER)„DECLARE SUB ScalePolygon (poly AS PolygonType, polyvert() AS VertexType, scale AS SINGLE)„DECLARE SUB RotatePolygon (poly AS PolygonType, polyvert() AS VertexType, angle AS INTEGER)„DECLARE SUB StarField ()„„DIM ast1 AS PolygonType ' Create basic asteroids„DIM ast2 AS PolygonType„DIM ast3 AS PolygonType„ast1.NumVertices = 5„ast2.NumVertices = 5„ast3.NumVertices = 5„REDIM astvert1(1 TO ast1.NumVertices) AS VertexType ' Create vertices„REDIM astvert2(1 TO ast2.NumVertices) AS VertexType„REDIM astvert3(1 TO ast3.NumVertices) AS VertexType„DIM SHARED star(1 TO MAX.STARS) AS StarType„DIM SHARED SinLook(0 TO 361) AS DOUBLE, CosLook(0 TO 361) AS DOUBLE„DIM SHARED c(1 TO 3) ' Color„c(1) = 15: c(2) = 7: c(3) = 8„„FOR cnt = 1 TO MAX.STARS ' Define all the stars„  star(cnt).x = INT(RND * 320) ' Create random position„  star(cnt).y = INT(RND * 200)„  star(cnt).dist = INT(RND * 3 + 1)„NEXT cnt„„ast1.border = 8„ast1.interior = 8„ast1.closed = TRUE„ast1.filled = FALSE„ast1.lxo = 110„ast1.lyo = 100„FOR cnt1 = 1 TO ast1.NumVertices„  READ astvert1(cnt1).x, astvert1(cnt1).y„NEXT cnt1„ast2.border = 8„ast2.interior = 8„ast2.closed = TRUE„ast2.filled = FALSE„ast2.lxo = 160„ast2.lyo = 80„FOR cnt1 = 1 TO ast2.NumVertices„  READ astvert2(cnt1).x, astvert2(cnt1).y„NEXT cnt1„ast3.border = 8„ast3.interior = 8„ast3.closed = TRUE„ast3.filled = FALSE„ast3.lxo = 210„ast3.lyo = 100„FOR cnt1 = 1 TO ast3.NumVertices„  READ astvert3(cnt1).x, astvert3(cnt1).y„NEXT cnt1„„PRINT "Creating tables...."„CreateTables„SCREEN 7„„DO„  StarField„  RotatePolygon ast1, astvert1(), 5„  RotatePolygon ast2, astvert2(), 8„  RotatePolygon ast3, astvert3(), -4„  DrawPolygon ast1, astvert1()„  DrawPolygon ast2, astvert2()„  DrawPolygon ast3, astvert3()„  t! = TIMER: WHILE t! = TIMER: WEND ' Pause„  ErasePolygon ast1, astvert1()„  ErasePolygon ast2, astvert2()„  ErasePolygon ast3, astvert3()„  IF INKEY$ <> "" THEN quit = 1„LOOP UNTIL quit > 0„END„„' Asteroid 1 vertices„DATA   0,-15„DATA  20, 5„DATA   5, 7„DATA  -1, 10„DATA  -4, 1„„' Asteroid 2 vertices„DATA   0,-15„DATA  20,-9„DATA  10, 7„DATA  -1, 10„DATA  -4, 1„„' Asteroid 3 vertices„DATA   0,-15„DATA  10,-2„DATA   5, 7„DATA  -1, 10„DATA  -9, 1„„DEFSNG A-Z„SUB CreateTables„„FOR cnt = 0 TO 360„  CosLook(cnt) = COS(cnt * 3.14159 / 180)„  SinLook(cnt) = SIN(cnt * 3.14159 / 180)„NEXT cnt„„END SUB„„SUB DrawPolygon (poly AS PolygonType, polyvert() AS VertexType)„„xo = poly.lxo„yo = poly.lyo„„FOR cnt = 1 TO poly.NumVertices - 1„  LINE (xo + polyvert(cnt).x, yo + polyvert(cnt).y)-(xo + polyvert(cnt + 1).x, yo + polyvert(cnt + 1).y), poly.border„NEXT cnt„„IF poly.closed THEN„  LINE (xo + polyvert(poly.NumVertices).x, yo + polyvert(poly.NumVertices).y)-(xo + polyvert(1).x, yo + polyvert(1).y), poly.border„END IF„„END SUB„„SUB ErasePolygon (poly AS PolygonType, polyvert() AS VertexType)„„xo = poly.lxo„yo = poly.lyo„„FOR cnt = 1 TO poly.NumVertices - 1„  LINE (xo + polyvert(cnt).x, yo + polyvert(cnt).y)-(xo + polyvert(cnt + 1).x, yo + polyvert(cnt + 1).y), 0„NEXT cnt„„IF poly.closed THEN„  LINE (xo + polyvert(poly.NumVertices).x, yo + polyvert(poly.NumVertices).y)-(xo + polyvert(1).x, yo + polyvert(1).y), 0„END IF„„END SUB„„SUB MovePolygon (poly AS PolygonType, dx AS INTEGER, dy AS INTEGER)„„poly.lxo = poly.lxo + dx„poly.lyo = poly.lyo + dy„„END SUB„„SUB RotatePolygon (poly AS PolygonType, polyvert() AS VertexType, angle AS INTEGER)„„IF angle >= 0 THEN„  si = SinLook(angle)„  cs = CosLook(angle)„ELSE„  si = SinLook(angle + 360)„  cs = CosLook(angle + 360)„END IF„„FOR cnt = 1 TO poly.NumVertices„  rx = polyvert(cnt).x * cs - polyvert(cnt).y * si„  ry = polyvert(cnt).y * cs + polyvert(cnt).x * si„  polyvert(cnt).x = rx„  polyvert(cnt).y = ry„NEXT cnt„„END SUB„„SUB ScalePolygon (poly AS PolygonType, polyvert() AS VertexType, scale AS SINGLE)„„FOR cnt = 1 TO poly.NumVertices„  polyvert(cnt).x = polyvert(cnt).x * scale„  polyvert(cnt).y = polyvert(cnt).y * scale„NEXT cnt„„END SUB„„DEFINT A-Z„SUB StarField„„FOR cnt = 1 TO MAX.STARS„  PSET (star(cnt).x, star(cnt).y), 0„  star(cnt).y = star(cnt).y + (4 - star(cnt).dist)„  IF star(cnt).y > 199 THEN„    star(cnt).x = INT(RND * 320)„    star(cnt).y = INT(RND * 200)„    star(cnt).dist = INT(RND * 3 + 1)„  END IF„  PSET (star(cnt).x, star(cnt).y), c(star(cnt).dist)„NEXT cnt„„END SUB„Kurt Eckhardt                  VARIABLE PLASMA EFFECT         king@shadow.net                08-24-96 (00:00)       QB, QBasic, PDS        197  6164     PLASMA.BAS  DECLARE SUB Info ()„DECLARE SUB RotatePalette (k$)„DECLARE SUB RunX ()„DECLARE SUB RunY ()„DECLARE SUB SetPts ()„DECLARE SUB SetPalette ()„'Coded and designed by Kurt Eckhardt on 08/22/96„'Copyrite 1996 by Kurt Eckhardt„'Fastened by Steven de Brouwer <SPMdB@dds.nl> on 08/24/96„'„'This program sets up a grid of four points (the corners) and generates„'a faded verticle line between them. It then does this horizontally„'to create of sort of plasma effect.„'The effect works best when there is a diversity of colors on both sides„'of the screen. This way the colors don't just fade, but rather scroll.„'You'll see...„'„DEFINT A-Z„DIM SHARED pal(192, 3)„CLS : CLEAR„RANDOMIZE TIMER„CALL Info„„SCREEN 13„PRINT "Loading Palette...": SetPalette„CLS„DO„   CALL SetPts„   CALL RunY„   CALL RunX„   DO„      CALL RotatePalette(k$)„   LOOP UNTIL k$ <> ""„LOOP UNTIL k$ = CHR$(27)„„SUB Info„CLS„PRINT SPACE$(30); "Information": PRINT„PRINT "Coded and Designed by Kurt Eckhardt"„PRINT "Copyrite 1996   All Rights Reserved"„PRINT "V2.0    Completed on 8/22/96"„PRINT "V2.0.0a Improved  on 8/24/96"„PRINT "        by Steven <SPMdB@dds.nl> de Brouwer"„PRINT„PRINT "This program works best when there is a diversity of colors on both"„PRINT "sides of the screen. This creates a nicer pattern on the screen"„PRINT "with more colors, so the scrolling effect will be much nicer."„PRINT "Also experiment with pressing Other Keys! It's fun..."„PRINT„PRINT "                               Enjoy!"„PRINT : PRINT„PRINT "Escape    : Exit Program"„PRINT "SpaceBar  : Change Direction"„PRINT "Other Keys: Change Pattern/ Pallette"„DO: LOOP UNTIL INKEY$ <> "": CLS„PRINT SPACE$(30); "Help the student": PRINT„PRINT "If this program brings a smile to your face, or you find any techniques"„PRINT "helpful in you own programming endevours, I would greatly appreciate you"„PRINT "sending me 1$ so I can make my way through college. Right now I am struggling"„PRINT "as I have no money!"„PRINT "I bet you can look around right now and find one buck within 10 feet"„PRINT "of yourself- if not, you are as broke as I am."„PRINT "Any comments or questions, send me some email at <king@shadow.net>"„PRINT "Here's the address for that measly buck: "„PRINT„PRINT "Kurt Eckhardt"„PRINT "1820 West Oak Knoll Circle"„PRINT "Ft. Lauderdale FL 33324"„PRINT„PRINT "Thanks!"„DO: LOOP WHILE INKEY$ = ""„CLS„PRINT SPACE$(35); "Legal Stuff"„PRINT„PRINT "1. This program may be freely distributed so long as no changes have been made."„PRINT "2. This program, or any part of it, may not be used in another program"„PRINT "   without my written consent."„PRINT "3. I, Kurt Eckhardt, retain all rights to this code and retain the power"„PRINT "   to invoke them at anytime I see fit."„PRINT "4. I take no responsibilty for any adverse affects that may be caused by"„PRINT "   usage of this program upon your machine."„PRINT "5. Acknowledge your pleasure by e-mail to SPMdB@dds.nl"„PRINT "   (He loves e-mail!)"„LOCATE 15, 13„PRINT "By possessing this program you agree with these terms."„DO: LOOP WHILE INKEY$ = ""„„END SUB„„SUB RotatePalette (n$)„   '„   STATIC cngdiv, cng         'Keep values of these two between calls„   IF cngdiv = 0 THEN cngdiv = 1 - INT(RND * 2) * 2 'Random direction„   cng = cng - cngdiv„   IF cng < 1 THEN cng = 192„   IF cng > 192 THEN cng = 1„   s = (1 - SGN(cngdiv)) / 2  's=0 or s=1„   '„   IF cng <> 1 + s * 191 THEN„      FOR lp = 1 TO 3„         pal(cng, lp) = pal(cng - cngdiv, lp)„      NEXT lp„   ELSE„      FOR lp = 1 TO 3„         pal(1 + s * 191, lp) = pal(192 - s * 191, lp)„      NEXT lp„   END IF„   '„   OUT &H3C8, cng                  'Write Palette Register„   OUT &H3C9, pal(cng, 1)          'Write Palette Data(RGB)„   OUT &H3C9, pal(cng, 2)„   OUT &H3C9, pal(cng, 3)„   '„   n$ = INKEY$„   IF n$ = " " THEN n$ = "": cngdiv = -cngdiv 'Change direction„   '„END SUB„„SUB RunX„   „   r = INT(RND * 10)                   ' These two lines plus 'STEP 10'„   FOR x = 0 TO 9                      ' For the luxaflex-effect„      FOR yy = 0 TO 199 STEP 10„         y = yy + (x + r) MOD 10                'This one too :)„         ch = POINT(319, y): cl = POINT(0, y)„         cdiv! = (ch - cl) / 319„         FOR i = 1 TO 318„            PSET (i, y), cl + INT(i * cdiv!)    'Interpolate color„            '„            CALL RotatePalette(k$)     'these three lines„            IF k$ = CHR$(27) THEN END  'for effects during redraw„            IF k$ <> "" THEN stp = 1„            '„         NEXT i„         IF stp = 1 THEN LINE (0, 0)-(319, 199), 0, B: EXIT SUB„      NEXT yy„   NEXT x„   LINE (0, 0)-(319, 199), 0, B„   „END SUB„„SUB RunY„   „   FOR i = 0 TO 1„      ch = POINT(i * 319, 199): cl = POINT(i * 319, 0)„      FOR j = 1 TO 198„         PSET (i * 319, j), cl + INT((j / 199) * (ch - cl))„      NEXT j„   NEXT i„   „END SUB„„SUB SetPalette„  „   RA = 1: GA = 0: BA = 0: Rval = 63„   FOR cnt = 1 TO 192„      Rval = Rval + RA„      Gval = Gval + GA„      Bval = Bval + BA„      „      IF Rval > 62 AND Gval <> 63 AND Bval = 0 THEN GA = 2„      IF Gval > 62 AND Bval <> 63 AND Rval = 0 THEN BA = 2„      IF Bval > 62 AND Rval <> 63 AND Gval = 0 THEN RA = 2„      „      IF Gval > 62 AND Rval > 62 THEN RA = -2„      IF Rval < 0 AND Gval > 62 THEN BA = 2„      IF Gval > 62 AND Bval > 62 THEN GA = -2„      IF Gval < 0 AND Bval > 62 THEN RA = 2„      IF Rval > 62 AND Bval > 62 THEN BA = -2„      IF Bval < 0 AND Rval > 62 THEN GA = 2„      „      IF Rval > 62 THEN Rval = 63„      IF Rval < 0 THEN Rval = 0„      IF Gval > 62 THEN Gval = 63„      IF Gval < 0 THEN Gval = 0„      IF Bval > 62 THEN Bval = 63„      IF Bval < 0 THEN Bval = 0„      pal(cnt, 1) = Rval„      pal(cnt, 2) = Gval„      pal(cnt, 3) = Bval„      OUT &H3C8, cnt„      OUT &H3C9, Rval„      OUT &H3C9, Gval„      OUT &H3C9, Bval„   NEXT cnt„   „END SUB„„SUB SetPts„   „   FOR x = 0 TO 1„      PSET (x * 319, 0), (RND * 191) + 2„      PSET (x * 319, 199), (RND * 191) + 2„   NEXT x„   „END SUB„„Erika Schulze                  TGA VIEWER                     100775.2275@CompuServe.com     08-29-96 (18:39)       QB, QBasic, PDS        243  10390    TGA.BAS     '***************************************************************************„'Program:       TGA.BAS                                                    *„'Task:          TGA viewer for SCREEN 13 - uncompressed TGA files.         *„'               Version 1.0                                                *„'Language:      QBASIC mixed with machine code.                            *„'Author:        Erika Schulze                                              *„'               CIS: 100775,2275                                           *„'               Internet: 100775.2275@compuserve.com                       *„'               Free for use.                                              *„'               Use it, abuse it, but don't blame me!                      *„'Note:          It seems to me that the main problem is reading the data   *„'               from the disk; that's to slow. If somebody has a better    *„'               solution for this - your assistance is welcome. Please     *„'               send me a message with your suggestions for improvements.  *„'***************************************************************************„„'The  TGA  (True Version Targa) isn't complicated. There is only a„'TGA header of 18 bytes with all informations about the image.„'Structure of the TGA header:„„'Offset   Length   Description„'======   ======   ===========„„'00H      BYTE     info:„'                  It's  possible,  that after the 18 bytes of the„'                  header, the file contains an information block.„'                  This  block, for  example, holds  the copyright„'                  information.  The  byte  info  stands  for  the„'                  length of the information block.„'01H      BYTE     colortyp:„'                  0 ===> RGB image„'                  1 ===> image has a DAC table„'02H      BYTE     imagetyp:„'                  This  byte contains information about the image„'                  typ:„'                  1 ===> uncompressed  image  datas  with  a  DAC„'                  table„'                  2 ===> uncompressed RGB file„'                  9 ===> runlength encoded datas with a DAC table„'                 10 ===> runlength encoded RGB file„'03H      WORD     origin:„'                  This word contains the index of the first entry„'                  in the DAC table (mostly 0).„'05H      WORD     colnumber:„'                  This  word contains the number of colors in the„'                  DAC  table.  That's  not  the length of the DAC„'                  table in byte!„'07H      BYTE     entrybits:„'                  Size of on entry in the DAC table. An entry has„'                  16, 24 or 32 bits.„'08H      WORD     xvalue:„'                  The  x-value  of  the lower left corner of the„'                  TGA image (mostly 0).„'0AH      WORD     yvalue:„'                  The  y-value  of  the lower left corner of the„'                  TGA image (mostly 0).„'0CH      WORD     widt:„'                  The image width in pixels.„'0EH      WORD     height:„'                  The image height in pixels.„'10H      BYTE     pixelsize:„'                  Number of bits per pixel.„'                  DAC images ===> valid values are 8 and 16„'                  RGB images ===> valid values are 16, 24 and 32„'11H      BYTE     descriptor:„'                  The   image   descriptor   contains  additional„'                  informations.„„'The structure of the image descriptor:„„'Bit 0 - 3: fill bits„'Bit 4    : always 0„'Bit 5    : 0  ===> image origin in the lower left corner„'           1  ===> image origin in the upper left corner„'Bit 6 - 7: 00 ===> the image rows are stored one after the other„'           01 ===> first are stored the even rows (0, 2, 4 ...)„'                   after  this  are  stored the odd rows (1, 3, 5 ...)„„'The formula to calculate the length of the DAC table:„„'daclength% = colnumber*entrybits/8„„'After the  18 bytes of the TGA header is  stored  the information„'block  in the TGA file, but the length of this block is mostly 0.„'After  the information block is stored the DAC table and then the„'image datas.„„'===========================================================================„'Program starts here.                                                      =„'===========================================================================„„DECLARE SUB Reading (x%, y%)„DECLARE SUB Waiting ()„TYPE tgaheader                  'declare the header„  info       AS STRING * 1      'length of image information block„  colortyp   AS STRING * 1      'DAC table or BGR format„  imagetyp   AS STRING * 1      'compressed or uncompressed„  origin     AS INTEGER         'first entry in the DAC table„  colnumber  AS INTEGER         'number of colors in the DAC table„  entrybits  AS STRING * 1      'entry size in the DAC table„  xvalue     AS INTEGER         'x co-ordinate lower left corner„  yvalue     AS INTEGER         'y co-ordinate lower left corner„  widt       AS INTEGER         'image width„  height     AS INTEGER         'image height„  pixelsize  AS STRING * 1      'number of bits per pixel„  descriptor AS STRING * 1      'image descriptor„END TYPE„DIM header AS tgaheader         'define the header„DIM set%(42)                    'machine code array for pixel set procedure„setseg% = VARSEG(set%(0))„setoff% = VARPTR(set%(0))       'start address for pixel set routine„DIM text%(4)                    'machine code array for text mode procedure„textseg% = VARSEG(text%(0))„textoff% = VARPTR(text%(0))     'start address text mode procedure„file$ = "ELENA.TGA"             'change it, if necessary„filelength& = 0                 'length of the TGA file„daclength% = 0                  'length of the DAC table„numcolors% = 0                  'number of used colors„dacstart& = 0                   'start of the DAC values in the„				'TGA file„dacend& = 0                     'end of the DAC values„imstart& = 0                    'start of the image data in the„				'TGA file„CLS„RESTORE setpixel„CALL Reading(setseg%, setoff%)  'read the machine code (pixel procedure)„RESTORE textmode„CALL Reading(textseg%, textoff%)'read the machine code (text mode routine)„OPEN file$ FOR BINARY AS #1     'open the TGA file„filelength& = LOF(1)            'determine the file length„GET #1, 1, header               'read the header„CLOSE #1                        'close the file„IF ASC(header.colortyp) <> 1 THEN„				'image hasn't a DAC table„   PRINT„   PRINT "Sorry! This TGA image hasn't a DAC table."„   END„END IF„IF ASC(header.imagetyp) <> 1 THEN„				'data must be uncompressed„   PRINT„   PRINT "Sorry! This TGA format isn't supported."„   END„END IF„daclength% = header.colnumber * ASC(header.entrybits) / 8„				'calculate the length of th DAC table„numcolors% = daclength% / 3     'calculate the number of used colors„dacstart& = 19 + ASC(header.info)„				'calculate the DAC start„dacend& = dacstart& + daclength%„				'calculate the DAC end„PRINT„PRINT "Information about the image:"„PRINT "============================"„PRINT„PRINT "Number of used colors  ="; header.colnumber„PRINT "Image width            ="; header.widt; "Pixel"„PRINT "Image height           ="; header.height; "Pixel"„PRINT„PRINT "Please press any key ..."„CALL Waiting„CLS                             'clear the screen„SCREEN 13                       'VGA 320 by 200 pixel and 256 colors„OPEN file$ FOR BINARY AS #1     'open the TGA file„SEEK #1, dacstart&              'start of the DAC table„FOR register% = 0 TO 255        'set the DAC registers„  temp$ = SPACE$(3)             'temporary string„  GET #1, , temp$               'read BGR value„  red% = ASC(MID$(temp$, 3)) \ 4„				'we need only 6 Bits„  green% = ASC(MID$(temp$, 2)) \ 4„  blue% = ASC(MID$(temp$, 1)) \ 4„  OUT &H3C8, register%          'set register„  OUT &H3C9, red%               'set the RGB values„  OUT &H3C9, green%„  OUT &H3C9, blue%„NEXT register%„SEEK #1, dacend&                'start of the image data„temp$ = SPACE$(1)               'temporary string„FOR y% = header.height - 1 TO 0 STEP -1„				'row loop„  FOR x% = 0 TO header.widt - 1„				'column loop„    GET #1, , temp$             'read 1 color byte„    col% = ASC(temp$)           'calculate the color value„    DEF SEG = setseg%           'set the segment„    CALL ABSOLUTE(x%, y%, col%, setoff%)„				'set the pixel„    DEF SEG                     'reset the segment„  NEXT x%„NEXT y%„CLOSE #1                        'close the file„CALL Waiting                    'wait for a key„DEF SEG = textseg%„CALL ABSOLUTE(textoff%)         'set the text mode„DEF SEG„CLS„END„„setpixel:„DATA 55:        'push   bp„DATA 8B,EC:     'mov    bp,sp„DATA 06:        'push   es„DATA 8B,76,08:  'mov    si,[bp+8]       ;si:=address y%„DATA 8B,7E,0A:  'mov    di,[bp+10]      ;di:=address x%„DATA 8B,5E,06:  'mov    bx,[bp+6]       ;bx:=address col%„DATA B8,40,01:  'mov    ax,320          ;ax:=320=bytes per row„DATA 8B,0C:     'mov    cx,[si]         ;cx:=y%„DATA F7,E1:     'mul    cx              ;ax:=y%*320„DATA 03,05:     'add    ax,[si]         ;ax:=y%*320+x%„DATA 8B,F8:     'mov    di,ax           ;di:=ax=offset into video RAM„DATA B8,00,A0:  'mov    ax,0a000H       ;ax:=segment video RAM„DATA 8E,C0:     'mov    es,ax           ;es:di -> pixel position„DATA 8B,07:     'mov    ax,[bx]         ;ax:=col%„DATA 26,88,05:  'mov    byte ptr es:[di],al„		'                       ;set the pixel„DATA 07:        'pop    es„DATA 8B,E5:     'mov    sp,bp„DATA 5D:        'pop    bp„DATA CA,06,00:  'ret    6„DATA *:         'end code„textmode:„DATA B8,03,00:  'mov    ax,0003H        ;function: set text mode„DATA CD,10:     'int    10H             ;transfer to BIOS„DATA CB:        'ret„DATA *:         'end code„„SUB Reading (x%, y%)„  DEF SEG = x%                  'set the segment„  FOR i% = 0 TO 199             'reading loop„    READ byte$                  'read 1 byte„    IF byte$ = "*" THEN EXIT FOR„				'end code„    POKE (y% + i%), VAL("&H" + byte$)„				'write 1 byte„  NEXT i%„  DEF SEG                       'reset the segment„END SUB„„SUB Waiting„  WHILE INKEY$ = ""„  WEND„END SUB„James McMurrin                 MATHEMATICAL FORMULA DISPLAYED FidoNet QUIK_BAS Echo          08-28-96 (19:48)       QB, QBasic, PDS        31   679      FOREST.BAS  'A basic mathematical formula dressed up in a pretty way„'Warning: this will take a while on slower computers!„'By: James McMurrin„COMMON SHARED NUM AS DOUBLE„SCREEN 13„FOR PU = 1 TO 255„ OUT &H3C8, PU„ OUT &H3C9, PU / 2 + 20„ OUT &H3C9, PU / 4 + 10„ OUT &H3C9, PU / 6 + 5„NEXT PU„FOR L = 3 TO 3.996875 STEP .003125„ NUM = .5„  FOR Q = 1 TO 50„   NUM = NUM * L * (1 - NUM)„  NEXT Q„  DO„   NUM = NUM * L * (1 - NUM)„   DISROW = 200 - (NUM * 200)„   P = POINT(DISCOL, DISROW)„   IF P = 255 THEN„    EXIT DO„   ELSE„    P = P + 1„    LINE (DISCOL, DISROW)-(DISCOL, DISROW), P„   END IF„  LOOP„ DISCOL = DISCOL + 1„NEXT L„BEEP„WHILE INKEY$ = "": WEND„Luke Molnar                    GORAU SHADED POLYGONS          Blood225@aol.com               09-01-96 (14:51)       QB, QBasic, PDS        261  5879     GORAU.BAS   „' Gorau Shaded Polygons.  Written by Luke Molnar.  A Molnar \ Kucalaba„' Productions program.  Tons of concept and execution help provided by„' David Eichorn.  If you are one of those people that need really obvious„' things pointed out, this is REALLY SLOW!  I don't think many people in„' their right mind would try to write a Gorau routine in QBasic and demand„' that it be fast enough for animation, but this is pretty nice looking„' if I do say so myself. :-)„„„' Another QBasic graphics "demo" that appeared first at :„„' WWW : http://members.aol.com/mkwebsite/index.html„' FTP : ftp://users.aol.com/blood225/„„„„DECLARE SUB GorauFill (Points() AS ANY)„DECLARE SUB Delay (Seconds!)„DECLARE SUB ChangeColors ()„DECLARE FUNCTION ValidPolPoints! ()„„„'$DYNAMIC„RANDOMIZE TIMER„„CLS„SCREEN 13„„„TYPE GorType„ Y1 AS INTEGER„ Y2 AS INTEGER„ C1 AS INTEGER„ C2 AS INTEGER„END TYPE„„TYPE RoutineType„ X AS INTEGER„ Y AS INTEGER„ C AS INTEGER„END TYPE„„„„DIM SHARED PolPoints(0 TO 3) AS RoutineType„„„COLOR 230„„DO„ „     ThisShouldBeASub% = ValidPolPoints ' Generate decent polygon points„„     ChangeColors                       ' Randomly assign a color scheme„„     GorauFill PolPoints()              ' Fill the 4 point polygon„ „     Delay 1                            ' Give user time to admire the beauty                         „„  User$ = INKEY$                        ' Store any keypresses  „„  CLS                                   ' Clear the screen„„LOOP UNTIL User$ <> ""                  ' Keep going until they press a key„„CLS„SCREEN 0„WIDTH 80„SYSTEM„„REM $STATIC„SUB ChangeColors„„' Changes the palette to one of 6 possible color variations„„DifColors% = INT(RND * 6) + 1„„FOR X% = 1 TO 230„„ OUT &H3C8, X%„„  SELECT CASE DifColors%„   CASE 1: OUT &H3C9, EasyVal!: OUT &H3C9, 0: OUT &H3C9, 0„   CASE 2: OUT &H3C9, 0: OUT &H3C9, EasyVal!: OUT &H3C9, 0„   CASE 3: OUT &H3C9, 0: OUT &H3C9, 0: OUT &H3C9, EasyVal!„   CASE 4: OUT &H3C9, EasyVal!: OUT &H3C9, EasyVal!: OUT &H3C9, EasyVal!„   CASE 5: OUT &H3C9, EasyVal!: OUT &H3C9, EasyVal!: OUT &H3C9, 0„   CASE 6: OUT &H3C9, EasyVal!: OUT &H3C9, 0: OUT &H3C9, EasyVal!„  END SELECT„„ EasyVal! = EasyVal! + .273913„„NEXT„„END SUB„„SUB Delay (Seconds!)„Future! = TIMER + Seconds!„DO„LOOP UNTIL TIMER >= Future! OR TIMER - (TIMER - Seconds!) < 0„END SUB„„SUB GorauFill (Points() AS RoutineType)„„DIM Scan(0 TO 320) AS GorType„„XMax% = -32767„Xmin% = 32767„„FOR X% = 0 TO 3„  IF XMax% < Points(X%).X THEN XMax% = Points(X%).X„  IF Xmin% > Points(X%).X THEN Xmin% = Points(X%).X„  PSET (Points(X%).X, Points(X%).Y), 230„NEXT„„„ IF Xmin% < 0 THEN Xmin% = 0„ IF XMax% > 320 THEN XMax% = 320„ IF Xmin% > 320 THEN EXIT SUB„ IF XMax% < 0 THEN EXIT SUB„„FOR X% = Xmin% TO XMax%„  Scan(X%).Y1 = -32767„NEXT„„„„FOR X% = 0 TO 3„„  Val1% = X%„  Val2% = (X% + 1) MOD 4„„    IF Points(Val1%).X > Points(Val2%).X THEN„      SWAP Val1%, Val2%„    END IF„ „  Y1% = Points(Val1%).Y„  x1% = Points(Val1%).X„  Col1% = Points(Val1%).C„„  Y2% = Points(Val2%).Y„  x2% = Points(Val2%).X„  Col2% = Points(Val2%).C„„  YDelta% = Y2% - Y1%„ „  XDelta% = x2% - x1%„  CDelta% = Col2% - Col1%„ „  IF XDelta% <> 0 THEN„   YSlope! = YDelta% / XDelta%„   CSlope! = CDelta% / XDelta%„  ELSE„   YSlope% = 0„   CSlope% = 0„  END IF„„  YVal! = Y1%„  CVal! = Col1%„ „      FOR I% = x1% TO x2%„       „        IF Scan(I%).Y1 = -32767 THEN„          Scan(I%).Y1 = YVal!„          Scan(I%).C1 = CVal!„        ELSE„          Scan(I%).Y2 = YVal!„          Scan(I%).C2 = CVal!„        END IF„„        YVal! = YVal! + YSlope!„        CVal! = CVal! + CSlope!„     „      NEXT„„NEXT„„„„FOR X% = Xmin% TO XMax%„„  IF Scan(X%).Y1 > Scan(X%).Y2 THEN„    Y2% = Scan(X%).Y1„    Y1% = Scan(X%).Y2„    Col2% = Scan(X%).C1„    Col1% = Scan(X%).C2„  ELSE„    Y2% = Scan(X%).Y2„    Y1% = Scan(X%).Y1„    Col2% = Scan(X%).C2„    Col1% = Scan(X%).C1„  END IF„„  YDelta% = Y2% - Y1%„ „  IF YDelta% = 0 THEN YDelta% = 1„„  CDelta% = Col2% - Col1%„  CSlope! = CDelta% / YDelta%„  CVal! = Col1%„„    FOR I% = Scan(X%).Y1 TO Scan(X%).Y2„      PSET (X%, I%), CVal!„      CVal! = CVal! + CSlope!„    NEXT„„NEXT„„„„END SUB„„FUNCTION ValidPolPoints„„' There are certain occurences with this routine in which the polygon will„' not be correctly filled in.  This routine prevents those polygons from„' happening.„„FOR I% = 0 TO 3„ „  SELECT CASE I%„    CASE 0:„           PolPoints(0).X = INT(RND * 60) + 1„           PolPoints(0).Y = INT(RND * 60) + 1„    CASE 1:„           PolPoints(1).X = INT(RND * 160) + 160„           PolPoints(1).Y = INT(RND * 100) + 2„'           IF PolPoints(1).Y < PolPoints(0).Y THEN PolPoints(1).Y = PolPoints(0).Y + INT(RND * (100 - PolPoints(0).Y))„    CASE 2:„           PolPoints(2).X = INT(RND * 160) + 160„'           IF PolPoints(2).X < PolPoints(1).X THEN PolPoints(2).X = PolPoints(1).X + 1„           PolPoints(2).Y = INT(RND * 50) + 150„    CASE 3:„           PolPoints(3).X = INT(RND * 160) + 1„           IF PolPoints(3).X < PolPoints(0).X THEN PolPoints(3).X = PolPoints(0).X + INT(RND * (160 - PolPoints(0).X))„           PolPoints(3).Y = INT(RND * 100) + 100„'           IF PolPoints(3).Y < PolPoints(2).Y THEN PolPoints(3).Y = PolPoints(2).Y + INT(RND * (100 - PolPoints(2).Y))„  END SELECT„„ PolPoints(I%).C = -1„„NEXT„„ „' Make one corner black and one corner the brightest color; the other 2 random„  „   DO UNTIL BlackOne% <> BrightOne%„     BlackOne% = INT(RND * 3)„     BrightOne% = INT(RND * 3)„   LOOP„„  PolPoints(BlackOne%).C = 0„  PolPoints(BrightOne%).C = 230„„  FOR I% = 0 TO 3„   IF PolPoints(I%).C = -1 THEN PolPoints(I%).C = INT(RND * 230) + 1„  NEXT„„END FUNCTION„„Jonathan Leger                 FAST 320X200X256 PCX VIEWER    leger@mail.dtx.net             09-02-96 (10:10)       QB, QBasic, PDS        152  5773     PCX.BAS     '***** PCX.BAS *****************************************************„'*** The original code for this routine was found in VGAPCX.BAS  ***„'*** At first I optomized the code in that file, and eventually  ***„'*** I ended up re-writing the whole thing.  That PCX loader did ***„'*** a number of things differently, including loading the color ***„'*** palette _last_.  This routine loads the palette first,  so  ***„'*** you can see the "correct" picture as the PCX is loading. In ***„'*** addition to that, I use all integers for speed and load the ***„'*** file in chunks of 2,000 bytes (instead of 1 byte at a time, ***„'*** as in the other routine, VGAPCX.BAS).  I thank the uknown   ***„'*** author of that original version, VGAPCX.BAS, because if he  ***„'*** had not put out that sample code, this PCX loader would not ***„'*** be possible.                                                ***„'*******************************************************************„'*** On a 486dx2-66, the old version (VGAPCX.BAS) loaded the PCX ***„'*** in about 21 seconds.  This new version does so in about 1.5 ***„'*** seconds.  The  speed varies depending on the  level of file ***„'*** compression attained by the PCX file.                       ***„'*******************************************************************„DEFINT A-Z„„DECLARE SUB ShowPCX (file$)„„'*** If you're using Qbasic 1.1, change this line to„'*** ShowPCX "<pcxfile>.pcx"„ShowPCX COMMAND$„„WHILE INKEY$ = "": WEND„SCREEN 0: WIDTH 80„„'*** Loads a Version 5, 320x200x256c PCX file.„'*** If you have any questions or comments about any of this code,„'*** please contact me, Jonathan Leger, at leger@mail.dtx.net.„SUB ShowPCX (file$)„„SCREEN 13„„DIM pcxpal AS STRING * 768, pcxversion AS STRING * 1„„pcxnum = FREEFILE„OPEN file$ FOR BINARY AS #pcxnum„„   '*** Get the PCX version from the header.„   GET #pcxnum, 2, pcxversion„„   '*** If we're using version 5, then load the palette.„   IF ASC(pcxversion) = 5 THEN„      '*** Grab the palette out of the file.„      GET #1, LOF(pcxnum) - 767, pcxpal„„      '*** Start with color 0.„      pal = 0„„      '*** Grab the red/green/blue value from our palette (PCXPAL) and„      '*** send them to the monitor using OUT.„      FOR p = 1 TO 768 STEP 3„         OUT &H3C8, pal„         red% = INT(ASC(MID$(pcxpal, p, 1)) / 4)„         OUT &H3C9, red%„         green% = INT(ASC(MID$(pcxpal, p + 1, 1)) / 4)„         OUT &H3C9, green%„         blue% = INT(ASC(MID$(pcxpal, p + 2, 1)) / 4)„         OUT &H3C9, blue%„         pal = pal + 1„      NEXT p„„   END IF„  „   '*** Jump past the file header.„   SEEK #pcxnum, 129„„   '*** We'll be sending the output the the screen, so our segment„   '*** is &HA000 (VGA screen memory) and our offset is 0.  You can„   '*** change these values to, say, decompress the image into an„   '*** array or something.„   fxoffset = 0: fxsegment = &HA000„„   '*** We'll be reading chunks of 2,000 bytes.  You can increase or„   '*** decrease this depending on your needs.  I noticed little or„   '*** no difference when the chunk size went past 2,000, so I left„   '*** it at 2,000 to add as little over-head as possible with maximum„   '*** speed.„   datasize = 2000„„   '*** Load our first chunk of data and point to the beginning of that„   '*** data.„   pcxdata$ = INPUT$(datasize, pcxnum)„   datacount = 1„„   '*** To increase speed, we'll be drawing the screen in two loops,„   '*** that way we can use integers to point to the next pixel instead„   '*** of long integers.  Doing this gains tremendous speed.„   FOR half = 1 TO 2„„      '*** On the second loop, this will add &H7D0 (32000) to our„      '*** segment so we'll be writing to the second half of the screen.„      '*** On the first loop, this will simply set our segment to &HA000.„      fxtotal = fxsegment + fxoffset„      DEF SEG = fxtotal„„      FOR c = 0 TO 31999„„         '*** If we're out of data, then we need to load the next chunk.„         IF datacount > datasize THEN„            pcxdata$ = INPUT$(datasize, pcxnum)„            datacount = 1„         END IF„„         '*** Get the next byte from our data chunk.„         clr = ASC(MID$(pcxdata$, datacount, 1))„         datacount = datacount + 1„„         '*** If we're out of data, then we load the next chunk.„         IF datacount > datasize THEN„            pcxdata$ = INPUT$(datasize, pcxnum)„            datacount = 1„         END IF„        „         '*** If the byte we pulled from the data has bit 6 and 7 set,„         '*** (which would make the value greater than 192), then that„         '*** means we'll be repeating a color.  So we pull the next„         '*** byte from our data chunk (which is the color), and put„         '*** it on the screen CLR - 192 times (in other words, we„         '*** take the value of the first 5 bits in the byte and put„         '*** the pixel to the screen that many times.)„         IF clr > 192 THEN„            LPS = clr - 192„            clr = ASC(MID$(pcxdata$, datacount, 1))„            datacount = datacount + 1„            FOR L = LPS TO 1 STEP -1„               POKE c, clr„               c = c + 1„            NEXT L„            c = c - 1„         ELSE„         '*** Since the byte was less than 192, then we just poke the„         '*** pixel to the screen.„            POKE c, clr„         END IF„      NEXT c„      '*** We'll move to the second half of the screen by adding 32,000„      '*** (HEX = 7D0) bytes to our segment value.„      fxoffset = fxoffset + &H7D0„   NEXT half„„'*** All done!  Close the file.„CLOSE pcxnum„„'*** Return to BASIC's default segment. Very important!„DEF SEG„„END SUB„Jonathan Leger                 GRAPHICS LOADER UPDATE         leger@mail.dtx.net             09-02-96 (10:10)       QB, QBasic, PDS        981  27476    FX2.BAS     DEFINT A-Z„„'**** Screen routines„DECLARE SUB LoadGif (file$)„DECLARE SUB LoadPcx (file$)„DECLARE SUB BsaveScreen (file$)„DECLARE SUB GiftoBSAVE (gif$, bsave$, pal$)„„'*** Palette routines„DECLARE SUB GetPal (pal())„DECLARE SUB PutPal (pal())„DECLARE SUB SavePal (file$)„DECLARE SUB LoadPal (file$)„DECLARE SUB RotatePal (direction, pal())„DECLARE SUB CyclePal (direction, pal(), numcycles)„„'*** Palette fx„DECLARE SUB FadeOut (pal())„DECLARE SUB FadeIn (pal())„DECLARE SUB BlackOut ()„„'*** Drawing Routines„DECLARE SUB ClrScr (col)„„'*** Font routines„DECLARE SUB Font (Text$, XStart, Ystart, Xscale, Yscale, Style, clr)„DECLARE SUB LoadFont ()„DECLARE SUB MakeFont ()„DECLARE SUB FontPal ()„„'*** EMS routines„DECLARE FUNCTION NumEMSHandles% ()„DECLARE FUNCTION NumEMSPages% (Handle%)„DECLARE FUNCTION GetEMS% (numpages%)„DECLARE FUNCTION EMSPages% (func%)„DECLARE FUNCTION PageFrame% ()„DECLARE FUNCTION EMSstatus% ()„DECLARE SUB ReleaseEMS (Handle%)„DECLARE SUB MapEMS (Handle%, block%)„„'*** Memory manipulation routines„DECLARE SUB MemCopy (fromseg, fromoff, toseg, tooff, numbytes)„DECLARE SUB FillChar (segment, offset, value, bytes)„„'*** Miscelaneous„DECLARE SUB WaitRetrace ()„„OPTION BASE 0„„'$STATIC„DIM pal1(0 TO 255, 3) AS INTEGER„DIM pal2(0 TO 255, 3) AS INTEGER„DIM SHARED FontBuf(0) AS STRING * 10368„„'$DYNAMIC„„LoadFont„„SCREEN 13„„GetPal pal1()„„FontPal„GetPal pal2()„BlackOut„„Font "BASIC FX", 50, 75, 3, 3, 3, 70„FadeIn pal2()„„WHILE INKEY$ = "": WEND„FadeOut pal2()„CLS„„Font "The font routines were written by:", 0, 0, 1, 1, 3, 120„Font "Luke Molnar", 70, 25, 2, 2, 3, 1„Font "Other routines written/collected by:", 0, 100, 1, 1, 3, 120„Font "Jonathan Leger", 40, 125, 2, 2, 3, 1„„FadeIn pal2()„„WHILE INKEY$ = "": WEND„„FadeOut pal2()„CLS„„PutPal pal1()„„Font "LoadGif()", 115, 100, 1, 1, 5, 15„Font "press a key", 105, 125, 1, 1, 5, 15„WHILE INKEY$ = "": WEND„„LoadGif "letterma.gif"„„FOR snd = 1000 TO 1500 STEP 100„   SOUND snd, .1„   SOUND snd + 100, .1„   SOUND snd + 200, .1„NEXT snd„„WHILE INKEY$ = "": WEND„„CLS„PutPal pal1()„„Font "LoadPcx()", 115, 100, 1, 1, 5, 15„Font "press a key", 105, 125, 1, 1, 5, 15„WHILE INKEY$ = "": WEND„„LoadPcx "bwface.pcx"„FOR snd = 1000 TO 1500 STEP 100„   SOUND snd, .1„   SOUND snd + 100, .1„   SOUND snd + 200, .1„NEXT snd„„WHILE INKEY$ = "": WEND„„IF EMSstatus THEN„   IF EMSPages(1) >= 4 THEN„      PCXHandle = GetEMS(4)„      MapEMS PCXHandle, 0„      MemCopy &HA000, 0, PageFrame, 0, &HFA00„      CLS„      Font "The previous picture has been", 0, 0, 1, 1, 5, 15„      Font "loaded into EMS memory.", 0, 25, 1, 1, 5, 15„      Font "Press any key to load picture.", 0, 50, 1, 1, 5, 15„      WHILE INKEY$ = "": WEND„      MemCopy PageFrame, 0, &HA000, 0, &HFA00„      WHILE INKEY$ = "": WEND„      ReleaseEMS PCXHandle„   END IF„END IF„„GetPal pal2()„„Font "CyclePal()", 115, 100, 1, 1, 5, 15„„DO UNTIL LEN(INKEY$) > 0„   CyclePal 1, pal2(), 1„LOOP„„BlackOut„CLS„„FontPal„GetPal pal2()„Font "Making differnt color backgrounds", 0, 0, 1, 1, 5, 50„Font "is easy (and fast!) with ClrScr()...", 0, 25, 1, 1, 5, 50„Font "press a key", 105, 125, 1, 1, 5, 50„WHILE INKEY$ = "": WEND„„RANDOMIZE TIMER„FOR x = 50 TO 200 STEP 40„   ClrScr x„   DO: LOOP UNTIL LEN(INKEY$)„NEXT x„„FillChar &HA000, 0, 0, &HFA00„BlackOut„„Font "End of..", 0, 25, 1, 1, 5, 18„Font "BASIC FX", 50, 75, 3, 3, 3, 70„Font "...Demo", 240, 145, 1, 1, 5, 18„FadeIn pal2()„„WHILE INKEY$ = "": WEND„FadeOut pal2()„CLS„PutPal pal1()„„SCREEN 0„WIDTH 80, 25„END„„REM $STATIC„SUB BlackOut„„   FOR clr = 0 TO 255„      OUT &H3C8, clr„      OUT &H3C9, 0„      OUT &H3C9, 0„      OUT &H3C9, 0„   NEXT clr„„END SUB„„SUB BsaveScreen (file$)„„DEF SEG = &HA000„BSAVE file$, 0, 64000„DEF SEG„„END SUB„„SUB ClrScr (col)„„FillChar &HA000, 0, col, &HFA00„„END SUB„„SUB CyclePal (direction, pal(), numcycles)„„FOR x = 1 TO numcycles„   WaitRetrace„   RotatePal direction, pal()„NEXT x„„END SUB„„'************* EMSPages%() ****************„'*** When func% is 0, returns the total ***„'*** number of 16k pages, when func% is ***„'*** 1, returns the number of available ***„'*** 16k pages.                         ***„'******************************************„FUNCTION EMSPages% (func%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(66) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(8) + CHR$(137) + CHR$(21) + CHR$(93) + CHR$(203)„„TotalPages% = 0: AvailablePages% = 0„„DEF SEG = VARSEG(asm$)„   CALL Absolute(TotalPages%, AvailablePages%, SADD(asm$))„DEF SEG„„IF func% = 0 THEN„   EMSPages% = TotalPages%„ELSE„   EMSPages% = AvailablePages%„END IF„„END FUNCTION„„'**************** EMSstatus%() ******************„'*** Returns whether EMS is available.  -1 is ***„'*** returned if it is available, 0 otherwise ***„'************************************************„FUNCTION EMSstatus%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(64) + CHR$(205) + CHR$(103) + CHR$(176) + CHR$(0)„asm$ = asm$ + CHR$(139) + CHR$(94) + CHR$(6) + CHR$(137) + CHR$(7)„asm$ = asm$ + CHR$(93) + CHR$(203)„„EMS% = -1„DEF SEG = VARSEG(asm$)„   CALL Absolute(EMS%, SADD(asm$))„DEF SEG„„IF EMS% = 0 THEN„   EMSstatus = -1         'EMS installed, set to BASIC's TRUE value.„ELSE„   EMSstatus = 0          'EMS not installed, set to FALSE.„END IF„„END FUNCTION„„SUB FadeIn (pal())„„DIM Tmp(0 TO 255, 3)„„FOR lp = 1 TO 64„   FOR clr = 0 TO 255„      FOR rgb = 1 TO 3„         IF Tmp(clr, rgb) < pal(clr, rgb) THEN„            Tmp(clr, rgb) = Tmp(clr, rgb) + 1„         END IF„      NEXT rgb„      OUT &H3C8, clr„      OUT &H3C9, Tmp(clr, 1)„      OUT &H3C9, Tmp(clr, 2)„      OUT &H3C9, Tmp(clr, 3)„   NEXT clr„NEXT lp„„„END SUB„„SUB FadeOut (pal())„„DIM Tmp(0 TO 255, 3)„„FOR clr = 0 TO 255„   FOR rgb = 1 TO 3„      Tmp(clr, rgb) = pal(clr, rgb)„   NEXT rgb„NEXT clr„„FOR lp = 1 TO 64„   FOR clr = 0 TO 255„      FOR rgb = 1 TO 3„         IF Tmp(clr, rgb) > 0 THEN„            Tmp(clr, rgb) = Tmp(clr, rgb) - 1„         END IF„      NEXT rgb„      OUT &H3C8, clr„      OUT &H3C9, Tmp(clr, 1)„      OUT &H3C9, Tmp(clr, 2)„      OUT &H3C9, Tmp(clr, 3)„   NEXT clr„NEXT lp„„„END SUB„„SUB FillChar (segment, offset, value, bytes)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(78) + CHR$(6) + CHR$(139) + CHR$(86) + CHR$(8)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(12) + CHR$(30) + CHR$(142)„asm$ = asm$ + CHR$(216) + CHR$(139) + CHR$(94) + CHR$(10) + CHR$(136)„asm$ = asm$ + CHR$(23) + CHR$(67) + CHR$(226) + CHR$(251) + CHR$(31)„asm$ = asm$ + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL segment, BYVAL offset, BYVAL value, BYVAL bytes, SADD(asm$))„DEF SEG„„END SUB„„SUB Font (Text$, XStart, Ystart, Xscale, Yscale, Style, clr)„„px = XStart  ' physical x and physical y„py = Ystart„„LHeight = Yscale * 8„Optimize = 63 \ LHeight ' Any constant math operations done multipe times„                          ' in the main loop should, well, not be done„                          ' in the main loop.„„„' Instead of wasting our time with all this MID$ garbage to access bytes in„' font buffer, we'll just take a PEEK directly at them.„DEF SEG = VARSEG(FontBuf(0))„„ FOR h = 1 TO LEN(Text$)„  FPtr = 81 * (ASC(MID$(Text$, h, 1)) - 1) - 1„  FOR x = 0 TO 8„   FOR y = 0 TO 8„„    col = PEEK(VARPTR(FontBuf(0)) + FPtr)„    FPtr = FPtr + 1„    IF col THEN„     SELECT CASE Style„      ' If you desire a y scale factor greater than 8, you„      ' must change the division to higher precision...very slow.„      ' Or, you could find a way around it.„      CASE 1: PSET (px, py), Optimize * (py - Ystart) + clr„              LINE (px, py)-(px, py + Yscale), Optimize * (py - Ystart) + clr„      ' Notice how this style only uses 54 colors, so you can see the top„      ' of the letters where they would normally be black„      CASE 2: CIRCLE (px, py), Yscale, (54 \ LHeight) * (py - Ystart) + clr + 9, , , 4„      CASE 3:  FOR sty = px TO px + Xscale„                FOR sty2 = py TO py + Yscale„                 PSET (sty, sty2), Optimize * (sty2 - Ystart) + clr„                 IF POINT(sty - 1, sty2) = 0 THEN PSET (sty - 1, sty2), 63 + clr - 1„                 IF POINT(sty, sty2 - 1) = 0 THEN PSET (sty, sty2 - 1), 63 + clr - 1„                NEXT„               NEXT„       CASE 4: FOR sty = px TO px + Xscale„                FOR sty2 = py TO py + Yscale„                 PSET (sty + .4 * sty2, sty2), Optimize * (sty2 - Ystart) + clr„                 IF POINT((sty - 1) + .4 * sty2, sty2) = 0 THEN PSET ((sty - 1) + .4 * sty2, sty2), 63 + clr - 1„                NEXT„               NEXT„       CASE ELSE„            PSET (px, py), clr„     END SELECT„    END IF„    py = py + Yscale„   NEXT„  px = px + Xscale„  py = Ystart„  NEXT„ NEXT h„DEF SEG„„END SUB„„SUB FontPal„FOR x = 1 TO 63„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, 0„ OUT &H3C9, 0„NEXT„FOR x = 64 TO 126„ OUT &H3C8, x„ OUT &H3C9, 0„ OUT &H3C9, x„ OUT &H3C9, 0„NEXT„FOR x = 127 TO 189„ OUT &H3C8, x„ OUT &H3C9, 0„ OUT &H3C9, 0„ OUT &H3C9, x„NEXT„FOR x = 190 TO 252„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, 0„ OUT &H3C9, x„NEXT„FOR x = 253 TO 255„ OUT &H3C8, x„ OUT &H3C9, x„ OUT &H3C9, x„ OUT &H3C9, x„NEXT„END SUB„„'********************** GetEMS%() ********************„'*** Function returns the handle value for a block ***„'*** of EMS memory that consists of numpages% 16k  ***„'*** pages.  You _must_ keep the handle value for  ***„'*** later calls that require the handle.  Example:***„'***                                               ***„'*** EmsHandle% = GetEMS%(5)                       ***„'***                                               ***„'*** EmsHandle% holds the handle info for a block  ***„'*** of memory 5 16k pages in size, oh 80k.        ***„'*****************************************************„FUNCTION GetEMS% (numpages%)„„'pageoffset% = EMSPages%(0) - EMSPages%(1)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(94) + CHR$(8) + CHR$(180) + CHR$(67) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(139) + CHR$(94) + CHR$(6) + CHR$(137)„asm$ = asm$ + CHR$(23) + CHR$(93) + CHR$(203)„„Handle% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL numpages%, Handle%, SADD(asm$))„DEF SEG„„'asm$ = ""„'asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„'asm$ = asm$ + CHR$(86) + CHR$(8) + CHR$(139) + CHR$(126) + CHR$(6)„'asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(10) + CHR$(177) + CHR$(0)„'asm$ = asm$ + CHR$(48) + CHR$(237) + CHR$(180) + CHR$(68) + CHR$(136)„'asm$ = asm$ + CHR$(200) + CHR$(137) + CHR$(243) + CHR$(205) + CHR$(103)„'asm$ = asm$ + CHR$(70) + CHR$(65) + CHR$(57) + CHR$(254) + CHR$(117)„'asm$ = asm$ + CHR$(242) + CHR$(93) + CHR$(203)„'„'DEF SEG = VARSEG(asm$)„'   CALL Absolute(BYVAL pageoffset%, BYVAL Handle%, BYVAL numpages%, SADD(asm$))„'DEF SEG„„GetEMS% = Handle%„„END FUNCTION„„SUB GetPal (pal())„   FOR clr = 0 TO 255„      OUT &H3C7, clr„      pal(clr, 1) = INP(&H3C9)„      pal(clr, 2) = INP(&H3C9)„      pal(clr, 3) = INP(&H3C9)„   NEXT clr„END SUB„„SUB GiftoBSAVE (gif$, bsave$, pal$)„„LoadGif gif$„BsaveScreen bsave$„SavePal pal$„„END SUB„„SUB LoadFont„„   fontfile = FREEFILE„„   OPEN "basefont.dat" FOR BINARY AS #fontfile„„   IF LOF(fontfile) < 20655 THEN„      SCREEN 0: WIDTH 80, 25„      COLOR 7„      PRINT "Font data file missing or corrupt.  Rebuild it? [(Y)/n]";„      DO„         key$ = UCASE$(INKEY$)„      LOOP UNTIL key$ = "N" OR key$ = "Y"„      CLOSE fontfile„      IF key$ = "N" THEN EXIT SUB„      MakeFont„      fontfile = FREEFILE„      OPEN "basefont.dat" FOR BINARY AS #fontfile„   END IF„„   GET #fontfile, , FontBuf(0)„   CLOSE #fontfile„„END SUB„„SUB LoadGif (file$)„DIM byte AS STRING * 1„DIM Prefix(4095), Suffix(4095), OutStack(4095), shiftout(8)„DIM Ybase AS LONG, powersof2(11) AS LONG, WorkCode AS LONG„„FOR a = 0 TO 7: shiftout(8 - a) = 2 ^ a: NEXT a„FOR a = 0 TO 11: powersof2(a) = 2 ^ a: NEXT a„„giffile = FREEFILE„OPEN file$ FOR BINARY AS #giffile„file$ = "      ": GET #giffile, , file$„IF file$ <> "GIF87a" THEN PRINT "Not a GIF87a file.": END„GET #giffile, , TotalX: GET #giffile, , TotalY: GOSUB GetByte„NumColors = 2 ^ ((a AND 7) + 1): NoPalette = (a AND 128) = 0„GOSUB GetByte: Background = a„GOSUB GetByte: IF a <> 0 THEN PRINT "Bad screen descriptor.": END„IF NoPalette = 0 THEN P$ = SPACE$(NumColors * 3): GET #giffile, , P$„DO„    GOSUB GetByte„    IF a = 44 THEN„        EXIT DO„    ELSEIF a <> 33 THEN„        PRINT "Unknown extension type.": END„    END IF„    GOSUB GetByte„    DO: GOSUB GetByte: file$ = SPACE$(a): GET #giffile, , file$: LOOP UNTIL a = 0„LOOP„GET #giffile, , XStart: GET #giffile, , Ystart: GET #giffile, , XLength: GET #giffile, , YLength„XEnd = XStart + XLength: YEnd = Ystart + YLength: GOSUB GetByte„IF a AND 128 THEN PRINT "Can't handle local colormaps.": END„Interlaced = a AND 64: PassNumber = 0: PassStep = 8„GOSUB GetByte„ClearCode = 2 ^ a„EOSCode = ClearCode + 1„FirstCode = ClearCode + 2: NextCode = FirstCode„StartCodeSize = a + 1: CodeSize = StartCodeSize„StartMaxCode = 2 ^ (a + 1) - 1: MaxCode = StartMaxCode„„BitsIn = 0: BlockSize = 0: BlockPointer = 1„x = XStart: y = Ystart: Ybase = y * 320&„„IF ActivePageNum = VisiblePageNum THEN„   DEF SEG = &HA000„ELSE„   DEF SEG = VideoSegment„END IF„„IF NoPalette = 0 THEN„    OUT &H3C7, 0: OUT &H3C8, 0„    FOR a = 1 TO NumColors * 3: OUT &H3C9, ASC(MID$(P$, a, 1)) \ 4: NEXT a„END IF„LINE (0, 0)-(319, 199), Background, BF„DO„    GOSUB GetCode„    IF Code <> EOSCode THEN„        IF Code = ClearCode THEN„            NextCode = FirstCode„            CodeSize = StartCodeSize„            MaxCode = StartMaxCode„            GOSUB GetCode„            CurCode = Code: LastCode = Code: LastPixel = Code„            IF x < 320 THEN POKE x + Ybase, LastPixel„            x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„        ELSE„            CurCode = Code: StackPointer = 0„            IF Code > NextCode THEN EXIT DO„            IF Code = NextCode THEN„                CurCode = LastCode„                OutStack(StackPointer) = LastPixel„                StackPointer = StackPointer + 1„            END IF„„            DO WHILE CurCode >= FirstCode„                OutStack(StackPointer) = Suffix(CurCode)„                StackPointer = StackPointer + 1„                CurCode = Prefix(CurCode)„            LOOP„„            LastPixel = CurCode„            IF x < 320 THEN POKE x + Ybase, LastPixel„            x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„„            FOR a = StackPointer - 1 TO 0 STEP -1„                IF x < 320 THEN POKE x + Ybase, OutStack(a)„                x = x + 1: IF x = XEnd THEN GOSUB NextScanLine„            NEXT a„„            IF NextCode < 4096 THEN„                Prefix(NextCode) = LastCode„                Suffix(NextCode) = LastPixel„                NextCode = NextCode + 1„                IF NextCode > MaxCode AND CodeSize < 12 THEN„                    CodeSize = CodeSize + 1„                    MaxCode = MaxCode * 2 + 1„                END IF„            END IF„            LastCode = Code„        END IF„    END IF„LOOP UNTIL DoneFlag OR Code = EOSCode„GOTO LeaveProc„„GetByte: file$ = " ": GET #giffile, , file$: a = ASC(file$): RETURN„„NextScanLine:„    IF Interlaced THEN„        y = y + PassStep„        IF y >= YEnd THEN„            PassNumber = PassNumber + 1„            SELECT CASE PassNumber„            CASE 1: y = 4: PassStep = 8„            CASE 2: y = 2: PassStep = 4„            CASE 3: y = 1: PassStep = 2„            END SELECT„        END IF„    ELSE„        y = y + 1„    END IF„    x = XStart: Ybase = y * 320&: DoneFlag = y > 199„RETURN„GetCode:„    IF BitsIn = 0 THEN GOSUB ReadBufferedByte: LastChar = a: BitsIn = 8„    WorkCode = LastChar \ shiftout(BitsIn)„    DO WHILE CodeSize > BitsIn„        GOSUB ReadBufferedByte: LastChar = a„        WorkCode = WorkCode OR LastChar * powersof2(BitsIn)„        BitsIn = BitsIn + 8„    LOOP„    BitsIn = BitsIn - CodeSize„    Code = WorkCode AND MaxCode„RETURN„ReadBufferedByte:„    IF BlockPointer > BlockSize THEN„        GOSUB GetByte: BlockSize = a„        file$ = SPACE$(BlockSize): GET #giffile, , file$„        BlockPointer = 1„    END IF„    a = ASC(MID$(file$, BlockPointer, 1)): BlockPointer = BlockPointer + 1„RETURN„LeaveProc:„CLOSE„„END SUB„„SUB LoadPal (file$)„„palfile = FREEFILE„OPEN file$ FOR BINARY AS palfile„„FOR clr = 0 TO 255„   OUT &H3C8, clr„   OUT &H3C9, ASC(INPUT$(1, palfile))„   OUT &H3C9, ASC(INPUT$(1, palfile))„   OUT &H3C9, ASC(INPUT$(1, palfile))„NEXT clr„„CLOSE palfile„„END SUB„„SUB LoadPcx (file$)„„   SCREEN 13„„   DIM pcxpal AS STRING * 768, pcxversion AS STRING * 1„„   pcxnum = FREEFILE„   OPEN file$ FOR BINARY AS #pcxnum„„   IF LOF(pcxnum) = 0 THEN„      CLOSE pcxnum„      KILL file$„      EXIT SUB„   END IF„„   GET #pcxnum, 2, pcxversion„„   IF ASC(pcxversion) = 5 THEN„      GET #1, LOF(pcxnum) - 767, pcxpal„      pal = 0„      FOR P = 1 TO 768 STEP 3„         OUT &H3C8, pal„         red% = INT(ASC(MID$(pcxpal, P, 1)) / 4)„         OUT &H3C9, red%„         green% = INT(ASC(MID$(pcxpal, P + 1, 1)) / 4)„         OUT &H3C9, green%„         blue% = INT(ASC(MID$(pcxpal, P + 2, 1)) / 4)„         OUT &H3C9, blue%„         pal = pal + 1„      NEXT P„   END IF„ „   SEEK #pcxnum, 129„ „   fxoffset = 0: fxsegment = &HA000„„   datasize = 2000„ „   pcxdata$ = INPUT$(datasize, pcxnum)„   datacount = 1„   FOR half = 1 TO 2„      fxtotal = fxsegment + fxoffset„      DEF SEG = fxtotal„      FOR c = 0 TO 31999„         IF datacount > datasize THEN„            pcxdata$ = INPUT$(datasize, pcxnum)„            datacount = 1„         END IF„         clr = ASC(MID$(pcxdata$, datacount, 1))„         datacount = datacount + 1„         IF datacount > datasize THEN„            pcxdata$ = INPUT$(datasize, pcxnum)„            datacount = 1„         END IF„         IF clr > 192 THEN„            LPS = clr - 192„            clr = ASC(MID$(pcxdata$, datacount, 1))„            datacount = datacount + 1„            FOR L = LPS TO 1 STEP -1„               POKE c, clr„               c = c + 1„            NEXT L„            c = c - 1„         ELSE„            POKE c, clr„         END IF„      NEXT c„      fxoffset = fxoffset + &H7D0„   NEXT half„„   CLOSE pcxnum„„   DEF SEG„„END SUB„„SUB MakeFont„„fontfile = FREEFILE„„OPEN "basefont.dat" FOR BINARY AS #fontfile„' Hey, change 128 to 255 for the full font.„CLS„SCREEN 13„COLOR 16„FOR ascii = 1 TO 255„ CLS„ PRINT CHR$(ascii)„ FOR x = 0 TO 8„  FOR y = 0 TO 8„   pnt$ = CHR$(POINT(x, y))„   PUT #fontfile, , pnt$„   pnt$ = ""„  NEXT„ NEXT„NEXT„CLOSE„OPEN "basefont.dat" FOR BINARY AS #fontfile„ GET #fontfile, , FontBuf(0)„CLOSE #fontfile„END SUB„„'***************** MapEMS () ***********************************„'*** Sets the page of a memory block (identified by Handle%) ***„'*** that is located at the beginning of the page frame.     ***„'*** Example:                                                ***„'***                                                         ***„'*** EmsHandle% = GetEMS%(8)                                 ***„'*** MapEMS EmsHandle%, 4                                    ***„'***                                                         ***„'*** When the page frame segment is next written to, the info***„'*** will be placed starting at the 4th page in the block of ***„'*** memory represented by EmsHandle%.  This could be use,   ***„'*** for instance, to store multiple SCREEN 13 images in one ***„'*** EMS block, by moving the first 64k image into the first ***„'*** 4 16k pages (16000 * 4 = 64000) by using:               ***„'***                                                         ***„'*** MapEMS EmsHandle%, 0                                    ***„'***                                                         ***„'*** And then putting the next 64k image into the next 4 EMS ***„'*** pages by using:                                         ***„'***                                                         ***„'*** MapEMS EmsHandle%, 4                                    ***„'***                                                         ***„'*** ... and then moving the image into the memory block.    ***„'***************************************************************„SUB MapEMS (Handle%, pageoffset%)„„numpages% = 4„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(86) + CHR$(8) + CHR$(139) + CHR$(126) + CHR$(6)„asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(10) + CHR$(177) + CHR$(0)„asm$ = asm$ + CHR$(48) + CHR$(237) + CHR$(180) + CHR$(68) + CHR$(136)„asm$ = asm$ + CHR$(200) + CHR$(137) + CHR$(243) + CHR$(205) + CHR$(103)„asm$ = asm$ + CHR$(70) + CHR$(65) + CHR$(57) + CHR$(249) + CHR$(117)„asm$ = asm$ + CHR$(242) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL pageoffset%, BYVAL Handle%, BYVAL numpages%, SADD(asm$))„DEF SEG„„END SUB„„SUB MemCopy (fromseg, fromoff, toseg, tooff, bytes)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(30)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(10) + CHR$(142) + CHR$(192)„asm$ = asm$ + CHR$(139) + CHR$(70) + CHR$(14) + CHR$(142) + CHR$(216)„asm$ = asm$ + CHR$(139) + CHR$(118) + CHR$(8) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(12) + CHR$(139) + CHR$(78) + CHR$(6) + CHR$(243)„asm$ = asm$ + CHR$(164) + CHR$(31) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL fromseg, BYVAL fromoff, BYVAL toseg, BYVAL tooff, BYVAL bytes, SADD(asm$))„DEF SEG„„END SUB„„'****************************** NumEMSHandles%() *********************„'*** Returns the number of EMS handles presently being used (there ***„'*** are a maximum of 256 handles possible at any given time).     ***„'*********************************************************************„FUNCTION NumEMSHandles%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(75) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(93) + CHR$(203)„„NumHandles% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(NumHandles%, SADD(asm$))„DEF SEG„„NumEMSHandles% = NumHandles%„„END FUNCTION„„'***************************** NumEMSPages%() *************************„'*** Returns the number of 16k pages being used by the memory block ***„'*** that is represented by Handle%.                                ***„'**********************************************************************„FUNCTION NumEMSPages% (Handle%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(139)„asm$ = asm$ + CHR$(86) + CHR$(6) + CHR$(180) + CHR$(76) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(139) + CHR$(126) + CHR$(8) + CHR$(137)„asm$ = asm$ + CHR$(29) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(numpages%, Handle%, SADD(asm$))„DEF SEG„„NumEMSPages% = numpages%„„END FUNCTION„„'******************************* PageFrame% ***************************„'*** Returns the segment that you will need to write to in order to ***„'*** store your data into EMS memory.  For example, PageFrame% may  ***„'*** return D000 (HEX, -12288 decimal), and then you might do this: ***„'***                                                                ***„'*** DEF SEG = PageFrame%        'D000                              ***„'*** MyData$ = "This is a block of data I want to store in EMS."    ***„'*** FOR X = 1 TO LEN(MyData$)                                      ***„'***   POKE X, ASC(MID$(MyData$, X, 1))                             ***„'*** NEXT X                                                         ***„'*** DEF SEG                                                        ***„'***                                                                ***„'*** Note, though, that you have to have a block of EMS opened with ***„'*** GetEMS%() and maped with MapEMS before you can write to the    ***„'*** block.                                                         ***„'**********************************************************************„FUNCTION PageFrame%„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(65) + CHR$(205) + CHR$(103) + CHR$(139) + CHR$(126)„asm$ = asm$ + CHR$(6) + CHR$(137) + CHR$(29) + CHR$(93) + CHR$(203)„„PageFrameAddr% = 0„DEF SEG = VARSEG(asm$)„   CALL Absolute(PageFrameAddr%, SADD(asm$))„DEF SEG„„PageFrame% = PageFrameAddr%„„END FUNCTION„„SUB PutPal (pal())„  „   FOR clr = 0 TO 255„      OUT &H3C8, clr„      OUT &H3C9, pal(clr, 1)„      OUT &H3C9, pal(clr, 2)„      OUT &H3C9, pal(clr, 3)„   NEXT clr„„END SUB„„'****************************** ReleaseEMS() **************************„'*** Releases the EMS memory associated with Handle%.  This is very ***„'*** important to do before you exit your program, otherwise the    ***„'*** memory being used by your open handles will not be available   ***„'*** again until you reboot.                                        ***„'**********************************************************************„SUB ReleaseEMS (Handle%)„„asm$ = ""„asm$ = asm$ + CHR$(85) + CHR$(137) + CHR$(229) + CHR$(180)„asm$ = asm$ + CHR$(69) + CHR$(139) + CHR$(86) + CHR$(6) + CHR$(205)„asm$ = asm$ + CHR$(103) + CHR$(93) + CHR$(203)„„DEF SEG = VARSEG(asm$)„   CALL Absolute(BYVAL Handle%, SADD(asm$))„DEF SEG„„END SUB„„SUB RotatePal (direction, pal())„„   SELECT CASE direction„         CASE 1„            temp1 = pal(255, 1)„            temp2 = pal(255, 2)„            temp3 = pal(255, 3)„            FOR rgb = 1 TO 3„               FOR col = 254 TO 0 STEP -1„                  pal(col + 1, rgb) = pal(col, rgb)„               NEXT col„            NEXT rgb„            pal(0, 1) = temp1„            pal(0, 2) = temp2„            pal(0, 3) = temp3„         CASE -1„            temp1 = pal(0, 1)„            temp2 = pal(0, 2)„            temp3 = pal(0, 3)„            FOR rgb = 1 TO 3„               FOR col = 0 TO 254„                  pal(col, rgb) = pal(col + 1, rgb)„               NEXT col„            NEXT rgb„            pal(255, 1) = temp1„            pal(255, 2) = temp2„            pal(255, 3) = temp3„   END SELECT„„   PutPal pal()„„END SUB„„SUB SavePal (file$)„„   palfile = FREEFILE„   OPEN file$ FOR OUTPUT AS palfile„„   FOR clr = 0 TO 255„      OUT &H3C7, clr„      PRINT #palfile, CHR$(INP(&H3C9));„      PRINT #palfile, CHR$(INP(&H3C9));„      PRINT #palfile, CHR$(INP(&H3C9));„   NEXT clr„„   CLOSE palfile„„END SUB„„SUB SetPal (pal())„END SUB„„SUB WaitRetrace„   WAIT &H3DA, 8„END SUB„Ryan White                     VORTEX                         BIGFOOT@SunBelt.Net            09-06-96 (11:42)       QB, QBasic, PDS        39   2397     VORTEX.BAS  'Vortex„'By Ryan White„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„„'This one is much faster compiled.   A little too fast.„„SCREEN 13„DEFINT A-W„CLS„DIM c(255, 2), co(255, 2)„FOR n = 0 TO 15„c(n, 0) = n * 4: c(n, 1) = n * 4: c(n, 2) = n * 4: c(n + 16, 0) = 63: c(n + 16, 1) = 63 - n * 4: c(n + 16, 2) = 63 - n * 4: c(n + 32, 0) = 63: c(n + 32, 1) = n * 2: c(n + 32, 2) = 0„c(n + 48, 0) = 63: c(n + 48, 1) = n * 2 + 31: c(n + 48, 2) = 0: c(n + 64, 0) = 63 - n * 4: c(n + 64, 1) = 63: c(n + 64, 2) = 0: c(n + 80, 0) = 0: c(n + 80, 1) = 63 - n * 2: c(n + 80, 2) = n * 4„c(n + 96, 0) = 0: c(n + 96, 1) = 32 - n * 2: c(n + 96, 2) = 60: c(n + 112, 0) = n * 3: c(n + 112, 1) = 0: c(n + 112, 2) = 60: c(n + 128, 0) = 45 - n * 3: c(n + 128, 1) = 0: c(n + 128, 2) = 60„c(n + 144, 0) = 0: c(n + 144, 1) = n * 2: c(n + 144, 2) = 60: c(n + 160, 0) = 0: c(n + 160, 1) = 30 + n * 2: c(n + 160, 2) = 60 - n * 4: c(n + 176, 0) = n * 4: c(n + 176, 1) = 63: c(n + 176, 2) = 0„c(n + 192, 0) = 63: c(n + 192, 1) = 60 - n * 2: c(n + 192, 2) = 0: c(n + 208, 0) = 63: c(n + 208, 1) = 30 - n * 2: c(n + 208, 2) = 0: c(n + 224, 0) = 60 - n * 2: c(n + 224, 1) = n * 2: c(n + 224, 2) = n * 2„c(n + 240, 0) = 30 - n * 2: c(n + 240, 1) = 30 - n * 2: c(n + 240, 2) = 30 - n * 2: NEXT n: FOR n = 1 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„„n = 0: x = 5„FOR I = 200 TO 40 STEP -1: n = n + 1: IF n = 256 THEN n = 1„x = x / 1.003: FOR j = 1 TO 10: CIRCLE (160, I), x, n, , , .5: x = x * 1.003: NEXT j„NEXT I„„'FOR n = -15 TO 15:LINE (105 + n, 65 + n)-(215 - n, 175 - n), 50 + n, B:NEXT n„'FOR n = 1 TO 33:FOR m = -1 TO 1:CIRCLE (110, 170 + m), n, 255 - n, , , 1:CIRCLE (210, 170 + m), n, 255 - n, , , 1:CIRCLE (110, 70 + m), n, 255 - n, , , 1:CIRCLE (210, 70 + m), n, 255 - n, , , 1:NEXT m:NEXT n„„DO UNTIL INKEY$ <> ""„FOR n = 1 TO 255: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„c(255, 0) = co(1, 0): c(255, 1) = co(1, 1): c(255, 2) = co(1, 2)„FOR n = 1 TO 254: FOR m = 0 TO 2: c(n, m) = co(n + 1, m): NEXT m: NEXT n„FOR n = 1 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„LOOP„„„Ryan White                     COLOR MORPH                    BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        80   2929     CMORPH.BAS  'color morph„'By Ryan White„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„SCREEN 13„CLS„DEFINT A-Z„DIM c(255, 2), co(255, 2)„FOR n = 0 TO 15„'black white red orange yellow green blue's purple ~then backwards~„'0-15      black   to  white„c(n, 0) = n * 4: c(n, 1) = n * 4: c(n, 2) = n * 4„'16-31     white   to  red„c(n + 16, 0) = 63: c(n + 16, 1) = 63 - n * 4: c(n + 16, 2) = 63 - n * 4„'32-47     red     to  orange„c(n + 32, 0) = 63: c(n + 32, 1) = n * 2: c(n + 32, 2) = 0„'48-63     orange  to  yellow„c(n + 48, 0) = 63: c(n + 48, 1) = n * 2 + 31: c(n + 48, 2) = 0„'64-79     yellow  to  green„c(n + 64, 0) = 63 - n * 4: c(n + 64, 1) = 63: c(n + 64, 2) = 0„'80-95     green   to  l.blue„c(n + 80, 0) = 0: c(n + 80, 1) = 63 - n * 2: c(n + 80, 2) = n * 4„'96-111    l.blue  to  d.blue„c(n + 96, 0) = 0: c(n + 96, 1) = 32 - n * 2: c(n + 96, 2) = 60„'112-127   d.blue  to  purple„c(n + 112, 0) = n * 3: c(n + 112, 1) = 0: c(n + 112, 2) = 60„'128-143   purple  to  d.blue„c(n + 128, 0) = 45 - n * 3: c(n + 128, 1) = 0: c(n + 128, 2) = 60„'144-159   d.blue  to  l.blue„c(n + 144, 0) = 0: c(n + 144, 1) = n * 2: c(n + 144, 2) = 60„'160-175   l.blue  to  green„c(n + 160, 0) = 0: c(n + 160, 1) = 30 + n * 2: c(n + 160, 2) = 60 - n * 4„'176-191   green   to  yellow„c(n + 176, 0) = n * 4: c(n + 176, 1) = 63: c(n + 176, 2) = 0„'192-207   yellow  to  orange„c(n + 192, 0) = 63: c(n + 192, 1) = 60 - n * 2: c(n + 192, 2) = 0„'208-223   orange  to  red„c(n + 208, 0) = 63: c(n + 208, 1) = 30 - n * 2: c(n + 208, 2) = 0„'224-239   red     to  gray„c(n + 224, 0) = 60 - n * 2: c(n + 224, 1) = n * 2: c(n + 224, 2) = n * 2„'240-255   gray    to  black„c(n + 240, 0) = 30 - n * 2: c(n + 240, 1) = 30 - n * 2: c(n + 240, 2) = 30 - n * 2„NEXT n„FOR n = 1 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„„FOR x = 0 TO 319„c = c + 1: IF c = 256 THEN c = 1„LINE (x, 0)-(159, 100), c„NEXT x„FOR y = 0 TO 199„c = c + 1: IF c = 256 THEN c = 1„LINE (319, y)-(159, 100), c„NEXT y„FOR x = 319 TO 0 STEP -1„c = c + 1: IF c = 256 THEN c = 1„LINE (x, 199)-(159, 100), c„NEXT x„FOR y = 199 TO 0 STEP -1„c = c + 1: IF c = 256 THEN c = 1„LINE (0, y)-(159, 100), c„NEXT y„„FOR r = 60 TO 1 STEP -1„FOR m = -1 TO 1„c = c + 1: IF c = 256 THEN c = 1„CIRCLE (159, 100 + m), r, c, , , 1„NEXT m„NEXT r„„DO UNTIL INKEY$ <> ""„FOR n = 1 TO 255: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„c(255, 0) = co(1, 0): c(255, 1) = co(1, 1): c(255, 2) = co(1, 2)„FOR n = 1 TO 254: FOR m = 0 TO 2: c(n, m) = co(n + 1, m): NEXT m: NEXT n„FOR n = 1 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„LOOP„„Ryan White                     FLYING BEES #2                 BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        131  4288     FLYBEES2.BASDECLARE SUB wasp (wx%(), wy%())„DECLARE SUB bees (wx%(), wy%(), x%(), y%(), xv%(), yv%(), bcolor%)„DEFINT A-Z„COMMON SHARED winW, winH, winX, winY, border, NoBees, smooth„„'Flybees #2„'By Ryan White    Original source by Richard Dale„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„'Just mess with it to learn.  I just thought his was neat enough to maybe be„'cooler.   It was.„„„ON KEY(1) GOSUB cle: KEY(1) ON„ON KEY(2) GOSUB ss: KEY(2) ON„ON KEY(3) GOSUB smoothhuh: KEY(3) ON„„DEFLNG T: CLS„„NoBees = 40„„SCREEN 12: RANDOMIZE TIMER: CLS„GOSUB ss„DIM wx(0 TO 2), wy(0 TO 2), co(15, 2), cn(15, 2)„DIM x(0 TO 2, 1 TO NoBees): DIM y(0 TO 2, 1 TO NoBees)„DIM xv(1 TO NoBees): DIM yv(1 TO NoBees)„winW = 0: winH = 0: winX = 0: winY = 0: maxx = 640: maxy = 480„' wasp will not go closer than this to the edges„    border = INT(RND * 75): winW = maxx: winH = maxy„' Initialize the wasp„    wx(0) = 640 / 2: wy(0) = 480 / 2: wx(1) = wx(0): wy(1) = wy(0)„'Initialize the bees„    FOR b = 1 TO NoBees„        x(0, b) = INT(RND * winW): x(1, b) = x(0, b)„        y(0, b) = INT(RND * winH): y(1, b) = y(0, b)„        xv(b) = 7 * (RND - .5): yv(b) = 7 * (RND - .5)„    NEXT b„    DO UNTIL INKEY$ <> ""„    CALL wasp(wx(), wy()): CALL bees(wx(), wy(), x(), y(), xv(), yv(), bcolor)„    GOSUB din„    bcolor = bcolor + 1„    IF bcolor = 15 THEN bcolor = 1„    LOOP: SCREEN 0„END„„cle:„CLS„RETURN„„ss:„rr = INT(RND * 5): gr = INT(RND * 5): br = INT(RND * 5)„FOR n = 1 TO 14„OUT &H3C8, n„OUT &H3C9, n * rr + 3„OUT &H3C9, n * gr + 3„OUT &H3C9, n * br + 3„NEXT n„RETURN„„din:„FOR n = 14 TO 1 STEP -1: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„cn(1, 0) = co(14, 0): cn(1, 1) = co(14, 1): cn(1, 2) = co(14, 2)„FOR n = 14 TO 2 STEP -1: FOR m = 0 TO 2: cn(n, m) = co(n - 1, m): NEXT m: NEXT n„FOR n = 14 TO 1 STEP -1: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„RETURN„„smoothhuh:„smooth = smooth - 1: IF smooth = -1 THEN smooth = 1„RETURN„„DEFINT T„SUB bees (wx(), wy(), x(), y(), xv(), yv(), bcolor)„' Do not let things settle down„    bb = INT(NoBees * RND + 1)„    xv(bb) = xv(bb) + (RND - .5) * 3: yv(bb) = yv(bb) + (RND - .5) * 3„FOR b = 1 TO NoBees„' Age position arrays„    x(2, b) = x(1, b): y(2, b) = y(1, b)„    x(1, b) = x(0, b): y(1, b) = y(0, b)„    dx = wx(1) - x(1, b): dy = wy(1) - y(1, b)„    distance = ABS(dx) + ABS(dy)    ' Approximation„    IF distance = 0 THEN distance = 1„    bee.acc = 3„' Accelerate„    xv(b) = xv(b) + dx * bee.acc / distance„    yv(b) = yv(b) + dy * bee.acc / distance„    bee.vel = 11„' Speed Checks„    IF xv(b) > bee.vel THEN xv(b) = bee.vel„    IF xv(b) < -bee.vel THEN xv(b) = -bee.vel„    IF yv(b) > bee.vel THEN yv(b) = bee.vel„    IF yv(b) < -bee.vel THEN yv(b) = -bee.vel„' Move the bees„   IF smooth = 1 THEN       'non smooth„        x(0, b) = x(1, b) + INT(RND * xv(b) + .25 * xv(b)): y(0, b) = y(1, b) + INT(RND * yv(b) + .25 * yv(b))„   END IF„   IF smooth = 0 THEN      'smooth„       x(0, b) = x(1, b) + xv(b): y(0, b) = y(1, b) + yv(b)„   END IF„    LINE (x(0, b), y(0, b))-(x(1, b), y(1, b)), bcolor„ NEXT b„END SUB„„SUB wasp (wx(), wy()) STATIC„' Age the arrays„    wx(2) = wx(1): wx(1) = wx(0): wy(2) = wy(1): wy(1) = wy(0)„' Accelerate (bias random variable to ensure wasp convers entire screen)„    wasp.acc = 5„    wxv = wxv + INT((RND - .4) * wasp.acc)„    wyv = wyv + INT((RND - .4) * wasp.acc)„' Speed limit checks„    wxv.max = INT(RND * 30) + 20: wyv.max = INT(RND * 30) + 20„    IF wxv > wxv.max THEN wxv = wxv.max„    IF wxv < -wxv.max THEN wxv = -wxv.max„    IF wyv > wyv.max THEN wyv = wyv.max„    IF wyv < -wyv.max THEN wyv = -wyv.max„' Move wasp„    wx(0) = wx(1) + wxv: wy(0) = wy(1) + wyv„' Bounce checks„    IF wx(0) < border OR wx(0) > winW - border - 1 THEN„        wxv = -wxv: wx(0) = wx(0) + wxv„    END IF„    IF wy(0) < border OR wy(0) > winH - border - 1 THEN„        wyv = -wyv: wy(0) = wy(0) + wyv„    END IF„END SUB„„Ryan White                     FLYING BEES #8                 BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        135  4506     FLYBEES8.BASDECLARE SUB wasp (wx%(), wy%())„DECLARE SUB bees (wx%(), wy%(), x%(), y%(), xv%(), yv%(), bcolor%)„DEFINT A-Z„COMMON SHARED winW, winH, winX, winY, border, NoBees, smooth„„'Flybees #8„'By Ryan White    Original source by Richard Dale„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„'Just mess with it to learn.  I just thought his was neat enough to maybe be„'cooler.   It was.„„„„ON KEY(1) GOSUB cle: KEY(1) ON„ON KEY(2) GOSUB ss: KEY(2) ON„ON KEY(3) GOSUB smoothhuh: KEY(3) ON„„DEFLNG T: CLS„„NoBees = 40„„SCREEN 12: RANDOMIZE TIMER: CLS„GOSUB ss„DIM wx(0 TO 2), wy(0 TO 2), co(15, 2), cn(15, 2)„DIM x(0 TO 2, 1 TO NoBees): DIM y(0 TO 2, 1 TO NoBees)„DIM xv(1 TO NoBees): DIM yv(1 TO NoBees)„winW = 0: winH = 0: winX = 0: winY = 0: maxx = 640: maxy = 480„' wasp will not go closer than this to the edges„    border = INT(RND * 75): winW = maxx: winH = maxy„' Initialize the wasp„    wx(0) = 640 / 2: wy(0) = 480 / 2: wx(1) = wx(0): wy(1) = wy(0)„'Initialize the bees„    FOR b = 1 TO NoBees„        x(0, b) = INT(RND * winW): x(1, b) = x(0, b)„        y(0, b) = INT(RND * winH): y(1, b) = y(0, b)„        xv(b) = 7 * (RND - .5): yv(b) = 7 * (RND - .5)„    NEXT b„    DO UNTIL INKEY$ <> ""„    CALL wasp(wx(), wy()): CALL bees(wx(), wy(), x(), y(), xv(), yv(), bcolor)„    GOSUB din„    bcolor = bcolor + 1„    IF bcolor = 15 THEN bcolor = 1„    LOOP: SCREEN 0„END„„cle:„CLS„RETURN„„ss:„rr = INT(RND * 5): gr = INT(RND * 5): br = INT(RND * 5)„FOR n = 1 TO 14„OUT &H3C8, n„OUT &H3C9, n * rr + 3„OUT &H3C9, n * gr + 3„OUT &H3C9, n * br + 3„NEXT n„RETURN„„din:„FOR n = 14 TO 1 STEP -1: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„cn(1, 0) = co(14, 0): cn(1, 1) = co(14, 1): cn(1, 2) = co(14, 2)„FOR n = 14 TO 2 STEP -1: FOR m = 0 TO 2: cn(n, m) = co(n - 1, m): NEXT m: NEXT n„FOR n = 14 TO 1 STEP -1: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„RETURN„„smoothhuh:„smooth = smooth - 1: IF smooth = -1 THEN smooth = 1„RETURN„„DEFINT T„SUB bees (wx(), wy(), x(), y(), xv(), yv(), bcolor)„' Do not let things settle down„    bb = INT(NoBees * RND + 1)„    xv(bb) = xv(bb) + (RND - .5) * 3: yv(bb) = yv(bb) + (RND - .5) * 3„FOR b = 1 TO NoBees„' Age position arrays„    x(2, b) = x(1, b): y(2, b) = y(1, b)„    x(1, b) = x(0, b): y(1, b) = y(0, b)„    dx = wx(1) - x(1, b): dy = wy(1) - y(1, b)„    distance = ABS(dx) + ABS(dy)    ' Approximation„    IF distance = 0 THEN distance = 1„    bee.acc = 3„' Accelerate„    xv(b) = xv(b) + dx * bee.acc / distance„    yv(b) = yv(b) + dy * bee.acc / distance„    bee.vel = 11„' Speed Checks„    IF xv(b) > bee.vel THEN xv(b) = bee.vel„    IF xv(b) < -bee.vel THEN xv(b) = -bee.vel„    IF yv(b) > bee.vel THEN yv(b) = bee.vel„    IF yv(b) < -bee.vel THEN yv(b) = -bee.vel„' Move the bees„   IF smooth = 1 THEN       'non smooth„        x(0, b) = x(1, b) + INT(RND * xv(b) + .25 * xv(b)): y(0, b) = y(1, b) + INT(RND * yv(b) + .25 * yv(b))„   END IF„   IF smooth = 0 THEN      'smooth„       x(0, b) = x(1, b) + xv(b): y(0, b) = y(1, b) + yv(b)„   END IF„    LINE (x(0, b), y(0, b))-(x(1, b), y(1, b)), bcolor„    LINE (639 - x(0, b), y(0, b))-(639 - x(1, b), y(1, b)), bcolor„    LINE (x(0, b), 479 - y(0, b))-(x(1, b), 479 - y(1, b)), bcolor„    LINE (639 - x(0, b), 479 - y(0, b))-(639 - x(1, b), 479 - y(1, b)), bcolor„ NEXT b„END SUB„„SUB wasp (wx(), wy()) STATIC„' Age the arrays„    wx(2) = wx(1): wx(1) = wx(0): wy(2) = wy(1): wy(1) = wy(0)„' Accelerate (bias random variable to ensure wasp convers entire screen)„    wasp.acc = 5„    wxv = wxv + INT((RND - .4) * wasp.acc)„    wyv = wyv + INT((RND - .4) * wasp.acc)„' Speed limit checks„    wxv.max = INT(RND * 30) + 20: wyv.max = INT(RND * 30) + 20„    IF wxv > wxv.max THEN wxv = wxv.max„    IF wxv < -wxv.max THEN wxv = -wxv.max„    IF wyv > wyv.max THEN wyv = wyv.max„    IF wyv < -wyv.max THEN wyv = -wyv.max„' Move wasp„    wx(0) = wx(1) + wxv: wy(0) = wy(1) + wyv„' Bounce checks„    IF wx(0) < border OR wx(0) > winW - border - 1 THEN„        wxv = -wxv: wx(0) = wx(0) + wxv„    END IF„    IF wy(0) < border OR wy(0) > winH - border - 1 THEN„        wyv = -wyv: wy(0) = wy(0) + wyv„    END IF„END SUB„„Ryan White                     FLYING BEES #9                 BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        142  4593     FLYBEES9.BASDECLARE SUB wasp (wx%(), wy%())„DECLARE SUB bees (wx%(), wy%(), x%(), y%(), xv%(), yv%(), bcolor%)„„'Flybees #9„'By Ryan White    Original source by Richard Dale„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„'Just mess with it to learn.  I just thought his was neat enough to maybe be„'cooler.   It was.„„DEFINT A-Z„COMMON SHARED winW, winH, winX, winY, border, NoBees, smooth„„ON KEY(1) GOSUB cle: KEY(1) ON„ON KEY(2) GOSUB ss: KEY(2) ON„ON KEY(3) GOSUB smoothhuh: KEY(3) ON„„DEFLNG T: CLS„„NoBees = 1„„SCREEN 12: RANDOMIZE TIMER: CLS„GOSUB ss„DIM wx(0 TO 2), wy(0 TO 2), co(15, 2), cn(15, 2)„DIM x(0 TO 2, 1 TO NoBees): DIM y(0 TO 2, 1 TO NoBees)„DIM xv(1 TO NoBees): DIM yv(1 TO NoBees)„winW = 0: winH = 0: winX = 0: winY = 0: maxx = 640: maxy = 480„' wasp will not go closer than this to the edges„    border = INT(RND * 75): winW = maxx: winH = maxy„' Initialize the wasp„    wx(0) = 640 / 2: wy(0) = 480 / 2: wx(1) = wx(0): wy(1) = wy(0)„'Initialize the bees„    FOR b = 1 TO NoBees„        x(0, b) = INT(RND * winW): x(1, b) = x(0, b)„        y(0, b) = INT(RND * winH): y(1, b) = y(0, b)„        xv(b) = 7 * (RND - .5): yv(b) = 7 * (RND - .5)„    NEXT b„    DO UNTIL INKEY$ <> ""„    CALL wasp(wx(), wy()): CALL bees(wx(), wy(), x(), y(), xv(), yv(), bcolor)„    GOSUB din„    bcolor = bcolor + 1„    IF bcolor = 15 THEN bcolor = 1„    LOOP: SCREEN 0„END„„cle:„CLS„RETURN„„ss:„rr = INT(RND * 5): gr = INT(RND * 5): br = INT(RND * 5)„FOR n = 1 TO 14„OUT &H3C8, n„OUT &H3C9, n * rr + 3„OUT &H3C9, n * gr + 3„OUT &H3C9, n * br + 3„NEXT n„RETURN„„din:„FOR n = 14 TO 1 STEP -1: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„cn(1, 0) = co(14, 0): cn(1, 1) = co(14, 1): cn(1, 2) = co(14, 2)„FOR n = 14 TO 2 STEP -1: FOR m = 0 TO 2: cn(n, m) = co(n - 1, m): NEXT m: NEXT n„FOR n = 14 TO 1 STEP -1: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„RETURN„„smoothhuh:„smooth = smooth - 1: IF smooth = -1 THEN smooth = 1„RETURN„„DEFINT T„SUB bees (wx(), wy(), x(), y(), xv(), yv(), bcolor)„' Do not let things settle down„    bb = INT(NoBees * RND + 1)„    xv(bb) = xv(bb) + (RND - .5) * 3: yv(bb) = yv(bb) + (RND - .5) * 3„FOR b = 1 TO NoBees„' Age position arrays„    x(2, b) = x(1, b): y(2, b) = y(1, b)„    x(1, b) = x(0, b): y(1, b) = y(0, b)„    dx = wx(1) - x(1, b): dy = wy(1) - y(1, b)„    distance = ABS(dx) + ABS(dy)    ' Approximation„    IF distance = 0 THEN distance = 1„    bee.acc = 3„' Accelerate„    xv(b) = xv(b) + dx * bee.acc / distance„    yv(b) = yv(b) + dy * bee.acc / distance„    bee.vel = 11„' Speed Checks„    IF xv(b) > bee.vel THEN xv(b) = bee.vel„    IF xv(b) < -bee.vel THEN xv(b) = -bee.vel„    IF yv(b) > bee.vel THEN yv(b) = bee.vel„    IF yv(b) < -bee.vel THEN yv(b) = -bee.vel„' Move the bees„   IF smooth = 1 THEN       'non smooth„        x(0, b) = x(1, b) + INT(RND * xv(b) + .25 * xv(b)): y(0, b) = y(1, b) + INT(RND * yv(b) + .25 * yv(b))„   END IF„   IF smooth = 0 THEN      'smooth„       x(0, b) = x(1, b) + xv(b): y(0, b) = y(1, b) + yv(b)„   END IF„    FOR sx = 0 TO 639 STEP 25„    LINE (x(1, b), y(0, b))-(sx, 0), bcolor„    NEXT sx„    FOR sy = 0 TO 479 STEP 25„    LINE (x(1, b), y(0, b))-(639, sy), bcolor„    NEXT sy„    FOR sx = 639 TO 0 STEP -25„    LINE (x(1, b), y(0, b))-(sx, 479), bcolor„    NEXT sx„    FOR sy = 479 TO 0 STEP -25„    LINE (x(1, b), y(0, b))-(0, sy), bcolor„    NEXT sy„ NEXT b„END SUB„„SUB wasp (wx(), wy()) STATIC„' Age the arrays„    wx(2) = wx(1): wx(1) = wx(0): wy(2) = wy(1): wy(1) = wy(0)„' Accelerate (bias random variable to ensure wasp convers entire screen)„    wasp.acc = 5„    wxv = wxv + INT((RND - .4) * wasp.acc)„    wyv = wyv + INT((RND - .4) * wasp.acc)„' Speed limit checks„    wxv.max = INT(RND * 30) + 20: wyv.max = INT(RND * 30) + 20„    IF wxv > wxv.max THEN wxv = wxv.max„    IF wxv < -wxv.max THEN wxv = -wxv.max„    IF wyv > wyv.max THEN wyv = wyv.max„    IF wyv < -wyv.max THEN wyv = -wyv.max„' Move wasp„    wx(0) = wx(1) + wxv: wy(0) = wy(1) + wyv„' Bounce checks„    IF wx(0) < border OR wx(0) > winW - border - 1 THEN„        wxv = -wxv: wx(0) = wx(0) + wxv„    END IF„    IF wy(0) < border OR wy(0) > winH - border - 1 THEN„        wyv = -wyv: wy(0) = wy(0) + wyv„    END IF„END SUB„„Ryan White                     GEOMETRY SICKENER              BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        87   2422     GEOMSICK.BAS'GEOMETRY SICKENER„'By Ryan White„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„SCREEN 12„DEFINT A-Z„CLS„RANDOMIZE TIMER„pnts = 6„DIM x(pnts), y(pnts), xc(pnts), yc(pnts), xb(pnts), yb(pnts), co(15, 2), cn(15, 2)„ON KEY(1) GOSUB tt: KEY(1) ON       'Change colors„ON KEY(2) GOSUB makepoints: KEY(2) ON      'redo points„ON KEY(3) GOSUB clrdescrn: KEY(3) ON          'clear screen„„GOSUB tt„GOSUB makepoints„„st:„GOSUB doline„CLS„DO UNTIL INKEY$ <> ""„GOSUB bounce: GOSUB doline: cx = cx + 1: IF cx = 5 THEN cx = 0: GOSUB colorpuller  ': GOSUB doline0„LOOP„GOSUB daend„„doline:„c = c + 1: IF c = 16 THEN c = 1„m = pnts - 1: o = pnts„DO UNTIL o = 0„LINE (x(o), y(o))-(x(m), y(m)), c„m = m - 1: IF m = -1 THEN o = o - 1: m = o - 1„LOOP„RETURN„„clrdescrn:„CLS„RETURN„„makepoints:„FOR n = 0 TO pnts„ x(n) = INT(RND * 640): y(n) = INT(RND * 480): xb(n) = 1: yb(n) = 1„NEXT n„RETURN„„doline0:„m = pnts - 1: o = pnts„DO UNTIL o = 0„LINE (x(o), y(o))-(x(m), y(m)), 0„m = m - 1: IF m = -1 THEN o = o - 1: m = o - 1„LOOP„RETURN„„bounce:„FOR m = 0 TO pnts„IF x(m) >= 639 THEN xc(m) = 1: xb = INT(RND * 8)„IF x(m) <= 0 THEN xc(m) = 0: xb = INT(RND * 8)„IF y(m) >= 479 THEN yc(m) = 1: yb = INT(RND * 6)„IF y(m) <= 0 THEN yc(m) = 0: yb = INT(RND * 6)„IF xc(m) = 1 THEN x(m) = x(m) - xb(m) ELSE x(m) = x(m) + xb(m)„IF yc(m) = 1 THEN y(m) = y(m) - yb(m) ELSE y(m) = y(m) + yb(m)„NEXT m„RETURN„„daend:„CLS : SCREEN 0: WIDTH 80, 25: END„„tt:„r = INT(RND * 5): g = INT(RND * 5): b = INT(RND * 5)„FOR attr% = 1 TO 15„rt% = attr% * r + 3: gt% = attr% * g + 3: bt% = attr% * b + 3„co(attr%, 0) = rt%: co(attr%, 1) = gt%: co(attr%, 2) = bt%„cn(attr%, 0) = rt%: cn(attr%, 1) = gt%: cn(attr%, 2) = bt%„OUT &H3C8, attr%: OUT &H3C9, rt%: OUT &H3C9, gt%: OUT &H3C9, bt%„NEXT attr%„RETURN„„colorpuller:„FOR n = 15 TO 1 STEP -1: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„cn(1, 0) = co(15, 0): cn(1, 1) = co(15, 1): cn(1, 2) = co(15, 2)„FOR n = 15 TO 2 STEP -1: FOR m = 0 TO 2: cn(n, m) = co(n - 1, m): NEXT m: NEXT n„FOR n = 15 TO 1 STEP -1: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„RETURN„„Ryan White                     GEOMETRY SICKER                BIGFOOT@SunBelt.Net            09-06-96 (12:31)       QB, QBasic, PDS        93   2582     GEOMSCKR.BAS'Geometry Sicker„'By Ryan White„'This is a sample of my abilities with palettes and wierd designs.„'If you would like to get more of these type programs, write me at„'Bigfoot@Sunbelt.Net  or  Bigfoot@InfoAve.Net„'I have more than 575 Qbasic programs to my name, and it grows daily.„'Ah well, enjoy...„„'This is simply a neater? version of Geometry Sickness„„„SCREEN 12„DEFINT A-Z„CLS„RANDOMIZE TIMER„pnts = 3        '# or points -1„DIM x(pnts), y(pnts), xc(pnts), yc(pnts), xb(pnts), yb(pnts), co(15, 2), cn(15, 2)„ON KEY(1) GOSUB tt: KEY(1) ON„ON KEY(2) GOSUB makepoints: KEY(2) ON„ON KEY(3) GOSUB clrdescrn: KEY(3) ON„WINDOW (0, 0)-(639, 639)„GOSUB tt„GOSUB makepoints„„st:„GOSUB doline„CLS„DO UNTIL INKEY$ <> ""„GOSUB bounce: GOSUB doline: GOSUB colorpuller  ': GOSUB doline0„LOOP„GOSUB daend„„doline:„c = c + 1: IF c = 16 THEN c = 1„m = pnts - 1: o = pnts„DO UNTIL o = 0„LINE (x(o), y(o))-(x(m), y(m)), c„LINE (639 - x(o), y(o))-(639 - x(m), y(m)), c„LINE (x(o), 639 - y(o))-(x(m), 639 - y(m)), c„LINE (639 - x(o), 639 - y(o))-(639 - x(m), 639 - y(m)), c„m = m - 1: IF m = -1 THEN o = o - 1: m = o - 1„LOOP„RETURN„„clrdescrn:„CLS„RETURN„„makepoints:„FOR n = 0 TO pnts„ x(n) = INT(RND * 640): y(n) = INT(RND * 640): xb(n) = 1: yb(n) = 1„NEXT n„RETURN„„doline0:„m = pnts - 1: o = pnts„DO UNTIL o = 0„LINE (x(o), y(o))-(x(m), y(m)), 0„m = m - 1: IF m = -1 THEN o = o - 1: m = o - 1„LOOP„RETURN„„bounce:„FOR m = 0 TO pnts„IF x(m) >= 639 THEN xc(m) = 1: xb = INT(RND * 8)„IF x(m) <= 0 THEN xc(m) = 0: xb = INT(RND * 8)„IF y(m) >= 639 THEN yc(m) = 1: yb = INT(RND * 6)„IF y(m) <= 0 THEN yc(m) = 0: yb = INT(RND * 6)„IF xc(m) = 1 THEN x(m) = x(m) - xb(m) ELSE x(m) = x(m) + xb(m)„IF yc(m) = 1 THEN y(m) = y(m) - yb(m) ELSE y(m) = y(m) + yb(m)„NEXT m„RETURN„„daend:„CLS : SCREEN 0: WIDTH 80, 25: END„„tt:„r = INT(RND * 5): g = INT(RND * 5): b = INT(RND * 5)„FOR attr% = 1 TO 15„rt% = attr% * r + 3: gt% = attr% * g + 3: bt% = attr% * b + 3„co(attr%, 0) = rt%: co(attr%, 1) = gt%: co(attr%, 2) = bt%„cn(attr%, 0) = rt%: cn(attr%, 1) = gt%: cn(attr%, 2) = bt%„OUT &H3C8, attr%: OUT &H3C9, rt%: OUT &H3C9, gt%: OUT &H3C9, bt%„NEXT attr%„RETURN„„colorpuller:„FOR n = 15 TO 1 STEP -1: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„cn(1, 0) = co(15, 0): cn(1, 1) = co(15, 1): cn(1, 2) = co(15, 2)„FOR n = 15 TO 2 STEP -1: FOR m = 0 TO 2: cn(n, m) = co(n - 1, m): NEXT m: NEXT n„FOR n = 15 TO 1 STEP -1: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„RETURN„„Nathan Wittich                 3D GRAPHS                      wittich@cdsnet.net             09-18-96 (18:27)       QB, QBasic, PDS        82   2523     3DGRAPH.BAS ' 3dgraph„' a cool screensaver by Nathan Wittich„' wittich@cdsnet.net in subject put in "Nathan:" someone else is in„' an email based newsgroup that I share internet access with.„'„' This program draws new 3d graphs on the screen. Each one is different„' in colors, sizes, smoothness, and how high the bumps are. My goal„' when I made it was to make each one as different as I can, not just„' different graphs that look alike„'„' here's how it makes the graph:„' A dimmensioned variable (u) has all the grids„' Into each place, it puts a random number.„' it averages each grid's height with the heights of surrounding ones.„' It does that lots of times.„' Then it draws the graph„'„' Although random #'s make each different, changing the source code will„' be even better.„'„' How come in basic I can make a cooler screensaver than Microsuck?„'„„RANDOMIZE TIMER„DEFINT A-Z„DIM u(75, 60)„SCREEN 12„DO„c1 = RND * 8„c2 = RND * 8„c3 = RND * 8„'PRINT "palette"„FOR a = 1 TO 14„'PALETTE a, a * 4„NEXT a„'PRINT "setting up"„l1 = RND * 500„l2 = l1 + RND * 500„FOR a = 1 TO 64„FOR b = 1 TO 48„u(a, b) = (u(a, b) * .9) + RND * l1 - RND * l1„IF RND < .01 THEN u(a, b) = l2 * RND„NEXT b„NEXT a„'FOR a = 55 TO 64„'FOR b = 5 TO 43„'u(a, b) = (u(a - 1, b) - 10)„'NEXT b„'NEXT a„FOR i = 1 TO 4 + RND * 2„LOCATE 3, 1„'PRINT "smoothening "; INT((i / 7) * 100); "%"„FOR a = 2 TO 64 'smoothen it„FOR b = 2 TO 48„u(a, b) = (u(a + 1, b) + u(a - 1, b) + u(a, b - 1) + u(a, b + 1) + u(a, b + 2) + u(a + 2, b)) / 6„NEXT b„NEXT a„NEXT i„'FOR i = 1 TO 2„'FOR a = -480 + RND + RND + RND TO 640 STEP 2 + RND * 3„'LINE (640 - a, 0)-(640 - a - 480, 480), 0„'LINE (a, 0)-(a + 480, 480), 0„'NEXT a„'NEXT„CLS„'d = 1„n = RND * 10 + RND * 10„FOR a = 60 TO 2 STEP -1„FOR b = 2 TO 45„IF ABS(a - b) < 35 AND (a + b) > 15 AND a > 5 AND b > 5 THEN„        'SWAP d, e„        'LINE (a * n + u(a, b), b * n - u(a, b))-(a * n + u(a - 1, b + 1) - n, n + b * n - u(a - 1, b + 1)),RND * 16, BF„        LINE (a * n + u(a, b), b * n - u(a, b))-(a * n + u(a + 1, b + 1) + n, n + b * n - u(a + 1, b + 1)),c1„        'LINE (a * n + u(a, b), b * n - u(a, b + 1) + n)-(a * n + n + u(a + 1, b), b * n - u(a + 1, b)), c1„        LINE (a * n + u(a, b), b * n - u(a, b))-(a * n + u(a + 1, b) + n, b * n - u(a + 1, b)), c2„        LINE (a * n + u(a, b), b * n - u(a, b))-(a * n + u(a, b + 1), b * n + n - u(a, b + 1)), c3„        END IF„NEXT b„SWAP d, e„NEXT a„'a$ = INPUT$(1)„LOOP WHILE INKEY$ = ""„James N. Broadbent             DEMO OF REAL-TIME GRAPHING     FidoNet QUIK_BAS Echo          05-17-96 (00:00)       QB, QBasic, PDS        290  9419     GRAPHING.BAS' > I am trying to figure out a way to put some graphic onto the„' > screen instataneously.  I'm sure you have played DOOM or Wolf-3D„„'I'm a Descent into Saturn fan myself„„' > before, or at least looked at it.  I don't know how many„' > frames-per-second those games display, but it is awfully smooth.  Is„' > there any way to get smooth graphics like that in QuickBASIC?„„'I feel like taking a scene from "Wayne's World" and bowing down to these „'people saying "We're not worthy....We're not worthy!!!"  :-)„„'Truly I don't think that kind of graphics is possible in Qb 4.5. It astounds „'me how they can control the motion of robots, missles and screnery so „'smoothly. I have trouble with just a couple of simple elements„ „' -> If it is trying to graph realtime data, I may be able to„' -> help you. I have recently worked on a realtime graphical„' -> display of 2 values being updated every 0.2 seconds using„' -> PSET, VIEW, and WINDOW.„„' > Do you have any code that you might be able to post in here?„„'Sure!...<...>„„'The purpose of this routine is to give a graphic visual display of incoming „'data from 2 COM ports. I have simulated this a simple random number routine „'for each variable.„ „'It probably could be improved a bit since I don't put the values for the major„'Y-axis tick marks. But they aren't really necessary for what I was doing.„ „'Hope you like it....look forward to your comments.„ „'Regards Jim„„'       **************************************************************„'       ***   Demonstration of real-time graphing of 2 parameters  ***„'       ***              with time on the X-axis                   ***„'       ***                                                        ***„'       ***              by   James N. Broadbent                   ***„'       ***                    May 17, 1996                        ***„'       **************************************************************„„SCREEN 12„DIM YGRAPH!(8, 2)„„'       YGRAPH!(8,2)  is the matrix that holds the vales that make up„'                     the Y-axis for the 3 "ZOOM" levels.„'       "ZOOM" levels are magnification levels of full scale on the„'                     Y-axis. They can be any ratio desired but in this„'                     example the ZOOMFACTORS are 100%, 200% and 400%„'                     magnification.„„'       NOTE: This is not a general graphing routine but will have„'             a min "Y" value set to 0.0 and max "Y" value of 100000„START:„        CLS„        LOCATE 9, 20„        LINE INPUT "Enter the Maximum Value for Y-axis: "; a$„        IF VAL(a$) <= 0! OR VAL(a$) > 100000 THEN„           LOCATE 11, 20„           BEEP„           PRINT "Please enter a number from 0 to 100,000!"„           SLEEP 1„           GOTO START„           END IF„        MAXY! = VAL(a$)„„'       Graph co-ordinates for ZOOM feature and drawing the Y-axis„„'       set min and max for window statement for each zoom level„        YGRAPH!(0, 0) = MAXY! * 1.05„        YGRAPH!(0, 1) = MAXY! * 1.05 / 2„        YGRAPH!(0, 2) = MAXY! * 1.05 / 4„        YGRAPH!(1, 0) = -.05 * MAXY!„        YGRAPH!(1, 1) = -.05 * MAXY! / 2„        YGRAPH!(1, 2) = -.05 * MAXY! / 4„      „'       set Y-axis and X-axis overall coordinates„        FOR i% = 0 TO 2„           YGRAPH!(2, i%) = YGRAPH!(1, i%) * .95„        NEXT i%„       „'       set major Y-axis tick marks„        k! = 1.25„        FOR j% = 3 TO 7„           k! = k! - .25„           FOR i% = 0 TO 2„              l% = i% ^ 2 + 1„              IF l% = 5 THEN l% = 4„              YGRAPH!(j%, i%) = MAXY! * k! / l%„           NEXT i%„        NEXT j%„„'       Bottom screen clearing coordinates„        YGRAPH!(8, 0) = -.045 * MAXY!„        YGRAPH!(8, 1) = -.045 * MAXY! / 2„        YGRAPH!(8, 2) = -.045 * MAXY! / 4„„'       Create the viewport for the Graph„        VIEW (1, 100)-(637, 440), 1, 9„„'       set up the initial graph„        z% = 0                       ' ZOOMFACTOR element„        GOSUB graphcoordinates„        COLOR 14„        LOCATE 1, 10„        PRINT "Demonstration of a Continuous Real-Time Plot of 2 Variables";„        LOCATE 2, 30„        PRINT "by James N. Broadbent"„        ZF% = z% ^ 2 + 100„        IF ZF% > 450 THEN ZF% = 400„        r! = MAXY! / ZF% * 100„        COLOR 11„        LOCATE 4, 5„        PRINT "Y - Axis Range : 0 to"; r!; " units"„        COLOR 3„        LOCATE 5, 5„        PRINT "ZOOM Factor (%):"; ZF%„        COLOR 13„        LOCATE 4, 50„        PRINT "Value of Variable #1:";„        COLOR 15„        LOCATE 5, 50„        PRINT "Value of Variable #2:";„        LOCATE 29, 5„        PRINT "Press <X> to Exit";„        LOCATE 29, 57„        PRINT "Press <Z> to ZOOM";„        COLOR 14„        LOCATE 29, 34„        PRINT "TIME (SECS):";„„'      initialize these following parameters for real-time graph„       X! = -1                         ' X axis data position„       STARTTIME! = TIMER              ' for time display = 0„       TRIGGER! = TIMER                ' to trigger data display„       „'       Generate simulated values and plot to the screen„„       DO„          a$ = UCASE$(INKEY$)„          IF TIMER - TRIGGER! > .2 THEN„             GOSUB YDATA„             TRIGGER! = TIMER„             COLOR 14„             LOCATE 29, 46„             PRINT INT(TIMER - STARTTIME);„             IF TIMER - STARTIME > 99999 THEN STARTIME = TIMER„             END IF„          IF a$ = "Z" THEN„             z% = z% + 1„             SELECT CASE z%„                CASE 0„                   ZF% = 100„                CASE 1„                   ZF% = 200„                CASE 2„                   ZF% = 400„                CASE 3„                   ZF% = 100„                   z% = 0„             END SELECT„„          r! = MAXY! / ZF% * 100„          COLOR 11„          LOCATE 4, 5„          PRINT SPC(35);„          LOCATE 4, 5„          PRINT "Y - Axis Range : 0 to"; r!; " units";„          VIEW (1, 100)-(637, 440), 1, 9„          GOSUB graphcoordinates„          COLOR 3„          LOCATE 5, 22„          COLOR 13„          PRINT ZF%;  ' Display the ZOOM„          END IF„„       LOOP WHILE a$ <> "X"„„       VIEW„       CLS 0„       COLOR 15„       LOCATE 9, 29„       PRINT "Start again (Y/N)?"„       DO„          a$ = UCASE$(INKEY$)„          IF a$ = "Y" THEN GOTO START„          IF a$ = "N" THEN END„       LOOP„„graphcoordinates:„„'       Set up Graph coordinates„„       WINDOW (-15, YGRAPH!(1, z%))-(620, YGRAPH!(0, z%))„       LINE (-8, YGRAPH!(2, z%))-(600, YGRAPH!(2, z%)), 11„       LINE (-5, YGRAPH!(3, z%))-(-5, YGRAPH!(1, z%)), 11„       LINE (-10, YGRAPH!(3, z%))-(-5, YGRAPH!(3, z%)), 11„       LINE (-7, YGRAPH!(4, z%))-(-5, YGRAPH!(4, z%)), 11„       LINE (-10, YGRAPH!(5, z%))-(-5, YGRAPH!(5, z%)), 11„       LINE (-7, YGRAPH!(6, z%))-(-5, YGRAPH!(6, z%)), 11„„'      Next line is the "TICK" indicating ZERO„       LINE (-10, YGRAPH!(7, z%))-(-5, YGRAPH!(7, z%)), 13„„       RETURN„„YDATA:„„'       Generate simulated vales for variables 1 and 2„„       IY1! = (MAXY! * RND(1) - MAXY! / 2) * .1„       IY2! = (MAXY! * RND(1) - MAXY! / 2) * .1„       IF Y1! + IY1! > MAXY! OR Y1! + IY1! < 0 THEN„          Y1! = Y1! - IY1!„          ELSE„          Y1! = Y1! + IY1!„          END IF„       IF Y2! + IY2! > MAXY! OR Y2! + IY2! < 0 THEN„          Y2! = Y2! - IY2!„          ELSE„          Y2! = Y2! + IY2!„          END IF„       LOCATE 4, 72„       PRINT "       ";„       LOCATE 5, 72„       PRINT "       ";„       SELECT CASE MAXY!„          CASE IS > 10000„             COLOR 13„             LOCATE 4, 72„             PRINT USING "#####"; Y1!„             COLOR 15„             LOCATE 5, 72„             PRINT USING "#####"; Y2!„          CASE 1000 TO 9999„             COLOR 13„             LOCATE 4, 72„             PRINT USING "####.#"; Y1!„             COLOR 15„             LOCATE 5, 72„             PRINT USING "######.#"; Y2!„          CASE 100 TO 999„             COLOR 13„             LOCATE 4, 72„             PRINT USING "###.##"; Y1!„             COLOR 15„             LOCATE 5, 72„             PRINT USING "###.##"; Y2!„          CASE 10 TO 99„             COLOR 13„             LOCATE 4, 72„             PRINT USING "##.###"; Y1!„             COLOR 15„             LOCATE 5, 72„             PRINT USING "##.###"; Y2!„          CASE 1! TO 9.9„             COLOR 13„             LOCATE 4, 72„             PRINT USING "#.####"; Y1!„             COLOR 15„             LOCATE 5, 72„             PRINT USING "#.####"; Y2!„       END SELECT„       X! = X! + 1„       „'       plotting the variable values      „       IF X! > 600 THEN„          X! = 0„          PSET (X!, Y1!), 13„          PSET (X!, Y2!), 15„          ELSE„          LINE (X! - 1, LY1!)-(X!, Y1!), 13„          LINE (X! - 1, LY2!)-(X!, Y2!), 15„       END IF„       „'       compute and establish data clearing block           „       „       IF X! > 559 THEN„          XL! = X! - 560„          ELSE„          XL! = X! + 41„          END IF„       LINE (XL! - 1, YGRAPH!(8, z%))-(XL! + 1, YGRAPH!(0, z%)), 1, BF„       „'       save last values of each variable          „       LY1! = Y1!: LY2! = Y2!„       RETURN„Ryan White                     SPIRALING MIND KNOCKER         BIGFOOT@InfoAve.Net            09-21-96 (17:53)       QB, QBasic, PDS        74   2707     SPIRALER.BAS'sPiRaLiNg MiNd KnOcKeR 1„'By Ryan White„'Look at it for a while then look away„'Edit anyway you want„„ON KEY(1) GOSUB st: KEY(1) ON„SCREEN 13„CLS„„     'roze„'FOR x = 180 TO 1 STEP -.5„'z = 159 + x * COS(x):y = 99 + x * SIN(x)„'FOR r = 15 TO 0 STEP -1„'c = c + 1: IF c = 16 THEN c = 1„'LINE (z - r, y - r)-(z + r, y + r), c, B„'NEXT r: NEXT x„„      'Webz„'FOR x = 180 TO 1 STEP -.05„'z = 159 + x * COS(x): y = 99 + x * SIN(x)„'c = c + 1: IF c = 16 THEN c = 1„'LINE (0, 0)-(z, y), c: LINE -(319, 0), c: LINE (319, 199)-(z, y), c: LINE -(0, 199), c„'NEXT x„      „       'Gemz„'FOR x = 180 TO 1 STEP -.05„'z = 159 + x * COS(x): y = 99 + x * SIN(x)„'FOR r = 5 TO 1 STEP -1„'c = c + 1: IF c = 16 THEN c = 1„'FOR m = -1 TO 1: CIRCLE (z, y + m), r, c, , , 1: NEXT m„'NEXT r: NEXT x„„      'X-points„FOR x = 180 TO 1 STEP -.05„z = 159 + x * COS(x)„y = 99 + x * SIN(x)„c = c + .1: IF c = 16 THEN c = 1„LINE (z - 2, y - 2)-(z, y), c„LINE -(z + 2, y - 2), c„LINE (z + 2, y + 2)-(z, y), c„LINE -(z - 2, y + 2), c„NEXT x„„st:„DEFINT A-Z„DIM c(255, 2), co(255, 2)„FOR n = 0 TO 15„'black white red orange yellow green blue's purple ~then backwards~„c(n, 0) = n * 4: c(n, 1) = n * 4: c(n, 2) = n * 4„c(n + 16, 0) = 63: c(n + 16, 1) = 63 - n * 4: c(n + 16, 2) = 63 - n * 4„c(n + 32, 0) = 63: c(n + 32, 1) = n * 2: c(n + 32, 2) = 0„c(n + 48, 0) = 63: c(n + 48, 1) = n * 2 + 31: c(n + 48, 2) = 0„c(n + 64, 0) = 63 - n * 4: c(n + 64, 1) = 63: c(n + 64, 2) = 0„c(n + 80, 0) = 0: c(n + 80, 1) = 63 - n * 2: c(n + 80, 2) = n * 4„c(n + 96, 0) = 0: c(n + 96, 1) = 32 - n * 2: c(n + 96, 2) = 60„c(n + 112, 0) = n * 3: c(n + 112, 1) = 0: c(n + 112, 2) = 60„c(n + 128, 0) = 45 - n * 3: c(n + 128, 1) = 0: c(n + 128, 2) = 60„c(n + 144, 0) = 0: c(n + 144, 1) = n * 2: c(n + 144, 2) = 60„c(n + 160, 0) = 0: c(n + 160, 1) = 30 + n * 2: c(n + 160, 2) = 60 - n * 4„c(n + 176, 0) = n * 4: c(n + 176, 1) = 63: c(n + 176, 2) = 0„c(n + 192, 0) = 63: c(n + 192, 1) = 60 - n * 2: c(n + 192, 2) = 0„c(n + 208, 0) = 63: c(n + 208, 1) = 30 - n * 2: c(n + 208, 2) = 0„c(n + 224, 0) = 60 - n * 2: c(n + 224, 1) = n * 2: c(n + 224, 2) = n * 2„c(n + 240, 0) = 30 - n * 2: c(n + 240, 1) = 30 - n * 2: c(n + 240, 2) = 30 - n * 2„NEXT n„'makes the colors appear„FOR n = 0 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„„DO UNTIL INKEY$ <> ""„FOR n = 1 TO 255: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„c(255, 0) = co(1, 0): c(255, 1) = co(1, 1): c(255, 2) = co(1, 2)„FOR n = 1 TO 254: FOR m = 0 TO 2: c(n, m) = co(n + 1, m): NEXT m: NEXT n„FOR n = 1 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„LOOP„Ryan White                     MULTI MORPH                    BIGFOOT@InfoAve.Net            09-21-96 (17:53)       QB, QBasic, PDS        89   2580     4XMORPH.BAS 'MultiMorph„'By Ryan White„'Feel free to change, to love, to marriage.  NO COMPUTER SEX THOUGH!!!!„'I MADE THIS PROGRAM TO EDIT AND ENJOY, BUT NOT TO HAVE SEX WITH!!!!„'I'm SeRiOuS!„„SCREEN 13„CLS„RANDOMIZE TIMER„DEFINT A-Z„DIM cn(255, 2), co(255, 2)„VIEW (0, 0)-(319, 199)„FOR x = 0 TO 63„OUT &H3C8, x: OUT &H3C9, x: OUT &H3C9, 0: OUT &H3C9, 0„OUT &H3C8, x + 64: OUT &H3C9, 0: OUT &H3C9, x: OUT &H3C9, 0„OUT &H3C8, x + 128: OUT &H3C9, 0: OUT &H3C9, 0: OUT &H3C9, x„OUT &H3C8, x + 192: OUT &H3C9, 63 - x: OUT &H3C9, 63 - x: OUT &H3C9, 0„NEXT x„„c = 0„FOR x = 0 TO 289 STEP 20: x2 = x + 20„FOR y = 0 TO 189 STEP 10: y2 = y + 10„FOR pnty = y TO y2„c = c + 1: IF c >= 64 THEN c = 0„LINE (x, pnty)-(x2, pnty), c„NEXT pnty„NEXT y„NEXT x„„c = 64„FOR n = 1 TO 10„x = INT(RND * 280) + 20„y = INT(RND * 160) + 20„r = INT(RND * 20) + 10„FOR m = 1 TO r„c = c + 1: IF c >= 64 THEN c = 0„FOR o = -1 TO 1„CIRCLE (x, y + o), m, 127 - c, , , 1„NEXT o„NEXT m„NEXT n„„c = 128„„FOR n = 1 TO 10„x = INT(RND * 299) + 1„y = INT(RND * 179) + 1„FOR r = 0 TO 20„c = c + 1: IF c >= 192 THEN c = 129„LINE (x - r, y - r)-(x + r, y + r), c, B„NEXT r„NEXT n„„c = 255    'we are going in reverse this time„x = 160: y = 100„FOR m = 1 TO 3500„PSET (x, y + 1), c„PSET (x, y), c„PSET (x, y - 1), c„PSET (x + 1, y + 1), c„PSET (x + 1, y), c„PSET (x + 1, y - 1), c„PSET (x - 1, y + 1), c„PSET (x - 1, y), c„PSET (x - 1, y - 1), c„c = c - 1: IF c <= 191 THEN c = 255„x = x + (INT((RND * 2) + 1) * 2 - 3)„y = y + (INT((RND * 2) + 1) * 2 - 3)„NEXT m„„DO UNTIL INKEY$ <> ""„'read color values„FOR n = 0 TO 255: OUT &H3C7, n: FOR m = 0 TO 2: co(n, m) = INP(&H3C9): NEXT m: NEXT n„'cycle last from first color„cn(63, 0) = co(1, 0): cn(63, 1) = co(1, 1): cn(63, 2) = co(1, 2)„cn(127, 0) = co(64, 0): cn(127, 1) = co(64, 1): cn(127, 2) = co(64, 2)„cn(191, 0) = co(128, 0): cn(191, 1) = co(128, 1): cn(191, 2) = co(128, 2)„cn(255, 0) = co(192, 0): cn(255, 1) = co(192, 1): cn(255, 2) = co(192, 2)„'cycle the rest  170 length -==>„FOR n = 0 TO 62: FOR m = 0 TO 2„IF n <> 0 THEN cn(n, m) = co(n + 1, m)  'red not ok  I have to limit it to 63 colors because„IF n = 0 THEN cn(1, m) = co(n + 1, m)   'if 0 is messed with, then the border of the monitor goes *ukie*„cn(n + 64, m) = co(n + 65, m)           'green ok„cn(n + 128, m) = co(n + 129, m)         'blue ok„cn(n + 192, m) = co(n + 193, m)         'yellow ok„NEXT m: NEXT n„'write color to screen„FOR n = 0 TO 255: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, cn(n, m): NEXT m: NEXT n„LOOP„Phillip Jay Cohen              OUTLINED FONTS                 cohennet@erols.com             09-29-96 (11:47)       QB, QBasic, PDS        128  6434     FONTS.BAS   „''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''              Phillip Jay Cohen's Outlined Font Routines:             ''''„''''                          Demo Program                                ''''„''''                                                                      ''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''  Everything appearing here in the main program is just demonstration ''''„'''' and won't be of any use to any of you (or at least I don't think so) ''''„'''' Besides, it's not hard to understand what's going on here, it's the  ''''„'''' actual routines that do most of the work. These are just calls, and  ''''„'''' a pretty border to keep us happy.  If you want to use these routines ''''„'''' you will somewhat need to understand how to call them.  Just run the ''''„'''' program to find out about the syntax and stuff, or if you are lazy,  ''''„'''' you can check directly in the code, but then you won't know how it   ''''„'''' looks.  The routines will only work in screen mode 13, as I am use-  ''''„'''' ing VGA video memory.  I will be very happy if you distribute these  ''''„'''' routines, and if you think they're useful or maybe you feel warm and ''''„'''' squooshy inside, then please  E-mail me and tell me.  My email is:   ''''„'''' cohennet@erols.com.  Thanks for taking time to read this. -- P.J.C.  ''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''„„DEFINT A-Z   'Not neccessary, but it couldn't hurt to speed things up a bit„„DECLARE SUB OFont (Text$, X, Y, Fore, Back)    'Main font routine„DECLARE SUB OCenter (Text$, Y, Fore, Back)     'Centering routine„DECLARE SUB PressAndClear ()                   'Waits for key press„„SCREEN 13    '320x200 VGA and MCGA screen mode„„             'None of the rest is important, it's just demonstration„LINE (1, 0)-(318, 0), 4„LINE (0, 1)-(0, 198), 4„LINE (1, 199)-(318, 199), 4„LINE (319, 1)-(319, 198), 4„LINE (1, 1)-(318, 198), 41, B„LINE (2, 2)-(317, 197), 42, B„LINE (3, 3)-(316, 196), 14, B„PAINT (4, 4), 25, 14„OCenter "PHILLIP JAY COHEN'S", 10, 2, 144„OFont "OUTLINED FONT", 60, 25, 43, 114„OFont "DEMO PROGRAM", 180, 25, 32, 1„OCenter "Syntax:", 50, 15, 8„OCenter "OFont Text$, X, Y, Fore, Back", 65, 40, 4„OFont "Where:", 10, 85, 9, 33„OFont "Text$ = The text to be printed", 70, 85, 11, 3„OCenter "X = The horizontal coordinate for the", 100, 35, 5„OCenter "upper-left hand corner of the text", 110, 35, 5„OFont "Y = The vertical coordinate for the", 10, 125, 42, 41„OCenter "upper-left hand corner of the text", 135, 42, 41„OCenter "Fore = The text's foreground color", 150, 13, 37„OCenter "Back = The text's background color", 165, 44, 6„OCenter "PRESS A KEY", 185, 15, 8„PressAndClear„OCenter "Also Including", 50, 15, 8„OFont "A centering routine,", 25, 65, 40, 4„OFont "which has the", 190, 65, 11, 3„OCenter "same syntax, except for the X argument", 75, 11, 3„OCenter "These routines only work in screen", 90, 35, 5„OCenter "mode 13, but have many advantages,", 100, 35, 5„OCenter "Including:", 115, 44, 6„OCenter "Outlining (obviously), placement at", 130, 42, 41„OCenter "exact coordinates (unlike PRINT),", 140, 42, 41„OCenter "avoid erasing the background, and", 150, 42, 41„OCenter "are relatively FAST for QBasic", 160, 42, 41„OCenter "MORE -->", 173, 13, 37„PressAndClear„OCenter "Please,", 50, 15, 8„OCenter "Feel free to distribute these routines", 65, 40, 4„OCenter "Try to give me credit when you use", 80, 11, 3„OCenter "them, if you can (I don't think that's", 90, 11, 3„OCenter "asking too much, do you?)", 100, 11, 3„OCenter "Unless you have a lot of programing", 115, 9, 33„OCenter "experience, don't try to understand", 125, 9, 33„OCenter "the OFont routine; you don't need to", 135, 9, 33„OCenter "know how the routine works to use it", 145, 9, 33„OCenter "For more info, you can contact me at:", 160, 35, 5„OCenter "cohennet@erols.com", 173, 44, 6„PressAndClear„SCREEN 0„WIDTH 80„END„„SUB OCenter (Text$, Y, Fore, Back)„OFont Text$, 160 - INT(LEN(Text$) * 4), Y, Fore, Back 'Call with appropriate„END SUB                                              'Starting X coordinate„„SUB OFont (Text$, X, Y, Fore, Back)„DEF SEG = &HFFA6                              'Stores masks for letters„FOR Letter = 1 TO LEN(Text$)                  'Does each letter„Address = (8 * ASC(MID$(Text$, Letter))) + 14 'Address for start of letter„FOR Height = 0 TO 7                       'Each letter is an 8x8 pixel matrix„Mask = PEEK(Address + Height) * 128   'Address for mask of each line of letter„LINE (X + Curntx + 1, Y + Height + 1)-(X + 9 + Curntx, Y + Height + 1), Fore, , Mask„NEXT„Curntx = Curntx + 8                   'Advances X axis by 8 for next letter„NEXT                                  'Continue to next letter„DEF SEG = &HA000                      'Change to video memory„IF Back > 0 THEN                      'Background color can't be color 0„FOR V = Y TO Y + 7                    'Again, they're 8x8 pixels„FOR H = X TO (LEN(Text$) * 8) - 1 + X 'Calculates length of text in pixels„PK0& = PEEK(H + V * 320&)             'Is point at H,V = to foreground color?„PK1& = PEEK(H + 1 + (V + 1) * 320&)   'Is point at H+1, V+1 = to foreground?„PK2& = PEEK(H + 1 + V * 320&)         'Is point at H+1, V = to foreground?„PT& = H + V * 320&                    'Video memory pointer„IF PK0& <> Fore THEN                  'If this is foreground, don't overlap it„IF PK1& = Fore OR PK2& = Fore THEN POKE PT&, Back    'Put pixel into memory„END IF„NEXT H     'Next horizontal„NEXT V     'Next vertical„END IF„DEF SEG    'Put us back where„END SUB    'We started„„SUB PressAndClear„Buffer = &H1A„DEF SEG = &H40„POKE Buffer, PEEK(Buffer + 2)    'Clear keyboard buffer„DEF SEG„DO: LOOP WHILE INKEY$ = ""       'Wait for key press„LINE (4, 45)-(315, 180), 25, BF  'Clear our working area„END SUB„„Ryan White                     MISCELLANEOUS GRAPHIC PROGRAMS BigFoot@InfoAve.Net            09-21-96 (00:00)       QB, QBasic, PDS        617  40662    BIGFOOT.BAS DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"BIGFOOT.ZIP",4^6:Z&=30250:?STRING$(50,177);„U"%up()%9%%%#-%*7[\F$g/UT/)%%%-1%%%6%I%%C4)<?TXM3<=C2<>ASh10B&h%*„U">Se'5M0H]xUxA%#MUrs?T=A9Gv2'9/&)k=4j018;Q#<)&QS?)87X-$q'.<B=,jO„U"oGD5Z7r_AeKc(j>7FZ[gqQgt^fsO$JlE[foW+;9GRtbKBkD;0a=hZYJ^AuJXC9P„U"tgDJGlPz0)8?)]Xb\'If&A%(\Srfa#Y\Ll*t(UPR4t1Qsj47[tD88U$n?]ZU(^c„U"^87_QhbsM/]6wG<DH'DB&=\c;.loo6z]NC%;y[JICR?,Zsh2$gb=up*(Q9??\'D„U"Cas+;*qeiV;y*q46B?BJeYU(2E:H1:(d?vDXm]_mr<Y#WDuuOylK.Io$APsn=3$„U"oRZEu9j>UT,w36xfZo*Y<Nq(xJK<DyK#Ct0,&-99>('Wu:yqjZeCVGS'dGEi&gq„U"-UpI]9PHd.t,Et/Sv.S%Q1A.$Pn.<lxvxCiEk)O1-',(=BYupT8(fu2]_i<?s8B„U"C)0>>Uuwe9hMRUHpQ:'',Pq_&%j$mXb1uPU&Itn8bV1u8qhhs*(rTI?->ODw$Y-„U"+JKLnzygdbw99jRXLjX[jMZV?\eXnlf1r=lg-N^Vu]:)RXA+UYwC+f'_A1tb<$9„U"Z>32QOO<wg#pCa/E&S=r4j1PE/Sikll7d0?7_7:u%3\]9J/1?tu?7-_0)Xk]-o&„U"ZzSdcR5/If]sHU-#f:UB%.l-Lb6R%GGi4<b(b5d?N:W+9p7;I\cU&9(qNhxjxC0„U"IC(uNS8wu4/&A:Pb2Qyq8,:.SU\LcKW<x\8h>lrP;5mR2vMqQ,WZ#VjHuS=Uf2'„U"W65=.ZDJ(&D6K\p&^9o3;Jk0Vu&?r*2ovVCFXCv86rB5:$\-Km*4O^dcgRr]5PC„U"$4)l+-qj=lJ7f<NFq\oF[JA/Omj%9;A9lgm\XiUxC,Z4Kr/;h+jQdhc9#Ar+z]t„U"a%,fI+sGU2IKmJV_S#o.PU%jB%2cF,i2xn_Hs9.hT')_o[P.+(7URJ\^^xu(+5B„U"f=+Nukf6'I#QM][/U36KtTq,tU<[uByYJZ7,qqy*iQed^j;U7vfR]dlIo707tN5„U"XVciGHT?DIvLu=P5q<ceY?gx5io-I0ft16N_$o]0eK(Hj8=Ej7f;$s\)^Q4$f/=„U"i7:$C)c3MMcM/g4Q0eq=S7SZIC'/y63,&/QM5g>x1#RZ,K8k6A#/))HLP.oHXK.„U"Yw24I$0_I:l'PFH#CQsb3*wBs2c-Q<4Fy47>Dh:zAMk;Uf.Te),W:F?GQX.8J30„U".2ELL.4Dmd[Y-1JkpO(h0&#SI*I/rtK8bic*=jxs2.kD_O+q(RSnYqG/c=EwJlS„U"r+_ju+Agr%;+PK,-;-OD*YQjK-m*9ahFmyWpPtv9U(p7^I-%/UQ(oLO))I1pzO3„U";]p-Mei>VtAEojc#<./p4mnM3;BdWUpA8AQ#Qp6r2:eI<0vGnsy8;6CxnV>om4X„U"aEjGgr,yu%u%p()9%%%%-.%/2[aF.g2(OD(%%%m.%%%5%%L%C4<A?TYGM<>A?J7„U"S10DB\z*,>So58Ml[dM[yyg<Me5pA?UO$cSMvJ\p5Jm0skk2n'&hJoSni8QhEIL„U"ATKJ$Ra$phq>5p_][_-_o9+VGl>euT0rA+so$pqafukIss:;Q[$<p25&>hM0?3T„U"rcg2MO^?SYoB5:9K#bghHxDA#2J_gO0DU*GaD$j<.h'71Sk=[e#utkuoBM<miEo„U"iC5Ls<Mp(#=XcIpN'LP>p.H#F?W%k,%AHQ$E1CuV+a8=gLs]-,i<lc0UQRPWYg9„U"mLHjQ#Dre:9K%u2w2e$)km^>.x9\YLQ6MEGC7MIr=Dufmljt)B)EuQ5jUA5LHs%„U"OWOVuWVm7#7jZXNLJ_b(4/h%Y4AHiFCMaVb9;xZ*'$nBZ)0Bitua%1F/-N[ur0F„U":T9S:u'N8M%h;7naLH+#2GILV0DpssInQ;V?LBH5bqI+sD2uO8T7$l\JZO#/;WK„U"&uqkGCfYoG,Q%t3y.<1J-C4A(yE-?v7G*E&v2fqFkI+o^JN6;CUtpK:NG^Cf9i$„U"PJ;)7w'OWbYP5>5o=bu2XOC8(J_k$e$<S)>[n5VW0\9/Om%zjV/(ob$^RwjrS6E„U"0\xhk#S;2xw$gP4$.TckHLcke^c5bsRTm4MC\%ZBthdFQ;2*S2&<)U*t^9i4sX^„U"IRzb)>uZO:3O>Ql^CUlLj.i0dRK]eV\>3Dlm7za$5t0Xw:L9KtMa96Qk(>p3zT]„U"3EUG1R*U2KOq0#[YrVPrVF4b:/vdUa?/r[mcm;QUX/Q'aj9gdUN:Ls_?M**Zc*^„U"2a(7v;n&Z6^+E<4:fLz+-#'bFeSrg%^;I$RL7Uczj(k\H:uW;^H9bxiv^WA6.;4„U"m99'A-<=&EslO,Qr5CtF*%S/7Z&(0WAdb-9361bTQ[U<F</G-/v#?KGbl;;pC>\„U"MufYA>5S4:+.SS0Hj)lP#aHYqU#fQx_[4%xQ$%mU'VS<-ZOw9NsrjhJ1^J?P;EN„U"2G[9pnF^F$cAI]JbOZHWhia;/o$MHVQy&W%Z4dBcsM_Zps-bV#c[7$'tmY-]jF7„U"jL3z*2MWj&35pXu3uI:J3IzKM#rYU\>s1XU?cV[/dYQwxd20NIZ-A=EpPn.FH:=„U"dzdM:54*):nmX.6-/Drr0%bJE0Ij3P:/V'+Jq'x&up%()9%%%%-%%)q]Fpi^P*'„U"u*%%&s<%%%6%%%MC4<?ITg;3M?825JGS10PB^'<+tTm5]wCNxq0c;Z'-sST%eNO„U"y/P=WS]=v7'rPM,juOjN*u2.L?QusjLhZ.p-E[sxZsu5tecGea,l,\(h8ljO<u[„U"9M4R*P9vE^RD)U3pfIG<hQP_(1*i>Mb>)W-BlI[_[;?'qh8,B(n9PFj<ZYj6#Z2„U"7a.w32bEj.^tr;E'6MK9(cHc&pTQDJ4jh;c6q,L[PgdWq_Ocp;7ZQJ7_Wf)1.r5„U"$=6NM:hE\Kag7>U8^:(f=F$n+T)?uTI4/8)inuB'OMN:CxGBSccjAH^cH=:K4J)„U"7TFo+GMng9c+wB3+NigN#*ptnzZwIJViC'&H&z2n&Ze+p[CZ,*cBao_=$z+F/8U„U"L00P6l1,:vUOR3tSX)jKrOJ(orchOVr;S9gfE,=b6A&,L[nF0lw2(*nn&TtB7)c„U"Dw7sy9/80'e(5EW0u9?;cJZQE(?;a-U\68Rh^C*R3C7OrZs<ZTF-<lN_S-(\lsx„U"Z)KojjQMqq*1-$D,[#*4S5BAV+xHne2iztxUops?Y/F#ULVd18/soo5Jn4:$hEv„U"#mph0=.u]\j#-ni]u?wY4Tp$KH8;f/Or+agwt;>2.5qyf_;JSM5J'42Z6prp4:\„U"']evXFV/;<J1LTfE>;Y.)_O?s5%PESj*uEfNdN&6<_gpD<i]01Yh91bMLa_OoDo„U",X'd.X-jP'[)9piRkCQVrr;g;wK02oj0;_=60)\Tj^^Od(DoJ1r+0OabPP<L'&+„U">8Vlv)n'>B=Pv'6\_Sthd3rH'6n8M096kC7XI()qK1^nD)NOYND.dMALJq9oG^P„U"AOl]ZGLGh=4.CAt.>#bF<D4[J/EViQ>/IsMdGVJEt#M%P1A5]HO\#0]o;DJ2h6l„U"JOPxP_Y=H/&T)7?^Vf)fXc:6c'=q/=0[Ygg_+q>0HS3?Wd:J3hlI&\0EBJ\rBgF„U"PUAa9)2BFKp>FpkZrqrlICFVYKPWdP=^Q7(%B4r]/kwGZ4Tb3Zq*.6]1&TZZ)PE„U"Go./8(c?rWA2F;ix*1hQkV2knV$j0,Z#+Y/*0ua4f#NFymg3ug$X9N[0OSm5#0g„U"B;Xs5<8N7:3Cq:iIUa.FJ*oVjj#Tg[fe.K2><[2s_aRttFG\UgjffH.R><(4lpj„U"8p-3zLE&'D[gP[i-:C.LbkH1-i)rzxYIfv7611QHQem?.6G#B[8^.*5i*L:R2/v„U"*+b^;6<(yT;[h[Od#Q%_\eZ=pR[^[eg&t%dmm%9?_<fZLgD97j%F9UY8W$?2^Eo„U"[8&\[m(>ufw:-/T*?:DJuXeER?xCZSDq5n%n'bq7dfe*>:K?NlM:q#M1U0L/Nbg„U"1DF]fiipM8>VqG8P$(%58e2K(;%Epu6?OipQ\DOAsmb:t0e-(8Q/6xN?07^C#tU„U"N(V2K=mtsSLUuk'f*($^BphhwRZ^Tlop_ed5f?4'-\3jn,t*?%W<uaqqxOVkh9_„U"M(T>>;HTPW.B:&va]TO*JaQ;DPgG\TAY0Cci>,$>6Q().Kj>=)=.22o6AvxOXF>„U".dMA4d_Dj%gKnU%7(R7Oi%Q>MrdOurA6f,qQb]]:YSeG&7AD;s5m?#I'NPzREOJ„U"HmsvK:A-/R:(k>XT5<J#IOE#:qGO7]g1Wg]EzF:pV&/;]jS#hYz5pq_zZ'fDZT<„U"UaA>QE?b&]X'A=WHDebXSkN[_p[AyfRI$kwYcQrY$1+6A[#[,hm5.0yAsT3l&a)„U"I0jDia/.ECj5mG4;Kmse8Lb.CMH=^*Gz.jGo0>_Z?4:RF7qSUB1JG=Ngi3#8t(_„U")J3MU[uC=grd?-nH#ieVBF(^D]t:e_ngY,1f8o]Z7GYFVgYf2a1td29WP%Cdf^=„U"i_%=ch%Ot$+#ELIw]XNW/m<w\hVrhc%Vj;R(EgRft+g;H1rt$v/-T&^4L9rGHwV„U"j0*5)-^c?0)=,#$,YHq[AD;Lq'1P9:Ya3tW4h5IiOjXK'oa\8PtfNGjXB;]'8up„U"(%)9%%[%-%?#p]F0NhXwY#-%%n%<%%6#%%%C24<?T1l85WM1B0ELS10BW>'t>][„U"m7wUBXxpB=j8gdFQ_E(qQK^Ej?7C(1?eS3B8DwR(B)12;3jIWe.8.tDtJ_r*F3v„U"b0&M*i4zydQjNrBYIP6<V\jxydqj_H>l//Y0S/fC_fEMjXbifTff/Vg0e<Aa(Vf„U"cr009GP6b2aaDf;\c97P</'vBtcp,uBKU37fJp0.%a6Vl.(5Ae&n/Q[zo\tgXH_„U"LbcQn7P>+agmMe9)qZwnS&6\=\Rq.RO5NCo0ph6KE0KIme0aj\1$WYeRb)B5d$>„U"n<1BOJbgrw3ocPUqJ=%$Ant-R-ae5nF8ZH4I,5Zk]iGe%)U/cI(pu>I85rI-f$R„U"TlLRrm'SZ'-oQ4uGp+R)r^ZT$pAgLQ41u^--.DF5Z/?JJTGZADRP\['=7I-OTM8„U"6RRuRT%OF<,.Gg[=-oG5m+^0Zn'W5)47(a:/4c_])]kh7u47+/b6mN4^jI(ju<<„U"hPZS8%TfKxXhnGSufWGkFk&2Sdg9b+/,3xH)TYeA]o&t,:g6#l-.hQ%*kjeZvZ>„U"-S,JlT3#_gY4#;'p[UDmiwZ_t,6*(A/8FUgA'w&'\8%nA/?+6P3:GQj>S6;&4zT„U"tRp1*]-NgZlC;\D)3-_pBfST*:LIpoq[]vY\uoA+sCyz\woV#\tZWcnwZI*v.6W„U"bB*TGT]BZVwi0:gT4MF7*_d_1.jJ5D/tX%a\ye[5t7s8M9\Nfda&%SJQY?,&kIz„U"B]aw3SIgP9GZ7uP\r+b_TRZZ/l&VS7=$O:]=j:SP.P^FRMimcx2)u><EN9ZnChc„U"s('*Es-h't0:CARFcW:H0R%62CK/;tBq2Nz:c;>\Q819_0MI8CuD2p0dKg(yNv$„U"S/ssqCNWw%3P#o9O/tZNWVl^Yrg=QTEW:0:ju4O1Zw>b^r7:v5DnH?ss7]U/]tL„U"8BG+nY)Do.f>HpZ';Fp,>Q/=_3uFS6:oQo-hV;erkQNh7[rUEt)?feX-K:vkCf3„U"d8aTD<trnGv6sS)OLG3l1K2+[Z]9Q,P3FP88S'1Q-ey)t2I$t]pGs%^[oGKC-2j„U"PDu6Zkst5tRC'dUK>%3t8Yck>r^%+XQ2Yc8-a6pdri-c>5)&cSgdqE/E6HgW(8>„U"F#dJ4X+MeA-uY\dDdWi.NPISw&:o:*#QEY)Ru*WjQLfnp4N<E*&>i4?D*969ggo„U"K9?;EhaPJ;/zCM#rXO;GF?)G?R3,kF,%mE.qhqj#2O6RWcJ<?1Rl$M_0vsxpFpj„U"+1h-zZY[\oX4:AT+VHzT>_]m:Ak:rkYIqP_Im/23,(K'SxtcW0ETm(b]W/Gr,19„U"7A4+f<6H>xIpun^mhaDkV%To/yC=U0Tl3]CzPH&'>U/rh3QSVA:f>q%<Hj]uEw6„U"n'9Me5FaJ.U.-\;*jUvcS+x-&Vz.+tjmj[)a+.5-tT',PsIo/ROQ/yigVvT+d#:„U"W2<=Z6k'dnq'_^xfE-CW#4Vj<dsVg)ihfGpuB=h1+XRuN2:#[TND?'b[glBM:u8„U"'tV.N>K%>P;>In,nhukm;a1(6'p][(>FQ/-0dYOmo1UO06byoG6)8g7+.<iFvCG„U"s&PYA1$bpdb]oY=l(^-V6iiSIZnVKXl-WCxtN3Z?haFKprNUbtq,w>%0s.f,WDG„U"]\md8F(4bcPG183'W;*g8mmKl^Yy*\0ie#&e%&J1Bs#<$HG6LXxos<]K4e*+XEe„U"i9v7nN))N^sh2?P9^3WuAcBNKGdhv)\qM4?9Jg3.SkH&<#d-4;;p<p6EP7LpdgR„U"6lirD;xLKd]_kROi'A3MGU>n[<u2wwgo8wXYq]0qo-\%$139'[0*bF6k[Q\HpvM„U"5.=J-rUl7K++<b.MZqO)H\ZI=n6sN.X3ojuJQ3<Wovtub9V,,mshNau1N-xD-en„U"FVKYdrlc:hUpqx(CpMRf[WH=$s=]=EEHCigXhMtZ1t??rK-doROM1uwe<GY$ZsU„U"O''?IxKo>RpT(58'L<>t2kPI7]]M1[Z2'4Xi(/eM3r9As]CIPbc'gCri(%LIV;1„U"+ilD9:'$;[8(=SDiKX%+Ze)nRAMU)qncAu<-;C<2V_AClM42'L)7OP..%>&&[Jg„U"PDog>\'9IhT\doNy$XDd(uni9;N^bD:nOrcMDe5yqbVCY_P#sm=k6NN8N'Oa^CM„U"eAld8aJ[LdzSEd#crWX2hifGne('\t6#AE)vycKn#1vegO[L5?ho%i3#jr]Q]$w„U"e*J'>nFNvn,0rnl;O2)V4udw-,D51zBfvJ?F,A#:Q52shS&7z?t0%FlBli<NL.Z„U".X]?Ynx\?:qJ:5BH#.*ON5S42X]e1cY(q7A(rUnyGie[7Df6dvVbPAR-Wd'6n/I„U"Q0ussHw99#0='M7u3dmnTYvusd:]MtM[=K_oUATw27<v/7#*IE1sI)_34D?HW3D„U"=Q4%2Wd]cvaEL%>0WGfEm'-Q6SYU9'2nT[KRo/$ZH=B:rK-^?)&qfR=z+QW]007„U"0L=(az3('gR&j$g=_(LdX8hju*$H*?N,S8/9\#v=sb+Y59,ulqfZVbq=^)'a.d>„U";eZ(S$5i)eF6%hVzDzGII_h%;4)ze2R$8jHQ?gQNm4HGZ\XaF]BP#AqU&nkPB-v„U"EoU;a1WgdKo.G[ZU9uDeQHO;z6;:orQ2nh-vS85uP+rjCNs-QF=8CF8Bp<<x.-m„U"Vx\Lb)&obFNw;+oUXyibSg76KqX<KVT]5B(tq3WX:bjDoUWC>m'XXK2eP^1X.=(„U"G[^8ET;i?k=q?;5LJ.I$F$u<q6bDm&rw<>X(+_8PfS\3vXn]WBFlbxi#t[E1#Bl„U"x*9U%tykaZ-qXJ'8(up%()9%%%%-%%Up]F=erW.%l1%%&EQ%%%5%%%MC4<?ITl8„U"5M<0GGLS10BT^?v>TSokF4IwV68f[Ig)]^YrLubvS.].I)g]o9limCa:G]j*;$G„U"g+sZPXEMhGF<L$_IbV9bb0/ldRhRurSRRn,DWsY^)k6fjKA:YB\Q\VYT<zLB[EE„U"U%n_M?e[tE]kbd)m<UV:p_+3Y\;A<;=%[20&P#DFms<_'lv>.ei9D_C20LpIu5f„U"W9O<XLE+H)(,&5[W.[\Vat]jAVv=Z*)'dAC5ZDAX]:*iR])gdUTxc];SUW9B1(4„U"]YS1'2#DSd;UjTqPVkqJ$$Z#pYFFqPV:[bjasP8)mBYdWiyi^0F_Uzu]'PY3K?Y„U":TC#9IdCcRF?X9lD7n/)8'w$S,%wgAWe$v&),nfB6[BBB*$J&0P>-4)/\#M$Q5P„U"8+jG7.E59US(_'mh(at=AgAPVw,*tlW^A>Qj#P$kSDt8^$]AH=*24itoa:P_?lT„U"/ZU)hnH52(*CdO1<5WxsO<qjq>2ADUP)Fpk0cgrEdt\[5G/*gni6[p\dTvd^a+x„U"itpmy)m&Rm[aiRg52h<QnD:T#UWTugu54p$o/U>:'6V$Zwh9tv?O>7aNKeED$Ft„U"&m<E)F-zV4+\&NN5N=;=1L%r1B[y1HHA2A?9L>kse^8dfgb[hH)x?g:JihsAsVi„U"ble:jUmInTLTSxR5r[fHcTn/PpGKE+*Q#f1pYBRdtNetjZ&DP$.[eOuD#/Z8olt„U"<XZGz99OIy]MV/+4jDnY??>a18D$-<US2E:kR-2gZNmdf;.CB/nqujg+'1[Bq+)„U"2]xh)g:^sI$T1A5OhO0c<-u5j0a\R6b;ZAcAOA5'%Q1csQYn,zcl7/TU[rS%:5p„U"TDJe.K%J8Xu('YY(Qs;sO$:.;^e7$^InF0?8:=-#X<jESu?ljKOb%[ZM(rYn0I&„U"7(SgHQ5]Vhb2gUM(L]MTKw\kr+#]T/(:VYS-blDf3z9Z[wh_f1)3vPHCsuvp_&.„U"oZXN.u5Cv?SqLpm^qO>aEiv;Q5R1mP,q8;n(:Nfj*WfuTn<94f\:CXs1c#Wf*EY„U"_]]D?]hUo;du^OP6Kt)f1&zY#1T)\+2k#F$/m$<XRM^1B3E$h]r&mqigW?.\$X6„U"e*Ls'>I*9-CulWp^^3/H>OeAFO+]z5%SYV#]M1RlKNX.v3(S(>[F/e_MXEX_=6L„U"4vr(:sJfQHC9I#]8%pYz_:u8_<RLUw>>mU=;#<wsThW%.&VI()foqcAjH%N%W.1„U"FFE5D2ex3_ZT^$Pz<hD')re13x)R#[mhin2gGko]-I\HMSB=-Yc^_8'UmnsgJ)a„U"TNMSB=fLjeTXy\/>\-o:K[eT4As=_FImA,g&/$5pXT+u;I+zwT;:cD(L2F?YTFr„U"mpv%\KaG/q5hSNeHX5'0-C..l=uOYc)=zeKONP_Bfoq2tBSjjt&%4-11Mzd>*j9„U">[m<*EKAP\6h%-tJCxGq&?1wg=*ws1V>])-3#0UH0C_tFkzjxuhMAFIc=e8=PM)„U"#^d5JA)cW*n'uGYwwi+NLIR+FVvf2B23>-1i6Vwurtgiu/k*Q+6S11*4HhVDCt-„U"\B-pJnOc][o:C.(QD5&NwHZ?pS*?oJJ/L+9%vwl_N*c',nJWbKWa9>ARra]cfRx„U"KF$pD2C)et$*q?g$;Z?*-AnVY?op91YT(6;\cw0PUWqKjr(UoBnMH\7dmHc]<Gc„U"/Rfb2a2sB0z=UN1,*VP^FAr7vvYt>0mM.&l)6lT5fWg6QJrPNPDy'mkjgKq]m=w„U"/?#BNM7>sDJS)i1fEz$>*MLI+?-6;2'Y/BeN4xAVQhhuw7QaL+9F4OcS]rmid?l„U"s0Sp'?OMD:\AK-mIC[j)u%m4Wj5h>:u>L^<bBkjiF)'Te8O>TW9^<(UDG(4UaMk„U"WayT]8AbININ8WA'Q&Jpo<1.RK-'Q(CIY6e?<Ls'W;6Mc[5D[.K8G4F0UH3JOvU„U"T5/;47u?o[,*GffC.5WoMW5D\zsBfmthj4VhXK2a4P+C?I<9J/_V/]bV^hJf#^)„U"WEsF?Fx$K115<K1gvH(vWZZ(rRq\D*7vzW3pGd3fW,+[]S[u1:5ui:JsJJh_s36„U"Zji+21Bcd+_>ozJ[zCCiMqR;k(wjeq_kB]_edFVJ;2LgsjeK(6T*J^=0.wgg;R^„U":x#5c,Ok0h1)TKNB=tt5;Q>oR3\8Jj2CnsAL_Jxiw7G&E-8kR/'T>9rOHTYX_Z=„U"MObC:W_Hbs\i[2bP=f>N;6ZHY$,:'Cm?DGW#ReGLmggILVzX?mVAW*GR<=?Ji$g„U"BX<ZE-SWgJ-W&dX8<F'QX_fT7\MBA[brF-(J0Zx+t:u:wcb]V:7;lu[2L<yT:Ul„U";7ZV8XBG[U;%N9BOG#:d)#^/,rk&Wa&Jb)/0SL$nx^o683_9nb?=9m5)poJ%8Wd„U"&\2v$\wSB,t'1k\nD\YcV-p2m:)Jr_p1L/7N+1Fju1%FCOPbBm:J#(gMbs(NSlQ„U"l\S%#);PV*DZ?V(hSZdnsm,(#hzZT,M\tA0GtM4M3tB/V\\kI^AUjNXF(F4ChyL„U"ay7Ta/u3#pW#Cr?KdoR%Mx:w2xd*2LI;kl6ZsvWO2/>ASu^0ltg_E'g]Ptp*F(Q„U"65C#j=Hm]lPt]*Xn+_Oc\Bd]^)LIR;3+iL4KL'*T<R'=s*&FFEKj^fnYL(TOg2a„U"R.R,of=02_yq[oBM%M)]i*>&4&v<P$)3mHjE3IQ1e:xs9,$0E^6z\4/ZIkM+ULp„U"?EH?9#N?3v<1GInu,xAGecVz%h%gRlN2kj+IqIIcY?K%(_ks7LFJ(-aXALJbOwK„U"G4BRlle)p>gvfRtFVVmdAG]*\3b0RPtMdP*fC&NMPbNC7qOuF$FPAv9q^7zsndL„U".&b)\5Uhnd?t7k7]L#3EXbZ#hXl2ngDl/m3i[hV8+7dD%%\2LeJg-q7qGDe*G^O„U"6:a8]bjv(4E)sh#f-3)<n)QsJd^nxD)5YQr&mb.W2,9_3jt^C9+fn+&\V+C6;Bt„U";QdGT.)wIFL:iYyV'#plC,)4b9_83m1\7Pv3#[(2rIQGt00<X;%-m9[s+2UH:k#„U"qS5K\GtF*oD\zOzUq:+R.qYQQ&wy4w3*Rv,g>_ucdkju6b3e^/2I%6'YlD*t$Zh„U"]%H,:pfN\CDfgf;A=MuPGkYRQ[WR2(*hADP<#P^p[tLqiz0W3eSI^.eS4?SC\)N„U"5o9u)'_S8X07ke=OvmqgUA<$1/6q#'2341L;MBjgaO*H8SoQQ6RnmP?=XN[MfrZ„U"k)se>^&\S)dGttpssuQSa.n8rbLfMr<\o2va#ny6\]0wL7ki]pMO7JHN)I;oP+n„U"JJR\nvk27eT*TT-'Ukj.b\)h%v:/6IpC.Lo9>vgNnxgL.yViYkq%_GuLMlYSNMh„U"pbQjC<[&SEh5&Q6+&G<_GoAC*u6qor\J<Bcq/&8U7u,-+dY^7FE8'W>XD?v*tDt„U"i&;J+7x*;9xA\M<0<dV_p5u&;';9oW]8Q2j7_mR^&53AorheXr?U#q4kg>.k97X„U"#fVyohFBdfLk0VqJUCm>t#Tpf5<P-Y3:C>O'Im)]k;VCrSl4JFf2s6:jt4wV*s>„U")sw?Y+fJaL#&b<>AM.A8VF.&QPWq,#Xd]^/RHt]Yfio&s^$^b?pChaWTqjBag#8„U"_ZuPqThC>;NVoTm;gKJFw-IK2r1v>%WKTEr$j+_jn#4<j;76'JO;>n(5,'^[^Pl„U"NwTlS]lmzpF[FxMFY#h&':#L7Q'#oW/I/=^7G$7tNH=#2<v66XJ5=mY=)H1XP56„U"NgL$2x:FrboF<?m3X\5=AiHhV>vrmePG-X5XCfDT8Q(1?<[_(qz(O\WX4fi5ZOt„U"(=7(;1*uU+'#:%l3[?*WKil>A#AG&^k2$/&:3p3Q''^zM?iWHcv'/TXbdB'bMFH„U"__Ti2W2n4-USamFZ$Ag<J1D9-mD,:o&Ji<$i.<1R(k-'BGAF9Ti4<b>Nt-w&WQ0„U"%b$a[2gPq0-oK5(M0TsQ6m(Q?-r5Z*qay,\)CDiUFN,t/K60[k^xiD6KEw_1Xck„U"LU]#-ukV:TYnsVPl]oB7p$_Uwa48$I+ArTu%p()9%%%%-+%F.[CFg*A+;]&%+%p„U"'%%%4%%L%C4<J?T8<M064BLS10BS\vJ=BSe5K60]N=2qyU9du1<N&oKz/(k'*$p„U"W]K_'fU0cb0XFtq+?87DJsw.tB/eVl4RhR#bT69AzpA425iYu\Y(z'N\L>$9-gZ„U"^)fU]4Q6XSi:mpOJfZIxS2EGp[<F=P&'(*zygho_.J09Eqqqpd1ask5F9[zq7.E„U"2&f*;;4/1w4QF,h^W^hsx0-TS\%1M3E_944VgFBlKyY0c%b82a75^U=86C#Q8[)„U"Ev$'u4GdBNHp2v+QFj[cH&]m/5zpJnZuLu)iXzbAM.n+'[2v9&_<2JS72Fmos;J„U"ATRHzXg3ZhY'c2YFe.?*m>+/&45VUll#AK=3VIM)F=qA%0RCNf*,G//>0.SBcyN„U"PL;Yeugzr4h&l>oLZc+*Bg7:CB8PTsNSDu-OLI-aGqHPnhSP'RX0_0kc[0i9[_l„U"]GP;B=>_?id#r5dt,G8=tl8mpwk60kZ7?Dj&o\\eW%q5*d7xMP^jXrG=##R,rHj„U"f)h_d2<*Tda'R49VBDk<(^EbDev?b;w)Z;krt$3qn$S?Qv8O[4(D3hQ^Y(J&Oy.„U"jJG+NZ^'3,>J#P=]nQrHdk=/UhR6\3q]DJ7j64[\#laj8]1i=vp-M6<NPJ+,<R$„U"w*%up()%9%%%#-%XHRZFBV<j]c).%%/4%%%2%I%%C4D<?T:2A03SM10BTkfFASd„U"m5OhFyj3<0eO?;52\nrbeQsR?uQ=QA1f=63PxY11(7Rk8'?[Jr.f5;5mlBq7S^^„U"n]k-n^U:AD0B4JIU2PltMsI3$dZgbb$buLrHNcPg]qhfD^d%S;W3,/3d,6iAZV(„U"?r7U/]N22?R&+]70za\)AK5K#a.'o5,/AmJ8bLINYvwfa1<:iiNT*a6mb?=e1IB„U"V)K9Omk$EpcZG;<4>Pi1a+E<%4,%60r8OWIbJPB2nm4r&]u&]'Z#9_QM#nTsI$6„U"*,WP#Im;nTji&o?QYa+cl)o8)3]Db?w3Q>d*,Se2VW:FrQa2zZA1>:AIznjK1CG„U"g#M(sh_9MMlG?6Lr65;%VhvC\38QY6'$'HC=*(eM,4[AXfg#m+$iQ,56E.U4tqp„U"5+NC#R%4J._5e#<cIE>6F7\[l&RokVSX._]spzSn-d4$sWNT,**4ht^Li7OmDXN„U"B&1r,+'<7s[sK48>)P,hayp'_^aeKB&X[kiJSu^fo\cJ?vMaWB>;hNJ9n1,eq%<„END SUB„SUB V2„U"At5n\/Ia5\7CXk/n$iKhgjI^nBUgIa++el(a=#7Y*g,F7$Lok,GYlqhahT,u=[0„U"_JF0JaR8kx[k+qYog2'eg7Rq%DtS1H>(fJ9oZdvB%k1wDUZVfTC=[EAVD4(8Z:9„U"Ev/lgW3S^>XeUEU^yebigEQn(1?4d(%u0(LKQW'?8H3'9Uc'YH3=g4pyS1T2w'k„U"MGIRI'?\*d0BHB4(H_RKiX#Ke79v^NXnIHDr8+/$f[uWv&X\SAe'BYz-cmf6\8e„U"8g^qS?lQdSTs+9ID*2(qL(0MQ=pQ;Z=-rf[t))VmnNU7T/Bi'BmKs-18&lXu&\i„U"CE'X[X+-d5f.+P_'i=w=bK.grbR\H18N%_^:?v8l')X065qdICK0hz+%P<rMtm-„U"CI5uX\1+>TqK:g(c)4r;[m3vbIME\$EC+e8df#cKt4EkZoM9:)u<;(cBhndaMqs„U"QB]XAjO_blAe=EVe4ojVYMLG?&A]$2dKvF<H3kqaJHY]]2qcV0sh4Hn$qh>/Czu„U"dGxeL\cX#WrS,J8:NAZTWqfenbuk3GPnuK,(szm.?cd(W2kL6L&c;*q_<p27S]l„U"dyq>V?,FMbht)lEa9*4F,>zZmf+&kKwuxeslgfq'RYv#itOK+XsaB+awa;+#xr[„U"_Mz?80NqxN_b.zkhzU;BE]Uo=&7mxKUdz]6j2ReB8&Oroph-C]ln/YGgIzf'Z,A„U"'qY&ilQr4ar\ht<A%BTKt3io\Y7ZJEqFMhKxaRTZ]i^qMyBS^?k$^qMuB%4?WTe„U"bzd%>9AV*nA>N*;JZe/8'lhT$IfpiDtUb_'RJyl-w5eSMTKxZcqwG4='OJ4^9I:„U"'i\N(AcPNw7T'Ye]lE7&JTp?kh+iCuYAMLCh;bL]y.D^\4&_nune'jedIJ-^9QB„U"=h0O?YZ3LGhWI+&5(_1=ihKj35V&W<5ATAli\hV7eFEs8HiMm>)$CGonnF5[G+<„U"/C*sY#Uo_M?wHJYA]$zX?G1Q;CU6QulQ<u_72(n)ISL(0jV.BXb#<FtGnjJ;1BQ„U"m9iX:G)-#uuqd4FTWW%$vQ20ZFlXRA2Tcpv.#ctLN45hK(CdXlhs%<up(%)9%%#„U"%-%_B-UFw^^UvA['%%<%-%%6#%%%C24<?TLq8=42;0EVLS10BK.z,>Aje5KFl[d„U"[;qy/#Yv[GOE:9Pt%3vu.&'[vd#CG6f1K%<Qm>wBxi7J67+FfxGOpZ5hZ2264PF„U"Y<a:=-mLpwd:$:He#M6:PvrF;L_KiSsoXi<BUeaN?hu]1n[B<\Jsxd:z(FVf]\R„U"dry4go&y^C<2Ev5\f<daZR6>I0A221dc?26^Tm*j^_'G:(l7-(RU(9/(CG)S%Sb„U"L1sB116E5Ay4mbq?IOkm9QPFI6_^%:(5[)I*$;/5GX4LklA&1L-<^ZIC['FuFY'„U"ZBF&/d;GB/d?)f-N&3z[e:z)n'bM]VjIB>[#;FOAc;ubD>8^.+PW6m7X*5C<cuJ„U"[KT7E$0>.>p*Q4;pp0[jSfvz&:/Y992>wF_j^+DHXW%aY%LlQ*,L.,>nmegVtMb„U"?j<AEwMp#x'Y)[[Jq&;c7P6;ji.q(yd\Z[$\N*]_zW4D*U725\VGHWOcY)B0AJ%„U"(AuJFA2R.-V%3pD*Wjz.;fD>pFJ6m;uH?3oo+N6A&?:x:-Xr;G&x\;K#?0Zk:>Q„U"45D>>KB#_qWR5Wh_\^C-jfijx$e[kXm.5,wnys,ppp+m\x0t+h0t1hY;TG&vrzq„U"42;%%>;PLN=xF\dfrA1Qm(SHf<=Xd;yEt<?N/whg;%FJTh=Muo,r->5e3JO.ABT„U"IGD^%FPMaI_,:T_*e]gt,fn9zI/(uey1*:Q<PPQiK7ANlQZXR6e=VC$2UrQ.3=$„U"WCNF'UU:%FwOtAB9xp'3$T-F;2r0qz8-)nHv0BTl16;Zlu.;uOu2w=<$t#kKqS,„U"IX?2VJL;4#D)z:i;dgLuhLW$g,qf[c&[6Jd]jPo,]qE+b]Dj$fLR)itB+y.Acv>„U"uOn>tV_NL&M4:i0[vAKl74F:COc_&w=MLR2I^5dKXUpJAVxX26?FV(+>.%up()%„U"9%%%#-%697\FB):?PR'7%%=-%%%6%I%%C4)<?TuM82B22A>;Sh10BFb%ZwSRe5w„U"NgXHV(0/Bokd#5;dKM_91<DW9eYkOwZV?iM__BahAa#nV4)FX-=H=/Xlr_g2TNV„U">F><pe4RT2c#<#UeWWmj=kq*Y6c1\%_oJFp6-.KveAq;jg=g&Amdm#E*7.1q_W6„U"7<6PXU.qd<B5TzO1KM[8^n'V7BoJ'X_XfE[,mUKxu/9=p=I8\V#wVK(^iOes+)U„U"+-KJ<#k/io'/=hqWB/&SVf';,W(KZY7T=suv*tL9R=HlnU'?x1$]/<y:+:$=n2%„U"[B+H3er5>4QFf2>RRFXX:rdAl,feD+?l+ok-:*M%O:8(gV]32b0JWFPubtip2EK„U"b%FG$z]1BYA/=+\OT=x_Ih<j[fBO9[,q5fdhCc/PBpjA+2O)Qx/d8zR.)l>SGkR„U"nk7HTb^Wc3:ElRBx[BchCq?1AW?aPif9yorb$I6?f/M=2Of$aSC>A#y;MmUqqv3„U"DQkEx]:cP5P4;y;lbmgReerl.Fa.H>d_J^4d$OqEYtV:H<T</Mnox$[d:cM;???„U"LNAjR\pl,*V_oB(lLac-#pR0BckPe.VDl2fmd&_X:xZ<lvjjurGAV#zRE^uu8D3„U"[tOq&_Rg86$aS%SlsP/FsT[gc:MnecZZPV_]tONP'xfQd-c^2FOJ0yuftS6YXaM„U"yN4*c8I6hIfjFvxeOhp_+Ua:Epqz\up/+*:RoqD;xk/p:#(HCbDFjMW):ny.>23„U"]w<QYdZOLJq-78N.+%OSUKp3;y'0p:5;;[iSNEVX%]LmFhdZn%6oBghLSvnZ7I.„U"mZP)rb1D<pKm/lveu:Tx$XyQ?T8iv=PUb4U,IglG$O\%6?pmJ*\LhR9,'l]g/MJ„U"$)Ih3#tj>Wt1cDs1c%A76+1h'ti%Z'86C2x,gHqb&o8=vNlpe,_sniqi+)cw0z)„U"(xwd.f\6RX?_(dW+/).%up()%/%%%%%%3qR]Fc:7s(E^7%%E^%%%3%I%%C4D<?T„U"BM:D;;LSI8?%up()%9%%%%-%rh.]F7P&N>G'.%%[0%%%3%I%%C4)<?TxM:D;;LS„U"?0;h<a,G'eE1hHX(YJmN5woH8*Pw8l=snIX?^JpAaI$6ph$tYu)l>YuGkw[v1'w„U"7V;B9+kXDJFlXg\)_YkVdm[Y:(l8f_3;/=UJvsI7ur,m_ZOHdlC/XR#6]<iY7V5„U"JAaMU;gI'%\bW./fCWJ7mEm(RU.Q^;L/dfi*Mt9J;^</_Q3P0PotXL[-*#m;v)C„U"_?dZ74K8Be5kWiHO-\A>^iI><Ps5XOK7,(\m,c0Ki\6&&L>LXMnTv%pDF_RMEl:„U"voo_E-/z3H8KWS-5tEXWrI3DfIEM8<^uPH,]YjqCzD^-45+mFFbX4Zb^EiHdHVW„U"^,YQUR,vsa;9xt7EoJRK?$eaGR7,aVdcWV&6e49CH7UqkPu'UxN7ZYR(K6:bL&x„U"s_GNsWE5BajNZBwhrVYxVElNTWbvHLp^2;QYfRn&PEwKvHGILN:X,m9I+$DMNA(„U"3ygUw>bWK//M?=h[<uJQV#RlDtFC/ra:O;BebOVnd6sr^:%YBb4%Y.+?;Rb>GB_„U"6\Z:OXDL<JNk%H0<$9bco,Ypi[Dyiqw0%Bt;2+0h.pvq4x_id<X$tBBRScgYi[%„U"iRSD4?Z8xZF9J83-FH,RuN[m=uXKjB2>.'*<9P*ROow1F7e,Tn42omp^P*>F6e>„U"kK(RTX4-3wcixqGh&C[Sccgu4BE'obtjJtzd^\-5f<a+pZx\ue+vj'v4up%()9%„U"%%%-%'Jo]F#IG-;&'(%%'A-%%%6%%%MC4<?ITx:DM;;?8J2S10kBF%T,=Se5YL0„U"]NDgawo+JA3FF<Myq0Q6%.ak?vSu5&j?A'V[,oTR]dX$47/7,ynF#4j-5V66Gmr„U"2G5&*>B?)l)jf+QM+&Mj1qLo^hfe;sm5SnnIbUJ=GqfL[PEVe&q9[&.JVdJ2()[„U"Rh,nPSVftjCIFpiM5:E;=SlcCagZi8_PljwR><Ub;4\P[$A'qkeW'PB7$,L[1ra„U"C:m&'N_fXF'v_:z3(GC$TqeQ7T;.RP/C=ncYT$CBM1HR4\IW)H7b1B&V)v&yFfh„U"beE^kXkn&8ePVjXFHb*kSw%&7%hheHAiI9m]u%(^%kFGM2/j?[7=1:ieV4bw$qy„U"0ZUuO%#t.^tvJ03Gq)E0>*F6tjQkcgL'ldchwiVUDwaDC7]DnejX&*H'I;CPJ]&„U"X=j-c?aWBMo1mNVBp\hma&&E^I0NFfpFI[#zsweYV,&SYRRAx2,E0$rE9,f\o*+„U"K^;c$<K%qV)P-*&)S(7*;t4bdMgA8On39?+dfW)30JvFgu>pd(Fb(J_6dB'-m%^„U"d*;0/cVxTnMha/8FL';Dgps^z^Z2K^W&M]7fY)+LQ%:mh*JC.-0xe?lcs1NF2V7„U"n-*&E#qF:7Ls,npF^:Fi7xfT\?U/OoRj-(d0WVt%$Uflu'hiBiGj9_1nj:s[Vr9„U"Ca3Db\d>Q0DpnQdR[eTT-q1ge_bU?L:QVl6ET>./*jb^\$aML3RfAgI.:HOCq?j„U"j+bJSb-#Mo_m+m%-,Abq<=_kQ96i5JV?vuYHbMm21#7RP,(e-bLbYl'm.lIZ9L<„U"E[JnK[/%:t7RDdTib8i6R/FO(b_uN^'j<#/5jxLk<HvE[ub7nrx+F_#Y.iNZ.m6„U"VXl%h79X$]>4wgf*dH7rz$BqE)W<*tmg'7dxkqMP=fc4Rvg'>ZK=4ijK\kC&?(L„U"[jv,>Ag(H+aWwg:1NO>Dfegf_/YL+uE;azUWaApLU91S9&h3/s$SH<'UoUSok*o„U"H?*&g[VmCf<v])6N2ZaxT_:^LLFpxo6Fn_NIw]<FH'4-rdfKb;.(AIUYJ:'&1]i„U"<C^F:NeYwbe_;8%pYCm15_F%9\M=SB;\?-[fg4[RM2iE]K8bx%,up(%)9%%%%-%„U"r#h]Fg][L_v%T%%,'s%%3#%%%C24<?TLx:D;J;S?852e+&S;#$D?_)D[+iWKOs.„U"A;DQ*od)JAg)'Ic35'j0>E7N>Ol-h\Hu3JZHR-:>6#^:fi4Eu_E3TgiC2RV')bs„U"\/OJWAiXwvBWkThPkI)d.Gl3O<Dx5jR1hay-FG=?bD]jDY9%QJ*xNlPT>+;x0^m„U"QdeknY_pjfHhkJhJhrx^x\4>pGa+djQ*$,=Bl^0m#qsuiogiKbr#%0xTCuVKrLa„U"\ifqMG=&+Ut5kT;q(/OknfK?C2+ff,ntrF7Cx.qow$>kWE;VMWbeG6*VO(dZ#j5„U"w9=CNxFH#LukzNI<0/[CcBh+-=9o+1tci5O?E-3K&Gk'[;u4RupqDlH5g&S^\*1„U"-c7>^AJiMu/%5k<t+,rRK5lAh\%/nKAH*2KNQ<6<*0mDNDg.tzJrMi^O?Tr?Ddh„U"lQ1#\Nsmm*V>,x:=\vkTpVlHs=-:qc3:B+I*+,-l<]C*w?&TlrgI?L$GB(bgT<4„U"e3u0eT2VB6abYOI#J,=tzT6<%///hSnTBITkd,RJmIbG51^?</H\cH0Cg>Kg.(H„U"LN(C1ni$w4GRC_8j\Y]mz]tcW-('K$xVZ9nJdq_</dAHQi#AAgG<3MlFE'.t-CF„U"M8jRdj3dI,Qu\VQTuDpvOlhgIoNQfbXA'[bk(BLO$5iH^b5F3'Q%sssrdtt&_n-„U"dl]e24LZ3lFNIu;qx:<qMV<L5ah1EjGeg1Q:A]>2GSLo.(PDW;Grl'8\]]dMN)l„U"3rLIO/brvUI)XO+GMU%k[O9K9$Qf#&kFWKfpPF(%^M3EwDGMMBT3wSIQsYl;/'a„U"i_CvLND\,/U,dcYG(MS_D,X4hJCCbdsvAP_HnlD^O4$jK3q[Ps9E5x[c.rbtnwu„U"^(UVlr8KVE9G^-O5]CujwvRC3ooawb]?xHnMT.u-rhKT-47\I*vE)EVY2bS7])u„U"BIoKbhk$(^2ru\Li1Piu^/,S&Rctf0X,Lotc,F#oVqw,7waBJBu3Ig(od9suK>h„U"QjHZ2Vp>VNMR4HKLPT.gm-iO5;qhq&d1'A:%bj=#H^A*w[''0aPfPX:Y(9k(FTp„U"M-HO,7>WwjR4L>Siq,*\Onj/0nuv&P$&[78tN7.5pb?H#^hpc7O2._XUpoUCCw&„U"8IJ=Yjr7)7g%Fx_Yc81i./L1%jZqf.tuiC/_Dqgd(fP<5GAZlIByq<fC>]UR\8P„U"Cw\.WbKcV%*Tm=GEvek%E-FV,>$jJR_-:fF>B&Xe_*P;(v[d?bK9DFJN3N%E2=(„U"Tr(K'l3h)=UhKq;6Hq$TnTuqQ[ogSNFuj[JH;3)HQk*r4OqHP/wTw5qEsSAl6tP„U"JL^V[GXL^V,xL3b$0-?;Mim.KXi#,:ll33;.4+=>%G[Ze0XLl\TNj]JtP4r^A\]„U"60x_4AWLY500ZeO7[?o4:_npFN:G(q-Q750iYGmn2)tQSff$ocX.ninStx<G[e.„U"CBl^kS8[.yU)C]Tjs(i15gK)_*RP)ut]r8?RZ%BXtD98PElsDW[LgWU=M?&suW-„U"v4WQ-/Tm#=5$phFEk(YE7NUu%OhO%2+[mqAvwN3+4npJ5[MdN^OSa4p3x?/+u=$„U"\tEw.D;ZDdad1HWJSVa0'ERVcB3mh2TV'.aKZSN\ukj3Kwl9f3[uAlUf\Mc=]p4„U"m5hE77q\ID]oy<Y.Ym_QMBw0?-N8uM51[l.c\2(^7XfFLFD.5I^pttDwFDL4-$^„U"lXHK\**6[a3j'xco8Qo(T#0i2]Q6)u^5Zg'*2<$)>nw9c%zpf.K:Hhu-u^n.nhM„U"/rZ,I8'+24[,$m([[lkd.e3ujfD]%7zEW\hehjRXGufap6']voALo^*>s9vy59j„U"'HnvJj1BfI?#cqjOa'<O-MoZaH_*vlX0O9RGN6]_Qz][0)-Z9)f%iBuo)*qZijU„U"wC^0YMrUI+l-$(7m%D<-)+Ur*];mG8cn08xp2xJ'fS]k^'IGCZQJJs7)Tk-kfs\„U"???c)tJj=lBt<HMhQG$MI(q8r1/S?6nmoLE_0d16r'Q5f$*0qFCwq<NPj__Df(w„U"Tu&wbhL'Q:]v:9((=Xm/IYDYq1%N_*:x8#d<$AMdJjSPsPGM5z%eCb-O;XIt0l:„U"+4g)B5rtn&rlkZ0Ew]ez&K/-t^DnGhL;H/^PYEk/yx^A3\D09#w=IQ1g6n_T]8%„U"61g--7;NLd*'VQ];^ewm5mY>$>FCc8K6P(O#[bDt:wK.cfGf4RcdFL#Ap8/5n<n„U"-o2S&ih$,9[/O?ZJL7XsmPScjp*lzVMK7E0kmDu\$/?,<KE=-(D,[uZT?w$lPaf„U";)EnUR8J0rx&&Ju0xr)Oq#e9_e3a58\AkdVA$g[By4edh(gI4x3]8<%0iU0Md^#„U"Fi;5Jh'Mz-a&'8ZF[Sj3o>mqS8Rfk]NEK7i-2oXI7dfOiHFYjoIrHbfSC7]jbpv„U",?\nfN=cwPYD(SHI0jSBNFmKo1oP/$:(;LOE,)CTg6[f-R*FRqC7,'Bn'fh.Qxd„U"h0g9^HTXM+Q=DnYQ\rkkbxkr+&mD:'d(%\q'z&Rs5eck;Q:bJ)bec%9X++Mi>4(„U"wcvf(+(7\bo'r#sf*x$GRXAm9.rH,*IG5RrPgSDDAeO5R.X+SbZZxoO6?PW7.Aw„U"BuHaFlf?[0&u.8S$kI4-Y*qS\4DRhNCgkJfnvXSgFx4]Sx)YE(S*s)+AP-F'+E8„U"Cg_hGV##j>?PWOLX+I^TF(t[aZsIoT&SEp,=.+%=(O5g*PkD0lUqoZ$T)l$wL5N„U"sM\/,'[0vdaD^^iMZU\.dK^jz09RCm1z?T$8B>CEjfT'<&Bkg$?wZ#jZwU[y9bf„U"5lX>a8t8SJphVaXy6b$ZJJJ+,=E]j#QYrMpe.&Jb?DSZM^q4nn:Su#e^_.Jny&<„U"ITYhq'$SFeU5$w&9KUYw31xqn<)4SW=9LUn2M6oI['Y5F$DY\U<dfMNI>NE2j0p„U"/P[]i,txZvLGf*.I%rYjPZ^Q^RoO:,):PIJiWW?*-v-C8cJ(If+2IJI]TXBi-UV„U"R7CBoExjOh6LLdoE4?EH&<'B[P*&5Bcj+7e2K,z*<9n(#Qwq?\Jh0aRCJ,-7YfX„U"-X-$t*FVIws/S&5aZ*#OfJAE-l'V/rLsTw_N2Saq)Wh#PiJV7/=lS:[H$]Fsrs'„U"Q)'<1Sl($7J)T[>enp]DRI/]Bw)lg(;1vR?gnoopo+L\7/UaqApn*#<bBmpos44„U"R8%T&#3&e*hRE%fd=UJ8kZ9]PBQ>d$Va5jU=K2iWhtX=KOFfY4j'0F*Ug=R&a/.„U"wxY$kV0aD/lpdbE$&E3.i</A$fO-c;^t8c3+\5\,:UrhpC(+t%BL1G:$cK=5:(e„U"5I]#3DRzEO9aE5ERk+[^%3tpJ3,<ln6b.9ZRoF^$[;4'a:g%EI-Z$+hRI1/Tq%*„U"Gj:QCv(JrUyP>2R7:DMaI(]S6*sDUo:P_M't[U=:ec-<XYBqm),OLAU,25='HCk„U"FCm,0(9.7AR0<M0-Q:\[D.e:99DS;s\cAuVcDrbgY2?8\m$Ml&-FQ/%]kzeB>mD„U"8VQ8kj=WVV,g:z5RXpD'ba.ViQ7I;_pjB(:.kOb5bT]/aq$7T3*0sgs:O6iT5/u„U"j><a(ufn%:H6&Vi0AQctny?ZqOqaZG0U=VKf16<c+U;nS-qkXdfdKD4z&'UdKY%„U"/I(_'o2%PDebj.UH)R,L7-.#c<w/jv#N=%:+MCvj=;<5U%%G+.M:xvk]G<HHaBW„U"\_?A+#^hvGk8U7G-MmY<WxEPv$.'TO%(1vTZk)Kw<pX-o6Sjd[u(.-_=%_:$-4+„U"><s&iwGP'htz)sFN;Dh>(2u^$/h;X%;NGR_KuA;l\>T0D:lT=j:98V;KsV-0qNN„U"y0G=J];WP+1L2,IyBr-HYIwicd:&mG7QoZ9IDI3AFjsKt01otQ91GHBZH#jF^nS„U"]42%I1<TtF71N4%[-u3&'A(GCF(9+V#^K_5b5c'X)gs[t[Dj4-1Zw5e<j)#FQl2„U"#,75Of9D,r\w5'B0_(/4m3l'$q;&.m_X/Rj3$Bfb7c%P)[/F&]$C6LfI,bKN[i9„U"FvkT*_e=?=^]0]4Fs&eo:gFERaXN:F471j^e#JHSN:];gxvjw21PZJ#4rU(+uOA„U"%)G<\/#Y7B&la-MK*[Sfi5ls\JI0FSjXrB)f]m'8s9KQ'19RL[*SQ'8wBKDg;'M„U"BAm2u;>.8Il'=p1YlkP^<2f?3ePGqCE2ZvjQfC&p1Jd<6('*=5]na\U6#,]_wl[„U"6\YMnxH=-/$+mTS7sO08L%dtNGiHKH_26c0Y_l=(KsopE&wQF'T2nqB5sAjFkv?„U"7E'Jdc4o44TXWgKLFb6C>K&O:pF2xJnArm;T[\0D-79:4$c.e,*QN-FmVQig*st„U"Ef_ubJYRtuMcN$2c+,?GG&EmAuQ9.yOM*Kj;eQ8'H-29l*DSCS&ecDX?IK($IuB„U">Hi&5\Aq,6bXoi.Ex$u%IA;n]^:jqYkmb<'k%kKI5]saWVb>a=X0(S&t5Rq8z[X„U"sYJ&OdYPO;1;4>$0k+j?rW<k$;u0[BFi+L_w'=B$m&w2iG)0W\vCycb#tXhvM[;„U"9Zk#,KKn#D((,M9>IEuS022j+3gluFrlfoAhwGCZ8>-2'KLR_[/Aw*Ul,sHxJ0d„U"2g;K6+v8GO=;tWU'Q:h:'5&fGp/U85SF5$&nv/]GR4W3F/%R:Z>zVsSXv'dt/p(„U"((7HQ?&nCC%H9Th+Eu7_IoLjs<nC;puO8H>U*I9oi$:bq<07uXG4M3(YS=\jZb+„U"?kl\>-ZGP&6)-)G)NoLp.X]>5KFE_AaZVS9?)AUc%X0uWrLiV_;nI&8*iSS8X(K„U"3#YOv+j[Cc/]DvA5-A[e=BPWHjTg)&V?^ZuN//4*5ScUFR$O;2-q+n<Y#$lMr/^„U"s*'q)Mx4^P3$TTH(M>7<S:&;N?IfjEZ^_[\MF1fUfUo&2ZT<:;EbNpz$<501lTw„U"6<+Ms^uV2UN3:iS33Y*i(Os6kl/etL%QL<[t*h5L6rs%aL-N70fA9PG?kBsT192„U"7WW9qIp1b/A&Lq[Cn]'Ly%rLq;,$ALeIIl06.k,+>Kd>F'gdO7h8(]LTS4IJ6Ms„U"Ft'r=;Sd4WUIITaj=,E2Db('mDI<tD/GeS.'#Z2F2?7VmYZx6Q644-fSdy#FEh&„U"Ns'$dg)1Kfb,25_ro>p0'WN#$3T,fqjc,b):$Z^S:%6+<;Pnwl]tf0kJ<WKiXeR„U")]>AlhvkL7/jp2x)5_Z(+;o&$A9*9]t]fikmD%\MI\fosdPuT.lq3pHQ,qhUNk.„U"LIG20;0<e+e3-H=%jhH'N?g_Wm2nm)#C2pYPeF3A<jW%;kuC_oAANzdR*M:?#s<„U"(v5vBFoKJbN=hq*7RWirV?EW#<^d%<)oq(Zw)4[OPf-:Vcw7gu;fRciS./ot[K>„U"1j1AHLKnD7I:Pwjk*aK]MYi]A_1B?r9^uVWeJCg=Ub;l;lK*4u?RtOGXBwt[3z=„U"p?v2v,YPnk.Ur.5Gs6rtcCrlT>>4<Vdc]p_nF<EXh7Dex0CZ&cgOx[I)>dB6kQ2„U"Ld1;-Rs&.1g#6='AX_rOoZ$miDI-Z)I3KIk&%#+R'+/S=_.R%IcX(\t-cKM9-Mq„U"bvl:'YCYs4L<RYTOg5-o:JgiL(.KiPCen?]k4Fx[:iPWJbgD#?dU5WRG^j%NEt]„U"ERq7&)(t7OD?/W+NP#AQy6G:1<z'OC''Q._S$mw)N1t?b6>1XzL:EGhECKZBz;[„U"\[Gg/Q-)=iIwqOB?9[-#Qq9v+qY4\A991w#KwydAR]h5l>e7GE=>b7))t'UCl5]„U"?CSz=s1#xcr4-EE0,[x3HrS%($:C2jL2:0Y4Bn(A[P^\K,1c>&\SG=5R75-=>mp„U"yv41<-GQgZK9;nkWZxTu96((KrkG\*,+/cWrVHa+re_LiH5E6W/.chmY2,.12mE„U"]g6+gL&)66-C^Wsp(8v.9dKidhacHHhUJ)hrw&$Dt*j9o6<DCh=%[PU(^\-S':.„U"g-HqLK*J%sU3m[z=Ibh9lA;Q/+*#JX952QYcOggq:R*N#2?d8>+0RM/+yL)hQ(Q„U"&Fgc[d_r&Pi9.=[)WOuQ'Sjz08*0EhVpY4jv*G$'20AGHYieL6m)DgOpxD$POW/„U"-(bl&0M\6IhfV*D%^'D(k4?ifV9F9]c]+I?i(PrJ9\?.q.5\2>&<k3.q%GudAF:„U"ut-G-nx7/kD/7Qe?qPDz#c1nr^'08^0kwACM;ZJexjbTr.uM+(kB,d5uTE^K]JE„U"],,p<Vb>QBMDotG6[Qg68^PCb&_'\0QZirHkkDg_KEqD=WG=R%YDkR;ZoQ='+W*„U"PK[+ht8u4fSW+kn6%bFWXG1-PQ+=Drk(NeNt?&#\(b?gM-8YQ^+8n3U?9<6G;>i„U"Dw+)Kd:GFGI?_lok3aY3)4(+TfhMaVldLdUo</98f0FXe.1<X&&m4otQ=,ttm'&„U"wRzqc.E5P5DjS-Z<[zqVMEDUGa<5:IMYeR&y_0(XL]m;R,RUSl_OY*HjM;\f*KL„U"8U,#Th*VaY9l+%Lqf-j#r+o)W->x7z2WML<\%r/1t5/XJDE:nY)^r1Dn'(*4W=g„U"8pTI,oB1-dtBq\q_?.TPa,ujpC4nM>s:^Jhe*XdkNmCt94zENmeWABlE3oY)k96„U"KkiQ-<mrqng>nbfmv-*qD,^'k;X6vUBTD]t8x\$VUW5b_T^*ALT<8Pd\Ts8pk+Q„U"oOf>3dKLP[BifE]H94O,,F9IL^uzHpxd<sG(D'dLs2j*=V,*UginCQ.M\zNBWHA„U"ep\GaYYd$<F&1d2'Fbth*FraHUUV4:#P079c5<,+N2M6+De[ispCC.Hj.5amu?9„U"DtEF0wTHoPDT?5LV>(hR1dxEiH#3+R<>&o:%2=g2;n**UWM#n?EeE&:TOyYbdRp„U"N#5[RuLM%GjV.4X/kS18(USHJ0$)2gf:s$LY)4SK8i##$;:#eB4LI6k<1Z>WYk'„U"Ei&c^S/.B6]>U0Jh]g3UC.*PpeL3gPOm,Y]vDtLXHh-$6T7?BPYk=^S8EWF04V&„U"gCnN&iVK]=z4LBS7?SG)YoGNj2u9d.]lS)FeL8>)Ngn2q/x)rUQdF:Zr%s5b(C<„U"Uni2qf%^1v]n'mZ4t6w^HY=w^%VOoxT(DC]+=;FXpm/Vw]+PU]?bW:?K0ekmRrG„U"HNJdw.LfCP8%<[yPzdAECpx?7rmA#4]4D8_97b<Z59?B?kyHXqNlJL%9<M>XqC>„U";W-76sp62m2t.D0cv(l9+2U/EF+RMo6YF]%Kd<5_O0F?K+aj2vSay6C__l[_?u_„U"awQ:I4]*5&A$gz)'E9AG%$k.vRQ.T'otd2+q+TO]wDqA2eY0Mu9iDnK3ar11rvB„U"t:$n)eU7H6$(E22ML'[DOK'e=6Nbd'#Y[m6JvQ\BfjwA.8Gzq1<LY04S9lIcFD^„U"6Uy:+Qa1bXYW$<5J]]3f4hnWtn1k8Q-6>K)Qg;RgRoh'O%2I%eiZj9>4Yuh_.A=„U"J-esvY(pRQCo>-rBl)EE'IQRrD*p%Ye\q:Ny_Q/cFa((d93xJ+7[jc,QGP#VgwQ„U"=t9er,Q]rog/_T)>aOwcRp1cyAQ#M21_SJ5i]+g,O%7pc,)f7/Do6%XaC=4To/g„U"mf(FWfeL28U\4i1w5It1\[jtcr5bq]sHjRMy/ineXq=JKrxsz0>I?d[j]$%/CL3„U"WLqu?AirVi2>?u3c#U=(ad#rLIEZ2QSW&6gdC:l)ehs272bUj$q0?TPR],nuu$j„U"'cuG>U(\VA)OGYki'DM>^=X\MFa2,_qW6qT=(p3mv*99cDDPk(k.(]3NSv8dt]O„U"6+k'\V.,gt[yCMz6e)+R#WE3%MG<HYPR,mm=2m]Y-.)YKZFj0*6X&1DYSQ,]XA6„END SUB„SUB V3„U"o=yOd$O&yViIcA&[3k5eRD#Hwi3,B&mdLYfKm+eXo=CGC#>*w[s%>kr4WuUpCAG„U"q[8tK9*AfDJTS>c^'F_uP3HbE$,6,wQIWg1'rSw$b/,6aIXp5\p,m1#g8Vb01s(„U"am>B4BFwklJIv$.5d2]8G,s4i4)>e8,:a02#KC%%9bb+VaNn*a'#D8aQX#Qnm=S„U"6.$Vys=td>,p(p4x*)=>TU'K[zYfS0C*#(_&WA*:I>PpU1)OTHA?oE=7=7+M=TH„U"0laEs1_l\e&d)6w3Ra0Bveg#RRzkBo09S_QMhKq7I[rO1UD]ck;#DuYH>1*)2<=„U"jdAl:sL<>UnY&jqq_g6Qt-,[0A^a.OKwGM-0K&#0W##T195\j^*;#yT(.-fBg(v„U"iBJxsts:>/vqLl0T0Qi8_]B.9OkZAso#I9#a/JDjE6H:\/2DU_q\Asx^,Af=UhY„U"/jG+Z)ZlEoho8RWaeuRVu%(-RrGb/N\5e4<0<T;Cr/6HKTeSthJJJt-r1QJ,bBn„U"rN('uy<bWXv&]pAySu1LyYnGI$Ypjj+A5ys6Tk^-=p$Ee1/:pAQnvK^uhGI7K+C„U"FC[/su7ZQj=pfB9J2;$vj8.DnC&RSWeuQ:9efV]o*2_51QkOk=p%ZdKQ7j,-Tvw„U"Qk33[hXkQqAx'X_YQ5%W<t=MK4Cg2$0)\dR7Hhwp-m%ZyL>emiL:v,M*KTJMVSW„U"A&AFFD]Fbi4E+\m&,luYhmI=iOngMtL3RzY?Je+Zi^0Zc]sWEQ'iqE(AaN1n537„U"Mclad[414]2OEH%wmBykKusf.QR95FSddk&_jmf[InKgiBA__ObV-RNV0so:RDB„U"M8bsv^eS#=)6q9N%b5B9ofcHQQ8=>:_+;%Z-opE.I>A1BFWB_N82iU*A+zU?'W%„U"AQ\3'xYW)\Comdzo6.+v:yJA?Cg+_s%6mZDDfy#_mWY'LB9[kkXS.GbT\U-:t31„U"71I/V\;dI7.,x^fck:l;*mUr1E,X8[0,+OG)>vJVa3_vG&[P^r^$TrLg:v)*=O$„U"wvtjMnL;50?UmPEll2E0)rrj5ZmEvjM8)G7z%uj4[SE#naKl'g-gGUvpkLDUtvT„U"F52S'<5\DUm/jO>f+bY?/dl6p10Y?(>vyh6F)Fu4QDP^rE3+\m]a*LNo*Disz\%„U"w,(x;-WUVeFIMw+7[7y)Ka31=YWP;.imC:_CJY4p2^]Y*n(<Qa3\b[uM0--$D%%„U"?n<-n,j/'$Y+ms+$Pj(YI;C($_e>:FIjKYFs\1O6-9Vq7?6vaAm<p+_10NPiUiT„U"%AUgx,P6pm__#%7]_$PWcwVssLdJIR&;=$:NqPPL:hXwE$2IZ>h^9b(GOC*%Qno„U"Z2X4&8f&4C#?SY0JM&E(<:cL2N=9HU$Q:#X[0cW9n=EhvC#iKxe$S<b,LZtor>n„U"$yxghSkfqO5*NxErptuJ;[MKW\>pN,.',50Ad/b$3B9D-FvCZi&^T)thi?2XDAd„U"R7)>[EmW&H;E,_EZob<v*aJ>wB56rH8sLdwcEl%HWXK*5W*6jq)2R;$FOCn%.p8„U"-O1ZU3Zf&*fg+K6&lxE%u#YSy:eC5coN8E1d6B\U^2HUg'[&El21qj2:YcT*6ue„U"=4DmubCF.6>7t?4K[<(/?#D_=LD5(1&Lo:MUo(+:dB[>pb[;GP;<s<6mvCPG-GF„U"ABMl#v]FA7PCWTeT_G/nkx:'#l^KL]L)+>WKK[8(Q/gL\s#0MxUv1%oy:>kqeRj„U"gp3+=u+Z&n//ZX=cb(Kh<Lg7l.(^q6fn*gYz+$fT9m7VR5S'Kcv6SAk.4L,dMP)„U"*5;$TD6.E9(Y+(3T[Egg4[z\bNM+;)2mAaF\#))3a0VA]2K,aq=Q2_J\Q3;+g0d„U"5pr/LgQ9$>k=e)g(U<;\5LxP>](-tIf?X)9TmLGM_w-+b9ypKA9w'NFr;B2NOby„U"fDDu_FeQvn)$j:BnVpml:7m9%fo4M\$:ZA.p?ea6A,_194ES$LQF,)V\r9-Yjd\„U"Yd-OC0sSrpqvs)[PL-TTp4>[]NNZe=+:Fz4W>dZtYF06ba/,E&+S?NKpdj$bgSQ„U"[B3O+1'(,['%Oi$kNZ&uC8Z1s79h6tTc5Xp(Q,iP\8JM3U?]br-=NnsrKnKdz-.„U"UESJmuu5/krrHmY_I#jT2F,uVkkE2[F8&Ji)*g-wZWd/h0GDbWgLgOum)pWz9B2„U"CPMR,68XODc]Bo6vXj=[a)#(.%KIVCyNKqe1s'*\Ft;Xg$_qTHkfedNiw50YbGF„U"L[Ql'a]4CtTxEAg_GW;?U1zO7BNejX=lC&jJV2aP3n12+ea]05EA<<ZKl-iBn,O„U"1q-md'>]Bs7F&w<Oji7J0BmtbcgsLDVIqNS[L*'1EvIF$\uEhI#[_+7*gY$.,5K„U",+Z_Odc7yXGmLO#[?iT+2'zi0GMD+EeQzz)CC<XJbxgkWQbKIkQU.#idS1Ra>E$„U"5?wXoduvbF7BPo6^Ia>[K(^imKNLbu6r:yN+q:8LN7thp/lc*bQZ>Z5-Jy-NA-X„U"srqPWW'#Wc]+Pa3_j_&:$Dy:siog2L0p/cq6*i6bwhYZ)ueh$ULiH7H;jjYADiB„U"PTcV_JKYf)hf-NsVP.tpac8OjGZp1V/+((Z,;4yWjF;7GYWoHe(*]z9<>wMBtzV„U")9&bg;'AHWc$Sp\)9O7\;%QK)2z&Y#H-)nUX:Q6*EEd67f9So;atBNxjOg3[.d>„U"9PE4*lsX'7PA:fSD?Y61:#.mW2^)96FOMg&_9HLIJ*(e2$4D,6DJc]-f3Jm]#)f„U"i#diZ$sHgb(Aprm-t#Il^,_&fWFhoD7'2]5&Oy0Zu1LIQXsqOJ0/>1V,47r88(A„U"7fTe'sAdmDeAUfS#/=r5pCj3wM=0jno1c'*FMA;BjOyFW=0#9xh?2'e/)%fXWDn„U"*rsMN.8Oaz5z.ixngck1Jkc-yt0Ie7Klef\;?VI'ETuh'MFU;p#yO:C*VA=fT?G„U"BbdIJ/V1to$yXtZBIYo9u396zJCpgU-HREqFGoq^1u&A>FS=g;e4_Tx_F/tJ6K]„U"<BfX*Jdl-(EB7pPsJC#9G[_EVQP8*Z,9B)HoE)#VfwbU]EGb+=<duQfDN>0kfHZ„U"pmw5=q$q$$ng+UX^/q+ISc;sx*4RGzNe/0fT&S#[2acVj<\2d8]+D%0gI/wkj.X„U"o4Qr7&nb>2$G&^'>80EjHrfu2N6:*Y)W=Z;g%bZ(H7k%:D7k_tsDSYT[riSRZ8Q„U"[KphKqWklSaW:RxI94.'tG(bMjbumbZ2b0(5H[zUiFvY>bqJN$^>2'%4FL<8eLQ„U"3?[W4cMrL.=H2kc8s7Azv/(FK'<>f6,;5;9>MpKv,a2OZe\[q6'<tAFhUbF4Jb6„U"v5GJSSr5E9o'1u4u.%p.;='ebibesLJ\sVa)Aw9BlGtPQ^D>yBM;ICns^xv'Ee/„U"'N7qVnXI[b?&y+-GY0IdrpSfvA$2:kxqL-5WA\-)8lQi14(3)dmTTADOe.kq[&E„U"3QI]DUm'W]t3t.h_1>u?Pi&m6aWESj*&RBpj/[:I:c)=ea&n*Lj,(t>:sEh1F['„U"$tH.%lg6DVoAPQZ8v<U*Mz%.CP:GsaF.&K=o$7JfSCM1Pb0jeT4mKh$lj=Xr]rO„U"i#'isKAJ]KtLEkwWXWV<H^:KUofEopAl+W$<;59)q<PyWPqWNAV,?5qYr68DY9n„U"3&?K5IZc_GtNP5$R<fm4PiKQgi_F?U7qHxK=6Ek_/.]l6SeTp^2D0S1sG)9<62n„U"9Y'6cg#ApmI;ps]y,?_Z<0+7N9:'3N5r]CNu-oxOIB2[GJC2ykz,(01rXO-9>%%„U"I)*[?QUA)[]j*ee2.h&Lfk+5w0s'01%.31>e9s(6a7I%Iok+10):_8e3G(mt('Z„U"C2+mF+9wcT8g-h]Ds8xIoJbvf9\lw[;dLN]cvs#Rgfq^R,eY\f4%1=EX?$Q\U0V„U"JWcv?RM;9GTRt$MM:sIG,DM7dQeCdyoXiac(HrB#V-fVPDd0M'sP;ditcZWSHCp„U".Bk$[IewpBewz?+G^l'bJoCQf,H;w'#WC(=tKZ=g].9fG)A]StMSqwXxis*iO/(„U"mJeZ$c5EZJ7eSZac)%?(T\j-hqObjfkb%)#f33tPV:Uzw9JXSh*'k0jRXZ'-N0p„U"0llQ*&-ZmXnp\]QPI21j11Y>q8v&2#LO#Xf5okQQsCH0P%fSu/(1id9M7r;rE_C„U"RGbTMhJQfnAEzJnb=b<C8/*4A'8R4c?7pbT<u5$voa[(>kh=%;JMaep/N#'g:c&„U"s=t.K:hW=Bt)5&(t)d[XF^A2IzPDQeT.lT0XQp\JfnN(VabHPGLJVm;b6d0s47P„U"LaFMfd<.7X0]8#,^QCG\GLoZ?UL1%Jm*f7#,dZfM8-86W[;?9GMMFt0Rd*;ohG=„U"lBDTvPIdwe.Su(tj=5TMPZ>oD,?K2npL-u<0/>EeMSYa#Yt>-8-9_Xu'MRiBH\h„U".vX2#inQFHub:dFuUYLU*9(78IF\d0WL1QZ7h=ZN&_t[Saih+K+?#Dr(sW][i)9„U"q>3/v?#8x>eMbK7,M^?heVWWXHhn5_dWTKQ'+DI31;i]>f1h'-FK2H\eu^ERkDW„U"NpQ#VBMHCxu%V0H).<ih6'$H4T/Y#t%RZXS&(Kpoj0n_ysBmWSE4Xii1\:lXM13„U"q+G)Qj1Gqp&:*Jt?:,u]nrTQMDA:g10VT]73y=h9E9L$jt3r8*v(I(>$m\Jh'N7„U"V#MIre.DFSa'=TIHXgu%)iFut3iFuB2fv7LL3dDj).mS[(_DKw-LUk8K-i:\(gc„U"Q:tPts1bKbHEilDx=Y]wkDLiq3HHt%e%r(vzZHIg;v*]1h'DlKr?b\\b\8G/0.%„U"=.9pk06H7)sv/Xv,Go>-S1%8mO5xlbndDu>NV.$M)?31tkVs1XF8HAIigTfstwI„U"iboDX[;,JgN04yRPiM3EEEcHV\8b-P.G?-lm<BjpoI$.D:\P;M/apKFcDU<0:P5„U"^jH>>:O%vRTR,L,/u?L^uNZ4$ZnjlKpTF84*dUg%G\?4<XQq*Hg>J(kFU5t,hG1„U"7\8+9Lgma;3<-KjNCdU)SaLgHO>vS,WSsBiw(u:^:_zZsXKsJSso8A>l[hjV:Y>„U"\q7kKXs^mYTxlSm,5+mtab/1;[lbTT:dbqn+mj[X;58XRX4En-OTQdIwyOd<;9x„U"Exq<c.cKe5,0Zn.)[.%m:NvT]?Pm.bo1)>b2Izy4C+snz)XL.ceMpOXZG[kH$*K„U"f#>$]/z>M0J::l&uT#)P,#:1-I)RkG;?PEKw&mpkBGiCa?%6W7srtxM)rTR6LI?„U"&F%HVn'KbM:jV8%mf%eO-w=KPdgd/#]OKq1nP^/]j&uZZ]:5-bl0r,h_$tqPsLg„U"$V^(M?QbLZV]u\9W-6Ol*Y.13B)'my3OsHkjCScdiUbC\zYC(%4.)u-N^No<WE?„U"#g9Fq>h^uw,6lU0#[Wc\qc]*&LUg2VQAc&,D3Oa0.uMf#xK2I73YF8_w&RNOaJ_„U"rKsaN&z*b/Rfo'sFTJ8Si+TrUH<Og_iI))O&V=xr/oVS$cg>o]1ItQ;+g$\$qNM„U",4UVv/EFTRTA[KX$,pXnvFtnVeE$HP\lUx%6eUtKPp-u3drE1>p-68Pt\nApVq:„U"Lz\0AD_6kHt7Vw38.=i&C-sIS0h%R6\I_4Q:(;;t*9ub.1abnM]v<I#0wPf6'V9„U"Ys;oMP=_r0kWGF\6s_?4.Uq5')e#+3L)zvwQ?w_]yhA5eknR*:YX(1i<)x'O:bA„U"lLLtxmJBEE1WN-&[9<5ZN*0p.vnYr?tp(7aalpH$LD%kN5A&*N9b_HJxaRYzbb8„U"/'FK5gAysL0by932%/eSs;kR,PBb2Vq^6Z._far#3_AP[Bb,4ihE\<VnHDwKtN<„U"qa%eN[W+3tfIC8CSb^s6s<S*?/DoJO]lo2QT]o=O*pnF<HR=^iRub6gUTZfo6Jk„U"<oF1orv671,%qCgceu,AghN9AHSa?#IjdOU\9_YQI*5vib+?.D(x\wur2t0p4YX„U"+t6J/Jk,,hE=,#LlGaBHxb+7e*Q^+[nW.GB)aS;Gd5Y\c;.cc:^rFI&2Ck*T.Zj„U"oPrXTXaNPY:%K>[fn'aHgviT8or4#^d0%]-'dQQ$QqL/p2-=Z=W\<qGHaM6'w6=„U"kC>Ee>VrD92Go5$h=?MDB-P)>5IEj46qluHsn2*?kNot<Z#97KrnSS+AR^EkMkM„U">ES=c0_/vRG6P;(7.U;m5hIhXv7Y&PgO?Z.P$Glnf)P#r;Y$:%jYf=;kA-$Q5'0„U"d:/ZVD(i2JFKE\3.*?\0LCW:ltxm[u(9l9nhxllTRwJU>XE+z&C_ZPUzw1-Gscz„U"vlK5J8oL;u3p\Ui2nLT>[:Hr(s(Bh^^)ftR<kI84Dl7UxKq*_CFTX=8)u.7;Auj„U"oTvPD9eMLar1##_.q4?GJ/0jP/e&J>SEy9riON]lrrckCm?rl*jr4:9\7Cu>#o8„U"Ml0*hQ9Mt+c7TQ<7X*O.$Kj4Z31;d^bnbSfren\IA89C3pVK)os2A2t-]<GsZ_8„U"O,7Cqhg,qwTm&*k8XO0DE$iF+'L'&U\(in%zNfY#iUbDrRf<fnV5J9Q$#$VGxLD„U"2b<VPHl-4,]m)dg=NVq$Z8Dfpt*i['7hl2tFj7dfKqIMn24*3sp<wmDovk-^$?K„U"8h7f/_s'f0E0rZjPRP68\=M/h=gBV0vV&doQ9PPUB>5fpki=>rSW7^oR8CCAlHX„U"OORPW?^WrX2n[To(BrMnN4d;kj&KsYW3YWP5oFYMLtZHs(:J6Z^X8PevBhQf8%2„U"ox98H3su^)Xdvgk6q;D&D+zzypz'831'>u33\J&tbt&TfYM$<^i+.n8kI.I,i7E„U"66u6w$<pd=hW0Od8I>x*68j<'-8ENOB.sCvV6MLpNa7m&S/9gm#+YCJYBLv;G.*„U"SW9NcKxS;T^0ddCEaK1.W./SRq-abcgrOaCOVhk[D,km3(0$Mt%qrB>>Z[<<?Zc„U"o[L;sl9T9uq0EtiD$JJCm&d)MEeJAt7:)um*cCAUljH1BjR9y?XTj*>z4=LcD8L„U":=<Li4uQCvCu]uW<6RJVgYn#iN+2\+04X?9Ss%B[3&Lbe$fJhjmn02kmI5,qlHa„U"7y$C075XTEXd[\V.1\[w3PlLG2an-27)=RGojA_^6$B+tGRt,hdFvf?ej[su)W*„U"yzP;WljYqu[N4(Pr,E8m+wHjlJe.<l-?9OX4*-LG#c'jVi>YT[<11-^2:5an_-C„U")JzNPk08Y8;rrV(-M%dSFi?EKhPI'MS[Wo=E0a))juai;%&kx_#P>D78)lHhQi9„U"B>1w+.'qF$6Lf=PHLB3\3mbau-p]c*b2b50M1=4\x^NoF_dLpwC%m5phY%G<^rY„U"o7uYW$I-cu-yQ:E\Ioncu$$qXf??LgWwk6-MO_?srn?f5ZMgGPe71lUZdaqL_Bb„U"Bu)I(jlr$PX$)rY#usmu(KIGxowzo$(s3)tB6YFc?(oQ;[2npjtB&<9E?17NjJr„U"DZB1YgydduNn05zMIaEduB\>b)0%=zHx3-.l*FLi=MnKUhB'HiJ5&&pArG?D-tO„U"'q0O8Q;(Ts/Jqr(PXr00.g#B>G-CgLdlmXa\hUB?HH.;lPO3TGa6A=)<QeuO2Rc„U"$gr=?llnQn5%)G,cJC5KC]1#U[UFR1<a-lEc:]<+lCIP%ObSXut'r6CQ%QxhI<7„U"rj\?Uu5r$??#).NI\&_D%?8.%(EHUZMAq[-FMSJR-l'qmB,jGRCn).O/TFAMfBO„U"Ra?jbQ:;kXCes:O9\9$E0kx7:mug;_P/%-)s9dFM&/PQ-6ZJA6iJgnZCn<=U;em„U"Rc%vH=..$crl]f2(n'\]qs[S16(MWI]d>wif20j*IK[qSdh*Zpz%AtLz^dAy?YF„U"&q_G-;<tRCwsm$.GjY9.NwsF'Idup%()9%%%%-%'<o]F\v<aZ&b'%%&H*%%%6%%„U"%MC4<?ITx:DM;;?DJCS10DBty*)>jU9tM0]x;?i/PBRmjWK+ZwlBMIsR(o#)y-b„U"sk803jrut#RYXQhQg+K3rJgm:No2GKX^nm4cl8_f#1\0-q%vskBR1++(38;'MT9„U"C6m^nE\Q^.5Q83QuI:86;Fk#H_+cu[Rta?+Ba4Mh%]cJx=[,V%N'J^cYGPgc6XR„U"^1O't]H#GaN.5A1Q&MwDUUevMRm(>Avn8]-oBqSzFs%y#>kh&fJ,.byieT9rV=t„U"yNO-cVvq,'cy#=&,fnn2GQcBqXNw3D(DQGQS0S#nV779aSIa\sCQg[pC*iZE1^:„U"u'(v'=%9:j)*Hj=z%6f.G.=5?U&Vh0]4K5j4%K<_I/e)Hf;N.q,\e'agcd)o\aY„U"t6?>4-D>gBi,oj59Zs7tMRoo^jZsAo5-bCZ3v-2s(S5S(;&Y[+O<0N:LUkDc[BM„U"%b*9&jVOju.Z3:eC>YWZ&S_\Qs%FI:-aoY8&:VlolmLuJt9TaA.'>+ZN:dYdD9*„U"E)$MUHabPmP4.30n*_yjo*R29V?,nGicr#ER/bg&<H$\hM.<N,cO*gi7AJWS)?T„U"_YHl*;JUTpkGfnV*Bxr4U0isX^U4P<f/9REtA'f2npRh(%NE%E)6E(Cc..?+-_]„U"N>1c3WA_^MBC#ANt'S4U9ag&5)e]Kow(2pcibwXEedM#Q_4IxIR?C7j(rm*g<Cq„U"trLk_2>Ut47Z5BZMp-Xm(5=mfI8>&=$X_^a?tqlTJ87F&<UEXXih3Cj3wQ>;OXX„U"uEx[T/5HbEq8v<Z>KJ5A'knxt;kp0d:oeoY,g<*CBEFk#+,Bdvu+i=TNP(U#%AC„U"&q<KsQI&4)Zc*(.FtHDqA&7lEx'%up&'%W09%%%%-%%rh]F/7PN>%G'%%&[0%%%„U"3%%%%%%%%%&%E%*/P%%I%%C4)<?TxM:D;;LS?0;%up&'%W09%%%%-%'Jo]F#IG-„U";&'(%%'A-%%%6%%%%%%%%%&%E%*/Ps'I%%C4)<?TxM:D;;2?82S210Bu%p&'W%0„U"9%%%%-%r#h]Fg][L_v%T%%,'s%%3%%%%%%%%%%[%E%/,PN*%L%C4<A?Tx:2D;;S„U"2?82u%p&'W%09%%[%-%<#o]FvR<aZb#'%%H%*%%6%%%%%%%%%&[%E%/,PwZ%L%C„U"4<A?Tx:MD;;?DDCS1)0Bup%*+%%%%%)%7)%o%7%%9]%%%%%%up()%9%%%#-%h1d„U"\Fy53%s?(.%%d/%%%6%I%%C4)<?TxM?8A02;4ASh10B&k%T=S.e5Ll'[DkvgzoP„U"CB4=,*M<tU_9=/*6R5Jfj1F=Q'#[WiS=a]T$l,oIjJTMyijaQJ_<+BG1X(.n?Fc„U"k+Bo$&'$0Gb+*?geCDL&z%9\v$=f05%=D]$#DH/RUK'8>(l2]u.HiG/t].lq)Hm„U"^('-TQOTp.]xCb5_/VLQtTH)n8Qr.wH&13+WnNN(m(SUj9FN%\Je)+v8)>pkcv7„U"(%>,&m+\2/%s8zjZPWVMg]9Y*7(Ed9U#kP:GKRDgd:U,<(S&Fq]kS^TIBQ#nfUT„U".hIc6QQE5apKi;5l+7n(;q$hqCUgEa'tAaK=1g+S1n[l4))lc3M.p*dv8EmY7-i„U"GmADjJ>7;%.tvacmBhK5((EmTNp>wVslLPFQ87,beL^n^%B&ZfrG9*wy]K'&0Nc„U"<5a[jfV;Xq,E*&ZR-nJ]TahnKgf;P.w&Yi+4lv7YDd=nTSj69>i%*:bJM#Ru8\]„U"(R$oI8ikxQubPk6X+W.%oZaQ%;zdp-Pejz%+orn;8.4KutB#\2<\J6nHEjEu_E4„U"uqWjp1ef+0R[S[DJ9Q^%N=m$8qRrs\hosZEc5rL8?GhpK^^X-)Y'U19kCQZFm7L„U"p;KW*uJ-HUTGi0]$T;Z%;CGDj<#CjuePO)hI]%1=pW=Wqh1QOYZgP>Awsbo?r=5„U"&29u*EC%e,G(/W5?./HXXHS;LPA'1F6L:mgG]OI8.&HF6f/8.KD%:^Y>DyF0pC)„U"xuYP1tu;i5pvjrrQB=$+x.C<?F.ID-bcSn3JYtMuq[u/$t0oF:Tan';qzqgp/[h„U"Tnt.Q7n..1;c^_wOf6b+Suwi=7F*h;OxaImhPOYv^8?cS#MmMoA'%2^KR9Ue>uA„U"H6R$VocLubF1[9_N)J;Ph(dAhP*EE<a2WDuY)&#A*K-B]w-&*S*tsL+aG#pz:?^„U"_&aF/sp0psSO.<Fjbw0A4p[%eOP6bjbr:sLnQz8d6k:iS%PXZGAT.Fne*gFd)c.„U"/\JmW)^eMx=qE4>hB;>Rg/4hM^jIHOo*\h0\HG=COHfYTh=tif,dABxDY'Z+bQK„U"D?\\YP5+hl0,Uh*A.+2GT9=Q;adC%6MxMdxM&a*w]s/'LponLPpq7>_C2DYuqhI„U"13+Fm,yw*u%p()9%%%%-.%Q8\1F3*q+lm'%(%x-%%%5%%L%C4<J?T%>MAC4GIWS„U"10GB.z,,>Se5tK0]x1UXy+e)hL$/^%9Pc.=v%1wWOYNfrT^T=NQ$mV/utWWl8<5„U"qotgV/JoEM=E>'k.uW[&SBez?^[d6$lr<['wVm=DN-UU<XPh,h;v00kNi1q=6Tj„U"D(I^1Tsv5j*,Z/14Ov]nl8l&,=_-Q2l/E.Q)kMY2DrskD^7Nfq#T:?#75^$L'=4„U"4$E'o[Qk4AfbE83-;IH^WJ-3E&ScF=xk:O.'QGE.0?6I89z7QH0N/eQM5Wh5BSp„U"sGN)n5i&ac$YStJD$z?+&Czjzs;\2\%qf1zr2A'VKb7.IEpyWmRQ]YM*#yhRRp(„U"f9Ska8&>ddRA[Fcf#JA+1xECy89-I4A/9j3_-#7ErO9O&5,c*,aTAwgITWI:(uA„U"vh+<I6.w_gezw]NIt;]MgR%yGOCy$1jypYddl;,3A>y7.Fwv;IubNoG6rZs0W')„U"2;d<EpF=SrYG0WjR.[NUjU<ZNS?ICr>UZgMGXJMEu&H,rPlTEw>.?9Cu+u]*53L„U";%E>pornT1N9=B.ug8U(Cw'Yv)nQ;q4*p64KX_BU]nXHN&iUA<#o[iMEr.,'V2y„U"G>Tv1&HV2/^>:uIr;$f^3m3&Jk+qY_BnuX>3eX\rEvDv5QWZ9;6cu+G%AFDD(i[„U"4cdykgVsRjo?a=lw+Tq;RGMp4Cw^.I2Tt=?.F+^>Q0]L;AqB>olc3D>xSA(qBZ2„U"tBZCfxDV+=oWu6<U:ri7R#D#.c-tO%z6A,nK%bdW3$cHcCn77Q#Ql^[L3_K#mSD„U"]O,'*R?qm&yN;Pfk/tpXtSyG(=mSzOVa5THb7i:Gs+zoOO'nwHt*wzoc9?tD9E#„U"e/LS4&ps7F<5ol:F1nr&N%oq9U4bWKl9lhMBM6?:#H].dT.GJ<<+m/C&N&ZB,$_„U"=$6fm(hkUgQoCau]^NiUC/*oc&cMNvq)qN08*KEa(FtuG#i.Pl=[^xU$s3[4C:,„U"zd%dup(%)9%%%%-%o%r]F>E/^Y&[&%%4%'%%5#%%%C24<?TLy8;42A=3SM10BLG„U"$VsRde5Th4\RF]A8YReU?768]L[Vf&yi/);7qWvC?*YTgi83X3W(MGM\%=eX^lF„U"h6,I,D=3PmEBHWA]fjCn#,,m&0]rcnXO^dY<SaHsYpI6:;4<;P^='IVIc4PQDOJ„U"W]YG*Q&61p:TMjs/f6=#<I]Nl>lt64+-)Cg:JKTG/E/U^0HF>e1;u=Vk0y&;mXL„U"b_^n/FSOs7HR=bY]$0q$$aC],0gu/s9==Z(T^O[9o%Ax*:A8aPef7nGdUU*1]jD„U"STKgW=Tp_R0U54fMCZ([O(?a.9e/46EEHc3tDc^UgNipaSC=?&ccWNk>vT41.;;„U"7?_*mGi(I#FZB#XxLF7;r]ka-buN[8GRWPQFI071(9x&lKDnH<RldHaxpla1w2[„U"E19-hi5DKuXCW*B>LrMx]Z%*JpWoA_W8v5b)N^h#5?4'#>,6Xup%&'W0%9%%%#-„U"%*7[\F$g/UT/)%%%-1%%%6%%%%%%%%%&%RE%/P%%%%%MC4<?ITX3<M=C<>JAS10„U"&Bup&%'W09%%%%-.%/2[aF.g2(OD(%%%m.%%%5%%%%%%%%%&%EO%/P^#)%%C24<„U"?TLYG<>2A?7S210Bu%p&'W%09%%%%-%)%q]Fit^P*u#*%%s%<%%6%%%%%%%%%&[„U"%E%/&PW-%L%C4<A?Tg;M3?82D5GS1)0Bup%&'W0%9%%%7-%?pd]F0h2XwY-.%%n„U"<%%%6%%%%%%%%%&%RE%/P&,3%%MC4<?ITl85LW1B0JES10&Bup&%'W09%%%%-%%„U"Up]mFerW%.l1%(%EQ%%%5%%%%%%%%%&%E4%/P;#<%%C24<?TLl85<20GGS210Bu„U"%p&'W%09%%[%-%F#.[Fg^*A;][&%%p%'%%4%%%%%%%%%&[%E%/)PZH%L%C4<J?T„U"8<M064BLS10B%up&'%W09%%%%-%(XHZFWBVj]'c)%%&/4%%%2%%%%%%%%%&%E%3„U"/PkJI%%C4D<?T:2A03S210Bu%p&'W%09%%#%-%_B-UFw^^UvA['%%<%-%%6%%%%„U"%%%%%&[%E%/,P*O%L%C4<A?Tq8M=4;0AEVS1)0Bup%&'W0%9%%%#-%697\FB):?„U"PR'7%%=-%%%6%%%%%%%%%&%RE%/P&wR%%MC4<?ITu82MB2A>J;S10&Bup&%'W0/„U"%%%%%%%3q]4Fc:s+(E^%+%E^%%%3%%%%%%%%%%%Ej%/P)#U%%C24<?TMB:D;J;S„U"I8&?up&%'W09%%%%-.%h1\pFy5%)s?(%(%d/%%%6%%%%%%%%%&%EO%/PwA9%%C2„U"4<?TLx?8AM0;4ALS10B%up&'%W09%%%%-%(Q8\F)3*ql'm'%%&x-%%%5%%%%%%%„U"%%&%E%E/Pl=I%%C4D<?T%M>AC4AGWS1)0Bup%&'W0%9%%%%-%or[]F>//^Y&&7%„U"%4'%%%5%%%%%%%%%&%RE%/P)8#%%MC4<?ITy8;M4A=3LS10B%up*+%%%%%%2%2%„END SUB„SUB V4„U"%K(%%*gA%%%%%„END SUB„V2„V3„V4„CLOSE:IF S=243AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Ryan White                     PLASMA KALIDA THINGY-MAJIG     BigFoot@InfoAve.Net            10-01-96 (08:33)       QB, QBasic, PDS        56   2654     RNDPLASM.BAS'Plasma Kalida-thingy-majig„'By Ryan White„'Press F1 to makes something wierd happen....„'Otherwise, have fun with this.„SCREEN 12„RANDOMIZE TIMER: CLS : DEFINT A-Z„DIM c(255, 2)„ON KEY(1) GOSUB chng: KEY(1) ON„DEF fnx = INT(RND * 3) - 1: DEF fny = INT(RND * 3) - 1„FOR n = 0 TO 15„c(n, 0) = n * 4: c(n, 1) = n * 4: c(n, 2) = n * 4: c(n + 16, 0) = 63: c(n + 16, 1) = 63 - n * 4: c(n + 16, 2) = 63 - n * 4„c(n + 32, 0) = 63: c(n + 32, 1) = n * 2: c(n + 32, 2) = 0: c(n + 48, 0) = 63: c(n + 48, 1) = n * 2 + 31: c(n + 48, 2) = 0„c(n + 64, 0) = 63 - n * 4: c(n + 64, 1) = 63: c(n + 64, 2) = 0: c(n + 80, 0) = 0: c(n + 80, 1) = 63 - n * 2: c(n + 80, 2) = n * 4„c(n + 96, 0) = 0: c(n + 96, 1) = 32 - n * 2: c(n + 96, 2) = 60: c(n + 112, 0) = n * 3: c(n + 112, 1) = 0: c(n + 112, 2) = 60„c(n + 128, 0) = 45 - n * 3: c(n + 128, 1) = 0: c(n + 128, 2) = 60: c(n + 144, 0) = 0: c(n + 144, 1) = n * 2: c(n + 144, 2) = 60„c(n + 160, 0) = 0: c(n + 160, 1) = 30 + n * 2: c(n + 160, 2) = 60 - n * 4: c(n + 176, 0) = n * 4: c(n + 176, 1) = 63: c(n + 176, 2) = 0„c(n + 192, 0) = 63: c(n + 192, 1) = 60 - n * 2: c(n + 192, 2) = 0: c(n + 208, 0) = 63: c(n + 208, 1) = 30 - n * 2: c(n + 208, 2) = 0„c(n + 224, 0) = 60 - n * 2: c(n + 224, 1) = n * 2: c(n + 224, 2) = n * 2: c(n + 240, 0) = 30 - n * 2: c(n + 240, 1) = 30 - n * 2: c(n + 240, 2) = 30 - n * 2„NEXT n„FOR n = 0 TO 15: OUT &H3C8, n: FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m: NEXT n„„x = 0: y = 0„DO„x = fnx + x: y = fny + y„IF x >= 320 THEN x = 319 ELSE IF x <= -1 THEN x = 0„IF y >= 240 THEN y = 239 ELSE IF y <= -1 THEN y = 0„c1 = 1 + POINT(x, y): IF c1 >= 16 THEN c1 = 15„c2 = 1 + POINT(639 - x, y): IF c2 >= 16 THEN c2 = 15„c3 = 1 + POINT(x, 479 - y): IF c3 >= 16 THEN c3 = 15„c4 = 1 + POINT(639 - x, 479 - y): IF c4 >= 16 THEN c4 = 15„PSET (x, y), c1: PSET (639 - x, y), c2: PSET (x, 479 - y), c3: PSET (639 - x, 479 - y), c4„PSET (319 - x, 239 - y), c1: PSET (320 + x, 239 - y), c2: PSET (319 - x, 240 + y), c3: PSET (320 + x, 240 + y), c4„PSET (x, 239 - y), c1: PSET (639 - x, 239 - y), c2: PSET (639 - x, 240 + y), c3: PSET (x, 240 + y), c4„PSET (319 - x, y), c1: PSET (320 + x, 479 - y), c2: PSET (320 + x, y), c3: PSET (319 - x, 479 - y), c4„IF v = 1 THEN GOSUB col„LOOP UNTIL INKEY$ <> ""„END„„chng:„I = I - 1: IF I = -1 THEN I = 1„IF I = 1 THEN v = 1 ELSE v = 0„RETURN„„col:„scol = scol + 1: IF scol = 241 THEN scol = 0„ecol = scol + 14„cc = 0„FOR n = scol TO ecol„cc = cc + 1„OUT &H3C8, cc„FOR m = 0 TO 2: OUT &H3C9, c(n, m): NEXT m„NEXT n„RETURN„„„' -1 or 1 routines:x = x + (INT((RND * 2) + 1) * 2 - 3):y = y + (INT((RND * 2) + 1) * 2 - 3)„Douglas H. Lusher              PANNING W/256 COLORS           comp.lang.basic.misc           10-09-96 (14:03)       QB, PDS                321  11708    256PAN.BAS  'Some of you, I trust, took note of the code that I posted a few„'days ago demonstrating how to create a large virtual screen in„'SCREEN 12 and pan the display screen over the virtual screen.„'Shortly after, some one posted a request to have this implemented„'in 320x200x256 mode. Well, it can be done, but it's not really„'worth it. SCREEN 13 only has 65536 bytes of memory available and„'is already using 98% of that - so there's really no room to„'expand in. In SCREEN 13, a virtual screen could not be any wider„'than 320 pixels and the most height you could add would be about„'four lines. By contrast, in SCREEN 12 the visible screen area„'requires only about 58% of the available memory, so there's plenty„'of extra space to use. One alternative, if a large virtual screen„'is needed in a 256 color mode is to use Mode-X. This is what I„'have done in the demo below. Since Mode-X has all 256K of video„'memory available, you have room to set up a large virtual screen.„'Unfortunately, the memory map in this mode is much more complex„'than in SCREEN 13, and that makes this mode difficult to work„'with. On the other hand, my Mode-X code is for 320x240, so you„'have square pixels and don't have to worry about adjusting for„'the aspect ratio of the screen. Anyway, if you want it, here it is:„„ 'this code is a demo of how to set the VGA to 320x240x256„ '  mode and then create a much larger virtual screen„ '  and pan the display screen around the virtual screen.„ 'by Douglas H. Lusher - Oct 8, 1996„ DECLARE SUB XPAN ()„ DECLARE SUB DrawCircle (X%, Y%, Radius%, Culler%)„ DECLARE SUB DrawLine (X1%, Y1%, X2%, Y2%, Culler%)„ DECLARE SUB XPRINT (X%, Y%, Text$, Culler%)„ DECLARE SUB XPSET (X%, Y%, Culler%)„ DECLARE SUB Screen320x240 ()„ DECLARE SUB InitCharSet (Segment%, Offset%, CharHeight%)„ DEFINT A-Z„ '$INCLUDE: 'QB.BI'„ RANDOMIZE TIMER„„ DIM ScrnWid%, ScrnHgt%, VScrnWid%, VScrnHgt%, BytesPerLine%„ DIM APage%, CharHgt%„ REDIM HiNibble%(0), LoNibble%(0), BitMask%(3)„„ CALL Screen320x240„ 'the width of the virtual screen in pixels:„ VScrnWid% = 592„ 'In this screen mode, the following must be true:„ '  VScrnWid% must be equal to or greater than 320„ '  VScrnWid% must be less than or equal to 1088„ '  VScrnWid% must be evenly divisible by 8„ BytesPerLine% = VScrnWid% \ 4„                „ 'the height of the virtual screen in pixels:„ VScrnHgt% = 442„ 'In this screen mode, the following must be true:„ '  VScrnHgt% must be equal to or greater than 240„ '  VScrnHgt% must be less than or equal to 819„ '  The product of VScrnHgt% multiplied by VScrnWid% must be less„ '      than or equal to 262144„„ 'create the virtual screen:„ OUT &H3D4, &H13: OUT &H3D5, VScrnWid% \ 8„„ 'put up some graphics„ CALL DrawLine(0, 0, VScrnWid% - 1, 0, 1)„ CALL DrawLine(VScrnWid% - 1, 0, VScrnWid% - 1, VScrnHgt% - 1, 2)„ CALL DrawLine(VScrnWid% - 1, VScrnHgt% - 1, 0, VScrnHgt% - 1, 3)„ CALL DrawLine(0, VScrnHgt% - 1, 0, 0, 4)„ RR% = VScrnHgt%: IF VScrnWid% < VScrnHgt% THEN RR% = VScrnWid%„ DO UNTIL LEN(INKEY$)„   X1% = INT(RND * VScrnWid%)„   Y1% = INT(RND * VScrnHgt%)„   X2% = INT(RND * VScrnWid%)„   Y2% = INT(RND * VScrnHgt%)„   C% = INT(RND * 14) + 1„   CALL DrawLine(X1%, Y1%, X2%, Y2%, C%)„   R% = INT(RND * (RR% \ 4))„   X1% = INT(RND * VScrnWid%)„   Y1% = INT(RND * VScrnHgt%)„   C% = INT(RND * 254) + 1„   CALL DrawCircle(X1%, Y1%, R%, C%)„ LOOP„ CALL XPRINT(8, 0, "Upper Left", 15)„ CALL XPRINT(VScrnWid% - 96, 0, "Upper Right", 15)„ CALL XPRINT(8, VScrnHgt% - 16, "Lower Left", 15)„ CALL XPRINT(VScrnWid% - 96, VScrnHgt% - 16, "Lower Right", 15)„ CALL XPAN„ SCREEN 13: SCREEN 0: WIDTH 80„ END„„ SUB DrawCircle (X%, Y%, Radius%, Culler%)„ 'a routine to draw circles using only integers and integer math„ 'an implementation of Bresenham's algorithm„ 'by Douglas H. Lusher, 05-09-1996„ A% = 0„ B% = Radius%„ D% = (1 - Radius%) * 2„ XX1% = X%: YY1% = Y% + B%„ XX2% = X%: YY2% = Y% - B%„ XY1% = X% + B%: YX1% = Y%„ XY2% = X% - B%: YX2% = Y%„ DO WHILE B% >= A%„   CALL XPSET(XX1%, YY1%, Culler%)„   CALL XPSET(XX1%, YY2%, Culler%)„   CALL XPSET(XX2%, YY1%, Culler%)„   CALL XPSET(XX2%, YY2%, Culler%)„   CALL XPSET(XY1%, YX1%, Culler%)„   CALL XPSET(XY1%, YX2%, Culler%)„   CALL XPSET(XY2%, YX1%, Culler%)„   CALL XPSET(XY2%, YX2%, Culler%)„   IF D% + B% > 0 THEN„     B% = B% - 1„     D% = D% - (B% * 2) + 1„     YY1% = YY1% - 1: YY2% = YY2% + 1„     XY1% = XY1% - 1: XY2% = XY2% + 1„   END IF„   IF A% > D% THEN„     A% = A% + 1„     D% = D% + (A% * 2) + 1„     XX1% = XX1% + 1: XX2% = XX2% - 1„     YX1% = YX1% + 1: YX2% = YX2% - 1„   END IF„ LOOP„ END SUB„„ SUB DrawLine (X1%, Y1%, X2%, Y2%, Culler%)„ 'a routine to draw lines using only integers and integer math„ 'an implementation of Bresenham's algorithm„ 'by Douglas H. Lusher, 05-08-1996„ A% = X2% - X1%„ B% = Y2% - Y1%„ DX2% = 1: DY2% = 1„ IF A% < 0 THEN A% = -A%: DX2% = -1„ IF B% < 0 THEN B% = -B%: DY2% = -1„ DX1% = DX2%: DY1% = 0„ IF A% < B% THEN SWAP A%, B%: DX1% = 0: DY1% = DY2%„ I1% = B% * 2„ D% = I1% - A%„ I2% = D% - A%„ X% = X1%: Y% = Y1%„ FOR I% = 0 TO A%„   CALL XPSET(X%, Y%, Culler%)„   IF D% < 0 THEN„     X% = X% + DX1%„     Y% = Y% + DY1%„     D% = D% + I1%„   ELSE„     X% = X% + DX2%„     Y% = Y% + DY2%„     D% = D% + I2%„   END IF„ NEXT„ END SUB„„ SUB InitCharSet (Segment%, Offset%, CharHeight%)„ 'this code initializes the data used by the routine XPRINT to„ '  define the characters„ 'Segment% and Offset% are the location in memory of the bitmaps„ '  of the characters.„ 'CharHeight% is the height of the characters in pixels.„ '  CharHeight% may be in the range 8 - 16„ 'by Douglas H. Lusher - Aug 2, 1996„ SHARED HiNibble%(), LoNibble%(), CharHgt%„ REDIM HiNibble%(4096)„ REDIM LoNibble%(4096)„ DIM Mask%(15)„ Mask%(0) = 0:  Mask%(1) = 8:   Mask%(2) = 4„ Mask%(3) = 12: Mask%(4) = 2:   Mask%(5) = 10„ Mask%(6) = 6:  Mask%(7) = 14:  Mask%(8) = 1„ Mask%(9) = 9:  Mask%(10) = 5:  Mask%(11) = 13„ Mask%(12) = 3: Mask%(13) = 11: Mask%(14) = 7„ Mask%(15) = 15„„ DEF SEG = Segment%„ FOR Char% = 0 TO 255„   CharPtr% = Char% * 16„   FOR Ln% = 0 TO CharHeight% - 1„     BitPattern% = PEEK(Offset% + (Char% * CharHeight%) + Ln%)„     HiNibble%(CharPtr% + Ln%) = Mask%(BitPattern% \ 16)„     LoNibble%(CharPtr% + Ln%) = Mask%(BitPattern% AND 15)„   NEXT„ NEXT„ CharHgt% = CharHeight%„ END SUB„„ SUB Screen320x240„ 'this code puts the VGA in 320x240x256 mode, and initializes the„ '  character set and the bit masks needed in this mode.„ 'by Douglas H. Lusher - Aug 2, 1996„„ 'begin with standard 320x200x256 mode„ SCREEN 13„„ 'change the CPU addressing of video memory to linear (not odd/even,„ 'chain, or chain 4) to allow access to all 256K of display memory.„ 'using the Sequence Controller, select the Memory Mode register„ OUT &H3C4, &H4„ '"AND NOT &H8" turns off chain 4, "OR &H4" turns off odd/even„ OUT &H3C5, (INP(&H3C5) AND NOT &H8) OR &H4„ 'using the Graphics Controller, select the Graphics Mode register„ OUT &H3CE, &H5„ 'turn off odd/even„ OUT &H3CF, INP(&H3CF) AND NOT &H10„ 'using the Graphics Controller, select the Miscellaneous register„ OUT &H3CE, &H6„ 'turn off chain„ OUT &H3CF, INP(&H3CF) AND NOT &H2„ 'clear all of video memory (setting mode 13 only cleared 64K)„ 'Do this before switching the CRT out of mode 13 so that garbage„ 'does not appear on the screen when the switch is made.„ 'using the Sequence Controller, select the Map Mask register„ 'and set it to write to all four bit-planes simultaneously„ OUT &H3C4, &H2: OUT &H3C5, &HF„ DEF SEG = &HA000„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„ DEF SEG = &HA7D0„ FOR Ptr% = 0 TO 31999: POKE Ptr%, 0: NEXT„ DEF SEG = &HAFA0„ FOR Ptr% = 0 TO 1535: POKE Ptr%, 0: NEXT„„ 'to reprogram the CRT controller„ 'remove write protect from the registers„ OUT &H3D4, &H11: OUT &H3D5, INP(&H3D5) AND &H7F„ OUT &H3D4, &H6: OUT &H3D5, &HD     'vertical total„ OUT &H3D4, &H7: OUT &H3D5, &H3E    'overflow„ 'select the Maximum Scan Line register, set it for double scan„ OUT &H3D4, &H9: OUT &H3D5, INP(&H3D5) OR &H1„ OUT &H3D4, &H10: OUT &H3D5, &HEA   'vertical sync start„ OUT &H3D4, &H11: OUT &H3D5, &HAC    'vertical sync end„ OUT &H3D4, &H12: OUT &H3D5, &HDF    'vertical displayed„ 'select the Underline Location register, and turn off dword mode„ OUT &H3D4, &H14: OUT &H3D5, INP(&H3D5) AND NOT &H40„ OUT &H3D4, &H15: OUT &H3D5, &HE7    'vertical blank start„ OUT &H3D4, &H16: OUT &H3D5, &H6     'vertical blank end„ 'select the Mode Control register, turn on the byte mode bit„ OUT &H3D4, &H17: OUT &H3D5, INP(&H3D5) OR &H40„„ SHARED ScrnWid%, ScrnHgt%, VScrnWid%, VScrnHgt%„ ScrnWid% = 320: ScrnHgt% = 240: VScrnWid% = 320: VScrnHgt% = 240„ SHARED BytesPerLine%, APage%„ BytesPerLine% = 80: APage% = &HA000„ SHARED BitMask%()„ BitMask%(0) = 1: BitMask%(1) = 2: BitMask%(2) = 4: BitMask%(3) = 8„ DIM Reg AS RegTypeX„ Reg.AX = &H1130„ Reg.BX = &H600„ CALL INTERRUPTX(&H10, Reg, Reg)„ CALL InitCharSet(Reg.ES, Reg.BP, 16)„ END SUB„„ SUB XPAN„ 'this routine allows the user to pan around a virtual screen„ '  in 320x240x256 mode„ 'by Douglas H. Lusher, Oct 8, 1996„ SHARED ScrnWid%, ScrnHgt%, VScrnWid%, VScrnHgt%, BytesPerLine%„ HPanLimit% = (VScrnWid% - ScrnWid%) * 2„ VPanLimit% = VScrnHgt% - ScrnHgt%„„ X% = 0: Y% = 0„ DO„   DO WHILE LEN(INKEY$): LOOP„   DO: KP$ = INKEY$: LOOP UNTIL LEN(KP$)„   KP% = ASC(KP$): IF KP% = 0 THEN KP% = -ASC(MID$(KP$, 2))„   SELECT CASE KP%„     CASE 27„       EXIT DO„     CASE 52, -75  'Four, LArrow„       IF X% > 0 THEN X% = X% - 2 ELSE BEEP„     CASE 54, -77   'Six, RArrow„       IF X% < HPanLimit% THEN X% = X% + 2 ELSE BEEP„     CASE 56, -72  'Eight, UpArrow„       IF Y% > 0 THEN Y% = Y% - 1 ELSE BEEP„     CASE 50, -80  'Two, DnArrow„       IF Y% < VPanLimit% THEN Y% = Y% + 1 ELSE BEEP„   END SELECT„   Ptr& = (BytesPerLine% * CLNG(Y%)) + (X% \ 8)„   WAIT &H3DA, 8, 8„   DO: LOOP WHILE (INP(&H3DA) AND 8) = 0„   OUT &H3C0, &H33: OUT &H3C0, X% MOD 8„   OUT &H3D4, &HD: OUT &H3D5, Ptr& MOD 256„   OUT &H3D4, &HC: OUT &H3D5, Ptr& \ 256„ LOOP„ END SUB„„ SUB XPRINT (X%, Y%, Text$, Culler%)„ 'this is code to print text in 320x240x256 mode„ 'X% and Y% are the screen coordinates where the upper left corner„ '  of the first character in the string should appear„ 'Text$ is the string to be printed„ 'Culler% is the color in which the characters will be printed„ '  Culler% must be in the range 0 - 255„ 'by Douglas H. Lusher - Aug 2, 1996„ SHARED BytesPerLine%, APage%„ SHARED HiNibble%(), LoNibble%(), CharHgt%„ DEF SEG = APage%„ Offset& = (BytesPerLine% * CLNG(Y%)) + (X% \ 4)„ OUT &H3C4, 2„ FOR Char% = 1 TO LEN(Text$)„   VideoPtr& = Offset&„   Ptr% = ASC(MID$(Text$, Char%, 1)) * 16„   FOR Ln% = Ptr% TO Ptr% + CharHgt% - 1„     OUT &H3C5, HiNibble%(Ln%): POKE VideoPtr&, Culler%„     OUT &H3C5, LoNibble%(Ln%): POKE VideoPtr& + 1, Culler%„     VideoPtr& = VideoPtr& + BytesPerLine%„   NEXT„   Offset& = Offset& + 2„ NEXT„ END SUB„„ SUB XPSET (X%, Y%, Culler%)„ 'this is code to write a pixel in 320x240x256 mode„ 'by Douglas H. Lusher - June 15, 1996„ 'X% and Y% are the coordinates of the pixel„ 'Culler% is the color of the pixel„ '  Culler% must be in the range 0 - 255„ SHARED VScrnWid%, VScrnHgt%, BytesPerLine%, APage%, BitMask%()„ IF X% < 0 THEN EXIT SUB„ IF X% >= VScrnWid% THEN EXIT SUB„ IF Y% < 0 THEN EXIT SUB„ IF Y% >= VScrnHgt% THEN EXIT SUB„ OUT &H3C4, 2: OUT &H3C5, BitMask%(X% AND 3)„ DEF SEG = APage%„ POKE (BytesPerLine% * CLNG(Y%)) + (X% \ 4), Culler%„ END SUB„Don Schullian                  VGA SCREEN SAVE/RESTORE FOR PB d83@hol.gr                     10-07-96 (17:39)       PB                     301  19851    PBSAVE12.BAS' Load/Run under PowerBASIC to extract PBSAVE12.ZIP„DEFINT A-Z:SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"PBSAVE12.ZIP",4^6:Z&=14590:?STRING$(50,177);„U"%up()%9%'%R-%/iIiF9p.=0Z)%%%w1%%%0%%%%ht%rufw%wSirOt&%.,>Sm5tN0„U"]h7UVIeKG5j_9-IPk7+TM2j=DES*]CTIGg=O/b3Azb?PCbsPysC&Wbmk?UwngbQ„U"mj5EA<Unw/)Z:.uHgEul_h]BSVhI3p.?vp>8fs8BOQLIa<=2<r,iiT(stom=-lt„U"wT9Y57p].gxYHQ9.a4Qi%p#O8P,Jn,&U[rbDgA-+GXf(PFHb]+\is;no2J4,P/:„U"_)rNI=o48D=Qkhf$=(9d='0X:,TR[4pLHr'fm$9T$d8^oMmJ'OSiXer.G$2f&rv„U"iQnwiXO'%$XqIg(k)'^iK&poLu7vpoFVOl]oozP7.4te-HH8167U-?6;SblMJmk„U"#N=CEojd#?#U<8U[E^Mll\S8AE5&0Yv*WhDTO*bwd.RE3sR3fF#].4)vVtYGX;m„U"UA&+6k:35g348,?k^jCDSRT^NpofeHVeAj(1cjlXCT7ak4-hheC1jV521>?;l-l„U"M$N_J(KbW5RM-t\8>D:j\5Y3%whPtSLnGg=VQWRS/WMnGQX&E<#])b0X[,X&:I3„U"4ZI>,(Pn,hLzrRTbIM2j?EZRA+j[K=%z+s$4?KN;(G#s6=+]KoLR7Te,,HC&mh(„U"7LD&;2gejTbQ+zBH$l/cHY$<osMY8=:]]%sXL^Aa1D[vR^QAC.qd&#oCvAs6/Ei„U"gRq[mg1+QnAy/&?Y/r2S&;Ugn3uWNBZSVCCiJBiqYa>Be$XU/mh)JE#lrD_zO7#„U"uG^jtlq+m(7r>*0UO)Y,KXj^(:yIH#pL_#(u2DsnyigfWM4bC;HICt8:tdns;+B„U"ZQ*4U<?o3OTg1KzDA+7HnqlTH37KSMBD4cNu%wJ3J21:EaFf%k-%pc%%4BD5uMC„U"<B:i(uxm9'bLo*^JLO:5tPy57-MeM&wY+Q'1t$G*Nz3+q$tLj*nc8I5<B)/ubNF„U"5y7J4G$RKuUksA2BeMx&7CWV1AvugR1nMT0d3rg<EM\BPoR3_uGkX*M,X1yW;Lw„U"B4Un4Q[B?xH]Cv7Nhi5FmNi-sN)q3EL^a<JF$78%:?r3>GqR]ps:2X_WJigv0Wm„U".(CbC.>2=O,ps>=Y5[g+a<k\uK29NVW2+]\#/_eXxTY>3+.nrTobR3&Mkb2ri:Z„U"dJZiez=O2:joFEBp#GjQRr]+&&$Rqjgr^]VBXBD_]h4BfB2WObJ5M<a.n[nZ<IP„U"XB3iB3chJQQXaV_fHbHk9[6K)1R4C>qoXhUoN^Y[ON7W]ThRLLCpFbFoY-uUfHW„U"'_f-P<qjDz>A1gu^^dxuZ4JeD<))sS5eS#RlT$9-_a?a\OZTEhQ$p+U2pFJoAy(„U"tfO_^>,U0<6eW*W/;e=8\JF$.lF6eM6C=2*'xnGQL4V1okh0\9wdjZiK_(I.Kck„U"'LP-qgqm8Kjl;61V%Q\5-0d(E:6B^MtaQLNe(Ej;9aDN=,aMf>E9&/cjSDiQ'[b„U"$/t)D2p7+NR+mS-4&/#;b6-YDRT4-3u>x-VGUoCvYj$2+',Og]#9Dpid%up()%9„U"%'%I-%0e.iF,l)Zdb(7%%c.%%%1%%%%lj%yuqf%sjSiRrtFd<X>[k=5#XR<rNqO„U"0C:wmKG+iUdmz3iFK$/[J4#t&Qn>StA'Z[)RTfu,s^.KbkmSbs_cVop?M8]CC$:„U"Ec+0UJwCODQpTnWlluHEwiJ0aQpn:Ett<v-t2tJED_t+-%9P8\uM&+xoIWl5\/A„U"*f[aGjpdF4LqLl=sK3*cwQtnJz7;6NLTWNdCpgFi_Xi2)tsF$4PW^q-\AUN9dof„U";d<sV:6.3[aUT(aD^QfBTTVCW=dE,ZF?q<VL$omaX?'No?PxR(Y*YIapAa]oz$q„U"-Ah3j+xbZA-*FYG%Vz:bZfy40##3P$F3k)AwFt;GclFf[y5ils&]LYUVd)t]tX,„U"tL1tdTg^e,>poRjhGim'4BkC=V^C&C?ujrCta<#$hJckPlp6-9ZGYl7cqko=_a2„U"=B.-H$rL5tWS\W;=?VQ.D3U&h6+EwRvk_?t%HQk&=?)U&v_Fqq0D*gJfN%TAUS.„U"Kvka7P1vWpS7SF&-yvhMtW.*&:[_d.Tk5S]:8cZ\xi[SFuA1Q4U0r;Ga$j+^_j1„U"1%u&(Z,v5,APbeU>Clwo<FOjA=CTS&nt(o+UVQg;Y);*V#22lO&b&78+Uz^O7<d„U"UqQ-etSZo]l_pI58NaP/'9hTlIRa:bxJ4,HAV<FAlMvo73\u%<qj[/o+;^XT4CT„U"uA=3OSAYA5CwTH^[KAI)E2cpHu^x7xm3B0V-bT1,lp0#X.24CRk7t[2pU:3OTg)„U"35s$V^w^Mjr,lR%K_J9MpMfSU[N[Ke>^qbUjLnxv:PD7k?9ELDAfDp;y83gwKw_„U">%#X#[PzgFz-SyNq9;g;u#(k$DiE8L;kvg*#AqpgY\s]FGNZ,?4]Kpqqc(a^1aV„U"o>Q^J26#-?\qWqP/Rg+ljOOcDk-:lB\K=&eI:+]Io85AM2qjD%P[Uzccr?2hAX7„U"_>#CSEk#qu4/CmswWe=&1rJ1KbgS2ZTH%o.x)o>C+S[+h\&hJ\=K5gdaowVCQsf„U"K3u.E-ZnL-d<bNbV?]h7un;WWNkF6&B0if_Vz>J]q)e[3c_+D;S<kl.8[;B9Jm^„U"0-96wP9,#w(u%p()9%%'%-1%(jiRF4UY&eB/%+%bA%%%1%%(%%lf%Wknq%jSir4„U"t.'p>BTA6l7,Yx&phv[B20vK3a0HR)&PIM&0j'Qp%a^UCEAMq%1'/Cka.NDMxs9„U":LtXzABkFzJTCTR2*36U%Vw&-:#,_-kZbw3v<8mg>cM6*-nz:9$CdnDL0w3^a6L„U"iUj>LNO,P?V:Dd..0w&)-1z^$+I>EhNb;]YD4Q+i%t%WxKUz986YEl53\5ED4'l„U"2RR,?*rSkBofZvWuTc-0TSb-iMpLQ$=cO9u#L?omgBx,s'V?sqlq2?kl[/GxlnD„U"l$7XowQ0JCL5A<=+/iHexhhJ=o98^vd6TB1fm>t[r*bmt--t.8utQD0GM$Z7t3Z„U"otiy\d_0_NWq)xV%-/M3tEN-j,8L4+dgDQfeI[Q<R$s'eo&yj2-P2\5gt;xqP$$„U",S8=8OUKf-'LQ4neZuu5VCilJZL>C0$=+,=0\R=G_6G0>GgT0c4(UF8<m;v1S.s„U"g?(j-('9?_IP24\3T*0SJgY*oQpe#f\s/=;''G+;#-,*'N>kl0BANj'#**.=;0)„U"EBafAg8e[WtG7HP*avDxI<r.qg#XNDXR<ClFR6%D-;u:<=3#Th'-:IvHatQYq*o„U"<KZ6_wSd<VZ'lJH3b&qhQo&+T%r1D942kgZQUY(cs7bX#;vrnp,TXxoS<?;21rQ„U"I$$9C$ij's&p65'9Mq8hAWo]2I)wolSA$QCVV=iYG_s=^)=92B05Soip9vV'F1Y„U"_Y?^4W0kb3hPk#[-fKDio3DgV#0Pmr=0A92E%'t*keDAz:+8:-\=:=Z5DH1AAZH„U"\=\=7KYm$Z16,5S;)GJl8mSTT9r;FBvU(E'4ma^k(IK(M1fGuY';Q%H.ul(G+=s„U"$'QS#;Sb1DA'ePl%VIPfUW>ZQ#f5Ka=NKZ3#-#]Kk#4eq=)\>o/mkzU+sY/<Dt/„U"Mg;^s9jDiO#f]S++GQO-bK:*H/>huR+[L/5c9+64/HkA:Z:[0;F1DZSF0k?ZV,a„U"4^5bIM9ufFpi7m+IaC*A$j6Ip:YA=*Wk'1l*4/B&<P4HERe6C_0z(W,Q]H+F\aY„U"4q[O2j1ugO/EG$\h8(3fEr7n5Ya_mNLK6%<,krEE=B<jQb-wFWi)OG;V,[6pN1C„U"Z<O[]fxm\ZjG6I*)IEo\*li/u*9UgL\SPSXQR2G?LI+E2X\r]&hU>HgR6xsAL[B„U"[c:6sJN:Tf5$4)6YK=wa&I6_r4Y3Kd9rQZ$>&Q^g?RGkMZ\_b[nAI=^*IUktaT]„U";ia':>h')9R>dIXONIRq(_,Gb/_E6m'7l%L->#y_9-4hgc)rI.'IfSQ[_fa'P10„U"PQAT54-#rB&s$5+Xg^+2Z1PU*&,cELG^21G*k_Vsh5+&urCV]LQEEJEfE$zC(cT„U"Q+M7.u*iQ65plllU(4w-pJvuMvN&oMumCfpN/u1K=hHf0Y0sR9YQn*=k#eRd\Gg„U"vD:iMEVS5/%)?J[s\PVrj?)gdQU&aBjsLMNNu]ElEHMNR[Lo6KKK=Pv-8nn\x&Q„U"7(pL1NaCzdZ:Q'%FQN=i=8vH?a]si,2ydpc7&$rx5rL=Ob/B<tSv<[4Z)3SsX\;„U"C9RFA[q:U1an$Ea9$Mp5z6C?iW)WnI6u(ev2rh-w.;nkRUMstYSn.x;B=ELQNpb„U"C9VZ'Y^LI;SXU#ec:;?79F7A[%g$H0J?eVZu'P=>MXB30AmbK4kpI,s/vXRgd7=„U"Vs#:.\D*6lPHwa4:Maqplg$:M.6B(->*lKx^'XiIi6R;F)i:NWL6R6RF?=4tbkt„U"TMNeSR7m$o-NVuVV+)F9Sfp/Rq7D)TEC79Sz3m8u5Sh&pC/fJ*SI;[3yl\P)6LG„U"%2xp\RA].D'\-N;bh-vtF&RH8WCib5:8fAx]b^QK#+<$n(%3;b+)/JloOLN7lVA„U"NkF^V='Rj'Dx=L6Ap:ug1c?#xbj&Ud[lS\QFj1t1W'jFd=.IGMz%3+\RuWmEIK2„U"%ABl=)]S+p^oMb5Of7xEc;t1M3tAL2^'.p.vvCW6K&Ja\(*tO7_tObPm%Ap-rva„U"2OZ[)_Dt3T*,l_x=TM/LS6BYQM>7;Bs942XfLHvNjPi#-*6O'J=;t2cBMsX=;%[„U"-tN^kZzDL?)iKNwy41=rUqhM,kL:[%##&g2KouGU(#YsAUQ%aFOz]7*nOa\&-u&„U"J3$T/u]dox,w:j%FWPU]/%&2:RUjs6irn^D45YGHn^,0E=$DIQ4zmP^R[R9xcP+„U"EfFNVs-V]922<MC/R*FEqp-\#G,]Xp-t7*'%F8;blNB)_$^,0R(hTsgxts$mmXS„U"rhuJK#i;mixR.4-+P9BgZ>L;^))58]n6.6>p_eA_:U=]UDSC4IC[O&oqD]5=[/.„U"gq%gVx/2cfF0C6,02QIEyiD[:?a56;hA4LLy8LwxfX;t5iIMj<_=#&Ur=X4Vw>v„U"d7weox)E=9b,V2Y*>j-f.Z2<GCfBb3F4nrX7oYjRF8$Q3<^Krh]blVc=Q]9cEMv„U"UBXI\48fLB>N6<Z.9gCf9C*^yCnP\r/(9WxEOh_=6I%wI^HyyR3U*oGMt1GYo*\„U"[MIzu*y3Vh[=gD92nabiUAC%^rBL/vUrD^T\Rq2zWaugl6BqF4/wF[vY<72[+Kk„U"(&kal\jllY..;&>%&5aHuV4&s7p-IZp>>4j;Gh5&quNguLuc[:g:Sdfvh51_t9J„U"xqa)PG=Y<2x?qEJm3E(eNMIvY:D,nXvk]G^LA/tZ<hg^h5dOAhok8xm5\g#=Gi1„U">8cfB(B/hM37<c+WudJnC#snX_6\%hV\ztl\#_Rs2V(Jn#gbLN4tgZtCTZouUk.„U"*0f7s?jRJcak-F=F8pHtGA5n,k8^MmG%b/QVCD:qc['<LT.^5p:xhM#E4#gYh+^„U"aD/v0J??,25DC/_gr&nS[#ok3\;4j3'-L#lR=]bXxwMdx(w3_.hm<nphqI6I;D7„U"JcnnLJ)A=-(mVN]_DgUKRWBcAn40EHCPU7[e6g<Y,*3aI290:HkC\Uib8N%(43J„U"Ajh7l,RwXO[7k3L9i0g2F:Mob=;A6LhDhnhg>w$uqSs9_H;=cA](9j4(8ot+5u=„U"d;R196RG.TSq%K>zC3n8?V9P8Mkq5Z.Mr6Bdbw5GE<p\=3DvZ=#J4SO4DPDp1N6„U"qGDtuEFm,(#jgDr_:)U.O;l[t6.5O?E?rRtHD:TxSAZc7/t:Q]^xcy71,Mc5LqX„U"b>%vE?>UrCG\9l4b>&z^kX*h5*/bD,wX<[6_g.h1eM2(naRfe&MYGjkhdc5Mw^q„U"5bfp.Sz.t=t4=/4?8F-,G<4&5u.ES%MFYD0MT]<Hd#eMc03#nrk8]g5+r+M:S5>„U"FSr]1da/x8r)$x[JY\UV9-^8up%()9%%'%-%(EfiFmS%Ct'u'%%'f,%%%1%%%&%„U"lft%stkk%Sirt'&zrt]Tq575*kN=Iu5oU%MNwPFMmz?QO:\(alj+C]JI0*U?;],„U"O8^FtS9J=pgO$I[CuXxNs.#GsO(l$o<7W*GcfGalTEX,:,v]DhazP%fWHC'L8V^„U"O3RlaSx$4e&$Wdd0Y:.87;8OkV2q^4*xsZ49HI>Z$:C'?Z.BN\j7qS6\A#d>mw;„U"<;5xAm.;4n3XR(iNy:NkD%i*Xr9-;='-7ls52X%a$MVFUo2HPnZg]JW1'X++d+N„U"GpTA/22U;\UF%0\W8VhX0HCiNyKEf5;#tO:E4.x9NuTFnhudP)DPSf(8$x^tPmo„U"aatQ#3u:rDdTPDJ_3=G.hfl)3nu+q]8[SVqUV<p5'54:V,C;%z83*55f$3Q%M%p„U"?b1VBUU;#7Mxg:C^-puFEH5>1c::0?[5+A?&01HTk_35Q<'Qx,YZH5QTlQBjDwz„U"A#C>Hb]hY/4nGxTYBZpNm4;e#+&9#[]MJSM[t^D?&;#db#]+f?v%bA9fm+GG(eU„U"N-I&jX%327,(w%'Z0:*q.yNJoI07imcA>1Sd'smQmIntF/b4VfY,?COt<7kCU^9„U",Pi%92f'OH[0rn$QFV[gU(6&Ed[57lgC*M=Z/TQ=*.E+0I3DgrUdG^mWhOJ62jq„U"ZllXM>xg37KI.7&P3Dhx]a'Uz..y?Y6)T^OZ^-,\KjW-'&_b0u-.]'G]Q?;ad]3„U"RC\2;lj*)_W0eci$Rt+,J?C(GC.^D;r#wTIZggQeYpWeCcHuxg3=Ap1TF7wed98„U"3p&)v&Y,kmdG4l;E;qMR+L[u3&)TE'0dHZQSpAHAC-lD;L)2jKkBI+;D(,l:KAO„U"5SghVF^&(#g^;<b$<wZCInRUof^fU/TiwQBVNdCsN,e%.w_Z>oGy6DCwmldf)vj„U"Ij:^->FefffYFlXUN3:'%d/pr=GEB1kE*N4dcdNZ.'Cv4dsqcTZs=&FuIM>P)s>„U"W(\-YSB0dvoMb5R'D-WdEa.%up()%9%'%R-%KddiFi+(oz4'%%%q'%%%1%.%%%l„U"%fWkn%qjStIgoD$:f7Lu==#8I5<S4#0LBVQFi*-2bYFf*ZASSEsq/'%aXluS)z6„U"rBLG[]1-bkeKFmi]4Pv&RQ)q8*N?'f+o3/(0#1C5hh4Q>O1^)VI7r-Gmiscqwhu„U"pwXxr\tG97eQ[Dq^Tv;*^gT_#68kLZgIQG0iG=O.W.?LppPprFx2#;s&X-(G,Gb„U"BB9*%a:GG24/k&.YS0>Q=dq+QXQ%4fSBFsa+He#qFA7O=lDmk/1H$H%fd;t0*+P„U"mt'>O^%205TWL(p>-a4t>6u;o6wM0Yl#+DTlmoaZgCNVcWk+gt#ZC*TChR/=xIi„U"qPt#tlu(hmL+xO[gy92Q%30F(&L>R'D$b?.kJ#[pN2:\s1bD1KVNI_[3RzhkNcS„U"i4bh3]*A1yxU5heAzpBOX5pK[SRtI+b'i0yh<(q2z_VC4(C<E)(7\7tF^^ziz9)„U"ZR:mQI1EOj'AK6iN>pTd=?y21;I8;mH=M1fTqxhjvQ;7m(:w0A(CQr4w^Mt9*q^„U"n_,#g*agb$X(HQ'HMl07&Q\O_i,=[zl3_NRQcW+IW7iDJfWgutWHSpAWa1sU-tD„U"5eR$6Jb#,c=&n5Dx'$Y-:v?MIl3]^ivy/lIOvr&D8/+?-RL;tz0n0JRYz#b;5Bt„U"tPRB\?Hpb/;0T_\Kr_];\&q8fIIA#EZ,?9Hj.xhq%<up(%)9%'[%-%\#wfFWSIq„U"wS#1%%X%Y%%0%%%%h%truf%wwSzRsy^)_*>##^:M\Y3x?Y+)$SwO%nnkRB>VMaW„U"*'IsOeC\ldEUU4u,[?DtlFG%jI_>2&7&Le,_Oe#DoMM_kvuami&B5o?7,5IOgTo„U":RM12B:SBG\Z$/tmodelw:b_P4;>:(djhFD:h=7GOSh33?;LGIk:saFDo,*6G\c„U"^GtTw\,O08=3ob-(&wY)(Nn2_0f*ZDI6iC07bKqG[85\egTtsLqv:qMz2X/;nxV„U"u0PiJ5/QVvE$8D8'#tT_&b.AaU#,;j=qBRWutxhXYd'0Ai^jST_??[b(q-y2XH2„U"ng.4x:C_Hmpu++uca^UiU^M%$c,P.<u&-CfsSs80D26D:1[+*r>wA^7s<q?L:YZ„U"[RR?rITWqD86Uyu\ov4YN74ZWd:><ttR/\jL2Lpug''(aI0\KgEbZj$-N'4Xb3P„U"4JZEsk&Rr)&CL30/#c*7U;3xfl8KK_Ygys?J2hCmsCtoXIT:R[$*)r;chQP>*5T„U"d.NLcI<AFzOswnWgX5*q;NMbNu]r]s-kJA1kh/=3Ei;Um\%'\6j^bJ.cj[/soY7„U"XGm4+\2xP8T,iA7V[ViA%sxKS*l0;^V]c*Wi1OhUB5%)_MOr'ucMvoW:<B[<N.d„U"UP0At'n*BixvlS9&d9aZn*]k5*R^;ZaTiX$FA.P/Pl7Q/4\oqHEBRZRCBnLPMIp„U"k]UvJaoLfZEPX^1u*gx51L?4PNJQdh6,-]Y3*9dG;1-X8Yx=/F>$,44$2+SD(Ij„U"B?V)i:MfQtTA=u-f/*0X<.#pIoXo&al&p(mM-&jjif5(?b%.a.n^UFRYqA>M$.2„U"YQtB^L:e:wwAP4cch_GKB*,992Ze\;7-2o&9#,4JmW4E$$TsEqRGv)Bi0:m'O*;„U"*nplRtyi0l9i588M?+8\gf$$<FGb'uiFL#o/+?DUDO=4E^Vgts?Lo:L_RZb&2%e„U"lutl8XR-Z?u&i6MFQYhmZrq6rg^&/a',(4GL1WN$SlWonY#J;In6=TwI>gK6=H*„U"EolXC;4+aN].FHIN2+A^:a*[7MEOP<bjq%u<7r;8*R=Gg0<OJ;^(%ur:/Pn7RT+„U"6GLKbkPQ109hz<H,7o8KT7G\MfFIkvRTm5bY(IF2AG?UuY&=PkaIh[+moplRb:h„U";sQ=$qMkk-#1'hS5$F,v0'KBv0-g'd0:m=%wjs8<twA+-vp3>IiV$8?Bq5kiRPp„U"AzFXs[&Jgl,V(Oq*Wwo0B%^.X7JUMV11SioNSqALPoZ%0Ek)XyP;AsH6+7+<KaB„U"8qslj/So#l9vgP^R<:a^VIQE1Cz#Lj:h,t8K''\Dw:qMGtf*T>oOq/tr&HutK,_„U"b,D[tTMF_sF-SqSF)FV(r7c]lGvuxkiF53,uNcc/_<a3Cy+1x4'B0(A'-Cu/vi(„U":J,gEbNs#x%GA:5\G+3GcQ7ieY$RS+'8?*l^4UX*'c,%MM-Jq-^[TIveDTcTA1x„U"8RQ;w3kCrn<P2qN>$Y?#4tLQR:^FTp4Rt0^oxyIvV&=f'XIj*deSzf[a]8E-$Y.„U"?'=YG0w7CZa7P]EePM_-14]^4QTS3YpY&6M5$'y8*-)*saOE3u<#^d3<b[_'+)e„U"O3bJAG&A#S2SirOdOIa^r3fOM3I]1O%[)#e>8#Zpg)>iGlADC0Ut+9e]s18pw)U„U"0Ccf[aVlwT((DcCFFz=ZLxBt=k^,b>OZ1PbNKZ;EvJO&U2m;_,?J#en6?XxnGab„U"bT4$IjAmq,ouC\,A%&N%H.^g9t+Tatt;I9:]O711&V4tUQ*GHw,82I6K8-iJtVY„U".51==(akD0WJut8JRlLajX]Nd0a55?*%eH(gKz3H1SRVWzcDB:E-h\T-PkKhJ9m„U"fbH7*jMB.k_5qFCj:'WDS-JR0qp%1E7V[dH)TH4t6RQ#]7:-+iM&l_N&tvBi2K]„U"n[O\m[v-9BZzuK+sD4mG,8$2#N^M:f)mY,XAmQCTcSb/4F.AczA^n+:a6SG\U<A„U"K_0MNL9N%SotIcBSRH[Gd,Z0$lFj;g)4hPaxC*4;%nS&O2T,>4-T7XG8bE_qAWM„U"JNlI']Xpl\7s)?70[Y/J0Y\eAhqTA:q+r6ndo#KGnK:Gk=1hv:b5;ZC/dUM6Vs[„U"A&:tX0iAX9G\b#wyGi+JtaWOM*NsOES%4;x=]/u]=/lK7N9BU/EAQhL*abkR&Gn„U"s+?6E\=#z(AlK:.[;>'?*NPRUD#L0%*qL;RL'/$gIjsp_jRd/X4[Wn\P*F5$6Un„U"tiVQ4*]OJhr%(_/9FEG;cz/FMm2EmT>6Tl+jy1YlB1X]QQyMgSs,5ctAg((M'$5„U"v.&fuC$OfGfqNx/-O=j1NR^Y;5i3p8GW7AO<A<9E>GX=k;8dnELd2uZ'jc,&b_^„U"<St\.9h6W/#:IQFgaVOnOCP;PFsRFt:bVA'p5,-gt;0T>%HsH,f.UA^Te[G<('J„U"cc[kXep7PG(%3l_YaAgi)qL4oxf58_O_[K[i%%/[-o]CY?7g&&:I%9BUrJ=kE+r„U"sO92.i_&zI,\/5No3ZSJ)fD[bRY%9DPCTqY*Ur=p3UwGwk5ia[4:6(-GXAO=7pl„U"dpWvxKXb#byp:x:5z'FNPeW(I)kH^EL=V=s>$>,S\zhR'9fo26:KfS*)qj%:;=B„U"jyS:az^#EGl_%k%b)G)G8&t6E0nZiPY;6?hCZ]^V?Rv9KKA;bLlKIrbq/Nuc(BC„U"Q+q]mVp(h,#65Jyf:%)[)$O+$?)g*8\-^fUpsh^%eTTPYzh#RxqPbw3+_Alkl1Y„U"j&yC-,lIn0l3:D5M6GZ0j*xC6zG.',MT+q*,A<m6:j5IyyIOe&Du3==-gQf(3&T„U"U9>sObEGt])uzLYYfmPx^yJYi)Cng5QKd)+B(^7o3Lus[V07npiQuKc\0ydUQWv„U"yn2d]&,q6ZQ2E?3G8?XcE;B)E[j6J.&y4mpa5H$pnfBEyL'KPeg[Y>>6#6E92;n„U"xy.23SK5MQl^<P-LJq#22<kMnqoq54^)'djZsrh9TT\FFiBD8?cX[%*'8>h0cV1„U"#=_?=4CZ0^u.XY[npx14?VmU8AMRGuCMc]c%imle*[*QrBZiZN>CJTCs&juuRJm„U"t\)8j$*GOU_0q5(Dc#WU:P%V^iStla'^mpxx_D*/x]BS\TN2E:gjH(Pzo7r.O?H„U"E1C4oN^k;kHoieq/c:#z6BI^[tSdb#Gg7WHj3,z)J8igHn=GnJV0KN_sK_)B/_K„U"PX0X]oKFH:g.AL?t.\p]C1bN(dcSt98opNI(qk/uvGTJ:&I\gbLqpQgsKPNq'.J„U"h-17\;_n#];hb+GW4/LHQr'Z,$[YbgBT6h[*9D9XH^:iY#0>Kgf+.67F7D_7yzU„U"66e[31jl1Jxp,bhUkrV;m12JUff0?4p^,:LRmP+R<UrvMjL3x2UCC2f8-Wuad66„U"owHX/\1.ZuMqY,0n6*q^&_vS5VhzNelJot=%>CFx\,nJ<wT%1\N)>FNNLhS<k&8„U"g6ov.&*m&;<3&EtBWwVIYUUOs'S9*C(N*QB&I>P3QeW+.G:vm\7iP;dPvRcvaa]„U"V0rh86.u7AB.CIj]84j6p0*1+3Yr/qQBfF\z4_5540&asf9Y6HV&#l8?k5;NhI9„U"7VhC=0)bE:<<YgnSkPaFm=\gu%%Mf(yY#bs>oZeN>4N)^,Jxd/$Y]5AcYq)s;D5„U"<<vsfNTp$A:M<TxYi8eiltAlEC%Q:2#J^[Z>KGI5\PToL*ULo+(Xx4?UiX9c04+„U"#I-))KdjV)28;*R3In+a\Mzjr,VbF1X]qnkiwQK:<&9Wp&nNn\Yn1je1Z;TDa.v„U"$Ii\%crH.BnIW5K#m/f:*?ufIoImV$l*cy/LYCM:riSh&uUarP0\ROyU<DS/DI7„U"MXKTzsvmMU?.<q$?t%(fR+g5#:590_UgZ$2MxbB7rQ]&b,boEm>XU/,s[=IW_[9„U"HmkcpV[7lUO0^]\:YIBU2(OTlH+xL1SeZ5nzK_Yr43T=UfsWp_Z<5t/B(/*1#:Q„U"?lGAc2.OF0rj=DqQG=$n6=US40gE>SGEZN7l:n<.2F_P1L*M:+0>Efs$7+,$K#d„U"DtIhKDT/Z;,B'L,hk;+[OnF?63[sZ*0>3dV>xMZMBjk:IMn[MMl1ZO&INLfKxlc„U"'u#up%()9%%'%-%(oiiFC/K)s%,'%%%e+%%%.%%%%kxjj%pSzsjyFcH,=Se5c?h„U"m5*<Fm-S=&R_.E*x,s(d?&:VexyQcJTtN/9HrT>YCBFv.wc.x#xLg3dAcYb]Q,,„U"2#w0#zPvx0XCgBD5MXmHnsM-=e&PElmv=(1c0^A8EjrucpE6W0p_,n(7g4zr9'p„U"QUGzo.nF<q5hru/&nPTt40sMPHqEHF\]0v+f-u5Tb8:vMLqRKXOQM/yX/y*<2H<„U"--;ALgis9Z6kw$uE'To#rN]tjdC76Xus$^6HxKoooI?CQT\ZA%n7VA80TG/6t3f„U"Ettwt5*uxC88,Js8iD>pt?/C[/cgiYkpZaGC6v>R#81RBPSjCqtjo8hWfMl<nB-„U"V_c-XC;uXjc.pHiG\jj6EK8H]U7#]aA=^nk81-GMH(f1Y*j#9F;#pg#B=eHwM+<„U"=;>^#rXI;(;5Vp\47AV9NLW%(<0_tua*5c[xt)$92vgikMRCXDFjUS<T5#RVCpA„U"KPfqP:>Zu/+'Le;v(s#:SL6uoksXw8HTF-e$/>s<Q7aoXZSi=7Mht*^\(u/rl>1„U"863iniK2Y+k5xFN&kCTSz.wNmCd%J$yII[opRf-L;;Q:0uf8'P2AD2\wzn00=,X„U"\^x:a0o=iMEe.5J'tj<,:uErq:1IdIeelEuoVQCZO.s66-67%bdR_eJ+i9rhpcV„U"-C<5If,%up()%9%'%R-%>%#fF0m&'0l(%%%i6%%%1%%%%lj%yuqf%sjSz7syVz;„U"0:Sea=wSqaDWfR#Qppq5=-eVqq5[)LO\Ec6*:8SmrEFBY,%nF_D;us88PexRd1s„U"8E8sDFkf=)dN>ul*-P6grreJHtZUlWJNHY:RGiF%^hn6Xj.*7qrLkgeDi,-P<3;„U"I-E_#gtL2Sy=7U$g7N8f<qOYxB*]a&7J,'sQ%Pe3Uugf78O/c2rwuPAEZEn[wq7„END SUB„SUB V2„U"Mux:yW?z?7l#iuWLUox>R#a,5bCS26P8%FjIB]haie\vHa<$\[2[6mqKI7RrCzX„U"45KX>Im_ZK*WlKnSEp=<'K#YsF<)+pRJ_s7B#84eBU_?L1[(6J=V;;Pd,X)SVAM„U"r-P9;:*(\Txa0ZolD$DGWL5<S08gUYfF%/WXAf;u_Rs^'kcA3:Sfp6>?fgsE44?„U"th?cOi\u3a='x7#'4,<=r4,Ov=KtvR$(4WwYtUWI/[V:-IWOFm<K,)IBaTg3k$#„U"K:k:5\,^M)0rw,yI#,Jg&p?%eM+39a5H'#0*MS633()>VP[n__W=jB]C+Y&$*^z„U"d&rP5CG_/zZx3C5'01ZA2SjQAAgkr7JteH>_&>qoK3/\%4j5UHbcFiPEkbm^$:_„U"^[NT1a(0Q'U3OVQ+ZEb\Q,WG+RAe8O50MuI#]T^OhJ,R$#DJ5nHS/FO9dM>l0ek„U"ynh^+,]U_dQlY^HGhN+[CCd5n.G/FJ?E?yb5Bq=YHcayAyKXm)s)qfClZ\F6=N[„U"IFx_zbGro*P,1r+&0I[daQxf,:_v9g'i)p+FN:ykk&Ov0:f\k^rEwTA+#(V(AI.„U"atG=pLAU\gyfWo[yPh<#x0CDT:)uSr$D,X[Ap0FkjecD2rI:oQ7x?Y06a-h$Cdl„U"%yJ0NV5P1f?1Gp:A<e+_DAMKx)8uWs].7u,1>r(*N,*M;&UH_)#[J,O&5BHE>ZE„U"a\JLlg]6dh.$UHx56aiVE9Ww2-nuoix,)ng2pA2d0<pH\v9\1,pdma]6lk''[Q$„U"VkL(\yHg24u2?1+w1sVrJD=bT#n0Mfwf;#Q;vgO<m+c2JG*i+^VxvFSsW#j-e'd„U"t4>-^6r9.p)rBu^sUIIQR+\d?&?f>K-sa1Xw%'up(%)9%'%%-%_&(fFEXM7gI%(„U"%%W%/%%0%%%%w&&gqt%hpSzRsyF%;,^Sk^9Ll[+dUknL%X;;([)ZP'.P(hsgDSA„U"U[(.>1[[fv)[6ZCPQq,*K.wcvd[wnoepwmsXpkQJ'#=h<KsF<t2-sdbWUJGlnBd„U"Q#IG&z-=(-XdjC.nYVW\^Y,z'81tJigm&shm-olh^IeF'haucvP<[)dDYOi%*Oh„U".]6nmH&o]iF)Xdo2+t^]DX_2OjK_lkjp6/ZnE+$2DRE0PRZWP$d+Wm?m(3HH(pR„U"kaqU5Wn&n?ducrLVGneHIT7TJ]U?qn4j+:C7#qx64G<qklXAjUoiV2yea(uxT/q„U"bWB7i0$GI,Jf)S3Aa$nvaCr.1iuJn[LVJf),LhoK>3xhL=ng5M4J-rt/Iw9+-x3„U"i(-JE$,hmcu.?B$,VtEA;KM14$:\Lw9Q0Q^0qaibB8wgBAgj_Q+iB*i%>ioj_:g„U".>Jv_,RPeHZ>%E6NL[)=$7eB>k<KdMjtou.F6d<YA\1%BB-55kkU$mjU9D2&c8.„U"h,)K?7-gW-21UtPE'Pv,K:X2pWx+Id79u2=D.OaU\#RA(6Bj&LVl$F$E0FXcjv-„U"3S8D(GF&'<Qd*cBs$>Dr?p=5QoJ1O2reO&+r3<_<Y%OxP*$j(]jS,9]J*_JEU0x„U"YT:rV4>LnC4o%;RNIhuH2[)VYAMDXKk0?2r3['Be^<y2AtsOQhS[1-2M93YH-YO„U"F%Nw=Z]&xJBx2K=.TAISFIwzkZCbTZ>5p4\WGwet5E9-:bLJSGs\NW5S<PRQY$P„U"<RY1xM:'n?1,:$Tw?TDA75KNo9_BcP9[D3&g:D$,<L)^TI^8x/>TCH/f.PPVUvQ„U"lLP4HfogrfiM)[>ofkuKd7\P<X]Qv9+<O&sW_obn5lAAbR[$f;l0UtQ$W7eUVvf„U"l4vS^^(U'Yz54]Z[<5#uV$FEV;W&<]QLTs)R%\=)Q]Us;=TDIZyt[xK=h2t^?i\„U"FfE.b-Oz=D:I2bhht?sFCO*/Fxn0.2gNfJmM*b3qi%0:AcJkDm<tg#_r6K#2n?,„U"?<LQOoESd+><N(15WVymI%pzfjOTWDe7gzGaeY2d\-<??:q9,Bg/,&-m)[tc1Cx„U"(:T)pcI*m^sc5fDCkYjgEU.iOWqshl8h>efLHG$^Mw/g/)w>5x]\EJcdq.fG[W;„U"\If4%up()%9%'%7-%dw%fFY*=WJB&%%%V+%%%1%.%%%l%ftst%kkSzRsyFb:r:T„U"e:5Uh+ExV^SL[U'dA;7m=*s'*:Rj7s?obv/O2dw':k8VaXi^_OjmN.m]dhFvw8a„U"A4Hf#;<^euRumWVR-rcR$Bf0GC3x,_4B5<sI8xF\)h-NjXeiC?'_K%Ao(IF.Ezb„U")/wfVZ^FuBQ4:<Z;v/F&NgE&Dn\e6qh?(5hmw3Cb]bVk_B;YI67]dbPMA.%S0d8„U"<3Du48?'M0GWjl$yd*1uNjIs-ZulAj4l?w)sffpGB*kpRe_tzwTF?(o6v^]aaF(„U"kivU7-KbQ6H,gBH:dw9cV;Rf(LvkpNq,<8&Jv0R+q,/K%jgfappiL1Jq.3[F<Yj„U"ik<b/1p<y^uGrSC%q.%tIr+uvkj5w[PHfMaRZa/cbGDBfs0Nr&wb-?8c\Yr_eLb„U"n5iGDS&4[n[jgOpb#NXhYY#JN(#-3]J=eKGEkdC1Gopbi=QHR=*PH\T<3,3/Ibw„U"j+qfdNEaY8G%:]^iRJi9>G?dTOnE2[E,Qh-py+sXp\qT:tbug5g4J/4$39dVhdD„U"bq0]AcH)G$O(,(W)+p=_^Z7.+=/%#QLI07DHFY5C1c%]+[p8ZxVWEH'NN,4n2u%„U"p()9%%'%-1%)oi4F<:M*J>%%(%M%%%%0%%%%knq(j.ni#Sin)+JCf/';U5kEZLE„U"FKqtowKdSyo]1P+UJV]tR1VRhn^p>TMP>t-WFXfDspKdi50n-x7d:A]qm[sh58I„U"<D0U9dlY2T<Qr?%I?+L>pngW,FT[3*d3QUjFWD+#YO:\RQyH5L1.UhnONc-5t&u„U"%p()9%%'%-.%Eoi:F>IF-qO*%%%%1%%%/%%%%wjf%irjS[uqx&)%:t#Rl<w=NBN„U"on#s7ZO,1(&<eckyWHP=KD7([+.#M:7iTVbdlXW4,ikh.#>,^h^X):1'wFP.HH_„U">BSHPHG4KRO:;hc-gh4#*%Dvf$<RRC1qTb:pIV&h0['<M=YJXdSOROgo,IJlLr7„U"mPhg^q\%9-;bQD6uM-%fXLH#W:d,P<g(Q3k<pUkG6eTtrDYZ,:3Nm70U4Gf,#Kb„U"5CXE)cN9Mwco6,%e^2_q;E>hDepj;E5PLP6L^nBZJ$xA?'w8gU#9v<UYLb%4NH?„U"65&zttR<LjKRMim6u_<V45dC*+[PzJfD*3So)=Q=^Ee9oPa7=cqvbbbBbH5&5j+„U"$J/fVY')ubCn$-*tb^Cmt6ggYToC3Swm7m6dJF'WL'92lttiRJu4ZFdLo1[q(rN„U"_2t&$^%9QGrm_<U5['l4Qj8q6HU;lcT=(8cuD:%ZI3Et(**p,s_TY*JcYSTS+7W„U"[#uxg4XnR5w&2J8=9cgAWls(O->*8Cs5Wda7,$a9Nce3qBUNv?q'(?0P#fdHlpH„U"'.^=/2IPdYLRr]qHQtTJFPNf4z7dMRp_;i':dsMeOdC7^pfLW98$CXl:dD?G6Bg„U"e;xfiHSc',EG>Vaa$l??h/,,=#/x5X*Je]Hnh%ObVE:4#4hB*kuFkW*8>4X&I0H„U"ykS'1n/7H[&iUz0S=I^sUq%-.tQAW&/2)pDONDIv<S#.._LSv$;)3PkwK)Y8nm1„U"a5f01,37WK6)$u#1.\3=+=K+^FmC4^ahKs6#6EP<N7DB.,+Ld:*#<R4rSh+&$6<„U"2Zn,d'Qb]]7&/A$p:IoGxM#V'P(XQ[.rwYuek'S;1=2SRA6jg<96?Pj+mf,ghZh„U"<u960wwN_ZhQ*I(^4HMXuXBK'$_A[h^rr</+'[eq:EHNP?Pt)bD&,WvMY-&cU?4„U"[l9pb2[uk).3t9hLS5RBWYh*:G?H\4c4>HZQYawBc584j*S0XrVh]&#?=LF<:K3„U";WjT=w$Z%VSiNYjeQpUfa?FZJ&Can]hZII;A$L$'Xa..)JL[PS*CLtt\nHd=HJ$„U"([s1r73_NVWlM&-2KP#)A>(Z#ACn?.k^n.60,W.:.sKwKGO$;ZC_Kfka-Mwh9./„U"3D1v6[$6jBS[3n8IqNNuGQ4_79SZFU;^SemEl5nM,e(==wl<_3+KX_IJNib^aKa„U"p+V1(=O-,/w9_5smd9=4to8M9*jv5s$wFs;h2]CAF6r2wjaLN)UH*7=vQK0]V&P„U"%*n7iMFy0dn:o\OYO/mXFC#u115yCjf1'k_Ha^YV/%g0Jr$.tb8SB)*P6RCgk^G„U"uj\_u.^\V8>Y)iH*Lrd/BBFG-XP;Xtd;6;W<s%e9n3/YpWAOQIfWfDZ$(3LctN3„U"$q+M8N[cQqRg+ArW;$^l[iT4>c?Ng$:=n:-N^CI4k%cLS7u'&k1VpaqB,Z0do0r„U"qEjWEUN,)<&Fng47(/Ir6D$+qsMuUgr?Yu-A^v/wjKqrSrnw/wtNj0Bs1b*++V$„U"qQqAg=sq=gS]*'J&Q1GA,M$hGa;G]nSxCspmUq(S<<1Glf<7%7nYy;y5/:Gb.<C„U"V=8*KB1YTjXL7WaoM(hXX%m;TXcgJT=clLS5zIV,a=c7_(n-PJ=jbNCBa$P_oW2„U"T39b&UaVG#Y<)NTtkd9iN8]H_QOQdVaziTj,xUgi6V0T,^P6UbFFXO*IDI,3]]H„U"4#dbu_fX(f?#1[Wx[uR_Bj:WZ6dhF=43#l1dD^4Hpp#uH(I]hL5xBlK2:v1B'zB„U"uCeO/_?7hxdKPO)gRKfV>jPQNlB_21vrPb,bn/-mk$aGp+TtY0b-Sv.$1Jk7ja4„U"U$Xovdq7I9+o3h;S(lGO^H5qlYn_Z9n;^R-KVbugNZwrxqX#C<?_jtm<Pb/f>k3„U"r'u,jT^-_K*2k3,V...*sd5)w%'up&%'9%9%%'%-4%/ii1F9p=(0Z)%%%w1%%%0„U"%%%%%%%%%&%E%%%%%%%%%h%truf%wwSi%rtup%&'9%%9%'%I-%0e.iF,l)Zdb(7„U"%%c.%%%1%%%%%%%%%&%%E%%%'-)%%%ljyu%qfsj%Sirt%up&'%9%9%%'%-%)(ji„U"FO4UYe%B/%%'bA%%%1%%%%%%%%%&%E%%%%#-.%%%l%fWkn%qjSi%rtup%&'9%%9„U"%'%#-%Ef%iFS%?Ctu'7%%f,%%%1%%%%%%%%%&%%E%%%&17%%&%lft%stkk%Sirt„U"%up&'%9%9%%'%-%*KdiFGi+oz%4'%%%q'%%%1%%%%%%%%%%%E%.%%W:.%%%l%fW„U"kn%qjSt%goup%&'9%%9%'%7-%\wIfFWI4qwS1.%%XY%%%0%%%%%%%%%&%%E%%%'„U":<%%%htru%fwwS%zsyu%p&'9%%9%'%%-%o&iiF//K)s,%'%%e%+%%.%%%%%%%%%„U"&%%E%%(%=I%%%kxj%jpSz%syup%&'9%%9%'%R-%>%#fF0m&'0l(%%%i6%%%1%%%„U"%%%%%%&%%E%%%&kK%%%ljyu%qfsj%Szsy%up&'%9%9%%'%-%(_(fFmEM7g&I(%%„U"%W/%%%0%%%%%%%%%&%E%%%%2O#%%w&%gqth%pSzs%yup&%'9%9%%'%-+%dwf%FY„U"*W-JB&%%%V+%%%1%%%%%%%%%&%E[%%%)#R%%%%lfts%tkkS%zsyu%p&'9%%9%'#„U"%-%)\oiF<S:MJ>#%%%M%%%%0%%%%%%%%%&%%E%%(%rT%%%knq(j.ni#Sin)%up&„U"'%9%9%%'%-%(EoiFb>IFq'O*%%%%1%%%/%%%%%%%%%&%E%%%%$U%%%wj%firj%S„U"uqx%up*+%%%%%%1%1%'('%%%^[%%%%%„END SUB„V2„CLOSE:IF S=213AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Erika Schulze                  FERN FRACTAL                   100775.2275@CompuServa.Com     09-30-96 (19:42)       PB                     241  15824    FERN.BAS    ' Load/Run under PowerBASIC to extract FERN.ZIP„DEFINT A-Z:SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"FERN.ZIP",4^6:Z&=11568:?STRING$(50,177);„U"%up()%9%%%%-%P1mfF2s%5pM+.%%\G%%%-%%%%hf%qhSfRxr^(:r>T]a56<aXDQ„U"L+DYD7t)dlYV_;weSZVg__i/7j6%9^u7.z0tmmRn>kcwsJn%6p9JkN=,-M',3g>„U"i#Z1,6W1.H?la0%FK%G^fSYwAnL]0nK*>i]LLB*H,b*'tmrMN#HV:a26P[>g:oO„U"RL7V%_iD-_D(C_Sq,irI3F%W7UB]#iQ(?uA5%5V3DJcYNL?nbsr+d9ZRK=,5WbX„U">;n*a>AR=d=2[HPLLM$C*DZ?8,[bqD\.sCPX*s/g(6p6Tkm,KC*I/;MK1lYp66L„U"up_ln$tFB4lfu7-KHmKjZ&xK?I>fI8_AP&$+N#gMItgAktnI\NIn_SEarLq'uZ7„U"qbHB>BOI,NGmBp/kGHmf-c8*HnciSsjj\fk#4/F/<*YJ%MUYE'J7htj.bj;gzTU„U"yr^?+=VK8_\ey38po0ef8\p6<H3L2R2LgrZT&9q'*hM(P$rk4gWu'eV[EI'[UHE„U"^-%q>Fe=0F*$I>df8]JeCBCVl'kUNQDkFck0;aO=n9C][P]1lI<)O36[UgqY*.<„U"KqVe\JCl,uw$kaIw,<9T40;[f7;h5?BG-Yx]nMrdMSp$ETA2[lXT0\oL>bAqtKJ„U"8oL#[tK4ogjCqzV=i?6O)(facBXhJI/KUtuL=uIf3b>k'TWYgX)>jr0ME&B#J6-„U"m'DEEI3'S6bb;&qaCRhQn]?gTFp=9Dwu+g2xgEnN7eSnqg9<dSr1K^X^2Mh#)U=„U"y8-mCB*Mv:QT7UY&9>J3[EB,MupagnnCgr5ME.:sa)pl8nWx-gdz(xfRK9fQ$<8„U"PSEU_Fap_Dr<.=ZH&C#t36Bu4zba9-No3*TcQo80M7X'7<QlPq0]UT?]6G1(;iE„U"RK_&XjAn(-'kJN/ws3,TWT=K^sjRhEq,%3LtTo4CYL8/MLYx'[XT>\O42q&lO7J„U";<4mZ_I;M8jxBo=86Cf/T=:p:*Lz*?c?-W,Ce4xw^jQk09vEkGAI[U$$+aw?Y'1„U".=)GgMY^Lyi%R8zm.B'MY&pYykprJo%2.4TEVMD4TaFJsNH^MWC:W_20j(4M'[r„U"xCt31]gOl[d;[Pf9J$Xf#F5Ye6vSr<l<J1L[v[1EQ.\R)di?fns9>ZCS7dAUd91„U"BCP%?Y(/c$ShA,FJ'x.;3W+s%kTjO_k=kcJ^=fEMDPv(C(<H4D>C(IQkljD%=gT„U"5-9s-,AMRXH[o-OBIGFXh8eITc1P:J?uZI;7Bob([4FXB_G(/O<:ASl/8A8cSm>„U"k09w]A[5*S0;u&$e,IeBO?B5yGu*HFE57RAr%mPW9h9r)<<)t)[.ppMnnENK%$=„U"#R<)tWf9gqnCG8NDSu*-8u^-Wb]N_&h3&vV2]dsUdOQ6B#)q5;B=0+Nzh;(npg'„U"=W3NIf9*kuJ)o1XZ.kl&3A<naP=6CqWt4er.?#3=bV\+&j3v:c#+#[7d.JaVk#<„U"PAXk>+p%Q-9V]8ZE?=Z(d-'YFkEn,)[^LN?m+XQ[;cB^%FFyV[]g]*=c5o/<#\B„U"=Nn3+S=0n7F:KO>^xpOWTixUd-V;GobDks)F&OmGfL&cnnof3qVGS%\yjVY5PXc„U"Ji[tY8z=,4;>M&BQ1GbT784STI[mztum58Pkx,0dE_xMxJ\Pu]5;R-ekr[.D*']„U"lRNjrPtB]s00Hgp[daZXYSCKLc(8l:?yM\(ii=*($^ZdGl1lSXcq._nj7LQYCMh„U"^x3dk_*/IZ)OOD-VD[$[g3\hnN(DM,Dn75VvD#(MW,m]FO:&B3c)xJ]r:xEe$Qh„U"F5^tY,T*E.Ku,nL0X(c8PErWX<6Fp)rh#ruqRfp%XHt+v1M$hFrib0r'Zv.N1f_„U"RH%re*iEm)kC?L'+6;&#wTo+niMQ+fU')'GQ-$i%CjCoVMFvV+f_8\H#bY>#nb<„U"Od8:%2-IF6gIRT&Qcc,F%faJ0O.szS2'.7n^iVsobXLo\eT8*ro3\L%;cfm.Uht„U"7RpQze8s$:^foSKdaIWcAvs0,)-k<aIT=b?HTfp;M=Gp#jf,78lNn9s(_YGs]f&„U"N&up%()9%%%%-%%P1fFtv]$(&o&%%'-&%%%-%%%%hfqh%StgoCb_t7$L/=?/nY8„U"7<\7C=L$HWfhXfPGMbvUuEX%-<(N($5Y*/JoiI(7UnDPm)ZI9a/j)&fcENRCI?A„U"51rX4[IR($gO-Kw$WR.ECcvWOLb/tf$vqu6hl5CT.hQQ15',Vm--%by/'YPa*).„U"JyNy4Lz%ey5d3q9UODd=NfmA2-sSh$Y]=(\uaFD$<'[Fwbs46YjsqK5Ef]F)%[w„U"0+5fE9NipPO2<PW)q>EMIyah^gR%4#%<243&)u(F_,fl^v<APDk=H.\%BjfDz>D„U"+IFtf((&S7<N[mt)PD9Gv,&qA6zHxfcnIq34E[GCFl>Pkz9[FjFjSR-c7&(]E$l„U"FsHglp7c>pX_bLGr5hQfbtnivK*Y$h+ssZ=r>HtfiU]'UXN:c.a.VOt=DdQm4Rr„U"W^6u(E<x*-KY4J^rEnCJK^CdnMIa>=gG1tJknVs<hR952]/,Y\:XvLCRoKIexlQ„U"ua^ihJjxak>R6XQ9d\8/A\dg^uri\2%]WjHK:M6y+J--d/40m]\s9f1/Slvj>Nr„U"wN%up()%9%%%%-%Q1%fFt.6g*S).%%7-%%%-%%%%kj%wsSy/'yDz:rB\[416:kT„U"x&,fCr5aYrf\8K+hd]nT\q5#6Obub]K7I,Jpmdsnq]87d%J60-R&3[pnP9<nJ%m„U")OhAtqFD-_H/d:sk8JF.$)Zr]?gI?Drr^Bki'$hA2U8'l=;_kH\k#mxTX3Tf8s'„U"pX6pBDTgff]P>iuE$EC\z]iqCj4l7#3;=<9hU\-;Ko_POCi6_h0+Iam8(iH:=0l„U"I.pVh_Cx7+=idGeJj]qjD%7T$<gQ*%RjR3R.C%a4JshKxJcqt>(r3n$'E7%'[5l„U"9+i)qC91EyIpMe_ha\wm=][Z*3q+Qwxp/ZJ9t<:vvtoLV4Tkqp7\p-Mw)oV)'Ot„U"Nu(>ZPX$_(w_\kBW%f20e8>P$-94.KGMhZ042Ko8-]-7F92,^HDH<F>^Z-<jl-R„U"R^-WV1*Tk1fKce1-[P*S.hW<)DioGM7/OostJqegllE??MWe33RE6x.cMU+anrY„U"QMBt\&D\*G2A^+q6Y?GMxW.A.T<jhSl$RrcA>S9pe-:*O'n9t8QgZW?7ZF-]p;0„U"T-)]irk<%jSG+i09B>PO%(vz;7xnbv:CJA6f,RP]ekp$gSskC,bbM*:\_>/[1O6„U"8h<2_SgI$k5A]1LID.j'^$'ZhkKeci9C5Y)(ljw#$$_flN)9NlxP<-&;BD'j+<r„U"ti;UKPWL9_Fh&77AlhTl(=MD320?u\YL)b/*f:LADf+<OG0>X/'xJ_,#:HY8a)T„U"OiLO7=:c3oC7_.ZO0[+aI6r9qc8Ai7,m3VZk[c9xPB9)kt4ZP\HA5.6)h)6_PC_„U"7nq<gl#7iY7H.I^cCpF%)g6PUGD,P=2tSmO1b3+PT['5Z'%)i8WrUbYM0Na[-uG„U"d%a8Le7EhGbTNsZ3wr:,U4+*uf?G3a&Ty1Pe2f_Go5I19TC<=\KG]zojX7W+#w=„U"KdL]MBIL+&<7U,fH79p2JjFYEx$A0Nx'd8mf9SUW8_\'==EbuL]SFC<?tdTunUr„U"M7bXDl;i,8#r7^Nu%.xO7G(2sMl.)CCen70fr4N;Jq_P\)J/qn[2u>eA45,S04K„U"lewaZO-/_]Y&0LoEccIJ%WcFnEO='_h%u>-sJc-Nj[RH_M5,Iim.Il[Q)OdJ4iL„U"E-v179YmK0McKu>ILf%5L+.mt\,Z:M3Q:X.0Ip=WQn&&1M/G(6.MHRR92?X3D&q„U"fen2R?[%]0UOaEBg2ugNJ[tV#D&i10FU5c=[LQH$s.dXc'A&jQKpU.,69-N_XB<„U"JorXVNnEd#5LoVzn4b6jBi:,([\hUNG?WBsXn;]5Y_GrZt[4kBodgBk]RZaw$m2„U"Ur8WLHX8HsUsJLM/II'K3UKL]auCjfW%cQQ/uNvjHlgD,1#r*C'c.2S2P5&rQYO„U"FRA>Q1okWLa/Udcs8h/T7#xMANf^nZU:GA9U2\+,9$agOpr7+;>.pPn)k;K,&S-„U"NW1]2^(K\/W>nYU<BW98E%cls<#;Z#8jCSyBS6(q7>l'x'up%()9%%%%-%%Q1fF„U"^NC2u%y+%%%t<%%%/%%%%ukjw%sVSgRfxF'8:x[m+<wQz$uVxO1Uoqjg--5pBF,„U"S0NEYPQs]G7XVisJc'2zS'ZtdpkEg_.]^s\3OLs*dkogavmubL$Kk'PEP;yd3#g„U"I8kR&x#+.aQ;=KeJ3EaXl'#2\GrH/klc%&GKat=NYqt-tkfffWNB&S)e15&Z<J1„U":8P^roeOFqf-IZ]cqm'?.EjNB5^8,DIClnb?5/)/no3&n#KP82sbRwzxJU-wJ4a„U"=T54VIJ\>nZ3$5Pj?megEsW-o$nt07*S5pi.QKuZleg,]#-D7>b9Z(\+s=]Mxm+„U"RM/\c[cI#E3$=8bue^\sQO1-[MNp#bGU892Yfs-.p'.kQTGa7(S0Y*mEPQY]&1\„U"m0qT\BMFU&7d9q=>a3^]SG^uns#Oxa\>cE:Q0tR].hH2vE'8(A,ZZE<90Qj3g1<„U"W+dxYrxFEsf_lQ?.^='4[wqtijw>8-Z;lCjT5?rm)],3*vz<Y#mwK_nC)&6<Uru„U"Q_?<kgj4l;*fYV7IjgI[o.'/p7hnH73(9qUn6U2Vq&0;]^Gm);iKaXw<ggz<1Hc„U"&x)13\B,acph*ZZ:X5?pSa0bj((_0\KTrkaU,#FKmr:rMjcVDzaTtE*FY^L^JoO„U"<Q#i$lUo'E2TD=+e%b8_mO&<vXb+Q4u1V]8O.wP#j2%puBJ^EbN^IXwMY(_oQYD„U"2JD3-k]srq29apRSB7sn_JJHvar5+'%w^RF4_ERhL&gn,nLO\P6z;^)4jIrK\d<„U"d67u0ErHQQINY&'LynG9N8X0Z7Y')>(O-smpgAu;ZgRN-lc.I5EEH%_EGA?S]#)„U"ca[0i;Y4fAzIzP#W(x*TD%jbLe&k]k$'mWDz2a>kO=iMh,#9--2J#-,zj0&uqR$„U"vGi$1#F/$M9jc*7L=oac^=JMvW:.GwmarVVIW;tz&_*Dymu.hHPq6b(nirGCWiq„U"E/kSmgYsk.5iCvD_Aw*#4j$bu8&UJp^3pC$Bcn#J?$Cl9hlFW0ld'0;4sSJ9NT$„U"0-Zfp4ruwB1pfPch=/B(h_A#%;qo_2mwSw$N0PELRp3dH\(-=ZLTnPlPZD0$:z5„U"dZG/\=rx9(?bZ&2uIF%?%ZO3PYWKzV6>nko&CXcOR/I$Wehs&g0&s.3trh1D0^X„U"()V4yy=P,wy]PruS=j6=Rk^=-oHk&-KSH\I'-W4N<*B0*?Jt5$c;ac>N/cGkKYe„U"+9)^;by,2[:LO.9oG/qqfT$IHgST(i1fe7VB5Uh[7Zig41u_hokaamO8,9L.Lyg„U"MB8?S[?hixLtr3EO%Ot=AYJb=uDK7f$\1+9)Ru-nsDFmkiurwJ\eI*)'vW5DTc8„U"-)MoZp]#AW,wJx5&PZOXex':?4,0FzBsi(Db\^pkV%KDE*Q.A.)95o&cRV:)9fC„U"jHeSNAkU8gZe-fAGBA;?Z0lRSq\ra4K%QH+ts#-V>hjCu['1PBAfrq/=w)RZb[=„U";%NTy)Yd4>bS+*m$6(eJ;'Unbpp_aD%DR\TN:Qk$]ivMJ+OKnCL8a$jR;Bx152A„U"X1Cp-TH0Myd*2;/,;*gor#85:bo[oNKo=UJ>8.COG;aYR/x6Zs$w[<T0YI>Q'-q„U"ps-&Ik#wwNbHYe1fATfZY,EuFjm's>8=7e$sIPsZ9g?+vcoFtZF<po;[;pCwcQT„U"H;F)+ED84+E7+C<bpQiEGae?,')8U,7c;Hm>-&qQj?mXqhXSw<J[o,yiul;oW_4„U"KZXu1+a;CeV>AvKMjEjM4vv%[_Y/noTpsfh8g&soXD-vJLVsj#(>sWQ>^^FWPEg„U"Q9<#,T,N-9^rb\&]/Q*&GUa_(SBdv_1hVzrr6ZsW(q,s*\V/6jQ#0k/799)kRBC„U"a>YWSc.^:jaW&MjY;B6KFPBN)Dw-9eq0xQ3U_=>4D7_SCp#%j9%nU$e>?3KX$J2„U"07krhJsYBpT66M\HIR-v'[wuq9NG^U\9DjcG0M^YUs49>Y%qFrqmAQ_ok(8MIov„U"^S..UHrg'ee'QdHciAf0tsoMeD()<>u++.Siei8j.V\A'ZPpEKV8psn=H1XUGhf„U"b0M,WK&Uh(\$xP1gv_yhHNmEAC0?S*9>,rUAM0y'qTup%()9%%%%-%%Q1fFo&mW„U"1&y*%%'h5%%%/%%%%ukjw%sWSgRfx>&;<B[[F5wA5]q4$EK^E\b^&kK2,:r%k:I„U"=9Ue/SFv9K6/m4a*4ko/(mP\&P>#e+Th/0#rd>*%dDbWS,fZFxhA=RyPnOpLxA5„U"1YWH'$D'esQA9Zr%z5W&$x5ETLfDz%3W(b^n+\FdNDrrrkI'dK[wRo9n/]g3'Yq„U"cH3YP#K57C/Er0H*HCI/a#<f$v$PPRS_^cqGsW=O;aFKb33A\l8J1mOKKdT-][0„U"RemMU6LKj6X9w$PPj/Od=Cr-rxIKL%t*f)]K<snKRGJGS/g;VSE4]h[$Sd_Kn9a„U";E.YjY^TaB_)u*_taor_Rn*L>sLL+F?Trx*E1pu%.PKDSfhT;F;P?[M*40MGJ('„U"m;/iTbxf]1JOneAJ'C/K2deLWl]vTI#HlTwQpRH_nChNps'xC5C0ZGgty;SZRGK„U"piu/n0[$mjdq)mWY'9?noAyWrBv0SM_51>?6d(OXr0:V6/qfawGT=P74C^p:84a„U"iM]_&Q+$^a.aIexQ5870-5AdiYc0'p0:7Ln)-IJxk#ad#HO8dS3&i,\7,U2F6<b„U"Y#n$Rae=qn'>Ux$[Cl/qtK7^(YakOenIH18]B)APFQjaEg,Ne.w6mSC)rtg7>,'„U"'+clgOtgkG5-hO8He&.w-NhhYOgoBbxnv/mfa6Ikdc\>.3FQPp4Ddoa$ebm.T%X„U"2X1,;=T9t-H6KTUTF(b87QFY&r5)In$HG?IIDg&Lo?i+1X*6uV5h-ej]CJ'Q)v;„U"4N>Q9Ed_i&FPZVCH9MY)(fTM=orh.+OkETu0:#'/*ctYqFEj)2=A5qQU;M98>Y_„U"&:5tUB/<Z#.Gl[n#'/53fP?cS5]KEGxQJMo_i:CFEa6]<'M<pEVSRY2nFHW3Ys:„U"n9SYez:TuZCF&K$DhixUQ#f:^8NTjc#5WS,5L]XNFBc*T(u-F;vm0cJ+>awQ&0z„U".2+9,[5\OV\j^EQ\6s[Rw8&VZh[Tnb'ZEl/cW')XuH1q&h=YcS3UA3uWSM_-l<4„U"iNBt)$\W/>ZCn1=?,9'^'QzF\d8:*Ql7='EBpz\rf=LiMqpPM';n8m-XT2R>7\D„U"O&ww%uW)eNA\LTV-H_b=:)0Q]\$oo60;)m(bn>j*RR(tQT'L:UkT2Q/*\a#W4ZW„U"_y8M4?x(-]$RP?#?PfW5[sKC#HyO+ut4UJ7Lc,Cte#-:jnFFRoI>=tkpI]/LRp2„U"sdeA6kRdOVpAO?Au8Z3^yNfaQu'%5*Oc5,k)fqL'DPBOnFB^W0KkcAU+\n2e_W4„U"od+_'u%y^rw%OwMzOKU'y;.*V+o*;3oJWqDp,0s(&q:pAVEq-'dIHz0c_oQ);L]„U"-ppnNoAM*bfPO_MX.CTv];U38/yG+&Q(.Qw.RtTq)U**[whhu_^$gl^*].&vs0L„U"\3]H^3VvzkS*xe/if&0kZ#U#ij$e=Z#gR]L8xFG[65laAQ-jC1);[*c0/+b4>D6„U"TWH?L=.)2e$1ce.>V/V^*<#R2ed5HT##Zdiq;oDtoYBt2'/b&j68NZvp]%X:IT2„U"xaR183[)V8cYjJ(oN'Gpy(SRt?n+Ga[WH^44%cLZCEGeZh[pLd6S6b9X2LB9-lA„U"I44UJ?\/Hi]n)slYXT[5(Z&UTLop;'^n;]/37S&LU.2NxtEKiz9HH'IVjsffmPf„U"S[HOVpbiK[PlbE,&PG2^>\_o\c=DEu*]M75Ys&7B(.]FqP]GW#wxCo1FR)jy$Fi„U"DleGjLpbv^#llmg=e?LeF<6Q0.'C8G)>[J.<lPkRsa*fri0(;7]Cwn\Z=b\NfM0„U"8?h(yG7K<ash[LQvC(eaRiSkn'NumN6H5AI*Pe,?urTvRwre;$F]cD4s&hueWLc„U"PBI*ukq,<;\9^T%up()%9%%%%-%Q1IfFL^?v%(,%%%_D%%%/%%%%vk%jwsV%Sgf„U"x3N(<x]\]7wVKxCN'anBIL&V\2tgZ^+7z&Eq/9XPo?;EWl3>eX0r#EBC?Ye(du.„U"]PYX%D]yS52QeQUvCzQ4N9X5:l9Y_ggU6$8SN^)F=qbV7TsmC+04>W?-4-%PwrM„U"<*,x&t)*q5ZWusl31+MRZmXU^r(5<T^V+6Hh)HSL74M[(PY9jPW025leK5;FHwg„U"SP85xDH/['.u618mZ#H2-2\3B&jG<qfgFp_C\lYnz8P:VSXhU.P-qCgV;G#4g37„U"XvN.^=?ku+m5Q.JF(.7Qg&7sFE_NSV9)^uV,=KA]LN\<N5hKFUb>(tenyy0sIO;„U"n1N'PrMd(dyH;Od+nj+nSZ8=Nk0(AVW#.*Q'b#:w(/0Pq4PJIV>tRBMufUwq3/<„U"Jy>,#;]5ET5YY^Og(#Ungh5)bk>:r$q8tJQPj%17Y7nBgS*qo4Ij7k/dDjeyA:e„U"(S&p^(efxK,hdZ48DU/0&:Olnf/qyxeO[yPqm_r1:o+;AD([w.-Q08U-Tn.<1mP„U"bUapJ'[45=**KlJ0M9]vZ83CSuQ5_[-:sKa]Uf)'>.:9KcN)(4h35G44(UT/aRd„U"J.rl5IfIUI#e&b7dlsljrQ&7)E\I]4[[)te'_Qs=iInsj25N=bjjndU>,&2m=lQ„U"O90emwnxlsR[Lr%nX9452Yfw*zEb6T1m=>?bEjhy&FGZhD%.bc>mlbJs)s&hA&r„U":UQ7xPEtdZVGK4b#7/;Mo2m$%Dn0*T,IInvy,i+$]IYKKmkKR[1F#kaH#9Wi84i„U"<fY$*>\G>p$$Ful+kGduIXTdN3%DlWg](7sg.Ab>JHd#l>aMD:%nI6tgHmsncGt„U"xCVNjIWqA/m:e\]4YW(el+F;JQyVD\;'*f'XQ*3O0$+chdU.7S+P7'Pi^%0at%%„U"IxbfMoXyw=f)[.(g5/Y>u'?xpYuLNNN/C#,,orDo,$]SRSnmWig9==9&AMXucc*„U"6buR>3Zr-a5dP;<Z'^0p10V0Qup1J^lX1J*A=iD,p/Y2%aua17>Waas+9q$^V%Y„U"Wtai=7WH8W,J86kA3n$=n8%^=SCjn8y/T7k5cw,c)c4Ya.Kug3(H5rK%HepIBUT„U"r%2FlWH[kscpYaHdE9BH/QU1n=(f5GBq_=]n0LPG1PQX^,lVsqH.Qz42&j?'k0Y„U"1eR%4kd:[jbW^8d<DPz:7cWO<&CHRNE,=hT;4E=eut-n5ziP$D9y:Cuo\Vz&GYO„U"v6EB%$&<<I6z8o'7**gU-Tdf#yE-)_OX^1j+KA*fKq)lawDO.KewZe/)sx:tyOQ„U"unBKM:NZ,\uXT348hHcwcdkRdnQSm91Vi2IJWT'7LCC/JKm(xl,g=A%mY;%5c>R„U"a?.G]snVd2Sv0krthR6Cucwap8apJKO4z9sqGzDxMOzM-ZT%N-t&dbF>W%+u>Ee„U"Jp%)z];%p'6Riz^iRYbA&ein9EevvoGy(7L#K'U0;q(w7rMbjn&:ZB*U'[qE?)E„U"K[/A4>)W9Ns'lZ/0o9>Q$%)pmlRn-6*AO0iWiE[z^i/iJwhcjaN=>k-p7.Nc[rm„U"3H^AN4]4f==ii+iX1.m24Jw;88b/ZeWZgDbf.KUlqQejB6Sx)1Ntlw^_Yw_5YU;„U"]DEnc4J*0OsJ3A]6+R%[$+'25MO*O1PhY[HFGW5gBT%vT(h;v*F/%gvnmn?+fVt„U"IR[.andg)sc+5J?'9j3x8;RkWxo?_$^&\5Bfv8GL8=x+BYT,GaS?+Pi_,aXjLv<„U"j:Tbq2es$QpVCd.uh<dR#<]:>krTz:]E)h<Y.J7ja-\e\Gy)<hU.PI>S+%8ON?c„U")Pe>l\+]eie625=l/DTTy<d;E3:R(HDIu&RRVNnN'jS#q4(;nF7[I\4EF4.-yxP„U"$p,WR[HJ2S-g^gG$mc\7hQ%VH9AfK.]d'DXw9vwk7QqZ_;o2vk?>B1(uVc5cBiC„U"V=[3;COs\]k&o$eXF)SADmPzFhRj$?39*XVs_?<jV/Y+MX6SfY<KVu?1;eoW]S5„U"i4^J7yW_S#%J9Jm9F>F^vOr*fCSa/n/GcPW#RGL_WVRJG[w%M^[q^h0HOJDCWf?„U"GO78>#LOTu\_Wjf=Y^f].29^y5Ngym#(-Ad;ZIP,i[zr3>rPI[fKe[D&Hw^;k]^„U"'=_brdcSxRcjaK#?Js'#:+6ihPz:r]FV,1Ox]$hhAw#TY^ycHU&kIbj+#QqPK%f„U"b(3tf'S%UusRR_'ge.nkzfC,u._mXR:']e1rfn:HniKpTfh\oepO;lcHZ1^dKJl„U"U'R04N>U4Tdpq7&jZuKV:5:i<Un9Zo8.Yi*';tTY8AB^RWiCE;2s6W7Z-:]Eq<s„U"^A0KRd3EAl<)?[)i:O1eG0l$t1sQ/)C/uAxoCE%uCE?Smf8:YsHCRIi\DSErbp?„U">T:w3KSTm4?/xx4iY=9Gukw/u6iHiqXTeUMA=WF?d)Pn40cu5:%v+07SPQPwj2=„U".<OH&)=7PKL]NYZFy8(6)djVa.585Q19Z\ltflZASZoq4l8eA&9ALsBK,X-KVU-„U"ax%u%p()9%%%%-%%Q1fIF07%*I\/%(%'L%%%/%%%%vkj%wsWS[gfxFk)d>TR]7x„U"K+&kd5<:t/8SuPRH4]bH&ILv)2WlQ\E9pue,2)q1FB+ImCOHh.N[AcIJneBp[W>„U"l3:eX96_Q#Z?5XYE.B,DTD_?abdJ;IqeVNA8Wi5X6^viKUnGMM:FvC_9mXR<iHw„U"thlPlZ>08bqOX05u8JTWl>2HM%2no6njumn>IMAU^G8o_I>G$V)M_YEi\_5aWfz„U"0<D;+,R.$ii[d?bo\V%\AU>Qc#N/1NXW'wUJQ/WH]abkJq+^=:;+$birHn;w,bP„U"jFs;,ypf=Tg\fb_)Gx[1sQWG4\owyVzSCDTvHi7?54l48MZ?XNXvx/kTKG?qfig„U"gdePrHitwV7$nVtGE$u943.swk9?mC5Qj5c5e(2#eWtYq#.YQXZ\?TJt6FGHB<g„U"D9:K]igCCk(Nb(XKZ&[06?hpG/B:Ao[6:892QJSp$T>c/dQZ5<9Q_Pc/$sT*p6(„U"QCXX=48.aHe#TO'JANoZds8JBa(IXw0;gzT#(A0u)k6UJ]r,sOQ/YylA?Cq6RxV„U"DO]Jy5hEgS%q3,)'hBg0f%Lm\mthq-PqK1sk-.f\tYB[ocY.xTW-N\k1.R60Jk9„U">F[t4Z=fIk\+_k)TpNlbi?gU>j;q]<ZYU]Akr^l]50wJd58-&0R][x)'RNnW+ZV„U"lQdww^RQQwL]-tVP<(G-_]Cs;UGW&m]-qa8cu'Vf9ThNuCWG?42$Zrs$=H-f:jQ„U"S)c=ltu1/Bk<ngSMpDXc.)LE7elv-YJbc(<?*LH1BS]u\%l*NF*6EgbZ2I^'G&&„U"_T#<l9B8d'9%Nw&]cG^/2W4(8^Zsp*+0hv^hS5g]NcDvRqL.6GT\9g-kO6OXXdJ„U"eQRdAvY]]+7g#3nlvf^D2D1\hb.K/tOiIqSI9NbssE%.inG.FKp=U#-mm4Mt4me„U"T$qHOf?7YPqRC+TCGQtcQcy_uc^1\oK.s]o^<6$ecIb9*F_#lUQ\<_IXuJ-)#o/„U"O1EW6q&#My&ZC-^K>yCmRn*s?_WP4HX1Egq73fc3T3)+\*K4:b)^?,d0i0_l<gW„U"FzDue_5Fk&rbDSvC?#E;vbZY':JFgp]=a=>9sX#;D*$GjKN\1=.>rlL:3%/%Mt.„U"BUX;6B(eH1s8Zxt'jQjnImGih)I*Ugq*W[S,6*orOacb(iA9D.nsLZ\4[L]$LS.„U"vcPxWRZ$KRui.b8a7&&MmknyIAn%[_^NR^I,;?;h\iEhnVur'8[\p)6s.GD3i)L„U"MUbmMl1z*[vq;Yuh\])<t6&;sW*T_f6YM&<)oQG1zrfQM;zmV6U*Htrt)F?[c[L„U":+Zqb0NwcJ6S-S^XQ.-c,(pgXD^\mh11m7YoGWw>u5<FJ;+oW/1HIE4iL+(zQ*B„U"*uQH#]&upVvDD2#ITPT?dGTH;A4YL'UQWip8B)%VBPd\$rw>_&S<BWpf'-o43o3„U"8YXjaUZa]IY3et/SYf=1l^uUvL$\yR;x\&X/_'prbq+Qd:q=BA0Vb+HLRx:0h.^„U"%7TH2jhf9)rHM]iYoszj%o*+6:9KHYQ3MPq#oiV^oj<SgczKGKpqh#TV^%?G_IJ„U"[R8cazWFgR;sdaZ,6\;ixf]q:)*f*=lU/s7K'XB^IWpQocai]5qpi+&+xxE_8rK„U"PD'UQ;r09#<.toXL2V*1]-c-[hr&EtbEk=d,60TzFTkBZ+6>d#3daj-'j-Sv1Up„U"cbdPZFVMsD$n1DSz,V7B7_s<9jN1a7XdY/rv_jL2UQ817v[il%MU.iY#Woj])UN„U"n8(='%.6a+1o'Y9Ruq;I#BwKoD%61)ueC%?tW\7N,lMWn4j=xX2*<3db400DbF+„U">*,g73I)#Q;'#.bVd8hJ1-7vLW7t8jG^2:NyU&tymb6NlEhOo]f;r?Wt+OnY;[W„U"q7vp2%KR:&nFY8ie7m9n=4[a_Qbim].\bAg4rRr20Q-(X[J6HbS[9FjHWko4mlt„U"*prfXZ;L>%_jaR$m>wcijkVs7\aw05?Xbw3r,-tv5+*%Y4&7*I1rwqa_rjz2Tlb„U"k=0k^P<pky0oQ6'SY3TePUT+1ex2Zq5U.u7Eh5oP]n=MuP<%_^PZ&e%>)64S/C-„END SUB„SUB V2„U"ro4e'=UjOXfZp9cMqis3Edb9dEagn]h*rZo^_,iTlI>KNjpTg\'4y:BJ;OT1J&l„U"Ln)G-'>.]DR*er\%\1uWHt<_(RQ9)ENuH_&24S9ba:Uj*#dYHuMYO97q+]WGvmL„U"Xe;uSI3_qbvMKQ)k&c8*u&7yOGNJkDz:_&646$#iV9$.b#PDUPr&+*#T%4ltvJ<„U"It$.F3*c]l=[fnA9K0P1#)('ROC2q71oOk(su003WHWMz%q[CB-0N5(A,z=Ovgy„U";%2eW5qZnx4;F-YN9sR2e3YVY$'W#OeKg%J[+G+BU[g:y*LY%U:jwM[Y)6Opb%/„U"_z4v;tPST?id6e&Q+VljAVF/o]CLPh8Tu2g%.omohucBY&26?_Ev:ii[&%y&Q*J„U"A\Ve6-wQJk\%pG*pG%DH3,huFDtPSO,\Co]I9,h4$tn&h#21lEJ:uB0HviVl:$#„U"+b^n3rcZh;OTKM;.FW27:=9Lg;zNrWm?tD']Y0hdSAeGKB<Y?aoCoqaW.:iZ.%V„U"l2krqrZ4oQoXw^(cDhPftIgbfdM*wX^U+FG?#JDJ*d1w%i1f*PQ8^#\0#6-O)qo„U"e8quaZvnJ*jFY[-on]Z>L[B(5w,\Yk:8I>?[LgerT]bRI^5_Z3%?1/P;p<de/^G„U"ifb2)s_]0/E]'3<](#/0'GGjlgxc,#DqZtGA?(tt1:dVAhz<7JeYEr?4M#7Q+C_„U"=v0R8hsq/hKNhcmumH^<'tA#QHz/K6LR=3gC.o%ZHCj9MX;WYMMS*<WHS3*1u:=„U"vNl0.EQ^9eO[^=m6kDMq0#3n#8_yK0*eUf=qN&PI2QKTZwu-0UlAEzZ?LUl5_a(„U"OB1yS;OhqGaHwehDIhCpt<90ct.Cv,_*Gr/9WsK3]^q5p;n*;wHZSVrLS?bsQu3„U"uboEZydARu,<Nc5v]]qzOo'dOV4=p*qWWFL=cpo6Lc?V$ffhi+dOVUB6^]](Iyk„U"'I/cg\nxWv+#+OeW*lE9$d(z\_/J<$Y%vdTWp,9<4i+fW0r:[XOXnP1J3I^GXd7„U"><#5JX%Q+D0Z)zlx^#]tXu2][8MmtZc2URCFPnjOlwmAX:fk0?yYa;$-_ONr;sc„U"0(>FLOIZ1>cF?OX:T]^I\q=*<._sdq>xsOu5_513*cJE1y3Q;o]%orNrq6cpgCu„U"PlbXkJ,NO-5CnsR-6DJR#jZ/Voj3o3EGFw=[je'AOi[2[(J_IGKcqFfF.^AH,ft„U"R[7Nn>jJsD7ejN//s,B5QHfDqYAALh6>w#&a0&5xi(l?T4w;-8)KS-5HT%9\1FG„U"X;AEE,eJ9r^mUif2_IWibBmgdIai\.r1^R]i8S(,bbXVbhilKxPN/bZb?DLsV4?„U"dol:v>Gl8>mRp8lGvbD>m0;:qx&%up&'%9%9%%%%-%%P1fF-2s5p%M+%%&\G%%%„U"-%%%%%%%%%&%E%%%%%%%%%hf%qhSf%xrup%&'9%%9%%%%-%P1dfFv]6$(o&7%%-„U"&%%%-%%%%%%%%%&%%E%%%%s+%%%hfqh%Stgo%up&'%9%9%%%%-%%Q1fFmt.g*&S„U")%%&7-%%%-%%%%%%%%%&%E%%%%9-%%%kj%wsSy&'yup%&'9%%9%%%%-%Q1#fFNC„U"+2uy+%%%t<%%%/%%%%%%%%%&%%E%%%'71%%%ukjw%sVSg%fxup%&'9%%9%%%%-%„U"Q17fF&m6W1y*7%%h5%%%/%%%%%%%%%&%%E%%%%_8%%%ukjw%sWSg%fxup%&'9%%„U"9%%%%-%Q1IfFL^?v%(,%%%_D%%%/%%%%%%%%%&%%E%%%%1>%%%vkjw%sVSg%fxu„U"p%&'9%%9%%%%-%Q1#fF075%I\/.%%'L%%%/%%%%%%%%%&%%E%%%'\E%%%vkjw%s„U"WSg%fxup%*+%%%%%,%.,%Q&.%%gP%%%%%„END SUB„V2„CLOSE:IF S=45AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Dave Shea                      FALLING LEAVES SIMULATION      FidoNet QUIK_BAS Echo          09-29-96 (17:52)       QB, QBasic, PDS        66   4283     LEAVES.BAS  DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"LEAVES.ZIP",4^6:Z&=2933:?STRING$(50,177);„U"%up()%9%%%I-%HR7bFwh-41['[%%,s%%%/%%%%qj(f%jx(S%lfZfPZyB[U5OiJ%„U"z&Q&h?.MLnB0)0bK>0&:SPZ1)pkSN3lv:D8MduV('d_MF%9u8onYg$RneuZb87s„U"XqBm>J0Xfu80snfp&.^?cnTbDLN];AAb^_b<MDn?Tpdp?:7_onn3f-2d+L>fnN.„U"m8ZJXDbLNj'Q7]9R*3#ak-8<FT?ns&ttnT],g:vzoTS1OIZ0;J+W8s?Xo0X$S[1„U"CS=l-X%mult>x^\kdpbntt8atp$brp%8ZOcYz+VRM4v.Dsvr]'L,+V\U,M*tMhN„U"j]M+biLxl/Da:MrOF^ZMZ*]t2>w3AZ2c+<us\G$aSF_^tsf8nbhBjK/W[CN-kj:„U")he%]idbfM]jPE_+jQ:<TgQoTYMtM8qxtUl$wtBxbpNbMbMb>n#h=(7CZlc0Js_„U"#i[28mAA[m?Tsfit\tY2'Btt.x$<JEP'k2TC<v1ZBp#'2D$:QQ2So=S+SJ>YikK„U"wuXsm2Irc*#r39(F5/&FP=AFnp29kG$tB'FY]Zgqt\<jd8k.uN<rrBx2ZxmtCo8„U"j80?sFp&k.^inoTbv51Qj+t^33#Ft&vovf_w?'Q2KvtPl/a:^Sr^^qZM*]rt2'3„U"KAZf+\<u\'?Pa0QVH8O>>LsUKGn&],l.P5)HO4:]-_sJZ4s5l^WP5i?pFuv/;qn„U"XT-w8&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%R%%in'„U"q0up%()9%%%%-%*]]bF4,<Yl'c(%%&>6%%%/%%%#qjf%%jxSgIfxd';,>[]^9Ll„U"[1d+Di=*T-Ge.9qg#m9gX^i29+<c5WWjxSV^W'%LEsYvpdKd]X,Xce7oZQ$WBhK„U">]f5WR9(L6;5(pAvYs=6E\jba_U69EAAT08j_r9L^4t67>_Lrp#OfiEbJ1;*<DL„U"?0P83[,sZi<MP(3d'Vwkqgi#Mpau_*M^HTiM&wHThi&KE?DM5quFDM54qFzW[vP„U"6.%?vP7$pyi&=qMciT&uUz+9.wvSz:.1k#()MTCj&-]M/k&>1C6R>NuLYCELh]u„U"xS79GnY3zYOX6MaXF>WHnZ4D.m9;B;v?oyigE&xGd4X'K)1aC$v&3Lg2K#4CBiM„U"X(DA+F:<$i<iPPa85afr(nFd0TnNB1VE6<H/dAa.so,V#TKJiS9h2$tF75&(OTw„U"$hES5P/X9>/qGS4mYOm#&9e=cdjJWjTm87_A-QJpxpKHN$p^jTpE>_uB]TVXa(M„U"gbf6=nG<$IAFl3+74StC_fEln1c?J6=-QpPd]=x)rPbRZ$)Ql7j/tDola3Q##h:„U"3IGY/\cl[WsWpqi19=n6>ZMDPbK;Z:k'aLv;PimL.c:,-6NLZLPbhMZ:s7'Lv;-„U"Pm*sosR'b.,HxDg[j*LR<]bVlC*oa:0kmh$^sumR*sspqAGITdLtN(%bbGte:Sn„U"I#1I0'o,IFt8t(X,[A#g7J[x'>_W.qkWGUZP<Qj(a;GiGd=ska(LAs%Hc7sb_7s„U"YQ8F2wiR=fJ]u(Y(9r.Cjbn-J]wY'R9rc^jbvJB]yY(.:r-jDb(v#q:Dpd;6o>.„U"Fmw$.0G<D>^a^P1E]UF&[5<n6s>C?tuFfIfEI4ved(Fbp7Xsp,7)(1%qf28ppVN„U"aPcatcc\]L7&t,WfE>(6n3lc<rGFTkHGR_]tKh/%=F3#Yk[k-,;r&?.tvW4)r?F„U"&H6;[NnFigOQr*8m7dD+;4]N'_p'>YK,03n&4qC.#CK-'ZX9I[(j.;O,FjchkCP„U"p&zQlS.i^/A3CX])]B=j;Qt-S64FZx7EwvJK.0.nI>]pC$exw'mnyUnCXg;Iz-;„U"MP07.h(/;Z-rL^zgj(2gx&;17U-V+x(QI4161;B6/syn3;6CXq6+_+UmOXcnCg;„U"rIz%ged9H(KHZF+8LKJap&nRp>P>74;IJE;Z4=9+pA0/i2cPhB50/G(F+_q0,=g„U"J\UW+g?Hk<%1[cs;mr-NN2EFvSNDGHRN$7Ayun.6:<:W(BdFTYkQ^<?Z]WdHYkO„U"aZ0iB]U>^#A=0QC8.3V9d:XaY]qs%O;+1;2,L^->%srD%up()%9%%%I-%PRmbFv„U"O(tdH)7%%]6%%%-%%%%kf%qqSudfq,Q2:]sUm1)YxaPfBsO-]lkix3Z\PA2'8fI„U"1.lE)ZYP]rbdw?uvlPcpH_)))LZcq<F.=tvvpdu3nt4j2RK7ud3vkt<2vot<2vj„U"P<2LH]u%Q'l=G'(o*XOXus_4MMANjC:<wBmT:[ljr9*^9>^&7jW?^&)2\TZj/3B„U"ESsKoR[n1w,L6c:)fhlZXvQ.2g'MmdZXgJiZBik:O>?]V84dSK>Fl\Z1PQJwi+s„U"qCx*T-?*/-vv)vO&WQ*+v)XS,Tb,qM'SMRV8jI=bif5C+R%d)^DBMM.pVw3_-Y&„U"SBiw13d5]oI5Sr2'X3DH_$)r2%OD'JlMR(pbr:7IdAw)t21UXOC.n)[mdG%TC=K„U"hW;YiAo2,YQ%=%OXp27NN\3SjN:Im,6[&<Y+bGl0fXhC<9Wh\HbEAdCZhe8nCV)„U"pZv%E=O=du)xHFFsr]O5qIYp.mW#m7/3eGcJ:Vj_*F;g3<,PeL$8[5Tr\K]&ZR'„U"5WHN*dQ\kjkC610ZbFjgR4N(cMJWX*]EE3$D9c+4U?C+9WXe;[t_WnQYB>$g#5'„U"j_yK/J/(G60_bn5o(Bi?u/ua=n1&d5Tb_O0\F4cesCF7VYR8n](4q8EXZQn/Ei?„U"T%<^Ncg<dV[7xl2xPkDAwj)EPFA06U#/Gf&+Du$gh+^2eu0)-]F5Ag87CO2./TD„U"M0%I'_y\5Q':tEj3Ux)rmPXCwpQsagQ^jm+BE37n2#z7OchOHNEUw(.HPrAakT<„U"OIr+.TS9;]Rm6.,NSH\QdUc9g'QXL7My&yHLRRin.rN*Km2F(7oHImQJf5Ecr*Q„U"5e#0y_:34^)4B,G:54jKVHh_4.8^9V;+Qe$f1Ak0Rplb-T5Mp#Sy%d;cg+cULgL„U"k<f9G--E[4AMEn+Dgev?6IEp4#-?[Ppe^CtS5sn1-H^[D,aaX(zTaT/jU$:\xXP„U"K)/%Ic[l<AUb=^Di(,8&#.Xz4d,KC1N4NWir\g5d,$Ff%h*Mupc*O.=3T5jS3b8„U"9$RK?8nf)B4hKO*^uk_*Rg2IL6/Jp&\Y>^C59(X=rMVb]Hqj4yGYi.M#X5[37&M„U"9#dW.=;&gxV<Q-2nYYx;)YCk<RWwu,l_BG6>Ts%9/NtH[N>.F;bM5R?GT&J2j-:„U"7ita'M5.q5cQ?Kl;fDUnlS%R*Q'[OS$>H4+>AW,qtu\fH'blQV>,AqPZaGp-mU-„U"K^j8OY)^_MluL80ZR)M%/7_g<weQCGp_ySQ5\%T]u*]W71vTJ<=^SSh0_o/#pXT„U",[uyT-\#AFrLGQ;u+Q^pj<Azhz<AJerWAba,ZAlcR)($WPNK1%s;GE<dsyi[Aun„U"ju0t-7h4(z-#&KjNm&rd_pT_oplv%,up&%'9%9%%%%-1%HRbaFwh4'1['%7%,s%„U"%%/%%%%%%%%%%%E%%%%%%%%%q.jf%j.xS%l%fup&%'9%9%%%%-4%]]bRF,<Y+lc„U"(%(%>6%%%/%%%%%%%%%&%E#%%%-%'%%q.jf%j%xSgf%xup&%'9%9%%%%-1%PRb=„U"FvOt&dH)%+%]6%%%-%%%%%%%%%&%E#%%%?%+%%k%fqqS%ufqu%p*+%%%%%(#%(%„U"u[%%%2%/%%%%%„END SUB„CLOSE:IF S=207AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Erika Schulze/Gunther Ilzig    TGA (UN/COMPRESS) VIEWER       100775.2275@CompuServe.Com     10-17-96 (17:32)       QB, QBasic, PDS, PB    409  27077    TGAVIEW.BAS ' To extract under PowerBASIC, remove the DIM from DIM SHARED„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"TGA.ZIP",4^6:Z&=20018:?STRING$(50,177);„U"%up()%9%%%d-%X17vFPx%B(h5.%%3x%%%,%%%%yl%fSfxOrN+<,BT[7uwEE]sdY„U"L.Lr3VaD,\P\W'2#<bi2pUN*l:6F_r%a2oSU'my%-^utn#>I#fYapJ*g>Aknq$*„U"91&QVmL:QLvCGCLW[q7/K7&\/WWxiShOChai1MqjRB-7GGrGY^;4wI:YID<MF64„U"md86\F1HXAS-I(znh#EIn$w<uq/amqq?bYb^;d.'*t5+rqYaYefrc.\ZrN[_c\[„U"O>+4U<;oKGtze+udWJa53Gca(HmxM7L$:6+M4'H;8.yp1,xa939eGHHTt'HiY8J„U"-D$0fhsSpcJ=SIZDZC5&mB^FOF<sm=-(Ay\upk>hr2_m8UIYA.S49$HOCHq76EC„U"Hg+)[^oKg9$7svvA)K;-v8W>P'5YyQs>Qs<7kJAFWmLyCRZ,aa>p6m5o*Svq:gN„U"8K#M)IL?jSaq$SPxaeZg1damqV=E78P'XeTB)X/A)ivEF#>:&#^R-QiO/'YJ(zq„U"y,hr'ZuTiQk%s>wXG1r-9][Q87D5jp&EC#p'sKZPT5Zln[]k3*7kPs'C/Asqy,]„U"YvT/bHo)sY?(onFzM'LclpIE2ol+aef?D^TrMsGO85X[UoP;/=/>MFk$<&DV*uH„U"KH;ty6Au$Q&-4dH[YfUS.iooJ?Bm#D<01?5Qa#njm)/;wGP/G?7vOFm'Q2Rx[]N„U"-SBc'WnCI$z>byGD5a,r5^^gpfx=<-n*.ysZNm<yF_XHva)oUF>J#<g;)4e$GnH„U"$^AsnFs_52IJ*:(kgF_D.?N8BFWu:^Zo<U4F3m6(fAS-'E9o)&4x.I:Om2Up)p&„U"?^=CuD%*V91:LVaHH8N]l\1j?eex>d'Y#HT-%*au*=0:LMo#;2^#Qo;?a$$\N\,„U"tSuolqO0HMXoLq*3+3Td>J[*?hAnnY3wb.JxfFr+yQ,KK<\X:A4'uOfQ^uhc=FR„U"X(ME6<J'V\Gp'3m*n]t%A5$K'#4J9s.qjRcJcw%XX&jlZ%PlJRtI#NT'-=rIewT„U"ckNKPf=G4Rpe7z&5A#r/Qu#iO\B=n:LTbzs&mLX47P^*m/5,gbfq&>X'TNAAP(q„U"uHqfH[kA-EB(6$Vyh-OcpIsnWXzw?Pqb:sa+mb4Fx=Vd58A+M_PWAvt$JH6Sy/5„U"S(K=fV*cp8i2eT)>ITTP[*XiF[HvB*nDFF,3TQp6oWLhS0SSb((W>z%Gi&(dq3?„U"?9zDPVLmo(W+g.?(P%ki-ok_Tdx1cDc$bN1aZmL6JG;]g)vJ2#2t5eez>?X,t4m„U"Ci>*ej#SZW'3I,s.mI92KhbYzCh>r%&u\yI*4xBvhBeptQ(vxl66G)Uh0*p*[*G„U",//O6=m)*Q4JYXeZtI,'y/[b7>;T94)+3la8PAB939X0T/'$W:;KYoRD6E+ag>m„U",bqcQ/VGm=p+d?%U)sY2Pl&vZTqLe8NfQyZF/hW(J?1).e47GXXE+<4q8?>WdYO„U"\Z18lNG^n-=*%5mXDVZ'0&T]p$[>zAZ##srT(SJt<bUn1,g(EMfe6Hx-+:23bBp„U"3Vp1I>\Vi=Q[*0O%5')$(Zc[W^W7M47Mg[LPZ.(R'h=)gQpUR*$iz7ndDiUT*'L„U"<pIIX<Quf.2q)mWCqiy'9qzLA>hwA=kPDml6Y#cvCj#&%-Pt\<iAr-GMT:u4bes„U"GGSxs$/Y8Q*x^=[(i,CgxVf$wp5.Q/<)-xBmHfMWW?V[^In<^K*g**fSF.oU.9#„U"i>KltOSCYea=y1jrm]Aqiyf3:L;S9#IPx2,eRm%I)Eyn6't[Q2d>z^MmR$$r(Cb„U"%*4E1iijo9<ZHI+4u2B+Is%($S,f,OSVB1Mcko=YjQj$7k#]N[g^:_bCr\GOMnR„U"]Ld9/S3vHvN;4*>,xY1FA12M,ktz]heOU2GeZqP*\Ms8+x;j5.-jumKRbPW+/S_„U"XnPD]4k%s]jn.2wAJS_Je0<'/$eu7=_H/MKSt8NC)8u,%fNsJVntuUVB\HLI&y9„U"1k4]&y?iCe-)[cX/jQ*[=SNSzy-RsrkLghMRY(C\[>=Xv1*>wH?Ve?v)m;WzZ=f„U"Yqqw#nXMGcvg9FACX#khR=rAjy\H7djQzL[MW)/10UD?djnhhiIKb9T97QpErev„U"3fQlc^Y+E*Xc]TvvqCM6&Fv=]aJ4GGx[MH7f)AD=j8nEcp5\\F7nn1&fC7=\o>>„U"$ukWWMPmThLic8k)hLS;*0I&RERW.%Y+O)-DQ::ijO>Ij5m(L.#8R?A#1I#Tjo)„U"46'0=6YCWy>cbr1+9f4527)]KaZK(SD9l-5/_fjj;sV/Oq)?g)(MNyuE\sV]oH)„U"4ue57IE::/P^E6p>$GWU5#/V-Re7HMT>Of$v>k$KPU']3Bh$ufo=7<ia>SCp7I#„U"+Fkp#UxbcJ_9faZqsNLCzV:F_7WYT::<L9JA)CjTp*wFmft<l.3C,#IbZP,QY(\„U"mbi9Si1<Q.b3ecPw(^r/>=AU>HnKIqf:zATg<4.E/a%bI=IHd]<_AK6NhPn[oCI„U"\'_89y,5E^_1/+/iL1GVX0h?7pvv+yiqK(uKo9ic:J:F)4jS,ZWe#)Vr.SoWAd#„U";YjKKe5zfHLm9kXHc?[7<UAH:hgaD<SJiF0<Ip$';iM0BBf.YNM)uisf*+CI/.H„U"*'a#LUhNYr'R?>DLFbIhfL<RVS*107/fA_yAyq2XGW,,ouw#Ot,HN%0S32uDO+Y„U"Crg;8:)f+<F)t/(Wtw6n0Y)g-$l%r4S97Y(A>8+cx3fLX0fWF#K#MhfQ2zFs%bu„U"Y-c#E)spd1W:0b7XO[-SZ>mVpWtW$1IJLOIE'xS?L6N4o2Z98?un(w%5hAJN1b?„U"g^*JzZ'7f'dao;]Q7B7jcJis</'5fUCBd\][Up3:'*p*:BVuG,S7IuE^*/&My6[„U"POpnF2v7-ZbPsl8/;,IZ-[rlDi2iPp9oeWQ-e1lD#Q$4sPuJvMtCow[s/NJubM5„U"bVivj=&]b)QK%nA%lufO$uskx>D\-A,<tp0_m\c>R,D)bW2ZUo\u6>WWTZ;1%%m„U":i&+Brq;Z+pYht*/'9)<p/aD\/CaJD1Psr>VnsPn.QfbrUM*=PN$18-,rq;/Zp<„U"j?t+[Zjfb[dVR:fBK<s[Hr)8>Ue6hn2n,B\2S<GLImy#M&,lj_Qc)&fVTW>8fjg„U"Do/.H',uqSp&(<9o7I=oYmfuq/pN?b]$f6om5HkIPg:2a:NDUh=TJDe$JY$VEGC„U"hx__9+wiw)Ajvlx0GwReVjnI.tNsp:bx7bI8l$1IBLhBbo9jZ?aC;,QhS_/r]<H„U"M;.p*3ZI0E5DBL9=9H-uh63D_A1gR96*=CWNM>VDJ0DjC6\*,lG?r7\.?Bn;f.m„U"T,H>mmUrtNa#&OGJPS21huQ52Uu'IHQ3l/Y+4&.g8]O6(la&?VHW2lNb3Hq(9'*„U"uH>#1EXnYW^A(6Z(>=)4([w>$[-\ns;9=xR655?r+swRfrowEgH5/BY#Yisf#eW„U"^,u]uXof885dldD20^fCW#>4*rzIaw2butMUW<L\5R-[P&DHV8teo5wg.Nm:fQ7„U"_',?pPiLNj5o,<Qlt((IBR_^^uPAr#ev5Bo);saaE%TCKE&sTO_WfQ&+nL^MC*L„U"WZ^W:;<A-Flf/vDQ(g>zE)_xHp,'VXOt#''Xq,BcD7Xp//B$ITBLp<kf5LZT?p%„U"[kS=^\jju/Nn.].0[5(Twe<V?,WL*<mUfg$isEldsTTC,mFloTD'TRp:=IPs.Ds„U"ljj3o&dcfQXqq&:Z=eqv?jQ[A7a'gBMa?P)V4z-]+J#j0XogB0sGEXp&Y*+_'o\„U"DB[b/i>Gu<MlYkb?yGgKFD2/2M&bGJN=]JfTeS24DxFncO)jF#C^JBrG)X'&ACm„U"hsbZWm5wY2Ue_p-Ao#QwWWdR9)ZpHD>.pi5b_9>rBQB#Q%Cq?am#/iUu]B:V_71„U"wr$92oeSpHA,l-K/vs(m&Bt5N:v-h58+LTpYE,?mTY:f#DlF$*ci50N/sK<HPf1„U"EQzlJoQ+g$wSl5k)Bg/(4E\JQ?*%<=>&HPEqt7kt%Ae/]m)+s43ulvDls^WofU/„U"]&qOv;hU>;qJ=p]p,p>1=aAd$<K[W7sasj.oCoK?smC008Z[VY)VmRg9Hs:CZSm„U"g8PHMa]4Ifsw(:U2v,u_4sl-3h,dKQd9=>tX,<es8zdEK_kh1QJ5Z-b=qHJ'74k„U"<R;ZNDXAS=E*OG\Uq0Y&8F,KMIfObtY0jHYi%kP<<%VMK[,$^0BMk2p7[GS5S9a„U">cU^Xf?D_*g8dxg2Tk$c<Q%0kGRdhv_mt8^:1QI'BO<UNk)jwVoo0<7z?lil++p„U")Qlfe7DEND*vB\/#ZW4UEd#T4uY+F<;wYx7/udCax/k&Qr6MZ.>HrTu0.wPtm5R„U"wTS=&CamoEH\uZY4/+t0ULj&K=9&IRh%iSmo8#vUFFv+(j&&k=](FhTZPR-M>1m„U"1BeXzF)QhTs^A(gG4XsYuwtMrp]J&p.?CqrN:fFFkfhS]v?M,Cr26PH:>J;?O&G„U"]%djILF+_cU/8t,NM;E.spi/SjDcoOb9Q0;bzw56fWQ2tCth-%t?0JL9*.\qGoo„U"P:F5:V77jE:6eZ$F7$0Zq3IYluf.Plu$4oDtcOz]dln(lV#e[n?)n#R*%Uj;1])„U"'%6Xu,KJ^ndXPn53'e+/L3tPVaz>.E(:(gJgYTu/JatA#>(=]4vR2Xmul:Bbt'8„U"_0.v%zNcM<];)PjbEGeH<:Eh,:=#_NOW2dhlq'dP*3<u^p;VqqqU9oxEa0SxqIQ„U"uO)ETD%d#ctj=shn$H76kJ(QnVIl3P;LwUuU,\Pnt'r3lin2\P3=g1K;2+fU_9#„U"q<9/H+8/ND4SMo[/N5+\A*,g45j2Ho^2I2R=x_EL?)],:>*l%LHqwf9VYOfinQ9„U"B_;SUXMmV/K^V*U*YHV'3EJQ>)$nx\vZ((w^b3RuUs1dmr];]Ng3QNg,ReI-G-Z„U"smJQfg<CF=0RjG1a#AAb=4WdG?(y'$pT:,jCoo8WvhYpI$7;oS3rZ;hxd'&'>Mh„U")TG4'9e/v:YkiejwA?7-,JVS5hJ=J]2*q)1Mrr)%3>hcu%lB?QGkjg15cjV7lqT„U"d'2W0j.,]H$j;i3jJK-DvfMKZtqd=Lt4O\9_KA2?0oYOP>]oaA=fpQGT-#W#mDK„U"b?+m0*v#/DAc0WI(q+$P-n2bBApKg8+LAKkmAc^oYlr5,uQ5Q/N<.8Yc3HUJ3CQ„U"$ek*M7$mx(c98#H4I9<PRJ(w0zoS.8n$Nwqp<0'dYMBL6e7(hns<#c0JYI%/zf+„U"LN$uJsl_vKYh/]eS.Q&u_>Qp_RV[Z)*?D:oao6J_w5-d9,C&FPyWiG.VeeSoNcw„U"f-#vNEiELVI_KduxYLr[N%up()%9%%%[-%z17vFRN'kYN6.%%$l%%%,%%%%yl%f„U"SgfjxV+VYATAA$7-zb+BsMlCK4h+P_-3(G]/gXl-=)&qsWmsV;lq1#-1jcRf%:O„U"FG24e&ZrSxbd]Gh>cbr&1+NqIb:HK:[**(LWXCpC?pmm1KUDk,*o=,UEsC/rb(1„U"AGKBBT5?MW.E-cYt<tNW[Ha&wAgNg<>hLynXf,G:BY40H>N>#>l:(L*HzZ\nD,+„U"AfK3*h1Wdg+H\HtJ&LW1-m#FrSg)(H#RH]F+pC,KK=u0p1r,Tc:Y/S5,QVj<YSl„U"MDu[v&3-jIcG4&A)MpRn8HE5UO_Ez2F^N0.UKDLJ^6[fa)/F0Alp:NxAf>Am:3U„U"*#+De-WRL^#5-Fe:.,lSSSO8*I,U;5)Qf*eLJU_A50xA&/I?*ZK6ImXSqIuxN4T„U"MS%GC%[ABhuT/X6F$)_lnF,i-%vMa?.+.\(;i7A;Fgw(yPN:7Kpt*uoEj7D2Oo>„U"7AB[;Y>1cl-3iHoNvgx>G.\0E5fIOqw0mFbqrB5,3Xb,i==Emn<-+qV;ME,S>0%„U"fH&'b=aQ_[Ymm[JTfzU00#n7dkFY61EP3k/0nLD*1Gmn;,/ZGqEy#o0npJ;8I($„U"e]Q[Y#3jQu+7aKjBHR\'r\7]37$$_)>'_9VjgrSP8C+Q=k/KkXpe2-vI:cQB_&p„U"q?QlZ;H::Y[$g7P1AI8+m:b&[eRsRdo[T&bQ]O+L#\>lY*/k/I_4Y(&Op?EU#uO„U"^c4semj-BX2nWZd4SUWpXEQoT?MZbT<\P1fqu]D<5R/gY%=e9WK_rK91&6XICeu„U".f+42p*PcU%1amgRJ(Cr+])0_54B^4qLH9=4lH(&o[ZjE\KeW+e))5oPWM^_t(-„U"a41)]38kd6Q4jJAd=k&.RisE)GfT%&'g')j7aD+Tqwb9e;Oh09Tjn_npD?Bg_y%„U"*8\(m(3UmnogPw;M)e\i(\CWEI*hlfg[Kc7QPlK_1HDScdR_vsC.Uq0/2U(Xvj0„U"'GFKF=YBS?n;hYfg94deFy:;d/^\el/CM1B)%J*:Jn5#T'ZGaY9><az5mH<E8,Q„U"M$,V0im;FNp=K773fZjUuog5YJP6'UE*j2Of-Mf'$-Hr6SgJ5z:I-P=i-7e+j3F„U"HA^7N2oSmU=R[Ghsa:,ZriMSa)z#MXJ8e_P0BLqD+XGPEm=)S^66CdQU$L3iFn%„U",,D$7f(v8Xok'7'WgN8UT0Na5[5.j[%2(R3+sy;6mmz>P0N5K87f$R/SVC$DO,.„U"ldC:D3T3LwQfONck4+tq*%Edw..FK'c5l[37R,w,D?s=iT_LvU1]6GHdUr[%NRD„U"kGY&[Qb\Dx6h1D/j>]Xo]&w%Tz$Ma'FM?]kru+IzCz,>i[]$-hP?*D,tK][H268„U"m<9N,g6i$aYkB1?:tKH*)p,+I)u?Iw6Co0JnD?bd;wd^Fji0RKDc59&jrr0&#Lx„U"m2l'J)==%^ReY+P<7aturLaJcy^Ol%gn0AsA1Njuv-7'[ehTp=<r4T-yCT8ji2j„U"Ewa%s>QcbMPK9R=^JB%Vyl03r'H/TC4_SqewiY6^CA;XEj-zKlH]X<\tA0?CjqS„U"SR&Z+m^5&/r$W<Zd3Bg<u21JItm(.R-jRa'ip;)&O;-tSzC\k3R.V'hmGpdOo0/„U"*,0.39_?RBA*T[tE.:XF7<>C8)BGJ4=cR]^7l7NXTb;h]Gl?6Qh^iE,-ONFVfXa„U".yqUZH<>AX)2WQN>l2m_3KQXo%\qc^Va;G>PCA8tAKyL/HQOu&.[ZqXfjLI[1w%„U"Z>YO-fbGf4urcMjn%l+u>3gs-i0?f&jT[\(mgnW?)KPt1fUIH#<>fbQ('%'lU?o„U"X3(GTZZ3l+ECks-c/YY_WpXZg?[;1];=sHA>fgWBWzc*Ch8IRH1MZadhI%:ae*c„U"57?4G,<0h5k&mzo9+9PO*8yI(nG^k=x7XzlTX$#rxMaIt5Bg?&%?5$vUbE6%v]6„U"GscEeo;0B6>&v<e;upX-?5]u&N%u;?:R-VjvLBN.IQiBb>n\lR&Y-I]d<>X2'sO„U"sc)6NjDws<[;LR44i<txK%Uh]FExWItV:k$QWf7?WWcH)57kJ29w/D<8/aMyNZC„U"ywY=?0H\yuSdeBia:EB1_trj=,TMHFG'jx*8YrC&.UlW[NlEu8-JmTlXa5Eo#;j„U"I'Z77G-lQoO6_3)b;KVj.Q=,&2duy)9_]K6d-?<WBqJKbJd$5X?1kEFboz1+.eI„U"TkWcs9d3G:&AvR]<M-eI)2tJRy8Y9L>0^7DDCObzZ/sJYNs6NKv(04b-Ah<nEFw„U"]OdOl8es2HX9mAd]>tkc?\B:WIO%288a5^5gmXI(Gv;6_=c+*T*'d:TjcWEH0O)„U"rs%J_2Tzuzf+>sT_*gfuSh8gk(4>Tdu.?$6;l9Z'jWHdNl];,CH_Em?RljO0JP\„U"TOC_cVQ1P>;Kk60&5O<4-HS9/Eorjf\3OcVLgUwc>3LpRKJgPfhN3Lv,#_bU8s7„U"0kV2YS2QY-fNAKE35.X&br%280(Q7^F_&Ety/0](/6Xg5mW'v^-c<H$EcnDdC>W„U"slfxiE*eEU?G.X3/l%[.&EG1OaD+pIW.g4F1Z/0GI2ffI,AyNGv%*G-;1a-UJYB„U"t]P4-%HgNUZi[cj*ab3a6P3h5J^\Xn5E5D04AiE.Mqe%\GIbGn.YID(_+r96_Oe„U"RlgF284e]bJ+c=6Z'Zqco=*[dbj::AuQojsI;sV&66T.UXtr4EJm][7&M^z1;(f„U"PDYjfCw3X?8gZ\2G#U/z(yOEo#Gj^a\#u01we3]bQ$XO^h._^CQD+Hn,D\0Y]$g„U"MA)(Rz,c%fF7gZVXPcl,]'TdA\,rd6VYiv&3P;=4ACNMuJ.n$55\C<1'F2mp'0Y„U"ig,#gFkA5Pig&dWddYlB80bg:Xord45IC2YR)%<)FMrTPK6ZaF:aSL3MdWR,'.=„U"^,0XSM7%mwzkJ'JtG-n4[*=5jYu>E3UhK<36e?IcOe5uxs(xrWCvdj8IM<P9>xw„U"M%3h'6'v>tOet^NrXCvDj8IM<5tE[i3N*0tu^f0-.Y#Sn,t8d2e<s%WeKV&E>WN„U"R.AC33Sj[x/6fbir'cvLIfGPhV$;O/NfDe1Roo=6:iVx7Dh0#.lU/]NZg'Uyqg#„U"vf9'%tjX7iOXfEdny7xLl]QkSDzb)ZNV[?p.b.q]lin*LkV$']GjI?Bu6zvt2GL„U"I<QkqcXG%pl.UR<aTPgMT[w*zfVn^/..VXK(k)$TI7%PDzZfxXpbpWO-Ko27dtB„U"v,J$e>jtrH\lbZ8v&&C_(Og/%i-IO:EyB*s-ctKP#t+HIA.C0en:'J(ksbnstvj„U"olX:fc&Zlak\GC^pt&<pQYhNO([[T+>&+dk,IGhCYuCNQQZ_EGXZGg/n69?jfst„U"AtscDeC-M&BfsZ1cDXGai2J$H,4^TBI_6SrQJgUptsNs5e325r]uB*j9#i:x*>U„U"upa$8xoNNS-hL/d]RzhZf:p?hc]+FW_&8F]/dSN^l[38)V=NR+t*Cv^N8D:_jkg„U"*$1*kCe9Cyo]CfZheDJc%\j\K#\^,SPY%M)xLVbv/LdZlH6<rFcoaf9[9w,Q6Gb„U"wsPfeGzpO<B3d08qGzAtsfwW#uA0)I-5*aH:?7'KZK-H'#Gn<%\cvVzT/tX;$[G„U"mF0$2IrNu.GfG_x$COc[3t_RTMHj>+N_6V;.\52M0r.Z4Hfg*iBhGMg.jbhOhHo„U"y]S-<SguAS/0c)/5L:$^j+]+w\7[s,%o-L2q%*b\Nrl9IN,,''\CmC8BjFYXgcC„U"9i\R*:^rNcIWCuAbaF/NO-S85WoaWp:-V52xg##>-Y=y(9ijPE2X*?qVYXIZ&Rd„U"lLAwi=i^Z'?_$V)BG0?O;BOFO\Z[fnvsV53aemB(?#MzP&o8\BWq*a2cUp_Z#:9„U"h:<1-tu/O4>o<_>,2w+WG=o&LKbq8nrFk=5,k6T:W\Y+O4:Pb?SnR#qzSsDJfP<„U"jtl'^JC[;A<3S'7hgZ9]N$0NKI&lGOc\:(W42w)CdD.+W>+qKAi<\g_VC8pG;Jz„U"X#?pYYEE&bYq=*<A$YXM4r\XjBr]3V4h,THi;uL(T-+ic;sg#K/]5mkv>cY4hD7„U"caG%Vh6vDa76^ueawG)3xR(jLX7x4mD>-'Asbo8NVc%do\WS/J*534uvNn7D3ks„U"%K#Ldc&Ef*3Dv3Kt0<N\2n1vb:gz2);C[4L4ZRTofGkeOhZEDfci^=F76]]%K>>„U"Au[lH2*]QU^kfbI,4k1yswNpGxE7,w^C:Es1;(d&=L*M2FT;6_o=*ur]&NAl;_l„U"'jlk?<i03-CAk[^n4RwWUHy?zmUAPci-^D]C:Xev,<_6ACh^-]OsxIsNFG9gA#=„U"fdC>v*K3<a8f7tQ+w0H^?pGgb$VP'o$4-T#GKd0s^MkzP(F'+f(<Jk>XXbbArgn„U";(]p<k,ns<q6wB?NhW$$rFxnDK9aF\K<O'L43$Sk_FY'[LG9lo-:50-epoTqhz6„U"H4f],2#t/0&phbC]:cor55R'm0IV80V-RkQHgRipi<-dbV-Wjn:'ZfFY/xc^OQt„U"EJxZv'e>o2cJXWCSMA'eaFRf3A4#RWW1c1J'M7G6YqeNF7s'NGq$3]29D31*M(v„U"OlEzW.O,T=VuJdcMIJUEJm:\3i)dnqS7Pg)1iJDq=HuD&KQW6Q==7uU<Mmmc?hc„U"SF+YXk)1mlwWQ[u#PXJV7K>P1kuWeG5ju%FBh;#b_oJbque;<*=1=H'#FP;TmhG„U"-%tP*UJS2ZZ/pbEZ'*j5rEAbMOk2l<18U_Z+WSe'V[_IpPzT*?FI0_+cZtsh3AO„U"#Q#[?xk\glNIn$+W:b3j.Uic=opq,I(2F.B-Z&$'4ldRl1H'cYrG2W<R?aFCu?a„U"-a#q-,Q1S$lUm^=&v?oV8*I_GY#tf#^iG2pDCI;B$-dcUnfbL]Rg$h'G?ul4hyG„U"7Up<u=0?A5o\F0uakP$EZ4WZ25+hTd9GZ8%lw/z[$\+)?Hh7/VH,90aa504>uJ&„U"ch//6<=CiZIR5*Zyx<to':lBL.HNq3D\k7c;OcL9)SBnGVh[PpMeKaVOWEoXv5B„U"aR-PdRK#1mm]_Lps28qUluNnDWjJcXzVc-r%F,kg.e<5W--LMYnDL3B*&$$C8tU„U"nFf(T+-qH:B;Wk7Rt-DO<;^yf.?e5W6_T/=uS4]?M.zj']Db'>ZUtH(NIAeB\IJ„U"1>FNHQnJPfFl&m<$uXm'm&]=#DQp5wJdMUIG4u#7CQu6$MOZl\JvLlXBb,Tx>YT„U"ab2TDYd%'ouj9#e^:mA.tF,KTOnJtB\v_CZ]Bv,J;[qFn37kk:Y_l$2P)N7,DrU„U"TzRcLc3tGg)X$\qqmTOe<qWJXu[A;8yD/c>e:[4t=LUgcRC4+f>Bn4CxX))wOIm„U"C9<:dT$m'1CZXk.<33_puN-,)pa.>Yx=uOr?On]0jZv>\\,\)$XU+g)?5v/s#(K„U")/U(=y_o4JF)7<+sVCRsIilFiTT%it99(_mb19WY$/I%8:rpd'[o7WCJIk6)3Xg„U"sa05XrR,YhHhIWCH<a((olv8%nl>3PBs6WjG.j2U5+/lu70om6zT$DT()5])-7H„U"&fD&Wg?Z>$Enfg9^,xGU;%SR%F4ianT0gi(pc.ax.(N]?dwYqH=<<D&41(MA0uG„U"a.?*\t^HVjz5'ndup%()9%%%%-%,K0vFm>HrY%p1%%&gM%%%-%%%%ylfV%SgfxN„U".(<B]Sm7w95yjD5I2G&1l5TBiTSk0=3)eu-d>cErBuoo*<O+uCj7M\t3<ws_jm>„U"6CpE[fCxtw'7XtpX9VbVbtr_jptJc._>RHOc-RofbHlTf6:]g:\.aM<siqfMk.o„U"mRl&VcvDk%EVR279(8<am:.PSWa<SFc^krSAWCS#Nh3Gs^9KJscFgj,V]rXRUgW„U"T03Bi;9Mx;KDA^/Hde*PmLLQ9AeQ\]Ul0B;$SHnS[E1[Ek^P9r]G<',f^KCxtqi„U"02i^-\?0,cCrulkkU7]b6aQxXs\<6OsC.2G$B+9rTYkNAxxmm$[$oPp4j:NdW9r„U"Y6&mFzKc?./s/%q(SsPRG195J-XOTap/9/Qm#9878;Iy$5\(Y)c=^)aqYEQ8_eu„U"LS35#R,lH;SrVQ<:kv=E59.A,nseC2&)K0<^l>Z.W(n8rNYi4exF(\:?E/t05(D„U"/h]:5'IeP'31tPk20O<ZZ/0:[Q>.:A'a(?ZUZ&Eje9xdbv&1ph'o:;tSLOr4#cR„U"]1iGwW\k%xC/0N_bVdZ^DwZp4$G%Qv2$=x<BY+h8fXZVYK7<%aK4=)BUdsj%/l8„U"NriS1,a^t[]Ph(aOS#B5-.gSgHg7&-C5Ni\?[0)E*f00,Zh4e2)<2#,?a**gRv'„U"dG0;FOX_*l*s]9BH'd+1+p_O0Y]a-fepapJz:vPaUWBn]OgM9aZ^pX*RpmV\MJD„U"j+_phcgwQ87G&_DM;m*k,bac<VpH2*BC&EqG,FZw(.yYa:Rk-+ZU<wQe9Cue2R^„U"Dlr(Up<5X,PhtBf&0f4R8Cob4EVMBM)hU+(Ib6/]5c[-E.^m9bp/$6qGI8GcCmx„U"$coiZ>;]'+.%UIvh_c-.C;&>,ituc5QRFjF<B+_,VV,2X:rCITFU6BydMMlM:zb„U"])96t(,dH-Wi+/caRK196%ucM_=?N#Gm#TK<gAtWOTk:'hS;whDamJYDfOEOOZ7„U"M<'<&%A^Rq$]/<]AO*5[z%dmQ-lwVZ.JO+ZMGE'c,1G,[oko,hHuLi3bMIRSNUX„U"(+$WXCVG17l#]ejcFrpvG0&An,7gzYD.O')sDZxh:<DGYC<9;DeFaH8)aWP00(0„U"hoO)rqmoM0_d[G3':fBCeWYk\U2+<QO#'o.f,TW$($r771IDe#JfrEiek(#]&T.„U"?BErpRKu_xAh*xDA/52<[-T4\[0(sXm-L;RCNoO8WL-WuTtl[U6-Coy.q]$X+%r„U"MHCU;J,l3;1[>JC+zuo=m(oosG2eRa$<[pi3x.DGra8$L#3)y8M>L]6R-fR^JcO„U"OL)Hdf#Y2BuJv9h%%%0Xu[MgNl&TPLK#WrDv0LM.piHZf;UaCc2C0;$']2K03AW„U"tnp,=,DpJvY/]XL:A)lCYm]$>Nd9OY&dpczUTB9[kDjiRB>OWReY;T:;jtUfCaJ„U"SypRlaXn%MJ>g>1cI.*9S8]Nd2ICntznd7\M54*=LG,L3uMJQ'Wi_CSCOP:kj05„U"r'(SVV6oZ=h&OqO70fjw>7NrbV(^HmScT1'O7.PH=YNnU$j.s4hxzmC]RNIG;v^„U"MxLG*u?f&F;IWbCSt55P9yABR*tmJVTOGQ3+k4>;;oG_o3I^QC./9pp[SQ>HOe1„U"L-d+kd,;+Fy\l?kdMW\s]#wUbbL+jQsl<.Syn>5d]Gkh_$S1R4J>dPd_VzlLwmv„U"_2suZDsvCb=+aC#UDkjW&.w?#X\X\vZ0KvZBVOYfzchpIpa6Qxs%&,aJHuFx5Nm„U"+L>t=nS.+Z3#q1RgL=0;ynF,*tH(m3lfe9aL[)SAy5n;NM)En'8f_u;L-b6K>?j„END SUB„SUB V2„U"$4znnk)M*De6URReK_mUK;V=%m.ou&.aw?MrCWs$I/>Xbnh4<T%NM6w64gQP)_x„U";7'('wR1JQD/ZJM#b32D:rkbnu3K,gJpY(d?x:9-JyV44=*<)k8w8]z&9u6Pn7J„U"1&JprrSr;*xgJo<+:Mx[yo]5#Q&0LQ[xQSdy\O,JDRNMi/iSLN\q-=OC(qw%HYz„U"8WDoryP%((b,:9buN(,^NMZalOa;0iLSuP5P^p>)=\??A.WWk/pi]8u(<fOqcO^„U"ARw$]Zm5*q(w$imT6>;nk'V)(NAq56O<pRo[T<4^=%PFbmUn0?h$Cqh$)m;2k$y„U"'qQ1)F,>[oqJst0]QG+/9qS>;;.5bO$JaTw0E7],6DqeO99/koU-7U])vFD_-lT„U"fH<DE2FrW)VDm^Piad7TjiCqTmdDPM7GZ,1G;<R[CzN6exgCj+CgiSd-1=zt6/J„U"h)<WAHnre^?tNC5X?UoFNM24;C%tf=aFE/2w6&n>b2>SUozPkHf,YACaaW*3>2C„U"\kzPuO_;Md.7U-n+mB2ggtq[MKNj=O]Hg/uRVfns%.Y:YRO:E#?9-8R=%_=^^0R„U"vC?g5T14CoE7K_Ir-b9p4O)my%WUCt0]m11unVFRuh4naKTJP;(b^Z34tjn%\,D„U"Ai[2wE8\wW]5WxlQd.*:%Si#E$wd;[MSJcH:kFpX^Pqx_W)tDG2qx-#TX-wrPe;„U"FqQSTUNKw',gc80KS5Vj,93WY5SUuSMV*bGWteMf2?YKxirE31m]JajCvmFvO]q„U")tUj(rmvyNLZ[3)k<hCE9Q;y6rDcyWTo(HYH1TXSTx4[:u5tLkUK*pa]F['<Y<q„U">MIi7D2>-hOIwONUXXf2[,g(mA?V0i_e2o>>NStk_2UStXRjGcDAYtJ-GocZ<VD„U"<k#fnB28j6HI';P<]j4sCe2P?NG&'iqgHJD,$I#w=AJ(,\,q(L\ASENs9?J9Q^[„U"=*aHFIWQPG+,qg4hGQ:aE%s#=nh;Z28vN%t3M0[TSLo6IFRrS(4&rG$,O,x8%;,„U"]Zpr,pjM+CIMp6VD0OI-h49vO,w[7ETMRKBZwN:v:Vj,M&n_?MTQ&kLe?3=g7Gc„U"#v=Iff3:w$e0U+t-.G+A<o8V8ht)^13K8u/OMD?1?+e]-jmEPIB'K97HNUTW8\(„U".T.IEO$,E#wg(>CQRdviw05E?4A?&hH9H&)k2ncptdHYMFU-8Rcn=W^wK<AMI8N„U"[c>dN$teJYrjMqnmwOXu]l=?IO=0Mwwm6geYDghts((sr%X$p.X%Lq4MqCdk%J7„U"t[h+>6(UJ=^MVy+<N*i)Hlxbg1Uj*4>?KNccjR815[f?FtWU#*>dSV-A]w<B-<&„U"<h&m4::UM,.0f]RW;GW8H6.ouIzQ2]woD#k&+\*\U,A=*a99fp5K?W\#tVT_R1p„U"UkVXhLg*s*i=m3Lnfs&X<Z\r:tq(Y=rq-i>rmwcp/R<Ja\m:bC)&/G:72k=[fUR„U"[Iri3d8wnLg<[D#RP*J)#o,;DJ$6uQ]*koI2TK<\Ror%GHo\TiF>,A*SgQEI%7\„U"Y%vh.nKQFHAVR=l<_j(&Y$P2Q--=55(ner22u*uQ6gvnxVh16L8Y3:]7R=87>_E„U"a*-:);:9]$R$*UvGO$'G\$'SoC7G6:,+e8E3?[U3bJ?#L+U4NM0R#'W-[$B6=uj„U"_oY,xZ$ES6tXJ9X6vStuFl7d8uwcY\jW/+?%\:'S''4e_$/74l#g;63gXZ<MG9J„U"Yj7e\(R.a,DSU\B6Q$0UvaOvXQ381oc#4\%*1CB/jWg3JMp[3ti?9EF?BI5Nu(,„U"xNPjvOrh(?A6EKoaplRk7?f9BT93kh=YFMv8t;_D%R)Y91\nXeC*,v<k<(vE;d,„U"*MuoV*7IZWx<E9wYiXB94dc0VmzM$Fu6^bYDy]9,B]GoX_H+]]$HW=x$P*&7a[?„U"j=_T)2A.5HiR8,akp\Mo5S3c$ma_Tn[xc_L%'wcWT\t-1UbzI*nqvtk0cHlSLIT„U":rp#HBja'n6qGLOGPmta7;^P#+<HjvQQO3tx+[?ap5S-P8SLrfSL37]&94*%CsY„U"+b3>9X;D;dOnyUfM?+D=UApgexOfMQ0j\meJ*\\JUaEPQntG]2IDtnNOTOVEt.R„U"7pB]Y.boN[Yu\Y'N6qbLh'uR*jZnbBF('iwJLP[Bc#[gjTCNxyG#g8K\mQ#pLU%„U"nW^'hQ=tbM.cDjZA2VPvq'v+fx*u%p()9%%%%-=%'5uaFVyg-[91%(%^T%%%-%%„U"(%%nj&&SgfOxV)*>BT36hMe6u4D/8s;<nC_MalZ^^$=OB$-r^+Vt$]sBb#iQF7#„U"9pm&fDCa4dhSZ#G-L*aNO;m%T[>f/7vfecTu:0V4J(u)4IWt^Hpe-ge2^;j#+]+„U"*vqSET\sJ:1.jEiSSS05vb_ieR$^'IM,f#C=FleSD2&2[])7;,Ysci,PF;p4s<_„U"_^]gjD(r_FiY/Pl8N1T;,fBS(1V$>AsS'wN-(<]#lT)DG(]]p6uk_:YjM*'H1j3„U"<]u'S)7]<k>dE(j:p^F;L)=fKC.:RPn2NhT>&Eep,*AWO]=kBjU[l6>6*'_2JCr„U"hnxiuRW/=+Yi*$NNo5^pr^U36TjN-iQF0>.iP^]WW7UfK8i#c*PQkOYO=+P_8Ne„U"XijF^F-LF.n],E:Nz0*Fh#<)D5brd)9q\lxB.9)dZ6JT4cV.C0/gEq[AO.<+Jgr„U">phR.iuv&_aRxrp&'Y(JPEU38nx[mA>V<).LU,04?c?G074-E*n,5F&#hExd;._„U"'C*>f5o-Fr#SQl/WgIy3#RTNYxp7AY37F:K'8L?EI+M9^2,<gR6(wMdxn^AG6&w„U"lFY>jh.2C$nKe/IfpsGZgfNGZ65/ZB;Ij-s-3wdIGO1jgcVKIJ/98mpV-meDj^D„U")%iU5T=hvRf%b/c=Xt/v/YVhpgH:Q3eY=op#i_gY:Y678nQg0RtAF6RM+c13Du9„U"EqnC[C'Id%SQd)-sIqzCj.3J\>oqT>/kl_.hH$1'TD+rUi,BvCkf#BB*t#iRrsC„U"-/ssubY5VI*fs&P?GrQUp$+A^s2sMCc#k%Mh+/e/1yQ#S(\oE%H^]i+5,=uMPA/„U"r=yjDv7.WS2hrycZY6F9r09]]oe%lA^i]wm,lN%QA+qUa[-_x]=_lz<?*6h<ab/„U"u:\1s9JBRq36^XHDnGFM]yQK(P1(e$Jq<iwQT;8.hleu>Yd5Re[lR\7Vz4(m4e9„U",TKaMnd/[ILq+YPi;78MfkG9dU-gI:;BB^a3aJk)P2l&wQBTK3(Prqb16e:Wfoc„U"z6eb*i+_/y+-0\tB7SelijR_A6a:sS\H39xcratk[608HMi&z1oJ3:pq%&cl#&0„U"L38/+<H6Ck7D%Rg8FM6V;AG<0$*(dsKAst=-KF0-+kAv:RU?eJi^I4HbVx.>jOC„U"(fFN=\J^f8yjr%%ZtCLX5]H:+3%sgAbm2pr'+]C4G#1HZHGwp*8G&H&4BV5-v_?„U"qW/$Ojwgq3b([1[$vWTGHMu_?g]_3-6dPnhg+V;5wNC)/%[5Q#j?r4Lw2LXJSMs„U"(k0cZ3Jb;-#In$m\OKA;KjN=^67+y>VMTYvFeu:(GVIYr6(n78i+6kWXe\>*a-P„U"r*8*4)k3D4P:)6LHj/KP6Z3tJy4S6PfZ(uyiB8/&FI[a18jlFRj_Q9LJEnU8bb[„U"B2Y]nMx3/US<I7[Y3oFM=u$K'1>HuC;X^]p&9NZT1SFuhP[FI)2$teOU)X>$D&f„U"D:\-62_96^=QOXNOl,m[qOVR2Nd_v3fjixK?,fBtV^4]*G&vl7hmJmBBO:P?D)g„U"iqH^PviKc]kJW/A?XAc^2<K55EdCk\1g]LmK?hJwJQgfQcJ7UlqRu$Ic'c^*rWv„U"W(HGmY*/Vl>fVZ2/kY^tlWM9.e'ydj\yfajJuyo\^JpI89a4S8C=]+,Qdu53InC„U"fS1'+nnB<,X'[WT5Y&JxsUCv$ARiZsFN$tb*\Mp4l6<NxfR?A&m+RM-Eppum:Nu„U")P09Wsr.xJKOl/&'Lm'MTN=DS=SZypbS:>K>KRWSG%EDe0fe3WIgJOJA8NUYBQJ„U"N=XU.bhV04$+*/D^C9exVCsr>SrJAB1XuLoJUB_+53Q9h.2twZM*9qu^6TQr6<l„U",/PZqiD[tb^U,10+%Jbfn%P8V2'2]/44)c60kVYYR_cTT6o)qyGt<Rn*daGJQSW„U"g2h6em2l6dpO->2']yul<\31J'8Z?2akI>Uh+n^,R-N9cpj'GRVB9XIo:QZ2?72„U"+k062<x/uE)ucgRj'K:,:C0JDKQM62Fc04c*:Qr?bE*pf/:mhfeT11Z-38G3_CE„U"BSJNOSCu$ld[uEjU#mdFn#88'Kpa4*lz.&5K;6Yg9G_\6[>c-bW9Ap5fG)u<>^[„U"CgZ.l]irLYb8K9['sc3N+IH(Io[]Ds1jE7^,CRqu)BMm#Fj7m)g/,fJYD9NOAW4„U"[TA+OGVv&_OsN#Q^bC]5*2)%LhB^(IXIu+20WV;v:)n)OSwmF,Jd,Q0(sr:p3<k„U"P[:-xg9TQ,a3A'^D+Rh,a7rGRoG+PI<6mm$gHzl3+WWYIPcmJ&t?x)<FN2j0Hb6„U"Lsr1y.s#Bs=VlSKb]fd4eh,H;qc%2R5XAqx'Ce\;&$LGICFXLg2wevb%R/<2RQ7„U"s&mFS,]\$OXgushk(doNKBn#3a+]e(hw^r1tsQXTLy9eY3/Bo0+*SU*2t6$LN&1„U"WOqR-wU$\eueqS4XQ%/rs-UW)n5a,AZQme9#Vf#XjFo)gR$13RBc1\_,;aFv5LT„U"eLxT<05h0S5xrb4pU.RKgks'=P\n7uv[F):ugO>2FP]o4$On7^qOpn8qU8FqcP(„U"mXf8$+uP0[:h-x2ubeV4o,4fJuQ3UPdh2[khRgO2''K=s[k#).66\rh^Q+yG8t\„U"w=2JF6?T2?3x'WZo82f.$034s5dHWVfr]vkvOfo;C:Tq?o,K;6IxSZ0Esq-m61r„U"e\sVu?]+vN;3]5D8g+0GUcKuES'gUmsr-m[N.NQSB7Ew+spV,Oz.dxh^#9=rM*;„U"48'#,hQ=NRu/$U]t,NI9O-jLH>l+Vl-cKReC8fj4$=[lj)_$3us_3q.b(q2qr75„U"/;j(QyuJ',AeoH=#r3JFlz&1ng%LZXZ]'d54ZJgm/?w*(lATtJPVwuF2n[shHsQ„U"5_x/->0IG]ke+A9?q+TDezMaw+I3M2/<s85X,lQih+(&t,V&KcX,.=#qG%\>C2g„U"eFU^*a=/z.G9n2U-']NiTZm'xEW;DJm.ZPp(*T.b/s5j^:cOmtRZlvOPSR&)^Zn„U"G8ANu/>I6uan&oS3WS>EN^39JJXy:?[l:]b]^rWY=4XV:S*'$89Bht:H&GF:Jw#„U"$N:P(:>uaCQ>I1l-IG#cBOT5l?L7SWbV$x7pM(Q*^30fG'gsXbWBfI[DRIQs9XU„U"/ICEC.QsF^dbJ;W.,z(WTnGAaxY28R+5\g\Fq%f,:V1dkuYfe2L*Y3.o/56S=v,„U">h4gLpRgm8tNwd*K$T*o5L:uqIlZ4srSVhnh$cL7q;Popo8bou8H0-TtGSGBZ+u„U"+>>*R7IUB7b\oKPofoI;]W&*i0H\[oEGZYan:t4Fx+HV[Hr)YM$rQTYJp(_0UL9„U"OB$_Lu1z,q8*-N3Ub[[3\kUpVUD//eyvy)T/jDCg7vm9ZgFP:6sU-=D1m=FKarJ„U"$T,:OX*q6prf*:he)_#^S7r<h^*TpJJZosI5/[$-ejio+XF3Faw[zukxin7V>Zw„U"90o%Bb8?S/(6[-wx32if%1.\>ePj0a\oZ98:fDM^mvNfvtv,+O0?vZ[a\G$8_dN„U".X:0baxu:k5ymUJk&#gk=U6/V7(#0\d_zMCe\uummnLrbZ19wGcvL_rh<uCF0ld„U"%98te8rB^MzsDq9wuFDHb&)Cs6wrDv9n[9][0Q\VH]Z3(\:UJhgr=qPiOas0z2.„U"OddGl?/ZjPa[%*qg#Lq>IqRx\v(CJ5QZ<VqyrS]Q_HZmlKmr3shH=hGZX>RJ2,4„U"b<oLSouBJ?vI8rL,N_%s]dZh(?>%XcsGoTC*X54QC'Nu^Z\M+R&h7%Y]?g2Q9gu„U"M:5uAixuU%NjV^]jEQ,mJw;S;\M<#,Z^_S/20Ch\EE5P?bbDo_31JmeM^#hhFv6„U"JWd?S8_Ra8u5qI(BuqYL(Imur6tcA[_]3Oip<t&\bi2-1g?k*Ig_M>7%tGC1k+0„U"e6k*9'?;Z/gI7UD2LTa^*n01C%m/mKpKmnv8TAHw=k\dC6C1_4LF'nxz99lKaK[„U"Dxv,.#iLHkKdh9LT;l857YT7^X5>.B(7NN,%mnq2tQ4ifsKPmF*G8ToS1WM*4t.„U">(=F,#HWG+fikrKF&klF:,8De\#/uYL98ya0Vi%CjP&3bqT<Tge1%h0d:n9YkQ7„U"(yvh'5I(ag/q_HI-[ShsPT3=*goDlwBHB'Kehb'Ag(LOcYajtg$w:uigG8%&up(„U"%)9%%#%-%R'-uF]q<C0t%&%%c%,%%-#%%%%.nj&S[nsh.hd,>SdU9U(+f[dA+zL„U"MwX$n\=]KSEB/)YeqX)?.XD^Rj1k&/Pj$h:LZXH%-9Afj/ArEJWlu]]QgqM:gcZ„U"-48V?:eDU6mYnTH$OM*5vv8Y11N+9GW8+rhZ%zNQF1'QJ(E3K<'WS_JhDGrKw]O„U"G%_%tc\<,P?pu,s,k7e.2hn-vVGA:^(Aq+'X=::5u$:i8i>r1gWgk\u+;h>PIDR„U"2#TTPID3Lg[DBIQlMDpDnd^.i6p44k<?7Ra)\z3kx3a\s]?oCs$-Li-F\a?^AlK„U"*jQXXoYk8cdvFm=&I0Gw?mtW,)12YdsJ>TtWDm&nl&&UUsc<fv_2,]:UdTkoGBn„U"ZEK/-wZM6YjFR%:X=E\1o&d#.UEFXdTF%8LYP7JG?/:=2#?pI2)_R9J]gOpPMNZ„U"b>*+35qm/+t_t/o.ksG;>).F/p?%GcR4%HCnYeXOF9T$Plo*Zu/dWt4a[V&lXE*„U";qfZ$8NYNnUEW3=T$Y$Q2f4>?LtvmlDQ(*z7M1tz;Z8%h=*'<=5%oBDUCJBEd^Y„U"bN0lkVnnW+T1XgVDl,NXQy;/rMK]SbrY5MnYZ1JYnd&M1\8]N;Kd[&8Y:pPli3#„U":5=1mqZ5UQc*d9<#RUQ#(0+hz5C0P[MKuoo#E>Y?K-YMu%a(up%()9%%%%-%,R-„U"uFK/0S#%_+%%&z0%%%-%%%A%nj&%Sugq06zNqaxPCxYmWK.+WdEHA*[pX&Yx8+Q„U"[EJ^RiN-&Qc-/J:N7/?lVaM+mRgtkSeaOAT$pTz$V4SwLe'C5?t<2R]Dq+qDVwU„U"Y7+gI=GU?UV8jMqmNWaVRt?XpUrTeO2h3Ngpl6pJGrvMgpkkh^lsb$qXRXX4WU/„U"O*OUg<A^Gx\'7K2reQuC+FsKk/Z25bF9Nt.]-22;+(ZQDSkhrN]kCf&zW1D;%B6„U"Yz^/%D)<+v<F1&e0/^DZ%s$llh4e*/,c(RQE,B;zjzhy)f,AM4Km3*\QD/xak4.„U"+.WLP6pQ5+9JhKEzVon'$-C]+M7-]x3bESu[YAY&'IoI[732z/&hVL>A[oGc<rl„U"oeM#M;87wYzXv%oVC,Rk,0vZ<nFW['(PM_[7Wgbc=sT/B_J+<I1VW;p^WJ8Ikd^„U"NDK?6w9&;GGF\D3:&pG8ya1Jw5=A&CrOC>fyKM>3)J+'o)=mF8&G5=QS:wBmA'9„U"RV#Q:-3H4-MYkLib(*%sEKc\]mos'7'=xK-7H+FrY,4Q/MSMalYb>2f35T(&[Ou„U"4W>2)>U=>-:JAfEQi,1A4Fbgk)^1EZ*t'Ari[2W?bf:r9I9\g'I48PBIFZcM1o)„U"]R.&'8yAHQtT,8';KRrZg-i8uvB/?kasS&1]LAr;SGC4JT^>Hl<>.9-zbL$BT*(„U"T,yx;DPNi94tT,KkMqq2W&/2'W8%b&=r]l+,tY+iakeqR2]6>9*Mw:=(u4km9*e„U"08h)M]V=OaW<Y(U&R#,kAAXk2K/]+/::W>;vh,a$]1=/Jn*Ev:jlwwC\6PMgFWg„U"<T+u(XILtsbM<JNc:^$tupu?endqM)0-?G7_sDiX%l-*t57_qi31+4/Xvg*&W_d„U"9+YmqeMMRx>mZt=E4>Ox*W$2(.pSDU$-thbmmA+/o4P?ULCSJ,QvExJ>EX%L]gg„U",B*sEbBI&o^2Bqn2)E=szSlRXY(STbahTGS)hWJ$,?=QSPvXowt2_gl8u++?dTa„U"YFV,.7$^s&TWoa-8vXhs9DhwpyKFGoX,X^<M'rn_Dv?5??,%34#0US:=BWp>v;P„U"b)n+U^uY>17[yBBjm/hWD?06ur22'lDAMGc6[Ky^4pkhB^+_XQ[G\,$9LT;8JCC„U"I[BDs6#AjZkZAtDAnAj2AM]l6A0]aMklA0&AH_;QZQmKYT'6$&ii>pRAT*<gzD/„U"5yCy2F0ts*P2*BE'#Kmd2_aJ)NWKfOShV\Z2bwWoHWkNdfU'D9\pf:I(XaW&;Uy„U"?pLcOkRuiXMb[$ExO,hGoa)_\t?2T3)&a/71MAwItngESMFdoDRIS[16nDSYF_%„U"k,3Y%\,Ck7Lw7hJphPr=aHhb%91C/O)q5mB#[=[0g4W9e$&cTDQKXM+[lD);QK4„U"=fY(wIC;+up38ZPOjEAZf:&-q%<$VxTK&o(##:)Ps:]=?*0L&I;/KI5wO321')y„U"aRLL/[sgGL-YbQk&V+XJY-A#+M25LID7tgcqOZ0P,3?ilycVL(teTAo>QIXgo;r„U"PobVs?wr]CXT,1/(B1)a]1f.%(,Gop?NOIBfsIEafb#Y]Jr7PM=j3(m^pXQv+pb„U"cL4WqZGE^wI'.3Po%^o/(gBwk]Z\HMEn<]<Ko_]a[K#scFa+Y*72rWbWV.BX/b)„U"C&Fn8ukV>EAeqk^?hVgsz:V4EvfK%b1W+L%YDIai+ZU<oe25e\7dK)1\YU6XB</„U"d.k;5lu<gd#kv,]YR.DN;SOZ*?Y;X2vCTUTU6RZXs1g^ITR3Be28V%iI%S?;A7h„U"RGHHJl$)XIL,I+HXgqQgvmjX^'vmfjAf9n]/gdLs4IPN6XfuJNa1TU5JNb-Tjci„U"CA&0vpo1?ahf__O0=g]P0M,UBNFE.&PKsBB2]GAHred;j#5$NhG-Jpu,Ls5$oNf„U"iP;lXNugH.&>,a93W'e5XH9)HrFj#ecQ&p-$zd]C#UgNk1GhpAS6ah>nc8*hef\„U"6Ks[(Zx]pr.N$e=DtiWTYzovUGH1zkGLp,u80p#*GN]v#$T^U3ru0UcgX]X8^\(„U"I]Ld+b'ldup%()9%%%%-%,X1vFh6R[\&I*%%&%;%%%0%%%A%nj&%xzgS[gfxF2'„U"<>?m^5w5b$kD_Yy_&TnYIN.4G0,6Q+2orJO-wFP&nR0p2'V.c2.\9?vsl06)WTr„U"IFrsBjJ3[#NH]6mtHei3uWb<#ZC^#.d44-X=[T.CtC3f3tNLhsuKKgmC?n#Nrt?„U"XjKv#8w00dF?mrDs&skhiYH?(\:n,^T8eU;mV3\#JYs_vKgrWcm#5/jOgk7/*8q„U"ntG0rv%6PP70o]c;Zj^2iW)5CAn?.M:hIc9DsWa3X_7O0MTW-Xg#iB:hpn53x-D„U"AF*AFp)QSEKI=7]2\gE3L1=B](+eiBT0W:pY'aY67tu>=]DX#Ng\EGYG^t;t:9m„U"^__+=1t+%VpI;3_JraY:NeqtDsPF=kvi%QYDl1V1rnVlxP:pfNP<k/*\V,'khvw„U"dkvM7]jGq%E,7j$&n=;8B4=*+DB_i7&[Fe'K:M5$T/2RC1&R3Y';V5O8g[SM^^/„U"Zv7e'EEf;6Z0FX1]uj:(v$Am,S?(a]U:Jz%EU&$%<?)O\];o)1TSBX3%f^?/G,5„U"R\F8+q?8&nJjiWL+g$/uP^RO);sf8V9t0*Ht5l:V5S,cjOh]:HM;VZ)Xgizb<cP„U"o[63-[MSUg]'>)UB0+eD#IDs?S#)>;Y5&Gs-1-[1=dQ)ULhPFeKfh,TXnQ[iY(8„U"K=r39RvY9>[tg/u5UQJpgUAgo4K'eIr(8)5>Ybk1.6.pfY$;>;ujbCdY[bE.$u-„U"D(_-zV-e.h\a^3Z^&T.WRb[C3eP\Fs=;GZ.VHJ*lKc29wFLPy^P_*xX3_+8)KvF„U"4-*]go:2LHrvu[05J.M>*bh-u^hgb(imq':/dT.KuZ^,ZH#A#sy59q#v.UxhXgo„U"Fw(2VE(NGHA;Iqd_6xDFG\G&l$_ZkE--W14VYN7(>x3GS,^i%Hj^n_EsWGCPZJx„U"F#mM/]F:cjtAKr)o7EuBqRb-#2Ot8FDVis$O-^>kH]\JDMYh*FXE'pMmB&3L:M)„U"2;XD+H#'E^;'AUzdn&H6CzdV%.FUcUerP[QN>PsX^_a.7nvIIiWjjPj8<Fe4F,>„U"bik^mfSuPtkmXPk$2i*qm*GoYqoHbkGq[]&27-DX2[#87+2]H#mRn;PWdaI(FAR„U"MiAHJY.P<qYr%,1WC#g2P\uluA&/gLB4SjD:>YiD?wEIu.n7]&H>C](>3qijOX(„U"2uEJ5bqan?VRC\AfGzSh_\X-NQHIKSkE7ySBZ&/CKNKU9%^YW(#(8L0DUB%n0NY„U"NN(kK*TTzU&n)[HZ*3ozwdl9i;D40,-g.TAO=O=9s1Xj)nsZXL%:\=FNqIKpZL;„U"IFMOp_$[eCTj<-nGoAQnUP&P%'h;Pj4r$j(c(wSyMgSBFEgC]*y.VEREZeUr/wJ„U"04cKsR-B?'up);X[Ib9ie7#dob3LWmVCV>+UOo?E_E;7=K2/Gd.8MN'NGaGW(\p„U"\mN,sR5%hsLX+P>KT7i[9Q=Z/)(b[/5H6N+1BR+LDJU-'P_JK=8#<eF%XRho#FJ„U"wwx;th<5-W*5G1E.5Pe6E8tb0dN(SRZZX5efu7g2+0-2bCs(E(*pm5OkZCLHf/N„U"0f6Qb#eDDyw)lY=IQ_POKYbRHI;xq&S+ZQYg^c*Ot'r27_,C_lp-.N\POHKe*?D„U"x,L8zyUzg^5v6u.6(uQ_6n$A%KH]q6ST^WN9iEl\/7D)?p;IVCgw<c47]eK%-T9„U"9iH/cZsWf1=wE[rP$R*5eE<i#Dsum;3oajl4*#aA9t%Su8jPZzoVahxZ$fwkFR7„U"NxVT<6pT-$oIpfNeK.B^huCdSZ=bf0Yv?LQKjP4oTMmJxxw%(up(%)9%%[%-%t&„U"bvFd9TYI5%(%%M%+%%/%%%%w%jfir%jSVx^yDyD,AT]5$5r/x7Ul4oP5u'*\]tP„U"Be-Tzu[ugN''S#i3(Ncfef:hYk0n>OyCQ6RmiighgfbC?/1iwtgkgV^+HxkNc^k„U"JF.l4Z[,o,1YduVaoj#S$P5$INLv2(f'#a0LV%W%8%7UB6$cMCnNL)g3y8$WaoL„U"B'Q_V[z)(R\Y+^4War$NRi,v#*u.9D32]Yl5O6GfGPfg<7f.V)1/\[oK%'dW.A^„U"R(uX0ug.J#^/oGStSi-H&tR0B]bE=1R#eR;]WoJpMUEj0-\nj&M;MH'rDrK7G's„U"_%,pe/D1nd^u*L8QL<9%z_1[%?te_.<_:G1r0tX0s=kW\j\+<Ze&pL#+xhwrx6*„U"PZ(IN0iq^d2$WPr#s4h9?>o];/l4fuBX#Sd&9Gcp.<>K5l$isD.pb2pu0\Q]XR]„U"xt\6)-a3P1m)%]=*[K%TF.-]Gx4;EK0J,2xS;nSd#IU=XC-gSJnNP&yh8i'8D%w„U"F*K'NE%cQtY^p+t(Z%>iia%G-7wMG-Z2/Q(m5A;J/CcME1j>nDXlrL#EObJa(9x„U"2yAu1R9.TaHX8OjiE>D[cqK)Ja^#:7&A&>0SQ.EsCrP)#G'#/,'edMO1$Yf;xMK„U"?yj7b9.r.n%G2+2q])IVy],rEu8_nRjpZHUcr^#/VScX[NLI#(z2QZHX31ug/TZ„U"HUp9Hh$hNEgh<e1&EwXK(RM]3$Dw>uxp]b*PoVI.?;qpTfN;Z\Q2*ioO,'I/z&L„U"7*<h)G20jn2NBu3])>Khf)[uNA7d<LZdPSgq$?ai+TILxZV.?^0t6/cy7\+\vD1„U"=[?7_.-_9nAM:(Otfubo$rt%1iAMCTNHfl3r>vlW_w7,nT_o+,:Le6uUZqcUf:#„U"7>FPn9ig+,C'qj/R?IFr,3]i4BMc:?f\Uq93>%j<o<cX<SHOF:V7VJZGXR+8]lG„U"d('Y8A>MtRq1hRIsXjzYn+Z;Aa<\?)EI_An-3GHhVfk^q3SNa5F#(aTw$70>AW'„U"VerJ68%%up&%'9%9%%%%-:%X1v+FPxB%(h5%(%3x%%%,%%%%%%%%%&%E%%%%%%%„U"%%y%lfSf%xrup%&'9%%9%%%[-%z17vFRN'kYN6.%%$l%%%,%%%%%%%%%&%%E%%%„U"&75%%%ylfS%gfxu%p&'9%%9%%#%-%K'0vF>=HrYp#1%%g%M%%-%%%%%%%%%&%%E„U"%%+%/F%%%ylf%VSgf%xup&%'9%9%%%%-=%'5uaFVyg-[91%(%^T%%%-%%%%%%%%„U"%&%E%%%%L#S%%%.nj&S%gfxu%p&'9%%9%%#%-%R'-uF]q<C0t%&%%c%,%%-%%%%„U"%%%%%&%%E%%%%2$%(%%nj&&Sns%hup&%'9%9%%%%-:%R-uFF/0S&#_+%(%z0%%%„U"-%%%%%%%%%%%E%%%%S#b%%%.nj&S%ugqu%p&'9%%9%%#%-%XB1vF6VR[\I#*%%%„U"%;%%0%%%%%%%%%&%%E%%(%]h%(%%nj&&xzg%Sgfx%up&'%9%9%%%%-%*tbvFadT„U"YI%5(%%%M+%%%/%%%%%%%%%&%E%%%%Vn%%%wj%firj%SVxy%up*+%%%%%%-%-%'„U",&%%&8q%%%%%„END SUB„V2„CLOSE:IF S=244AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Douglas H. Lusher              SCREEN 13 PAGE FLIPPING        FidoNet QUIK_BAS Echo          10-17-96 (09:38)       QB, PDS                151  9910     SCREEN13.BAS'This code allows animation by "page flipping" in SCREEN 13.„'SCREEN 13, of course, has only one page, so this page„'flipping effect is achieved by creating pages in main„'memory and copying them quickly to display memory. The„'system works by assigning each page an integer variable name„'and assigning to this variable the segment at which the page„'starts. This is the value that will be passed to many of the„'asm routines that I've written for various purposes. For example:„„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"SCREEN13.ZIP",4^6:Z&=6799:?STRING$(50,177);„U"%up()#9%%O[-%L(mvF+E=VP))%%%z0%%%.%%%%ij%rtVS#gfx\h%,>\.[5KTuIx„U")p__BAq>[U2Mni(sY:]=Ge:SfSs9SaK75<*pmqds%1?874p,L2r3IV1'qu2,,,W„U"<dY94c4hSu$)38tSbVm5Iw#'2vf^49L#18^$HWu3jVrbqFzr3uTk$BX-[N2\JZP„U".YegxPN,>F^k,]>G3_ko.$4ac5hg#E,Hc;_?6U.iRl$l*q=]:d,#JP3VY.Zvf?b„U"rr^*I65W9^&8FDb_04G/(w8>p9&HE)*m;-b5AF0;Pn&?9RR>R=#]6NartA%PoBe„U"mIff^\F&MT\gNT$q&Z(%ievbLQB#ZZPZZW>+LFR+.IsYELfG3;O3)Bq9Ay[>l?8„U"ma$8(VwJ/pwS(./B=aNLVE:ja6B];?y&'m&[75MwXifVAQm$*ed%DJ9INegS&lu„U"dL3)6lZ_&&EM1m?EAMf\O6^wSg92HB.X-A:Pn<0(Eb3)CE'uPOZpAfdpQvCqsb-„U"k8ewc+SO4;ThiJ2n3'U7;fUz=S,N61C2Bxu%reKeoZq.5gD:\E#8&8M\g?fP+AM„U",E3pGOI3h:K1l%AzhSms*%To?G[BF]hX^gpXe;Ujfohqo]5(;_XSOehC#9r=XNO„U"jjaP*+:Mca4ElU02wk_m]wVQ)I6/H=b36Z>ZCc'_ux3M.20uZZc5xW2;i]Y<EuM„U"c-df3d9Uk>&Z1ax.IWV-3op7pXQ/;LR8:nl,>1$<rlB6vv^,V=;oJI[Jr&bU;Nr„U"1&tUHH0U#dSIqbpTrIRrtzmZIR5\K1QDc=2d;wBa\cZPrQI-^sW0g9)v;H8Pj80„U"3P/q-HZ.J+=1EG3I#2p]OJJTrfR[;txm1-IOU;k[=p^.&896H_(3uB6((S2*f\(„U"/D9T&J#aDt(INTif__5yf%_L4*6B%WoNYPzo0z[zvM,'du-ieh-0%<DTO,#;\8J„U"Ais_wL'Xn#3n6#m#WZCM)C/-&W^8t*S4o#Y[oTBBW5&+Y=n2fH,]#P(RnKE]g6I„U"BYPTI#:VR'Zw0TICJ^3mE5GcjyIViRVb7-s6W4n-[ZJ'CfUGKX20.x+-<XS+9Q8„U"WNNhLy8,Gm_J67=l_/]ciG1n/]ln%gmTuRcfJA9awfWKK0?D^1o9aoFuY(*/$a)„U"()ErN7lxvA9a*7U*/7e?rcFe_+FNC;ZgRktn\cuil/evru(uPW9ic(9Xb'-dRiq„U"$q6m*fj6H)8pdpa0kM\X/Wd9MdO)ApfPRo&]>wesa>/(mb2uPzBe86H:?qaxVps„U"T4CYW[>O0GhePpcUWwAOf[Hd&P?.Dv>z(nuG:ffDo,YE39)c9sa?by;6M1oif2i„U"BHSWb*:r,#6FXRD\cR.5]Be7N/[6Db9V]\x=bX\LS:J*f8Q0Km2L+hf6LG[PaV#„U"56nB6NJ5vF4[e-1q;xx#mRyK$*0/nrLq.9fJIPK/2UpU2vPVrVxCqo1q6dHl$o<„U"T1vWV#GtmIE],Jzw\x:9B+yOb6azT(pM4aP/qb-HPq#CV(KbBxaTM+XJEFAO&]]„U"Rd[cL0=]%vV65XT&do2uIMVlB>P+/Y]&u*gN&u%p()9%%%%-=%G'v.F%>k-f6*%„U"(%N6%%%.%%%%ijr%tWSgRfx6&;<>[kO5w-xEx09T\1S5R#Kl8C<&3)83I#/&bfQ„U"z8^]0(g/Pr<xu;vsgZE'PS8gAvwUNXfhMHmllc0Ve.B#7+0m/&EQ:OUq>WKG>/8„U"m)dj*qcg7G>+U1CN3V;7w+TU>*uu8Cy&$g5C#]X:Yii9-HQJ<KSsF/J\BgKWfO^„U")SF3P8=BxW?SO#E(htE/\Lsk809[zcErWKnO0VQfQSH0e]b+8eW4KjY;*A0[pc,„U"K:4&Rn&$OgWZboh(7^0URrwhf>5w-_$TlaMeIQYE<]8TBe<<rZU?:jQUsu'^B1S„U"'D6+g9i4'-$7HA],]th/Y07Ccr63$to_)1^_%/ZwBYDG8S/YT?+D+RjL.MR.qIe„U"'dDwNoqhV?U+qux0bo4\HifTIR*>2p8ujcFYOLY===M9<GW_b>^N06Zm]qFi-IY„U":alcjL]kd*Gu0+VN>;vk>ig=fT-m\j<q:,_)v5x0<7'+EXFUZ-$b>,>D&:enTjL„U"dW9NqQKmY9>(1A:b32.DU/^=$wYfH_*aH6UZLd&7?7$?<]ZW[wC)g]u4qbx\;CZ„U"&'Cgvp$:_f$2?K#?+O%FymRWlSE7[y<&Z2Hq[3:B>CDjB##Tq/^Ydb?SD9f9>9v„U"<Z6#dB$&C[7kSsn<nz$CZhJknZ,458)RSf9P>Z$T9JA/n)g4Q_2zr.Jpur>*\(1„U">HfFGkFJ'):m05p?8VeA+7s,XQg4M58/,GC=wE%/;uWd4)2f,pTB2vPy8OQDa\+„U"w=a(trBr.6jIU4eyITOOTJ1P=o%rSK/i*/l4(d?'Nf7zDLc[w7I>8KoJyxup.&.„U"kiv8y$7?-x%/52&CS&op*LUe(nB+,VhEoEV%cwDWDE$zo&B6=;v(:yAX\I#Csco„U"-,PcuF>SpY^wDbS%+r^.S,IV[rYX//N;wFQg])0gE[W^[6.OTcQxO#zEsygEQ?.„U"G-+:Z]+E0\7-42s';w;RJQzdR,el].c,>/&gDF/#,jrWmDpF.R4r3/n4Bm^2ivu„U"0UZU-)g/8//AKijI\[*rh9H95-(=2,<:YmA1&_8RTKNb&G)R_:KhkTGc3>UMr7s„U"l?U9;b/KndA>rGIy_mhhV-NYqoR8x??vV#UiC]9Ammc4nNTS^mk,$H2p$H/)bH'„U"8t#qWt=qKa,+q_Nq\5^xx.;XHfl:<0X)BUI,,$h3k*U_7o$2\7&^HIv.g#w+\/R„U"hY)$\rUDu,%Ek6Mgj^Chj$eNt6p:bKRbXSwM&L?WU00cI%\7K^JX^^0)yOdFcYv„U"f^:vE9kWT\sx7BWu#hBP3Gz-d$b5xKTep3JZwX&M>l03RW/:],sT/F0iJe8q#IP„U"iw.#;&m[q(f/-(iyaOcZLX?heZnHV9se^=P<j%loy=?r]B<EhW?OWBR^ACnlkPF„U")b/PA[-W33vYxiQnJvq8r.J\mzVL0#l#k&VLAVwEAJu.<VQCK8ZA_JXRnbDg\H9„U"/kp<H:kxb7tCo'yAk.Ck:0=NpV<D7E7#?NxdLP>/Vtdt\d7ZyZ?t-qhL7GmYV>M„U"ZC$^0>nuYJ;_'PX[MLqJ:.S%ICbd&vqoB^Fa\e2:)(ua?&bGtJ[%[rFJE_CN'8K„U"gsF:_JpA4fJel[UlJMd%^H3R3*2&Nt0vM2nN+(6m<?\jgTC2>.lSHP\+i\q3mb<„U"eg4Ph\;Z2hB[GWxa/u[UjH2L%(k#MG=%+7WFMl1kq_bz<19cFAs&imP>8qzLbT3„U"$)m45s;N/>?=f^Lo?+:15xizjY>cdDSh#3daQ3^O_G6\HO5e+dr?086gR(hR#1l„U")u-Xd,q]]3<#;MJ7V,d[#rMmEJLY^#g^LB=&S2AFba^Ch:FN'suI]?\^%LxA2Xk„U"dm/pArq.SkgOyV.k6A8ieW/,S7S>+Xx'u%p()9%%%%-7%1'vFF^cN&_x&%(%M&%„U"%%1%%%%xhw%jjsV%XStg.oz^$%mHv9GUx$hOlAzYA<QQL*9?#fK;W3=77FG1)hX„U"vFa3+IV\=6<KLM'X3(E7HG+/jz=W:)*Xm5uKRS(//E[&r6A?W4D;QTukJHwh$?J„U"F7W<PM(&zCdD_6K1pjVgXO9_VYEBXE4hG2JesL^W&G+8hGUk*[rKXDeC:.5$(^Y„U"]#$-Ns#KK.igqq1[%l97d/eF\J)NNCEVib*l1zl=&QZ5,+.PQ)1_OaN1s_VY5B\„U"Wtv3,O5]pk]bm=9q*LX($]tT&g[?6t'L0L'cQ^)A_2d=IjnC1wP%\-A?'P6+i'L„U"j,:?soR-+c>7IjP-vid]j2MvKgt7sw0LG1D(rNH2.Z=Apa]cD$0eTo[?Xg*r<#r„U":2'(IvRSfxu/iddf&OSvs2C3[+&PbwIt.T0O<L<OoB7L8aJ8aicV#6Z6fgaEju4„U"d8M(%up()%9%%%d-%('dvF*h-T>Z27%%r9%%%1%%%%xh%wjjs%VXSvRqgff)LGx„U"z5m#NnD==_8IR]/4A'KB$\x3zMR+=.e(h.wo(RL0YR*_FsT(9s5hAbqGXQN3RBn„U"gj?=v+Ga=EA3M:S'OR<;i7u;/x#6Ag&pDj,:#Ldk>U'ZNZbalvWbDo1TH,Zxhl;„U"YiHvmlltlls$$uGl2puD8%JI4A8XRu.McRKkq:B09I[+6V$PgusfLvYaf)=])P1„U"u3SM/OOb%)C-;R6:;9iWQ.&-,,e+4a*L<:VY?%U?+r4X:;UL<sPV7f;A,Dt/:w1„U"':P<.a&m+iHPLYb<iSa:,v9*J?.[Pld97=(=/Sm.(4RQ\_4o:[Ou*O.'TG'.a2m„U"(\*f55j/oP06:4oDek'69C*?.[2P:/7(mufxC'g358P^YC%UDa'AAe&'%3Oe2\7„U")/qC>G+;I'TQ&99CiKI])]Qk2YLi+#iVULFfX/+OqSm+',e'T6,TJ,ubeF.PRoO„U"8))keF.aW'88$q:9Q0W'$hOzi,LXujhZ\%S+&w.1&QXeW)(8B]73IBo'LeX]U'I„U":bn5PvxZ$xO65TsTp*F\$WYl77;qa6Q4>INU)l.IiWT$Z5o2MbIW4xFdLZ#p2NS„U"AOg5]\1GhAl>LwlFo.3J(ZJKm+X-BTc\atEn$jnb,*+k\B<4LuHfJB9j\YWG9'W„U"f72&4ckQ,zPLc0^qZ:]q:ZBgCn;ka-+P?em0NP)fxDnwh9>A3f/TrLM0Ktdz=ub„U"^f/r'$vBJd(A&2NYi]njQc*fMc>Sr6%kW8jS8hQW4mfQPQnfuPSf6JW;,G5TC+J„U"N>xnE-G4gvKrOg5PWG*2;VB-g1#?;0EgQW*Kj&:GOx-:3*4LibN4ANKi(acW3$j„U"acrY\X/fXTtp.,G*HlZv$XOL#^;0&AoH?m[adXwp;[cgr>Voj>V_)[=xkK0JrJS„U"8k0k7;Bv#:_1R76r_x8A2YTIHTIxL).__agTI&MTOtgPZa5p?,^3rs9L'l.Yx#i„U"sijy#U=]Ta/#6jcE)T[9^'$/n9HrI:a:NAC:;YrAVG&Ao$3p+p)>Ym1geX9HTC:„U"io$g\,ph:w3(P(YlG$D,pIY1),p>:9HJ:/in$S)&7;jMmDT;:9HS:0s&\cL>DT5„U"ELw'hChrr_R9?&RKUrr=*A+?R&^CF?Wtk-JG,P],L8Cly6dmgGYboW?$w\8+A;U„U"wvsRG)DM97.ce7EN7fnXNg8#^J5IzP4D/XvDni4\UG+IBu?$wz#4I81z;A,<y*I„U"GJ2VI\3,m8xZ4tmBqFv.KZF'Y.e'Il*-3m7$\mx^IrjuJWGF;UUaXKpG&G,&FLi„U"(,AiPal.[Jvawu>^mlJZd?-31p%cpB(S#N#epmjs<P0S)mWs09irJ9p#hD+fT=q„U"oWB?Te6;:b?#<#73EIWXLI,hqMKQdesW,R]]T'RjB#3KnHDYoc[/,VHML#nZ$tK„U")&jPL%tQV7d:$RBG7LB&:Aj=>ZxpYA4+(qGV:b)^;ss47mRc\/1B?SPq=w8PX+f„U"/5/CLW#U(v?x6&:RUVzZ02)1)\Z.fz[N)9AlI(s*k,4H^JN0c+2nuRqWCbdwmCq„U"R5x$6*Nxh>z<j\XQS&3Ssr<xAv4o6:Ths,g3iI_-S<Tv]qa22K].Hce[o+IMXVI„U"Ghc;e<cfou9Pms:JuhbJjL\KULHS)N9fK4?*0RMtp8mjoM8AW^Ur.^8*Px(L?h9„U"&.7Wx^c_iWpvNrw=9'\mobR9jL2RXN1LoifQ1RkuojGOk]gJ?p4-$JP_b]1w5JG„U"YuIlWCb;GZVJwEd?o^oC18dc:sHNGYm]W/3;2XJ98M]3b8%2XDSLNv:=J*\4Ma9„U"]Fg=d:JThl'cq&i''W5CK\Av&s2l3&QS473e=R4R^FAC1m$7PL]/^oo8k]f+GD.„U"%7;xL<lv]%jHiol*6&TmyA%=oXwuAgPYcsr4\<4gk_^'G^e8'$Q:c<Dm.O%TLZL„U"DSDMnRfjbA+Mmgh)M157X^nqST&4/,NA12cZ[j,tY3&g[BI=MEe_c9HgQs&eXjA„U"nsviE$0-Jki<0JfaQ[8y0Hxnu[I0V0FFoimMkWM-4]I6kAv9q-Zowj]&6v233y_„U"f%K-?f1[[T(<mHkP).AD0ru;r6+O]r8EQ3Q4Oam[C^sb2$*FnSlW6uh3Vu0rYUl„U"v2S10.d#3)4/owhxl5LJ2M<YFuLL$6.?foJ6Jut9vYkPY^jd8'T-&/K/hjMRRrX„U"VLuo1X%'U-o3-DF$aBNS8JxRMG[x4t#1Vk<ueioFa2HTcc;/CUx=>%<Xq_=^$B8„U"Di;ZxKu0)\16mM\/ukZ7ooDbJak]Alc2T]PN\vl3[nOBC\_FGlLQ*HPNHTSND.S„U"\EGL3=9F=Jg*F].UvvEsp'rhaoVjb.tx]OCnQ8&e\jblTNfw9.dgF9TvkrJZIXg„U"nvHSX)pKiZG>VMx\v,UfYs]*-=a_)=;K4GQhkLV,^Nkr\J;_68GkR^jcHR'GU;A„U"o2oGC]eFFG;B5eB(;S63GAU^*;((C6p^?D$ev'G/^Pl_%S,OwGkkqd#_[W%k,dY„U"k&[;CZ6zkgzB%<J(R6Dtk&Z%YP,.kZ&\%$W,5G)1^J[X^T6cGX9Gukd*]:\We#G„U"Mc:RkGU[#/hc,$^TH;R0k><\ejlGwi,rfk6=lRDkfE_;46W(#/fZ,8^;Ld6>#qE„U"_,0s^d_ep56x90R$kBHZeM6VLknB=[9RV'G+^$oG>otGLG]6LD?EiK,XklH^eA6„U"T$^tW<,0GSn?[;Ri#kL;lR8?oF$GSAKoN6fj]tk,PN^;[K,-6&s]4?RV&kvX-,d„U"]V[7U(]#^?,_$ew:UR'7:.Za$jEs$JGlNQh.RH4-BqJ8y-c:z-]M+TGOTMEc66_„U"d6$C2f5dT)D3<R)*%yMpxev8sDlT=?Xxw>VjY<;Tm\Gu-XI)Crrjj,itw4,?i>'„U"+337yi.H(Tr]0>Y6h9AXshS8yIOnV=eLAqMzX9,HanMNsH\$OivpC8'I.*wpusK„U">[]+obgp/t9p:Salmzqa1\(Gb_.J,jmXvoXE&#D^C(Dpo8;7jz3&Q/Fmd+gR&5S„U"URtBiEgbW-6Nmoi]fikc;$5S\,rWLGO#bLxOoMVtYB$-E>nbod=of)#&8g?G=r(„U"d?)d[+r-\E.g8>ZDg;6i&g0hYn:6f_h(,qx'XbXsH_J..DgETS;gJ\g&igPSIEU„U".sF2T&^fUp[^#Eh8Xi'X\\8)oq\af4_Fdg30h.<NsYHnZI6_DGqx&BrY4&vj6lj„U";CcWa8qI)E<gqngLROYx6q5(Q8aY#.t&S^Rns#hXF<MzrJ^aFYt(RAQDLnA^7;N„U"V5xWa^]v5TGf\j-FaT8T;DRsgD]8C<)N&SYa%dpPS/B9H-t+c6xkrm<g0aM#QIk„U"+bkxgupdo<*k*g,3]nY]+DA,iZv5uyrIZkH)TMSdaNm4kQ\*LbJRg\e:zqX99DP„U"[y5jaE0j.vp>>YtDi;BD649oOa')ZeV8FRKZ&BPlR#*q69T\Ep'npf,aPU4,&:b„U"t'z3ZObSoV:b'^rbya3,-P2;eh+oHOE7uyguX-96q#o$]Yd+ttz3gNlnhCV;^ES„U"dHMVgXTUzWD]NoH2Y:PP%C,9Z<suAV]_87K0u(NLOT%>VmpK.6gVAJu\=c>\zFM„U",]B,X\&$XqN3zGIF_n'+sPY%YP^p9DuKb62DkpcUDB^TDv':ZnOs9F:CS?2qF-v„U"NbyQtAT3]iiv\\Nh:9zP1v#EvBjo]l-.C/l5o/(6TV9(v%:d_BQD>o(&tP/Bhtt„U"c43M()w^'#.Ba<.OpDYQW^oPLsr4?cjbS'H_mSbzf8t;%K_DWArZ-(&Z;QS\*&'„U"\vam^eB2F6BEu^a^1y25:6-tJ\\%7#iwipDxtK%G7o\X2pk^\p^:dJ5(=?SANY4„U"BCeweRf0*XM5)/7h&I?:InwJYNIOmLz]'o:_/n>*kDE;>qbELPoYo3'pK2sSxM=„U"y8;BO0c<8+\op)x8--qj&jt;9:-GpKo4.2<?J:]Jnp,Q(ZX)2[dr4MQ9\epP^KK„U"ic:T<^6jioLrN<L)2ZmyJbl(RIgz:%Q/ThhRJ[6p[v#2B-52s9=(.WKcHS;hQ0.„U"U5:vzlyW\YbYGeSSGs:mLD'Q4AG9fQMZ1Y9z;pfTwR&?XSoJIqc)D91s[W]:IA*„U"g=.YfOZIc?n9s^ASVuzpro.7+.$nPNq)2&V<jV=&N8sg[edRWlsc>$jzP'(m#(]„U"E(SD]/XD)#]$-rU#+nRj^O]<qmqj(cG3B+mN(/(sL+:'MMDogN*5+j9+Bq_->D;„U"OTYfRM5\3dokQoJsmO.XRS/)f4;91942q<6OpcQ9PPB;fhvM^^&SDmOO9L'dd%u„U"%p&'9%%9%%%%-%L](vF+oEVP)%)%%z%0%%.%%%%%%%%%&%%E%%%%%%%%%ijr%tV„U"Sg%fxup%&'9%%9%%%m-%G'#vF%>=kf6*.%%N6%%%.%%%%%%%%%&%%E%%%'P)%%%„U"ijrt%WSgf%xup&%'9%9%%%%-7%1'vFF^cN&_x&%(%M&%%%1%%%%%%%%%&%E[%%%„U"4%/%%x%hwjj%sVXS%tgou%p&'9%%9%%#%-%(B'vF*?hT>Z[2%%r%9%%1%%%%%%%„U"%%%%%E%%%%]1%%%xhw%jjsV%XSvq%gup*%+%%%%%)%)+%[%%(%f>%%%%%„END SUB„CLOSE:IF S=68AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Joshua Dickerson               FAST CLIP PUTTING              FidoNet QUIK_BAS Echo          10-14-96 (16:25)       QB, QBasic, PDS        55   1337     CLIPPUT.BAS DECLARE SUB ClipPut (x%, y%, BitMap%())„DEFINT A-Z„SCREEN 13„DEF SEG = &HA000„„FOR i = 0 TO 63„  OUT &H3C8, i„  OUT &H3C9, i„  OUT &H3C9, i„  OUT &H3C9, i„NEXT„„DIM a(4097)„a(0) = 63„a(1) = 63„FOR y = 0 TO a(1)„  FOR x = 0 TO a(0)„     a(y * (a(0) + 1) + x + 2) = (x * y) MOD 64„  NEXT„NEXT„„t! = TIMER„FOR x = -30 TO 320„  ClipPut x, 0, a()„NEXT„PRINT (350) / (TIMER - t!)„a$ = INPUT$(1)„„SUB ClipPut (x, y, BitMap())„  tX = x + BitMap(0)„  tY = y + BitMap(1)„   „  IF 0 < tX AND x <= 319 AND 0 < tY AND y <= 199 THEN„     IF x < 0 THEN MnClipX = -x„     IF tX > 319 THEN MxClipX = 319 - x ELSE MxClipX = BitMap(0)„     IF y < 0 THEN MnClipY = -y„     IF tY > 199 THEN MxClipY = 199 - y ELSE MxClipY = BitMap(1)„„     Index = (BitMap(0) + 1) * MnClipY + 2„     sM& = 320& * (y + MnClipY) + x„     FOR bY = MnClipY TO MxClipY„        FOR bX = MnClipX TO MxClipX„           c = BitMap(Index + bX)„           IF c > 0 THEN POKE sM& + bX, c„        NEXT„        Index = Index + BitMap(0) + 1„        sM& = sM& + 320„     NEXT„  END IF„END SUB„„'   This is meant to be compiled, but I will convert this to ASM complete with„'a basic loader which will put it in an array to be CALLed.. It is slightly„'faster than the routine employed by Eric Carr.. (Which was pretty darn fast..„':-) )„Ben Kaashoek                   STARFIELD SIMULATION           robertk@worldaccess.nl         10-19-96 (10:23)       QB, QBasic, PDS        177  8006     STARSIM.BAS 'Check out the difference in speed when you turn DEFINT A-Z off !!!!„DEFINT A-Z                              'Use integers as default for speed.„„'The starfield code itself is not mine.„'When I got it however, it needed some speeding up. First of all I added the„'DEFINT A-Z statement. (I use this in all my programs.)„'I also found some unnessesarry statement's and removed those too.„'Then. A friend came with a rather interresting suggestion.„'"Hey, why not add something like a comet?", "Ok, I'll try it."„'I was a little suprised when it actually worked.„'The comet code probably needs some fine-tuning (it's only in there for a day„'or so. But I'm sure somebody can find it usefull.„'Oh, almost forgot. Many thanks to the original author. I hope you recognize„'YOUR piece of the work.„'                                           BEN.„„TYPE StarData„ xPos AS INTEGER                        'X position of a star.„ yPos AS INTEGER                        'Y position of a star.„ Speed AS INTEGER                       'Speed of star (Parallax effect).„ Colour AS INTEGER                      'Colour of a star.„END TYPE„„TYPE CometData„ xPos AS INTEGER                        'X position of a comet.„ yPos AS INTEGER                        'Y position of a comet.„ xSpeed AS INTEGER                      'Speed of comet in X direction.„ ySpeed AS INTEGER                      'Speed of comet in Y direction.„ Visible AS INTEGER                     'Is comet visible.„ TailSize AS INTEGER                    'Length of tail in pixels.„END TYPE„„CONST False = 0: True = NOT False       'Boolean constants.„„'--- Program settings. ------------------------------------------------------„Stars = 100                             'Number of stars to plot ?„                                        'Adjust if starfield gets "animated"„                                        '286/20 => 100 and P100 => 600.„UseRetrace = True                       'Use retrace in VGA modes ?„CometSeed = 100                         'Create comet every ... frames.„CometHeadColor = 14                     'Colour of the comet's head.„CometTailColor = 4                      'Colour of the comet's tail.„ScrMode = 12                            'Which screenmode to use ?„'--- End program settings. --------------------------------------------------„„Comets = 1                              'Number of comet's (KEEP ON 1 !!!)„OPTION BASE 1                           'Start array's with element 1.„REDIM Comet(Comets) AS CometData        'Create array for comet's„REDIM StarField(Stars) AS StarData      'Create array's for stars.„REDIM OldStarField(Stars) AS StarData„„SELECT CASE ScrMode                     'Determine screen boundaries.„ CASE 0„  PRINT "Sorry, graphic modes only! Maybe next time."„  END                                   'See ya later.„ CASE 7                                 'EGA 320x200„  HorLimit = 320„  VerLimit = 200„  UseRetrace = False                    'Disable using retrace as delay.„ CASE 8                                 'EGA 640x200„  HorLimit = 640„  VerLimit = 200„  UseRetrace = False                    'Disable using retrace as delay.„ CASE 9                                 'EGA 640x350„  HorLimit = 640„  VerLimit = 350„  UseRetrace = False                    'Disable using retrace as delay.„ CASE 12                                'VGA 640x480„  HorLimit = 640„  VerLimit = 480„ CASE 13                                'VGA 320x200„  HorLimit = 320„  VerLimit = 200„ CASE ELSE                              'Anything that's NOT tested.„  PRINT "Unsupported videomode."„  END                                   'See ya later.„END SELECT„„'Initialize program.„SCREEN ScrMode: RANDOMIZE (TIMER)„„'Fill array with random stars...„FOR I = 1 TO Stars                      'Fill 'er up.„ StarField(I).xPos = INT(RND * HorLimit + 1)„ StarField(I).yPos = INT(RND * VerLimit + 1)„ StarField(I).Speed = INT(RND * 8 + 1)„ OldStarField(I).xPos = INT(RND * HorLimit + 1)„ OldStarField(I).yPos = INT(RND * VerLimit + 1)„ OldStarField(I).Speed = INT(RND * 8 + 1)„ SELECT CASE OldStarField(I).Speed„  CASE 0 TO 3: OldStarField(I).Colour = 8„  CASE 4 TO 7: OldStarField(I).Colour = 7„  CASE 8: OldStarField(I).Colour = 15„ END SELECT„ SELECT CASE StarField(I).Speed„  CASE 0 TO 3: StarField(I).Colour = 8„  CASE 4 TO 7: StarField(I).Colour = 7„  CASE 8: StarField(I).Colour = 15„ END SELECT„NEXT I„„'Fill array with random comet...„Comet(1).xPos = INT(RND * HorLimit + 1) 'Pick a random X position.„Comet(1).yPos = 1                       'Always start on the top line.„Comet(1).xSpeed = INT(RND * 4 + 2)„Comet(1).ySpeed = INT(RND * 3 + 2)„'50% of the time the direction of the comet will be altered.„IF INT(RND * 2) = 0 THEN Comet(1).xSpeed = -Comet(1).xSpeed„Comet(1).TailSize = INT(RND * 20 + 5)„„DO„ IF INT(RND * CometSeed) = 1 AND NOT CometStart THEN CometStart = -1„ FOR I = 1 TO Stars                     'Replot all the stars.„  PSET (StarField(I).xPos, StarField(I).yPos), 0„  StarField(I).xPos = StarField(I).xPos - OldStarField(I).Speed„ „  IF StarField(I).xPos <= 1 THEN        'Recalculate if star hits lower limit.„   StarField(I).xPos = HorLimit„   StarField(I).yPos = INT(RND * VerLimit + 1)    'Give star new y position.„  END IF„ „  'Enable the lines below if you plan on having a left -> right effect.„  'IF OldStarField(i).xPos >= HorLimit THEN 'Recalculate if star hits higher limit.„  ' OldStarField(i).xPos = 1„  ' OldStarField(i).yPos = INT(RND * VerLimit + 1) 'Give star new y position.„  'END IF„ „  'Put the star on screen at it's modified position.„  PSET (StarField(I).xPos, StarField(I).yPos), StarField(I).Colour„ NEXT I„„ 'Replot comet (This part is needed when the head is NOT off the screen.)„ IF CometStart AND NOT CleanTail THEN„  PSET (Comet(1).xPos, Comet(1).yPos), CometTailColor„  Comet(1).xPos = INT(Comet(1).xPos + Comet(1).xSpeed)„  Comet(1).yPos = INT(Comet(1).yPos + Comet(1).ySpeed)„  IF Comet(1).xPos >= HorLimit OR Comet(1).xPos <= 1 OR Comet(1).yPos >= VerLimit THEN„   CleanTail = True                     'Start removing the tail.„  ELSE„   PSET (Comet(1).xPos, Comet(1).yPos), CometHeadColor„   TailxPos = Comet(1).xPos - INT(Comet(1).TailSize * Comet(1).xSpeed)„   TailyPos = Comet(1).yPos - INT(Comet(1).TailSize * Comet(1).ySpeed)„   IF TailxPos >= 1 AND TailyPos >= 1 THEN PSET (TailxPos, TailyPos), 0„  END IF„ END IF„ 'Remove the rest of the tail if the head is moved off the screen.„ IF CleanTail THEN„  TailxPos = INT(Comet(1).xPos - Comet(1).TailSize * Comet(1).xSpeed)„  TailyPos = INT(Comet(1).yPos - Comet(1).TailSize * Comet(1).ySpeed)„  Comet(1).TailSize = Comet(1).TailSize - 1„  IF TailxPos >= 1 AND TailyPos >= 1 THEN PSET (TailxPos, TailyPos), 0„ „  'Create a new comet.„  IF TailxPos >= HorLimit OR TailxPos <= 1 OR TailyPos >= VerLimit THEN„   Comet(1).xPos = INT(RND * HorLimit + 1) 'Pick a random X position.„   Comet(1).yPos = 1                    'Always start on the top line.„   Comet(1).xSpeed = INT(RND * 4 + 2)„   Comet(1).ySpeed = INT(RND * 3 + 2)„   IF INT(RND * 2) = 0 THEN Comet(1).xSpeed = -Comet(1).xSpeed„   Comet(1).TailSize = INT(RND * 20 + 5)„   CometStart = False„   CleanTail = False„  END IF„ END IF„„ 'Using the Vertical Retrace (VGA+ only) keeps the program from being„ 'affected by the number of stars to print. If you use 100 or 500 stars on„ 'a P100 doesn't matter. The VR will keep everything going at the same speed.„ '(Within certain boundaries). This method works great when used on anything„ 'faster then my old 286 :-). I think it has something to do with the„ 'frequency of the monitor. SVGA's have a much smoother parallax effect.„„ IF UseRetrace THEN WAIT &H3DA, 8    'Wait for VGA vertical retrace.„„ 'Put your nice scrolly or something over here.„ 'LOCATE 14, 30: PRINT "Starfield Simulation..."„LOOP UNTIL INKEY$ <> ""„Kurt Kuzba                     DEMYSTIFY SCREEN SAVER         FidoNet QUIK_BAS Echo          06-11-96 (00:00)       QB, QBasic, PDS        55   2548     DEMYST.BAS  'I synched the program execution to the vertical retrace.„'This keeps the display speed constant on nearly any system.„'_|_|_|   DEMYST.BAS„'_|_|_|   A program that demystifies the mystify screen saver.„'_|_|_|   No warrantee or guarantee is given or implied.„'_|_|_|   Released to   PUBLIC DOMAIN   by Kurt Kuzba.  (6/11/96)„DEFINT A-Z„SCREEN 12: RANDOMIZE (TIMER * 1000)„TYPE IntersectPoints„   x AS INTEGER: y AS INTEGER: dx AS INTEGER: dy AS INTEGER: END TYPE„DIM lnx(60) AS IntersectPoints„lnx(0).x = 0: lnx(0).y = 0: lnx(0).dx = 0: lnx(0).dy = 0„FOR T = 1 TO 59: lnx(T) = lnx(0): NEXT„DO„   WHILE ((INP(&H3DA)) AND 8) <> 0: WEND  'Here's where I keep the speed„   WHILE ((INP(&H3DA)) AND 8) = 0: WEND   'constant for almost all systems„   FOR L = 0 TO 5„      IF lnx(L).x < 1 THEN lnx(L).dx = 2 + ((RND * 999) MOD 4)„      IF lnx(L).y < 1 THEN lnx(L).dy = 2 + ((RND * 999) MOD 4)„      IF lnx(L).x > 638 THEN lnx(L).dx = -(2 + ((RND * 999) MOD 4))„      IF lnx(L).y > 478 THEN lnx(L).dy = -(2 + ((RND * 999) MOD 4))„      lnx(L).x = lnx(L).x + lnx(L).dx: lnx(L).y = lnx(L).y + lnx(L).dy„   NEXT„   FOR L = 0 TO 5„      IF (L MOD 3) <> 0 THEN„         S = L + 54: F = ((L + 1) MOD 6) + 54„         LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 0„      END IF„      S = L + 48: F = ((L + 1) MOD 6) + 48„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 1„      S = L + 42: F = ((L + 1) MOD 6) + 42„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 1„      S = L + 36: F = ((L + 1) MOD 6) + 36„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 1„      S = L + 30: F = ((L + 1) MOD 6) + 30„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 9„      S = L + 24: F = ((L + 1) MOD 6) + 24„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 9„      S = L + 18: F = ((L + 1) MOD 6) + 18„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 11„      S = L + 12: F = ((L + 1) MOD 6) + 12„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 11„      S = L + 6: F = ((L + 1) MOD 6) + 6„      LINE (lnx(S).x, lnx(S).y)-(lnx(F).x, lnx(F).y), 15„      E = (L + 1) MOD 6„      LINE (lnx(L).x, lnx(L).y)-(lnx(E).x, lnx(E).y), 15„   NEXT„   FOR L = 0 TO 5„      lnx(L + 54) = lnx(L + 48): lnx(L + 48) = lnx(L + 42)„      lnx(L + 42) = lnx(L + 36): lnx(L + 36) = lnx(L + 30)„      lnx(L + 30) = lnx(L + 24): lnx(L + 24) = lnx(L + 18)„      lnx(L + 18) = lnx(L + 12): lnx(L + 12) = lnx(L + 6)„      lnx(L + 6) = lnx(L): NEXT„LOOP WHILE INKEY$ = "": SCREEN 0„'_|_|_|   end   DEMYST.BAS„Kurt Kuzba                     SHOW ALL COMBINATIONS OF COLORSFidoNet QUIK_BAS Echo          10-01-96 (08:28)       QB, QBasic, PDS        74   2161     ALLHUES.BAS '> >   Actually, that's wrong. You only have 256k (262,000),„'> >   or 63 times 63 times 63. That's the max for your RGB„'> >   values.„'>   Actually, it's 64 times 64 times 64, because there are 64„'>   degrees, not 63.„'>   Count all the numbers from 0 to 63 inclusively.„'>..........„'   Correct.„'Total number of colors possible is 64^3, or 262,144 colors.„'For those who wish to count them...„'( If anybody actually runs all the way through this program„'  without hitting a key, they must be something other than„'  human :)„„'_|_|_|   ALLHUES.BAS„'_|_|_|   A display of all the possible color, 8 at a time.„'_|_|_|   Hit a key to quit if you like. Produces 262,144 colors.„'_|_|_|   No warrantee or guarantee is given or implied.„'_|_|_|   Released   PUBLIC DOMAIN   by Kurt Kuzba.  (10/1/96)„RANDOMIZE TIMER„SCREEN 12„SCREEN 0„COLOR 7, 0„CLS„FOR L% = 2 TO 6„   LOCATE L%, 1„   FOR C% = 8 TO 15„      COLOR C%„      PRINT STRING$(10, CHR$(219));„   NEXT„NEXT„COLOR 7, 0„Colour% = 0„DIM CRED(64) AS INTEGER„DIM CGRN(64) AS INTEGER„DIM CBLU(64) AS INTEGER„FOR t% = 0 TO 64„   CRED(t%) = t%„   CGRN(t%) = t%„   CBLU(t%) = t%„NEXT„'_|_|_|   Thanks to Bill White, ( of Miami :), for the„'_|_|_|   neat shuffle routine.„FOR t% = 1 TO 128„   SWAP CRED(t% AND 63), CRED(RND * 63)„   SWAP CGRN(t% AND 63), CGRN(RND * 63)„   SWAP CBLU(t% AND 63), CBLU(RND * 63)„NEXT„FOR RED% = 0 TO 63„   FOR GRN% = 0 TO 63„      FOR BLU% = 0 TO 63„         WAIT &H3DA, 8: WAIT &H3DA, 8, 8„         hue% = 56 + (BLU% AND 7)„         OUT &H3C8, hue%„         OUT &H3C9, CRED(RED%)„         OUT &H3C9, CGRN(GRN%)„         OUT &H3C9, CBLU(BLU%)„         LOCATE 1, 1„         Colour& = Colour& + 1„         Colr$ = MID$(STR$(Colour&), 2)„         txt$ = ""„         p% = LEN(Colr$)„         FOR t% = 1 TO p% - 1„            txt$ = MID$(Colr$, p% - t%, 1) + txt$„            IF t% MOD 3 = 0 THEN„               IF t% < (p% - 1) THEN txt$ = "," + txt$„            END IF„         NEXT„         PRINT txt$„         IF INKEY$ <> "" THEN SCREEN 12: SCREEN 0: END„      NEXT„   NEXT„NEXT„'_|_|_|   end   ALLHUES.BAS„Douglas H. Lusher              ROTATING 3D CYLINDER & SPHERE  comp.lang.basic.misc           10-22-96 (17:52)       QB, QBasic, PDS        276  8552     3DCYLIND.BAS'this is code to draw and rotate a 3-d image of a cylinder„'  and a sphere.„'by Douglas H. Lusher, October 1996„DECLARE SUB DrawPoly (X%(), Y%(), Vertices%, Culler%)„DECLARE FUNCTION KeyPress% ()„CONST Green = 2, White = 15„CONST ESC = 27„CONST HomeKey = -71, EndKey = -79„CONST UpArrow = -72, DnArrow = -80„CONST LArrow = -75,  RArrow = -77„'the home key brings the object toward the viewer, the end key„'   takes it away from the viewer.„'the up arrow moves the object up, the down arrow moves it down,„'   the right arrow moves it right, the left arrow moves it left.„'pressing "y","p", or "r" increases yaw, pitch and roll respectively.„'   pressing the uppercase of these letters decreases the values.„RANDOMIZE TIMER„APage% = 1: VPage% = 0„SCREEN 9, , APage%, VPage%„ScrnWid% = 640: ScrnHgt% = 350„CtrX% = ScrnWid% \ 2: CtrY% = ScrnHgt% \ 2„AspectRatio! = 4 * (ScrnHgt% / ScrnWid%) / 3„Pi! = ATN(1) * 4!„„DO: R1! = RND: LOOP UNTIL R1! < .628: R1! = R1! * 10!„DO: R2! = RND: LOOP UNTIL R2! < .628: R2! = R2! * 10!„DO: R3! = RND: LOOP UNTIL R3! < .628: R3! = R3! * 10!„'R1! = 0: R2! = 0: R3! = 0„D! = 1200„MX! = 0: MY! = 0: MZ! = -350„Inc! = .02„RInc! = -Inc!„PInc! = -Inc!„YInc! = -Inc!„„GOSUB InitCylinder„'GOSUB InitSphere„„'MainLoop„DO„  SELECT CASE KeyPress%„    CASE 0„    CASE UpArrow: MY! = MY! + 10!„    CASE DnArrow: MY! = MY! - 10!„    CASE LArrow: MX! = MX! + 10!„    CASE RArrow: MX! = MX! - 10!„    CASE HomeKey: MZ! = MZ! + 10!„    CASE EndKey: MZ! = MZ! - 10!„    CASE ASC("r")„      RInc! = RInc! + Inc!: IF RInc! > 1 THEN RInc! = 1„    CASE ASC("R")„      RInc! = RInc! - Inc!: IF RInc! < -1 THEN RInc! = -1„    CASE ASC("y")„      YInc! = YInc! + Inc!: IF YInc! > 1 THEN YInc! = 1„    CASE ASC("Y")„      YInc! = YInc! - Inc!: IF YInc! < -1 THEN YInc! = -1„    CASE ASC("p")„      PInc! = PInc! + Inc!: IF PInc! > 1 THEN PInc! = 1„    CASE ASC("P")„      PInc! = PInc! - Inc!: IF PInc! < -1 THEN PInc! = -1„    CASE ESC: EXIT DO„  END SELECT„  R1! = R1! + YInc!: IF R1! > 6.28 THEN R1! = 0„  R2! = R2! + RInc!: IF R2! > 6.28 THEN R2! = 0„  R3! = R3! + PInc!: IF R3! > 6.28 THEN R3! = 0„  SR1! = SIN(R1!): CR1! = COS(R1!)„  SR2! = SIN(R2!): CR2! = COS(R2!)„  SR3! = SIN(R3!): CR3! = COS(R3!)„  CLS„  GOSUB DrawCylinder„  'GOSUB DrawSphere„  SWAP APage%, VPage%„  WAIT &H3DA, 8„  SCREEN , , APage%, VPage%„LOOP„SCREEN 0: WIDTH 80„END„  „PerspectiveCalculations:„X! = -X!„XA! = CR1! * X! - SR1! * Z!„ZA! = SR1! * X! + CR1! * Z!„X! = CR2! * XA! + SR2! * Y!„YA! = CR2! * Y! - SR2! * XA!„Z! = CR3! * ZA! - SR3! * YA!„Y! = SR3! * ZA! + CR3! * YA!„X! = X! + MX!„Y! = Y! + MY!„Z! = Z! + MZ!„SX% = CINT(D! * X! / Z!) + CtrX%„SY% = CINT(D! * Y! / Z! * AspectRatio!) + CtrY%„RETURN„„CheckVisibility:„'plane equation method of hidden surface removal„SP1! = -X1! * (Y2! * Z3! - Y3! * Z2!)„SP2! = X2! * (Y3! * Z1! - Y1! * Z3!)„SP3! = X3! * (Y1! * Z2! - Y2! * Z1!)„VisibleSurface% = ((SP1! - SP2! - SP3!) <= 0)„RETURN„„'========================================================================„InitCylinder:„L! = 40!     'half the length of the cylinder„R! = 20!     'the radius of the cylinder„Divs% = 18   'the number of steps around the cylinder„StepAmount! = (Pi! * 2!) / CSNG(Divs%)„S1% = 1: S2% = Divs% \ 3: S3% = S2% + S2%„REDIM X1!(1 TO Divs% + 1), X2!(1 TO Divs% + 1)„REDIM Y1!(1 TO Divs% + 1), Y2!(1 TO Divs% + 1)„REDIM Z1!(1 TO Divs% + 1), Z2!(1 TO Divs% + 1)„REDIM SX1%(1 TO Divs% + 1), SY1%(1 TO Divs% + 1)„REDIM SX2%(1 TO Divs% + 1), SY2%(1 TO Divs% + 1)„REDIM X%(1 TO 4), Y%(1 TO 4)„Xtra% = Divs% + 1„RETURN„„DrawCylinder:„R5! = 0„FOR T% = 1 TO Divs%„  XX! = SIN(R5!) * R!: YY! = COS(R5!) * R!„  'one end of cylinder„  X! = XX!: Y! = YY!: Z! = L!„  GOSUB PerspectiveCalculations„  X1!(T%) = X!: Y1!(T%) = Y!: Z1!(T%) = Z!„  SX1%(T%) = SX%: SY1%(T%) = SY%„  'other end of cylinder„  X! = XX!: Y! = YY!: Z! = -L!„  GOSUB PerspectiveCalculations„  X2!(T%) = X!: Y2!(T%) = Y!: Z2!(T%) = Z!„  SX2%(T%) = SX%: SY2%(T%) = SY%„  R5! = R5! + StepAmount!„NEXT„X1!(Xtra%) = X1!(1): X2!(Xtra%) = X2!(1)„Y1!(Xtra%) = Y1!(1): Y2!(Xtra%) = Y2!(1)„Z1!(Xtra%) = Z1!(1): Z2!(Xtra%) = Z2!(1)„SX1%(Xtra%) = SX1%(1): SX2%(Xtra%) = SX2%(1)„SY1%(Xtra%) = SY1%(1): SY2%(Xtra%) = SY2%(1)„FOR Q1% = 1 TO Divs%          'draw the side polygons of the cylinder„  Q2% = Q1% + 1„  X1! = X1!(Q1%): Y1! = Y1!(Q1%): Z1! = Z1!(Q1%)„  X2! = X1!(Q2%): Y2! = Y1!(Q2%): Z2! = Z1!(Q2%)„  X3! = X2!(Q2%): Y3! = Y2!(Q2%): Z3! = Z2!(Q2%)„  GOSUB CheckVisibility„  IF VisibleSurface% THEN„    X%(1) = SX1%(Q1%): Y%(1) = SY1%(Q1%)„    X%(2) = SX1%(Q2%): Y%(2) = SY1%(Q2%)„    X%(3) = SX2%(Q2%): Y%(3) = SY2%(Q2%)„    X%(4) = SX2%(Q1%): Y%(4) = SY2%(Q1%)„    CALL DrawPoly(X%(), Y%(), 4, White)„  END IF„NEXT„'draw one end„X1! = X1!(S1%): Y1! = Y1!(S1%): Z1! = Z1!(S1%)„X2! = X1!(S3%): Y2! = Y1!(S3%): Z2! = Z1!(S3%)„X3! = X1!(S2%): Y3! = Y1!(S2%): Z3! = Z1!(S2%)„GOSUB CheckVisibility„IF VisibleSurface% THEN„  CALL DrawPoly(SX1%(), SY1%(), Divs%, White)„END IF„'draw the other end„X1! = X2!(S1%): Y1! = Y2!(S1%): Z1! = Z2!(S1%)„X2! = X2!(S2%): Y2! = Y2!(S2%): Z2! = Z2!(S2%)„X3! = X2!(S3%): Y3! = Y2!(S3%): Z3! = Z2!(S3%)„GOSUB CheckVisibility„IF VisibleSurface% THEN„  CALL DrawPoly(SX2%(), SY2%(), Divs%, White)„END IF„RETURN„„'========================================================================„InitSphere:„R! = 40!            'the radius of the sphere„Divs% = 18„StepAmount! = (Pi! * 2!) / CSNG(Divs%)„REDIM X1!(1 TO Divs% + 1), X2!(1 TO Divs% + 1)„REDIM Y1!(1 TO Divs% + 1), Y2!(1 TO Divs% + 1)„REDIM Z1!(1 TO Divs% + 1), Z2!(1 TO Divs% + 1)„REDIM SX1%(1 TO Divs% + 1), SY1%(1 TO Divs% + 1)„REDIM SX2%(1 TO Divs% + 1), SY2%(1 TO Divs% + 1)„REDIM X%(1 TO 4), Y%(1 TO 4)„Xtra% = Divs% + 1„RETURN„„DrawSphere:„'north polar area„'R5! = 0: X! = SIN(R5!) * R!: Y! = COS(R5!) * R!: Z! = 0„X! = 0!: Y! = R!: Z! = 0„GOSUB PerspectiveCalculations„X3! = X!: Y3! = Y!: Z3! = Z!„X%(3) = SX%: Y%(3) = SY%„R5! = StepAmount!: GOSUB CalcAround„FOR Q1% = 1 TO Divs%„  Q2% = Q1% + 1„  X1! = X2!(Q2%): Y1! = Y2!(Q2%): Z1! = Z2!(Q2%)„  X2! = X2!(Q1%): Y2! = Y2!(Q1%): Z2! = Z2!(Q1%)„  GOSUB CheckVisibility„  IF VisibleSurface% THEN„    X%(1) = SX2%(Q2%): Y%(1) = SY2%(Q2%)„    X%(2) = SX2%(Q1%): Y%(2) = SY2%(Q1%)„    CALL DrawPoly(X%(), Y%(), 3, Green)„  END IF„NEXT„„'middle of sphere„R5! = StepAmount!„FOR T2% = 1 TO (Divs% \ 2) - 2„  FOR Q1% = 1 TO Divs% + 1„    X1!(Q1%) = X2!(Q1%): Y1!(Q1%) = Y2!(Q1%): Z1!(Q1%) = Z2!(Q1%)„    SX1%(Q1%) = SX2%(Q1%): SY1%(Q1%) = SY2%(Q1%)„  NEXT„  R5! = R5! + StepAmount!: GOSUB CalcAround„  FOR Q1% = 1 TO Divs%„    Q2% = Q1% + 1„    X1! = X1!(Q1%): Y1! = Y1!(Q1%): Z1! = Z1!(Q1%)„    X2! = X1!(Q2%): Y2! = Y1!(Q2%): Z2! = Z1!(Q2%)„    X3! = X2!(Q2%): Y3! = Y2!(Q2%): Z3! = Z2!(Q2%)„    GOSUB CheckVisibility„    IF VisibleSurface% THEN„      X%(1) = SX1%(Q1%): Y%(1) = SY1%(Q1%)„      X%(2) = SX1%(Q2%): Y%(2) = SY1%(Q2%)„      X%(3) = SX2%(Q2%): Y%(3) = SY2%(Q2%)„      X%(4) = SX2%(Q1%): Y%(4) = SY2%(Q1%)„      CALL DrawPoly(X%(), Y%(), 4, Green)„    END IF„  NEXT„NEXT„„'south polar area„R5! = Pi!: X! = SIN(R5!) * R!: Y! = COS(R5!) * R!: Z! = 0„GOSUB PerspectiveCalculations„X3! = X!: Y3! = Y!: Z3! = Z!„X%(3) = SX%: Y%(3) = SY%„FOR Q1% = 1 TO Divs%„  Q2% = Q1% + 1„  X1! = X2!(Q1%): Y1! = Y2!(Q1%): Z1! = Z2!(Q1%)„  X2! = X2!(Q2%): Y2! = Y2!(Q2%): Z2! = Z2!(Q2%)„  GOSUB CheckVisibility„  IF VisibleSurface% THEN„    X%(1) = SX2%(Q2%): Y%(1) = SY2%(Q2%)„    X%(2) = SX2%(Q1%): Y%(2) = SY2%(Q1%)„    CALL DrawPoly(X%(), Y%(), 3, Green)„  END IF„NEXT„RETURN„„CalcAround:„R4! = 0!: XX! = SIN(R5!) * R!: YY! = COS(R5!) * R!„FOR T% = 1 TO Divs%„  X! = COS(R4!) * XX!: Y! = YY!: Z! = SIN(R4!) * XX!„  GOSUB PerspectiveCalculations„  X2!(T%) = X!: Y2!(T%) = Y!: Z2!(T%) = Z!„  SX2%(T%) = SX%: SY2%(T%) = SY%„  R4! = R4! + StepAmount!„NEXT„X1!(Xtra%) = X1!(1): X2!(Xtra%) = X2!(1)„Y1!(Xtra%) = Y1!(1): Y2!(Xtra%) = Y2!(1)„Z1!(Xtra%) = Z1!(1): Z2!(Xtra%) = Z2!(1)„SX1%(Xtra%) = SX1%(1): SX2%(Xtra%) = SX2%(1)„SY1%(Xtra%) = SY1%(1): SY2%(Xtra%) = SY2%(1)„RETURN„„SUB DrawPoly (X%(), Y%(), Vertices%, Culler%)„PSET (X%(Vertices%), Y%(Vertices%)), Culler%„FOR Q% = 1 TO Vertices%„  LINE -(X%(Q%), Y%(Q%)), Culler%„NEXT„END SUB„„FUNCTION KeyPress%„KP$ = INKEY$„IF LEN(KP$) THEN „  KP% = ASC(KP$): IF KP% = 0 THEN KP% = -ASC(MID$(KP$, 2))„END IF„KeyPress% = KP%„END FUNCTION„Andrew L. Ayers                COMPLETE BLAST! (MODE 13H) SUBSandrewa@indirect.com           10-04-96 (00:00)       QB, QBasic, PDS        389  12999    BLASTLIB.BAS'****************************************************************************„'„' Description : Blast! Library - VGA Mode 13 Off-Screen Buffer Manipulation„'               routines„' Written by  : Copyright (c) 1996 by Andrew L. Ayers„' Date        : 10/04/96„' Comments    : Users of QBASIC will find that this program just barely„'               fits into their environment. This is because QBASIC only„'               allows 160K of memory for code AND data. Since I create„'               two off-screen buffers of 64K each, this leaves only 32K„'               for code and any other buffers. In most cases, you should„'               need only one off-screen buffer, giving you 96K for both„'               code and any other buffers. There shouldn't be any problems„'               with QuickBASIC, though, since it allows you to use 64K for„'               each procedure, and the rest of memory for your data. Notice„'               the use of REDIM for the declaration of the buffers. This is„'               so I could resize the buffers to zero at the end of the„'               program. When I was coding this in QBASIC, I realized I need-„'               ed to do this when HELP would no longer load due to low„'               memory!„'„'               If you want to view the source for the assembler routines,„'               they are contained within the ".ASM" files included in this„'               archive.„'„'               I went to a lot of time and trouble to create this library„'               of routines. They are intended to fill a void that has„'               existed for a while. I am distributing this library as free-„'               ware, though I am retaining the copyright. You may use this„'               library in any way you see fit. I only ask that you put my„'               name somewhere in your opening credits. Something like„'               "Sprite Routines developed by Andrew L. Ayers" or "Developed„'               using the Blast! Library by Andrew L. Ayers". Other than„'               that, it's free. Thank you, and have phun!„'„'****************************************************************************„'„' Declare our procedures„'„DECLARE SUB DrawLine (dsegment%, doffset%, x1%, y1%, x2%, y2%, colr%)„DECLARE SUB BlastGet (dsegment%, doffset%, ssegment%, soffset%, x1%, y1%, x2%, y2%)„DECLARE SUB BlastPut (dsegment%, doffset%, ssegment%, soffset%, xpos%, ypos%, icol%)„DECLARE SUB BlastPset (segment%, offset%, xpos%, ypos%, col%)„DECLARE SUB BlastCopy (fsegment%, foffset%, tsegment%, toffset%)„'„' Reserve assembler routine code memory„'„DIM SHARED code1%(14), code2%(21), code3%(76), code4%(76)„'„' BlastCopy! (BLSTCOPY.ASM)„'„code$ = "1E5589E58B460E8ED88B760C8B460A8EC08B7E08B9007DF3A55D1FCA0800"„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 29„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„' BlastPset! (BLSTPSET.ASM)„'„code$ = "1E5589E58B46108ED88B760AB106D3E689F3B102D3E601DE8B5E0C01DE8B5E0E01DE8A460888045D1FCA0A00"„'„DEF SEG = VARSEG(code2%(0))„'„FOR i% = 0 TO 43„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code2%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„' BlastPut! (BLASTPUT.ASM)„'„code$ = "1E5589E58B460C508B460A508B46108ED88B760E8B04B103D3E8508B5EFE"„code$ = code$ + "01C3895EFE8B4402508B5EFC01C3895EFC83C60489760E89E58B46188ED8"„code$ = code$ + "8B76168A04468976163A461074208B5E1C8EDB8B7612B106D3E689F3B102"„code$ = code$ + "D3E601DE8B5E1401DE8B5E1A01DE88048B4614408946148B460639461475"„code$ = code$ + "BE8B46142B46028946148B4612408946128B460439461275A6585858585D"„code$ = code$ + "1FCA0E00"„'„DEF SEG = VARSEG(code3%(0))„'„FOR i% = 0 TO 153„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code3%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„' BlastGet! (BLASTGET.ASM)„'„code$ = "1E5589E58B460A508B4608508B460A2B460E40508B46082B460C40508B46128ED8"„code$ = code$ + "8B76108B46FABB0800F7E3890446468B46F88904464689761089E58B5E"„code$ = code$ + "1E8EDB8B7614B106D3E689F3B102D3E601DE8B5E1601DE8B5E1C01DE8A"„code$ = code$ + "048B5E1A8EDB8B76188804468976188B4616408946168B460639461676"„code$ = code$ + "C38B46162B46028946168B4614408946148B460439461476AB58585858"„code$ = code$ + "5D1FCA1000"„'„DEF SEG = VARSEG(code4%(0))„'„FOR i% = 0 TO 153„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code4%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„'****************************************************************************„'„' Reserve memory for two off-screen buffers, sprites and demo variables„' Use REDIM so that we may de-allocate the memory at the end of the program„'„REDIM buffer1%(31999) ' This is an off-screen buffer„REDIM buffer2%(31999) ' This is another...„REDIM sbuffer%(2000)  ' This is our sprite buffer„'„DIM bx%(40), by%(40), bt%(40), dx%(40), dy%(40)' Variables for demo„'„'****************************************************************************„'„' Initialize Balls„'„FOR t = 0 TO 39„  bx%(t) = INT(RND * 200) + 50: by%(t) = INT(RND * 100) + 50„  bt%(t) = INT(RND * 2)„  DO„    dx%(t) = INT(RND * 11) - 5: dy%(t) = INT(RND * 11) - 5„  LOOP UNTIL dx%(t) <> 0 AND dy%(t) <> 0„NEXT t„'„SCREEN 13„'„' Now, show some instructions„'„COLOR 2„LOCATE 2, 2: PRINT "Blast! Library Demo by Andrew L. Ayers"„'„COLOR 15„LOCATE 4, 1: PRINT "The following demo illustrates a simple"„LOCATE 5, 1: PRINT "use of the Blast! Library. Many 32 x 32"„LOCATE 6, 1: PRINT "and 16 x 16 sprites (up to 40) bounce on"„LOCATE 7, 1: PRINT "the screen in random directions. Use the"„LOCATE 8, 1: PRINT "+/- keys to add or subtract sprites from"„LOCATE 9, 1: PRINT "the screen. Notice how the sprites can"„LOCATE 10, 1: PRINT "overlap each other, without showing a"„LOCATE 11, 1: PRINT "black border. This masking effect is"„LOCATE 12, 1: PRINT "done by simply specifying black (0) as"„LOCATE 13, 1: PRINT "the invisible color. While in this demo"„LOCATE 14, 1: PRINT "I am using 32 x 32 and 16 x 16 sprites,"„LOCATE 15, 1: PRINT "any size sprite could be used. It all"„LOCATE 16, 1: PRINT "depends on the level of detail your"„LOCATE 17, 1: PRINT "sprites need as well as the number of"„LOCATE 18, 1: PRINT "sprites you place on screen at one time."„'„' Draw a simple graphic for the background„'„COLOR 4„LOCATE 21, 3: PRINT "Please wait - Preparing Images.";„'„x1% = 159: y1% = 99: colr% = 0„'„FOR t% = 0 TO 319 STEP 4„  CALL DrawLine(VARSEG(buffer2%(0)), VARPTR(buffer2%(0)), x1%, y1%, t%, 0, colr%)„  colr% = colr% + 1: IF colr% > 255 THEN colr% = 0„NEXT„'„PRINT ".";„'„FOR t% = 0 TO 199 STEP 4„  CALL DrawLine(VARSEG(buffer2%(0)), VARPTR(buffer2%(0)), x1%, y1%, 319, t%, colr%)„  colr% = colr% + 1: IF colr% > 255 THEN colr% = 0„NEXT„'„PRINT ".";„'„FOR t% = 319 TO 0 STEP -4„  CALL DrawLine(VARSEG(buffer2%(0)), VARPTR(buffer2%(0)), x1%, y1%, t%, 199, colr%)„  colr% = colr% + 1: IF colr% > 255 THEN colr% = 0„NEXT„'„PRINT ".";„'„FOR t% = 199 TO 0 STEP -4„  CALL DrawLine(VARSEG(buffer2%(0)), VARPTR(buffer2%(0)), x1%, y1%, 0, t%, colr%)„  colr% = colr% + 1: IF colr% > 255 THEN colr% = 0„NEXT„'„COLOR 2„LOCATE 21, 1: PRINT "Hit any key to begin demo - [ESC] exits"„COLOR 15„'„DO: LOOP UNTIL INKEY$ <> ""„'„CLS„'„' Create a 32 x 32 sprite for us to use„'„o = 0„FOR t% = 14 TO 0 STEP -1„  c% = 31 - t%„  CIRCLE (15 + o, 15 + o), t%, c%„  PAINT (15 + o, 15 + o), c%„  o = o - .4„NEXT t%„'„' Get our sprites„'„CALL BlastGet(&HA000, 0, VARSEG(sbuffer%(0)), VARPTR(sbuffer%(0)), 0, 0, 31, 31)„'„LINE (11, 11)-(18, 18), 0, BF ' Clear out center„'„CALL BlastGet(&HA000, 0, VARSEG(sbuffer%(0)), VARPTR(sbuffer%(514)), 7, 7, 22, 22)„'„' Initialize Demo Variables„'„numballs% = 10: done% = 0„'„DO„  '„  ' Copy our background graphic to our off-screen buffer (which clears off„  ' old images of our sprites...) If you are using only a single buffer, just„  ' "get" the background behind each sprite before moving, move, then replace„  ' the background, or just erase with the "ERASE arrayname" (see HELP)„  ' command. I could done the "get, move, replace" on this demo, but I wanted„  ' to show how to use a background using the library...„  '„  CALL BlastCopy(VARSEG(buffer2%(0)), VARPTR(buffer2%(0)), VARSEG(buffer1%(0)), VARPTR(buffer1%(0)))„  '„  ' Put our sprites„  '„  FOR t% = 0 TO numballs% - 1„    bx%(t%) = bx%(t%) + dx%(t%): by%(t%) = by%(t%) + dy%(t%)„    IF bx%(t%) > 287 THEN dx%(t%) = -dx%(t%): bx%(t%) = 287„    IF bx%(t%) < 0 THEN dx%(t%) = -dx%(t%): bx%(t%) = 0„    IF by%(t%) > 167 THEN dy%(t%) = -dy%(t%): by%(t%) = 167„    IF by%(t%) < 0 THEN dy%(t%) = -dy%(t%): by%(t%) = 0„    CALL BlastPut(VARSEG(buffer1%(0)), VARPTR(buffer1%(0)), VARSEG(sbuffer%(0)), VARPTR(sbuffer%(bt%(t%) * 514)), bx%(t%), by%(t%), 0)„  NEXT„  '„  ' Copy the off-screen buffer to the visible screen„  '„  CALL BlastCopy(VARSEG(buffer1%(0)), VARPTR(buffer1%(0)), &HA000, 0)„  '„  ' Get user input for number of balls, or exit„  '„  a$ = INKEY$„  SELECT CASE a$„    CASE "-", "_"„      numballs% = numballs% - 1„      IF numballs% < 1 THEN numballs% = 1„    CASE "+", "="„      numballs% = numballs% + 1„      IF numballs% > 40 THEN numballs% = 40„    CASE CHR$(27)„      done% = 1„  END SELECT„  '„LOOP UNTIL done%„'„CLS„'„' Deallocate our large buffers, using REDIM to size to zero„'„REDIM buffer1%(0) ' This is an off-screen buffer„REDIM buffer2%(0) ' This is another...„REDIM sbuffer%(0) ' This is our sprite buffer„„SUB BlastCopy (fsegment%, foffset%, tsegment%, toffset%)„  '„  ' No error checking is done for this routine, so be careful when„  ' you set the from and to segements and offsets - you could crash„  ' your machine...„  '„  WAIT &H3DA, 8              ' Wait for vertical retrace„  '„  ' Copy!„  '„  DEF SEG = VARSEG(code1%(0))„  '„  CALL ABSOLUTE(BYVAL fsegment%, BYVAL foffset%, BYVAL tsegment%, BYVAL toffset%, VARPTR(code1%(0)))„  '„  DEF SEG„  '„END SUB„„SUB BlastGet (dsegment%, doffset%, ssegment%, soffset%, x1%, y1%, x2%, y2%)„  '„  ' No error checking is done for X and Y coordinates, nor for any segments„  ' and offsets into memory. Therefore, use care when setting them so you„  ' don't crash your machine.„  '„  DEF SEG = VARSEG(code4%(0))„  '„  CALL ABSOLUTE(BYVAL dsegment%, BYVAL doffset%, BYVAL ssegment%, BYVAL soffset%, BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2%, VARPTR(code4%(0)))„  '„  DEF SEG„  '„END SUB„„SUB BlastPset (segment%, offset%, xpos%, ypos%, col%)„  '„  ' No error checking is done for X and Y coordinates, nor for any segments„  ' and offsets into memory. Therefore, use care when setting them so you„  ' don't crash your machine.„  '„  ' Plot the pixel!„  '„  DEF SEG = VARSEG(code2%(0))„  '„  CALL ABSOLUTE(BYVAL segment%, BYVAL offset%, BYVAL xpos%, BYVAL ypos%, BYVAL col%, VARPTR(code2%(0)))„  '„  DEF SEG„  '„END SUB„„SUB BlastPut (dsegment%, doffset%, ssegment%, soffset%, xpos%, ypos%, icol%)„  '„  ' No error checking is done for X and Y coordinates, nor for any segments„  ' and offsets into memory. Therefore, use care when setting them so you„  ' don't crash your machine.„  '„  DEF SEG = VARSEG(code3%(0))„  '„  CALL ABSOLUTE(BYVAL dsegment%, BYVAL doffset%, BYVAL ssegment%, BYVAL soffset%, BYVAL xpos%, BYVAL ypos%, BYVAL icol%, VARPTR(code3%(0)))„  '„  DEF SEG„  '„END SUB„„SUB DrawLine (dsegment%, doffset%, x1%, y1%, x2%, y2%, colr%)„  '„  ' This is a simple routine which uses the traditional„  ' Bresenham Algorithm to draw a line between two points.„  ' It is pretty fast, but not fast enough for REAL work„  ' (like 3D and such) but you can use it if you want. I„  ' plan on making an assembler version which should be„  ' MUCH faster.„  '„  ' No error checking is performed for endpoints in this routine,„  ' so be careful not to let the ends fall out of bounds, since„  ' doing so may cause your machine to crash...„  '„  DEF SEG = dsegment%„  '„  error.term% = 0„  '„  xdiff% = x2% - x1%: ydiff% = y2% - y1%„  xstep% = 1: ystep% = 320„  '„  IF x1% >= x2% THEN xstep% = -1: xdiff% = -xdiff%„  IF y1% >= y2% THEN ystep% = -320: ydiff% = -ydiff%„  '„  xend% = ABS(xdiff%) - 1: yend% = ABS(ydiff%) - 1„  '„  tt& = doffset% + (y1% * 320) + x1%„  '„  IF xdiff% > ydiff% THEN„    '„    FOR xx% = 0 TO xend%„      POKE tt&, colr%„      tt& = tt& + xstep%„      error.term% = error.term% + ydiff%„      IF error.term% >= xdiff% THEN„        tt& = tt& + ystep%„        error.term% = error.term% - xdiff%„      END IF„    NEXT„    '„  ELSE„    '„    FOR yy% = 0 TO yend%„      POKE tt&, colr%„      tt& = tt& + ystep%„      error.term% = error.term% + xdiff%„      IF error.term% >= ydiff% THEN„        tt& = tt& + xstep%„        error.term% = error.term% - ydiff%„      END IF„    NEXT„    '„  END IF„  '„  DEF SEG„  '„END SUB„Andrew L. Ayers                BLAST! MODE 13H GET ROUTINE    andrewa@indirect.com           10-04-96 (00:00)       QB, QBasic, PDS        213  7929     BLASTGET.BASDIM code1%(76), code2%(76), sbuffer%(1000)„'„' BlastGet Routine  (ASM Source tacked on at end)„'„code$ = "1E5589E58B460A508B4608508B460A2B460E40508B46082B460C40508B46128ED8"„code$ = code$ + "8B76108B46FABB0800F7E3890446468B46F88904464689761089E58B5E"„code$ = code$ + "1E8EDB8B7614B106D3E689F3B102D3E601DE8B5E1601DE8B5E1C01DE8A"„code$ = code$ + "048B5E1A8EDB8B76188804468976188B4616408946168B460639461676"„code$ = code$ + "C38B46162B46028946168B4614408946148B460439461476AB58585858"„code$ = code$ + "5D1FCA1000"„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 153„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„' BlastPut Routine„'„code$ = "1E5589E58B460C508B460A508B46108ED88B760E8B04B103D3E8508B5EFE"„code$ = code$ + "01C3895EFE8B4402508B5EFC01C3895EFC83C60489760E89E58B46188ED8"„code$ = code$ + "8B76168A04468976163A461074208B5E1C8EDB8B7612B106D3E689F3B102"„code$ = code$ + "D3E601DE8B5E1401DE8B5E1A01DE88048B4614408946148B460639461475"„code$ = code$ + "BE8B46142B46028946148B4612408946128B460439461275A6585858585D"„code$ = code$ + "1FCA0E00"„'„DEF SEG = VARSEG(code2%(0))„'„FOR i% = 0 TO 153„  d% = VAL("&h" + MID$(code$, i% * 2 + 1, 2))„  POKE VARPTR(code2%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„SCREEN 13„'„LINE (5, 5)-(10, 10), 15, BF„'„' Get our sprite„'„dbufferseg% = &HA000: dbufferptr% = 0„'„DEF SEG = VARSEG(code1%(0))„'„x1% = 0: y1% = 0: x2% = 15: y2% = 15„CALL ABSOLUTE(BYVAL dbufferseg%, BYVAL dbufferptr%, BYVAL VARSEG(sbuffer%(0)), BYVAL VARPTR(sbuffer%(0)), BYVAL x1%, BYVAL y1%, BYVAL x2%, BYVAL y2%, VARPTR(code1%(0)))„'„DEF SEG„'„CLS„'„dbufferseg% = &HA000: dbufferptr% = 0: icol% = 0„'„DEF SEG = VARSEG(code2%(0))„'„DO„  xpos% = INT(RND * 300)„  ypos% = INT(RND * 170)„  '„  CALL ABSOLUTE(BYVAL dbufferseg%, BYVAL dbufferptr%, BYVAL VARSEG(sbuffer%(0)), BYVAL VARPTR(sbuffer%(0)), BYVAL xpos%, BYVAL ypos%, BYVAL icol%, VARPTR(code2%(0)))„LOOP UNTIL INKEY$ <> ""„'„DEF SEG„„'******* END BLASTGET.BAS *********„„-----------------------------------------------------------------------------„„    Name: BlastGet! - Offscreen Buffer to Sprite Buffer Memory Copy„    Date: October 11, 1996„  Author: Andrew L. Ayers„„-----------------------------------------------------------------------------„BASIC Calling Procedure:„-----------------------------------------------------------------------------„„DIM code%(76) ' 77 Words Allocated„'„' Load hex codes for routine into memory here„'„DEF SEG = VARSEG(code%(0)) ' Get code segement„'„' Call our routine„'„CALL ABSOLUTE(BYVAL VARSEG(dbuffer%(0)), BYVAL VARPTR(dbuffer%(0)), --->„	BYVAL VARSEG(sbuffer%(0)), BYVAL VARPTR(sbuffer%(0)),	    --->„	BYVAL X1%, BYVAL Y1%, BYVAL X2%, BYVAL Y2%, VARPTR(code%(0)))„„DEF SEG ' Reset to default segment„„-----------------------------------------------------------------------------„Stack Descriptor:„-----------------------------------------------------------------------------„„The following stack layout is only valid after all values are place onto the„stack for operation. In this routine, the layout is not valid until after„byte 0x003B is executed (label Get:), due to prior stack manipulation by„both BASIC and the routine.„„SP Offset Descriptions„--------- ------------------------------------- „==[Pushed on by call to routine]=============„   1E	  Display Buffer Segment„   1C	  Display Buffer Offset„   1A	  Sprite Buffer Segment„   18	  Sprite Buffer Offset„   16	  X1 position„   14	  Y1 position„   12	  X2 position„   10     Y2 position                      „==[Pushed on by BASIC]=======================„   0E	  BASIC Return Segment„   0C	  BASIC Return Offset„==[Pushed on by routine]=====================„   0A	  DS Register„   08	  BP Register„   06	  X2 Position„   04	  Y2 Position„   02	  Width„   00	  Height„„------- ------- ------  --------------- -------------------------------------„HexCode Label   OpCode  Operands        Remarks„------- ------- ------  --------------- -------------------------------------„1E	Start:	PUSH	DS		;Save the Destination Segment„55		PUSH	BP		;Save the Base Pointer„„89E5	Init:	MOV	BP,SP		;Get the stack pointer„8B460A		MOV	AX,[BP+0A]	;Get the X2 position and put it on„50		PUSH	AX		;the stack.„„8B4608		MOV	AX,[BP+08]	;Get the Y2 position and put it on„50		PUSH	AX		;the stack.„„8B460A		MOV	AX,[BP+0A]	;Get the X2 position and subtract„2B460E		SUB	AX,[BP+0E]	;the X1 position, increment it by„40		INC 	AX		;1 and place it on the stack (this„50		PUSH	AX		;is now the width).„„8B4608		MOV	AX,[BP+08]	;Get the Y2 position and subtract„2B460C		SUB	AX,[BP+0C]	;the Y1 position, increment it by„40		INC	AX		;1 and place it on the stack (this„50		PUSH	AX		;is now the height).„„8B4612		MOV	AX,[BP+12]	;Get the sprite buffer segement and„8ED8		MOV	DS,AX		;set the DS to it. Set the SI to the„8B7610		MOV	SI,[BP+10]	;sprite buffer offset.„8B46FA		MOV	AX,[BP-06]	;Get the width, and multiply by 8„BB0800		MOV	BX,0008		;(for compatability with BASIC's GET„F7E3		MUL	BX		;routine) and put it into the sprite„8904		MOV	[SI],AX		;buffer. Add 2 the the SI to„46		INC	SI		;position it at the next data field.„46		INC	SI		 „8B46F8		MOV	AX,[BP-08]	;Get the height, and place it at„8904		MOV	[SI],AX		;this position, then add 2 to the„46		INC	SI		;SI to set it to the beginning of„46		INC	SI		;actual sprite pixel data, and„897610		MOV	[BP+10],SI	;place it on the stack. Then reset„89E5		MOV	BP,SP		;the BP for later.„„8B5E1E	Get:	MOV	BX,[BP+1E]	;Otherwise, get the display buffer„8EDB		MOV	DS,BX		;segment, and point DS to it.„8B7614		MOV	SI,[BP+14]	;Then get the Y1 position.„B106		MOV	CL,06		;Multiply it by 64 by using a Shift„D3E6		SHL	SI,CL		;Left (SHL) for speed.„89F3		MOV	BX,SI		;Save the result temporarily.„B102		MOV	CL,02		;Shift left again to multiply the„D3E6		SHL	SI,CL		;Y1 position by 256, then add that„01DE		ADD	SI,BX		;value to our saved result.„8B5E16		MOV	BX,[BP+16]	;Now get the X1 position and add it„01DE		ADD	SI,BX		;to the result to get our final„8B5E1C		MOV	BX,[BP+1C]	;offset. Then get the display buffer„01DE		ADD	SI,BX		;offset and add the pixel offset.„8A04		MOV	AL,[SI]		;Get the pixel.„„8B5E1A		MOV	BX,[BP+1A]	;Get the sprite buffer segment and„8EDB		MOV	DS,BX		;point the DS (Dest. Segment) to it.„8B7618		MOV	SI,[BP+18]	;Now get the sprite buffer offset.„8804		MOV	[SI],AL		;Then put the color of the pixel.„46		INC	SI		;Add 1 to our sprite buffer offset„897618		MOV	[BP+18],SI	;and place it back on the stack.„„8B4616	Done:	MOV	AX,[BP+16]	;Get the X1 position.„40		INC	AX		;Increment the X1 position by 1„894616		MOV	[BP+16],AX	;and put back on the stack„8B4606		MOV	AX,[BP+06]	;Check to see if the width has been„394616		CMP	[BP+16],AX	;reached. If it hasn't, then get the„76C3		JBE	Get: [003C]	;next column, otherwise reset the„8B4616		MOV	AX,[BP+16]	;X1 position back to the left edge„2B4602		SUB	AX,[BP+02]	;of the sprite by subtracting the„894616		MOV	[BP+16],AX	;width.„8B4614		MOV	AX,[BP+14]	;Get the Y1 position, then increment„40		INC	AX		;it by 1, and place it back on the„894614		MOV	[BP+14],AX	;stack. Then check to see if we have„8B4604		MOV	AX,[BP+04]	;finished getting the sprite (Are„394614		CMP	[BP+14],AX	;we at the bottom?) If not, then do	„76AB		JBE	Get: [003C]	;another line...„„58	Exit:	POP	AX		;Pop the height off the stack.„58		POP	AX		;Pop the width off the stack.„58		POP	AX		;Pop the Y2 off the stack.„58		POP	AX		;Pop the X2 off the stack.„5D		POP	BP		;Restore our registers for BASIC,„1F		POP	DS		;the exit the routine, cleaning up„CA1000		RETF	0010		;the stack at the end...„„-----------------------------------------------------------------------------„Length : 154 Bytes (77 Words)„-----------------------------------------------------------------------------„Andrew L. Ayers                BLAST! MODE 13H PUT ROUTINE    andrewa@indirect.com           10-04-96 (00:00)       QB, QBasic, PDS        179  6943     BLASTPUT.BASDIM code1%(76), sbuffer%(1000)„'„' (ASM Source located at end of code)„„code1$ = ""„code1$ = code1$ + "1E5589E58B460C508B460A508B46108ED88B760E8B04B103D3E8508B5EFE"„code1$ = code1$ + "01C3895EFE8B4402508B5EFC01C3895EFC83C60489760E89E58B46188ED8"„code1$ = code1$ + "8B76168A04468976163A461074208B5E1C8EDB8B7612B106D3E689F3B102"„code1$ = code1$ + "D3E601DE8B5E1401DE8B5E1A01DE88048B4614408946148B460639461475"„code1$ = code1$ + "BE8B46142B46028946148B4612408946128B460439461275A6585858585D"„code1$ = code1$ + "1FCA0E00"„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 153„  d% = VAL("&h" + MID$(code1$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„SCREEN 13„'„LINE (5, 5)-(10, 10), 15, BF„GET (0, 0)-(15, 15), sbuffer%(0)„'„CLS„'„dbufferseg% = &HA000: dbufferptr% = 0: icol% = 0: cnt% = 0„'„DEF SEG = VARSEG(code1%(0))„'„t = TIMER„DO„  xpos% = INT(RND * 300)„  ypos% = INT(RND * 170)„  '„  CALL ABSOLUTE(BYVAL dbufferseg%, BYVAL dbufferptr%, BYVAL VARSEG(sbuffer%(0)), BYVAL VARPTR(sbuffer%(0)), BYVAL xpos%, BYVAL ypos%, BYVAL icol%, VARPTR(code1%(0)))„  cnt% = cnt% + 1„LOOP UNTIL cnt% = 1000„PRINT TIMER - t„DEF SEG„„'******** END BLASTPUT.BAS ********„„-----------------------------------------------------------------------------„„    Name: BlastPut! - Sprite Buffer to Offscreen Buffer Memory Copy„    Date: September 30, 1996„  Author: Andrew L. Ayers„„-----------------------------------------------------------------------------„BASIC Calling Procedure:„-----------------------------------------------------------------------------„„DIM code%(76) ' 77 Words Allocated„'„' Load hex codes for routine into memory here„'„DEF SEG = VARSEG(code%(0)) ' Get code segement„'„' Call our routine„'„CALL ABSOLUTE(BYVAL VARSEG(dbuffer%(0)), BYVAL VARPTR(dbuffer%(0)), --->„	BYVAL VARSEG(sbuffer%(0)), BYVAL VARPTR(sbuffer%(0)),	    --->„	BYVAL xpos%, BYVAL ypos%, BYVAL icol%, VARPTR(code%(0)))„„DEF SEG ' Reset to default segment„„-----------------------------------------------------------------------------„Stack Descriptor:„-----------------------------------------------------------------------------„„The following stack layout is only valid after all values are place onto the„stack for operation. In this routine, the layout is not valid until after„byte 0x0036 is executed (label Plot:), due to prior stack manipulation by„both BASIC and the routine.„„SP Offset Descriptions„--------- ------------------------------------- „==[Pushed on by call to routine]=============„   1C	  Display Buffer Segment„   1A	  Display Buffer Offset„   18	  Sprite Buffer Segment„   16	  Sprite Buffer Offset„   14	  X position„   12	  Y position„   10	  Invisible Color                      „==[Pushed on by BASIC]=======================„   0E	  BASIC Return Segment„   0C	  BASIC Return Offset„==[Pushed on by routine]=====================„   0A	  DS Register„   08	  BP Register„   06	  Width + X Position„   04	  Height + Y Position„   02	  Width„   00	  Height„„------- ------- ------  --------------- -------------------------------------„HexCode Label   OpCode  Operands        Remarks„------- ------- ------  --------------- -------------------------------------„1E	Start:	PUSH	DS		;Save the DS register for BASIC„55		PUSH	BP		;Save the BP register for BASIC„„89E5	Init:	MOV	BP,SP		;Get the stack pointer„8B460C		MOV	AX,[BP+0C]	;Get the X position„50		PUSH	AX		;Put the X position on the stack„8B460A		MOV	AX,[BP+0A]	;Get the Y position„50		PUSH	AX		;Put the Y position on the stack„8B4610		MOV	AX,[BP+10]	;Get the sprite buffer segment„8ED8		MOV	DS,AX		;Point the DS (Dest. Segment) to it„8B760E		MOV	SI,[BP+0E]	;Get the sprite buffer offset„8B04		MOV	AX,[SI]		;Get the width, and divide by 8„B103		MOV	CL,03		;(using SHR for speed) to obtain the„D3E8		SHR	AX,CL		;true width in pixels„50		PUSH	AX		;Put the width on the stack„8B5EFE		MOV	BX,[BP-02]	;Get the X position„01C3		ADD	BX,AX		;Add width to the X position„895EFE		MOV	[BP-02],BX	;and put it back on the stack„8B4402		MOV	AX,[SI+02]	;Get the height„50		PUSH	AX		;Put the height the stack„8B5EFC		MOV	BX,[BP-04]	;Get the Y position„01C3		ADD	BX,AX		;Add height to the Y position„895EFC		MOV	[BP-04],BX	;and put it back on the stack„83C604		ADD	SI,04		;Reset the sprite buffer offset„89760E		MOV	[BP+0E],SI	;to the start of the pixel data„89E5		MOV	BP,SP		;Retrieve stack pointer„„8B4618	Plot:	MOV	AX,[BP+18]	;Get the sprite buffer segment and„8ED8		MOV	DS,AX		;point the DS (Dest. Segment) to it„8B7616		MOV	SI,[BP+16]	;Now get the sprite buffer offset„8A04		MOV	AL,[SI]		;Then get the color of the pixel„46		INC	SI		;Add 1 to our sprite buffer offset„897616		MOV	[BP+16],SI	;and place it back on the stack„3A4610		CMP	AL,[BP+10]	;Is our pixel invisible?„7420		JZ	Done: [006A]	;If it is, then don't plot it.„8B5E1C		MOV	BX,[BP+1C]	;Otherwise, get the display buffer„8EDB		MOV	DS,BX		;segment, and point DS to it„8B7612		MOV	SI,[BP+12]	;Then get the Y position„B106		MOV	CL,06		;Multiply it by 64 by using a Shift„D3E6		SHL	SI,CL		;Left (SHL) for speed„89F3		MOV	BX,SI		;Save the result temporarily„B102		MOV	CL,02		;Shift left again to multiply the„D3E6		SHL	SI,CL		;Y position by 256, then add that„01DE		ADD	SI,BX		;value to our saved result„8B5E14		MOV	BX,[BP+14]	;Now get the X position and add it„01DE		ADD	SI,BX		;to the result to get our final„8B5E1A		MOV	BX,[BP+1A]	;offset. Then get the display buffer„01DE		ADD	SI,BX		;offset and add the pixel offset.„8804		MOV	[SI],AL		;Plot the pixel.„„8B4614	Done:	MOV	AX,[BP+14]	;Get the X position„40		INC	AX		;Increment the X position by 1„894614		MOV	[BP+14],AX	;and put back on the stack„8B4606		MOV	AX,[BP+06]	;Check to see if the width has been„394614		CMP	[BP+14],AX	;reached. If it hasn't, then plot the„75C7		JNZ	Plot: [0037]	;next column, otherwise reset the„8B4614		MOV	AX,[BP+14]	;X position back to the left edge„2B4602		SUB	AX,[BP+02]	;of the sprite by subtracting the„894614		MOV	[BP+14],AX	;width.„8B4612		MOV	AX,[BP+12]	;Get the Y position, then increment„40		INC	AX		;it by 1, and place it back on the„894612		MOV	[BP+12],AX	;stack. Then check to see if we have„8B4604		MOV	AX,[BP+04]	;finished drawing the sprite (Are„394612		CMP	[BP+12],AX	;we at the bottom?) If not, then do	„75AF		JNZ	Plot: [0037]	;another line...„„58	Exit:	POP	AX		;Pop the height off the stack„58		POP	AX		;Pop the width off the stack„58		POP	AX		;Pop the height + y off the stack„58		POP	AX		;Pop the width + x off the stack„5D		POP	BP		;Restore our registers for BASIC,„1F		POP	DS		;the exit the routine, cleaning up„CA0E00		RETF	000E		;the stack at the end...„„-----------------------------------------------------------------------------„Length : 154 Bytes (77 Words)„-----------------------------------------------------------------------------„Andrew L. Ayers                BLAST! MODE 13H PSET ROUTINE   andrewa@indirect.com           10-04-96 (00:00)       QB, QBasic, PDS        71   2331     BLSTPSET.BASDIM buffer%(31999), code1%(29), code2%(43)„'„' Assembler code (code1) is as follows:„'„' 1E            PUSH    DS              ' Save the Data Segment„' 55            PUSH    BP              ' Save the Base Pointer„' 89E5          MOV     BP,SP           ' Get the Stack Pointer„' 8B460A        MOV     AX,[BP+0A]      ' Let AX=Buffer Segment Address„' 8ED8          MOV     DS,AX           ' Set the Data Segment=AX„' 8B7608        MOV     SI,[BP+08]      ' Let Source Index(SI)=Buffer Offset„' B800A0        MOV     AX,A000         ' Set AX=Start of Video (13h)„' 8EC0          MOV     ES,AX           ' Set the Extra Segment„' BF0000        MOV     DI,0000         ' Set the Destination Index to 0„' B9007D        MOV     CX,7D00         ' Number of words to copy (32000)„' F3A5          REP     MOVSW           ' Move the words!„' 5D            POP     BP              ' Reset the Base Pointer„' 1F            POP     DS              ' Reset the Data Segment„' CA0400        RETF    0004            ' Return to BASIC Program, clean up„'                                         stack...„'„' Assembler code (code2) is as follows:„'„code1$ = "1E5589E58B460A8ED88B7608B800A08EC0BF0000B9007DF3A55D1FCA0400"„code2$ = "1E5589E58B46108ED88B760AB106D3E689F3B102D3E601DE8B5E0C01DE8B5E0E01DE8A460888045D1FCA0A00"„'„' Now we poke the code into the memory reserved for it:„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 29„  d% = VAL("&h" + MID$(code1$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„DEF SEG = VARSEG(code2%(0))„'„FOR i% = 0 TO 43„  d% = VAL("&h" + MID$(code2$, i% * 2 + 1, 2))„  POKE VARPTR(code2%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„SCREEN 13„'„DO„  '„  ' First, clear out our buffer (kinda like cls 0)„  '„  ERASE buffer%„  '„  ' Set some random pixels using our new routine...„  '„  DEF SEG = VARSEG(code2%(0))„  FOR t% = 1 TO 300„    x% = INT(RND * 320)„    y% = INT(RND * 200)„    c% = INT(RND * 256)„    CALL ABSOLUTE(BYVAL VARSEG(buffer%(0)), BYVAL VARPTR(buffer%(0)), BYVAL x%, BYVAL y%, BYVAL c%, VARPTR(code2%(0)))„  NEXT t%„  DEF SEG„  '„  ' Blast it to screen!„  '„  DEF SEG = VARSEG(code1%(0))„  CALL ABSOLUTE(BYVAL VARSEG(buffer%(0)), BYVAL VARPTR(buffer%(0)), VARPTR(code1%(0)))„  DEF SEG„  '„LOOP UNTIL INKEY$ <> ""„Andrew L. Ayers                BLAST! MODE 13H SPRITE ROUTINE andrewa@indirect.com           10-04-96 (00:00)       QB, QBasic, PDS        102  3222     BLSTSPRT.BASDIM sprite%(15, 15), buffer%(31999), code1%(29), code2%(43)„'„' Assembler code (code1) is as follows:„'„' 1E            PUSH    DS              ' Save the Data Segment„' 55            PUSH    BP              ' Save the Base Pointer„' 89E5          MOV     BP,SP           ' Get the Stack Pointer„' 8B460A        MOV     AX,[BP+0A]      ' Let AX=Buffer Segment Address„' 8ED8          MOV     DS,AX           ' Set the Data Segment=AX„' 8B7608        MOV     SI,[BP+08]      ' Let Source Index(SI)=Buffer Offset„' B800A0        MOV     AX,A000         ' Set AX=Start of Video (13h)„' 8EC0          MOV     ES,AX           ' Set the Extra Segment„' BF0000        MOV     DI,0000         ' Set the Destination Index to 0„' B9007D        MOV     CX,7D00         ' Number of words to copy (32000)„' F3A5          REP     MOVSW           ' Move the words!„' 5D            POP     BP              ' Reset the Base Pointer„' 1F            POP     DS              ' Reset the Data Segment„' CA0400        RETF    0004            ' Return to BASIC Program, clean up„'                                         stack...„'„' Assembler code (code2) is as follows:„'„code1$ = "1E5589E58B460A8ED88B7608B800A08EC0BF0000B9007DF3A55D1FCA0400"„code2$ = "1E5589E58B46108ED88B760AB106D3E689F3B102D3E601DE8B5E0C01DE8B5E0E01DE8A460888045D1FCA0A00"„'„' Now we poke the code into the memory reserved for it:„'„DEF SEG = VARSEG(code1%(0))„'„FOR i% = 0 TO 29„  d% = VAL("&h" + MID$(code1$, i% * 2 + 1, 2))„  POKE VARPTR(code1%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„DEF SEG = VARSEG(code2%(0))„'„FOR i% = 0 TO 43„  d% = VAL("&h" + MID$(code2$, i% * 2 + 1, 2))„  POKE VARPTR(code2%(0)) + i%, d%„NEXT i%„'„DEF SEG„'„'***************************************************************„'„DATA 0,0,0,0,0,F,F,F,F,F,F,0,0,0,0,0„DATA 0,0,0,F,F,4,4,4,4,4,4,F,F,0,0,0„DATA 0,0,F,4,4,4,4,4,4,4,4,4,4,F,0,0„DATA 0,F,4,4,4,4,4,4,4,4,4,4,4,4,F,0„DATA 0,F,4,4,4,3,3,3,3,3,3,4,4,4,F,0„DATA F,4,4,4,3,3,0,0,0,0,3,3,4,4,4,F„DATA F,4,4,4,3,0,0,0,0,0,0,3,4,4,4,F„DATA F,4,4,4,3,0,0,0,0,0,0,3,4,4,4,F„DATA F,4,4,4,3,0,0,0,0,0,0,3,4,4,4,F„DATA F,4,4,4,3,0,0,0,0,0,0,3,4,4,4,F„DATA F,4,4,4,3,3,0,0,0,0,3,3,4,4,4,F„DATA 0,F,4,4,4,3,3,3,3,3,3,4,4,4,F,0„DATA 0,F,4,4,4,4,4,4,4,4,4,4,4,4,F,0„DATA 0,0,F,4,4,4,4,4,4,4,4,4,4,F,0,0„DATA 0,0,0,F,F,4,4,4,4,4,4,F,F,0,0,0„DATA 0,0,0,0,0,F,F,F,F,F,F,0,0,0,0,0„'„FOR y% = 0 TO 15„  FOR x% = 0 TO 15„    READ valu$„    sprite%(x%, y%) = VAL("&h" + valu$)„  NEXT x%„NEXT y%„'„SCREEN 13„'„DO„  '„  ' First, clear out our buffer (kinda like cls 0)„  '„  ERASE buffer%„  '„  DEF SEG = VARSEG(code2%(0))„  FOR t% = 1 TO 30„    x% = INT(RND * 300)„    y% = INT(RND * 180)„    '„    FOR yy% = 0 TO 15„      FOR xx% = 0 TO 15„        c% = sprite%(xx%, yy%)„        IF c% THEN„          CALL ABSOLUTE(BYVAL VARSEG(buffer%(0)), BYVAL VARPTR(buffer%(0)), BYVAL xx% + x%, BYVAL yy% + y%, BYVAL c%, VARPTR(code2%(0)))„        END IF„      NEXT„    NEXT„  NEXT„  DEF SEG„  '„  ' Blast it to screen!„  '„  DEF SEG = VARSEG(code1%(0))„  CALL ABSOLUTE(BYVAL VARSEG(buffer%(0)), BYVAL VARPTR(buffer%(0)), VARPTR(code1%(0)))„  DEF SEG„  '„LOOP UNTIL INKEY$ <> ""„Andrew L. Ayers                GET/PUT MANIPULATION ROUTINES  andrewa@indirect.com           10-22-96 (00:00)       QB, QBasic, PDS        149  4990     GPMANIP.BAS '„' Description : GET/PUT Manipulation Routines„' Written by  : Andrew L. Ayers„' Date        : 10/22/96„'„' These routines show how you can *directly* manipulate the GET/PUT buffer„' structure to build/destroy/read/write a sprite at any moment. You could„' display a sprite, modify the buffer, then display it again - changes and„' all! These routines are powerful! For a great demonstration, see the„' GetShift demo, which uses the same techniques to achieve a full (almost)„' screen scroll, with little overhead! For more info, read the comments„' within each routine...„'„' You may use this routine in any manner you like, as long„' as you give credit in an appropriate manner. Have phun!„'„DECLARE SUB GetSpriteData (xsize%, ysize%, x%, y%, num%, colr%)„DECLARE SUB SetSpriteData (xsize%, ysize%, x%, y%, num%, colr%)„'„DIM SHARED buffer%(1000)„'„SCREEN 13„'„' Play with these lines...„'„'LINE (1, 1)-(14, 14), 12, BF„'LINE (4, 4)-(11, 11), 4, BF„'GET (0, 0)-(15, 15), buffer%(0)„'„'LINE (1, 1)-(14, 14), 15, BF„'LINE (4, 4)-(11, 11), 3, BF„'LINE (6, 6)-(9, 9), 235, BF„'GET (0, 0)-(15, 15), buffer%(130)„'„'PUT (0, 0), buffer%(0), PSET„'CALL GetSpriteData(16, 16, 6, 6, 1, colr%) ' Get a color„'PRINT colr%„'„CLS„'„' Building a sprite from scratch!„'„CALL SetSpriteData(16, 16, -1, 0, 1, 128) ' Set the Width (16 x 8 = 128)„CALL SetSpriteData(16, 16, -3, 0, 1, 16)  ' Set the Height„'„FOR y% = 0 TO 15„  FOR x% = 0 TO 15„    CALL SetSpriteData(16, 16, x%, y%, 1, 12)  ' Data„  NEXT x%„NEXT y%„'„FOR y% = 5 TO 10„  FOR x% = 5 TO 10„    CALL SetSpriteData(16, 16, x%, y%, 1, 4)  ' Data„  NEXT x%„NEXT y%„'„' Use the *real* PUT command to place our sprite!„'„PUT (50, 50), buffer%(130), PSET„„SUB GetSpriteData (xsize%, ysize%, x%, y%, num%, colr%)„  '„  ' xsize% = Width of sprite in pixels„  ' ysize% = Height of sprite in lines„  ' x%     = X position to "get", must be 0-(xsize%-1) (see note below)„  ' y%     = Y position to "get", must be 0-(ysize%-1) (see note below)„  ' num%   = Sprite number offset (0 if buffer only contains one image)„  ' colr%  = Color of pixel retrieved„  '„  ' **NOTE**„  ' Both x% and y% must be set to values between 0 and "size" - 1. The only„  ' time this rule is not enforced is for the following:„  '„  '   If x% is less than zero (0), and y% equals zero (0), then the following„  '   information may be obtained for values of x% :„  '„  '     Value  Information„  '     -----  -----------„  '      -1    Low byte of width information (divide by 8 to get true width)„  '      -2    High byte of width information„  '      -3    Low byte of height information (true height)„  '      -4    High byte of height information„  '„  '   I believe for large sprites (larger than 32 x 256 pixels), both high„  '   and low bytes will have info in them for width and height, and there-„  '   fore are true integer values (16 bit). In these cases, you will need„  '   to multiply the byte values out to get the 16 bit real value.„  '„  DEF SEG = VARSEG(buffer%(0))„  '„  spritewords% = ((xsize% * ysize%) / 2) + 2„  '„  IF x% < 0 AND y% = 0 THEN„    offset% = ABS(x%) - 1„  ELSE„    offset% = ABS(y%) * ysize% + ABS(x%) + 4„  END IF„  '„  colr% = PEEK(VARPTR(buffer%(num% * spritewords%)) + offset%)„  '„  DEF SEG„  '„END SUB„„SUB SetSpriteData (xsize%, ysize%, x%, y%, num%, colr%)„  '„  ' xsize% = Width of sprite in pixels„  ' ysize% = Height of sprite in lines„  ' x%     = X position to "set", must be 0-(xsize%-1) (see note below)„  ' y%     = Y position to "set", must be 0-(ysize%-1) (see note below)„  ' num%   = Sprite number offset (0 if buffer only contains one image)„  ' colr%  = Color of pixel to set„  '„  ' **NOTE**„  ' Both x% and y% must be set to values between 0 and "size" - 1. The only„  ' time this rule is not enforced is for the following:„  '„  '   If x% is less than zero (0), and y% equals zero (0), then the following„  '   information may be modified for values of x% :„  '„  '     Value  Information„  '     -----  -----------„  '      -1    Low byte of width information (multiply by 8 to set true width)„  '      -2    High byte of width information„  '      -3    Low byte of height information (true height)„  '      -4    High byte of height information„  '„  '   I believe for large sprites (larger than 32 x 256 pixels), both high„  '   and low bytes will need to have info in them for width and height, and„  '   therefore the width/height values will need to be broken down from the„  '   integer value (16 bit)  to high and low byte values, then sent to this„  '   routine.„  '„  DEF SEG = VARSEG(buffer%(0))„  '„  spritewords% = ((xsize% * ysize%) / 2) + 2„  '„  IF x% < 0 AND y% = 0 THEN„    offset% = ABS(x%) - 1„  ELSE„    offset% = ABS(y%) * ysize% + ABS(x%) + 4„  END IF„  '„  POKE (VARPTR(buffer%(num% * spritewords%)) + offset%), colr%„  '„  DEF SEG„  '„END SUB„Andrew L. Ayers                FAST SPRITE DEMO               andrewa@indirect.com           10-22-96 (00:00)       QB, QBasic, PDS        49   3139     FASTSPRT.BASDEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"FASTSPRT.ZIP",4^6:Z&=2071:?STRING$(50,177);„U"%up()%9%%%d-%+,8'FRd1Uu3*.%%01%%%1%%%%kf%xyxu%wySgIfx\%;:>SoO5v„U"-xNx0QQdo7VSdeC\gu&=<-/w9+qjOk#*GfY#2Q44EWlxvlR0.Bbp](?zB?gGE^k„U"6H[fqMGxgX(EQ]K<B[h+q:ri__A=j/,qp6IpN3hID$l^>n'b-;/_\vadk*Xc<-2„U"v/k0xGi\'/]r#OB9+XYl;JGt9\^fYT0nP)u#7e+4I9]E[Q#2G3Aj#hRaF6i4s1V„U"3ahIh08O4ql_xinr/Ba[iIiNFUJ8?iE<A?+A$'tE*H:Ec=2y=;UHa^3j5Rf2U/8„U"72Y98T$.*s)*3q]*p0#aP=T)e1<6p4VXWP;5\1:3mMv=HPg>nH4injq\/NGC^=Q„U"2]A#+CZO1i#jAmE1V;cJTMiqd#iHJ9mu='vlvR70<kaU[-:Qp*GaQ)$0W3[Gs)r„U"&hpm)WMic%^I8K#I\EogEx2-)2SEb^6VFVChuq;R'Cs</?ge(?L^tE3Vqo[#q[/„U"h;cOAGPX_wmq=wHQdN>qV:#+YrTIh_<'*<+IG>*-3Pef+sAbr'GA5Gef31Aj*fQ„U"RU2VWU&oo]MT&J#>>c.i.MEg.crI2Jx)f\(q-]tN[2=fwbBV2e<_=WQe-7X7lqi„U"=.[R)kQ0pj8r&uJ(m4.g_f:<\tTQcE;ZLwvPyj$4,roQooZ7wB-ic$C\tfA:gSV„U"Wf$M\^sDJqlcdjTU3NHepw)3jjL=*7\Go;Ik;HEPiRC5laP(U'0KSAw221t+F1h„U"N0ZUlhl>o..q/T'[yl-AXn_1(YD$oNDa&vL:7TX#C;4X(yB\&rMY3I1FupGCYS0„U"^93e6aQ#Tmb&cI3(ex+p&12AV0iTmPNsz4J]F$5Y*_e8?I[$XE(l&$zsW_p/hWw„U";/It63SvWS.Qr$[TVA%[#SU<,:;^GC'_6Gi>CRh:NP8NZ6NPkZO0/MHU8RHb5dQ„U"X+.W9,2T?+/gztgd>s,n/Fa.e)Y';Ql$IJxC3Os%Gzk-4oKFI>\%P(KCX[q56DO„U"1[RgzV]qHu\rrJG#MWjh6)[GORb97Od86/7dwL7uwSRynCa^x[387SsjW2?p&\,„U"c]ll=G0=5ku#9'.UG]kk=-fG\yn<6XWh9HFuD#++3bZlL$+:B,ZF]5Q^+IGGxAy„U"/eMAdJ6J5CWJ<Cg*iS*lOJ-'oM4AP-gbZ?*,6IH5V=T^gql.+mt7wtF4aW4BmI=„U"J/rECiTB$pM%G6vKD;Vbtfe*$Dk98&(6$QY#'\>r%'BdBKo\YyZ(xbbjfu+XF-Q„U"?8S,\1E72ri=>u'2gz5ZM2x)M(uR[DEof[CO1a0JC<'3\5MrhQpd>iAGEuwLj5N„U"Z(:vze>_/(zbU_NtL\=9yLlrUPt*RAW*mZ(sNE)k$If?OzhUO8NS(:Z0e.CYu_'„U"8Ob^^cZ;/-.Q6A7weDF)vk,?,Q<\gh(E]p%ZVox%xNfwXbN=udbz7\#z8^=%1=D„U"fWe+P#A9:<?Ev6:2un-Jh=p)m6XN:v.5GNi=ewdCL6BEMHuf+Yf))9tsG-LH1<9„U"/%6ceR-*>8v3wV&Ffxpb+;)HhSUh,L,Ds)DP_5Wb8nc;xvNv7YbNKh)NU'cRNbK„U"+.1RP]-slbQebu+G%vFX)&V7:h2G[jZ+?q&&0q6[HxDkfu(JZ7G2wT6Pe5Ay&]]„U"4Z$GV_$<<#G/uw3[-Z'C<]VHSL^h]?-MI]dRDuT&,[9o\5M9nRf6'?+Y3cdn)Vc„U"wb):kz+*&_zkndj3?4(igYpO93Q,SWY&<o$x6>sZdL2x;-U^\i<y4TaxPS#4zH7„U"VK+0JHW8g6N'pTup%()9%%%%-%1lb%F7=wWp'T&%%-px%%%.%%%%xmnu%VSxu=w„U"fIv,9Te=a)YVARm&#hPBmcLNaPBP?K')g(QvumTU,L>jeSNoUfzvMkMt$5Qwsm5„U"9Da$Oulum-4Q4I]n;#lkuW#5nq4Hhl(amQHtNal7G^+2(ad8s$kflIMeaV[p1Ye„U"8beG#uLWrCbfQZ/^Du3uomZ/8hh?Wg.3h^0?Xs$X_C*Yz^Ct^4surkK6jB0c[E9„U"nhHrHvIdj#$?a;d=U/9&O&(+#1=U/*9O&(%+1=U5/9O&%(+1=UU/9O%&(+1d=U/„U"9&O&(+#1=U/*9O&(%+1=U5/9O&%(+1=UU/9O%&(+1d=U/9&O&(+#1=U/*9O&(%+„U"1=U5/9O&%(+1=UU/9O%&(+1d=U/9&O&(+#1=U/*9O&(%+1=U5/9O&%(+1=UU/9O„U"%&(+1%=Y1?I+2RUOf<o00IU7=%Y1?+12RUfi<o0I(U7=Y%1?+2_RUf<;o0IU&7=„U"Y1#?+2RSUf<oG0IU7#=Y1i'xb1=UU/9O%&(+1d=U/9&O&(+#1=U/*9O&(%+1=U5„U"/9O&%(+1=UU/9OU&RtU%&(+1d=U/9&O&(+#1=U/*9O&(%+1=U5/9O&%(+1=UU/9„U"O%&(+1d=U/9&O&(+#1=U/<i>l#%up&'%9%9%%%%-%5+,'FBRdUu&3*%%&01%%%1„U"%%%%%%%%%&%E%%%%%%%%%kf%xyxu%wySg%fxup%&'9%%9%%%#-%lb&%F=w9WpT&„U"m%%px%%%.%%%%%%%%%%%%E%%%&]*%%%xmnu%VSxu%wup*%+%%%%%'%'(%#%%(%_„U",%%%%%„END SUB„CLOSE:IF S=171AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Andrew L. Ayers                EXPLOSIONS EFFECT              andrewa@indirect.com           10-22-96 (00:00)       QB, QBasic, PDS        76   1630     EXPLOSNS.BAS'„' Description : Explosions - VGA mode 13 special effect„' Written by  : Andrew L. Ayers„' Date        : 10/22/96„'„' The name says it all!„'„' You may use this routine in any manner you like, as long„' as you give credit in an appropriate manner. Have phun!„'„SCREEN 13„'„' Set up arrays for our explosion data„'„DIM x(50), y(50), xv(50), yv(50), ox(50), oy(50)„'„DO„  '„  ' Initialize an explosion„  '„  FOR t% = 0 TO 50„    x(t%) = 0„    y(t%) = 0„    dir = RND * 6.28: vel = INT(RND * 5) + 1„    xv(t%) = SIN(dir) * vel„    yv(t%) = COS(dir) * vel„  NEXT t%„  '„  ' Initialize offsets and color„  '„  tx% = INT(RND * 320)„  ty% = INT(RND * 200)„  c% = 31: done% = 0„  '„  ' Print the title„  '„  LOCATE 1, 6: PRINT "Explosions by Andrew L. Ayers"„  LOCATE 23, 8: PRINT "Press any key to exit demo"„  '„  ' Explode!„  '„  DO„    '„    ' Move all the pieces„    '„    FOR t% = 0 TO 50„      '„      ' Erase an old piece„      '„      LINE (ox(t%) + tx%, oy(t%) + ty%)-(x(t%) + tx%, y(t%) + ty%), 0„      ox(t%) = x(t%): oy(t%) = y(t%)„      '„      ' Move the piece„      '„      x(t%) = x(t%) + xv(t%)„      y(t%) = y(t%) + yv(t%)„      '„      ' Draw it at new position„      '„      LINE -(x(t%) + tx%, y(t%) + ty%), c%„      '„    NEXT„    '„    ' Decrement color to "fade"„    '„    c% = c% - 1: IF c% < 16 THEN done% = 1 ' Do another explosion if done„    '„    IF INKEY$ <> "" THEN done% = 2 ' Exit on any key press„    '„    FOR dlay = 1 TO 5000: NEXT dlay ' Change to suit your machine„    '„  LOOP UNTIL done%„  '„LOOP UNTIL done% = 2„'„CLS„Andrew L. Ayers                FAST & SMOOTH SCROLLING EFFECT andrewa@indirect.com           09-10-96 (00:00)       QB, QBasic, PDS        89   2012     GETSHIFT.BAS'„' Description : GetShift - Mode 13 VGA Special Effect Routine„' Written by  : Andrew L. Ayers„' Date        : 09/10/96„'„' This shows off one hell of a way to achieve a very smooth and fast "scroll"„' type effect which may be useful in a game or demo. The technique I use to„' do the effect is to shift the data within the GET buffer, re-displaying it„' each time using the PSET operator. By keeping the buffer small, I can do„' the shifting relatively fast, then copy the shifted version over and over„' again on the screen to create a full screen scroll type effect!„'„' As always, if you use this in any of your creations, please consider your„' source and mention my name. Thanx, and have phun!„'„DIM a%(451), save%(24)„'„SCREEN 13„'„' Build our image„'„FOR t% = 15 TO 0 STEP -1„  '„  col% = 31 - (t% * 2)„  CIRCLE (15, 0), t%, col%„  PAINT (15, 0), col%„  '„  CIRCLE (15, 29), t%, col%„  PAINT (15, 29), col%„  '„  CIRCLE (0, 15), t%, col%„  PAINT (0, 15), col%„  '„  CIRCLE (29, 15), t%, col%„  PAINT (29, 15), col%„  '„NEXT„'„' Put it in the buffer„'„GET (0, 0)-(29, 29), a%„'„' The following is info you might find helpful„'„dbyte% = a%(0)„highbyte% = INT(dbyte% MOD 256)„lowbyte% = INT(dbyte% / 256)„wid% = INT(highbyte% / 8) ' Width of GET image in pixels„'„dbyte% = a%(1)„highbyte% = INT(dbyte% MOD 256)„lowbyte% = INT(dbyte% / 256)„hgt% = highbyte% ' Height of GET image in lines„'„' Clear off the screen„'„CLS„'„LOCATE 1, 3: PRINT "Smooth as Silk! - By Andrew L. Ayers"„'„DO„  '„  ' Shift the buffer up„  '„  FOR t% = 0 TO 14: save%(t%) = a%(2 + t%): NEXT ' Top line„  '„  ' Middle lines„  '„  FOR t% = 17 TO 451„    '„    a%(t% - 15) = a%(t%)„    '„  NEXT„  '„  FOR t% = 0 TO 14: a%(437 + t%) = save%(t%): NEXT ' Bottom line„  '„  ' Display it!„  '„  FOR y% = 0 TO 5„    '„    FOR x% = 0 TO 9„      '„      PUT (7 + x% * 30, 10 + y% * 30), a%, PSET„      '„    NEXT„    '„  NEXT„  '„LOOP UNTIL INKEY$ <> ""„Andrew L. Ayers                QUADRATIC PLASMA               andrewa@indirect.com           10-23-96 (00:00)       QB, QBasic, PDS        148  3332     QPLASMA.BAS '„' Description : Quadratic Plasma„' Written by  : Andrew L. Ayers„' Date        : 10/23/96„'„' This is a program to create quadratic plasma (I am unsure on„' the name here. I know I am not using quadratic equations, but„' hey, call it what you want). The images are formed using only„' math - no recursion, SIN/COS warping, or random numbers. What„' comes out is a very nice display. On machines without a co-„' processor, this may take a little while. Have phun!„'„DECLARE SUB ReadRGB (red%, grn%, blu%, slot%)„DECLARE SUB WriteRGB (red%, grn%, blu%, slot%)„DECLARE SUB SetPal (start.slot%, end.slot%)„'„DIM oldr%(255), oldg%(255), oldb%(255)„'„SCREEN 13„'„' Save old palette„'„FOR t% = 0 TO 255„  CALL ReadRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„'„' Create a custom 63 color palette„'„CALL WriteRGB(63, 63, 63, 1)„CALL WriteRGB(63, 0, 0, 15)„CALL WriteRGB(0, 63, 0, 31)„CALL WriteRGB(0, 0, 63, 47)„CALL WriteRGB(63, 63, 63, 63)„'„CALL SetPal(1, 15)„CALL SetPal(15, 31)„CALL SetPal(31, 47)„CALL SetPal(47, 63)„'„' Display quadratic plasma„'„' Try different numbers (greater than 1) for scale!„'„'scale = 1„'scale = 10„scale = 100„'scale = 250„'„FOR y = -100 * scale TO 100 * scale STEP 1 * scale„  '„  h% = 0„  '„  FOR x = -160 * scale TO 160 * scale STEP 1 * scale„    '„    h% = h% + 1„    '„    ' Try out these equations for different effects!„    '„    c% = (SQR(x * x + y * y) AND 62) + 1„    'c% = ((SQR(x * x) + SQR(y * y)) AND 62) + 1„    'c% = (SQR(ABS(x * y) + ABS(x * y)) AND 62) + 1„    'c% = (SQR(ABS(x * x - y * y)) AND 62) + 1„    PSET (h%, v%), c%„  NEXT„  '„  GOSUB MovePalette ' Remove this line if your machine lacks a coprocessor„  v% = v% + 1„  '„NEXT„'„' Move the palette for a cool effect!„'„DO„  GOSUB MovePalette„  FOR delay = 1 TO 1000: NEXT delay' Adjust for your machine„LOOP UNTIL INKEY$ <> ""„'„CLS„'„' Reset original RGB values„'„FOR t% = 0 TO 255„  CALL WriteRGB(oldr%(t%), oldg%(t%), oldb%(t%), t%)„NEXT t%„'„STOP„'„MovePalette:„  '„  CALL ReadRGB(ored%, ogrn%, oblu%, 1)„  '„  FOR t% = 1 TO 62„    CALL ReadRGB(red%, grn%, blu%, t% + 1)„    CALL WriteRGB(red%, grn%, blu%, t%)„  NEXT„  '„  CALL WriteRGB(ored%, ogrn%, oblu%, 63)„  '„RETURN„„SUB ReadRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C7, slot% ' Read RGB values from slot„  '„  red% = INP(&H3C9)„  grn% = INP(&H3C9)„  blu% = INP(&H3C9)„  '„END SUB„„SUB SetPal (start.slot%, end.slot%)„  '„  num.slots% = end.slot% - start.slot%„  '„  CALL ReadRGB(sr%, sg%, sb%, start.slot%)„  CALL ReadRGB(er%, eg%, eb%, end.slot%)„  '„  rr% = ABS(er% - sr%): rg% = ABS(eg% - sg%): rb% = ABS(eb% - sb%)„  rs% = SGN(er% - sr%): gs% = SGN(eg% - sg%): bs% = SGN(eb% - sb%)„  '„  stepr = (rr% / num.slots%) * rs%„  stepg = (rg% / num.slots%) * gs%„  stepb = (rb% / num.slots%) * bs%„  '„  r = sr%: g = sg%: b = sb%„  wr% = r: wg% = g: wb% = b„  '„  FOR t% = start.slot% TO end.slot%„    '„    CALL WriteRGB(wr%, wg%, wb%, t%)„    '„    r = r + stepr: wr% = r„    g = g + stepg: wg% = g„    b = b + stepb: wb% = b„    '„  NEXT t%„  '„END SUB„„SUB WriteRGB (red%, grn%, blu%, slot%)„  '„  OUT &H3C8, slot% ' Write RGB values to slot„  '„  OUT &H3C9, red%„  OUT &H3C9, grn%„  OUT &H3C9, blu%„  '„END SUB„Andrew L. Ayers                EXPLODING PIECES EFFECT        andrewa@indirect.com           09-12-96 (00:00)       QB, QBasic, PDS        146  3518     EXPLTRI.BAS '„' Description : Exploding Pieces - Special Effect Routine„' Written by  : Andrew L. Ayers„' Date        : 09/12/96„'„' This shows off a pretty CPU intensive "explosion" of colored„' triangles, all spinning and moving away from a common center at„' different velocitys. Perhaps it could be modified to be used in„' a game or something. I wrote it after reading a post on one of„' the newsgroups about someone needing to create an explosion -„' I hope this helps some...„'„' As always, if you use this in any of your creations, please consider your„' source and mention my name. Thanx, and have phun!„'„SCREEN 7, , 1, 0„'„CONST MAX.NUM = 60„'„' Define a triangle„'„TYPE triangle„  px1 AS INTEGER„  py1 AS INTEGER„  px2 AS INTEGER„  py2 AS INTEGER„  px3 AS INTEGER„  py3 AS INTEGER„  '„  nx1 AS INTEGER„  ny1 AS INTEGER„  nx2 AS INTEGER„  ny2 AS INTEGER„  nx3 AS INTEGER„  ny3 AS INTEGER„  '„  r AS INTEGER„  '„  x AS INTEGER„  y AS INTEGER„  '„  vx AS INTEGER„  vy AS INTEGER„END TYPE„'„' Set up a whole mess of 'em„'„DIM pieces(MAX.NUM) AS triangle„'„' Initialize them„'„FOR t% = 0 TO MAX.NUM„  '„  pieces(t%).px1 = 0: pieces(t%).py1 = -5„  pieces(t%).px2 = 5: pieces(t%).py2 = 5„  pieces(t%).px3 = -5: pieces(t%).py3 = 5„  '„  pieces(t%).nx1 = 0: pieces(t%).ny1 = -5„  pieces(t%).nx2 = 5: pieces(t%).ny2 = 5„  pieces(t%).nx3 = -5: pieces(t%).ny3 = 5„  '„  pieces(t%).r = INT(RND * 360)„  '„  pieces(t%).x = 160„  pieces(t%).y = 100„  '„  DO„    '„    pieces(t%).vx = (INT(RND * 17) - 8)„    pieces(t%).vy = (INT(RND * 17) - 8)„    '„  LOOP UNTIL pieces(t%).vx <> 0 AND pieces(t%).vy <> 0„  '„NEXT„'„' Build SIN/COS tables for speed„'„DIM sintable(359), costable(359)„'„rad = (3.14159 * 2) / 360„'„FOR t% = 0 TO 359„  '„  sintable(t%) = SIN(t% * rad)„  costable(t%) = COS(t% * rad)„  '„NEXT t%„'„r% = 0„'„' Explode!„'„DO„  '„  done% = 1„  '„  ' ERASE LAST IMAGE„  '„  LINE (0, 0)-(319, 199), 0, BF„  '„  FOR t% = 0 TO MAX.NUM„    '„    IF pieces(t%).x >= 0 AND pieces(t%).x <= 319 AND pieces(t%).y >= 0 AND pieces(t%).y <= 199 THEN„      '„      ' CALCULATE POSITION OF NEW IMAGE„      '„      lx1 = pieces(t%).px1 * sintable(r%) + pieces(t%).py1 * costable(r%)„      ly1 = pieces(t%).px1 * costable(r%) - pieces(t%).py1 * sintable(r%)„      lx2 = pieces(t%).px2 * sintable(r%) + pieces(t%).py2 * costable(r%)„      ly2 = pieces(t%).px2 * costable(r%) - pieces(t%).py2 * sintable(r%)„      lx3 = pieces(t%).px3 * sintable(r%) + pieces(t%).py3 * costable(r%)„      ly3 = pieces(t%).px3 * costable(r%) - pieces(t%).py3 * sintable(r%)„      '„      pieces(t%).nx1 = pieces(t%).x + lx1„      pieces(t%).ny1 = pieces(t%).y + ly1„      pieces(t%).nx2 = pieces(t%).x + lx2„      pieces(t%).ny2 = pieces(t%).y + ly2„      pieces(t%).nx3 = pieces(t%).x + lx3„      pieces(t%).ny3 = pieces(t%).y + ly3„      '„      ' DRAW NEW IMAGE„      '„      c% = INT(RND * 16)„      '„      LINE (pieces(t%).nx1, pieces(t%).ny1)-(pieces(t%).nx2, pieces(t%).ny2), c%„      LINE -(pieces(t%).nx3, pieces(t%).ny3), c%„      LINE -(pieces(t%).nx1, pieces(t%).ny1), c%„      '„      PAINT (pieces(t%).x, pieces(t%).y), c%„      '„      pieces(t%).x = pieces(t%).x + pieces(t%).vx„      pieces(t%).y = pieces(t%).y + pieces(t%).vy„      '„      done% = 0„      '„    END IF„    '„  NEXT„  '„  r% = r% + 15: IF r% > 359 THEN r% = 0„  '„  ' SHOW IMAGE ON SCREEN„  '„  PCOPY 1, 0„  '„LOOP UNTIL done%„Andrew L. Ayers                OTHER NICE SPECIAL EFFECTS     andrewa@indirect.com           10-24-96 (15:12)       QB, QBasic, PDS        100  6558     EFFECTS.BAS DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.2„SUB V1:OPEN "O",1,"EFFECTS.ZIP",4^6:Z&=4644:?STRING$(50,177);„U"%up()%9%%%d-%b*.uF3H2=E,'7%%?)%%%1%%%%ns%yjwk%jwSg.fxDx;0>SUj5v„U"]=DNGhz./BQI\<>jTLIiu9CYey_58m2?b+)offAs%jNhFEaUfZCVuL>hVN4F6Ki„U"S=l[bUbqjH5Yw/&Qu9q7bV>iK?-I$bUkljDq/'^.$54OV%Y61j[9C#Gc/?89:ux„U"Kb??hp)AGZGW=OBUD:;n0-D)Gjia\KN)oOgGfF[kv&4M[1TR[Ni,6Y,K/[gmw/J„U"JoJE]bVq[>*S%ekk&Ad'T4/.fOETFw*cxrBA6b%25;kKYzy6/\lu0*IcNS'?Hmj„U"7,kpxHflfe/GnFME.#hm&dQ0S_g8i;8S.:9nEiTkh69aK8'w%rURt_K3F8aqB*:„U"TygOsH'Y3'1([uJU9S,o%KgxYylFrq0Zq3IVv9c^6couK.Y*;n,f=)p5[qH,kf(„U"/ZU?-sj'j6s14?dtYZGC>*zQc0jAB=.7<fg7RsS=RYM)]TK^b[6k7VWg7Y\sV=r„U"AQbZ[9qIU]h=nM\(a7Bj:gW8+*DDL#Rl:9m&;s/Og(Z1qZrOPn/I\lq3XO1#tg&„U":f9BKZ1fT9T.6-\$1<(sTdyi12?xO%p9K9bBPx<c]f-;=r[B5ze(ru(SKTkt3f.„U"fhvTwtvJs;]2d0I2\8WcG1+ofniuc5;6';Cf8_%ir%Qp*SQFe#WPJ$uN3qRRG(e„U"tb(%-D<s8UH<mMf$aNBjF-pdAt;^$>I[*cAMs3eCcx8;U4wnY8dTY/WBjHki;0f„U"mXGq_[>dI9bE207GYx;2FQ/>:K5R,ajF9mUVZ\JNu]a?Y%N-*-fOdu%p()9%%%%„U"-:%l*u%F&-N+B0+%+%k;%%%.%%%%qns(j)SgRfx6'2<Bjk=5wg>WxV&v3't)w.)„U"skmCxJka2XrxQo2'0Gdle6=C9R+_Y3kdJ;JF9B5W=8X]nIWeofbteZDf&K2EKC+„U"I\I#2;Nbsvd-hgrFFr',31Z%)o-0qlSE)_UH17BOcjmiU:9eJ[qt)1p-(Qtx17Q„U"b&BV$/&sVR<%g,r[=7.(0x4'[6-lv:jw<^j:JG,:j:TfL)Y#m'[;21au>8Svuq:„U"RluV/LaPI'F''&K.*ShQg:L/t6)pLgZs:?q/6#7'f)9H&\EF)Eo:$TZ.6R_+Urn„U"=[?v0:6WGa30qt_jG*QKSRGulM1-Egfc==V1+V*V7(yB85qj92mN>.$g0&H'gkN„U"4Sg,):X.5(QmNk#thmewlEqNK0::eJl/,iWUk=J\Vh\/e+g4D2'7J-.5BhdPKzL„U"13G#m1dl/p(dbEo4tTy_L+hKVT7nKJO?<%aWS#S2[?BEZ)yfPxp_b>Ul-Y=m9QX„U"h2o\+'Y/<SkdlUn5LE20wp]'mr<P1;+52)n6+=:mZ13s&'^pY;SN:]I:,-vcKoW„U"8?$vPFiql9//as>PPgeZO1kqO\g8'j6/EFN?if-YEF_ibe1b088vqCp*zq-5t8J„U"l>pa,LRb$u(a9cYmaxX3u[T)8/GXuUTVdlS;6r\1.;8IC'&=R/XB#l%6$qP6g/F„U"utrMDuBzr.kX9r(?Jhc0ZA-.cO42+oS,nX.\w<&s+J*SX64((1Hoo$ne)SJUS7<„U"TsyCYE;;40r/'U<l<UiGpy_X'Mpnr6.d',&P$J(0<uFg7>WCv,&oPE^R_07JI]p„U"'CDgtg^#z<;f&e<<P)6+7?Z5;)hd-YxYu=3''<ddnqTVTNq;'&ppp:uKQCzGmX'„U"DZOq,si-x[:1^r02kTrR2hI#R:Zp_lKUG-_7Cj)or#7K:<B+Y/[^7<:hgEq7qAd„U")(K-Dv3)Q\BA_YJ4%,M?%%rF'sOk,(MPt-Gv>p?lk\bd_[b$jOa[Ux85ol-QYD=„U"bYIku1fY%kf9Pi/hhuLO9,-nCEx(c.JrqX=L6Ej59MfW\msUOctFHiJ5#:%0$KP„U"MM*u:p7%0mR^avtubhTr%;TKI0eY<5PJ-P%2;?QRfZkmut_kD7'_0$;t6YQglX1„U"f2uKdnCs-iD.&tVdy#>Xqhn%Ynp&ktja?I1.aNXG(rV&_%r*6g>;H>bybQE$OW#„U"4'6np)g<aUW9Z'GR0b7$6U('38Jz9-jmHqH$8#nYN?g#8A'OLn23?\TM'Gqju5,„U"Y_[#<fX-4idLZT4Lq'pOHV$vYWm)8I4.Y/Hc(0_G^\Vuiv:I:xN)42D(oKMITP-„U"\pz%'D1Gmpdi2M%[aJ.$Nrn$&#((ou^\t#MQJU$fi<KKE9(.2aSs5Q>7Vtm.]]f„U"Ne/Z06vc#Tu6qgl2=)Qj5$;pw=GB:&ah2'sCByJ,O%qA-bCZigioTym_A-YT+i7„U"]o^y,fNUPw+y3mA-YWasWnSZ2'so(2*cFpBZUng<757jx9q)25qQni*LY3l>-4F„U"qKTzC(>t78d6cmLF7F*_tbBBX0s[y.cmuz:y8YQfIzh)mwx%Btw)(1,pve\R_Uw„U"N(b$1Wt6mK_N68'\KGmkV?2_8p:w8_:o'v?+Z2hBeaV86nhwc7r:bpuO&6Re(TL„U"WgpS*I0/-E?_AG0Cx\6t4oN=c+bsFwL4ze4O)OMOex7/(()nhA&02V:q2z-iUZ6„U"0&E5r)W(*V/:gC:4ZpzCJdhoI[0pbna\a(FStI2UU0<9*PcM=xr&=&tdwMx$#/M„U"nA+2SeeFnf=pG9V>(fbZ%sM0%AJ?gO3\*+yfn17Td'tD14,7MKrBT8Y%Vu^uqaQ„U"qadNA56MZd,0Mr/CVHTG%k.t<5^Z.2v*+Q[[FOtpoDX;B6(+V^k9g-&(8w1_EMD„U"?j^X>w'Vk=3c0Hq=5=c1B03E<a%a]KVZsgZVJRDtM*4upuDfoS#O3lW2#IU?jVw„U"Z_2Wek*&[mbKnGgMNs(3b_ACM5sg$0B*<CPt7U%xo:1[kKnBsK?(H6Ac\9=HusA„U"'l/fBP^bGDXB(M#_g]xP_#aW)V7[+tY3j:rL42K?Pg?mTRKC;m4j<r4mQ%\s%YS„U"J&$4C6$3s/,1_LJqFRCx,F4s>WL7NH,=EGHmUR^<7Un3b*_=:mq?0kDZZLl0K?b„U"o'yhG:wo(^^=DCH\?,=lb5X*l7/6I80,(G(g2:6b)'Xv%,up(%)9%%[%-%6B*uF„U"$oc.w_#&%%[%)%%-%%%%x%unsS[gfx6kaV=Lde5Th+H^BsdHu)ZJs[txJ1fs_u1„U">;.Yr=u,c3G)(_?FHhkUM>H'%Buf[g67YL0JF5uGE0#lThEs;gbGP'*ZgnNq'<T„U"Jcy0OG*.KG1<GNX9^M^G.P6;[\c#QNBG-n%$vp7?5_=,2n%t^3/qbqF\uZz3_8n„U">;uZjZ2u$W^rGG=>j.q0pvZ.V)%;s4Xe1<9^q$Ou5k^XC$SFfGaRu6I]Y)=6Eq4„U"H),o,t7emIh:82gZ((;d9)lV*L?]a11j9s6e,)$R5#M9_VlK'\2)FfCewK+aF(M„U",qM?^/Ms[zA$WWZtY1l/h$_>s%P)\m352WL2S8,kx=WrYY92GtoBQ;$HTKe%5fD„U"EWRrN5pYFb>PGaHPlVgS,-_Yy%SG[x9J,S8?9JWg/]29*1\966<._uZXm3ZwNn-„U"8rXUGL2>Rt;^H[H^oa*W$>8=.(v%?qt?RMG_b=,alTPD+YS*\,\s.S5B*2CA7e9„U"?&pshT*3=6Rxo<PpE28pNOivM[oKt1m^Zis)jcY>:KX\e=^*<-b7u#:#mm\eWq%„U"-58$G+x\_Ikl$GhgTA*(oR*+WW#(glxxojAodeBQx*6^_=.=8[2cb:fD.IfCjlj„U"zq=vTr%+up(%)9%%[%-%OB*uFpY40Ui%*%%z%2%%-%%%%k&(wjS#gfxlh%<BSmk„U"5wg4>xV2OxP_/h[[bQ&mIX=_2VN:k[:<kEjS;pskKJ4qbXsd-447'[qWrd8#9*T„U"oHcterWh\<;R21fm$XJK.j_TPc1F2;:.KK&kQPPXHh3U('[QwVQm$BkU^GIhnZw„U"]M7dq]A>uY$e,xVYU31Q00'3^?PHQCFcpd&I7XanSvqf>A<cGbG+J/<I4sfH$Y\„U"%?AGU;8m&JU;%Z57/Oic^)Ys7.F,]3H1??DAlfc(gw7)\<=N9=iL\.,26qU8DR;„U"kngl?3%2IuZK0u]Y2P\aQb%MkAOvQQPJ2Ay0(fPN_E]wM%;U:'8/bA=Nh0;qM$6„U"w'$0Seo.n\fuEns1ei##6>ORzP;+,9[g_M(loukcsO,UgCMw,=i(wB=%(y0?M.x„U"T6'KUeZ,IF&aQpI[WmeACT$RIT.]L86i5(>Lwq8qsv+M?/xyiEU,zF,PfsfTMwN„U"q9hXL[MO,F*i,.a]5esQEJ2a+Bh?SlMe,tm#JOo/V4-1dtt<#^L;\+P#F7yA$rn„U"WAFdFn#tc,bRwKNCsx*D3n-+%z1WH<s$^_YZ[YcCUH.5n7RL*&]$gZJ*U]?qH]J„U"]-p-MK85PDGon)<YUW%r%K?+YU[ITRqSqXch9_K<5Pga>UG$[ubT)?hqSn$c\,-„U"-./B%wrm1ubI2hOs'dLki6#I%c=wR.UdV%I#wng?'[Bd.h0cU/Ld]F7<*s0SfYQ„U"AVWvk:\)>vA)jy15tF&&N[IE5D_3mCGO/zmc3'JP+o^iPPiD()<l3wO-F2dWL#o„U"3x:p$=j4vM[cjiMoqs>EKxpXcwq9UVBISVyMjmSys&NaLpm15eZQALFI=ls60pe„U"p4b#):Ge:4aU,hiV/?MkSIsmQm\[mX[Ogw9*#G\j3wVqX.3*Y2p=lW''J6rd7Y7„U"&qRhGYIxVhrtI$5VgS[bW+h8d'o(xCO82V1xYw*+MN%5.:')yV_nV7Ld^3V:8bI„U"4.>Z(Pqpfdrv*fBQgOr6\r1k'x1R,YVQ42><m#T%nI?+Uc(hVI<(#XwpGZ[\k6x„U"cfv(1CHG4<PgWRFDHG%?KE4EK;0VP;'Pj#K-Lw=s4aoef=jQ$riwH0&BU%bEG]h„U",rG8vX8Up_(w\6]&/ga[=YIJz7+6:Yeh9XVGlp7%KS;J7\n&N/J5FZJ$IR;VcNV„U"m=j*_Nc4#_?Vsm+6*O$n.D%ICjJlo,A]I3UVKD2Gfq'aevWkeJ[F*ec3<q#rS/i„U"xkuxu,iolLXJ(+knNfH..pY0vhs,4,:gQ<6W.[y8asdTW+YjAC42'Ev/U2LfkFs„U"O#&TUI>#Q2(cdE>AW#R>U6MX%h+gE)zK+WfjT;h1v,gPjpI66X?^YjQ#vMVJJjl„U".NZ4j,M5'\uA&Mr8J(xb<^JQlOu:nhAD=YE]a)AsRCa_B3OunP.f8J>=]58D6<\„U"7_j=;/m>*xDTcig(MD9V,VI,dHJYdngxE(.dE)I>p4jv^3Y]eL:l:\m2F66R(J%„U"VO6Ak[?DG'69]SW+6]inJk;a;^=qCt+lvPHd)Qk25XgQ2R%M]>P&=O/'[zy_q=2„U"psCk<$o#K7*C<ZAZpAZwp8H=<)H3P8]Z^k_w\#*K%3%p'hl*sdN1<z.%L>81A=\„U"S:-+\OR1qN2V:m5WOZrK_4G9%s0Yb99p'*+].J4KU^.m\V7=cqtV7oV-D>eWR$^„U"2f_-]S\]*B4JKgP)'X?F$6W%wigX2LfO5GN1PlF3cWgz,Z[J%G%YPCrC^bOg/h>„U"GzpmA._Owqg;Y's;Yk-Z2wYMblFL=>l5qwEdR?owEDrx6#f;1BUItJt5jt&BfLZ„U"/G2;QC:J5<[1Hqh+Hnb%dup&%'9%9%%%%-:%b*uCF3H=)E,'%+%?)%%%1%%%%%%„U"%%%&%E%%%%%%%%%n%syjw%kjwS%gfxu%p&'9%%9%%#%-%l'*uF&[-NB0[+%%k%;„U"%%.%%%%%%%%%&%%E%%(%V'%%%qns(j)Sg%fxup%&'9%%9%%%m-%6*duF$c=.w_&„U".%%[)%%%-%%%%%%%%%&%%E%%%&4.%%%xuns%Sgfx%up&'%9%9%%%%-%-O*uFqp4„U"0U&i*%%%z2%%%-%%%%%%%%%&%E%.%%#0#%%k(%wjSg%fxup%*+%%%%%)%7)%V%%„U"%%V6%%%%%„END SUB„CLOSE:IF S=217AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„Robert Seidel                  MELTING SNOWMAN                rseidel@ifk.uni-jena.de        10-25-96 (12:00)       QB, QBasic, PDS        84   2438     SUMMER.BAS  ' SUMMER.BAS - FREEWARE by Robert Seidel rseidel@ifk.uni-jena.de„„'  €€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€„' €                                                     €„' € This file was found at Robert's HomePage !          €„' €                                                     €„' € Come and visit me if you are interested in:         €„' €                                                     €„' €  PowerBASIC, QBASIC, POVRAY, POVLAB,                €„' €    FREE 3D Studio IPAS, PICTURES,                   €„' €      FREEWARE, GAME Levels                          €„' €        AND A LOT OF LINKS !                         € „' €                                                     €„' €  http://www.uni-jena.de/~p6sepa/rshp.html  ___      €„' €                                           (o o)     €„' €                                       oOo ( O ) oOo €„'  €€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€€„„„DEFINT A-Z„DIM melt(2400)„„SCREEN 13„RANDOMIZE TIMER„„FOR i = 0 TO 63 'Palette„  SetRGB i, 64 - i, 64 - i, 64 - i 'grau„  SetRGB i + 64, i, 0, 0 'rot„  SetRGB i + 128, 63, i, 0 'rot-orange„NEXT„„FOR i = 1 TO 50 'Schnee„  LINE (0, i + 150)-(320, i + 150), i„NEXT„„RenderCircle 160, 158, 50, 1, .8 'Schneemannkîrper„RenderCircle 160, 95, 35, 1, .8„RenderCircle 160, 50, 25, 1, .8„RenderCircle 149, 45, 3, 58, 1.2 'Augen„RenderCircle 169, 46, 3, 58, 1.2„FOR i = 85 TO 205 STEP 25 'Knîpfe„  RenderCircle 155 + RND * 2, i, 2, 50 + RND * 4, 1„NEXT„CIRCLE (160, 93), 40, 0, 1.2, 1.8 'Mund„CIRCLE (160, 94), 40, 0, 1.2, 1.8„FOR i = 147 TO 177„  LINE (i, 9)-(i - 2, 32), i - 130 'Hut„NEXT„LINE (135, 32)-(184, 34), 30„FOR x = 16 TO 1 STEP -1 'Nase„  RenderCircle 142 + x, 59 - x / 2.5, x \ 4, 128 - x * 2, 1„NEXT„„SLEEP 'Pause„„'SCHMELZEFFEKT:„FOR i = 1 TO 4000 „  x = RND * 271„  y = RND * 150„  GET (x, y)-(x + 48, y + 48), melt„  PUT (x, y + 1), melt, PSET„NEXT i„„RenderCircle 160, 100, 60, 128, 1 'Sonne„RenderCircle 140, 80, 7, 55, 1 'Augen„RenderCircle 180, 80, 7, 55, 1„CIRCLE (160, 80), 50, 60, 4, 5.5 'Mund„CIRCLE (160, 88), 50, 60, 3.6, 5.8, 1.3„„SLEEP 'Pause„„SUB RenderCircle (x, y, r, colstart, a!)„  FOR i = r TO 0 STEP -1„    CIRCLE (x, y), i, (colstart + i), , , a!„    PAINT (x, y), (colstart + i)„  NEXT„END SUB„„SUB SetRGB (Nr, r, g, b)„  OUT &H3C8, Nr„  OUT &H3C9, r„  OUT &H3C9, g„  OUT &H3C9, b„END SUB„Mathew Robertson               BOUNCING WOODEN BALL           FidoNet QUIK_BAS Echo          10-21-96 (18:29)       QB, QBasic, PDS        61   4350     BOUNCE.BAS  'Here is a little graphics program I wipped up.  It is a simple bouncing ball.„'But the graphics are alot better then the plain old circle that most normaly„'is used.  I used a raytraced wooden ball instead.  Just had to add a twist „'to it.„„DEFINT A-Z:DIM SHARED K,S,B&,Z&:V1 'Created by PostIt! 7.3b„SUB V1:OPEN "O",1,"BOUNCE1.ZIP",4^6:Z&=2820:?STRING$(50,177);„U"%up()%9%'%d-%e)%rFI/+oFJ)7%%E-%%%0%%%%gt%zshj%VSgfCxdz,,B[[9hL6Ux/?Kj40LJ„U"(1hj,aR)EU'n/gK_&YE3fjW)TfX0*aa1Z187&c+*hKkVfR#heCDHa^pCBYrjV3u3=Ykt>Y;$V„U":e>)bP>V/.qk;:&B?Nq+7F(SVj\>?[cCtZEo=VKb+IC>DDegVOACbkXLF?TE#1TZhhuxa7D3*„U"+qba^IU'h[&HF?O[TvXuY-Hq-geFAvP9#JsY;C*q*Fs8jnV.*qST7>45?Gb296\/;5YpqJU%L„U"O7n2l,8Fm^'BK+Uk5J.)ZiaV0D_CN)kpOrvS'R(SH6R&39i.VZ$+g5:F8n&sa^1N*]1iejbba„U"_bl57&JjPLW1jFX6slFOBV'D+BS:-y/Q9(5lSkD(c898*;_yRUc:E-/sY3PPoFk2rPRTUeLqT„U"6<ZEb2vM6DEZ4>&ld<mUv[5<%V\OKc7GJNa+lmZ#Lj;^4,V_KkR?ee>#\TdZpCQ-^#]FUk^E4„U"FLW9hwIDd/o)EA'7mSY49$/n-'<M.m50_LkjcH9QsUUJ:0/qYF\;m\V2u(*UZldEo*o[H+D3B„U"pT=I+W+#76W2Vn<w825>(Wcu?H4]aC_,?/iwncfM&KXD6RrJpwTVOlQ3X&PMJ;1nCmqBylv/G„U".VoH_/SlOC6J=8zMB*E5gXX_BwueP]U9+D+BS3ivSw:nCi\JSlJ[X%ip6P&j]oM*lUXw+h;Qy„U"]:4#*RZG(O7*VP'JMiL$jkpe>/hv?ff,k%6f+7([/#jjCnqE]+I1JI:Gu-^aSJg-vob;rZHLK„U"wc[MpxSq2aqC*ix^U;D74L;SsoW][mBWn6[SS8dW7?dzn2*ct8n\ROr0Nph8d*6t^umr%hM?_„U";xuS1A:20n*^Ct*=-]zmQjEP#?FpK^'_.*,wZpgC+\wgBM,NSb&GA]<MWOfA4(ng4mFtV6,pZ„U"oV2e8Ap=g/vKmW8*nBE3C9*<KuM^;*:AJvSBBCBpwY,))eY;\#;%sE$k,*+il+V/wxNqnRXjZ„U"S7I4kX-x;s]8Ke#1F)?QH:>;:hi<Gm()b(cw)_IXJ2vQOiN[ox_..U>UUJINs9(WVDEQ[WCBq„U"q1f-Z7Gp*;17kHF3of;D%z[,Z8X7^]5i&In2h(io:fq1Smt2,tfC/eNnt2D)6q&'o3Ji1pEdl„U"hA%zo_I(X&[VCZiKFrQjhk*_L=tmv^<7Od;ml)*gm$Bl#Ov=C##,[Lz>Vn2%p87%SX&_Kzqr.„U"KcJ,cI*%rI#*db.p*H*__f/k#H*zKAtEd%G_8v?:1?r33Y*LLjA#6hC%Y#riaj#B\GVYOW<YT„U"Bhmx_t>uVUC-$s-[p#^,RFX7tfJbl'6R3D_vOsp:z$qjJ>(dS?C4m/8[Q?L$('q<up%()9%%'„U"%-%)GdrF.ny$\'H'%%&M7%%%.%%%&&tti%VSufLq4d*-'TU1F*x0CL4-QHsi6O8*+);HTBBY-„U"gEkg=jIrgdu7OXXLdf,&WVbWxr?c'DK-l.2gB2m\OiH+mWPH8,Z$1W=lHdEEsb_rECUHI30#8„U"5&Kk47R]QnfSgG^tKE$hA3#dx3a>.kQOPN/)_c6N4k5=bmI\k+>C6fUa3CWnnbCA*C3R_2k+O„U"rp6zgqA;NLE8$EV_H$#ms_0?KtT(*TB3k=G\bJHt$$6]An$C3HXB,hn*JA7Ix\H=j2KQ-1jUB„U"^HhqB3WV#T3k=2Q%d$ckd$$],RbFkK*:zQe$qDaqo(,8,nmT>Gv<5khr<_%/E<dAOI*tAs,/H„U"T64JqjmZH\lDfgp_L2LsA+=L,hFIq_D2Ug,HNLokq'lbAJIt[snfomBdA5;bRqGH<Rd*TnElh„U"g;3>naE^lcVL_pjH(<^n\*zfoXX<2MVW.dfO3k;[TH;xR^9_/KXesxs'VE+G8_)[EM?=?=M?=„U"?=k?g?gk?g?gk?g?gk?g?gk?g?g>?/tK%WG6J7GLCi)Tw7ZaGS#fG\okJtr6JW;7>-\TS#f\W„U"oq67jTSZo5q67TWSZoqN67n7Mn7n7Mn7n7Mn7n7Mn7n7qn7h-bFS$fGlosJtv6LWY8h-FWS6S„U"6WS6S6WS6S6WS6S6WS6S69S<S<9S<S<9S<S<9S<S<9S<S<WS&S&WS&S&rS&S,5x?w?Vz9Eyr*„U"z?)4?D9qtz*&?T1?d9rEz*(-?9?0n:q%*?*?A?pP:E%u*,?I.?p:qZ&*.1Y:>OY0&:*Pi/%;&„U"rQ)*.q1:>OGY&:*OP/%;l&Q)*i.1:><OY&:S*P/%Y;&Q)Q*.1:l>OY&^:*P/q%;&QY)*.1Y:>„U"OY0&:*Pi/%;&rQ)*.q1:>OGY&:*OP/%;l&Q)*i.1:><OY&:S*P/%Y;&Q)>p.x%%up()%9%'%R„U"-%4d.rFYH:$vU'[%%,s%%%.%.%%&t%tiVS\%lfffSpz\[[%eZ+5'D'.8)Q-\Sf0B.0.3i8R[*„U".p[g:EuuBwGCgp\F]Lw=[a1V9G7<mo,U$IwH6svC_iv#IDa4u0v6wlMzY>fYV=Ebp0-v-VV3t„U"+u7tKeape-dts=56lF&sWRJMcYM>*mbw4PRl0)_vA#LN-\TMl#tD+*PEM^f$W<TK7q2(qQtX:„U"eMg8\G1mFcEbmwiPe&[*a5m$ME(eo(BdqS05)0<RUN<tCS*bv]Bm$0xMI:U+AAmNdP4TfA8*C„U"bDs&bnl\MgM&ceiZsMe8,uZTfwLT4docNbFs.DvsBk_DH3drm<XpSJNDmgCzfm>JRhhpmx.*X„U"^#Y,7-NVDWT-C%-CXTUr6MS(m;<&EUU'dBMgf<,[DJbo,k/A'Wv-ozBSso:V\Z2SgaeDTl0t>„U"L/Cp*CZbp3.0PnLZUSI$KXADqkX*'Hx^qgBv>]58okxW)\qBkD5l'lgC5kLihYsXDMOrT,sM%„U"IWRlt]lHfdWU$n3_Kh?9lP-qxsOo_9LS2NEB#pNE0k+l/mJVN(<3vB-W[)Wdkp#qiZHRt\JJh„U"kD8BTB-wo<$.#F?Pk,FpRi\s/YJs6-tN-.15Cc:2YK.G(1<BCVN17UeSM,sl2T_lYoHj)n,.<„U"m3ZglT9lO8VoQ(SuHQ7:),u..ode^UiHNX]MVTotduI6g-ck%cI.r<?.6ub.gQox$Oh2r<)Fq„U"scCm3OgzziO7tQf8dIwTjvN\Ba_Nn;^ocdLd)EkOD6#M_(&rT\XsmR88N^js/GXWWbF'il/bi„U"DJBMMEA;^dNulw:25ycy6&q6rxqBN\P0g4LyqDL[ws5p(a%ld%%%%%%%%%%%%%%%%%%%%%%%%„U"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%[%%%w„U"-pw'u%p&'9%%9%'#%-%e')rFI7/oFJ[)%%E%-%%0%%%%%%%%%&%%E%%%%%%%%%gtz%shjV%Sg„U"fx%up&'%9%9%%'%-%)GdrF.ny$\'H'%%&M7%%%.%%%%%%%%%&%E%%%%s).%%&t%tiVS%ufqu%„U"p&'9%%9%'[%-%4AdrFYdH$vU%'%%,'s%%.%%%%%%%%%&%%E%%%%i,%(%&tt#iVS%%lfup%*+%„U"%%%%(%.(%v%%%%l/%%%%%„END SUB„CLOSE:IF S=90AND B&=Z&THEN?" :) Ok!"ELSE?" :( Bad!„SUB U(A$):FOR A=1TO LEN(A$):C=ASC(MID$(A$,A))-37:IF C<0THEN C=91+C*32„IF K<4THEN K=C+243ELSE?#1,CHR$(C+(K MOD 3)*86);:K=K\3:B&=B&+1„S=(S+C)AND 255:NEXT:LOCATE,1:?STRING$(B&*50\Z&,219);:END SUB„