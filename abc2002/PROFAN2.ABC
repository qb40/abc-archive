Rohit Vishal Kumar             99 Bottles of Beer             rohitvk@lycos.com              03-15-02 (  :  )       PROFAN2                97   3193     99btls.bas  'PROFAN2„'--------------------------------------------------------------------„'SOURCE CODE TITLE:  99 Bottles of beer on the wall„'--------------------------------------------------------------------„'AUTHOR NAME:        Rohit Vishal Kumar„'--------------------------------------------------------------------„'WEB ADDRESS:        http://www.angelfire.com/nb/neeraja-rohit/„'--------------------------------------------------------------------„'EMAIL ADDRESS:      rohitvk"AT"lycos"DOT"com„'--------------------------------------------------------------------„'SOURCE DATED:       26 January 2002„'--------------------------------------------------------------------„'SOURCE STATUS:      Public Domain„'--------------------------------------------------------------------„'DESCRIPTION:        This source code was developed as my first„'                    learning attempt at ProFan 3.3.„'                    Use it to learn ProFan 3.3.„'                    You might start liking the language :-)„'--------------------------------------------------------------------„'REQUIREMENTS:       Nothing Specific„'--------------------------------------------------------------------„'CREDITS:            Developers of Profan - It certainly makes prog-„'                    ramming a lot of fun„'--------------------------------------------------------------------„„' Defining the counter to be used in the Program„DECLARE X%, Y%„„' Creating the window„WINDOW 20,20 - 400,400„„' Assigning the Title of the Windows„WINDOWTITLE "99 Bottles of Beer on the Wall"„„' Printing the Welcome Message on the Screen„PRINT "Welcome to 99 Bottles of Beer..."„PRINT„PRINT "Programmed By - "„PRINT "Rohit Vishal Kumar"„PRINT "Flat No: B-21/11"„PRINT "E.C.T.P. Phase - IV, Type - B"„PRINT "Calcutta - India"„PRINT "Pin : 700 107"„PRINT "Phone : (91-33) 443-5858"„PRINT "Email: rohitvk@hotmail.com"„PRINT„PRINT "Please Press Any Key to Run the Program..."„„'Wait for the User to Press Any Key„WAITKEY„„' Initialize the variables to be used„LET X% = 1„LET Y% = 99„„' Use the While Loop - While X is less than 101„' Note: 101 is used to make the counter go down to zero and print „' going to store message„„WHILE @LT(X%, 101)„„  ' Write the Lyrics„  PRINT Y%," bottles of beer on the wall"„  PRINT Y%," bottles of beer..."„  PRINT "Take one down and pass it around..."„„  ' Subtract X from 100„  LET Y%=@SUB(100,X%)„„  ' The IF Loop - 1. If Y = 1 then say bottle instead of bottles„  ' The IF Loop - 2. If Y = 0 then go to the store„  ' The IF Loop - 3. ELSE Print the message„  IF @EQU(Y%,1)„    PRINT Y%," beer bottle on the wall."„  ELSEIF @EQU(Y%,0)„    PRINT„    PRINT "Now there are none....."„    PRINT "I need some more ......."„    PRINT "I am going to the store ... hic :-)"„  ELSE„    PRINT Y%," beer bottles on the wall."„  ENDIF„  PRINT„„  'Increment X by One„  LET X%=@ADD(X%,1)„WEND„„'Wait for a key press from the user„WAITKEY„„'Show the message box with Okay Button„MESSAGEBOX "Thank you very much for Drinking Along with Me...",\„           "Shoot...Hic...Shut Program",64„„'Finally End the Program„END„Roy Scott                      Quick Sort For Profan2         RoyScott@RoyScott.net          03-16-02 (  :  )       PROFAN2                100  3804     Qsort2.inc  '--------------------------------------------------------------------„'SOURCE CODE TITLE:  Quicksort Procedure for Profan2 3.3„'--------------------------------------------------------------------„'AUTHOR NAMES:       Daniel Jansen & Roy Scott„'--------------------------------------------------------------------„'WEB ADDRESS:        http://www.royscott.net/„'--------------------------------------------------------------------„'EMAIL ADDRESS:      royscott"AT"royscott"DOT"net„'--------------------------------------------------------------------„'SOURCE DATED:       18 February 2002„'--------------------------------------------------------------------„'SOURCE STATUS:      Public Domain„'--------------------------------------------------------------------„'DESCRIPTION:        A standard Quicksort routine written in Profan2„'--------------------------------------------------------------------„'REQUIREMENTS:       Profan2 Version 3.3 US English„'-------------------------------------------------------------------- „'CREDITS:            The inventor of the original Quicksort Algorithm„'                                  C. A. R. Hoare„'--------------------------------------------------------------------„proc setstring„parameters array$,position%,value$,separator$„declare new$,count%„let count%=1„while @and(@lt(count%,position%),@neq$(@substr$(array$,count%,separator$),""))„ let new$=@add$(new$,@substr$(array$,count%,separator$))„ let new$=@add$(new$,",")„ inc count%„wend„if @lt(count%,position%)„ while @lt(count%,position%)„   let new$=@add$(new$,"0")„   let new$=@add$(new$,",")„   inc count%„ wend„endif„let new$=@add$(new$,value$)„let new$=@add$(new$,",")„inc count%„let new$=@add$(new$,@substr$(array$,count%,separator$))„return new$„endproc„„proc qsort2„parameters first%,last%„declare stackpointer%,i%,j%,left%,right%,pivot$,temp$,leftstack$,rightstack$„let stackpointer% = 1                                   'initialize stackpointer%„let leftstack$=@str$(@int(first%))                      'first element in left array partition„let rightstack$=@str$(@int(last%))                      'first element in right array partition)„300:„let left% = @int(@val(@substr$(leftstack$,stackpointer%,",")))    'get starting point„let right% = @int(@val(@substr$(rightstack$,stackpointer%,",")))  'get ending point„dec stackpointer%                                                 'set stackpointer% to 0 ???„ifnot @lt(left%,right%)                                           'see if this partition is sorted„  if @gt(stackpointer%,0)„    goto "300"„  else„    goto "570"„  endif„endif„let i% = left%                              'partition the array around the pivot„let j% = @add(right%,1)„let pivot$ = @list$(left%)                  'set up for List$--can be adapted to any of the List arrays„430:„dec j%„if @gt$(@list$(j%),pivot$)„  goto "430"„endif„440:„inc i%„if @and(@lt$(@list$(i%),pivot$),@lt(i%,right%))„  goto "440"„endif„if @lt(i%,j%)„  let temp$ = @list$(i%)„  list$ i% = @list$(j%)„  list$ j% = temp$„  goto "430"„endif„let temp$ = @list$(left%)„list$ left% = @list$(j%)„list$ j% = temp$„inc stackpointer%                                   'set up stack for subpartitions„let temp$=@str$(@int(@add(j%,1)))„setstring leftstack$,stackpointer%,temp$,","„let leftstack$=@$(0)„let temp$=@str$(@int(right%))„setstring rightstack$,stackpointer%,temp$,","„let rightstack$=@$(0)„inc stackpointer%„let temp$=@str$(@int(left%))„setstring leftstack$,stackpointer%,temp$,","„let leftstack$=@$(0)„let temp$=@str$(@int(@sub(j%,1)))„setstring rightstack$,stackpointer%,temp$,","„let rightstack$=@$(0)„'print leftstack$;"     |     ";rightstack$         'for testing only„goto "300"„570:„endproc„